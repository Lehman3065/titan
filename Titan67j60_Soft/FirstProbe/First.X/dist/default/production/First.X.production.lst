

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Nov 07 17:50:23 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F67J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133                           	dabs	1,0xE7E,2,_errataTemp
   134  0000                     
   135                           ; Version 1.44
   136                           ; Generated 14/09/2017 GMT
   137                           ; 
   138                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18F67J60 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     
   170                           	psect	idataCOMRAM
   171  0145E8                     __pidataCOMRAM:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _lfsr_value
   175  0145E8  40                 	db	64
   176                           
   177                           ;initializer for _xor_mask
   178  0145E9  41                 	db	65
   179                           
   180                           	psect	idataBANK2
   181  013AA0                     __pidataBANK2:
   182                           	opt stack 0
   183                           
   184                           ;initializer for DHCP_Handler@F840
   185  013AA0  0000               	dw	0
   186  013AA2  0000               	dw	0
   187  013AA4  0000               	dw	0
   188  013AA6  0000               	dw	0
   189  013AA8  0000               	dw	0
   190  013AAA  0000               	dw	0
   191  013AAC  0000               	dw	0
   192  013AAE  0000               	dw	0
   193  013AB0  0000               	dw	0
   194  013AB2  0000               	dw	0
   195  013AB4  0000               	dw	0
   196  013AB6  0000               	dw	0
   197  013AB8  0000               	dw	0
   198  013ABA  0000               	dw	0
   199  013ABC  0000               	dw	0
   200  013ABE  0000               	dw	0
   201  013AC0  0000               	dw	0
   202  013AC2  0000               	dw	0
   203  013AC4  0E10               	dw	3600
   204  013AC6  0000               	dw	0
   205  013AC8  0E10               	dw	3600
   206  013ACA  0000               	dw	0
   207  013ACC  0000               	dw	0
   208  013ACE  0000               	dw	0
   209                           
   210                           ;initializer for _dhcpData
   211  013AD0  0000               	dw	0
   212  013AD2  0000               	dw	0
   213  013AD4  0000               	dw	0
   214  013AD6  0000               	dw	0
   215  013AD8  0000               	dw	0
   216  013ADA  0000               	dw	0
   217  013ADC  0000               	dw	0
   218  013ADE  0000               	dw	0
   219  013AE0  0000               	dw	0
   220  013AE2  0000               	dw	0
   221  013AE4  0000               	dw	0
   222  013AE6  0000               	dw	0
   223  013AE8  0000               	dw	0
   224  013AEA  0000               	dw	0
   225  013AEC  0000               	dw	0
   226  013AEE  0000               	dw	0
   227  013AF0  0000               	dw	0
   228  013AF2  0000               	dw	0
   229  013AF4  000A               	dw	10
   230  013AF6  0000               	dw	0
   231  013AF8  0E10               	dw	3600
   232  013AFA  0000               	dw	0
   233  013AFC  0000               	dw	0
   234  013AFE  0000               	dw	0
   235                           
   236                           	psect	mediumconst
   237  00FEDE                     __pmediumconst:
   238                           	opt stack 0
   239  00FEDE  00                 	db	0
   240  00FEDF                     _dpowers:
   241                           	opt stack 0
   242  00FEDF  0001               	dw	1
   243  00FEE1  0000               	dw	0
   244  00FEE3  000A               	dw	10
   245  00FEE5  0000               	dw	0
   246  00FEE7  0064               	dw	100
   247  00FEE9  0000               	dw	0
   248  00FEEB  03E8               	dw	1000
   249  00FEED  0000               	dw	0
   250  00FEEF  2710               	dw	10000
   251  00FEF1  0000               	dw	0
   252  00FEF3  86A0               	dw	34464
   253  00FEF5  0001               	dw	1
   254  00FEF7  4240               	dw	16960
   255  00FEF9  000F               	dw	15
   256  00FEFB  9680               	dw	38528
   257  00FEFD  0098               	dw	152
   258  00FEFF  E100               	dw	57600
   259  00FF01  05F5               	dw	1525
   260  00FF03  CA00               	dw	51712
   261  00FF05  3B9A               	dw	15258
   262  00FF07                     __end_of_dpowers:
   263                           	opt stack 0
   264  00FF07                     _hexpowers:
   265                           	opt stack 0
   266  00FF07  0001               	dw	1
   267  00FF09  0000               	dw	0
   268  00FF0B  0010               	dw	16
   269  00FF0D  0000               	dw	0
   270  00FF0F  0100               	dw	256
   271  00FF11  0000               	dw	0
   272  00FF13  1000               	dw	4096
   273  00FF15  0000               	dw	0
   274  00FF17  0000               	dw	0
   275  00FF19  0001               	dw	1
   276  00FF1B  0000               	dw	0
   277  00FF1D  0010               	dw	16
   278  00FF1F  0000               	dw	0
   279  00FF21  0100               	dw	256
   280  00FF23  0000               	dw	0
   281  00FF25  1000               	dw	4096
   282  00FF27                     __end_of_hexpowers:
   283                           	opt stack 0
   284  00FF27                     _xorSequences:
   285                           	opt stack 0
   286  00FF27  41                 	db	65
   287  00FF28  44                 	db	68
   288  00FF29  47                 	db	71
   289  00FF2A  48                 	db	72
   290  00FF2B  4E                 	db	78
   291  00FF2C  53                 	db	83
   292  00FF2D  55                 	db	85
   293  00FF2E  5C                 	db	92
   294  00FF2F  5F                 	db	95
   295  00FF30  60                 	db	96
   296  00FF31  65                 	db	101
   297  00FF32  69                 	db	105
   298  00FF33  6A                 	db	106
   299  00FF34  72                 	db	114
   300  00FF35  77                 	db	119
   301  00FF36  78                 	db	120
   302  00FF37  7B                 	db	123
   303  00FF38  7E                 	db	126
   304  00FF39                     __end_of_xorSequences:
   305                           	opt stack 0
   306  00FF39                     _dnsXidValue:
   307                           	opt stack 0
   308  00FF39  1234               	dw	4660
   309  00FF3B                     __end_of_dnsXidValue:
   310                           	opt stack 0
   311  00FF3B                     _dhcpName:
   312                           	opt stack 0
   313  00FF3B  54                 	db	84
   314  00FF3C  69                 	db	105
   315  00FF3D  74                 	db	116
   316  00FF3E  61                 	db	97
   317  00FF3F  6E                 	db	110
   318  00FF40  20                 	db	32
   319  00FF41  42                 	db	66
   320  00FF42  6F                 	db	111
   321  00FF43  69                 	db	105
   322  00FF44  6C                 	db	108
   323  00FF45  65                 	db	101
   324  00FF46  72                 	db	114
   325  00FF47  00                 	db	0
   326  00FF48                     __end_of_dhcpName:
   327                           	opt stack 0
   328  00FF48                     _UDP_CallBackTable:
   329                           	opt stack 0
   330  00FF48  0035               	dw	53
   331  00FF4A  1E                 	db	low _DNS_Handler
   332  00FF4B  19                 	db	high _DNS_Handler
   333  00FF4C  01                 	db	low (_DNS_Handler shr (0+16))
   334  00FF4D  0044               	dw	68
   335  00FF4F  52                 	db	low _DHCP_Handler
   336  00FF50  11                 	db	high _DHCP_Handler
   337  00FF51  01                 	db	low (_DHCP_Handler shr (0+16))
   338  00FF52                     __end_of_UDP_CallBackTable:
   339                           	opt stack 0
   340  00FF52                     _macAddress:
   341                           	opt stack 0
   342  00FF52  02                 	db	2
   343  00FF53  00                 	db	0
   344  00FF54  00                 	db	0
   345  00FF55  00                 	db	0
   346  00FF56  00                 	db	0
   347  00FF57  01                 	db	1
   348  00FF58                     __end_of_macAddress:
   349                           	opt stack 0
   350  00FF58                     _broadcastMAC:
   351                           	opt stack 0
   352  00FF58  FF                 	db	255
   353  00FF59  FF                 	db	255
   354  00FF5A  FF                 	db	255
   355  00FF5B  FF                 	db	255
   356  00FF5C  FF                 	db	255
   357  00FF5D  FF                 	db	255
   358  00FF5E                     __end_of_broadcastMAC:
   359                           	opt stack 0
   360  00FF5E                     STR_1:
   361  00FF5E  4D                 	db	77	;'M'
   362  00FF5F  41                 	db	65	;'A'
   363  00FF60  43                 	db	67	;'C'
   364  00FF61  20                 	db	32
   365  00FF62  41                 	db	65	;'A'
   366  00FF63  64                 	db	100	;'d'
   367  00FF64  64                 	db	100	;'d'
   368  00FF65  72                 	db	114	;'r'
   369  00FF66  65                 	db	101	;'e'
   370  00FF67  73                 	db	115	;'s'
   371  00FF68  73                 	db	115	;'s'
   372  00FF69  20                 	db	32
   373  00FF6A  66                 	db	102	;'f'
   374  00FF6B  72                 	db	114	;'r'
   375  00FF6C  6F                 	db	111	;'o'
   376  00FF6D  6D                 	db	109	;'m'
   377  00FF6E  20                 	db	32
   378  00FF6F  45                 	db	69	;'E'
   379  00FF70  45                 	db	69	;'E'
   380  00FF71  50                 	db	80	;'P'
   381  00FF72  52                 	db	82	;'R'
   382  00FF73  4F                 	db	79	;'O'
   383  00FF74  4D                 	db	77	;'M'
   384  00FF75  3A                 	db	58	;':'
   385  00FF76  20                 	db	32
   386  00FF77  25                 	db	37
   387  00FF78  2E                 	db	46
   388  00FF79  32                 	db	50	;'2'
   389  00FF7A  58                 	db	88	;'X'
   390  00FF7B  3A                 	db	58	;':'
   391  00FF7C  25                 	db	37
   392  00FF7D  2E                 	db	46
   393  00FF7E  32                 	db	50	;'2'
   394  00FF7F  58                 	db	88	;'X'
   395  00FF80  3A                 	db	58	;':'
   396  00FF81  25                 	db	37
   397  00FF82  2E                 	db	46
   398  00FF83  32                 	db	50	;'2'
   399  00FF84  58                 	db	88	;'X'
   400  00FF85  3A                 	db	58	;':'
   401  00FF86  25                 	db	37
   402  00FF87  2E                 	db	46
   403  00FF88  32                 	db	50	;'2'
   404  00FF89  58                 	db	88	;'X'
   405  00FF8A  3A                 	db	58	;':'
   406  00FF8B  25                 	db	37
   407  00FF8C  2E                 	db	46
   408  00FF8D  32                 	db	50	;'2'
   409  00FF8E  58                 	db	88	;'X'
   410  00FF8F  3A                 	db	58	;':'
   411  00FF90  25                 	db	37
   412  00FF91  2E                 	db	46
   413  00FF92  32                 	db	50	;'2'
   414  00FF93  58                 	db	88	;'X'
   415  00FF94  20                 	db	32
   416  00FF95  0D                 	db	13
   417  00FF96  0A                 	db	10
   418  00FF97  00                 	db	0
   419  00FF98  0D                 	db	13
   420  00FF99  0A                 	db	10
   421  00FF9A  0D                 	db	13
   422  00FF9B  0A                 	db	10
   423  00FF9C  53                 	db	83	;'S'
   424  00FF9D  74                 	db	116	;'t'
   425  00FF9E  61                 	db	97	;'a'
   426  00FF9F  72                 	db	114	;'r'
   427  00FFA0  74                 	db	116	;'t'
   428  00FFA1  69                 	db	105	;'i'
   429  00FFA2  6E                 	db	110	;'n'
   430  00FFA3  67                 	db	103	;'g'
   431  00FFA4  20                 	db	32
   432  00FFA5  53                 	db	83	;'S'
   433  00FFA6  79                 	db	121	;'y'
   434  00FFA7  73                 	db	115	;'s'
   435  00FFA8  6C                 	db	108	;'l'
   436  00FFA9  6F                 	db	111	;'o'
   437  00FFAA  67                 	db	103	;'g'
   438  00FFAB  20                 	db	32
   439  00FFAC  61                 	db	97	;'a'
   440  00FFAD  74                 	db	116	;'t'
   441  00FFAE  20                 	db	32
   442  00FFAF  25                 	db	37
   443  00FFB0  6C                 	db	108	;'l'
   444  00FFB1  75                 	db	117	;'u'
   445  00FFB2  0D                 	db	13
   446  00FFB3  0A                 	db	10
   447  00FFB4  00                 	db	0
   448  00FFB5  44                 	db	68	;'D'
   449  00FFB6  4E                 	db	78	;'N'
   450  00FFB7  53                 	db	83	;'S'
   451  00FFB8  20                 	db	32
   452  00FFB9  46                 	db	70	;'F'
   453  00FFBA  6F                 	db	111	;'o'
   454  00FFBB  75                 	db	117	;'u'
   455  00FFBC  6E                 	db	110	;'n'
   456  00FFBD  64                 	db	100	;'d'
   457  00FFBE  20                 	db	32
   458  00FFBF  25                 	db	37
   459  00FFC0  73                 	db	115	;'s'
   460  00FFC1  20                 	db	32
   461  00FFC2  69                 	db	105	;'i'
   462  00FFC3  6E                 	db	110	;'n'
   463  00FFC4  20                 	db	32
   464  00FFC5  63                 	db	99	;'c'
   465  00FFC6  61                 	db	97	;'a'
   466  00FFC7  63                 	db	99	;'c'
   467  00FFC8  68                 	db	104	;'h'
   468  00FFC9  65                 	db	101	;'e'
   469  00FFCA  20                 	db	32
   470  00FFCB  25                 	db	37
   471  00FFCC  75                 	db	117	;'u'
   472  00FFCD  6C                 	db	108	;'l'
   473  00FFCE  00                 	db	0
   474  00FFCF                     STR_9:
   475  00FFCF  30                 	db	48	;'0'
   476  00FFD0  31                 	db	49	;'1'
   477  00FFD1  32                 	db	50	;'2'
   478  00FFD2  33                 	db	51	;'3'
   479  00FFD3  34                 	db	52	;'4'
   480  00FFD4  35                 	db	53	;'5'
   481  00FFD5  36                 	db	54	;'6'
   482  00FFD6  37                 	db	55	;'7'
   483  00FFD7  38                 	db	56	;'8'
   484  00FFD8  39                 	db	57	;'9'
   485  00FFD9  41                 	db	65	;'A'
   486  00FFDA  42                 	db	66	;'B'
   487  00FFDB  43                 	db	67	;'C'
   488  00FFDC  44                 	db	68	;'D'
   489  00FFDD  45                 	db	69	;'E'
   490  00FFDE  46                 	db	70	;'F'
   491  00FFDF  00                 	db	0
   492  00FFE0  25                 	db	37
   493  00FFE1  64                 	db	100	;'d'
   494  00FFE2  2E                 	db	46
   495  00FFE3  25                 	db	37
   496  00FFE4  64                 	db	100	;'d'
   497  00FFE5  2E                 	db	46
   498  00FFE6  25                 	db	37
   499  00FFE7  64                 	db	100	;'d'
   500  00FFE8  2E                 	db	46
   501  00FFE9  25                 	db	37
   502  00FFEA  64                 	db	100	;'d'
   503  00FFEB  00                 	db	0
   504  00FFEC  25                 	db	37
   505  00FFED  75                 	db	117	;'u'
   506  00FFEE  20                 	db	32
   507  00FFEF  3A                 	db	58	;':'
   508  00FFF0  20                 	db	32
   509  00FFF1  25                 	db	37
   510  00FFF2  73                 	db	115	;'s'
   511  00FFF3  0D                 	db	13
   512  00FFF4  0A                 	db	10
   513  00FFF5  00                 	db	0
   514  00FFF6                     STR_8:
   515  00FFF6  28                 	db	40
   516  00FFF7  6E                 	db	110	;'n'
   517  00FFF8  75                 	db	117	;'u'
   518  00FFF9  6C                 	db	108	;'l'
   519  00FFFA  6C                 	db	108	;'l'
   520  00FFFB  29                 	db	41
   521  00FFFC  00                 	db	0
   522  00FFFD                     STR_2:
   523  00FFFD  2E                 	db	46
   524  00FFFE  00                 	db	0
   525  0000                     
   526                           ; #config settings
   527  00FFFF  00                 	db	0	; dummy byte at the end
   528  0000                     
   529                           	psect	nvCOMRAM
   530  000047                     __pnvCOMRAM:
   531                           	opt stack 0
   532  000047                     _timer0ReloadVal:
   533                           	opt stack 0
   534  000047                     	ds	2
   535  000049                     _timer1ReloadVal:
   536                           	opt stack 0
   537  000049                     	ds	2
   538                           
   539                           	psect	nvBANK2
   540  0002F3                     __pnvBANK2:
   541                           	opt stack 0
   542  0002F3                     _TMR0_InterruptHandler:
   543                           	opt stack 0
   544  0002F3                     	ds	3
   545  0002F6                     _TMR1_InterruptHandler:
   546                           	opt stack 0
   547  0002F6                     	ds	3
   548  0000                     _EDMAND	set	3826
   549  0000                     _EDMAST	set	3824
   550  0000                     _EDMADST	set	3828
   551  0000                     _MIRD	set	3768
   552  0000                     _MIWR	set	3766
   553  0000                     _MAMXFL	set	3754
   554  0000                     _ERXRDPT	set	3820
   555  0000                     _EWRPT	set	3810
   556  0000                     _ERXND	set	3818
   557  0000                     _ERXST	set	3816
   558  0000                     _ETXND	set	3814
   559  0000                     _ETXST	set	3812
   560  0000                     _MAIPG	set	3750
   561  0000                     _MICMDbits	set	3762
   562  0000                     _MICMD	set	3762
   563  0000                     _MIREGADR	set	3764
   564  0000                     _MISTATbits	set	3722
   565  0000                     _EIEbits	set	3835
   566  0000                     _EIE	set	3835
   567  0000                     _ERXFCON	set	3800
   568  0000                     _MAADR6	set	3713
   569  0000                     _MAADR5	set	3712
   570  0000                     _MAADR4	set	3715
   571  0000                     _MAADR3	set	3714
   572  0000                     _MAADR2	set	3717
   573  0000                     _MAADR1	set	3716
   574  0000                     _EFLOCON	set	3735
   575  0000                     _MABBIPG	set	3748
   576  0000                     _MACON4	set	3747
   577  0000                     _MACON3	set	3746
   578  0000                     _MACON1	set	3744
   579  0000                     _ECON2	set	3838
   580  0000                     _ESTATbits	set	3837
   581  0000                     _ERDPT	set	3962
   582  0000                     _TMR1	set	4046
   583  0000                     _SSP1STATbits	set	4039
   584  0000                     _SSP1BUF	set	4041
   585  0000                     _SSP1CON1bits	set	4038
   586  0000                     _SSP1ADD	set	4040
   587  0000                     _SSP1CON1	set	4038
   588  0000                     _SSP1STAT	set	4039
   589  0000                     _INTCON	set	4082
   590  0000                     _PIR2bits	set	4001
   591  0000                     _EIRbits	set	3936
   592  0000                     _ECON1bits	set	4050
   593  0000                     _ECON1	set	4050
   594  0000                     _CCPR1H	set	4031
   595  0000                     _CCPR1L	set	4030
   596  0000                     _ECCP1AS	set	4022
   597  0000                     _ECCP1DEL	set	3961
   598  0000                     _CCP1CON	set	4029
   599  0000                     _T0CONbits	set	4053
   600  0000                     _T0CON	set	4053
   601  0000                     _TMR0L	set	4054
   602  0000                     _TMR0H	set	4055
   603  0000                     _ADCON0bits	set	4034
   604  0000                     _ADRESH	set	4036
   605  0000                     _ADRESL	set	4035
   606  0000                     _ADCON2	set	4032
   607  0000                     _ADCON1	set	4033
   608  0000                     _ADCON0	set	4034
   609  0000                     _ADCON1bits	set	4033
   610  0000                     _TRISD	set	3989
   611  0000                     _TRISC	set	3988
   612  0000                     _TRISB	set	3987
   613  0000                     _TRISG	set	3992
   614  0000                     _TRISA	set	3986
   615  0000                     _TRISF	set	3991
   616  0000                     _TRISE	set	3990
   617  0000                     _LATC	set	3979
   618  0000                     _LATG	set	3983
   619  0000                     _LATB	set	3978
   620  0000                     _LATF	set	3982
   621  0000                     _LATA	set	3977
   622  0000                     _LATD	set	3980
   623  0000                     _LATE	set	3981
   624  0000                     _T2CONbits	set	4042
   625  0000                     _T2CON	set	4042
   626  0000                     _TMR2	set	4044
   627  0000                     _PR2	set	4043
   628  0000                     _OSCTUNE	set	3995
   629  0000                     _OSCCON	set	4051
   630  0000                     _T1CONbits	set	4045
   631  0000                     _T1CON	set	4045
   632  0000                     _TMR1L	set	4046
   633  0000                     _TMR1H	set	4047
   634  0000                     _PIR1bits	set	3998
   635  0000                     _PIE1bits	set	3997
   636  0000                     _INTCONbits	set	4082
   637  0000                     _RCONbits	set	4048
   638  0000                     _GIE	set	32663
   639  0000                     _RXRST	set	32406
   640                           
   641                           	psect	cinit
   642  01395A                     __pcinit:
   643                           	opt stack 0
   644  01395A                     start_initialization:
   645                           	opt stack 0
   646  01395A                     __initialization:
   647                           	opt stack 0
   648                           
   649                           ; Initialize objects allocated to BANK2 (96 bytes)
   650                           ; load TBLPTR registers with __pidataBANK2
   651  01395A  0EA0               	movlw	low __pidataBANK2
   652  01395C  6EF6               	movwf	tblptrl,c
   653  01395E  0E3A               	movlw	high __pidataBANK2
   654  013960  6EF7               	movwf	tblptrh,c
   655  013962  0E01               	movlw	low (__pidataBANK2 shr (0+16))
   656  013964  6EF8               	movwf	tblptru,c
   657  013966  EE02  F07D         	lfsr	0,__pdataBANK2
   658  01396A  EE10 F060          	lfsr	1,96
   659  01396E                     copy_data0:
   660  01396E  0009               	tblrd		*+
   661  013970  CFF5 FFEE          	movff	tablat,postinc0
   662  013974  50E5               	movf	postdec1,w,c
   663  013976  50E1               	movf	fsr1l,w,c
   664  013978  E1FA               	bnz	copy_data0
   665                           
   666                           ; Initialize objects allocated to COMRAM (2 bytes)
   667                           ; load TBLPTR registers with __pidataCOMRAM
   668  01397A  0EE8               	movlw	low __pidataCOMRAM
   669  01397C  6EF6               	movwf	tblptrl,c
   670  01397E  0E45               	movlw	high __pidataCOMRAM
   671  013980  6EF7               	movwf	tblptrh,c
   672  013982  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   673  013984  6EF8               	movwf	tblptru,c
   674  013986  0009               	tblrd		*+	;fetch initializer
   675  013988  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   676  01398C  0009               	tblrd		*+	;fetch initializer
   677  01398E  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   678                           
   679                           ; Clear objects allocated to BANK4 (232 bytes)
   680  013992  EE04  F000         	lfsr	0,__pbssBANK4
   681  013996  0EE8               	movlw	232
   682  013998                     clear_0:
   683  013998  6AEE               	clrf	postinc0,c
   684  01399A  06E8               	decf	wreg,f,c
   685  01399C  E1FD               	bnz	clear_0
   686                           
   687                           ; Clear objects allocated to BANK3 (200 bytes)
   688  01399E  EE03  F000         	lfsr	0,__pbssBANK3
   689  0139A2  0EC8               	movlw	200
   690  0139A4                     clear_1:
   691  0139A4  6AEE               	clrf	postinc0,c
   692  0139A6  06E8               	decf	wreg,f,c
   693  0139A8  E1FD               	bnz	clear_1
   694                           
   695                           ; Clear objects allocated to BANK2 (125 bytes)
   696  0139AA  EE02  F000         	lfsr	0,__pbssBANK2
   697  0139AE  0E7D               	movlw	125
   698  0139B0                     clear_2:
   699  0139B0  6AEE               	clrf	postinc0,c
   700  0139B2  06E8               	decf	wreg,f,c
   701  0139B4  E1FD               	bnz	clear_2
   702                           
   703                           ; Clear objects allocated to COMRAM (11 bytes)
   704  0139B6  EE00  F03C         	lfsr	0,__pbssCOMRAM
   705  0139BA  0E0B               	movlw	11
   706  0139BC                     clear_3:
   707  0139BC  6AEE               	clrf	postinc0,c
   708  0139BE  06E8               	decf	wreg,f,c
   709  0139C0  E1FD               	bnz	clear_3
   710  0139C2                     end_of_initialization:
   711                           	opt stack 0
   712  0139C2                     __end_of__initialization:
   713                           	opt stack 0
   714  0139C2  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   715  0139C4  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   716  0139C6  0100               	movlb	0
   717  0139C8  EF87  F0A2         	goto	_main	;jump to C main() function
   718                           tblptru	equ	0xFF8
   719                           tblptrh	equ	0xFF7
   720                           tblptrl	equ	0xFF6
   721                           tablat	equ	0xFF5
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           postdec1	equ	0xFE5
   725                           fsr1l	equ	0xFE1
   726                           
   727                           	psect	bssCOMRAM
   728  00003C                     __pbssCOMRAM:
   729                           	opt stack 0
   730  00003C                     _dhcpState:
   731                           	opt stack 0
   732  00003C                     	ds	2
   733  00003E                     _nextPacketPointer:
   734                           	opt stack 0
   735  00003E                     	ds	2
   736  000040                     _pTail:
   737                           	opt stack 0
   738  000040                     	ds	2
   739  000042                     _pHead:
   740                           	opt stack 0
   741  000042                     	ds	2
   742  000044                     _sequenceIndex:
   743                           	opt stack 0
   744  000044                     	ds	1
   745  000045                     _ethListSize:
   746                           	opt stack 0
   747  000045                     	ds	1
   748  000046                     _Control_Byte:
   749                           	opt stack 0
   750  000046                     	ds	1
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           postinc0	equ	0xFEE
   756                           wreg	equ	0xFE8
   757                           postdec1	equ	0xFE5
   758                           fsr1l	equ	0xFE1
   759                           
   760                           	psect	dataCOMRAM
   761  00004B                     __pdataCOMRAM:
   762                           	opt stack 0
   763  00004B                     _lfsr_value:
   764                           	opt stack 0
   765  00004B                     	ds	1
   766  00004C                     _xor_mask:
   767                           	opt stack 0
   768  00004C                     	ds	1
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           
   778                           	psect	bssBANK2
   779  000200                     __pbssBANK2:
   780                           	opt stack 0
   781  000200                     _ip_database_info:
   782                           	opt stack 0
   783  000200                     	ds	36
   784  000224                     _ethData:
   785                           	opt stack 0
   786  000224                     	ds	6
   787  00022A                     DHCP_Manage@managementTimer:
   788                           	opt stack 0
   789  00022A                     	ds	4
   790  00022E                     _device_time:
   791                           	opt stack 0
   792  00022E                     	ds	4
   793  000232                     Network_Manage@nowPv:
   794                           	opt stack 0
   795  000232                     	ds	4
   796  000236                     _remoteIpv4Address:
   797                           	opt stack 0
   798  000236                     	ds	4
   799  00023A                     _rxPacketStatusVector:
   800                           	opt stack 0
   801  00023A                     	ds	4
   802  00023E                     strtok@sp:
   803                           	opt stack 0
   804  00023E                     	ds	2
   805  000240                     _destPort:
   806                           	opt stack 0
   807  000240                     	ds	2
   808  000242                     _portUnreachable:
   809                           	opt stack 0
   810  000242                     	ds	2
   811  000244                     _ipv4StartPosition:
   812                           	opt stack 0
   813  000244                     	ds	2
   814  000246                     TMR1_ISR@CountCallBack:
   815                           	opt stack 0
   816  000246                     	ds	2
   817  000248                     _ipv4Header:
   818                           	opt stack 0
   819  000248                     	ds	20
   820  00025C                     makeIpv4AddresstoStr@ip_str:
   821                           	opt stack 0
   822  00025C                     	ds	15
   823  00026B                     _udpHeader:
   824                           	opt stack 0
   825  00026B                     	ds	8
   826  000273                     _hostMacAddress:
   827                           	opt stack 0
   828  000273                     	ds	6
   829  000279                     _arpTimer:
   830                           	opt stack 0
   831  000279                     	ds	4
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           postdec1	equ	0xFE5
   839                           fsr1l	equ	0xFE1
   840                           
   841                           	psect	dataBANK2
   842  00027D                     __pdataBANK2:
   843                           	opt stack 0
   844  00027D                     DHCP_Handler@F840:
   845                           	opt stack 0
   846  00027D                     	ds	48
   847  0002AD                     _dhcpData:
   848                           	opt stack 0
   849  0002AD                     	ds	48
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           tblptrl	equ	0xFF6
   853                           tablat	equ	0xFF5
   854                           postinc0	equ	0xFEE
   855                           wreg	equ	0xFE8
   856                           postdec1	equ	0xFE5
   857                           fsr1l	equ	0xFE1
   858                           
   859                           	psect	bssBANK3
   860  000300                     __pbssBANK3:
   861                           	opt stack 0
   862  000300                     _txData:
   863                           	opt stack 0
   864  000300                     	ds	200
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           postdec1	equ	0xFE5
   872                           fsr1l	equ	0xFE1
   873                           
   874                           	psect	bssBANK4
   875  000400                     __pbssBANK4:
   876                           	opt stack 0
   877  000400                     _dnsCache:
   878                           	opt stack 0
   879  000400                     	ds	128
   880  000480                     _arpMap:
   881                           	opt stack 0
   882  000480                     	ds	104
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           
   892                           	psect	cstackBANK2
   893  0002DD                     __pcstackBANK2:
   894                           	opt stack 0
   895  0002DD                     ??_Network_Read:
   896                           
   897                           ; 1 bytes @ 0x0
   898  0002DD                     	ds	4
   899  0002E1                     Network_Read@header:
   900                           	opt stack 0
   901                           
   902                           ; 14 bytes @ 0x4
   903  0002E1                     	ds	14
   904  0002EF                     Network_Manage@now:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x12
   908  0002EF                     	ds	4
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1l	equ	0xFE1
   917                           
   918                           	psect	cstackBANK1
   919  000100                     __pcstackBANK1:
   920                           	opt stack 0
   921  000100                     DHCP_Handler@chaddr:
   922                           	opt stack 0
   923  000100                     DNS_Handler@dnsR:
   924                           	opt stack 0
   925                           
   926                           ; 255 bytes @ 0x0
   927  000100                     	ds	16
   928  000110                     DHCP_Handler@a:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x10
   932  000110                     	ds	4
   933  000114                     DHCP_Handler@a_3165:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x14
   937  000114                     	ds	4
   938  000118                     DHCP_Handler@messageType:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x18
   942  000118                     	ds	1
   943  000119                     DHCP_Handler@option:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x19
   947  000119                     	ds	1
   948  00011A                     DHCP_Handler@siaddr:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x1A
   952  00011A                     	ds	4
   953  00011E                     DHCP_Handler@declineOffers:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x1E
   957  00011E                     	ds	1
   958  00011F                     DHCP_Handler@count:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x1F
   962  00011F                     	ds	1
   963  000120                     DHCP_Handler@count_3164:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x20
   967  000120                     	ds	1
   968  000121                     DHCP_Handler@acceptOffers:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x21
   972  000121                     	ds	1
   973  000122                     DHCP_Handler@acceptNACK:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x22
   977  000122                     	ds	1
   978  000123                     DHCP_Handler@acceptACK:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x23
   982  000123                     	ds	1
   983  000124                     DHCP_Handler@optionLength:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x24
   987  000124                     	ds	1
   988  000125                     DHCP_Handler@localData:
   989                           	opt stack 0
   990                           
   991                           ; 48 bytes @ 0x25
   992  000125                     	ds	218
   993                           tblptru	equ	0xFF8
   994                           tblptrh	equ	0xFF7
   995                           tblptrl	equ	0xFF6
   996                           tablat	equ	0xFF5
   997                           postinc0	equ	0xFEE
   998                           wreg	equ	0xFE8
   999                           postdec1	equ	0xFE5
  1000                           fsr1l	equ	0xFE1
  1001                           
  1002                           	psect	cstackBANK0
  1003  000060                     __pcstackBANK0:
  1004                           	opt stack 0
  1005  000060                     ??_ARPV4_Packet:
  1006  000060                     ??_ARPV4_Request:
  1007  000060                     __doprnt@idx:
  1008                           	opt stack 0
  1009  000060                     ETH_TxComputeChecksum@rxptr:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x0
  1013  000060                     	ds	1
  1014  000061                     __doprnt@len:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x1
  1018  000061                     	ds	1
  1019  000062                     ETH_TxComputeChecksum@cksm:
  1020                           	opt stack 0
  1021                           
  1022                           ; 4 bytes @ 0x2
  1023  000062                     	ds	1
  1024  000063                     __doprnt@cp:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x3
  1028  000063                     	ds	2
  1029  000065                     __doprnt@flag:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x5
  1033  000065                     	ds	1
  1034  000066                     ??_IPV4_Send:
  1035  000066                     __doprnt@val:
  1036                           	opt stack 0
  1037                           
  1038                           ; 4 bytes @ 0x6
  1039  000066                     	ds	4
  1040  00006A                     IPV4_Send@ret:
  1041                           	opt stack 0
  1042  00006A                     __doprnt@prec:
  1043                           	opt stack 0
  1044                           
  1045                           ; 2 bytes @ 0xA
  1046  00006A                     	ds	1
  1047  00006B                     IPV4_Send@cksm:
  1048                           	opt stack 0
  1049                           
  1050                           ; 2 bytes @ 0xB
  1051  00006B                     	ds	1
  1052  00006C                     __doprnt@c:
  1053                           	opt stack 0
  1054                           
  1055                           ; 1 bytes @ 0xC
  1056  00006C                     	ds	1
  1057  00006D                     ?_printf:
  1058                           	opt stack 0
  1059  00006D                     IPV4_Send@totalLength:
  1060                           	opt stack 0
  1061  00006D                     printf@f:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0xD
  1065  00006D                     	ds	2
  1066  00006F                     ??_UDP_Send:
  1067                           
  1068                           ; 1 bytes @ 0xF
  1069  00006F                     	ds	4
  1070  000073                     UDP_Send@ret:
  1071                           	opt stack 0
  1072                           
  1073                           ; 1 bytes @ 0x13
  1074  000073                     	ds	1
  1075  000074                     UDP_Send@cksm:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x14
  1079  000074                     	ds	2
  1080  000076                     UDP_Send@udpLength:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x16
  1084  000076                     	ds	5
  1085  00007B                     ??_ETH_Init:
  1086                           
  1087                           ; 1 bytes @ 0x1B
  1088  00007B                     	ds	1
  1089  00007C                     ARPV4_Request@ret:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x1C
  1093  00007C                     	ds	1
  1094  00007D                     ARPV4_Request@header:
  1095                           	opt stack 0
  1096                           
  1097                           ; 28 bytes @ 0x1D
  1098  00007D                     	ds	3
  1099  000080                     ARPV4_Packet@length:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x20
  1103  000080                     	ds	2
  1104  000082                     ARPV4_Packet@mergeFlag:
  1105                           	opt stack 0
  1106                           
  1107                           ; 1 bytes @ 0x22
  1108  000082                     	ds	1
  1109  000083                     ARPV4_Packet@ret:
  1110                           	opt stack 0
  1111                           
  1112                           ; 1 bytes @ 0x23
  1113  000083                     	ds	1
  1114  000084                     ARPV4_Packet@arpPtr:
  1115                           	opt stack 0
  1116                           
  1117                           ; 2 bytes @ 0x24
  1118  000084                     	ds	1
  1119  000085                     ETH_Init@phycon1_value:
  1120                           	opt stack 0
  1121                           
  1122                           ; 2 bytes @ 0x25
  1123  000085                     	ds	1
  1124  000086                     ARPV4_Packet@x:
  1125                           	opt stack 0
  1126                           
  1127                           ; 1 bytes @ 0x26
  1128  000086                     	ds	1
  1129  000087                     ARPV4_Packet@x_939:
  1130                           	opt stack 0
  1131  000087                     ETH_Init@mac:
  1132                           	opt stack 0
  1133                           
  1134                           ; 2 bytes @ 0x27
  1135  000087                     	ds	1
  1136  000088                     ARPV4_Packet@entryPointer:
  1137                           	opt stack 0
  1138                           
  1139                           ; 2 bytes @ 0x28
  1140  000088                     	ds	2
  1141  00008A                     ARPV4_Packet@header:
  1142                           	opt stack 0
  1143                           
  1144                           ; 28 bytes @ 0x2A
  1145  00008A                     	ds	15
  1146  000099                     ??_IPv4_Start:
  1147                           
  1148                           ; 1 bytes @ 0x39
  1149  000099                     	ds	8
  1150  0000A1                     IPv4_Start@targetAddress:
  1151                           	opt stack 0
  1152                           
  1153                           ; 4 bytes @ 0x41
  1154  0000A1                     	ds	4
  1155  0000A5                     IPv4_Start@macAddress:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x45
  1159  0000A5                     	ds	2
  1160  0000A7                     IPv4_Start@ret:
  1161                           	opt stack 0
  1162                           
  1163                           ; 1 bytes @ 0x47
  1164  0000A7                     	ds	1
  1165  0000A8                     ICMP_EchoReply@ipv4Hdr:
  1166                           	opt stack 0
  1167  0000A8                     ICMP_PortUnreachable@srcIPAddress:
  1168                           	opt stack 0
  1169  0000A8                     UDP_Start@destIP:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x48
  1173  0000A8                     	ds	2
  1174  0000AA                     ??_ICMP_EchoReply:
  1175                           
  1176                           ; 1 bytes @ 0x4A
  1177  0000AA                     	ds	2
  1178  0000AC                     UDP_Start@srcPort:
  1179                           	opt stack 0
  1180  0000AC                     ICMP_PortUnreachable@destIPAddress:
  1181                           	opt stack 0
  1182                           
  1183                           ; 4 bytes @ 0x4C
  1184  0000AC                     	ds	2
  1185  0000AE                     ICMP_EchoReply@identifier:
  1186                           	opt stack 0
  1187  0000AE                     UDP_Start@dstPort:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x4E
  1191  0000AE                     	ds	2
  1192  0000B0                     ??_DHCP_Manage:
  1193  0000B0                     ICMP_EchoReply@sequence:
  1194                           	opt stack 0
  1195  0000B0                     ICMP_PortUnreachable@length:
  1196                           	opt stack 0
  1197  0000B0                     DHCP_Handler@length:
  1198                           	opt stack 0
  1199  0000B0                     DNS_Handler@length:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0x50
  1203  0000B0                     	ds	1
  1204  0000B1                     DHCP_Manage@now:
  1205                           	opt stack 0
  1206                           
  1207                           ; 4 bytes @ 0x51
  1208  0000B1                     	ds	1
  1209  0000B2                     ??_DNS_Handler:
  1210  0000B2                     ??_DHCP_Handler:
  1211  0000B2                     ICMP_EchoReply@icmp_cksm_start:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0x52
  1215  0000B2                     	ds	2
  1216  0000B4                     ICMP_EchoReply@cksm:
  1217                           	opt stack 0
  1218                           
  1219                           ; 2 bytes @ 0x54
  1220  0000B4                     	ds	2
  1221  0000B6                     ICMP_EchoReply@ipv4PayloadLength:
  1222                           	opt stack 0
  1223                           
  1224                           ; 2 bytes @ 0x56
  1225  0000B6                     	ds	2
  1226  0000B8                     ICMP_EchoReply@ret:
  1227                           	opt stack 0
  1228                           
  1229                           ; 1 bytes @ 0x58
  1230  0000B8                     	ds	1
  1231  0000B9                     ICMP_Receive@ipv4Hdr:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0x59
  1235  0000B9                     	ds	2
  1236  0000BB                     ??_ICMP_Receive:
  1237  0000BB                     DNS_Handler@authorityRR:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0x5B
  1241  0000BB                     	ds	2
  1242  0000BD                     DNS_Handler@ipAddress:
  1243                           	opt stack 0
  1244                           
  1245                           ; 4 bytes @ 0x5D
  1246  0000BD                     	ds	2
  1247  0000BF                     ICMP_Receive@ret:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0x5F
  1251  0000BF                     	ds	1
  1252  0000C0                     ICMP_Receive@icmpHdr:
  1253                           	opt stack 0
  1254                           
  1255                           ; 4 bytes @ 0x60
  1256  0000C0                     	ds	1
  1257  0000C1                     DNS_Handler@ttl:
  1258                           	opt stack 0
  1259                           
  1260                           ; 4 bytes @ 0x61
  1261  0000C1                     	ds	4
  1262  0000C5                     DNS_Handler@v:
  1263                           	opt stack 0
  1264                           
  1265                           ; 2 bytes @ 0x65
  1266  0000C5                     	ds	2
  1267  0000C7                     DNS_Handler@type:
  1268                           	opt stack 0
  1269                           
  1270                           ; 2 bytes @ 0x67
  1271  0000C7                     	ds	2
  1272  0000C9                     DNS_Handler@nameLen:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x69
  1276  0000C9                     	ds	1
  1277  0000CA                     DNS_Handler@answer:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x6A
  1281  0000CA                     	ds	2
  1282  0000CC                     DNS_Handler@dataLength:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x6C
  1286  0000CC                     	ds	2
  1287  0000CE                     DNS_Handler@dnsPtr:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x6E
  1291  0000CE                     	ds	2
  1292  0000D0                     DNS_Handler@i:
  1293                           	opt stack 0
  1294                           
  1295                           ; 1 bytes @ 0x70
  1296  0000D0                     	ds	1
  1297  0000D1                     DNS_Handler@x:
  1298                           	opt stack 0
  1299                           
  1300                           ; 1 bytes @ 0x71
  1301  0000D1                     	ds	1
  1302  0000D2                     DNS_Handler@lock:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x72
  1306  0000D2                     	ds	1
  1307  0000D3                     DNS_Handler@entryPointer:
  1308                           	opt stack 0
  1309                           
  1310                           ; 2 bytes @ 0x73
  1311  0000D3                     	ds	2
  1312  0000D5                     UDP_Receive@udpcksm:
  1313                           	opt stack 0
  1314                           
  1315                           ; 2 bytes @ 0x75
  1316  0000D5                     	ds	2
  1317  0000D7                     ??_UDP_Receive:
  1318                           
  1319                           ; 1 bytes @ 0x77
  1320  0000D7                     	ds	4
  1321  0000DB                     UDP_Receive@ret:
  1322                           	opt stack 0
  1323                           
  1324                           ; 1 bytes @ 0x7B
  1325  0000DB                     	ds	1
  1326  0000DC                     UDP_Receive@hptr:
  1327                           	opt stack 0
  1328                           
  1329                           ; 2 bytes @ 0x7C
  1330  0000DC                     	ds	2
  1331  0000DE                     ??_IPV4_Packet:
  1332                           
  1333                           ; 1 bytes @ 0x7E
  1334  0000DE                     	ds	28
  1335  0000FA                     IPV4_Packet@hdrLen:
  1336                           	opt stack 0
  1337                           
  1338                           ; 1 bytes @ 0x9A
  1339  0000FA                     	ds	1
  1340  0000FB                     IPV4_Packet@length:
  1341                           	opt stack 0
  1342                           
  1343                           ; 2 bytes @ 0x9B
  1344  0000FB                     	ds	2
  1345  0000FD                     IPV4_Packet@cksm:
  1346                           	opt stack 0
  1347                           
  1348                           ; 2 bytes @ 0x9D
  1349  0000FD                     	ds	2
  1350  0000FF                     ??_Network_Manage:
  1351                           
  1352                           ; 1 bytes @ 0x9F
  1353  0000FF                     	ds	1
  1354                           tblptru	equ	0xFF8
  1355                           tblptrh	equ	0xFF7
  1356                           tblptrl	equ	0xFF6
  1357                           tablat	equ	0xFF5
  1358                           postinc0	equ	0xFEE
  1359                           wreg	equ	0xFE8
  1360                           postdec1	equ	0xFE5
  1361                           fsr1l	equ	0xFE1
  1362                           
  1363                           	psect	cstackCOMRAM
  1364  000001                     __pcstackCOMRAM:
  1365                           	opt stack 0
  1366  000001                     ??_INTERRUPT_InterruptManager:
  1367  000001                     
  1368                           ; 1 bytes @ 0x0
  1369  000001                     	ds	18
  1370  000013                     ??_ETH_Flush:
  1371  000013                     ??_ETH_SendQueued:
  1372  000013                     ??_isdigit:
  1373  000013                     ?_ETH_ReadBlock:
  1374                           	opt stack 0
  1375  000013                     ?_ARPV4_Lookup:
  1376                           	opt stack 0
  1377  000013                     ?_MAC_getAddress:
  1378                           	opt stack 0
  1379  000013                     ?_ETH_NewPacket:
  1380                           	opt stack 0
  1381  000013                     ?_udp_table_getIterator:
  1382                           	opt stack 0
  1383  000013                     ?_strlen:
  1384                           	opt stack 0
  1385  000013                     ?_memcmp:
  1386                           	opt stack 0
  1387  000013                     ?_strcmp:
  1388                           	opt stack 0
  1389  000013                     ?_ETH_Read16:
  1390                           	opt stack 0
  1391  000013                     ?_ETH_ComputeChecksum:
  1392                           	opt stack 0
  1393  000013                     ?_ETH_GetReadPtr:
  1394                           	opt stack 0
  1395  000013                     ?_ETH_GetByteCount:
  1396                           	opt stack 0
  1397  000013                     ?_IPV4_PseudoHeaderChecksum:
  1398                           	opt stack 0
  1399  000013                     ?_IPV4_GetStartPosition:
  1400                           	opt stack 0
  1401  000013                     ?_IPV4_GetDatagramLength:
  1402                           	opt stack 0
  1403  000013                     ?___wmul:
  1404                           	opt stack 0
  1405  000013                     ?_time:
  1406                           	opt stack 0
  1407  000013                     ?_ETH_Read32:
  1408                           	opt stack 0
  1409  000013                     ?___lldiv:
  1410                           	opt stack 0
  1411  000013                     PHY_WaitForBusy@ret:
  1412                           	opt stack 0
  1413  000013                     ETH_Read8@ret:
  1414                           	opt stack 0
  1415  000013                     ETH_Write8@data:
  1416                           	opt stack 0
  1417  000013                     ipdb_init@x:
  1418                           	opt stack 0
  1419  000013                     lfsr@lsb:
  1420                           	opt stack 0
  1421  000013                     ARPV4_Update@entryPointer:
  1422                           	opt stack 0
  1423  000013                     ETH_ReadBlock@buffer:
  1424                           	opt stack 0
  1425  000013                     ETH_Write16@data:
  1426                           	opt stack 0
  1427  000013                     ETH_WriteString@string:
  1428                           	opt stack 0
  1429  000013                     ETH_WriteBlock@buffer:
  1430                           	opt stack 0
  1431  000013                     ETH_Insert@data:
  1432                           	opt stack 0
  1433  000013                     ETH_Dump@length:
  1434                           	opt stack 0
  1435  000013                     ETH_ComputeChecksum@len:
  1436                           	opt stack 0
  1437  000013                     ETH_GetMAC@mac:
  1438                           	opt stack 0
  1439  000013                     ETH_PacketListReset@ptr:
  1440                           	opt stack 0
  1441  000013                     ETH_RemovePacket@packetHandle:
  1442                           	opt stack 0
  1443  000013                     IPV4_PseudoHeaderChecksum@payloadLen:
  1444                           	opt stack 0
  1445  000013                     time@t:
  1446                           	opt stack 0
  1447  000013                     ___wmul@multiplier:
  1448                           	opt stack 0
  1449  000013                     memcmp@s1:
  1450                           	opt stack 0
  1451  000013                     memcpy@d1:
  1452                           	opt stack 0
  1453  000013                     strcmp@s1:
  1454                           	opt stack 0
  1455  000013                     strlen@s:
  1456                           	opt stack 0
  1457  000013                     TMR1_SetInterruptHandler@InterruptHandler:
  1458                           	opt stack 0
  1459  000013                     TMR0_SetInterruptHandler@InterruptHandler:
  1460                           	opt stack 0
  1461  000013                     ARPV4_Lookup@ip_address:
  1462                           	opt stack 0
  1463  000013                     ETH_Write32@data:
  1464                           	opt stack 0
  1465  000013                     ___lldiv@dividend:
  1466                           	opt stack 0
  1467                           
  1468                           ; 4 bytes @ 0x12
  1469  000013                     	ds	1
  1470  000014                     PHY_WaitForBusy@timeout:
  1471                           	opt stack 0
  1472  000014                     ipdb_init@x_2008:
  1473                           	opt stack 0
  1474  000014                     _isdigit$3586:
  1475                           	opt stack 0
  1476  000014                     DHCP_WriteZeros@length:
  1477                           	opt stack 0
  1478                           
  1479                           ; 2 bytes @ 0x13
  1480  000014                     	ds	1
  1481  000015                     ??_ETH_NewPacket:
  1482  000015                     ??_strlen:
  1483  000015                     ??_ETH_GetByteCount:
  1484  000015                     ??_IPV4_PseudoHeaderChecksum:
  1485  000015                     ?_udp_table_nextEntry:
  1486                           	opt stack 0
  1487  000015                     ?_PHY_Read:
  1488                           	opt stack 0
  1489  000015                     ARPV4_Init@x:
  1490                           	opt stack 0
  1491  000015                     ARPV4_Update@x:
  1492                           	opt stack 0
  1493  000015                     isdigit@c:
  1494                           	opt stack 0
  1495  000015                     PHY_Write@data:
  1496                           	opt stack 0
  1497  000015                     ETH_Read16@ret:
  1498                           	opt stack 0
  1499  000015                     ETH_ReadBlock@length:
  1500                           	opt stack 0
  1501  000015                     ETH_WriteString@length:
  1502                           	opt stack 0
  1503  000015                     ETH_WriteBlock@length:
  1504                           	opt stack 0
  1505  000015                     ETH_Insert@len:
  1506                           	opt stack 0
  1507  000015                     ETH_ComputeChecksum@seed:
  1508                           	opt stack 0
  1509  000015                     ETH_SetReadPtr@rdptr:
  1510                           	opt stack 0
  1511  000015                     ETH_PacketListReset@index:
  1512                           	opt stack 0
  1513  000015                     udp_table_nextEntry@i:
  1514                           	opt stack 0
  1515  000015                     ___wmul@multiplicand:
  1516                           	opt stack 0
  1517  000015                     memcmp@s2:
  1518                           	opt stack 0
  1519  000015                     memcpy@s1:
  1520                           	opt stack 0
  1521  000015                     strcmp@s2:
  1522                           	opt stack 0
  1523                           
  1524                           ; 2 bytes @ 0x14
  1525  000015                     	ds	1
  1526  000016                     ??_TMR0_Initialize:
  1527  000016                     
  1528                           ; 1 bytes @ 0x15
  1529  000016                     	ds	1
  1530  000017                     ??_ETH_Send:
  1531  000017                     ??_strcmp:
  1532  000017                     ??_ETH_ComputeChecksum:
  1533  000017                     PHY_Write@reg:
  1534                           	opt stack 0
  1535  000017                     ETH_NewPacket@index:
  1536                           	opt stack 0
  1537  000017                     time@gie_val:
  1538                           	opt stack 0
  1539  000017                     ETH_ReadBlock@len:
  1540                           	opt stack 0
  1541  000017                     ETH_WriteBlock@p:
  1542                           	opt stack 0
  1543  000017                     ETH_Insert@offset:
  1544                           	opt stack 0
  1545  000017                     ETH_RemovePacket@pPacket:
  1546                           	opt stack 0
  1547  000017                     udp_table_nextEntry@j:
  1548                           	opt stack 0
  1549  000017                     ___wmul@product:
  1550                           	opt stack 0
  1551  000017                     memcmp@n:
  1552                           	opt stack 0
  1553  000017                     memcpy@n:
  1554                           	opt stack 0
  1555  000017                     strlen@cp:
  1556                           	opt stack 0
  1557  000017                     ETH_Read32@ret:
  1558                           	opt stack 0
  1559  000017                     ___lldiv@divisor:
  1560                           	opt stack 0
  1561                           
  1562                           ; 4 bytes @ 0x16
  1563  000017                     	ds	1
  1564  000018                     PHY_Write@GIESave:
  1565                           	opt stack 0
  1566  000018                     strcmp@r:
  1567                           	opt stack 0
  1568  000018                     time@the_time:
  1569                           	opt stack 0
  1570                           
  1571                           ; 4 bytes @ 0x17
  1572  000018                     	ds	1
  1573  000019                     ??_ETH_Shift_Tx_Packets:
  1574  000019                     ??_memcmp:
  1575  000019                     ??_ETH_Insert:
  1576  000019                     PHY_Read@reg:
  1577                           	opt stack 0
  1578  000019                     memcpy@tmp:
  1579                           	opt stack 0
  1580  000019                     ETH_ReadBlock@p:
  1581                           	opt stack 0
  1582  000019                     ETH_Copy@len:
  1583                           	opt stack 0
  1584                           
  1585                           ; 2 bytes @ 0x18
  1586  000019                     	ds	1
  1587  00001A                     memcpy@d:
  1588                           	opt stack 0
  1589  00001A                     PHY_Read@ret:
  1590                           	opt stack 0
  1591                           
  1592                           ; 4 bytes @ 0x19
  1593  00001A                     	ds	1
  1594  00001B                     ARPV4_Lookup@entry_pointer:
  1595                           	opt stack 0
  1596  00001B                     ETH_Send@packetEnd:
  1597                           	opt stack 0
  1598  00001B                     ETH_Insert@current_tx_ptr:
  1599                           	opt stack 0
  1600  00001B                     ETH_Copy@timer:
  1601                           	opt stack 0
  1602  00001B                     ___lldiv@quotient:
  1603                           	opt stack 0
  1604                           
  1605                           ; 4 bytes @ 0x1A
  1606  00001B                     	ds	1
  1607  00001C                     memcpy@s:
  1608                           	opt stack 0
  1609                           
  1610                           ; 2 bytes @ 0x1B
  1611  00001C                     	ds	1
  1612  00001D                     ARPV4_Lookup@x:
  1613                           	opt stack 0
  1614  00001D                     ETH_Copy@tmp_len:
  1615                           	opt stack 0
  1616  00001D                     ETH_Shift_Tx_Packets@shiftOffset:
  1617                           	opt stack 0
  1618  00001D                     IPV4_PseudoHeaderChecksum@v:
  1619                           	opt stack 0
  1620                           
  1621                           ; 2 bytes @ 0x1C
  1622  00001D                     	ds	1
  1623  00001E                     ETH_CheckLinkUp@value:
  1624                           	opt stack 0
  1625                           
  1626                           ; 4 bytes @ 0x1D
  1627  00001E                     	ds	1
  1628  00001F                     IPV4_PseudoHeaderChecksum@len:
  1629                           	opt stack 0
  1630  00001F                     ___lldiv@counter:
  1631                           	opt stack 0
  1632  00001F                     ETH_Shift_Tx_Packets@timer:
  1633                           	opt stack 0
  1634  00001F                     ETH_ComputeChecksum@cksm:
  1635                           	opt stack 0
  1636                           
  1637                           ; 4 bytes @ 0x1E
  1638  00001F                     	ds	1
  1639  000020                     ?___llmod:
  1640                           	opt stack 0
  1641  000020                     IPV4_PseudoHeaderChecksum@cksm:
  1642                           	opt stack 0
  1643  000020                     ___llmod@dividend:
  1644                           	opt stack 0
  1645                           
  1646                           ; 4 bytes @ 0x1F
  1647  000020                     	ds	1
  1648  000021                     ETH_Shift_Tx_Packets@len:
  1649                           	opt stack 0
  1650                           
  1651                           ; 2 bytes @ 0x20
  1652  000021                     	ds	1
  1653  000022                     
  1654                           ; 1 bytes @ 0x21
  1655  000022                     	ds	1
  1656  000023                     ETH_Shift_Tx_Packets@pElem:
  1657                           	opt stack 0
  1658  000023                     ETH_ComputeChecksum@v:
  1659                           	opt stack 0
  1660                           
  1661                           ; 2 bytes @ 0x22
  1662  000023                     	ds	1
  1663  000024                     ___llmod@divisor:
  1664                           	opt stack 0
  1665  000024                     IPV4_PseudoHeaderChecksum@tmp:
  1666                           	opt stack 0
  1667                           
  1668                           ; 12 bytes @ 0x23
  1669  000024                     	ds	1
  1670  000025                     ?_ETH_TxComputeChecksum:
  1671                           	opt stack 0
  1672  000025                     ?_ETH_RxComputeChecksum:
  1673                           	opt stack 0
  1674  000025                     ETH_WriteStart@dest_mac:
  1675                           	opt stack 0
  1676  000025                     ETH_TxComputeChecksum@position:
  1677                           	opt stack 0
  1678  000025                     ETH_RxComputeChecksum@len:
  1679                           	opt stack 0
  1680                           
  1681                           ; 2 bytes @ 0x24
  1682  000025                     	ds	2
  1683  000027                     ETH_WriteStart@type:
  1684                           	opt stack 0
  1685  000027                     ETH_TxComputeChecksum@len:
  1686                           	opt stack 0
  1687  000027                     ETH_RxComputeChecksum@seed:
  1688                           	opt stack 0
  1689                           
  1690                           ; 2 bytes @ 0x26
  1691  000027                     	ds	1
  1692  000028                     ___llmod@counter:
  1693                           	opt stack 0
  1694                           
  1695                           ; 1 bytes @ 0x27
  1696  000028                     	ds	1
  1697  000029                     ??_ETH_WriteStart:
  1698  000029                     ??_ETH_RxComputeChecksum:
  1699  000029                     ?__doprnt:
  1700                           	opt stack 0
  1701  000029                     ETH_TxComputeChecksum@seed:
  1702                           	opt stack 0
  1703  000029                     __doprnt@pb:
  1704                           	opt stack 0
  1705                           
  1706                           ; 2 bytes @ 0x28
  1707  000029                     	ds	2
  1708  00002B                     ??_ETH_TxComputeChecksum:
  1709  00002B                     ETH_WriteStart@ethPacket:
  1710                           	opt stack 0
  1711  00002B                     __doprnt@f:
  1712                           	opt stack 0
  1713                           
  1714                           ; 2 bytes @ 0x2A
  1715  00002B                     	ds	2
  1716  00002D                     ETH_RxComputeChecksum@rxptr:
  1717                           	opt stack 0
  1718  00002D                     __doprnt@ap:
  1719                           	opt stack 0
  1720  00002D                     ARPV4_Request@destAddress:
  1721                           	opt stack 0
  1722                           
  1723                           ; 4 bytes @ 0x2C
  1724  00002D                     	ds	2
  1725  00002F                     ??__doprnt:
  1726  00002F                     ETH_RxComputeChecksum@cksm:
  1727                           	opt stack 0
  1728                           
  1729                           ; 4 bytes @ 0x2E
  1730  00002F                     	ds	2
  1731  000031                     IPv4_Start@destAddress:
  1732                           	opt stack 0
  1733                           
  1734                           ; 4 bytes @ 0x30
  1735  000031                     	ds	2
  1736  000033                     printf@ap:
  1737                           	opt stack 0
  1738                           
  1739                           ; 2 bytes @ 0x32
  1740  000033                     	ds	2
  1741  000035                     IPv4_Start@protocol:
  1742                           	opt stack 0
  1743  000035                     printf@pb:
  1744                           	opt stack 0
  1745                           
  1746                           ; 5 bytes @ 0x34
  1747  000035                     	ds	1
  1748  000036                     UDP_Start@ret:
  1749                           	opt stack 0
  1750                           
  1751                           ; 1 bytes @ 0x35
  1752  000036                     	ds	1
  1753  000037                     IPV4_Send@payloadLength:
  1754                           	opt stack 0
  1755                           
  1756                           ; 2 bytes @ 0x36
  1757  000037                     	ds	2
  1758  000039                     sendRequest@started:
  1759                           	opt stack 0
  1760  000039                     ICMP_PortUnreachable@cksm:
  1761                           	opt stack 0
  1762                           
  1763                           ; 2 bytes @ 0x38
  1764  000039                     	ds	1
  1765  00003A                     sendRequest@type:
  1766                           	opt stack 0
  1767                           
  1768                           ; 1 bytes @ 0x39
  1769  00003A                     	ds	1
  1770  00003B                     ??_sendDHCPDISCOVER:
  1771  00003B                     ICMP_PortUnreachable@ret:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0x3A
  1775  00003B                     	ds	1
  1776  00003C                     tblptru	equ	0xFF8
  1777                           tblptrh	equ	0xFF7
  1778                           tblptrl	equ	0xFF6
  1779                           tablat	equ	0xFF5
  1780                           postinc0	equ	0xFEE
  1781                           wreg	equ	0xFE8
  1782                           postdec1	equ	0xFE5
  1783                           fsr1l	equ	0xFE1
  1784                           
  1785                           ; 1 bytes @ 0x3B
  1786 ;;
  1787 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1788 ;;
  1789 ;; *************** function _main *****************
  1790 ;; Defined at:
  1791 ;;		line 51 in file "main.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;		None
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;Total ram usage:        0 bytes
  1810 ;; Hardware stack levels required when called:   17
  1811 ;; This function calls:
  1812 ;;		_Network_Manage
  1813 ;;		_SYSTEM_Initialize
  1814 ;; This function is called by:
  1815 ;;		Startup code after reset
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text0
  1820  01450E                     __ptext0:
  1821                           	opt stack 0
  1822  01450E                     _main:
  1823                           	opt stack 14
  1824                           
  1825                           ;main.c: 54: SYSTEM_Initialize();
  1826                           
  1827                           ;incstack = 0
  1828  01450E  EC57  F0A1         	call	_SYSTEM_Initialize	;wreg free
  1829                           
  1830                           ;main.c: 73: (INTCONbits.GIE = 1);
  1831  014512  8EF2               	bsf	intcon,7,c	;volatile
  1832                           
  1833                           ;main.c: 79: (INTCONbits.PEIE = 1);
  1834  014514  8CF2               	bsf	intcon,6,c	;volatile
  1835  014516                     
  1836                           ;main.c: 85: {
  1837                           ;main.c: 86: Network_Manage();
  1838  014516  EC80  F09D         	call	_Network_Manage	;wreg free
  1839  01451A  D7FD               	goto	l1525
  1840  01451C                     __end_of_main:
  1841                           	opt stack 0
  1842                           tblptru	equ	0xFF8
  1843                           tblptrh	equ	0xFF7
  1844                           tblptrl	equ	0xFF6
  1845                           tablat	equ	0xFF5
  1846                           intcon	equ	0xFF2
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           postdec1	equ	0xFE5
  1850                           fsr1l	equ	0xFE1
  1851                           
  1852 ;; *************** function _SYSTEM_Initialize *****************
  1853 ;; Defined at:
  1854 ;;		line 72 in file "mcc_generated_files/mcc.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    9
  1875 ;; This function calls:
  1876 ;;		_ADC_Initialize
  1877 ;;		_ECCP1_Initialize
  1878 ;;		_INTERRUPT_Initialize
  1879 ;;		_Network_Init
  1880 ;;		_OSCILLATOR_Initialize
  1881 ;;		_PIN_MANAGER_Initialize
  1882 ;;		_SPI1_Initialize
  1883 ;;		_TMR0_Initialize
  1884 ;;		_TMR1_Initialize
  1885 ;;		_TMR2_Initialize
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text1
  1892  0142AE                     __ptext1:
  1893                           	opt stack 0
  1894  0142AE                     _SYSTEM_Initialize:
  1895                           	opt stack 21
  1896                           
  1897                           ;mcc.c: 74: INTERRUPT_Initialize();
  1898                           
  1899                           ;incstack = 0
  1900  0142AE  ECF2  F0A2         	call	_INTERRUPT_Initialize	;wreg free
  1901                           
  1902                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  1903  0142B2  ECF9  F09F         	call	_PIN_MANAGER_Initialize	;wreg free
  1904                           
  1905                           ;mcc.c: 76: OSCILLATOR_Initialize();
  1906  0142B6  ECB7  F0A2         	call	_OSCILLATOR_Initialize	;wreg free
  1907                           
  1908                           ;mcc.c: 77: SPI1_Initialize();
  1909  0142BA  EC95  F0A2         	call	_SPI1_Initialize	;wreg free
  1910                           
  1911                           ;mcc.c: 78: ECCP1_Initialize();
  1912  0142BE  EC59  F0A2         	call	_ECCP1_Initialize	;wreg free
  1913                           
  1914                           ;mcc.c: 79: ADC_Initialize();
  1915  0142C2  EC64  F0A2         	call	_ADC_Initialize	;wreg free
  1916                           
  1917                           ;mcc.c: 80: TMR2_Initialize();
  1918  0142C6  EC6F  F0A2         	call	_TMR2_Initialize	;wreg free
  1919                           
  1920                           ;mcc.c: 81: TMR1_Initialize();
  1921  0142CA  EC6C  F0A1         	call	_TMR1_Initialize	;wreg free
  1922                           
  1923                           ;mcc.c: 82: TMR0_Initialize();
  1924  0142CE  EC91  F0A0         	call	_TMR0_Initialize	;wreg free
  1925                           
  1926                           ;mcc.c: 83: Network_Init();
  1927  0142D2  EC06  F0A2         	call	_Network_Init	;wreg free
  1928  0142D6  0012               	return		;funcret
  1929  0142D8                     __end_of_SYSTEM_Initialize:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           intcon	equ	0xFF2
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           postdec1	equ	0xFE5
  1939                           fsr1l	equ	0xFE1
  1940                           
  1941 ;; *************** function _TMR2_Initialize *****************
  1942 ;; Defined at:
  1943 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    4
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_SYSTEM_Initialize
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text2
  1972  0144DE                     __ptext2:
  1973                           	opt stack 0
  1974  0144DE                     _TMR2_Initialize:
  1975                           	opt stack 25
  1976                           
  1977                           ;tmr2.c: 66: PR2 = 0x67;
  1978                           
  1979                           ;incstack = 0
  1980  0144DE  0E67               	movlw	103
  1981  0144E0  6ECB               	movwf	4043,c	;volatile
  1982                           
  1983                           ;tmr2.c: 69: TMR2 = 0x00;
  1984  0144E2  0E00               	movlw	0
  1985  0144E4  6ECC               	movwf	4044,c	;volatile
  1986                           
  1987                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  1988  0144E6  929E               	bcf	3998,1,c	;volatile
  1989                           
  1990                           ;tmr2.c: 75: T2CON = 0x05;
  1991  0144E8  0E05               	movlw	5
  1992  0144EA  6ECA               	movwf	4042,c	;volatile
  1993  0144EC  0012               	return		;funcret
  1994  0144EE                     __end_of_TMR2_Initialize:
  1995                           	opt stack 0
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           intcon	equ	0xFF2
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           postdec1	equ	0xFE5
  2004                           fsr1l	equ	0xFE1
  2005                           
  2006 ;; *************** function _TMR1_Initialize *****************
  2007 ;; Defined at:
  2008 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    5
  2029 ;; This function calls:
  2030 ;;		_TMR1_SetInterruptHandler
  2031 ;; This function is called by:
  2032 ;;		_SYSTEM_Initialize
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text3
  2037  0142D8                     __ptext3:
  2038                           	opt stack 0
  2039  0142D8                     _TMR1_Initialize:
  2040                           	opt stack 24
  2041                           
  2042                           ;tmr1.c: 68: TMR1H = 0x01;
  2043                           
  2044                           ;incstack = 0
  2045  0142D8  0E01               	movlw	1
  2046  0142DA  6ECF               	movwf	4047,c	;volatile
  2047                           
  2048                           ;tmr1.c: 71: TMR1L = 0xB0;
  2049  0142DC  0EB0               	movlw	176
  2050  0142DE  6ECE               	movwf	4046,c	;volatile
  2051                           
  2052                           ;tmr1.c: 74: timer1ReloadVal=TMR1;
  2053  0142E0  CFCE F049          	movff	4046,_timer1ReloadVal	;volatile
  2054  0142E4  CFCF F04A          	movff	4047,_timer1ReloadVal+1	;volatile
  2055                           
  2056                           ;tmr1.c: 77: PIR1bits.TMR1IF = 0;
  2057  0142E8  909E               	bcf	3998,0,c	;volatile
  2058                           
  2059                           ;tmr1.c: 80: PIE1bits.TMR1IE = 1;
  2060  0142EA  809D               	bsf	3997,0,c	;volatile
  2061                           
  2062                           ;tmr1.c: 83: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2063  0142EC  0EEE               	movlw	low _TMR1_DefaultInterruptHandler
  2064  0142EE  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2065  0142F0  0E45               	movlw	high _TMR1_DefaultInterruptHandler
  2066  0142F2  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2067  0142F4  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
  2068  0142F6  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler+2,c
  2069  0142F8  EC9C  F0A2         	call	_TMR1_SetInterruptHandler	;wreg free
  2070                           
  2071                           ;tmr1.c: 86: T1CON = 0x31;
  2072  0142FC  0E31               	movlw	49
  2073  0142FE  6ECD               	movwf	4045,c	;volatile
  2074  014300  0012               	return		;funcret
  2075  014302                     __end_of_TMR1_Initialize:
  2076                           	opt stack 0
  2077                           tblptru	equ	0xFF8
  2078                           tblptrh	equ	0xFF7
  2079                           tblptrl	equ	0xFF6
  2080                           tablat	equ	0xFF5
  2081                           intcon	equ	0xFF2
  2082                           postinc0	equ	0xFEE
  2083                           wreg	equ	0xFE8
  2084                           postdec1	equ	0xFE5
  2085                           fsr1l	equ	0xFE1
  2086                           
  2087 ;; *************** function _TMR0_Initialize *****************
  2088 ;; Defined at:
  2089 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;Total ram usage:        2 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    5
  2110 ;; This function calls:
  2111 ;;		_TMR0_SetInterruptHandler
  2112 ;; This function is called by:
  2113 ;;		_SYSTEM_Initialize
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text4
  2118  014122                     __ptext4:
  2119                           	opt stack 0
  2120  014122                     _TMR0_Initialize:
  2121                           	opt stack 24
  2122                           
  2123                           ;tmr0.c: 71: TMR0H = 0xD7;
  2124                           
  2125                           ;incstack = 0
  2126  014122  0ED7               	movlw	215
  2127  014124  6ED7               	movwf	4055,c	;volatile
  2128                           
  2129                           ;tmr0.c: 74: TMR0L = 0x4E;
  2130  014126  0E4E               	movlw	78
  2131  014128  6ED6               	movwf	4054,c	;volatile
  2132                           
  2133                           ;tmr0.c: 78: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  2134  01412A  50D6               	movf	4054,w,c	;volatile
  2135  01412C  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  2136  014130  6A17               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2137  014132  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2138  014136  6A16               	clrf	??_TMR0_Initialize,c
  2139  014138  1016               	iorwf	??_TMR0_Initialize,w,c
  2140  01413A  6E47               	movwf	_timer0ReloadVal,c	;volatile
  2141  01413C  5017               	movf	??_TMR0_Initialize+1,w,c
  2142  01413E  6E48               	movwf	_timer0ReloadVal+1,c	;volatile
  2143                           
  2144                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  2145  014140  94F2               	bcf	intcon,2,c	;volatile
  2146                           
  2147                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  2148  014142  8AF2               	bsf	intcon,5,c	;volatile
  2149                           
  2150                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2151  014144  0EF0               	movlw	low _TMR0_DefaultInterruptHandler
  2152  014146  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  2153  014148  0E45               	movlw	high _TMR0_DefaultInterruptHandler
  2154  01414A  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  2155  01414C  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  2156  01414E  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler+2,c
  2157  014150  EC8E  F0A2         	call	_TMR0_SetInterruptHandler	;wreg free
  2158                           
  2159                           ;tmr0.c: 90: T0CON = 0x9F;
  2160  014154  0E9F               	movlw	159
  2161  014156  6ED5               	movwf	4053,c	;volatile
  2162  014158  0012               	return		;funcret
  2163  01415A                     __end_of_TMR0_Initialize:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           intcon	equ	0xFF2
  2170                           postinc0	equ	0xFEE
  2171                           wreg	equ	0xFE8
  2172                           postdec1	equ	0xFE5
  2173                           fsr1l	equ	0xFE1
  2174                           
  2175 ;; *************** function _TMR0_SetInterruptHandler *****************
  2176 ;; Defined at:
  2177 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  InterruptHan    3   18[COMRAM] PTR FTN()void 
  2180 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        3 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_TMR0_Initialize
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text5
  2207  01451C                     __ptext5:
  2208                           	opt stack 0
  2209  01451C                     _TMR0_SetInterruptHandler:
  2210                           	opt stack 24
  2211                           
  2212                           ;tmr0.c: 153: TMR0_InterruptHandler = InterruptHandler;
  2213                           
  2214                           ;incstack = 0
  2215  01451C  C013  F2F3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2216  014520  C014  F2F4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2217  014524  C015  F2F5         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  2218  014528  0012               	return		;funcret
  2219  01452A                     __end_of_TMR0_SetInterruptHandler:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           intcon	equ	0xFF2
  2226                           postinc0	equ	0xFEE
  2227                           wreg	equ	0xFE8
  2228                           postdec1	equ	0xFE5
  2229                           fsr1l	equ	0xFE1
  2230                           
  2231 ;; *************** function _SPI1_Initialize *****************
  2232 ;; Defined at:
  2233 ;;		line 63 in file "mcc_generated_files/spi1.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    4
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_SYSTEM_Initialize
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text6
  2262  01452A                     __ptext6:
  2263                           	opt stack 0
  2264  01452A                     _SPI1_Initialize:
  2265                           	opt stack 25
  2266                           
  2267                           ;spi1.c: 68: SSP1STAT = 0x80;
  2268                           
  2269                           ;incstack = 0
  2270  01452A  0E80               	movlw	128
  2271  01452C  6EC7               	movwf	4039,c	;volatile
  2272                           
  2273                           ;spi1.c: 71: SSP1CON1 = 0x21;
  2274  01452E  0E21               	movlw	33
  2275  014530  6EC6               	movwf	4038,c	;volatile
  2276                           
  2277                           ;spi1.c: 74: SSP1ADD = 0x00;
  2278  014532  0E00               	movlw	0
  2279  014534  6EC8               	movwf	4040,c	;volatile
  2280  014536  0012               	return		;funcret
  2281  014538                     __end_of_SPI1_Initialize:
  2282                           	opt stack 0
  2283                           tblptru	equ	0xFF8
  2284                           tblptrh	equ	0xFF7
  2285                           tblptrl	equ	0xFF6
  2286                           tablat	equ	0xFF5
  2287                           intcon	equ	0xFF2
  2288                           postinc0	equ	0xFEE
  2289                           wreg	equ	0xFE8
  2290                           postdec1	equ	0xFE5
  2291                           fsr1l	equ	0xFE1
  2292                           
  2293 ;; *************** function _PIN_MANAGER_Initialize *****************
  2294 ;; Defined at:
  2295 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    4
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_SYSTEM_Initialize
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text7
  2324  013FF2                     __ptext7:
  2325                           	opt stack 0
  2326  013FF2                     _PIN_MANAGER_Initialize:
  2327                           	opt stack 25
  2328                           
  2329                           ;pin_manager.c: 56: LATE = 0x18;
  2330                           
  2331                           ;incstack = 0
  2332  013FF2  0E18               	movlw	24
  2333  013FF4  6E8D               	movwf	3981,c	;volatile
  2334                           
  2335                           ;pin_manager.c: 57: LATD = 0x00;
  2336  013FF6  0E00               	movlw	0
  2337  013FF8  6E8C               	movwf	3980,c	;volatile
  2338                           
  2339                           ;pin_manager.c: 58: LATA = 0x00;
  2340  013FFA  0E00               	movlw	0
  2341  013FFC  6E89               	movwf	3977,c	;volatile
  2342                           
  2343                           ;pin_manager.c: 59: LATF = 0x00;
  2344  013FFE  0E00               	movlw	0
  2345  014000  6E8E               	movwf	3982,c	;volatile
  2346                           
  2347                           ;pin_manager.c: 60: LATB = 0x00;
  2348  014002  0E00               	movlw	0
  2349  014004  6E8A               	movwf	3978,c	;volatile
  2350                           
  2351                           ;pin_manager.c: 61: LATG = 0x00;
  2352  014006  0E00               	movlw	0
  2353  014008  6E8F               	movwf	3983,c	;volatile
  2354                           
  2355                           ;pin_manager.c: 62: LATC = 0x01;
  2356  01400A  0E01               	movlw	1
  2357  01400C  6E8B               	movwf	3979,c	;volatile
  2358                           
  2359                           ;pin_manager.c: 67: TRISE = 0x00;
  2360  01400E  0E00               	movlw	0
  2361  014010  6E96               	movwf	3990,c	;volatile
  2362                           
  2363                           ;pin_manager.c: 68: TRISF = 0x7E;
  2364  014012  0E7E               	movlw	126
  2365  014014  6E97               	movwf	3991,c	;volatile
  2366                           
  2367                           ;pin_manager.c: 69: TRISA = 0x2C;
  2368  014016  0E2C               	movlw	44
  2369  014018  6E92               	movwf	3986,c	;volatile
  2370                           
  2371                           ;pin_manager.c: 70: TRISG = 0x00;
  2372  01401A  0E00               	movlw	0
  2373  01401C  6E98               	movwf	3992,c	;volatile
  2374                           
  2375                           ;pin_manager.c: 71: TRISB = 0xDF;
  2376  01401E  0EDF               	movlw	223
  2377  014020  6E93               	movwf	3987,c	;volatile
  2378                           
  2379                           ;pin_manager.c: 72: TRISC = 0x90;
  2380  014022  0E90               	movlw	144
  2381  014024  6E94               	movwf	3988,c	;volatile
  2382                           
  2383                           ;pin_manager.c: 73: TRISD = 0x00;
  2384  014026  0E00               	movlw	0
  2385  014028  6E95               	movwf	3989,c	;volatile
  2386                           
  2387                           ;pin_manager.c: 78: ADCON1bits.PCFG = 0x03;
  2388  01402A  50C1               	movf	4033,w,c	;volatile
  2389  01402C  0BF0               	andlw	-16
  2390  01402E  0903               	iorlw	3
  2391  014030  6EC1               	movwf	4033,c	;volatile
  2392  014032  0012               	return		;funcret
  2393  014034                     __end_of_PIN_MANAGER_Initialize:
  2394                           	opt stack 0
  2395                           tblptru	equ	0xFF8
  2396                           tblptrh	equ	0xFF7
  2397                           tblptrl	equ	0xFF6
  2398                           tablat	equ	0xFF5
  2399                           intcon	equ	0xFF2
  2400                           postinc0	equ	0xFEE
  2401                           wreg	equ	0xFE8
  2402                           postdec1	equ	0xFE5
  2403                           fsr1l	equ	0xFE1
  2404                           
  2405 ;; *************** function _OSCILLATOR_Initialize *****************
  2406 ;; Defined at:
  2407 ;;		line 86 in file "mcc_generated_files/mcc.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    4
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_SYSTEM_Initialize
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text8
  2436  01456E                     __ptext8:
  2437                           	opt stack 0
  2438  01456E                     _OSCILLATOR_Initialize:
  2439                           	opt stack 25
  2440                           
  2441                           ;mcc.c: 89: OSCCON = 0x02;
  2442                           
  2443                           ;incstack = 0
  2444  01456E  0E02               	movlw	2
  2445  014570  6ED3               	movwf	4051,c	;volatile
  2446                           
  2447                           ;mcc.c: 91: OSCTUNE = 0x40;
  2448  014572  0E40               	movlw	64
  2449  014574  6E9B               	movwf	3995,c	;volatile
  2450  014576  0012               	return		;funcret
  2451  014578                     __end_of_OSCILLATOR_Initialize:
  2452                           	opt stack 0
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           intcon	equ	0xFF2
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           postdec1	equ	0xFE5
  2461                           fsr1l	equ	0xFE1
  2462                           
  2463 ;; *************** function _Network_Init *****************
  2464 ;; Defined at:
  2465 ;;		line 54 in file "mcc_generated_files/TCPIPLibrary/network.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    8
  2486 ;; This function calls:
  2487 ;;		_ARPV4_Init
  2488 ;;		_DHCP_init
  2489 ;;		_ETH_Init
  2490 ;;		_IPV4_Init
  2491 ;;		_Network_WaitForLink
  2492 ;;		_rtcc_init
  2493 ;;		_timersInit
  2494 ;; This function is called by:
  2495 ;;		_SYSTEM_Initialize
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text9
  2500  01440C                     __ptext9:
  2501                           	opt stack 0
  2502  01440C                     _Network_Init:
  2503                           	opt stack 21
  2504                           
  2505                           ;network.c: 56: ETH_Init();
  2506                           
  2507                           ;incstack = 0
  2508  01440C  ECE3  F08D         	call	_ETH_Init	;wreg free
  2509                           
  2510                           ;network.c: 57: ARPV4_Init();
  2511  014410  ECC9  F0A0         	call	_ARPV4_Init	;wreg free
  2512                           
  2513                           ;network.c: 58: IPV4_Init();
  2514  014414  ECEC  F0A2         	call	_IPV4_Init	;wreg free
  2515                           
  2516                           ;network.c: 59: DHCP_init();
  2517  014418  ECF5  F0A2         	call	_DHCP_init	;wreg free
  2518                           
  2519                           ;network.c: 60: rtcc_init();
  2520  01441C  ECD0  F0A1         	call	_rtcc_init	;wreg free
  2521                           
  2522                           ;network.c: 61: Network_WaitForLink();
  2523  014420  ECB1  F0A2         	call	_Network_WaitForLink	;wreg free
  2524                           
  2525                           ;network.c: 62: timersInit();
  2526  014424  EC24  F0A2         	call	_timersInit	;wreg free
  2527  014428  0012               	return		;funcret
  2528  01442A                     __end_of_Network_Init:
  2529                           	opt stack 0
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           intcon	equ	0xFF2
  2535                           postinc0	equ	0xFEE
  2536                           wreg	equ	0xFE8
  2537                           postdec1	equ	0xFE5
  2538                           fsr1l	equ	0xFE1
  2539                           
  2540 ;; *************** function _timersInit *****************
  2541 ;; Defined at:
  2542 ;;		line 65 in file "mcc_generated_files/TCPIPLibrary/network.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    5
  2563 ;; This function calls:
  2564 ;;		_time
  2565 ;; This function is called by:
  2566 ;;		_Network_Init
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text10
  2571  014448                     __ptext10:
  2572                           	opt stack 0
  2573  014448                     _timersInit:
  2574                           	opt stack 23
  2575                           
  2576                           ;network.c: 67: time(&arpTimer);
  2577                           
  2578                           ;incstack = 0
  2579  014448  0E79               	movlw	low _arpTimer
  2580  01444A  6E13               	movwf	time@t,c
  2581  01444C  0E02               	movlw	high _arpTimer
  2582  01444E  6E14               	movwf	time@t+1,c
  2583  014450  ECC3  F09E         	call	_time	;wreg free
  2584                           
  2585                           ;network.c: 68: arpTimer += 10;
  2586  014454  0E0A               	movlw	10
  2587  014456  0102               	movlb	2	; () banked
  2588  014458  2779               	addwf	_arpTimer& (0+255),f,b
  2589  01445A  0E00               	movlw	0
  2590  01445C  237A               	addwfc	(_arpTimer+1)& (0+255),f,b
  2591  01445E  237B               	addwfc	(_arpTimer+2)& (0+255),f,b
  2592  014460  237C               	addwfc	(_arpTimer+3)& (0+255),f,b
  2593                           
  2594                           ; BSR set to: 2
  2595  014462  0012               	return		;funcret
  2596  014464                     __end_of_timersInit:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           intcon	equ	0xFF2
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           postdec1	equ	0xFE5
  2606                           fsr1l	equ	0xFE1
  2607                           
  2608 ;; *************** function _rtcc_init *****************
  2609 ;; Defined at:
  2610 ;;		line 62 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;Total ram usage:        0 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    5
  2631 ;; This function calls:
  2632 ;;		_TMR1_SetInterruptHandler
  2633 ;; This function is called by:
  2634 ;;		_Network_Init
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text11
  2639  0143A0                     __ptext11:
  2640                           	opt stack 0
  2641  0143A0                     _rtcc_init:
  2642                           	opt stack 23
  2643                           
  2644                           ;rtcc.c: 64: device_time = 1293861600;
  2645                           
  2646                           ; BSR set to: 2
  2647                           ;incstack = 0
  2648  0143A0  0EE0               	movlw	224
  2649  0143A2  0102               	movlb	2	; () banked
  2650  0143A4  6F2E               	movwf	_device_time& (0+255),b	;volatile
  2651  0143A6  0EC2               	movlw	194
  2652  0143A8  6F2F               	movwf	(_device_time+1)& (0+255),b	;volatile
  2653  0143AA  0E1E               	movlw	30
  2654  0143AC  6F30               	movwf	(_device_time+2)& (0+255),b	;volatile
  2655  0143AE  0E4D               	movlw	77
  2656  0143B0  6F31               	movwf	(_device_time+3)& (0+255),b	;volatile
  2657                           
  2658                           ; BSR set to: 2
  2659                           ;rtcc.c: 65: TMR1_SetInterruptHandler(rtcc_handler);
  2660  0143B2  0EFE               	movlw	low _rtcc_handler
  2661  0143B4  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2662  0143B6  0E44               	movlw	high _rtcc_handler
  2663  0143B8  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2664  0143BA  0E01               	movlw	low (_rtcc_handler shr (0+16))
  2665  0143BC  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler+2,c
  2666  0143BE  EC9C  F0A2         	call	_TMR1_SetInterruptHandler	;wreg free
  2667  0143C2  0012               	return		;funcret
  2668  0143C4                     __end_of_rtcc_init:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           intcon	equ	0xFF2
  2675                           postinc0	equ	0xFEE
  2676                           wreg	equ	0xFE8
  2677                           postdec1	equ	0xFE5
  2678                           fsr1l	equ	0xFE1
  2679                           
  2680 ;; *************** function _TMR1_SetInterruptHandler *****************
  2681 ;; Defined at:
  2682 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  InterruptHan    3   18[COMRAM] PTR FTN()void 
  2685 ;;		 -> rtcc_handler(1), TMR1_DefaultInterruptHandler(1), 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2697 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;Total ram usage:        3 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    4
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_TMR1_Initialize
  2708 ;;		_rtcc_init
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text12
  2713  014538                     __ptext12:
  2714                           	opt stack 0
  2715  014538                     _TMR1_SetInterruptHandler:
  2716                           	opt stack 24
  2717                           
  2718                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  2719                           
  2720                           ;incstack = 0
  2721  014538  C013  F2F6         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2722  01453C  C014  F2F7         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2723  014540  C015  F2F8         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
  2724  014544  0012               	return		;funcret
  2725  014546                     __end_of_TMR1_SetInterruptHandler:
  2726                           	opt stack 0
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           intcon	equ	0xFF2
  2732                           postinc0	equ	0xFEE
  2733                           wreg	equ	0xFE8
  2734                           postdec1	equ	0xFE5
  2735                           fsr1l	equ	0xFE1
  2736                           
  2737 ;; *************** function _Network_WaitForLink *****************
  2738 ;; Defined at:
  2739 ;;		line 71 in file "mcc_generated_files/TCPIPLibrary/network.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    7
  2760 ;; This function calls:
  2761 ;;		_ETH_CheckLinkUp
  2762 ;; This function is called by:
  2763 ;;		_Network_Init
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text13
  2768  014562                     __ptext13:
  2769                           	opt stack 0
  2770  014562                     _Network_WaitForLink:
  2771                           	opt stack 21
  2772                           
  2773                           ;network.c: 73: while(!ETH_CheckLinkUp());
  2774                           
  2775                           ;incstack = 0
  2776  014562  EC81  F0A1         	call	_ETH_CheckLinkUp	;wreg free
  2777  014566  0900               	iorlw	0
  2778  014568  A4D8               	btfss	status,2,c
  2779  01456A  0012               	return	
  2780  01456C  D7FA               	goto	_Network_WaitForLink
  2781  01456E                     __end_of_Network_WaitForLink:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           intcon	equ	0xFF2
  2788                           postinc0	equ	0xFEE
  2789                           wreg	equ	0xFE8
  2790                           postdec1	equ	0xFE5
  2791                           fsr1l	equ	0xFE1
  2792                           status	equ	0xFD8
  2793                           
  2794 ;; *************** function _IPV4_Init *****************
  2795 ;; Defined at:
  2796 ;;		line 59 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    5
  2817 ;; This function calls:
  2818 ;;		_ipdb_init
  2819 ;; This function is called by:
  2820 ;;		_Network_Init
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text14
  2825  0145D8                     __ptext14:
  2826                           	opt stack 0
  2827  0145D8                     _IPV4_Init:
  2828                           	opt stack 23
  2829                           
  2830                           ;ipv4.c: 61: ipdb_init();
  2831                           
  2832                           ;incstack = 0
  2833  0145D8  EC6B  F09B         	call	_ipdb_init	;wreg free
  2834  0145DC  0012               	return		;funcret
  2835  0145DE                     __end_of_IPV4_Init:
  2836                           	opt stack 0
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           intcon	equ	0xFF2
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           postdec1	equ	0xFE5
  2845                           fsr1l	equ	0xFE1
  2846                           status	equ	0xFD8
  2847                           
  2848 ;; *************** function _ipdb_init *****************
  2849 ;; Defined at:
  2850 ;;		line 31 in file "mcc_generated_files/TCPIPLibrary/ip_database.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  x               1   19[COMRAM] unsigned char 
  2855 ;;  x               1   18[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:        2 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    4
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_IPV4_Init
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text15
  2880  0136D6                     __ptext15:
  2881                           	opt stack 0
  2882  0136D6                     _ipdb_init:
  2883                           	opt stack 23
  2884                           
  2885                           ;ip_database.c: 33: ip_database_info.ipv4_myAddress = 0;
  2886                           
  2887                           ;incstack = 0
  2888  0136D6  0E00               	movlw	0
  2889  0136D8  0102               	movlb	2	; () banked
  2890  0136DA  6F00               	movwf	_ip_database_info& (0+255),b
  2891  0136DC  0E00               	movlw	0
  2892  0136DE  6F01               	movwf	(_ip_database_info+1)& (0+255),b
  2893  0136E0  0E00               	movlw	0
  2894  0136E2  6F02               	movwf	(_ip_database_info+2)& (0+255),b
  2895  0136E4  0E00               	movlw	0
  2896  0136E6  6F03               	movwf	(_ip_database_info+3)& (0+255),b
  2897                           
  2898                           ;ip_database.c: 34: ip_database_info.ipv4_subnetMask = 0;
  2899  0136E8  0E00               	movlw	0
  2900  0136EA  6F0C               	movwf	(_ip_database_info+12)& (0+255),b
  2901  0136EC  0E00               	movlw	0
  2902  0136EE  6F0D               	movwf	(_ip_database_info+13)& (0+255),b
  2903  0136F0  0E00               	movlw	0
  2904  0136F2  6F0E               	movwf	(_ip_database_info+14)& (0+255),b
  2905  0136F4  0E00               	movlw	0
  2906  0136F6  6F0F               	movwf	(_ip_database_info+15)& (0+255),b
  2907                           
  2908                           ;ip_database.c: 35: ip_database_info.ipv4_router = 0;
  2909  0136F8  0E00               	movlw	0
  2910  0136FA  6F10               	movwf	(_ip_database_info+16)& (0+255),b
  2911  0136FC  0E00               	movlw	0
  2912  0136FE  6F11               	movwf	(_ip_database_info+17)& (0+255),b
  2913  013700  0E00               	movlw	0
  2914  013702  6F12               	movwf	(_ip_database_info+18)& (0+255),b
  2915  013704  0E00               	movlw	0
  2916  013706  6F13               	movwf	(_ip_database_info+19)& (0+255),b
  2917                           
  2918                           ;ip_database.c: 36: for(uint8_t x=0; x < 2; x ++)
  2919  013708  0E00               	movlw	0
  2920  01370A  6E13               	movwf	ipdb_init@x,c
  2921  01370C                     l6238:
  2922                           
  2923                           ; BSR set to: 2
  2924  01370C  0E01               	movlw	1
  2925  01370E  6413               	cpfsgt	ipdb_init@x,c
  2926  013710  D001               	goto	l909
  2927  013712  D00E               	goto	u5080
  2928  013714                     l909:
  2929                           
  2930                           ;ip_database.c: 37: ip_database_info.ipv4_dns[x] = 0;
  2931                           
  2932                           ; BSR set to: 2
  2933  013714  5013               	movf	ipdb_init@x,w,c
  2934  013716  0D04               	mullw	4
  2935  013718  0E04               	movlw	low (_ip_database_info+4)
  2936  01371A  24F3               	addwf	prodl,w,c
  2937  01371C  6ED9               	movwf	fsr2l,c
  2938  01371E  0E02               	movlw	high (_ip_database_info+4)
  2939  013720  20F4               	addwfc	prodh,w,c
  2940  013722  6EDA               	movwf	fsr2h,c
  2941  013724  6ADE               	clrf	postinc2,c
  2942  013726  6ADE               	clrf	postinc2,c
  2943  013728  6ADE               	clrf	postinc2,c
  2944  01372A  6ADD               	clrf	postdec2,c
  2945  01372C  2A13               	incf	ipdb_init@x,f,c
  2946  01372E  D7EE               	goto	l6238
  2947  013730                     u5080:
  2948                           
  2949                           ;ip_database.c: 38: for(uint8_t x=0; x < 2; x++)
  2950  013730  0E00               	movlw	0
  2951  013732  6E14               	movwf	ipdb_init@x_2008,c
  2952  013734                     l6250:
  2953  013734  0E01               	movlw	1
  2954  013736  6414               	cpfsgt	ipdb_init@x_2008,c
  2955  013738  D001               	goto	l911
  2956  01373A  D00E               	goto	u5100
  2957  01373C                     l911:
  2958                           
  2959                           ;ip_database.c: 39: ip_database_info.ipv4_ntpAddress[x] = 0;
  2960  01373C  5014               	movf	ipdb_init@x_2008,w,c
  2961  01373E  0D04               	mullw	4
  2962  013740  0E18               	movlw	low (_ip_database_info+24)
  2963  013742  24F3               	addwf	prodl,w,c
  2964  013744  6ED9               	movwf	fsr2l,c
  2965  013746  0E02               	movlw	high (_ip_database_info+24)
  2966  013748  20F4               	addwfc	prodh,w,c
  2967  01374A  6EDA               	movwf	fsr2h,c
  2968  01374C  6ADE               	clrf	postinc2,c
  2969  01374E  6ADE               	clrf	postinc2,c
  2970  013750  6ADE               	clrf	postinc2,c
  2971  013752  6ADD               	clrf	postdec2,c
  2972  013754  2A14               	incf	ipdb_init@x_2008,f,c
  2973  013756  D7EE               	goto	l6250
  2974  013758                     u5100:
  2975                           
  2976                           ;ip_database.c: 40: ip_database_info.ipv4_tftpAddress = 0;
  2977  013758  0E00               	movlw	0
  2978  01375A  0102               	movlb	2	; () banked
  2979  01375C  6F20               	movwf	(_ip_database_info+32)& (0+255),b
  2980  01375E  0E00               	movlw	0
  2981  013760  6F21               	movwf	(_ip_database_info+33)& (0+255),b
  2982  013762  0E00               	movlw	0
  2983  013764  6F22               	movwf	(_ip_database_info+34)& (0+255),b
  2984  013766  0E00               	movlw	0
  2985  013768  6F23               	movwf	(_ip_database_info+35)& (0+255),b
  2986                           
  2987                           ; BSR set to: 2
  2988  01376A  0012               	return		;funcret
  2989  01376C                     __end_of_ipdb_init:
  2990                           	opt stack 0
  2991                           tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           prodh	equ	0xFF4
  2996                           prodl	equ	0xFF3
  2997                           intcon	equ	0xFF2
  2998                           postinc0	equ	0xFEE
  2999                           wreg	equ	0xFE8
  3000                           postdec1	equ	0xFE5
  3001                           fsr1l	equ	0xFE1
  3002                           postinc2	equ	0xFDE
  3003                           postdec2	equ	0xFDD
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _ETH_Init *****************
  3009 ;; Defined at:
  3010 ;;		line 132 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  mac             2   39[BANK0 ] PTR const struct .
  3015 ;;		 -> macAddress(6), 
  3016 ;;  phycon1_valu    2   37[BANK0 ] unsigned int 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;Total ram usage:       14 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    7
  3033 ;; This function calls:
  3034 ;;		_ETH_CheckLinkUp
  3035 ;;		_ETH_Flush
  3036 ;;		_ETH_PacketListReset
  3037 ;;		_MAC_getAddress
  3038 ;;		_PHY_Write
  3039 ;;		_printf
  3040 ;; This function is called by:
  3041 ;;		_Network_Init
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text16
  3046  011BC6                     __ptext16:
  3047                           	opt stack 0
  3048  011BC6                     _ETH_Init:
  3049                           	opt stack 21
  3050                           
  3051                           ;ETHxxJ6x_driver.c: 134: const mac48Address_t *mac;
  3052                           ;ETHxxJ6x_driver.c: 135: uint16_t phycon1_value;
  3053                           ;ETHxxJ6x_driver.c: 138: ethData.error = 0;
  3054                           
  3055                           ; BSR set to: 2
  3056                           ;incstack = 0
  3057  011BC6  0102               	movlb	2	; () banked
  3058  011BC8  9124               	bcf	_ethData& (0+255),0,b	;volatile
  3059                           
  3060                           ;ETHxxJ6x_driver.c: 139: ethData.up = 0;
  3061  011BCA  9524               	bcf	_ethData& (0+255),2,b	;volatile
  3062                           
  3063                           ;ETHxxJ6x_driver.c: 140: ethData.linkChange = 0;
  3064  011BCC  9924               	bcf	_ethData& (0+255),4,b	;volatile
  3065                           
  3066                           ; BSR set to: 2
  3067                           ;ETHxxJ6x_driver.c: 142: ETH_PacketListReset();
  3068  011BCE  EC6A  F09F         	call	_ETH_PacketListReset	;wreg free
  3069                           
  3070                           ;ETHxxJ6x_driver.c: 144: ethData.saveRDPT = 0;
  3071  011BD2  0E00               	movlw	0
  3072  011BD4  0102               	movlb	2	; () banked
  3073  011BD6  6F27               	movwf	(_ethData+3)& (0+255),b	;volatile
  3074  011BD8  0E00               	movlw	0
  3075  011BDA  6F26               	movwf	(_ethData+2)& (0+255),b	;volatile
  3076                           
  3077                           ; BSR set to: 2
  3078                           ;ETHxxJ6x_driver.c: 146: nextPacketPointer = (0);
  3079  011BDC  0E00               	movlw	0
  3080  011BDE  6E3F               	movwf	_nextPacketPointer+1,c
  3081  011BE0  0E00               	movlw	0
  3082  011BE2  6E3E               	movwf	_nextPacketPointer,c
  3083                           
  3084                           ; BSR set to: 2
  3085                           ;ETHxxJ6x_driver.c: 148: ECON1 = 0x00;
  3086  011BE4  0E00               	movlw	0
  3087  011BE6  6ED2               	movwf	4050,c	;volatile
  3088  011BE8                     
  3089                           ; BSR set to: 2
  3090  011BE8  010E               	movlb	14	; () banked
  3091  011BEA  B5FD               	btfsc	253,2,b	;volatile
  3092  011BEC  D7FD               	goto	l492
  3093  011BEE                     u8470:
  3094                           
  3095                           ; BSR set to: 14
  3096                           
  3097                           ; BSR set to: 14
  3098                           ;ETHxxJ6x_driver.c: 150: while(ECON1bits.TXRTS);
  3099  011BEE  A6D2               	btfss	4050,3,c	;volatile
  3100  011BF0  D005               	goto	l497
  3101  011BF2  D7FD               	goto	u8470
  3102  011BF4                     l498:
  3103                           
  3104                           ;ETHxxJ6x_driver.c: 152: {
  3105                           ;ETHxxJ6x_driver.c: 153: ethData.pktReady = 0;
  3106  011BF4  0102               	movlb	2	; () banked
  3107  011BF6  9324               	bcf	_ethData& (0+255),1,b	;volatile
  3108                           
  3109                           ; BSR set to: 2
  3110                           ;ETHxxJ6x_driver.c: 154: ETH_Flush();
  3111  011BF8  ECE6  F09C         	call	_ETH_Flush	;wreg free
  3112  011BFC                     l497:
  3113  011BFC  BC60               	btfsc	3936,6,c	;volatile
  3114  011BFE  D7FA               	goto	l498
  3115                           
  3116                           ;ETHxxJ6x_driver.c: 155: }
  3117                           ;ETHxxJ6x_driver.c: 157: ECON2 = 0x00;
  3118  011C00  0E00               	movlw	0
  3119  011C02  010E               	movlb	14	; () banked
  3120  011C04  6FFE               	movwf	254,b	;volatile
  3121                           
  3122                           ; BSR set to: 14
  3123                           ;ETHxxJ6x_driver.c: 159: __nop();
  3124  011C06  F000               	nop	
  3125                           
  3126                           ;ETHxxJ6x_driver.c: 160: __nop();
  3127  011C08  F000               	nop	
  3128                           
  3129                           ;ETHxxJ6x_driver.c: 161: __nop();
  3130  011C0A  F000               	nop	
  3131                           
  3132                           ;ETHxxJ6x_driver.c: 164: ECON2 = 0xA0;
  3133  011C0C  0EA0               	movlw	160
  3134  011C0E  010E               	movlb	14	; () banked
  3135  011C10  6FFE               	movwf	254,b	;volatile
  3136  011C12                     
  3137                           ; BSR set to: 14
  3138                           
  3139                           ; BSR set to: 14
  3140  011C12  A1FD               	btfss	253,0,b	;volatile
  3141  011C14  D7FE               	goto	l501
  3142                           
  3143                           ; BSR set to: 14
  3144                           ;ETHxxJ6x_driver.c: 180: MACON1 = 0x01; __nop();
  3145                           
  3146                           ; BSR set to: 14
  3147  011C16  0E01               	movlw	1
  3148  011C18  6FA0               	movwf	160,b	;volatile
  3149                           
  3150                           ; BSR set to: 14
  3151  011C1A  F000               	nop	
  3152                           
  3153                           ;ETHxxJ6x_driver.c: 181: MACON3 = 0b10110010; __nop();
  3154  011C1C  0EB2               	movlw	178
  3155  011C1E  010E               	movlb	14	; () banked
  3156  011C20  6FA2               	movwf	162,b	;volatile
  3157                           
  3158                           ; BSR set to: 14
  3159  011C22  F000               	nop	
  3160                           
  3161                           ;ETHxxJ6x_driver.c: 182: MACON4 = 0b01000000; __nop();
  3162  011C24  0E40               	movlw	64
  3163  011C26  010E               	movlb	14	; () banked
  3164  011C28  6FA3               	movwf	163,b	;volatile
  3165                           
  3166                           ; BSR set to: 14
  3167  011C2A  F000               	nop	
  3168                           
  3169                           ;ETHxxJ6x_driver.c: 183: MABBIPG = 0x12; __nop();
  3170  011C2C  0E12               	movlw	18
  3171  011C2E  010E               	movlb	14	; () banked
  3172  011C30  6FA4               	movwf	164,b	;volatile
  3173                           
  3174                           ; BSR set to: 14
  3175  011C32  F000               	nop	
  3176                           
  3177                           ;ETHxxJ6x_driver.c: 184: MAIPG = 0x0C12; __nop();
  3178  011C34  0E0C               	movlw	12
  3179  011C36  010E               	movlb	14	; () banked
  3180  011C38  6FA7               	movwf	167,b	;volatile
  3181  011C3A  0E12               	movlw	18
  3182  011C3C  6FA6               	movwf	166,b	;volatile
  3183                           
  3184                           ; BSR set to: 14
  3185  011C3E  F000               	nop	
  3186                           
  3187                           ;ETHxxJ6x_driver.c: 185: EFLOCON = 0x00;
  3188  011C40  0E00               	movlw	0
  3189  011C42  010E               	movlb	14	; () banked
  3190  011C44  6F97               	movwf	151,b	;volatile
  3191                           
  3192                           ;ETHxxJ6x_driver.c: 186: phycon1_value = 0x0000;
  3193  011C46  0E00               	movlw	0
  3194  011C48  0100               	movlb	0	; () banked
  3195  011C4A  6F86               	movwf	(ETH_Init@phycon1_value+1)& (0+255),b
  3196  011C4C  0E00               	movlw	0
  3197  011C4E  6F85               	movwf	ETH_Init@phycon1_value& (0+255),b
  3198                           
  3199                           ;ETHxxJ6x_driver.c: 191: ETXST = ((8192) - (((1518) + (7)) << 1));
  3200  011C50  0E14               	movlw	20
  3201  011C52  010E               	movlb	14	; () banked
  3202  011C54  6FE5               	movwf	229,b	;volatile
  3203  011C56  0E16               	movlw	22
  3204  011C58  6FE4               	movwf	228,b	;volatile
  3205                           
  3206                           ;ETHxxJ6x_driver.c: 192: ETXND = ((8192)-1);
  3207  011C5A  0E1F               	movlw	31
  3208  011C5C  6FE7               	movwf	231,b	;volatile
  3209  011C5E  69E6               	setf	230,b	;volatile
  3210                           
  3211                           ;ETHxxJ6x_driver.c: 193: ERXST = (0);
  3212  011C60  0E00               	movlw	0
  3213  011C62  6FE9               	movwf	233,b	;volatile
  3214  011C64  0E00               	movlw	0
  3215  011C66  6FE8               	movwf	232,b	;volatile
  3216                           
  3217                           ;ETHxxJ6x_driver.c: 194: ERXND = (((8192) - (((1518) + (7)) << 1)) - 1);
  3218  011C68  0E14               	movlw	20
  3219  011C6A  6FEB               	movwf	235,b	;volatile
  3220  011C6C  0E15               	movlw	21
  3221  011C6E  6FEA               	movwf	234,b	;volatile
  3222                           
  3223                           ;ETHxxJ6x_driver.c: 197: ERDPT = (0);
  3224  011C70  0E00               	movlw	0
  3225  011C72  6E7B               	movwf	3963,c	;volatile
  3226  011C74  0E00               	movlw	0
  3227  011C76  6E7A               	movwf	3962,c	;volatile
  3228                           
  3229                           ;ETHxxJ6x_driver.c: 198: EWRPT = ((8192) - (((1518) + (7)) << 1));
  3230  011C78  0E14               	movlw	20
  3231  011C7A  6FE3               	movwf	227,b	;volatile
  3232  011C7C  0E16               	movlw	22
  3233  011C7E  6FE2               	movwf	226,b	;volatile
  3234                           
  3235                           ;ETHxxJ6x_driver.c: 201: ERXRDPT = (((8192) - (((1518) + (7)) << 1)) - 1);
  3236  011C80  0E14               	movlw	20
  3237  011C82  6FED               	movwf	237,b	;volatile
  3238  011C84  0E15               	movlw	21
  3239  011C86  6FEC               	movwf	236,b	;volatile
  3240                           
  3241                           ;ETHxxJ6x_driver.c: 205: MAMXFL = (1518);
  3242  011C88  0E05               	movlw	5
  3243  011C8A  6FAB               	movwf	171,b	;volatile
  3244  011C8C  0EEE               	movlw	238
  3245  011C8E  6FAA               	movwf	170,b	;volatile
  3246                           
  3247                           ; BSR set to: 14
  3248                           ;ETHxxJ6x_driver.c: 208: mac = MAC_getAddress();
  3249  011C90  ECBC  F0A2         	call	_MAC_getAddress	;wreg free
  3250  011C94  C013  F087         	movff	?_MAC_getAddress,ETH_Init@mac
  3251  011C98  C014  F088         	movff	?_MAC_getAddress+1,ETH_Init@mac+1
  3252                           
  3253                           ;ETHxxJ6x_driver.c: 210: printf("MAC Address from EEPROM: %.2X:%.2X:%.2X:%.2X:%.2X:%.2X 
      +                          \r\n", mac->s.byte1, mac->s.byte2,mac->s.byte3,mac->s.byte4,mac->s.byte5,mac->s.byte6);
  3254  011C9C  0E5E               	movlw	low STR_1
  3255  011C9E  0100               	movlb	0	; () banked
  3256  011CA0  6F6D               	movwf	printf@f& (0+255),b
  3257  011CA2  0EFF               	movlw	high STR_1
  3258  011CA4  6F6E               	movwf	(printf@f+1)& (0+255),b
  3259  011CA6  C087  FFF6         	movff	ETH_Init@mac,tblptrl
  3260  011CAA  C088  FFF7         	movff	ETH_Init@mac+1,tblptrh
  3261  011CAE                     	if	0	;tblptru may be non-zero
  3262  011CAE                     	endif
  3263  011CAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3264  011CAE  0E00               	movlw	low (__mediumconst shr (0+16))
  3265  011CB0  6EF8               	movwf	tblptru,c
  3266  011CB2                     	endif
  3267  011CB2  0008               	tblrd		*
  3268  011CB4  50F5               	movf	tablat,w,c
  3269  011CB6  6F6F               	movwf	(?_printf+2)& (0+255),b
  3270  011CB8  6B70               	clrf	(?_printf+3)& (0+255),b
  3271  011CBA  0E01               	movlw	1
  3272  011CBC  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3273  011CBE  6F7B               	movwf	??_ETH_Init& (0+255),b
  3274  011CC0  0E00               	movlw	0
  3275  011CC2  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3276  011CC4  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3277  011CC6  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3278  011CCA  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3279  011CCE                     	if	0	;tblptru may be non-zero
  3280  011CCE                     	endif
  3281  011CCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3282  011CCE  0E00               	movlw	low (__mediumconst shr (0+16))
  3283  011CD0  6EF8               	movwf	tblptru,c
  3284  011CD2                     	endif
  3285  011CD2  0008               	tblrd		*
  3286  011CD4  50F5               	movf	tablat,w,c
  3287  011CD6  6F71               	movwf	(?_printf+4)& (0+255),b
  3288  011CD8  6B72               	clrf	(?_printf+5)& (0+255),b
  3289  011CDA  0E02               	movlw	2
  3290  011CDC  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3291  011CDE  6F7D               	movwf	(??_ETH_Init+2)& (0+255),b
  3292  011CE0  0E00               	movlw	0
  3293  011CE2  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3294  011CE4  6F7E               	movwf	(??_ETH_Init+3)& (0+255),b
  3295  011CE6  C07D  FFF6         	movff	??_ETH_Init+2,tblptrl
  3296  011CEA  C07E  FFF7         	movff	??_ETH_Init+3,tblptrh
  3297  011CEE                     	if	0	;tblptru may be non-zero
  3298  011CEE                     	endif
  3299  011CEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3300  011CEE  0E00               	movlw	low (__mediumconst shr (0+16))
  3301  011CF0  6EF8               	movwf	tblptru,c
  3302  011CF2                     	endif
  3303  011CF2  0008               	tblrd		*
  3304  011CF4  50F5               	movf	tablat,w,c
  3305  011CF6  6F73               	movwf	(?_printf+6)& (0+255),b
  3306  011CF8  6B74               	clrf	(?_printf+7)& (0+255),b
  3307  011CFA  0E03               	movlw	3
  3308  011CFC  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3309  011CFE  6F7F               	movwf	(??_ETH_Init+4)& (0+255),b
  3310  011D00  0E00               	movlw	0
  3311  011D02  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3312  011D04  6F80               	movwf	(??_ETH_Init+5)& (0+255),b
  3313  011D06  C07F  FFF6         	movff	??_ETH_Init+4,tblptrl
  3314  011D0A  C080  FFF7         	movff	??_ETH_Init+5,tblptrh
  3315  011D0E                     	if	0	;tblptru may be non-zero
  3316  011D0E                     	endif
  3317  011D0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3318  011D0E  0E00               	movlw	low (__mediumconst shr (0+16))
  3319  011D10  6EF8               	movwf	tblptru,c
  3320  011D12                     	endif
  3321  011D12  0008               	tblrd		*
  3322  011D14  50F5               	movf	tablat,w,c
  3323  011D16  6F75               	movwf	(?_printf+8)& (0+255),b
  3324  011D18  6B76               	clrf	(?_printf+9)& (0+255),b
  3325  011D1A  0E04               	movlw	4
  3326  011D1C  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3327  011D1E  6F81               	movwf	(??_ETH_Init+6)& (0+255),b
  3328  011D20  0E00               	movlw	0
  3329  011D22  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3330  011D24  6F82               	movwf	(??_ETH_Init+7)& (0+255),b
  3331  011D26  C081  FFF6         	movff	??_ETH_Init+6,tblptrl
  3332  011D2A  C082  FFF7         	movff	??_ETH_Init+7,tblptrh
  3333  011D2E                     	if	0	;tblptru may be non-zero
  3334  011D2E                     	endif
  3335  011D2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3336  011D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  3337  011D30  6EF8               	movwf	tblptru,c
  3338  011D32                     	endif
  3339  011D32  0008               	tblrd		*
  3340  011D34  50F5               	movf	tablat,w,c
  3341  011D36  6F77               	movwf	(?_printf+10)& (0+255),b
  3342  011D38  6B78               	clrf	(?_printf+11)& (0+255),b
  3343  011D3A  0E05               	movlw	5
  3344  011D3C  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3345  011D3E  6F83               	movwf	(??_ETH_Init+8)& (0+255),b
  3346  011D40  0E00               	movlw	0
  3347  011D42  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3348  011D44  6F84               	movwf	(??_ETH_Init+9)& (0+255),b
  3349  011D46  C083  FFF6         	movff	??_ETH_Init+8,tblptrl
  3350  011D4A  C084  FFF7         	movff	??_ETH_Init+9,tblptrh
  3351  011D4E                     	if	0	;tblptru may be non-zero
  3352  011D4E                     	endif
  3353  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3354  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  3355  011D50  6EF8               	movwf	tblptru,c
  3356  011D52                     	endif
  3357  011D52  0008               	tblrd		*
  3358  011D54  50F5               	movf	tablat,w,c
  3359  011D56  6F79               	movwf	(?_printf+12)& (0+255),b
  3360  011D58  6B7A               	clrf	(?_printf+13)& (0+255),b
  3361  011D5A  EC57  F0A0         	call	_printf	;wreg free
  3362                           
  3363                           ;ETHxxJ6x_driver.c: 213: MAADR1 = mac->mac_array[0];__nop();
  3364  011D5E  C087  FFF6         	movff	ETH_Init@mac,tblptrl
  3365  011D62  C088  FFF7         	movff	ETH_Init@mac+1,tblptrh
  3366  011D66                     	if	0	;tblptru may be non-zero
  3367  011D66                     	endif
  3368  011D66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3369  011D66  0E00               	movlw	low (__mediumconst shr (0+16))
  3370  011D68  6EF8               	movwf	tblptru,c
  3371  011D6A                     	endif
  3372  011D6A  0008               	tblrd		*
  3373  011D6C  CFF5 FE84          	movff	tablat,3716	;volatile
  3374  011D70  F000               	nop	
  3375                           
  3376                           ;ETHxxJ6x_driver.c: 214: MAADR2 = mac->mac_array[1];__nop();
  3377  011D72  0E01               	movlw	1
  3378  011D74  0100               	movlb	0	; () banked
  3379  011D76  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3380  011D78  6F7B               	movwf	??_ETH_Init& (0+255),b
  3381  011D7A  0E00               	movlw	0
  3382  011D7C  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3383  011D7E  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3384  011D80  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3385  011D84  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3386  011D88                     	if	0	;tblptru may be non-zero
  3387  011D88                     	endif
  3388  011D88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3389  011D88  0E00               	movlw	low (__mediumconst shr (0+16))
  3390  011D8A  6EF8               	movwf	tblptru,c
  3391  011D8C                     	endif
  3392  011D8C  0008               	tblrd		*
  3393  011D8E  CFF5 FE85          	movff	tablat,3717	;volatile
  3394                           
  3395                           ; BSR set to: 0
  3396  011D92  F000               	nop	
  3397                           
  3398                           ;ETHxxJ6x_driver.c: 215: MAADR3 = mac->mac_array[2];__nop();
  3399  011D94  0E02               	movlw	2
  3400  011D96  0100               	movlb	0	; () banked
  3401  011D98  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3402  011D9A  6F7B               	movwf	??_ETH_Init& (0+255),b
  3403  011D9C  0E00               	movlw	0
  3404  011D9E  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3405  011DA0  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3406  011DA2  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3407  011DA6  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3408  011DAA                     	if	0	;tblptru may be non-zero
  3409  011DAA                     	endif
  3410  011DAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3411  011DAA  0E00               	movlw	low (__mediumconst shr (0+16))
  3412  011DAC  6EF8               	movwf	tblptru,c
  3413  011DAE                     	endif
  3414  011DAE  0008               	tblrd		*
  3415  011DB0  CFF5 FE82          	movff	tablat,3714	;volatile
  3416                           
  3417                           ; BSR set to: 0
  3418  011DB4  F000               	nop	
  3419                           
  3420                           ;ETHxxJ6x_driver.c: 216: MAADR4 = mac->mac_array[3];__nop();
  3421  011DB6  0E03               	movlw	3
  3422  011DB8  0100               	movlb	0	; () banked
  3423  011DBA  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3424  011DBC  6F7B               	movwf	??_ETH_Init& (0+255),b
  3425  011DBE  0E00               	movlw	0
  3426  011DC0  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3427  011DC2  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3428  011DC4  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3429  011DC8  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3430  011DCC                     	if	0	;tblptru may be non-zero
  3431  011DCC                     	endif
  3432  011DCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3433  011DCC  0E00               	movlw	low (__mediumconst shr (0+16))
  3434  011DCE  6EF8               	movwf	tblptru,c
  3435  011DD0                     	endif
  3436  011DD0  0008               	tblrd		*
  3437  011DD2  CFF5 FE83          	movff	tablat,3715	;volatile
  3438                           
  3439                           ; BSR set to: 0
  3440  011DD6  F000               	nop	
  3441                           
  3442                           ;ETHxxJ6x_driver.c: 217: MAADR5 = mac->mac_array[4];__nop();
  3443  011DD8  0E04               	movlw	4
  3444  011DDA  0100               	movlb	0	; () banked
  3445  011DDC  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3446  011DDE  6F7B               	movwf	??_ETH_Init& (0+255),b
  3447  011DE0  0E00               	movlw	0
  3448  011DE2  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3449  011DE4  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3450  011DE6  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3451  011DEA  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3452  011DEE                     	if	0	;tblptru may be non-zero
  3453  011DEE                     	endif
  3454  011DEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3455  011DEE  0E00               	movlw	low (__mediumconst shr (0+16))
  3456  011DF0  6EF8               	movwf	tblptru,c
  3457  011DF2                     	endif
  3458  011DF2  0008               	tblrd		*
  3459  011DF4  CFF5 FE80          	movff	tablat,3712	;volatile
  3460                           
  3461                           ; BSR set to: 0
  3462  011DF8  F000               	nop	
  3463                           
  3464                           ;ETHxxJ6x_driver.c: 218: MAADR6 = mac->mac_array[5];__nop();
  3465  011DFA  0E05               	movlw	5
  3466  011DFC  0100               	movlb	0	; () banked
  3467  011DFE  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3468  011E00  6F7B               	movwf	??_ETH_Init& (0+255),b
  3469  011E02  0E00               	movlw	0
  3470  011E04  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3471  011E06  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3472  011E08  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3473  011E0C  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3474  011E10                     	if	0	;tblptru may be non-zero
  3475  011E10                     	endif
  3476  011E10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3477  011E10  0E00               	movlw	low (__mediumconst shr (0+16))
  3478  011E12  6EF8               	movwf	tblptru,c
  3479  011E14                     	endif
  3480  011E14  0008               	tblrd		*
  3481  011E16  CFF5 FE81          	movff	tablat,3713	;volatile
  3482                           
  3483                           ; BSR set to: 0
  3484  011E1A  F000               	nop	
  3485                           
  3486                           ;ETHxxJ6x_driver.c: 224: ERXFCON = 0b10101011;
  3487  011E1C  0EAB               	movlw	171
  3488  011E1E  010E               	movlb	14	; () banked
  3489  011E20  6FD8               	movwf	216,b	;volatile
  3490                           
  3491                           ; BSR set to: 14
  3492                           ;ETHxxJ6x_driver.c: 227: ECON1=0x04;
  3493  011E22  0E04               	movlw	4
  3494  011E24  6ED2               	movwf	4050,c	;volatile
  3495                           
  3496                           ; BSR set to: 14
  3497                           ;ETHxxJ6x_driver.c: 230: PHY_Write(PHCON1, phycon1_value);
  3498  011E26  C085  F015         	movff	ETH_Init@phycon1_value,PHY_Write@data
  3499  011E2A  C086  F016         	movff	ETH_Init@phycon1_value+1,PHY_Write@data+1
  3500  011E2E  0E00               	movlw	0
  3501  011E30  EC96  F0A1         	call	_PHY_Write
  3502                           
  3503                           ;ETHxxJ6x_driver.c: 231: PHY_Write(PHCON2, 0x0110);
  3504  011E34  0E01               	movlw	1
  3505  011E36  6E16               	movwf	PHY_Write@data+1,c
  3506  011E38  0E10               	movlw	16
  3507  011E3A  6E15               	movwf	PHY_Write@data,c
  3508  011E3C  0E10               	movlw	16
  3509  011E3E  EC96  F0A1         	call	_PHY_Write
  3510                           
  3511                           ;ETHxxJ6x_driver.c: 232: PHY_Write(PHLCON, 0b01110101001010);
  3512  011E42  0E1D               	movlw	29
  3513  011E44  6E16               	movwf	PHY_Write@data+1,c
  3514  011E46  0E4A               	movlw	74
  3515  011E48  6E15               	movwf	PHY_Write@data,c
  3516  011E4A  0E14               	movlw	20
  3517  011E4C  EC96  F0A1         	call	_PHY_Write
  3518                           
  3519                           ;ETHxxJ6x_driver.c: 235: ETH_CheckLinkUp();
  3520  011E50  EC81  F0A1         	call	_ETH_CheckLinkUp	;wreg free
  3521                           
  3522                           ;ETHxxJ6x_driver.c: 238: EIE = 0b01011001;
  3523  011E54  0E59               	movlw	89
  3524  011E56  010E               	movlb	14	; () banked
  3525  011E58  6FFB               	movwf	251,b	;volatile
  3526                           
  3527                           ; BSR set to: 14
  3528                           ;ETHxxJ6x_driver.c: 239: PHY_Write(PHIE,0x0012);
  3529  011E5A  0E00               	movlw	0
  3530  011E5C  6E16               	movwf	PHY_Write@data+1,c
  3531  011E5E  0E12               	movlw	18
  3532  011E60  6E15               	movwf	PHY_Write@data,c
  3533  011E62  0E12               	movlw	18
  3534  011E64  EC96  F0A1         	call	_PHY_Write
  3535  011E68  0012               	return		;funcret
  3536  011E6A                     __end_of_ETH_Init:
  3537                           	opt stack 0
  3538                           tblptru	equ	0xFF8
  3539                           tblptrh	equ	0xFF7
  3540                           tblptrl	equ	0xFF6
  3541                           tablat	equ	0xFF5
  3542                           prodh	equ	0xFF4
  3543                           prodl	equ	0xFF3
  3544                           intcon	equ	0xFF2
  3545                           postinc0	equ	0xFEE
  3546                           wreg	equ	0xFE8
  3547                           postdec1	equ	0xFE5
  3548                           fsr1l	equ	0xFE1
  3549                           postinc2	equ	0xFDE
  3550                           postdec2	equ	0xFDD
  3551                           fsr2h	equ	0xFDA
  3552                           fsr2l	equ	0xFD9
  3553                           status	equ	0xFD8
  3554                           
  3555 ;; *************** function _printf *****************
  3556 ;; Defined at:
  3557 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\printf.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  3560 ;;		 -> STR_6(10), STR_5(29), STR_1(58), 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  pb              5   52[COMRAM] struct __prbuf
  3563 ;;  ap              2   50[COMRAM] PTR void [1]
  3564 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  2   13[BANK0 ] int 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3574 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Totals:         7      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;Total ram usage:       21 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    6
  3581 ;; This function calls:
  3582 ;;		__doprnt
  3583 ;; This function is called by:
  3584 ;;		_ETH_Init
  3585 ;;		_SYSLOG_Init
  3586 ;;		_SYSLOG_Write
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text17
  3591  0140AE                     __ptext17:
  3592                           	opt stack 0
  3593  0140AE                     _printf:
  3594                           	opt stack 21
  3595                           
  3596                           ;incstack = 0
  3597  0140AE  0E00               	movlw	0
  3598  0140B0  6E35               	movwf	printf@pb,c
  3599  0140B2  0E00               	movlw	0
  3600  0140B4  6E36               	movwf	printf@pb+1,c
  3601  0140B6  0EEC               	movlw	low _putch
  3602  0140B8  6E37               	movwf	printf@pb+2,c
  3603  0140BA  0E45               	movlw	high _putch
  3604  0140BC  6E38               	movwf	printf@pb+3,c
  3605  0140BE  0E01               	movlw	low (_putch shr (0+16))
  3606  0140C0  6E39               	movwf	printf@pb+4,c
  3607  0140C2  0E6F               	movlw	low (?_printf+2)
  3608  0140C4  6E33               	movwf	printf@ap,c
  3609  0140C6  0E00               	movlw	high (?_printf+2)
  3610  0140C8  6E34               	movwf	printf@ap+1,c
  3611                           
  3612                           ;	Return value of _printf is never used
  3613  0140CA  0E35               	movlw	low printf@pb
  3614  0140CC  6E29               	movwf	__doprnt@pb,c
  3615  0140CE  0E00               	movlw	high printf@pb
  3616  0140D0  6E2A               	movwf	__doprnt@pb+1,c
  3617  0140D2  C06D  F02B         	movff	printf@f,__doprnt@f
  3618  0140D6  C06E  F02C         	movff	printf@f+1,__doprnt@f+1
  3619  0140DA  0E33               	movlw	low printf@ap
  3620  0140DC  6E2D               	movwf	__doprnt@ap,c
  3621  0140DE  0E00               	movlw	high printf@ap
  3622  0140E0  6E2E               	movwf	__doprnt@ap+1,c
  3623  0140E2  EC00  F080         	call	__doprnt	;wreg free
  3624  0140E6  0012               	return	
  3625  0140E8                     __end_of_printf:
  3626                           	opt stack 0
  3627                           tblptru	equ	0xFF8
  3628                           tblptrh	equ	0xFF7
  3629                           tblptrl	equ	0xFF6
  3630                           tablat	equ	0xFF5
  3631                           prodh	equ	0xFF4
  3632                           prodl	equ	0xFF3
  3633                           intcon	equ	0xFF2
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           postdec1	equ	0xFE5
  3637                           fsr1l	equ	0xFE1
  3638                           postinc2	equ	0xFDE
  3639                           postdec2	equ	0xFDD
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function __doprnt *****************
  3645 ;; Defined at:
  3646 ;;		line 458 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\doprnt.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  pb              2   40[COMRAM] PTR struct __prbuf
  3649 ;;		 -> sprintf@pb(5), printf@pb(5), 
  3650 ;;  f               2   42[COMRAM] PTR const unsigned char 
  3651 ;;		 -> STR_7(26), STR_6(10), STR_5(29), STR_4(12), 
  3652 ;;		 -> STR_1(58), 
  3653 ;;  ap              2   44[COMRAM] PTR PTR void 
  3654 ;;		 -> sprintf@ap(2), printf@ap(2), 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  idx             1    0[BANK0 ] unsigned char 
  3657 ;;  val             4    6[BANK0 ] unsigned long 
  3658 ;;  tmpval          4    0        struct .
  3659 ;;  prec            2   10[BANK0 ] int 
  3660 ;;  cp              2    3[BANK0 ] PTR const unsigned char 
  3661 ;;		 -> ?_sprintf(2), ?_printf(2), STR_8(7), DNS_Lookup@str(80), 
  3662 ;;		 -> makeIpv4AddresstoStr@ip_str(15), NULL(0), 
  3663 ;;  len             2    1[BANK0 ] unsigned int 
  3664 ;;  c               1   12[BANK0 ] char 
  3665 ;;  flag            1    5[BANK0 ] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  2   40[COMRAM] int 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3675 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;Total ram usage:       23 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    5
  3682 ;; This function calls:
  3683 ;;		Absolute function
  3684 ;;		___lldiv
  3685 ;;		___llmod
  3686 ;;		___wmul
  3687 ;;		_isdigit
  3688 ;;		_putch
  3689 ;; This function is called by:
  3690 ;;		_printf
  3691 ;;		_sprintf
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text18
  3696  010000                     __ptext18:
  3697                           	opt stack 0
  3698  010000                     __doprnt:
  3699                           	opt stack 21
  3700                           
  3701                           ;doprnt.c: 499: signed char c;
  3702                           ;doprnt.c: 504: int prec;
  3703                           ;doprnt.c: 508: unsigned char flag;
  3704                           ;doprnt.c: 523: union {
  3705                           ;doprnt.c: 524: unsigned long vd;
  3706                           ;doprnt.c: 525: double integ;
  3707                           ;doprnt.c: 526: } tmpval;
  3708                           ;doprnt.c: 528: unsigned long val;
  3709                           ;doprnt.c: 529: unsigned len;
  3710                           ;doprnt.c: 530: const char * cp;
  3711                           ;doprnt.c: 536: while(c = *f++) {
  3712                           
  3713                           ;incstack = 0
  3714  010000  D348               	goto	u8100
  3715  010002                     
  3716                           ;doprnt.c: 538: if(c != '%')
  3717  010002  0E25               	movlw	37
  3718  010004  0100               	movlb	0	; () banked
  3719  010006  196C               	xorwf	__doprnt@c& (0+255),w,b
  3720  010008  B4D8               	btfsc	status,2,c
  3721  01000A  D034               	goto	l1541
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;doprnt.c: 540: {
  3725                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  3726  01000C  EE20 F002          	lfsr	2,2
  3727  010010  5029               	movf	__doprnt@pb,w,c
  3728  010012  26D9               	addwf	fsr2l,f,c
  3729  010014  502A               	movf	__doprnt@pb+1,w,c
  3730  010016  22DA               	addwfc	fsr2h,f,c
  3731  010018  50DE               	movf	postinc2,w,c
  3732  01001A  10DE               	iorwf	postinc2,w,c
  3733  01001C  10DE               	iorwf	postinc2,w,c
  3734  01001E  B4D8               	btfsc	status,2,c
  3735  010020  D013               	goto	l1542
  3736                           
  3737                           ; BSR set to: 0
  3738  010022  EE20 F002          	lfsr	2,2
  3739  010026  5029               	movf	__doprnt@pb,w,c
  3740  010028  26D9               	addwf	fsr2l,f,c
  3741  01002A  502A               	movf	__doprnt@pb+1,w,c
  3742  01002C  22DA               	addwfc	fsr2h,f,c
  3743  01002E  D801               	call	u7788
  3744  010030  D330               	goto	u8100
  3745  010032                     u7788:
  3746  010032  0005               	push	
  3747  010034  6EFA               	movwf	pclath,c
  3748  010036  50DE               	movf	postinc2,w,c
  3749  010038  6EFD               	movwf	tosl,c
  3750  01003A  50DE               	movf	postinc2,w,c
  3751  01003C  6EFE               	movwf	tosh,c
  3752  01003E  50DE               	movf	postinc2,w,c
  3753  010040  6EFF               	movwf	tosu,c
  3754  010042  50FA               	movf	pclath,w,c
  3755  010044  516C               	movf	__doprnt@c& (0+255),w,b
  3756  010046  0012               	return		;indir
  3757  010048                     l1542:
  3758  010048  C029  FFD9         	movff	__doprnt@pb,fsr2l
  3759  01004C  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3760  010050  CFDE F02F          	movff	postinc2,??__doprnt
  3761  010054  CFDD F030          	movff	postdec2,??__doprnt+1
  3762  010058  C02F  FFD9         	movff	??__doprnt,fsr2l
  3763  01005C  C030  FFDA         	movff	??__doprnt+1,fsr2h
  3764  010060  C06C  FFDF         	movff	__doprnt@c,indf2
  3765  010064  C029  FFD9         	movff	__doprnt@pb,fsr2l
  3766  010068  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3767  01006C  2ADE               	incf	postinc2,f,c
  3768  01006E  0E00               	movlw	0
  3769  010070  22DD               	addwfc	postdec2,f,c
  3770                           
  3771                           ;doprnt.c: 542: continue;
  3772  010072  D30F               	goto	u8100
  3773  010074                     l1541:
  3774                           
  3775                           ;doprnt.c: 543: }
  3776                           ;doprnt.c: 548: flag = 0;
  3777  010074  0E00               	movlw	0
  3778  010076  0100               	movlb	0	; () banked
  3779  010078  6F65               	movwf	__doprnt@flag& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;doprnt.c: 611: if(*f == '.') {
  3783  01007A  C02B  FFF6         	movff	__doprnt@f,tblptrl
  3784  01007E  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  3785  010082                     	if	0	;tblptru may be non-zero
  3786  010082                     	endif
  3787  010082                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3788  010082  0E00               	movlw	low (__mediumconst shr (0+16))
  3789  010084  6EF8               	movwf	tblptru,c
  3790  010086                     	endif
  3791  010086  0008               	tblrd		*
  3792  010088  50F5               	movf	tablat,w,c
  3793  01008A  0A2E               	xorlw	46
  3794  01008C  A4D8               	btfss	status,2,c
  3795  01008E  D032               	goto	l1544
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;doprnt.c: 613: f++;
  3799  010090  4A2B               	infsnz	__doprnt@f,f,c
  3800  010092  2A2C               	incf	__doprnt@f+1,f,c
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;doprnt.c: 620: {
  3804                           ;doprnt.c: 621: prec = 0;
  3805  010094  0E00               	movlw	0
  3806  010096  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  3807  010098  0E00               	movlw	0
  3808  01009A  6F6A               	movwf	__doprnt@prec& (0+255),b
  3809                           
  3810                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3811  01009C  D01E               	goto	l1545
  3812  01009E                     
  3813                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3814                           
  3815                           ; BSR set to: 0
  3816  01009E  C06A  F013         	movff	__doprnt@prec,___wmul@multiplier
  3817  0100A2  C06B  F014         	movff	__doprnt@prec+1,___wmul@multiplier+1
  3818  0100A6  0E00               	movlw	0
  3819  0100A8  6E16               	movwf	___wmul@multiplicand+1,c
  3820  0100AA  0E0A               	movlw	10
  3821  0100AC  6E15               	movwf	___wmul@multiplicand,c
  3822  0100AE  ECBD  F0A1         	call	___wmul
  3823  0100B2  C02B  FFF6         	movff	__doprnt@f,tblptrl
  3824  0100B6  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  3825  0100BA                     	if	0	;tblptru may be non-zero
  3826  0100BA                     	endif
  3827  0100BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3828  0100BA  0E00               	movlw	low (__mediumconst shr (0+16))
  3829  0100BC  6EF8               	movwf	tblptru,c
  3830  0100BE                     	endif
  3831  0100BE  0008               	tblrd		*
  3832  0100C0  50F5               	movf	tablat,w,c
  3833  0100C2  2613               	addwf	?___wmul,f,c
  3834  0100C4  0E00               	movlw	0
  3835  0100C6  2214               	addwfc	?___wmul+1,f,c
  3836  0100C8  0ED0               	movlw	208
  3837  0100CA  2413               	addwf	?___wmul,w,c
  3838  0100CC  0100               	movlb	0	; () banked
  3839  0100CE  6F6A               	movwf	__doprnt@prec& (0+255),b
  3840  0100D0  0EFF               	movlw	255
  3841  0100D2  2014               	addwfc	?___wmul+1,w,c
  3842  0100D4  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  3843                           
  3844                           ; BSR set to: 0
  3845  0100D6  4A2B               	infsnz	__doprnt@f,f,c
  3846  0100D8  2A2C               	incf	__doprnt@f+1,f,c
  3847  0100DA                     l1545:
  3848                           
  3849                           ; BSR set to: 0
  3850                           
  3851                           ; BSR set to: 0
  3852  0100DA  C02B  FFF6         	movff	__doprnt@f,tblptrl
  3853  0100DE  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  3854  0100E2                     	if	0	;tblptru may be non-zero
  3855  0100E2                     	endif
  3856  0100E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3857  0100E2  0E00               	movlw	low (__mediumconst shr (0+16))
  3858  0100E4  6EF8               	movwf	tblptru,c
  3859  0100E6                     	endif
  3860  0100E6  0008               	tblrd		*
  3861  0100E8  50F5               	movf	tablat,w,c
  3862  0100EA  EC15  F0A2         	call	_isdigit
  3863  0100EE  A0D8               	btfss	status,0,c
  3864  0100F0  D0BF               	goto	l1550
  3865  0100F2  D7D5               	goto	l1546
  3866  0100F4                     l1544:
  3867                           
  3868                           ;doprnt.c: 626: prec = 0;
  3869  0100F4  0E00               	movlw	0
  3870  0100F6  0100               	movlb	0	; () banked
  3871  0100F8  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  3872  0100FA  0E00               	movlw	0
  3873  0100FC  6F6A               	movwf	__doprnt@prec& (0+255),b
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;doprnt.c: 635: switch(c = *f++) {
  3877                           
  3878                           ;doprnt.c: 630: }
  3879                           ;doprnt.c: 633: loop:
  3880                           
  3881                           ; BSR set to: 0
  3882  0100FE  D0B8               	goto	l1550
  3883  010100                     
  3884                           ; BSR set to: 0
  3885                           ;doprnt.c: 643: flag |= 0x10;
  3886                           
  3887                           ; BSR set to: 0
  3888  010100  8965               	bsf	__doprnt@flag& (0+255),4,b
  3889                           
  3890                           ;doprnt.c: 644: goto loop;
  3891  010102  D0B6               	goto	l1550
  3892  010104                     
  3893                           ; BSR set to: 0
  3894                           ;doprnt.c: 718: case 'x':
  3895                           ;doprnt.c: 721: flag |= 0x80;
  3896                           
  3897                           ; BSR set to: 0
  3898                           
  3899                           ; BSR set to: 0
  3900  010104  8F65               	bsf	__doprnt@flag& (0+255),7,b
  3901                           
  3902                           ;doprnt.c: 723: break;
  3903  010106  D0DA               	goto	l1556
  3904  010108                     
  3905                           ; BSR set to: 0
  3906                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3907                           
  3908                           ; BSR set to: 0
  3909  010108  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  3910  01010C  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3911  010110  CFDF F02F          	movff	indf2,??__doprnt
  3912  010114  0E02               	movlw	2
  3913  010116  26DE               	addwf	postinc2,f,c
  3914  010118  CFDF F030          	movff	indf2,??__doprnt+1
  3915  01011C  0E00               	movlw	0
  3916  01011E  22DD               	addwfc	postdec2,f,c
  3917  010120  C02F  FFD9         	movff	??__doprnt,fsr2l
  3918  010124  C030  FFDA         	movff	??__doprnt+1,fsr2h
  3919  010128  CFDE F063          	movff	postinc2,__doprnt@cp
  3920  01012C  CFDD F064          	movff	postdec2,__doprnt@cp+1
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;doprnt.c: 740: if(!cp)
  3924  010130  5163               	movf	__doprnt@cp& (0+255),w,b
  3925  010132  1164               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  3926  010134  A4D8               	btfss	status,2,c
  3927  010136  D004               	goto	l1560
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;doprnt.c: 741: cp = "(null)";
  3931  010138  0EF6               	movlw	low STR_8
  3932  01013A  6F63               	movwf	__doprnt@cp& (0+255),b
  3933  01013C  0EFF               	movlw	high STR_8
  3934  01013E  6F64               	movwf	(__doprnt@cp+1)& (0+255),b
  3935  010140                     l1560:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;doprnt.c: 745: len = 0;
  3939                           
  3940                           ; BSR set to: 0
  3941  010140  0E00               	movlw	0
  3942  010142  6F62               	movwf	(__doprnt@len+1)& (0+255),b
  3943  010144  0E00               	movlw	0
  3944  010146  6F61               	movwf	__doprnt@len& (0+255),b
  3945                           
  3946                           ;doprnt.c: 746: while(cp[len])
  3947  010148  D003               	goto	l1561
  3948  01014A                     
  3949                           ;doprnt.c: 747: len++;
  3950                           
  3951                           ; BSR set to: 0
  3952  01014A  0100               	movlb	0	; () banked
  3953  01014C  4B61               	infsnz	__doprnt@len& (0+255),f,b
  3954  01014E  2B62               	incf	(__doprnt@len+1)& (0+255),f,b
  3955  010150                     l1561:
  3956                           
  3957                           ; BSR set to: 0
  3958                           
  3959                           ; BSR set to: 0
  3960  010150  5161               	movf	__doprnt@len& (0+255),w,b
  3961  010152  2563               	addwf	__doprnt@cp& (0+255),w,b
  3962  010154  6E2F               	movwf	??__doprnt& (0+255),c
  3963  010156  5162               	movf	(__doprnt@len+1)& (0+255),w,b
  3964  010158  2164               	addwfc	(__doprnt@cp+1)& (0+255),w,b
  3965  01015A  6E30               	movwf	(??__doprnt+1)& (0+255),c
  3966  01015C  C02F  FFF6         	movff	??__doprnt,tblptrl
  3967  010160  C030  FFF7         	movff	??__doprnt+1,tblptrh
  3968  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  3969  010166  6EF8               	movwf	tblptru,c
  3970  010168  0E0F               	movlw	(high __ramtop+-1)
  3971  01016A  64F7               	cpfsgt	tblptrh,c
  3972  01016C  D003               	bra	u7827
  3973  01016E  0008               	tblrd		*
  3974  010170  50F5               	movf	tablat,w,c
  3975  010172  D005               	bra	u7820
  3976  010174                     u7827:
  3977  010174  CFF6 FFE9          	movff	tblptrl,fsr0l
  3978  010178  CFF7 FFEA          	movff	tblptrh,fsr0h
  3979  01017C  50EF               	movf	indf0,w,c
  3980  01017E                     u7820:
  3981  01017E  0900               	iorlw	0
  3982  010180  A4D8               	btfss	status,2,c
  3983  010182  D7E3               	goto	l1562
  3984                           
  3985                           ;doprnt.c: 753: if(prec && prec < len)
  3986  010184  0100               	movlb	0	; () banked
  3987  010186  516A               	movf	__doprnt@prec& (0+255),w,b
  3988  010188  116B               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3989  01018A  B4D8               	btfsc	status,2,c
  3990  01018C  D065               	goto	l1568
  3991                           
  3992                           ; BSR set to: 0
  3993  01018E  5161               	movf	__doprnt@len& (0+255),w,b
  3994  010190  5D6A               	subwf	__doprnt@prec& (0+255),w,b
  3995  010192  5162               	movf	(__doprnt@len+1)& (0+255),w,b
  3996  010194  596B               	subwfb	(__doprnt@prec+1)& (0+255),w,b
  3997  010196  B0D8               	btfsc	status,0,c
  3998  010198  D05F               	goto	l1568
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;doprnt.c: 754: len = prec;
  4002  01019A  C06A  F061         	movff	__doprnt@prec,__doprnt@len
  4003  01019E  C06B  F062         	movff	__doprnt@prec+1,__doprnt@len+1
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;doprnt.c: 767: while(len--)
  4007  0101A2  D05A               	goto	l1568
  4008  0101A4                     l8418:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4012  0101A4  EE20 F002          	lfsr	2,2
  4013  0101A8  5029               	movf	__doprnt@pb,w,c
  4014  0101AA  26D9               	addwf	fsr2l,f,c
  4015  0101AC  502A               	movf	__doprnt@pb+1,w,c
  4016  0101AE  22DA               	addwfc	fsr2h,f,c
  4017  0101B0  50DE               	movf	postinc2,w,c
  4018  0101B2  10DE               	iorwf	postinc2,w,c
  4019  0101B4  10DE               	iorwf	postinc2,w,c
  4020  0101B6  B4D8               	btfsc	status,2,c
  4021  0101B8  D027               	goto	l1567
  4022                           
  4023                           ; BSR set to: 0
  4024  0101BA  EE20 F002          	lfsr	2,2
  4025  0101BE  5029               	movf	__doprnt@pb,w,c
  4026  0101C0  26D9               	addwf	fsr2l,f,c
  4027  0101C2  502A               	movf	__doprnt@pb+1,w,c
  4028  0101C4  22DA               	addwfc	fsr2h,f,c
  4029  0101C6  D801               	call	u7878
  4030  0101C8  D01B               	goto	u7879
  4031  0101CA                     u7878:
  4032  0101CA  0005               	push	
  4033  0101CC  6EFA               	movwf	pclath,c
  4034  0101CE  50DE               	movf	postinc2,w,c
  4035  0101D0  6EFD               	movwf	tosl,c
  4036  0101D2  50DE               	movf	postinc2,w,c
  4037  0101D4  6EFE               	movwf	tosh,c
  4038  0101D6  50DE               	movf	postinc2,w,c
  4039  0101D8  6EFF               	movwf	tosu,c
  4040  0101DA  50FA               	movf	pclath,w,c
  4041  0101DC  C063  FFF6         	movff	__doprnt@cp,tblptrl
  4042  0101E0  C064  FFF7         	movff	__doprnt@cp+1,tblptrh
  4043  0101E4  0E00               	movlw	low (__mediumconst shr (0+16))
  4044  0101E6  6EF8               	movwf	tblptru,c
  4045  0101E8  0E0F               	movlw	(high __ramtop+-1)
  4046  0101EA  64F7               	cpfsgt	tblptrh,c
  4047  0101EC  D003               	bra	u7887
  4048  0101EE  0008               	tblrd		*
  4049  0101F0  50F5               	movf	tablat,w,c
  4050  0101F2  D005               	bra	u7880
  4051  0101F4                     u7887:
  4052  0101F4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4053  0101F8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4054  0101FC  50EF               	movf	indf0,w,c
  4055  0101FE                     u7880:
  4056  0101FE  0012               	return		;indir
  4057  010200                     u7879:
  4058  010200  0100               	movlb	0	; () banked
  4059  010202  4B63               	infsnz	__doprnt@cp& (0+255),f,b
  4060  010204  2B64               	incf	(__doprnt@cp+1)& (0+255),f,b
  4061  010206  D028               	goto	l1568
  4062  010208                     l1567:
  4063                           
  4064                           ; BSR set to: 0
  4065                           
  4066                           ; BSR set to: 0
  4067  010208  C063  FFF6         	movff	__doprnt@cp,tblptrl
  4068  01020C  C064  FFF7         	movff	__doprnt@cp+1,tblptrh
  4069  010210  0E00               	movlw	low (__mediumconst shr (0+16))
  4070  010212  6EF8               	movwf	tblptru,c
  4071  010214  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4072  010218  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4073  01021C  CFDE F02F          	movff	postinc2,??__doprnt
  4074  010220  CFDD F030          	movff	postdec2,??__doprnt+1
  4075  010224  C02F  FFD9         	movff	??__doprnt,fsr2l
  4076  010228  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4077  01022C  0E0F               	movlw	(high __ramtop+-1)
  4078  01022E  64F7               	cpfsgt	tblptrh,c
  4079  010230  D003               	bra	u7897
  4080  010232  0008               	tblrd		*
  4081  010234  50F5               	movf	tablat,w,c
  4082  010236  D005               	bra	u7890
  4083  010238                     u7897:
  4084  010238  CFF6 FFE9          	movff	tblptrl,fsr0l
  4085  01023C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4086  010240  50EF               	movf	indf0,w,c
  4087  010242                     u7890:
  4088  010242  6EDF               	movwf	indf2,c
  4089  010244  0100               	movlb	0	; () banked
  4090  010246  4B63               	infsnz	__doprnt@cp& (0+255),f,b
  4091  010248  2B64               	incf	(__doprnt@cp+1)& (0+255),f,b
  4092                           
  4093                           ; BSR set to: 0
  4094  01024A  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4095  01024E  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4096  010252  2ADE               	incf	postinc2,f,c
  4097  010254  0E00               	movlw	0
  4098  010256  22DD               	addwfc	postdec2,f,c
  4099  010258                     l1568:
  4100                           
  4101                           ; BSR set to: 0
  4102                           
  4103                           ; BSR set to: 0
  4104                           
  4105                           ; BSR set to: 0
  4106  010258  0761               	decf	__doprnt@len& (0+255),f,b
  4107  01025A  A0D8               	btfss	status,0,c
  4108  01025C  0762               	decf	(__doprnt@len+1)& (0+255),f,b
  4109  01025E  2961               	incf	__doprnt@len& (0+255),w,b
  4110  010260  E1A1               	bnz	l8418
  4111  010262  2962               	incf	(__doprnt@len+1)& (0+255),w,b
  4112  010264  B4D8               	btfsc	status,2,c
  4113  010266  D215               	goto	u8100
  4114  010268  D79D               	goto	l1566
  4115  01026A                     
  4116                           ; BSR set to: 0
  4117                           ;doprnt.c: 818: flag |= 0xC0;
  4118                           
  4119                           ; BSR set to: 0
  4120  01026A  0EC0               	movlw	192
  4121  01026C  1365               	iorwf	__doprnt@flag& (0+255),f,b
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;doprnt.c: 822: }
  4125                           
  4126                           ;doprnt.c: 819: break;
  4127  01026E  D026               	goto	l1556
  4128  010270                     l1550:
  4129                           
  4130                           ; BSR set to: 0
  4131  010270  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4132  010274  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4133  010278  4A2B               	infsnz	__doprnt@f,f,c
  4134  01027A  2A2C               	incf	__doprnt@f+1,f,c
  4135  01027C                     	if	0	;tblptru may be non-zero
  4136  01027C                     	endif
  4137  01027C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4138  01027C  0E00               	movlw	low (__mediumconst shr (0+16))
  4139  01027E  6EF8               	movwf	tblptru,c
  4140  010280                     	endif
  4141  010280  0008               	tblrd		*
  4142  010282  CFF5 F06C          	movff	tablat,__doprnt@c
  4143  010286  0100               	movlb	0	; () banked
  4144  010288  516C               	movf	__doprnt@c& (0+255),w,b
  4145                           
  4146                           ; Switch size 1, requested type "space"
  4147                           ; Number of cases is 8, Range of values is 0 to 120
  4148                           ; switch strategies available:
  4149                           ; Name         Instructions Cycles
  4150                           ; simple_byte           25    13 (average)
  4151                           ;	Chosen strategy is simple_byte
  4152  01028A  0A00               	xorlw	0	; case 0
  4153  01028C  B4D8               	btfsc	status,2,c
  4154  01028E  D210               	goto	u8110
  4155  010290  0A58               	xorlw	88	; case 88
  4156  010292  B4D8               	btfsc	status,2,c
  4157  010294  D737               	goto	l1557
  4158  010296  0A3C               	xorlw	60	; case 100
  4159  010298  B4D8               	btfsc	status,2,c
  4160  01029A  D010               	goto	l1556
  4161  01029C  0A0D               	xorlw	13	; case 105
  4162  01029E  B4D8               	btfsc	status,2,c
  4163  0102A0  D00D               	goto	l1556
  4164  0102A2  0A05               	xorlw	5	; case 108
  4165  0102A4  B4D8               	btfsc	status,2,c
  4166  0102A6  D72C               	goto	l1553
  4167  0102A8  0A1F               	xorlw	31	; case 115
  4168  0102AA  B4D8               	btfsc	status,2,c
  4169  0102AC  D72D               	goto	l1559
  4170  0102AE  0A06               	xorlw	6	; case 117
  4171  0102B0  B4D8               	btfsc	status,2,c
  4172  0102B2  D7DB               	goto	l1571
  4173  0102B4  0A0D               	xorlw	13	; case 120
  4174  0102B6  B4D8               	btfsc	status,2,c
  4175  0102B8  D725               	goto	l1557
  4176  0102BA  D1EB               	goto	u8100
  4177  0102BC                     l1556:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  4181                           
  4182                           ; BSR set to: 0
  4183  0102BC  C065  F02F         	movff	__doprnt@flag,??__doprnt
  4184  0102C0  0EC0               	movlw	192
  4185  0102C2  162F               	andwf	??__doprnt,f,c
  4186  0102C4  A4D8               	btfss	status,2,c
  4187  0102C6  D041               	goto	l1572
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;doprnt.c: 1253: {
  4191                           ;doprnt.c: 1255: if(flag & 0x10)
  4192  0102C8  A965               	btfss	__doprnt@flag& (0+255),4,b
  4193  0102CA  D019               	goto	l1573
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  4197  0102CC  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4198  0102D0  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4199  0102D4  CFDF F02F          	movff	indf2,??__doprnt
  4200  0102D8  0E04               	movlw	4
  4201  0102DA  26DE               	addwf	postinc2,f,c
  4202  0102DC  CFDF F030          	movff	indf2,??__doprnt+1
  4203  0102E0  0E00               	movlw	0
  4204  0102E2  22DD               	addwfc	postdec2,f,c
  4205  0102E4  C02F  FFD9         	movff	??__doprnt,fsr2l
  4206  0102E8  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4207  0102EC  CFDE F066          	movff	postinc2,__doprnt@val
  4208  0102F0  CFDE F067          	movff	postinc2,__doprnt@val+1
  4209  0102F4  CFDE F068          	movff	postinc2,__doprnt@val+2
  4210  0102F8  CFDE F069          	movff	postinc2,__doprnt@val+3
  4211  0102FC  D019               	goto	l1574
  4212  0102FE                     l1573:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;doprnt.c: 1257: else
  4216                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4217                           
  4218                           ; BSR set to: 0
  4219  0102FE  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4220  010302  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4221  010306  CFDF F02F          	movff	indf2,??__doprnt
  4222  01030A  0E02               	movlw	2
  4223  01030C  26DE               	addwf	postinc2,f,c
  4224  01030E  CFDF F030          	movff	indf2,??__doprnt+1
  4225  010312  0E00               	movlw	0
  4226  010314  22DD               	addwfc	postdec2,f,c
  4227  010316  C02F  FFD9         	movff	??__doprnt,fsr2l
  4228  01031A  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4229  01031E  CFDE F066          	movff	postinc2,__doprnt@val
  4230  010322  CFDD F067          	movff	postdec2,__doprnt@val+1
  4231  010326  0E00               	movlw	0
  4232  010328  BF67               	btfsc	(__doprnt@val+1)& (0+255),7,b
  4233  01032A  0EFF               	movlw	-1
  4234  01032C  6F68               	movwf	(__doprnt@val+2)& (0+255),b
  4235  01032E  6F69               	movwf	(__doprnt@val+3)& (0+255),b
  4236  010330                     l1574:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;doprnt.c: 1261: if((long)val < 0) {
  4240                           
  4241                           ; BSR set to: 0
  4242  010330  AF69               	btfss	(__doprnt@val+3)& (0+255),7,b
  4243  010332  D040               	goto	l1578
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;doprnt.c: 1262: flag |= 0x03;
  4247  010334  0E03               	movlw	3
  4248  010336  1365               	iorwf	__doprnt@flag& (0+255),f,b
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;doprnt.c: 1263: val = -val;
  4252  010338  1F69               	comf	(__doprnt@val+3)& (0+255),f,b
  4253  01033A  1F68               	comf	(__doprnt@val+2)& (0+255),f,b
  4254  01033C  1F67               	comf	(__doprnt@val+1)& (0+255),f,b
  4255  01033E  6D66               	negf	__doprnt@val& (0+255),b
  4256  010340  0E00               	movlw	0
  4257  010342  2367               	addwfc	(__doprnt@val+1)& (0+255),f,b
  4258  010344  2368               	addwfc	(__doprnt@val+2)& (0+255),f,b
  4259  010346  2369               	addwfc	(__doprnt@val+3)& (0+255),f,b
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;doprnt.c: 1264: }
  4263                           ;doprnt.c: 1266: }
  4264  010348  D035               	goto	l1578
  4265  01034A                     l1572:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;doprnt.c: 1268: else
  4269                           ;doprnt.c: 1273: {
  4270                           ;doprnt.c: 1281: if(flag & 0x10)
  4271  01034A  A965               	btfss	__doprnt@flag& (0+255),4,b
  4272  01034C  D019               	goto	l1577
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4276  01034E  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4277  010352  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4278  010356  CFDF F02F          	movff	indf2,??__doprnt
  4279  01035A  0E04               	movlw	4
  4280  01035C  26DE               	addwf	postinc2,f,c
  4281  01035E  CFDF F030          	movff	indf2,??__doprnt+1
  4282  010362  0E00               	movlw	0
  4283  010364  22DD               	addwfc	postdec2,f,c
  4284  010366  C02F  FFD9         	movff	??__doprnt,fsr2l
  4285  01036A  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4286  01036E  CFDE F066          	movff	postinc2,__doprnt@val
  4287  010372  CFDE F067          	movff	postinc2,__doprnt@val+1
  4288  010376  CFDE F068          	movff	postinc2,__doprnt@val+2
  4289  01037A  CFDE F069          	movff	postinc2,__doprnt@val+3
  4290  01037E  D01A               	goto	l1578
  4291  010380                     l1577:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;doprnt.c: 1283: else
  4295                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4296                           
  4297                           ; BSR set to: 0
  4298  010380  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4299  010384  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4300  010388  CFDF F02F          	movff	indf2,??__doprnt
  4301  01038C  0E02               	movlw	2
  4302  01038E  26DE               	addwf	postinc2,f,c
  4303  010390  CFDF F030          	movff	indf2,??__doprnt+1
  4304  010394  0E00               	movlw	0
  4305  010396  22DD               	addwfc	postdec2,f,c
  4306  010398  C02F  FFD9         	movff	??__doprnt,fsr2l
  4307  01039C  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4308  0103A0  CFDE F031          	movff	postinc2,??__doprnt+2
  4309  0103A4  CFDD F032          	movff	postdec2,??__doprnt+3
  4310  0103A8  C031  F066         	movff	??__doprnt+2,__doprnt@val
  4311  0103AC  C032  F067         	movff	??__doprnt+3,__doprnt@val+1
  4312  0103B0  6B68               	clrf	(__doprnt@val+2)& (0+255),b
  4313  0103B2  6B69               	clrf	(__doprnt@val+3)& (0+255),b
  4314  0103B4                     l1578:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;doprnt.c: 1287: }
  4318                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4319                           
  4320                           ; BSR set to: 0
  4321                           
  4322                           ; BSR set to: 0
  4323  0103B4  516A               	movf	__doprnt@prec& (0+255),w,b
  4324  0103B6  116B               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  4325  0103B8  A4D8               	btfss	status,2,c
  4326  0103BA  D04B               	goto	l1580
  4327                           
  4328                           ; BSR set to: 0
  4329  0103BC  5166               	movf	__doprnt@val& (0+255),w,b
  4330  0103BE  1167               	iorwf	(__doprnt@val+1)& (0+255),w,b
  4331  0103C0  1168               	iorwf	(__doprnt@val+2)& (0+255),w,b
  4332  0103C2  1169               	iorwf	(__doprnt@val+3)& (0+255),w,b
  4333  0103C4  A4D8               	btfss	status,2,c
  4334  0103C6  D045               	goto	l1580
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;doprnt.c: 1291: prec++;
  4338  0103C8  4B6A               	infsnz	__doprnt@prec& (0+255),f,b
  4339  0103CA  2B6B               	incf	(__doprnt@prec+1)& (0+255),f,b
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  4343  0103CC  D042               	goto	l1580
  4344  0103CE                     
  4345                           ; BSR set to: 0
  4346                           ;doprnt.c: 1302: case 0xC0:
  4347                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4348                           
  4349                           ; BSR set to: 0
  4350                           
  4351                           ; BSR set to: 0
  4352  0103CE  0E01               	movlw	1
  4353  0103D0  6F6C               	movwf	__doprnt@c& (0+255),b
  4354  0103D2                     l8464:
  4355                           
  4356                           ; BSR set to: 0
  4357  0103D2  0E0A               	movlw	10
  4358  0103D4  196C               	xorwf	__doprnt@c& (0+255),w,b
  4359  0103D6  B4D8               	btfsc	status,2,c
  4360  0103D8  D047               	goto	l1586
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;doprnt.c: 1306: if(val < dpowers[c])
  4364                           
  4365                           ; BSR set to: 0
  4366                           
  4367                           ; BSR set to: 0
  4368  0103DA  516C               	movf	__doprnt@c& (0+255),w,b
  4369  0103DC  0D04               	mullw	4
  4370  0103DE  0EDF               	movlw	low _dpowers
  4371  0103E0  24F3               	addwf	prodl,w,c
  4372  0103E2  6EF6               	movwf	tblptrl,c
  4373  0103E4  0EFE               	movlw	high _dpowers
  4374  0103E6  20F4               	addwfc	prodh,w,c
  4375  0103E8  6EF7               	movwf	tblptrh,c
  4376  0103EA                     	if	1	;There are 3 active tblptr bytes
  4377  0103EA  6AF8               	clrf	tblptru,c
  4378  0103EC  0E00               	movlw	low (__mediumconst shr (0+16))
  4379  0103EE  22F8               	addwfc	tblptru,f,c
  4380  0103F0                     	endif
  4381  0103F0  0009               	tblrd		*+
  4382  0103F2  50F5               	movf	tablat,w,c
  4383  0103F4  5D66               	subwf	__doprnt@val& (0+255),w,b
  4384  0103F6  0009               	tblrd		*+
  4385  0103F8  50F5               	movf	tablat,w,c
  4386  0103FA  5967               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4387  0103FC  0009               	tblrd		*+
  4388  0103FE  50F5               	movf	tablat,w,c
  4389  010400  5968               	subwfb	(__doprnt@val+2)& (0+255),w,b
  4390  010402  0009               	tblrd		*+
  4391  010404  50F5               	movf	tablat,w,c
  4392  010406  5969               	subwfb	(__doprnt@val+3)& (0+255),w,b
  4393  010408  A0D8               	btfss	status,0,c
  4394  01040A  D02E               	goto	l1586
  4395                           
  4396                           ; BSR set to: 0
  4397                           
  4398                           ; BSR set to: 0
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;doprnt.c: 1307: break;
  4402  01040C  2B6C               	incf	__doprnt@c& (0+255),f,b
  4403  01040E  D7E1               	goto	l8464
  4404  010410                     
  4405                           ; BSR set to: 0
  4406                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4407                           
  4408                           ; BSR set to: 0
  4409  010410  0E01               	movlw	1
  4410  010412  6F6C               	movwf	__doprnt@c& (0+255),b
  4411  010414                     l8478:
  4412                           
  4413                           ; BSR set to: 0
  4414  010414  0E08               	movlw	8
  4415  010416  196C               	xorwf	__doprnt@c& (0+255),w,b
  4416  010418  B4D8               	btfsc	status,2,c
  4417  01041A  D026               	goto	l1586
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4421                           
  4422                           ; BSR set to: 0
  4423                           
  4424                           ; BSR set to: 0
  4425  01041C  516C               	movf	__doprnt@c& (0+255),w,b
  4426  01041E  0D04               	mullw	4
  4427  010420  0E07               	movlw	low _hexpowers
  4428  010422  24F3               	addwf	prodl,w,c
  4429  010424  6EF6               	movwf	tblptrl,c
  4430  010426  0EFF               	movlw	high _hexpowers
  4431  010428  20F4               	addwfc	prodh,w,c
  4432  01042A  6EF7               	movwf	tblptrh,c
  4433  01042C                     	if	1	;There are 3 active tblptr bytes
  4434  01042C  6AF8               	clrf	tblptru,c
  4435  01042E  0E00               	movlw	low (__mediumconst shr (0+16))
  4436  010430  22F8               	addwfc	tblptru,f,c
  4437  010432                     	endif
  4438  010432  0009               	tblrd		*+
  4439  010434  50F5               	movf	tablat,w,c
  4440  010436  5D66               	subwf	__doprnt@val& (0+255),w,b
  4441  010438  0009               	tblrd		*+
  4442  01043A  50F5               	movf	tablat,w,c
  4443  01043C  5967               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4444  01043E  0009               	tblrd		*+
  4445  010440  50F5               	movf	tablat,w,c
  4446  010442  5968               	subwfb	(__doprnt@val+2)& (0+255),w,b
  4447  010444  0009               	tblrd		*+
  4448  010446  50F5               	movf	tablat,w,c
  4449  010448  5969               	subwfb	(__doprnt@val+3)& (0+255),w,b
  4450  01044A  A0D8               	btfss	status,0,c
  4451  01044C  D00D               	goto	l1586
  4452                           
  4453                           ; BSR set to: 0
  4454                           
  4455                           ; BSR set to: 0
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;doprnt.c: 1318: break;
  4459  01044E  2B6C               	incf	__doprnt@c& (0+255),f,b
  4460  010450  D7E1               	goto	l8478
  4461  010452                     l1580:
  4462                           
  4463                           ; BSR set to: 0
  4464                           
  4465                           ; BSR set to: 0
  4466  010452  5165               	movf	__doprnt@flag& (0+255),w,b
  4467  010454  0BC0               	andlw	192
  4468                           
  4469                           ; Switch size 1, requested type "space"
  4470                           ; Number of cases is 3, Range of values is 0 to 192
  4471                           ; switch strategies available:
  4472                           ; Name         Instructions Cycles
  4473                           ; simple_byte           10     6 (average)
  4474                           ;	Chosen strategy is simple_byte
  4475  010456  0A00               	xorlw	0	; case 0
  4476  010458  B4D8               	btfsc	status,2,c
  4477  01045A  D7B9               	goto	l1581
  4478  01045C  0A80               	xorlw	128	; case 128
  4479  01045E  B4D8               	btfsc	status,2,c
  4480  010460  D7D7               	goto	l1587
  4481  010462  0A40               	xorlw	64	; case 192
  4482  010464  B4D8               	btfsc	status,2,c
  4483  010466  D7B3               	goto	l1581
  4484  010468                     l1586:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;doprnt.c: 1339: if(c < prec)
  4488                           
  4489                           ; BSR set to: 0
  4490  010468  0E80               	movlw	128
  4491  01046A  BF6C               	btfsc	__doprnt@c& (0+255),7,b
  4492  01046C  0E7F               	movlw	127
  4493  01046E  6E2F               	movwf	??__doprnt& (0+255),c
  4494  010470  516A               	movf	__doprnt@prec& (0+255),w,b
  4495  010472  5D6C               	subwf	__doprnt@c& (0+255),w,b
  4496  010474  516B               	movf	(__doprnt@prec+1)& (0+255),w,b
  4497  010476  0A80               	xorlw	128
  4498  010478  582F               	subwfb	??__doprnt& (0+255),w,c
  4499  01047A  B0D8               	btfsc	status,0,c
  4500  01047C  D003               	goto	l1591
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;doprnt.c: 1340: c = prec;
  4504  01047E  C06A  F06C         	movff	__doprnt@prec,__doprnt@c
  4505  010482  D010               	goto	l1593
  4506  010484                     l1591:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;doprnt.c: 1341: else if(prec < c)
  4510                           
  4511                           ; BSR set to: 0
  4512  010484  516B               	movf	(__doprnt@prec+1)& (0+255),w,b
  4513  010486  0A80               	xorlw	128
  4514  010488  6E2F               	movwf	??__doprnt& (0+255),c
  4515  01048A  516C               	movf	__doprnt@c& (0+255),w,b
  4516  01048C  5D6A               	subwf	__doprnt@prec& (0+255),w,b
  4517  01048E  0E80               	movlw	128
  4518  010490  BF6C               	btfsc	__doprnt@c& (0+255),7,b
  4519  010492  0E7F               	movlw	127
  4520  010494  582F               	subwfb	??__doprnt& (0+255),w,c
  4521  010496  B0D8               	btfsc	status,0,c
  4522  010498  D005               	goto	l1593
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;doprnt.c: 1342: prec = c;
  4526  01049A  516C               	movf	__doprnt@c& (0+255),w,b
  4527  01049C  6F6A               	movwf	__doprnt@prec& (0+255),b
  4528  01049E  6B6B               	clrf	(__doprnt@prec+1)& (0+255),b
  4529  0104A0  BF6A               	btfsc	__doprnt@prec& (0+255),7,b
  4530  0104A2  076B               	decf	(__doprnt@prec+1)& (0+255),f,b
  4531  0104A4                     l1593:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;doprnt.c: 1422: {
  4535                           ;doprnt.c: 1438: if(flag & 0x03)
  4536                           
  4537                           ; BSR set to: 0
  4538                           
  4539                           ; BSR set to: 0
  4540  0104A4  C065  F02F         	movff	__doprnt@flag,??__doprnt
  4541  0104A8  0E03               	movlw	3
  4542  0104AA  162F               	andwf	??__doprnt,f,c
  4543  0104AC  B4D8               	btfsc	status,2,c
  4544  0104AE  D0E8               	goto	l1605
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4548  0104B0  EE20 F002          	lfsr	2,2
  4549  0104B4  5029               	movf	__doprnt@pb,w,c
  4550  0104B6  26D9               	addwf	fsr2l,f,c
  4551  0104B8  502A               	movf	__doprnt@pb+1,w,c
  4552  0104BA  22DA               	addwfc	fsr2h,f,c
  4553  0104BC  50DE               	movf	postinc2,w,c
  4554  0104BE  10DE               	iorwf	postinc2,w,c
  4555  0104C0  10DE               	iorwf	postinc2,w,c
  4556  0104C2  B4D8               	btfsc	status,2,c
  4557  0104C4  D013               	goto	l1595
  4558                           
  4559                           ; BSR set to: 0
  4560  0104C6  EE20 F002          	lfsr	2,2
  4561  0104CA  5029               	movf	__doprnt@pb,w,c
  4562  0104CC  26D9               	addwf	fsr2l,f,c
  4563  0104CE  502A               	movf	__doprnt@pb+1,w,c
  4564  0104D0  22DA               	addwfc	fsr2h,f,c
  4565  0104D2  D801               	call	u8078
  4566  0104D4  D0D5               	goto	l1605
  4567  0104D6                     u8078:
  4568  0104D6  0005               	push	
  4569  0104D8  6EFA               	movwf	pclath,c
  4570  0104DA  50DE               	movf	postinc2,w,c
  4571  0104DC  6EFD               	movwf	tosl,c
  4572  0104DE  50DE               	movf	postinc2,w,c
  4573  0104E0  6EFE               	movwf	tosh,c
  4574  0104E2  50DE               	movf	postinc2,w,c
  4575  0104E4  6EFF               	movwf	tosu,c
  4576  0104E6  50FA               	movf	pclath,w,c
  4577  0104E8  0E2D               	movlw	45
  4578  0104EA  0012               	return		;indir
  4579  0104EC                     l1595:
  4580  0104EC  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4581  0104F0  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4582  0104F4  CFDE F02F          	movff	postinc2,??__doprnt
  4583  0104F8  CFDD F030          	movff	postdec2,??__doprnt+1
  4584  0104FC  C02F  FFD9         	movff	??__doprnt,fsr2l
  4585  010500  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4586  010504  0E2D               	movlw	45
  4587  010506  6EDF               	movwf	indf2,c
  4588  010508  D0B4               	goto	l8528
  4589  01050A                     
  4590                           ;doprnt.c: 1486: case 0xC0:
  4591                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4592  01050A  C06A  F02F         	movff	__doprnt@prec,??__doprnt
  4593  01050E  C06B  F030         	movff	__doprnt@prec+1,??__doprnt+1
  4594  010512  90D8               	bcf	status,0,c
  4595  010514  362F               	rlcf	??__doprnt,f,c
  4596  010516  3630               	rlcf	??__doprnt+1,f,c
  4597  010518  90D8               	bcf	status,0,c
  4598  01051A  362F               	rlcf	??__doprnt,f,c
  4599  01051C  3630               	rlcf	??__doprnt+1,f,c
  4600  01051E  0EDF               	movlw	low _dpowers
  4601  010520  242F               	addwf	??__doprnt,w,c
  4602  010522  6EF6               	movwf	tblptrl,c
  4603  010524  0EFE               	movlw	high _dpowers
  4604  010526  2030               	addwfc	??__doprnt+1,w,c
  4605  010528  6EF7               	movwf	tblptrh,c
  4606  01052A                     	if	1	;There are 3 active tblptr bytes
  4607  01052A  6AF8               	clrf	tblptru,c
  4608  01052C  0E00               	movlw	low (__mediumconst shr (0+16))
  4609  01052E  22F8               	addwfc	tblptru,f,c
  4610  010530                     	endif
  4611  010530  0009               	tblrd		*+
  4612  010532  CFF5 F017          	movff	tablat,___lldiv@divisor
  4613  010536  0009               	tblrd		*+
  4614  010538  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  4615  01053C  0009               	tblrd		*+
  4616  01053E  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  4617  010542  000A               	tblrd		*-
  4618  010544  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  4619  010548  C066  F013         	movff	__doprnt@val,___lldiv@dividend
  4620  01054C  C067  F014         	movff	__doprnt@val+1,___lldiv@dividend+1
  4621  010550  C068  F015         	movff	__doprnt@val+2,___lldiv@dividend+2
  4622  010554  C069  F016         	movff	__doprnt@val+3,___lldiv@dividend+3
  4623  010558  ECB6  F09B         	call	___lldiv
  4624  01055C  C013  F020         	movff	?___lldiv,___llmod@dividend
  4625  010560  C014  F021         	movff	?___lldiv+1,___llmod@dividend+1
  4626  010564  C015  F022         	movff	?___lldiv+2,___llmod@dividend+2
  4627  010568  C016  F023         	movff	?___lldiv+3,___llmod@dividend+3
  4628  01056C  0E0A               	movlw	10
  4629  01056E  6E24               	movwf	___llmod@divisor,c
  4630  010570  0E00               	movlw	0
  4631  010572  6E25               	movwf	___llmod@divisor+1,c
  4632  010574  0E00               	movlw	0
  4633  010576  6E26               	movwf	___llmod@divisor+2,c
  4634  010578  0E00               	movlw	0
  4635  01057A  6E27               	movwf	___llmod@divisor+3,c
  4636  01057C  EC1D  F09D         	call	___llmod	;wreg free
  4637  010580  5020               	movf	?___llmod,w,c
  4638  010582  0F30               	addlw	48
  4639  010584  0100               	movlb	0	; () banked
  4640  010586  6F6C               	movwf	__doprnt@c& (0+255),b
  4641                           
  4642                           ;doprnt.c: 1491: break;
  4643  010588  D048               	goto	l1602
  4644  01058A                     
  4645                           ; BSR set to: 0
  4646                           ;doprnt.c: 1499: {
  4647                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4648                           
  4649                           ; BSR set to: 0
  4650  01058A  C066  F013         	movff	__doprnt@val,___lldiv@dividend
  4651  01058E  C067  F014         	movff	__doprnt@val+1,___lldiv@dividend+1
  4652  010592  C068  F015         	movff	__doprnt@val+2,___lldiv@dividend+2
  4653  010596  C069  F016         	movff	__doprnt@val+3,___lldiv@dividend+3
  4654  01059A  C06A  F02F         	movff	__doprnt@prec,??__doprnt
  4655  01059E  C06B  F030         	movff	__doprnt@prec+1,??__doprnt+1
  4656  0105A2  90D8               	bcf	status,0,c
  4657  0105A4  362F               	rlcf	??__doprnt,f,c
  4658  0105A6  3630               	rlcf	??__doprnt+1,f,c
  4659  0105A8  90D8               	bcf	status,0,c
  4660  0105AA  362F               	rlcf	??__doprnt,f,c
  4661  0105AC  3630               	rlcf	??__doprnt+1,f,c
  4662  0105AE  0E07               	movlw	low _hexpowers
  4663  0105B0  242F               	addwf	??__doprnt,w,c
  4664  0105B2  6EF6               	movwf	tblptrl,c
  4665  0105B4  0EFF               	movlw	high _hexpowers
  4666  0105B6  2030               	addwfc	??__doprnt+1,w,c
  4667  0105B8  6EF7               	movwf	tblptrh,c
  4668  0105BA                     	if	1	;There are 3 active tblptr bytes
  4669  0105BA  6AF8               	clrf	tblptru,c
  4670  0105BC  0E00               	movlw	low (__mediumconst shr (0+16))
  4671  0105BE  22F8               	addwfc	tblptru,f,c
  4672  0105C0                     	endif
  4673  0105C0  0009               	tblrd		*+
  4674  0105C2  CFF5 F017          	movff	tablat,___lldiv@divisor
  4675  0105C6  0009               	tblrd		*+
  4676  0105C8  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  4677  0105CC  0009               	tblrd		*+
  4678  0105CE  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  4679  0105D2  000A               	tblrd		*-
  4680  0105D4  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  4681  0105D8  ECB6  F09B         	call	___lldiv	;wreg free
  4682  0105DC  5013               	movf	?___lldiv,w,c
  4683  0105DE  0B0F               	andlw	15
  4684  0105E0  0100               	movlb	0	; () banked
  4685  0105E2  6F60               	movwf	__doprnt@idx& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  4689  0105E4  5160               	movf	__doprnt@idx& (0+255),w,b
  4690  0105E6  0D01               	mullw	1
  4691  0105E8  0ECF               	movlw	low STR_9
  4692  0105EA  24F3               	addwf	prodl,w,c
  4693  0105EC  6EF6               	movwf	tblptrl,c
  4694  0105EE  0EFF               	movlw	high STR_9
  4695  0105F0  20F4               	addwfc	prodh,w,c
  4696  0105F2  6EF7               	movwf	tblptrh,c
  4697  0105F4                     	if	1	;There are 3 active tblptr bytes
  4698  0105F4  6AF8               	clrf	tblptru,c
  4699  0105F6  0E00               	movlw	low (__mediumconst shr (0+16))
  4700  0105F8  22F8               	addwfc	tblptru,f,c
  4701  0105FA                     	endif
  4702  0105FA  0008               	tblrd		*
  4703  0105FC  CFF5 F06C          	movff	tablat,__doprnt@c
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;doprnt.c: 1523: }
  4707                           
  4708                           ;doprnt.c: 1508: }
  4709                           ;doprnt.c: 1510: break;
  4710  010600  D00C               	goto	l1602
  4711  010602                     l8520:
  4712  010602  0100               	movlb	0	; () banked
  4713  010604  5165               	movf	__doprnt@flag& (0+255),w,b
  4714  010606  0BC0               	andlw	192
  4715                           
  4716                           ; Switch size 1, requested type "space"
  4717                           ; Number of cases is 3, Range of values is 0 to 192
  4718                           ; switch strategies available:
  4719                           ; Name         Instructions Cycles
  4720                           ; simple_byte           10     6 (average)
  4721                           ;	Chosen strategy is simple_byte
  4722  010608  0A00               	xorlw	0	; case 0
  4723  01060A  B4D8               	btfsc	status,2,c
  4724  01060C  D77E               	goto	l1600
  4725  01060E  0A80               	xorlw	128	; case 128
  4726  010610  B4D8               	btfsc	status,2,c
  4727  010612  D7BB               	goto	l1603
  4728  010614  0A40               	xorlw	64	; case 192
  4729  010616  B4D8               	btfsc	status,2,c
  4730  010618  D778               	goto	l1600
  4731  01061A                     l1602:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4735                           
  4736                           ; BSR set to: 0
  4737  01061A  EE20 F002          	lfsr	2,2
  4738  01061E  5029               	movf	__doprnt@pb,w,c
  4739  010620  26D9               	addwf	fsr2l,f,c
  4740  010622  502A               	movf	__doprnt@pb+1,w,c
  4741  010624  22DA               	addwfc	fsr2h,f,c
  4742  010626  50DE               	movf	postinc2,w,c
  4743  010628  10DE               	iorwf	postinc2,w,c
  4744  01062A  10DE               	iorwf	postinc2,w,c
  4745  01062C  B4D8               	btfsc	status,2,c
  4746  01062E  D013               	goto	l1604
  4747                           
  4748                           ; BSR set to: 0
  4749  010630  EE20 F002          	lfsr	2,2
  4750  010634  5029               	movf	__doprnt@pb,w,c
  4751  010636  26D9               	addwf	fsr2l,f,c
  4752  010638  502A               	movf	__doprnt@pb+1,w,c
  4753  01063A  22DA               	addwfc	fsr2h,f,c
  4754  01063C  D801               	call	u8098
  4755  01063E  D020               	goto	l1605
  4756  010640                     u8098:
  4757  010640  0005               	push	
  4758  010642  6EFA               	movwf	pclath,c
  4759  010644  50DE               	movf	postinc2,w,c
  4760  010646  6EFD               	movwf	tosl,c
  4761  010648  50DE               	movf	postinc2,w,c
  4762  01064A  6EFE               	movwf	tosh,c
  4763  01064C  50DE               	movf	postinc2,w,c
  4764  01064E  6EFF               	movwf	tosu,c
  4765  010650  50FA               	movf	pclath,w,c
  4766  010652  516C               	movf	__doprnt@c& (0+255),w,b
  4767  010654  0012               	return		;indir
  4768  010656                     l1604:
  4769  010656  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4770  01065A  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4771  01065E  CFDE F02F          	movff	postinc2,??__doprnt
  4772  010662  CFDD F030          	movff	postdec2,??__doprnt+1
  4773  010666  C02F  FFD9         	movff	??__doprnt,fsr2l
  4774  01066A  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4775  01066E  C06C  FFDF         	movff	__doprnt@c,indf2
  4776  010672                     l8528:
  4777  010672  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4778  010676  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4779  01067A  2ADE               	incf	postinc2,f,c
  4780  01067C  0E00               	movlw	0
  4781  01067E  22DD               	addwfc	postdec2,f,c
  4782  010680                     l1605:
  4783  010680  0100               	movlb	0	; () banked
  4784  010682  076A               	decf	__doprnt@prec& (0+255),f,b
  4785  010684  A0D8               	btfss	status,0,c
  4786  010686  076B               	decf	(__doprnt@prec+1)& (0+255),f,b
  4787  010688  296A               	incf	__doprnt@prec& (0+255),w,b
  4788  01068A  E1BB               	bnz	l8520
  4789  01068C  296B               	incf	(__doprnt@prec+1)& (0+255),w,b
  4790  01068E  A4D8               	btfss	status,2,c
  4791  010690  D7B8               	goto	l1599
  4792  010692                     u8100:
  4793                           
  4794                           ; BSR set to: 0
  4795                           
  4796                           ; BSR set to: 0
  4797  010692  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4798  010696  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4799  01069A  4A2B               	infsnz	__doprnt@f,f,c
  4800  01069C  2A2C               	incf	__doprnt@f+1,f,c
  4801  01069E                     	if	0	;tblptru may be non-zero
  4802  01069E                     	endif
  4803  01069E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4804  01069E  0E00               	movlw	low (__mediumconst shr (0+16))
  4805  0106A0  6EF8               	movwf	tblptru,c
  4806  0106A2                     	endif
  4807  0106A2  0008               	tblrd		*
  4808  0106A4  CFF5 F06C          	movff	tablat,__doprnt@c
  4809  0106A8  0100               	movlb	0	; () banked
  4810  0106AA  516C               	movf	__doprnt@c& (0+255),w,b
  4811  0106AC  A4D8               	btfss	status,2,c
  4812  0106AE  D4A9               	goto	l1540
  4813  0106B0                     u8110:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;doprnt.c: 1540: return 0;
  4817                           
  4818                           ; BSR set to: 0
  4819                           
  4820                           ;doprnt.c: 1525: }
  4821                           ;doprnt.c: 1533: }
  4822                           ;doprnt.c: 1535: alldone:
  4823                           
  4824                           ; BSR set to: 0
  4825  0106B0  0E00               	movlw	0
  4826  0106B2  6E2A               	movwf	?__doprnt+1,c
  4827  0106B4  0E00               	movlw	0
  4828  0106B6  6E29               	movwf	?__doprnt,c
  4829  0106B8  0012               	return	
  4830  0106BA                     __end_of__doprnt:
  4831                           	opt stack 0
  4832                           tosu	equ	0xFFF
  4833                           tosh	equ	0xFFE
  4834                           tosl	equ	0xFFD
  4835                           pclath	equ	0xFFA
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           prodh	equ	0xFF4
  4841                           prodl	equ	0xFF3
  4842                           intcon	equ	0xFF2
  4843                           indf0	equ	0xFEF
  4844                           postinc0	equ	0xFEE
  4845                           fsr0h	equ	0xFEA
  4846                           fsr0l	equ	0xFE9
  4847                           wreg	equ	0xFE8
  4848                           postdec1	equ	0xFE5
  4849                           fsr1l	equ	0xFE1
  4850                           indf2	equ	0xFDF
  4851                           postinc2	equ	0xFDE
  4852                           postdec2	equ	0xFDD
  4853                           fsr2h	equ	0xFDA
  4854                           fsr2l	equ	0xFD9
  4855                           status	equ	0xFD8
  4856                           
  4857 ;; *************** function _isdigit *****************
  4858 ;; Defined at:
  4859 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\isdigit.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  c               1    wreg     unsigned char 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  c               1   20[COMRAM] unsigned char 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;		None               void
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;Total ram usage:        3 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    4
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		__doprnt
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text19
  4888  01442A                     __ptext19:
  4889                           	opt stack 0
  4890  01442A                     _isdigit:
  4891                           	opt stack 21
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;incstack = 0
  4895                           ;isdigit@c stored from wreg
  4896  01442A  6E15               	movwf	isdigit@c,c
  4897  01442C  0E00               	movlw	0
  4898  01442E  6E14               	movwf	_isdigit$3586,c
  4899  014430  0E3A               	movlw	58
  4900  014432  6015               	cpfslt	isdigit@c,c
  4901  014434  D005               	goto	l1953
  4902  014436  0E2F               	movlw	47
  4903  014438  6415               	cpfsgt	isdigit@c,c
  4904  01443A  D002               	goto	l1953
  4905  01443C  0E01               	movlw	1
  4906  01443E  6E14               	movwf	_isdigit$3586,c
  4907  014440                     l1953:
  4908  014440  C014  F013         	movff	_isdigit$3586,??_isdigit
  4909  014444  3013               	rrcf	??_isdigit,w,c
  4910  014446  0012               	return	
  4911  014448                     __end_of_isdigit:
  4912                           	opt stack 0
  4913                           tosu	equ	0xFFF
  4914                           tosh	equ	0xFFE
  4915                           tosl	equ	0xFFD
  4916                           pclath	equ	0xFFA
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           intcon	equ	0xFF2
  4924                           indf0	equ	0xFEF
  4925                           postinc0	equ	0xFEE
  4926                           fsr0h	equ	0xFEA
  4927                           fsr0l	equ	0xFE9
  4928                           wreg	equ	0xFE8
  4929                           postdec1	equ	0xFE5
  4930                           fsr1l	equ	0xFE1
  4931                           indf2	equ	0xFDF
  4932                           postinc2	equ	0xFDE
  4933                           postdec2	equ	0xFDD
  4934                           fsr2h	equ	0xFDA
  4935                           fsr2l	equ	0xFD9
  4936                           status	equ	0xFD8
  4937                           
  4938 ;; *************** function ___llmod *****************
  4939 ;; Defined at:
  4940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\llmod.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  dividend        4   31[COMRAM] unsigned long 
  4943 ;;  divisor         4   35[COMRAM] unsigned long 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  counter         1   39[COMRAM] unsigned char 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  4   31[COMRAM] unsigned long 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4955 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;Total ram usage:        9 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    4
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		__doprnt
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text20
  4970  013A3A                     __ptext20:
  4971                           	opt stack 0
  4972  013A3A                     ___llmod:
  4973                           	opt stack 21
  4974                           
  4975                           ;incstack = 0
  4976  013A3A  5024               	movf	___llmod@divisor,w,c
  4977  013A3C  1025               	iorwf	___llmod@divisor+1,w,c
  4978  013A3E  1026               	iorwf	___llmod@divisor+2,w,c
  4979  013A40  1027               	iorwf	___llmod@divisor+3,w,c
  4980  013A42  B4D8               	btfsc	status,2,c
  4981  013A44  D024               	goto	l1994
  4982  013A46  0E01               	movlw	1
  4983  013A48  6E28               	movwf	___llmod@counter,c
  4984  013A4A  D006               	goto	l1989
  4985  013A4C  90D8               	bcf	status,0,c
  4986  013A4E  3624               	rlcf	___llmod@divisor,f,c
  4987  013A50  3625               	rlcf	___llmod@divisor+1,f,c
  4988  013A52  3626               	rlcf	___llmod@divisor+2,f,c
  4989  013A54  3627               	rlcf	___llmod@divisor+3,f,c
  4990  013A56  2A28               	incf	___llmod@counter,f,c
  4991  013A58                     l1989:
  4992  013A58  AE27               	btfss	___llmod@divisor+3,7,c
  4993  013A5A  D7F8               	goto	l1990
  4994  013A5C                     u7230:
  4995  013A5C  5024               	movf	___llmod@divisor,w,c
  4996  013A5E  5C20               	subwf	___llmod@dividend,w,c
  4997  013A60  5025               	movf	___llmod@divisor+1,w,c
  4998  013A62  5821               	subwfb	___llmod@dividend+1,w,c
  4999  013A64  5026               	movf	___llmod@divisor+2,w,c
  5000  013A66  5822               	subwfb	___llmod@dividend+2,w,c
  5001  013A68  5027               	movf	___llmod@divisor+3,w,c
  5002  013A6A  5823               	subwfb	___llmod@dividend+3,w,c
  5003  013A6C  A0D8               	btfss	status,0,c
  5004  013A6E  D008               	goto	l1993
  5005  013A70  5024               	movf	___llmod@divisor,w,c
  5006  013A72  5E20               	subwf	___llmod@dividend,f,c
  5007  013A74  5025               	movf	___llmod@divisor+1,w,c
  5008  013A76  5A21               	subwfb	___llmod@dividend+1,f,c
  5009  013A78  5026               	movf	___llmod@divisor+2,w,c
  5010  013A7A  5A22               	subwfb	___llmod@dividend+2,f,c
  5011  013A7C  5027               	movf	___llmod@divisor+3,w,c
  5012  013A7E  5A23               	subwfb	___llmod@dividend+3,f,c
  5013  013A80                     l1993:
  5014  013A80  90D8               	bcf	status,0,c
  5015  013A82  3227               	rrcf	___llmod@divisor+3,f,c
  5016  013A84  3226               	rrcf	___llmod@divisor+2,f,c
  5017  013A86  3225               	rrcf	___llmod@divisor+1,f,c
  5018  013A88  3224               	rrcf	___llmod@divisor,f,c
  5019  013A8A  2E28               	decfsz	___llmod@counter,f,c
  5020  013A8C  D7E7               	goto	u7230
  5021  013A8E                     l1994:
  5022  013A8E  C020  F020         	movff	___llmod@dividend,?___llmod
  5023  013A92  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  5024  013A96  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  5025  013A9A  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  5026  013A9E  0012               	return		;funcret
  5027  013AA0                     __end_of___llmod:
  5028                           	opt stack 0
  5029                           tosu	equ	0xFFF
  5030                           tosh	equ	0xFFE
  5031                           tosl	equ	0xFFD
  5032                           pclath	equ	0xFFA
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           indf0	equ	0xFEF
  5041                           postinc0	equ	0xFEE
  5042                           fsr0h	equ	0xFEA
  5043                           fsr0l	equ	0xFE9
  5044                           wreg	equ	0xFE8
  5045                           postdec1	equ	0xFE5
  5046                           fsr1l	equ	0xFE1
  5047                           indf2	equ	0xFDF
  5048                           postinc2	equ	0xFDE
  5049                           postdec2	equ	0xFDD
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8
  5053                           
  5054 ;; *************** function ___lldiv *****************
  5055 ;; Defined at:
  5056 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\lldiv.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  dividend        4   18[COMRAM] unsigned long 
  5059 ;;  divisor         4   22[COMRAM] unsigned long 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  quotient        4   26[COMRAM] unsigned long 
  5062 ;;  counter         1   30[COMRAM] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  4   18[COMRAM] unsigned long 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5072 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;Total ram usage:       13 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    4
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		__doprnt
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text21
  5087  01376C                     __ptext21:
  5088                           	opt stack 0
  5089  01376C                     ___lldiv:
  5090                           	opt stack 21
  5091                           
  5092                           ;incstack = 0
  5093  01376C  0E00               	movlw	0
  5094  01376E  6E1B               	movwf	___lldiv@quotient,c
  5095  013770  0E00               	movlw	0
  5096  013772  6E1C               	movwf	___lldiv@quotient+1,c
  5097  013774  0E00               	movlw	0
  5098  013776  6E1D               	movwf	___lldiv@quotient+2,c
  5099  013778  0E00               	movlw	0
  5100  01377A  6E1E               	movwf	___lldiv@quotient+3,c
  5101  01377C  5017               	movf	___lldiv@divisor,w,c
  5102  01377E  1018               	iorwf	___lldiv@divisor+1,w,c
  5103  013780  1019               	iorwf	___lldiv@divisor+2,w,c
  5104  013782  101A               	iorwf	___lldiv@divisor+3,w,c
  5105  013784  B4D8               	btfsc	status,2,c
  5106  013786  D02A               	goto	l1984
  5107  013788  0E01               	movlw	1
  5108  01378A  6E1F               	movwf	___lldiv@counter,c
  5109  01378C  D006               	goto	l1979
  5110  01378E  90D8               	bcf	status,0,c
  5111  013790  3617               	rlcf	___lldiv@divisor,f,c
  5112  013792  3618               	rlcf	___lldiv@divisor+1,f,c
  5113  013794  3619               	rlcf	___lldiv@divisor+2,f,c
  5114  013796  361A               	rlcf	___lldiv@divisor+3,f,c
  5115  013798  2A1F               	incf	___lldiv@counter,f,c
  5116  01379A                     l1979:
  5117  01379A  AE1A               	btfss	___lldiv@divisor+3,7,c
  5118  01379C  D7F8               	goto	l1980
  5119  01379E                     u7200:
  5120  01379E  90D8               	bcf	status,0,c
  5121  0137A0  361B               	rlcf	___lldiv@quotient,f,c
  5122  0137A2  361C               	rlcf	___lldiv@quotient+1,f,c
  5123  0137A4  361D               	rlcf	___lldiv@quotient+2,f,c
  5124  0137A6  361E               	rlcf	___lldiv@quotient+3,f,c
  5125  0137A8  5017               	movf	___lldiv@divisor,w,c
  5126  0137AA  5C13               	subwf	___lldiv@dividend,w,c
  5127  0137AC  5018               	movf	___lldiv@divisor+1,w,c
  5128  0137AE  5814               	subwfb	___lldiv@dividend+1,w,c
  5129  0137B0  5019               	movf	___lldiv@divisor+2,w,c
  5130  0137B2  5815               	subwfb	___lldiv@dividend+2,w,c
  5131  0137B4  501A               	movf	___lldiv@divisor+3,w,c
  5132  0137B6  5816               	subwfb	___lldiv@dividend+3,w,c
  5133  0137B8  A0D8               	btfss	status,0,c
  5134  0137BA  D009               	goto	l1983
  5135  0137BC  5017               	movf	___lldiv@divisor,w,c
  5136  0137BE  5E13               	subwf	___lldiv@dividend,f,c
  5137  0137C0  5018               	movf	___lldiv@divisor+1,w,c
  5138  0137C2  5A14               	subwfb	___lldiv@dividend+1,f,c
  5139  0137C4  5019               	movf	___lldiv@divisor+2,w,c
  5140  0137C6  5A15               	subwfb	___lldiv@dividend+2,f,c
  5141  0137C8  501A               	movf	___lldiv@divisor+3,w,c
  5142  0137CA  5A16               	subwfb	___lldiv@dividend+3,f,c
  5143  0137CC  801B               	bsf	___lldiv@quotient,0,c
  5144  0137CE                     l1983:
  5145  0137CE  90D8               	bcf	status,0,c
  5146  0137D0  321A               	rrcf	___lldiv@divisor+3,f,c
  5147  0137D2  3219               	rrcf	___lldiv@divisor+2,f,c
  5148  0137D4  3218               	rrcf	___lldiv@divisor+1,f,c
  5149  0137D6  3217               	rrcf	___lldiv@divisor,f,c
  5150  0137D8  2E1F               	decfsz	___lldiv@counter,f,c
  5151  0137DA  D7E1               	goto	u7200
  5152  0137DC                     l1984:
  5153  0137DC  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5154  0137E0  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5155  0137E4  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5156  0137E8  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5157  0137EC  0012               	return		;funcret
  5158  0137EE                     __end_of___lldiv:
  5159                           	opt stack 0
  5160                           tosu	equ	0xFFF
  5161                           tosh	equ	0xFFE
  5162                           tosl	equ	0xFFD
  5163                           pclath	equ	0xFFA
  5164                           tblptru	equ	0xFF8
  5165                           tblptrh	equ	0xFF7
  5166                           tblptrl	equ	0xFF6
  5167                           tablat	equ	0xFF5
  5168                           prodh	equ	0xFF4
  5169                           prodl	equ	0xFF3
  5170                           intcon	equ	0xFF2
  5171                           indf0	equ	0xFEF
  5172                           postinc0	equ	0xFEE
  5173                           fsr0h	equ	0xFEA
  5174                           fsr0l	equ	0xFE9
  5175                           wreg	equ	0xFE8
  5176                           postdec1	equ	0xFE5
  5177                           fsr1l	equ	0xFE1
  5178                           indf2	equ	0xFDF
  5179                           postinc2	equ	0xFDE
  5180                           postdec2	equ	0xFDD
  5181                           fsr2h	equ	0xFDA
  5182                           fsr2l	equ	0xFD9
  5183                           status	equ	0xFD8
  5184                           
  5185 ;; *************** function _PHY_Write *****************
  5186 ;; Defined at:
  5187 ;;		line 370 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  reg             1    wreg     enum E5175
  5190 ;;  data            2   20[COMRAM] unsigned int 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  reg             1   22[COMRAM] enum E5175
  5193 ;;  GIESave         1   23[COMRAM] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      enum E5184
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;Total ram usage:        4 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    5
  5210 ;; This function calls:
  5211 ;;		_PHY_WaitForBusy
  5212 ;; This function is called by:
  5213 ;;		_ETH_Init
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text22
  5218  01432C                     __ptext22:
  5219                           	opt stack 0
  5220  01432C                     _PHY_Write:
  5221                           	opt stack 22
  5222                           
  5223                           ;incstack = 0
  5224                           ;PHY_Write@reg stored from wreg
  5225  01432C  6E17               	movwf	PHY_Write@reg,c
  5226                           
  5227                           ;ETHxxJ6x_driver.c: 372: uint8_t GIESave;
  5228                           ;ETHxxJ6x_driver.c: 374: MIREGADR = reg;
  5229  01432E  C017  FEB4         	movff	PHY_Write@reg,3764	;volatile
  5230                           
  5231                           ;ETHxxJ6x_driver.c: 386: errataTemp = data;
  5232  014332  C015  FE7E         	movff	PHY_Write@data,3710
  5233  014336  C016  FE7F         	movff	PHY_Write@data+1,3711
  5234                           
  5235                           ;ETHxxJ6x_driver.c: 387: GIESave = INTCON;
  5236  01433A  CFF2 F018          	movff	intcon,PHY_Write@GIESave	;volatile
  5237                           
  5238                           ;ETHxxJ6x_driver.c: 388: INTCON = 0;
  5239  01433E  0E00               	movlw	0
  5240  014340  6EF2               	movwf	intcon,c	;volatile
  5241                           
  5242                           ;ETHxxJ6x_driver.c: 389: MIWR = errataTemp;
  5243  014342  CE7E FEB6          	movff	3710,3766	;volatile
  5244  014346  CE7F FEB7          	movff	3711,3767	;volatile
  5245                           
  5246                           ;ETHxxJ6x_driver.c: 390: INTCON = GIESave;
  5247  01434A  C018  FFF2         	movff	PHY_Write@GIESave,intcon	;volatile
  5248                           
  5249                           ;ETHxxJ6x_driver.c: 394: return PHY_WaitForBusy();
  5250                           ;	Return value of _PHY_Write is never used
  5251  01434E  ECE2  F0A0         	call	_PHY_WaitForBusy
  5252  014352  0012               	return	
  5253  014354                     __end_of_PHY_Write:
  5254                           	opt stack 0
  5255                           tosu	equ	0xFFF
  5256                           tosh	equ	0xFFE
  5257                           tosl	equ	0xFFD
  5258                           pclath	equ	0xFFA
  5259                           tblptru	equ	0xFF8
  5260                           tblptrh	equ	0xFF7
  5261                           tblptrl	equ	0xFF6
  5262                           tablat	equ	0xFF5
  5263                           prodh	equ	0xFF4
  5264                           prodl	equ	0xFF3
  5265                           intcon	equ	0xFF2
  5266                           indf0	equ	0xFEF
  5267                           postinc0	equ	0xFEE
  5268                           fsr0h	equ	0xFEA
  5269                           fsr0l	equ	0xFE9
  5270                           wreg	equ	0xFE8
  5271                           postdec1	equ	0xFE5
  5272                           fsr1l	equ	0xFE1
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function _MAC_getAddress *****************
  5281 ;; Defined at:
  5282 ;;		line 46 in file "mcc_generated_files/TCPIPLibrary/mac_address.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  2   18[COMRAM] PTR const struct .
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;Total ram usage:        2 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    4
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_ETH_Init
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text23
  5311  014578                     __ptext23:
  5312                           	opt stack 0
  5313  014578                     _MAC_getAddress:
  5314                           	opt stack 23
  5315                           
  5316                           ;mac_address.c: 48: return &macAddress;
  5317                           
  5318                           ;incstack = 0
  5319  014578  0E52               	movlw	low _macAddress
  5320  01457A  6E13               	movwf	?_MAC_getAddress,c
  5321  01457C  0EFF               	movlw	high _macAddress
  5322  01457E  6E14               	movwf	?_MAC_getAddress+1,c
  5323  014580  0012               	return	
  5324  014582                     __end_of_MAC_getAddress:
  5325                           	opt stack 0
  5326                           tosu	equ	0xFFF
  5327                           tosh	equ	0xFFE
  5328                           tosl	equ	0xFFD
  5329                           pclath	equ	0xFFA
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           indf0	equ	0xFEF
  5338                           postinc0	equ	0xFEE
  5339                           fsr0h	equ	0xFEA
  5340                           fsr0l	equ	0xFE9
  5341                           wreg	equ	0xFE8
  5342                           postdec1	equ	0xFE5
  5343                           fsr1l	equ	0xFE1
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           postdec2	equ	0xFDD
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _ETH_PacketListReset *****************
  5352 ;; Defined at:
  5353 ;;		line 1156 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  index           2   20[COMRAM] unsigned int 
  5358 ;;  ptr             2   18[COMRAM] PTR unsigned char 
  5359 ;;		 -> txData(200), 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;Total ram usage:        4 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    4
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_ETH_Init
  5380 ;;		_ETH_TxReset
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text24
  5385  013ED4                     __ptext24:
  5386                           	opt stack 0
  5387  013ED4                     _ETH_PacketListReset:
  5388                           	opt stack 23
  5389                           
  5390                           ;ETHxxJ6x_driver.c: 1158: uint16_t index = 0;
  5391                           
  5392                           ;incstack = 0
  5393  013ED4  0E00               	movlw	0
  5394  013ED6  6E16               	movwf	ETH_PacketListReset@index+1,c
  5395  013ED8  0E00               	movlw	0
  5396  013EDA  6E15               	movwf	ETH_PacketListReset@index,c
  5397                           
  5398                           ;ETHxxJ6x_driver.c: 1159: uint8_t* ptr = (uint8_t*)txData;
  5399  013EDC  0E00               	movlw	low _txData
  5400  013EDE  6E13               	movwf	ETH_PacketListReset@ptr,c
  5401  013EE0  0E03               	movlw	high _txData
  5402  013EE2  6E14               	movwf	ETH_PacketListReset@ptr+1,c
  5403                           
  5404                           ;ETHxxJ6x_driver.c: 1160: ethListSize = 0;
  5405  013EE4  0E00               	movlw	0
  5406  013EE6  6E45               	movwf	_ethListSize,c
  5407                           
  5408                           ;ETHxxJ6x_driver.c: 1162: pHead = (0);
  5409  013EE8  0E00               	movlw	0
  5410  013EEA  6E42               	movwf	_pHead,c
  5411  013EEC  0E00               	movlw	0
  5412  013EEE  6E43               	movwf	_pHead+1,c
  5413                           
  5414                           ;ETHxxJ6x_driver.c: 1163: pTail = (0);
  5415  013EF0  0E00               	movlw	0
  5416  013EF2  6E40               	movwf	_pTail,c
  5417  013EF4  0E00               	movlw	0
  5418  013EF6  6E41               	movwf	_pTail+1,c
  5419                           
  5420                           ;ETHxxJ6x_driver.c: 1165: while( index < ((20) * sizeof(txPacket_t)) )
  5421  013EF8  D00A               	goto	l765
  5422  013EFA                     
  5423                           ;ETHxxJ6x_driver.c: 1166: {
  5424                           ;ETHxxJ6x_driver.c: 1167: ptr[index] = 0;
  5425  013EFA  5015               	movf	ETH_PacketListReset@index,w,c
  5426  013EFC  2413               	addwf	ETH_PacketListReset@ptr,w,c
  5427  013EFE  6ED9               	movwf	fsr2l,c
  5428  013F00  5016               	movf	ETH_PacketListReset@index+1,w,c
  5429  013F02  2014               	addwfc	ETH_PacketListReset@ptr+1,w,c
  5430  013F04  6EDA               	movwf	fsr2h,c
  5431  013F06  0E00               	movlw	0
  5432  013F08  6EDF               	movwf	indf2,c
  5433                           
  5434                           ;ETHxxJ6x_driver.c: 1168: index++;
  5435  013F0A  4A15               	infsnz	ETH_PacketListReset@index,f,c
  5436  013F0C  2A16               	incf	ETH_PacketListReset@index+1,f,c
  5437  013F0E                     l765:
  5438  013F0E  5016               	movf	ETH_PacketListReset@index+1,w,c
  5439  013F10  E105               	bnz	l768
  5440  013F12  0EC8               	movlw	200
  5441  013F14  5C15               	subwf	ETH_PacketListReset@index,w,c
  5442  013F16  B0D8               	btfsc	status,0,c
  5443  013F18  0012               	return	
  5444  013F1A  D7EF               	goto	l766
  5445  013F1C                     l768:
  5446  013F1C  0012               	return		;funcret
  5447  013F1E                     __end_of_ETH_PacketListReset:
  5448                           	opt stack 0
  5449                           tosu	equ	0xFFF
  5450                           tosh	equ	0xFFE
  5451                           tosl	equ	0xFFD
  5452                           pclath	equ	0xFFA
  5453                           tblptru	equ	0xFF8
  5454                           tblptrh	equ	0xFF7
  5455                           tblptrl	equ	0xFF6
  5456                           tablat	equ	0xFF5
  5457                           prodh	equ	0xFF4
  5458                           prodl	equ	0xFF3
  5459                           intcon	equ	0xFF2
  5460                           indf0	equ	0xFEF
  5461                           postinc0	equ	0xFEE
  5462                           fsr0h	equ	0xFEA
  5463                           fsr0l	equ	0xFE9
  5464                           wreg	equ	0xFE8
  5465                           postdec1	equ	0xFE5
  5466                           fsr1l	equ	0xFE1
  5467                           indf2	equ	0xFDF
  5468                           postinc2	equ	0xFDE
  5469                           postdec2	equ	0xFDD
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8
  5473                           
  5474 ;; *************** function _DHCP_init *****************
  5475 ;; Defined at:
  5476 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		None
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;Total ram usage:        0 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    4
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_Network_Init
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text25
  5505  0145EA                     __ptext25:
  5506                           	opt stack 0
  5507  0145EA                     _DHCP_init:
  5508                           	opt stack 24
  5509                           
  5510                           ;incstack = 0
  5511  0145EA  0012               	return		;funcret
  5512  0145EC                     __end_of_DHCP_init:
  5513                           	opt stack 0
  5514                           tosu	equ	0xFFF
  5515                           tosh	equ	0xFFE
  5516                           tosl	equ	0xFFD
  5517                           pclath	equ	0xFFA
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           intcon	equ	0xFF2
  5525                           indf0	equ	0xFEF
  5526                           postinc0	equ	0xFEE
  5527                           fsr0h	equ	0xFEA
  5528                           fsr0l	equ	0xFE9
  5529                           wreg	equ	0xFE8
  5530                           postdec1	equ	0xFE5
  5531                           fsr1l	equ	0xFE1
  5532                           indf2	equ	0xFDF
  5533                           postinc2	equ	0xFDE
  5534                           postdec2	equ	0xFDD
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539 ;; *************** function _ARPV4_Init *****************
  5540 ;; Defined at:
  5541 ;;		line 87 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  x               1   20[COMRAM] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;Total ram usage:        1 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    5
  5562 ;; This function calls:
  5563 ;;		_ETH_GetMAC
  5564 ;; This function is called by:
  5565 ;;		_Network_Init
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text26
  5570  014192                     __ptext26:
  5571                           	opt stack 0
  5572  014192                     _ARPV4_Init:
  5573                           	opt stack 23
  5574                           
  5575                           ;arpv4.c: 89: for(uint8_t x= 0 ; x < 8; x++)
  5576                           
  5577                           ;incstack = 0
  5578  014192  0E00               	movlw	0
  5579  014194  6E15               	movwf	ARPV4_Init@x,c
  5580  014196                     l6372:
  5581  014196  0E07               	movlw	7
  5582  014198  6415               	cpfsgt	ARPV4_Init@x,c
  5583  01419A  D001               	goto	l312
  5584  01419C  D00C               	goto	u5240
  5585  01419E                     l312:
  5586                           
  5587                           ;arpv4.c: 90: {
  5588                           ;arpv4.c: 91: ((char *)arpMap)[x] = 0;
  5589  01419E  5015               	movf	ARPV4_Init@x,w,c
  5590  0141A0  0D01               	mullw	1
  5591  0141A2  0E80               	movlw	low _arpMap
  5592  0141A4  24F3               	addwf	prodl,w,c
  5593  0141A6  6ED9               	movwf	fsr2l,c
  5594  0141A8  0E04               	movlw	high _arpMap
  5595  0141AA  20F4               	addwfc	prodh,w,c
  5596  0141AC  6EDA               	movwf	fsr2h,c
  5597  0141AE  0E00               	movlw	0
  5598  0141B0  6EDF               	movwf	indf2,c
  5599  0141B2  2A15               	incf	ARPV4_Init@x,f,c
  5600  0141B4  D7F0               	goto	l6372
  5601  0141B6                     u5240:
  5602                           
  5603                           ;arpv4.c: 92: }
  5604                           ;arpv4.c: 93: ETH_GetMAC((char*)&hostMacAddress);
  5605  0141B6  0E73               	movlw	low _hostMacAddress
  5606  0141B8  6E13               	movwf	ETH_GetMAC@mac,c
  5607  0141BA  0E02               	movlw	high _hostMacAddress
  5608  0141BC  6E14               	movwf	ETH_GetMAC@mac+1,c
  5609  0141BE  ECE0  F09D         	call	_ETH_GetMAC	;wreg free
  5610  0141C2  0012               	return		;funcret
  5611  0141C4                     __end_of_ARPV4_Init:
  5612                           	opt stack 0
  5613                           tosu	equ	0xFFF
  5614                           tosh	equ	0xFFE
  5615                           tosl	equ	0xFFD
  5616                           pclath	equ	0xFFA
  5617                           tblptru	equ	0xFF8
  5618                           tblptrh	equ	0xFF7
  5619                           tblptrl	equ	0xFF6
  5620                           tablat	equ	0xFF5
  5621                           prodh	equ	0xFF4
  5622                           prodl	equ	0xFF3
  5623                           intcon	equ	0xFF2
  5624                           indf0	equ	0xFEF
  5625                           postinc0	equ	0xFEE
  5626                           fsr0h	equ	0xFEA
  5627                           fsr0l	equ	0xFE9
  5628                           wreg	equ	0xFE8
  5629                           postdec1	equ	0xFE5
  5630                           fsr1l	equ	0xFE1
  5631                           indf2	equ	0xFDF
  5632                           postinc2	equ	0xFDE
  5633                           postdec2	equ	0xFDD
  5634                           fsr2h	equ	0xFDA
  5635                           fsr2l	equ	0xFD9
  5636                           status	equ	0xFD8
  5637                           
  5638 ;; *************** function _ETH_GetMAC *****************
  5639 ;; Defined at:
  5640 ;;		line 1047 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  mac             2   18[COMRAM] PTR unsigned char 
  5643 ;;		 -> hostMacAddress(6), 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		fsr2l, fsr2h, status,2, status,0
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;Total ram usage:        2 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:    4
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_ARPV4_Init
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text27
  5670  013BC0                     __ptext27:
  5671                           	opt stack 0
  5672  013BC0                     _ETH_GetMAC:
  5673                           	opt stack 23
  5674                           
  5675                           ;ETHxxJ6x_driver.c: 1050: *mac++ = MAADR1;
  5676                           
  5677                           ;incstack = 0
  5678  013BC0  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  5679  013BC4  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  5680  013BC8  CE84 FFDF          	movff	3716,indf2	;volatile
  5681  013BCC  4A13               	infsnz	ETH_GetMAC@mac,f,c
  5682  013BCE  2A14               	incf	ETH_GetMAC@mac+1,f,c
  5683                           
  5684                           ;ETHxxJ6x_driver.c: 1051: *mac++ = MAADR2;
  5685  013BD0  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  5686  013BD4  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  5687  013BD8  CE85 FFDF          	movff	3717,indf2	;volatile
  5688  013BDC  4A13               	infsnz	ETH_GetMAC@mac,f,c
  5689  013BDE  2A14               	incf	ETH_GetMAC@mac+1,f,c
  5690                           
  5691                           ;ETHxxJ6x_driver.c: 1052: *mac++ = MAADR3;
  5692  013BE0  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  5693  013BE4  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  5694  013BE8  CE82 FFDF          	movff	3714,indf2	;volatile
  5695  013BEC  4A13               	infsnz	ETH_GetMAC@mac,f,c
  5696  013BEE  2A14               	incf	ETH_GetMAC@mac+1,f,c
  5697                           
  5698                           ;ETHxxJ6x_driver.c: 1053: *mac++ = MAADR4;
  5699  013BF0  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  5700  013BF4  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  5701  013BF8  CE83 FFDF          	movff	3715,indf2	;volatile
  5702  013BFC  4A13               	infsnz	ETH_GetMAC@mac,f,c
  5703  013BFE  2A14               	incf	ETH_GetMAC@mac+1,f,c
  5704                           
  5705                           ;ETHxxJ6x_driver.c: 1054: *mac++ = MAADR5;
  5706  013C00  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  5707  013C04  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  5708  013C08  CE80 FFDF          	movff	3712,indf2	;volatile
  5709  013C0C  4A13               	infsnz	ETH_GetMAC@mac,f,c
  5710  013C0E  2A14               	incf	ETH_GetMAC@mac+1,f,c
  5711                           
  5712                           ;ETHxxJ6x_driver.c: 1055: *mac = MAADR6;
  5713  013C10  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  5714  013C14  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  5715  013C18  CE81 FFDF          	movff	3713,indf2	;volatile
  5716  013C1C  0012               	return		;funcret
  5717  013C1E                     __end_of_ETH_GetMAC:
  5718                           	opt stack 0
  5719                           tosu	equ	0xFFF
  5720                           tosh	equ	0xFFE
  5721                           tosl	equ	0xFFD
  5722                           pclath	equ	0xFFA
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon	equ	0xFF2
  5730                           indf0	equ	0xFEF
  5731                           postinc0	equ	0xFEE
  5732                           fsr0h	equ	0xFEA
  5733                           fsr0l	equ	0xFE9
  5734                           wreg	equ	0xFE8
  5735                           postdec1	equ	0xFE5
  5736                           fsr1l	equ	0xFE1
  5737                           indf2	equ	0xFDF
  5738                           postinc2	equ	0xFDE
  5739                           postdec2	equ	0xFDD
  5740                           fsr2h	equ	0xFDA
  5741                           fsr2l	equ	0xFD9
  5742                           status	equ	0xFD8
  5743                           
  5744 ;; *************** function _INTERRUPT_Initialize *****************
  5745 ;; Defined at:
  5746 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		None
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    4
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_SYSTEM_Initialize
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text28
  5775  0145E4                     __ptext28:
  5776                           	opt stack 0
  5777  0145E4                     _INTERRUPT_Initialize:
  5778                           	opt stack 25
  5779                           
  5780                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  5781                           
  5782                           ;incstack = 0
  5783  0145E4  9ED0               	bcf	4048,7,c	;volatile
  5784  0145E6  0012               	return		;funcret
  5785  0145E8                     __end_of_INTERRUPT_Initialize:
  5786                           	opt stack 0
  5787                           tosu	equ	0xFFF
  5788                           tosh	equ	0xFFE
  5789                           tosl	equ	0xFFD
  5790                           pclath	equ	0xFFA
  5791                           tblptru	equ	0xFF8
  5792                           tblptrh	equ	0xFF7
  5793                           tblptrl	equ	0xFF6
  5794                           tablat	equ	0xFF5
  5795                           prodh	equ	0xFF4
  5796                           prodl	equ	0xFF3
  5797                           intcon	equ	0xFF2
  5798                           indf0	equ	0xFEF
  5799                           postinc0	equ	0xFEE
  5800                           fsr0h	equ	0xFEA
  5801                           fsr0l	equ	0xFE9
  5802                           wreg	equ	0xFE8
  5803                           postdec1	equ	0xFE5
  5804                           fsr1l	equ	0xFE1
  5805                           indf2	equ	0xFDF
  5806                           postinc2	equ	0xFDE
  5807                           postdec2	equ	0xFDD
  5808                           fsr2h	equ	0xFDA
  5809                           fsr2l	equ	0xFD9
  5810                           status	equ	0xFD8
  5811                           
  5812 ;; *************** function _ECCP1_Initialize *****************
  5813 ;; Defined at:
  5814 ;;		line 57 in file "mcc_generated_files/eccp1.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    4
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_SYSTEM_Initialize
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text29
  5843  0144B2                     __ptext29:
  5844                           	opt stack 0
  5845  0144B2                     _ECCP1_Initialize:
  5846                           	opt stack 25
  5847                           
  5848                           ;eccp1.c: 60: CCP1CON = 0x00;
  5849                           
  5850                           ;incstack = 0
  5851  0144B2  0E00               	movlw	0
  5852  0144B4  6EBD               	movwf	4029,c	;volatile
  5853                           
  5854                           ;eccp1.c: 62: ECCP1DEL = 0x00;
  5855  0144B6  0E00               	movlw	0
  5856  0144B8  6E79               	movwf	3961,c	;volatile
  5857                           
  5858                           ;eccp1.c: 64: ECCP1AS = 0x00;
  5859  0144BA  0E00               	movlw	0
  5860  0144BC  6EB6               	movwf	4022,c	;volatile
  5861                           
  5862                           ;eccp1.c: 66: CCPR1L = 0x00;
  5863  0144BE  0E00               	movlw	0
  5864  0144C0  6EBE               	movwf	4030,c	;volatile
  5865                           
  5866                           ;eccp1.c: 68: CCPR1H = 0x00;
  5867  0144C2  0E00               	movlw	0
  5868  0144C4  6EBF               	movwf	4031,c	;volatile
  5869  0144C6  0012               	return		;funcret
  5870  0144C8                     __end_of_ECCP1_Initialize:
  5871                           	opt stack 0
  5872                           tosu	equ	0xFFF
  5873                           tosh	equ	0xFFE
  5874                           tosl	equ	0xFFD
  5875                           pclath	equ	0xFFA
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           indf0	equ	0xFEF
  5884                           postinc0	equ	0xFEE
  5885                           fsr0h	equ	0xFEA
  5886                           fsr0l	equ	0xFE9
  5887                           wreg	equ	0xFE8
  5888                           postdec1	equ	0xFE5
  5889                           fsr1l	equ	0xFE1
  5890                           indf2	equ	0xFDF
  5891                           postinc2	equ	0xFDE
  5892                           postdec2	equ	0xFDD
  5893                           fsr2h	equ	0xFDA
  5894                           fsr2l	equ	0xFD9
  5895                           status	equ	0xFD8
  5896                           
  5897 ;; *************** function _ADC_Initialize *****************
  5898 ;; Defined at:
  5899 ;;		line 58 in file "mcc_generated_files/adc.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;		None
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  1    wreg      void 
  5906 ;; Registers used:
  5907 ;;		wreg, status,2
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;Total ram usage:        0 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    4
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_SYSTEM_Initialize
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text30
  5928  0144C8                     __ptext30:
  5929                           	opt stack 0
  5930  0144C8                     _ADC_Initialize:
  5931                           	opt stack 25
  5932                           
  5933                           ;adc.c: 63: ADCON0 = 0x01;
  5934                           
  5935                           ;incstack = 0
  5936  0144C8  0E01               	movlw	1
  5937  0144CA  6EC2               	movwf	4034,c	;volatile
  5938                           
  5939                           ;adc.c: 66: ADCON1 = 0x10;
  5940  0144CC  0E10               	movlw	16
  5941  0144CE  6EC1               	movwf	4033,c	;volatile
  5942                           
  5943                           ;adc.c: 69: ADCON2 = 0x86;
  5944  0144D0  0E86               	movlw	134
  5945  0144D2  6EC0               	movwf	4032,c	;volatile
  5946                           
  5947                           ;adc.c: 72: ADRESL = 0x00;
  5948  0144D4  0E00               	movlw	0
  5949  0144D6  6EC3               	movwf	4035,c	;volatile
  5950                           
  5951                           ;adc.c: 75: ADRESH = 0x00;
  5952  0144D8  0E00               	movlw	0
  5953  0144DA  6EC4               	movwf	4036,c	;volatile
  5954  0144DC  0012               	return		;funcret
  5955  0144DE                     __end_of_ADC_Initialize:
  5956                           	opt stack 0
  5957                           tosu	equ	0xFFF
  5958                           tosh	equ	0xFFE
  5959                           tosl	equ	0xFFD
  5960                           pclath	equ	0xFFA
  5961                           tblptru	equ	0xFF8
  5962                           tblptrh	equ	0xFF7
  5963                           tblptrl	equ	0xFF6
  5964                           tablat	equ	0xFF5
  5965                           prodh	equ	0xFF4
  5966                           prodl	equ	0xFF3
  5967                           intcon	equ	0xFF2
  5968                           indf0	equ	0xFEF
  5969                           postinc0	equ	0xFEE
  5970                           fsr0h	equ	0xFEA
  5971                           fsr0l	equ	0xFE9
  5972                           wreg	equ	0xFE8
  5973                           postdec1	equ	0xFE5
  5974                           fsr1l	equ	0xFE1
  5975                           indf2	equ	0xFDF
  5976                           postinc2	equ	0xFDE
  5977                           postdec2	equ	0xFDD
  5978                           fsr2h	equ	0xFDA
  5979                           fsr2l	equ	0xFD9
  5980                           status	equ	0xFD8
  5981                           
  5982 ;; *************** function _Network_Manage *****************
  5983 ;; Defined at:
  5984 ;;		line 76 in file "mcc_generated_files/TCPIPLibrary/network.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;		None
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;  now             4   18[BANK2 ] long 
  5989 ;; Return value:  Size  Location     Type
  5990 ;;                  1    wreg      void 
  5991 ;; Registers used:
  5992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;Total ram usage:        5 bytes
  6003 ;; Hardware stack levels used:    1
  6004 ;; Hardware stack levels required when called:   16
  6005 ;; This function calls:
  6006 ;;		_ARPV4_Update
  6007 ;;		_DHCP_Manage
  6008 ;;		_ETH_EventHandler
  6009 ;;		_Network_Read
  6010 ;;		_time
  6011 ;; This function is called by:
  6012 ;;		_main
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text31
  6017  013B00                     __ptext31:
  6018                           	opt stack 0
  6019  013B00                     _Network_Manage:
  6020                           	opt stack 14
  6021                           
  6022                           ;network.c: 78: time_t now;
  6023                           ;network.c: 79: static time_t nowPv = 0;
  6024                           ;network.c: 81: ETH_EventHandler();
  6025                           
  6026                           ;incstack = 0
  6027  013B00  EC3D  F09E         	call	_ETH_EventHandler	;wreg free
  6028                           
  6029                           ;network.c: 82: Network_Read();
  6030  013B04  ECCD  F09A         	call	_Network_Read	;wreg free
  6031                           
  6032                           ;network.c: 83: DHCP_Manage();
  6033  013B08  ECD9  F095         	call	_DHCP_Manage	;wreg free
  6034                           
  6035                           ;network.c: 86: time(&now);
  6036  013B0C  0EEF               	movlw	low Network_Manage@now
  6037  013B0E  6E13               	movwf	time@t,c
  6038  013B10  0E02               	movlw	high Network_Manage@now
  6039  013B12  6E14               	movwf	time@t+1,c
  6040  013B14  ECC3  F09E         	call	_time	;wreg free
  6041                           
  6042                           ;network.c: 87: if(now >= arpTimer)
  6043  013B18  0102               	movlb	2	; () banked
  6044  013B1A  5179               	movf	_arpTimer& (0+255),w,b
  6045  013B1C  5DEF               	subwf	Network_Manage@now& (0+255),w,b
  6046  013B1E  517A               	movf	(_arpTimer+1)& (0+255),w,b
  6047  013B20  59F0               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  6048  013B22  517B               	movf	(_arpTimer+2)& (0+255),w,b
  6049  013B24  59F1               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  6050  013B26  51F2               	movf	(Network_Manage@now+3)& (0+255),w,b
  6051  013B28  0A80               	xorlw	128
  6052  013B2A  0100               	movlb	0	; () banked
  6053  013B2C  6FFF               	movwf	??_Network_Manage& (0+255),b
  6054  013B2E  0102               	movlb	2	; () banked
  6055  013B30  517C               	movf	(_arpTimer+3)& (0+255),w,b
  6056  013B32  0A80               	xorlw	128
  6057  013B34  0100               	movlb	0	; () banked
  6058  013B36  59FF               	subwfb	??_Network_Manage& (0+255),w,b
  6059  013B38  A0D8               	btfss	status,0,c
  6060  013B3A  D009               	goto	l985
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;network.c: 88: {
  6064                           ;network.c: 89: ARPV4_Update();
  6065  013B3C  EC13  F0A1         	call	_ARPV4_Update	;wreg free
  6066                           
  6067                           ;network.c: 90: arpTimer += 10;
  6068  013B40  0E0A               	movlw	10
  6069  013B42  0102               	movlb	2	; () banked
  6070  013B44  2779               	addwf	_arpTimer& (0+255),f,b
  6071  013B46  0E00               	movlw	0
  6072  013B48  237A               	addwfc	(_arpTimer+1)& (0+255),f,b
  6073  013B4A  237B               	addwfc	(_arpTimer+2)& (0+255),f,b
  6074  013B4C  237C               	addwfc	(_arpTimer+3)& (0+255),f,b
  6075  013B4E                     l985:
  6076                           
  6077                           ;network.c: 96: }
  6078                           ;network.c: 97: nowPv = now;
  6079                           
  6080                           ; BSR set to: 2
  6081                           ;network.c: 93: {
  6082                           
  6083                           ; BSR set to: 2
  6084  013B4E  C2EF  F232         	movff	Network_Manage@now,Network_Manage@nowPv
  6085  013B52  C2F0  F233         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  6086  013B56  C2F1  F234         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  6087  013B5A  C2F2  F235         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  6088  013B5E  0012               	return		;funcret
  6089  013B60                     __end_of_Network_Manage:
  6090                           	opt stack 0
  6091                           tosu	equ	0xFFF
  6092                           tosh	equ	0xFFE
  6093                           tosl	equ	0xFFD
  6094                           pclath	equ	0xFFA
  6095                           tblptru	equ	0xFF8
  6096                           tblptrh	equ	0xFF7
  6097                           tblptrl	equ	0xFF6
  6098                           tablat	equ	0xFF5
  6099                           prodh	equ	0xFF4
  6100                           prodl	equ	0xFF3
  6101                           intcon	equ	0xFF2
  6102                           indf0	equ	0xFEF
  6103                           postinc0	equ	0xFEE
  6104                           fsr0h	equ	0xFEA
  6105                           fsr0l	equ	0xFE9
  6106                           wreg	equ	0xFE8
  6107                           postdec1	equ	0xFE5
  6108                           fsr1l	equ	0xFE1
  6109                           indf2	equ	0xFDF
  6110                           postinc2	equ	0xFDE
  6111                           postdec2	equ	0xFDD
  6112                           fsr2h	equ	0xFDA
  6113                           fsr2l	equ	0xFD9
  6114                           status	equ	0xFD8
  6115                           
  6116 ;; *************** function _Network_Read *****************
  6117 ;; Defined at:
  6118 ;;		line 100 in file "mcc_generated_files/TCPIPLibrary/network.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  debug_str      80    0        unsigned char [80]
  6123 ;;  header         14    4[BANK2 ] struct .
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;Total ram usage:       18 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:   15
  6140 ;; This function calls:
  6141 ;;		_ARPV4_Packet
  6142 ;;		_ETH_Flush
  6143 ;;		_ETH_NextPacketUpdate
  6144 ;;		_ETH_ReadBlock
  6145 ;;		_IPV4_Packet
  6146 ;; This function is called by:
  6147 ;;		_Network_Manage
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text32
  6152  01359A                     __ptext32:
  6153                           	opt stack 0
  6154  01359A                     _Network_Read:
  6155                           	opt stack 14
  6156                           
  6157                           ;network.c: 102: ethernetFrame_t header;
  6158                           ;network.c: 103: char debug_str[80];
  6159                           ;network.c: 105: if(ethData.pktReady)
  6160                           
  6161                           ;incstack = 0
  6162  01359A  0102               	movlb	2	; () banked
  6163  01359C  A324               	btfss	_ethData& (0+255),1,b	;volatile
  6164  01359E  0012               	return	
  6165                           
  6166                           ; BSR set to: 2
  6167                           ;network.c: 106: {
  6168                           ;network.c: 107: ETH_NextPacketUpdate();
  6169  0135A0  EC1A  F0A0         	call	_ETH_NextPacketUpdate	;wreg free
  6170                           
  6171                           ;network.c: 108: ETH_ReadBlock((char *)&header, sizeof(header));
  6172  0135A4  0EE1               	movlw	low Network_Read@header
  6173  0135A6  6E13               	movwf	ETH_ReadBlock@buffer,c
  6174  0135A8  0E02               	movlw	high Network_Read@header
  6175  0135AA  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  6176  0135AC  0E00               	movlw	0
  6177  0135AE  6E16               	movwf	ETH_ReadBlock@length+1,c
  6178  0135B0  0E0E               	movlw	14
  6179  0135B2  6E15               	movwf	ETH_ReadBlock@length,c
  6180  0135B4  ECEE  F09E         	call	_ETH_ReadBlock	;wreg free
  6181                           
  6182                           ;network.c: 109: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  6183  0135B8  0102               	movlb	2	; () banked
  6184  0135BA  51ED               	movf	(Network_Read@header+12)& (0+255),w,b
  6185  0135BC  6FDE               	movwf	(??_Network_Read+1)& (0+255),b
  6186  0135BE  6BDD               	clrf	??_Network_Read& (0+255),b
  6187  0135C0  EE22  F0ED         	lfsr	2,Network_Read@header+12
  6188  0135C4  CFDE F2DF          	movff	postinc2,??_Network_Read+2
  6189  0135C8  CFDD F2E0          	movff	postdec2,??_Network_Read+3
  6190  0135CC  C2E0  F2DF         	movff	??_Network_Read+3,??_Network_Read+2
  6191  0135D0  6BE0               	clrf	(??_Network_Read+3)& (0+255),b
  6192  0135D2  0EFF               	movlw	255
  6193  0135D4  17DF               	andwf	(??_Network_Read+2)& (0+255),f,b
  6194  0135D6  0E00               	movlw	0
  6195  0135D8  17E0               	andwf	(??_Network_Read+3)& (0+255),f,b
  6196  0135DA  51DD               	movf	??_Network_Read& (0+255),w,b
  6197  0135DC  11DF               	iorwf	(??_Network_Read+2)& (0+255),w,b
  6198  0135DE  6FED               	movwf	(Network_Read@header+12)& (0+255),b
  6199  0135E0  51DE               	movf	(??_Network_Read+1)& (0+255),w,b
  6200  0135E2  11E0               	iorwf	(??_Network_Read+3)& (0+255),w,b
  6201  0135E4  6FEE               	movwf	(Network_Read@header+13)& (0+255),b
  6202                           
  6203                           ;network.c: 110: switch (header.id.type)
  6204  0135E6  D006               	goto	l991
  6205  0135E8                     
  6206                           ; BSR set to: 2
  6207                           ;network.c: 115: ARPV4_Packet();
  6208                           
  6209                           ; BSR set to: 2
  6210  0135E8  EC08  F086         	call	_ARPV4_Packet	;wreg free
  6211                           
  6212                           ;network.c: 116: break;
  6213  0135EC  D022               	goto	l993
  6214  0135EE                     
  6215                           ;network.c: 118: IPV4_Packet();
  6216  0135EE  EC5D  F083         	call	_IPV4_Packet	;wreg free
  6217                           
  6218                           ;network.c: 124: }
  6219                           
  6220                           ;network.c: 123: break;
  6221                           
  6222                           ;network.c: 122: default:
  6223                           
  6224                           ;network.c: 121: break;
  6225                           
  6226                           ;network.c: 120: case 0x86DD:
  6227                           
  6228                           ;network.c: 119: break;
  6229  0135F2  D01F               	goto	l993
  6230  0135F4                     l991:
  6231  0135F4  EE22  F0ED         	lfsr	2,Network_Read@header+12
  6232  0135F8  CFDE F2DD          	movff	postinc2,??_Network_Read
  6233  0135FC  CFDD F2DE          	movff	postdec2,??_Network_Read+1
  6234                           
  6235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  6236                           ; Switch size 1, requested type "space"
  6237                           ; Number of cases is 3, Range of values is 8 to 134
  6238                           ; switch strategies available:
  6239                           ; Name         Instructions Cycles
  6240                           ; simple_byte           10     6 (average)
  6241                           ;	Chosen strategy is simple_byte
  6242  013600  0102               	movlb	2	; () banked
  6243  013602  51DE               	movf	(??_Network_Read+1)& (0+255),w,b
  6244  013604  0A08               	xorlw	8	; case 8
  6245  013606  B4D8               	btfsc	status,2,c
  6246  013608  D007               	goto	l9444
  6247  01360A  0A89               	xorlw	137	; case 129
  6248  01360C  B4D8               	btfsc	status,2,c
  6249  01360E  D00C               	goto	l9446
  6250  013610  0A07               	xorlw	7	; case 134
  6251  013612  B4D8               	btfsc	status,2,c
  6252  013614  D00C               	goto	l9448
  6253  013616  D00D               	goto	l993
  6254  013618                     l9444:
  6255                           
  6256                           ; BSR set to: 2
  6257                           ; Switch size 1, requested type "space"
  6258                           ; Number of cases is 2, Range of values is 0 to 6
  6259                           ; switch strategies available:
  6260                           ; Name         Instructions Cycles
  6261                           ; simple_byte            7     4 (average)
  6262                           ;	Chosen strategy is simple_byte
  6263  013618  51DD               	movf	??_Network_Read& (0+255),w,b
  6264  01361A  0A00               	xorlw	0	; case 0
  6265  01361C  B4D8               	btfsc	status,2,c
  6266  01361E  D7E7               	goto	l995
  6267  013620  0A06               	xorlw	6	; case 6
  6268  013622  B4D8               	btfsc	status,2,c
  6269  013624  D7E1               	goto	l994
  6270  013626  D005               	goto	l993
  6271  013628                     l9446:
  6272                           
  6273                           ; BSR set to: 2
  6274                           ; Switch size 1, requested type "space"
  6275                           ; Number of cases is 1, Range of values is 0 to 0
  6276                           ; switch strategies available:
  6277                           ; Name         Instructions Cycles
  6278                           ; simple_byte            4     3 (average)
  6279                           ;	Chosen strategy is simple_byte
  6280  013628  51DD               	movf	??_Network_Read& (0+255),w,b
  6281  01362A  0A00               	xorlw	0	; case 0
  6282  01362C  D002               	goto	l993
  6283  01362E                     l9448:
  6284                           
  6285                           ; BSR set to: 2
  6286                           ; Switch size 1, requested type "space"
  6287                           ; Number of cases is 1, Range of values is 221 to 221
  6288                           ; switch strategies available:
  6289                           ; Name         Instructions Cycles
  6290                           ; simple_byte            4     3 (average)
  6291                           ;	Chosen strategy is simple_byte
  6292  01362E  51DD               	movf	??_Network_Read& (0+255),w,b
  6293  013630  0ADD               	xorlw	221	; case 221
  6294  013632                     l993:
  6295                           
  6296                           ;network.c: 125: ETH_Flush();
  6297                           
  6298                           ; BSR set to: 2
  6299  013632  ECE6  F09C         	call	_ETH_Flush	;wreg free
  6300  013636  0012               	return	
  6301  013638                     __end_of_Network_Read:
  6302                           	opt stack 0
  6303                           tosu	equ	0xFFF
  6304                           tosh	equ	0xFFE
  6305                           tosl	equ	0xFFD
  6306                           pclath	equ	0xFFA
  6307                           tblptru	equ	0xFF8
  6308                           tblptrh	equ	0xFF7
  6309                           tblptrl	equ	0xFF6
  6310                           tablat	equ	0xFF5
  6311                           prodh	equ	0xFF4
  6312                           prodl	equ	0xFF3
  6313                           intcon	equ	0xFF2
  6314                           indf0	equ	0xFEF
  6315                           postinc0	equ	0xFEE
  6316                           fsr0h	equ	0xFEA
  6317                           fsr0l	equ	0xFE9
  6318                           wreg	equ	0xFE8
  6319                           postdec1	equ	0xFE5
  6320                           fsr1l	equ	0xFE1
  6321                           indf2	equ	0xFDF
  6322                           postinc2	equ	0xFDE
  6323                           postdec2	equ	0xFDD
  6324                           fsr2h	equ	0xFDA
  6325                           fsr2l	equ	0xFD9
  6326                           status	equ	0xFD8
  6327                           
  6328 ;; *************** function _IPV4_Packet *****************
  6329 ;; Defined at:
  6330 ;;		line 96 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;		None
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  msg            40    0        unsigned char [40]
  6335 ;;  cksm            2  157[BANK0 ] unsigned int 
  6336 ;;  length          2  155[BANK0 ] unsigned int 
  6337 ;;  hdrLen          1  154[BANK0 ] unsigned char 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      enum E392
  6340 ;; Registers used:
  6341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;Total ram usage:       33 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:   14
  6354 ;; This function calls:
  6355 ;;		_ETH_Dump
  6356 ;;		_ETH_ReadBlock
  6357 ;;		_ETH_RxComputeChecksum
  6358 ;;		_ICMP_Receive
  6359 ;;		_IPV4_PseudoHeaderChecksum
  6360 ;;		_IPV4_SaveStartPosition
  6361 ;;		_UDP_Receive
  6362 ;; This function is called by:
  6363 ;;		_Network_Read
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text33
  6368  0106BA                     __ptext33:
  6369                           	opt stack 0
  6370  0106BA                     _IPV4_Packet:
  6371                           	opt stack 14
  6372                           
  6373                           ;ipv4.c: 98: uint16_t cksm = 0;
  6374                           
  6375                           ;incstack = 0
  6376  0106BA  0E00               	movlw	0
  6377  0106BC  0100               	movlb	0	; () banked
  6378  0106BE  6FFE               	movwf	(IPV4_Packet@cksm+1)& (0+255),b
  6379  0106C0  0E00               	movlw	0
  6380  0106C2  6FFD               	movwf	IPV4_Packet@cksm& (0+255),b
  6381                           
  6382                           ;ipv4.c: 99: uint16_t length = 0;
  6383  0106C4  0E00               	movlw	0
  6384  0106C6  6FFC               	movwf	(IPV4_Packet@length+1)& (0+255),b
  6385  0106C8  0E00               	movlw	0
  6386  0106CA  6FFB               	movwf	IPV4_Packet@length& (0+255),b
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;ipv4.c: 100: char msg[40];
  6390                           ;ipv4.c: 101: uint8_t hdrLen;
  6391                           ;ipv4.c: 104: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  6392  0106CC  0E00               	movlw	0
  6393  0106CE  6E26               	movwf	ETH_RxComputeChecksum@len+1,c
  6394  0106D0  0E14               	movlw	20
  6395  0106D2  6E25               	movwf	ETH_RxComputeChecksum@len,c
  6396  0106D4  0E00               	movlw	0
  6397  0106D6  6E28               	movwf	ETH_RxComputeChecksum@seed+1,c
  6398  0106D8  0E00               	movlw	0
  6399  0106DA  6E27               	movwf	ETH_RxComputeChecksum@seed,c
  6400  0106DC  EC42  F09F         	call	_ETH_RxComputeChecksum	;wreg free
  6401  0106E0  C025  F0FD         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  6402  0106E4  C026  F0FE         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  6403                           
  6404                           ;ipv4.c: 105: if (cksm != 0)
  6405  0106E8  0100               	movlb	0	; () banked
  6406  0106EA  51FD               	movf	IPV4_Packet@cksm& (0+255),w,b
  6407  0106EC  11FE               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  6408  0106EE  A4D8               	btfss	status,2,c
  6409  0106F0  0012               	return	
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;ipv4.c: 108: }
  6413                           ;ipv4.c: 110: IPV4_SaveStartPosition();
  6414                           
  6415                           ; BSR set to: 0
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;ipv4.c: 106: {
  6419                           ;ipv4.c: 107: return IPV4_CHECKSUM_FAILS;
  6420                           ;	Return value of _IPV4_Packet is never used
  6421  0106F2  ECA3  F0A2         	call	_IPV4_SaveStartPosition	;wreg free
  6422                           
  6423                           ;ipv4.c: 111: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  6424  0106F6  0E48               	movlw	low _ipv4Header
  6425  0106F8  6E13               	movwf	ETH_ReadBlock@buffer,c
  6426  0106FA  0E02               	movlw	high _ipv4Header
  6427  0106FC  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  6428  0106FE  0E00               	movlw	0
  6429  010700  6E16               	movwf	ETH_ReadBlock@length+1,c
  6430  010702  0E14               	movlw	20
  6431  010704  6E15               	movwf	ETH_ReadBlock@length,c
  6432  010706  ECEE  F09E         	call	_ETH_ReadBlock	;wreg free
  6433                           
  6434                           ;ipv4.c: 112: if(ipv4Header.version != 4)
  6435  01070A  0102               	movlb	2	; () banked
  6436  01070C  3948               	swapf	_ipv4Header& (0+255),w,b
  6437  01070E  0B0F               	andlw	15
  6438  010710  0A04               	xorlw	4
  6439  010712  A4D8               	btfss	status,2,c
  6440  010714  0012               	return	
  6441                           
  6442                           ; BSR set to: 2
  6443                           ;ipv4.c: 115: }
  6444                           ;ipv4.c: 117: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  6445                           
  6446                           ; BSR set to: 2
  6447                           
  6448                           ; BSR set to: 2
  6449                           ;ipv4.c: 113: {
  6450                           ;ipv4.c: 114: return IP_WRONG_VERSION;
  6451                           ;	Return value of _IPV4_Packet is never used
  6452  010716  0EFF               	movlw	255
  6453  010718  1558               	andwf	(_ipv4Header+16)& (0+255),w,b
  6454  01071A  0100               	movlb	0	; () banked
  6455  01071C  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  6456  01071E  0E00               	movlw	0
  6457  010720  0102               	movlb	2	; () banked
  6458  010722  1559               	andwf	(_ipv4Header+17)& (0+255),w,b
  6459  010724  0100               	movlb	0	; () banked
  6460  010726  6FDF               	movwf	(??_IPV4_Packet+1)& (0+255),b
  6461  010728  0E00               	movlw	0
  6462  01072A  0102               	movlb	2	; () banked
  6463  01072C  155A               	andwf	(_ipv4Header+18)& (0+255),w,b
  6464  01072E  0100               	movlb	0	; () banked
  6465  010730  6FE0               	movwf	(??_IPV4_Packet+2)& (0+255),b
  6466  010732  0E00               	movlw	0
  6467  010734  0102               	movlb	2	; () banked
  6468  010736  155B               	andwf	(_ipv4Header+19)& (0+255),w,b
  6469  010738  0100               	movlb	0	; () banked
  6470  01073A  6FE1               	movwf	(??_IPV4_Packet+3)& (0+255),b
  6471  01073C  C0DE  F0E1         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  6472  010740  6BE0               	clrf	(??_IPV4_Packet+2)& (0+255),b
  6473  010742  6BDF               	clrf	(??_IPV4_Packet+1)& (0+255),b
  6474  010744  6BDE               	clrf	??_IPV4_Packet& (0+255),b
  6475  010746  EE22  F058         	lfsr	2,_ipv4Header+16
  6476  01074A  0E00               	movlw	0
  6477  01074C  14DE               	andwf	postinc2,w,c
  6478  01074E  6FE2               	movwf	(??_IPV4_Packet+4)& (0+255),b
  6479  010750  0EFF               	movlw	255
  6480  010752  14DE               	andwf	postinc2,w,c
  6481  010754  6FE3               	movwf	(??_IPV4_Packet+5)& (0+255),b
  6482  010756  0E00               	movlw	0
  6483  010758  14DE               	andwf	postinc2,w,c
  6484  01075A  6FE4               	movwf	(??_IPV4_Packet+6)& (0+255),b
  6485  01075C  0E00               	movlw	0
  6486  01075E  14DE               	andwf	postinc2,w,c
  6487  010760  6FE5               	movwf	(??_IPV4_Packet+7)& (0+255),b
  6488  010762  C0E4  F0E5         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  6489  010766  C0E3  F0E4         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  6490  01076A  C0E2  F0E3         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  6491  01076E  6BE2               	clrf	(??_IPV4_Packet+4)& (0+255),b
  6492  010770  C258  F0E6         	movff	_ipv4Header+16,??_IPV4_Packet+8
  6493  010774  C259  F0E7         	movff	_ipv4Header+17,??_IPV4_Packet+9
  6494  010778  C25A  F0E8         	movff	_ipv4Header+18,??_IPV4_Packet+10
  6495  01077C  C25B  F0E9         	movff	_ipv4Header+19,??_IPV4_Packet+11
  6496  010780  C0E7  F0E6         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  6497  010784  C0E8  F0E7         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  6498  010788  C0E9  F0E8         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  6499  01078C  6BE9               	clrf	(??_IPV4_Packet+11)& (0+255),b
  6500  01078E  0E00               	movlw	0
  6501  010790  15E6               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
  6502  010792  6FEA               	movwf	(??_IPV4_Packet+12)& (0+255),b
  6503  010794  0EFF               	movlw	255
  6504  010796  15E7               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
  6505  010798  6FEB               	movwf	(??_IPV4_Packet+13)& (0+255),b
  6506  01079A  0E00               	movlw	0
  6507  01079C  15E8               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
  6508  01079E  6FEC               	movwf	(??_IPV4_Packet+14)& (0+255),b
  6509  0107A0  0E00               	movlw	0
  6510  0107A2  15E9               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
  6511  0107A4  6FED               	movwf	(??_IPV4_Packet+15)& (0+255),b
  6512  0107A6  EE22  F058         	lfsr	2,_ipv4Header+16
  6513  0107AA  0E00               	movlw	0
  6514  0107AC  14DE               	andwf	postinc2,w,c
  6515  0107AE  6FEE               	movwf	(??_IPV4_Packet+16)& (0+255),b
  6516  0107B0  0E00               	movlw	0
  6517  0107B2  14DE               	andwf	postinc2,w,c
  6518  0107B4  6FEF               	movwf	(??_IPV4_Packet+17)& (0+255),b
  6519  0107B6  0E00               	movlw	0
  6520  0107B8  14DE               	andwf	postinc2,w,c
  6521  0107BA  6FF0               	movwf	(??_IPV4_Packet+18)& (0+255),b
  6522  0107BC  0EFF               	movlw	255
  6523  0107BE  14DE               	andwf	postinc2,w,c
  6524  0107C0  6FF1               	movwf	(??_IPV4_Packet+19)& (0+255),b
  6525  0107C2  0E19               	movlw	25
  6526  0107C4  D005               	goto	u8590
  6527  0107C6                     u8595:
  6528  0107C6  90D8               	bcf	status,0,c
  6529  0107C8  33F1               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  6530  0107CA  33F0               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  6531  0107CC  33EF               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  6532  0107CE  33EE               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  6533  0107D0                     u8590:
  6534  0107D0  2EE8               	decfsz	wreg,f,c
  6535  0107D2  D7F9               	goto	u8595
  6536  0107D4  51EA               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  6537  0107D6  11EE               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  6538  0107D8  6FF2               	movwf	(??_IPV4_Packet+20)& (0+255),b
  6539  0107DA  51EB               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  6540  0107DC  11EF               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  6541  0107DE  6FF3               	movwf	(??_IPV4_Packet+21)& (0+255),b
  6542  0107E0  51EC               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  6543  0107E2  11F0               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  6544  0107E4  6FF4               	movwf	(??_IPV4_Packet+22)& (0+255),b
  6545  0107E6  51ED               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  6546  0107E8  11F1               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  6547  0107EA  6FF5               	movwf	(??_IPV4_Packet+23)& (0+255),b
  6548  0107EC  51E2               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  6549  0107EE  11F2               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  6550  0107F0  6FF6               	movwf	(??_IPV4_Packet+24)& (0+255),b
  6551  0107F2  51E3               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  6552  0107F4  11F3               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  6553  0107F6  6FF7               	movwf	(??_IPV4_Packet+25)& (0+255),b
  6554  0107F8  51E4               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  6555  0107FA  11F4               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  6556  0107FC  6FF8               	movwf	(??_IPV4_Packet+26)& (0+255),b
  6557  0107FE  51E5               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  6558  010800  11F5               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  6559  010802  6FF9               	movwf	(??_IPV4_Packet+27)& (0+255),b
  6560  010804  51DE               	movf	??_IPV4_Packet& (0+255),w,b
  6561  010806  11F6               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  6562  010808  0102               	movlb	2	; () banked
  6563  01080A  6F58               	movwf	(_ipv4Header+16)& (0+255),b
  6564  01080C  0100               	movlb	0	; () banked
  6565  01080E  51DF               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  6566  010810  11F7               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  6567  010812  0102               	movlb	2	; () banked
  6568  010814  6F59               	movwf	(_ipv4Header+17)& (0+255),b
  6569  010816  0100               	movlb	0	; () banked
  6570  010818  51E0               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  6571  01081A  11F8               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  6572  01081C  0102               	movlb	2	; () banked
  6573  01081E  6F5A               	movwf	(_ipv4Header+18)& (0+255),b
  6574  010820  0100               	movlb	0	; () banked
  6575  010822  51E1               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  6576  010824  11F9               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  6577  010826  0102               	movlb	2	; () banked
  6578  010828  6F5B               	movwf	(_ipv4Header+19)& (0+255),b
  6579                           
  6580                           ;ipv4.c: 118: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  6581  01082A  0EFF               	movlw	255
  6582  01082C  1554               	andwf	(_ipv4Header+12)& (0+255),w,b
  6583  01082E  0100               	movlb	0	; () banked
  6584  010830  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  6585  010832  0E00               	movlw	0
  6586  010834  0102               	movlb	2	; () banked
  6587  010836  1555               	andwf	(_ipv4Header+13)& (0+255),w,b
  6588  010838  0100               	movlb	0	; () banked
  6589  01083A  6FDF               	movwf	(??_IPV4_Packet+1)& (0+255),b
  6590  01083C  0E00               	movlw	0
  6591  01083E  0102               	movlb	2	; () banked
  6592  010840  1556               	andwf	(_ipv4Header+14)& (0+255),w,b
  6593  010842  0100               	movlb	0	; () banked
  6594  010844  6FE0               	movwf	(??_IPV4_Packet+2)& (0+255),b
  6595  010846  0E00               	movlw	0
  6596  010848  0102               	movlb	2	; () banked
  6597  01084A  1557               	andwf	(_ipv4Header+15)& (0+255),w,b
  6598  01084C  0100               	movlb	0	; () banked
  6599  01084E  6FE1               	movwf	(??_IPV4_Packet+3)& (0+255),b
  6600  010850  C0DE  F0E1         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  6601  010854  6BE0               	clrf	(??_IPV4_Packet+2)& (0+255),b
  6602  010856  6BDF               	clrf	(??_IPV4_Packet+1)& (0+255),b
  6603  010858  6BDE               	clrf	??_IPV4_Packet& (0+255),b
  6604  01085A  EE22  F054         	lfsr	2,_ipv4Header+12
  6605  01085E  0E00               	movlw	0
  6606  010860  14DE               	andwf	postinc2,w,c
  6607  010862  6FE2               	movwf	(??_IPV4_Packet+4)& (0+255),b
  6608  010864  0EFF               	movlw	255
  6609  010866  14DE               	andwf	postinc2,w,c
  6610  010868  6FE3               	movwf	(??_IPV4_Packet+5)& (0+255),b
  6611  01086A  0E00               	movlw	0
  6612  01086C  14DE               	andwf	postinc2,w,c
  6613  01086E  6FE4               	movwf	(??_IPV4_Packet+6)& (0+255),b
  6614  010870  0E00               	movlw	0
  6615  010872  14DE               	andwf	postinc2,w,c
  6616  010874  6FE5               	movwf	(??_IPV4_Packet+7)& (0+255),b
  6617  010876  C0E4  F0E5         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  6618  01087A  C0E3  F0E4         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  6619  01087E  C0E2  F0E3         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  6620  010882  6BE2               	clrf	(??_IPV4_Packet+4)& (0+255),b
  6621  010884  C254  F0E6         	movff	_ipv4Header+12,??_IPV4_Packet+8
  6622  010888  C255  F0E7         	movff	_ipv4Header+13,??_IPV4_Packet+9
  6623  01088C  C256  F0E8         	movff	_ipv4Header+14,??_IPV4_Packet+10
  6624  010890  C257  F0E9         	movff	_ipv4Header+15,??_IPV4_Packet+11
  6625  010894  C0E7  F0E6         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  6626  010898  C0E8  F0E7         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  6627  01089C  C0E9  F0E8         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  6628  0108A0  6BE9               	clrf	(??_IPV4_Packet+11)& (0+255),b
  6629  0108A2  0E00               	movlw	0
  6630  0108A4  15E6               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
  6631  0108A6  6FEA               	movwf	(??_IPV4_Packet+12)& (0+255),b
  6632  0108A8  0EFF               	movlw	255
  6633  0108AA  15E7               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
  6634  0108AC  6FEB               	movwf	(??_IPV4_Packet+13)& (0+255),b
  6635  0108AE  0E00               	movlw	0
  6636  0108B0  15E8               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
  6637  0108B2  6FEC               	movwf	(??_IPV4_Packet+14)& (0+255),b
  6638  0108B4  0E00               	movlw	0
  6639  0108B6  15E9               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
  6640  0108B8  6FED               	movwf	(??_IPV4_Packet+15)& (0+255),b
  6641  0108BA  EE22  F054         	lfsr	2,_ipv4Header+12
  6642  0108BE  0E00               	movlw	0
  6643  0108C0  14DE               	andwf	postinc2,w,c
  6644  0108C2  6FEE               	movwf	(??_IPV4_Packet+16)& (0+255),b
  6645  0108C4  0E00               	movlw	0
  6646  0108C6  14DE               	andwf	postinc2,w,c
  6647  0108C8  6FEF               	movwf	(??_IPV4_Packet+17)& (0+255),b
  6648  0108CA  0E00               	movlw	0
  6649  0108CC  14DE               	andwf	postinc2,w,c
  6650  0108CE  6FF0               	movwf	(??_IPV4_Packet+18)& (0+255),b
  6651  0108D0  0EFF               	movlw	255
  6652  0108D2  14DE               	andwf	postinc2,w,c
  6653  0108D4  6FF1               	movwf	(??_IPV4_Packet+19)& (0+255),b
  6654  0108D6  0E19               	movlw	25
  6655  0108D8  D005               	goto	u8600
  6656  0108DA                     u8605:
  6657  0108DA  90D8               	bcf	status,0,c
  6658  0108DC  33F1               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  6659  0108DE  33F0               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  6660  0108E0  33EF               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  6661  0108E2  33EE               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  6662  0108E4                     u8600:
  6663  0108E4  2EE8               	decfsz	wreg,f,c
  6664  0108E6  D7F9               	goto	u8605
  6665  0108E8  51EA               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  6666  0108EA  11EE               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  6667  0108EC  6FF2               	movwf	(??_IPV4_Packet+20)& (0+255),b
  6668  0108EE  51EB               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  6669  0108F0  11EF               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  6670  0108F2  6FF3               	movwf	(??_IPV4_Packet+21)& (0+255),b
  6671  0108F4  51EC               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  6672  0108F6  11F0               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  6673  0108F8  6FF4               	movwf	(??_IPV4_Packet+22)& (0+255),b
  6674  0108FA  51ED               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  6675  0108FC  11F1               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  6676  0108FE  6FF5               	movwf	(??_IPV4_Packet+23)& (0+255),b
  6677  010900  51E2               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  6678  010902  11F2               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  6679  010904  6FF6               	movwf	(??_IPV4_Packet+24)& (0+255),b
  6680  010906  51E3               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  6681  010908  11F3               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  6682  01090A  6FF7               	movwf	(??_IPV4_Packet+25)& (0+255),b
  6683  01090C  51E4               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  6684  01090E  11F4               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  6685  010910  6FF8               	movwf	(??_IPV4_Packet+26)& (0+255),b
  6686  010912  51E5               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  6687  010914  11F5               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  6688  010916  6FF9               	movwf	(??_IPV4_Packet+27)& (0+255),b
  6689  010918  51DE               	movf	??_IPV4_Packet& (0+255),w,b
  6690  01091A  11F6               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  6691  01091C  0102               	movlb	2	; () banked
  6692  01091E  6F54               	movwf	(_ipv4Header+12)& (0+255),b
  6693  010920  0100               	movlb	0	; () banked
  6694  010922  51DF               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  6695  010924  11F7               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  6696  010926  0102               	movlb	2	; () banked
  6697  010928  6F55               	movwf	(_ipv4Header+13)& (0+255),b
  6698  01092A  0100               	movlb	0	; () banked
  6699  01092C  51E0               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  6700  01092E  11F8               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  6701  010930  0102               	movlb	2	; () banked
  6702  010932  6F56               	movwf	(_ipv4Header+14)& (0+255),b
  6703  010934  0100               	movlb	0	; () banked
  6704  010936  51E1               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  6705  010938  11F9               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  6706  01093A  0102               	movlb	2	; () banked
  6707  01093C  6F57               	movwf	(_ipv4Header+15)& (0+255),b
  6708                           
  6709                           ; BSR set to: 2
  6710                           ;ipv4.c: 120: if(ipv4Header.srcIpAddress == 0xFFFFFFFF)
  6711  01093E  2954               	incf	(_ipv4Header+12)& (0+255),w,b
  6712  010940  E107               	bnz	l8938
  6713  010942  2955               	incf	(_ipv4Header+13)& (0+255),w,b
  6714  010944  E105               	bnz	l8938
  6715  010946  2956               	incf	(_ipv4Header+14)& (0+255),w,b
  6716  010948  E103               	bnz	l8938
  6717  01094A  2957               	incf	(_ipv4Header+15)& (0+255),w,b
  6718  01094C  B4D8               	btfsc	status,2,c
  6719  01094E  0012               	return	
  6720  010950                     l8938:
  6721                           
  6722                           ; BSR set to: 2
  6723                           ;ipv4.c: 124: if(ipv4Header.dstIpAddress == (ip_database_info.ipv4_myAddress) || (ipv4He
      +                          ader.dstIpAddress == 0)||
  6724                           ;ipv4.c: 125: ((ipv4Header.dstIpAddress == 0xFFFFFFFF)
  6725                           ;ipv4.c: 126: ||((ipv4Header.dstIpAddress|0XFF000000 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0x00FFFFFF)== ipv4Header.dstIpAddress)))
  6726                           ;ipv4.c: 127: ||((ipv4Header.dstIpAddress|0xFFFF0000 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0x0000FFFF)== ipv4Header.dstIpAddress)))
  6727                           ;ipv4.c: 128: ||((ipv4Header.dstIpAddress|0xFFFFFF00 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0X000000FF)== ipv4Header.dstIpAddress))))
  6728  010950  5100               	movf	_ip_database_info& (0+255),w,b
  6729  010952  1958               	xorwf	(_ipv4Header+16)& (0+255),w,b
  6730  010954  E10A               	bnz	u8620
  6731  010956  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  6732  010958  1959               	xorwf	(_ipv4Header+17)& (0+255),w,b
  6733  01095A  E107               	bnz	u8620
  6734  01095C  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  6735  01095E  195A               	xorwf	(_ipv4Header+18)& (0+255),w,b
  6736  010960  E104               	bnz	u8620
  6737  010962  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  6738  010964  195B               	xorwf	(_ipv4Header+19)& (0+255),w,b
  6739  010966  B4D8               	btfsc	status,2,c
  6740  010968  D0A1               	goto	u8710
  6741  01096A                     u8620:
  6742                           
  6743                           ; BSR set to: 2
  6744  01096A  5158               	movf	(_ipv4Header+16)& (0+255),w,b
  6745  01096C  1159               	iorwf	(_ipv4Header+17)& (0+255),w,b
  6746  01096E  115A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  6747  010970  115B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  6748  010972  B4D8               	btfsc	status,2,c
  6749  010974  D09B               	goto	u8710
  6750                           
  6751                           ; BSR set to: 2
  6752  010976  2958               	incf	(_ipv4Header+16)& (0+255),w,b
  6753  010978  E107               	bnz	u8640
  6754  01097A  2959               	incf	(_ipv4Header+17)& (0+255),w,b
  6755  01097C  E105               	bnz	u8640
  6756  01097E  295A               	incf	(_ipv4Header+18)& (0+255),w,b
  6757  010980  E103               	bnz	u8640
  6758  010982  295B               	incf	(_ipv4Header+19)& (0+255),w,b
  6759  010984  B4D8               	btfsc	status,2,c
  6760  010986  D092               	goto	u8710
  6761  010988                     u8640:
  6762                           
  6763                           ; BSR set to: 2
  6764  010988  5158               	movf	(_ipv4Header+16)& (0+255),w,b
  6765  01098A  1159               	iorwf	(_ipv4Header+17)& (0+255),w,b
  6766  01098C  115A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  6767  01098E  115B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  6768  010990  B4D8               	btfsc	status,2,c
  6769  010992  D028               	goto	u8660
  6770                           
  6771                           ; BSR set to: 2
  6772  010994  0EFF               	movlw	255
  6773  010996  1100               	iorwf	_ip_database_info& (0+255),w,b
  6774  010998  0100               	movlb	0	; () banked
  6775  01099A  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  6776  01099C  0EFF               	movlw	255
  6777  01099E  0102               	movlb	2	; () banked
  6778  0109A0  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  6779  0109A2  0100               	movlb	0	; () banked
  6780  0109A4  6FDF               	movwf	(??_IPV4_Packet+1)& (0+255),b
  6781  0109A6  0EFF               	movlw	255
  6782  0109A8  0102               	movlb	2	; () banked
  6783  0109AA  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  6784  0109AC  0100               	movlb	0	; () banked
  6785  0109AE  6FE0               	movwf	(??_IPV4_Packet+2)& (0+255),b
  6786  0109B0  0E00               	movlw	0
  6787  0109B2  0102               	movlb	2	; () banked
  6788  0109B4  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  6789  0109B6  0100               	movlb	0	; () banked
  6790  0109B8  6FE1               	movwf	(??_IPV4_Packet+3)& (0+255),b
  6791  0109BA  0102               	movlb	2	; () banked
  6792  0109BC  5158               	movf	(_ipv4Header+16)& (0+255),w,b
  6793  0109BE  0100               	movlb	0	; () banked
  6794  0109C0  19DE               	xorwf	??_IPV4_Packet& (0+255),w,b
  6795  0109C2  E110               	bnz	l8948
  6796  0109C4  0102               	movlb	2	; () banked
  6797  0109C6  5159               	movf	(_ipv4Header+17)& (0+255),w,b
  6798  0109C8  0100               	movlb	0	; () banked
  6799  0109CA  19DF               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  6800  0109CC  E10B               	bnz	l8948
  6801  0109CE  0102               	movlb	2	; () banked
  6802  0109D0  515A               	movf	(_ipv4Header+18)& (0+255),w,b
  6803  0109D2  0100               	movlb	0	; () banked
  6804  0109D4  19E0               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  6805  0109D6  E106               	bnz	l8948
  6806  0109D8  0102               	movlb	2	; () banked
  6807  0109DA  515B               	movf	(_ipv4Header+19)& (0+255),w,b
  6808  0109DC  0100               	movlb	0	; () banked
  6809  0109DE  19E1               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  6810  0109E0  B4D8               	btfsc	status,2,c
  6811  0109E2  D064               	goto	u8710
  6812  0109E4                     u8660:
  6813  0109E4                     l8948:
  6814  0109E4  0102               	movlb	2	; () banked
  6815  0109E6  5158               	movf	(_ipv4Header+16)& (0+255),w,b
  6816  0109E8  1159               	iorwf	(_ipv4Header+17)& (0+255),w,b
  6817  0109EA  115A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  6818  0109EC  115B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  6819  0109EE  B4D8               	btfsc	status,2,c
  6820  0109F0  D028               	goto	u8680
  6821                           
  6822                           ; BSR set to: 2
  6823  0109F2  0EFF               	movlw	255
  6824  0109F4  1100               	iorwf	_ip_database_info& (0+255),w,b
  6825  0109F6  0100               	movlb	0	; () banked
  6826  0109F8  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  6827  0109FA  0EFF               	movlw	255
  6828  0109FC  0102               	movlb	2	; () banked
  6829  0109FE  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  6830  010A00  0100               	movlb	0	; () banked
  6831  010A02  6FDF               	movwf	(??_IPV4_Packet+1)& (0+255),b
  6832  010A04  0E00               	movlw	0
  6833  010A06  0102               	movlb	2	; () banked
  6834  010A08  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  6835  010A0A  0100               	movlb	0	; () banked
  6836  010A0C  6FE0               	movwf	(??_IPV4_Packet+2)& (0+255),b
  6837  010A0E  0E00               	movlw	0
  6838  010A10  0102               	movlb	2	; () banked
  6839  010A12  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  6840  010A14  0100               	movlb	0	; () banked
  6841  010A16  6FE1               	movwf	(??_IPV4_Packet+3)& (0+255),b
  6842  010A18  0102               	movlb	2	; () banked
  6843  010A1A  5158               	movf	(_ipv4Header+16)& (0+255),w,b
  6844  010A1C  0100               	movlb	0	; () banked
  6845  010A1E  19DE               	xorwf	??_IPV4_Packet& (0+255),w,b
  6846  010A20  E110               	bnz	l8952
  6847  010A22  0102               	movlb	2	; () banked
  6848  010A24  5159               	movf	(_ipv4Header+17)& (0+255),w,b
  6849  010A26  0100               	movlb	0	; () banked
  6850  010A28  19DF               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  6851  010A2A  E10B               	bnz	l8952
  6852  010A2C  0102               	movlb	2	; () banked
  6853  010A2E  515A               	movf	(_ipv4Header+18)& (0+255),w,b
  6854  010A30  0100               	movlb	0	; () banked
  6855  010A32  19E0               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  6856  010A34  E106               	bnz	l8952
  6857  010A36  0102               	movlb	2	; () banked
  6858  010A38  515B               	movf	(_ipv4Header+19)& (0+255),w,b
  6859  010A3A  0100               	movlb	0	; () banked
  6860  010A3C  19E1               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  6861  010A3E  B4D8               	btfsc	status,2,c
  6862  010A40  D035               	goto	u8710
  6863  010A42                     u8680:
  6864  010A42                     l8952:
  6865  010A42  0102               	movlb	2	; () banked
  6866  010A44  5158               	movf	(_ipv4Header+16)& (0+255),w,b
  6867  010A46  1159               	iorwf	(_ipv4Header+17)& (0+255),w,b
  6868  010A48  115A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  6869  010A4A  115B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  6870  010A4C  B4D8               	btfsc	status,2,c
  6871  010A4E  D025               	goto	u8700
  6872                           
  6873                           ; BSR set to: 2
  6874  010A50  0EFF               	movlw	255
  6875  010A52  1100               	iorwf	_ip_database_info& (0+255),w,b
  6876  010A54  0100               	movlb	0	; () banked
  6877  010A56  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  6878  010A58  0102               	movlb	2	; () banked
  6879  010A5A  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  6880  010A5C  0100               	movlb	0	; () banked
  6881  010A5E  6FDF               	movwf	(??_IPV4_Packet+1)& (0+255),b
  6882  010A60  0102               	movlb	2	; () banked
  6883  010A62  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  6884  010A64  0100               	movlb	0	; () banked
  6885  010A66  6FE0               	movwf	(??_IPV4_Packet+2)& (0+255),b
  6886  010A68  0102               	movlb	2	; () banked
  6887  010A6A  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  6888  010A6C  0100               	movlb	0	; () banked
  6889  010A6E  6FE1               	movwf	(??_IPV4_Packet+3)& (0+255),b
  6890  010A70  0102               	movlb	2	; () banked
  6891  010A72  5158               	movf	(_ipv4Header+16)& (0+255),w,b
  6892  010A74  0100               	movlb	0	; () banked
  6893  010A76  19DE               	xorwf	??_IPV4_Packet& (0+255),w,b
  6894  010A78  E110               	bnz	l8956
  6895  010A7A  0102               	movlb	2	; () banked
  6896  010A7C  5159               	movf	(_ipv4Header+17)& (0+255),w,b
  6897  010A7E  0100               	movlb	0	; () banked
  6898  010A80  19DF               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  6899  010A82  E10B               	bnz	l8956
  6900  010A84  0102               	movlb	2	; () banked
  6901  010A86  515A               	movf	(_ipv4Header+18)& (0+255),w,b
  6902  010A88  0100               	movlb	0	; () banked
  6903  010A8A  19E0               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  6904  010A8C  E106               	bnz	l8956
  6905  010A8E  0102               	movlb	2	; () banked
  6906  010A90  515B               	movf	(_ipv4Header+19)& (0+255),w,b
  6907  010A92  0100               	movlb	0	; () banked
  6908  010A94  19E1               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  6909  010A96  B4D8               	btfsc	status,2,c
  6910  010A98  D009               	goto	u8710
  6911  010A9A                     u8700:
  6912  010A9A                     l8956:
  6913  010A9A  0102               	movlb	2	; () banked
  6914  010A9C  0558               	decf	(_ipv4Header+16)& (0+255),w,b
  6915  010A9E  E105               	bnz	u8711
  6916  010AA0  0EE0               	movlw	224
  6917  010AA2  195B               	xorwf	(_ipv4Header+19)& (0+255),w,b
  6918  010AA4  1159               	iorwf	(_ipv4Header+17)& (0+255),w,b
  6919  010AA6  115A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  6920  010AA8  A4D8               	btfss	status,2,c
  6921  010AAA                     u8711:
  6922  010AAA  0012               	return	
  6923  010AAC                     u8710:
  6924                           
  6925                           ;ipv4.c: 130: {
  6926                           ;ipv4.c: 131: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  6927                           
  6928                           ; BSR set to: 2
  6929  010AAC  0102               	movlb	2	; () banked
  6930  010AAE  514A               	movf	(_ipv4Header+2)& (0+255),w,b
  6931  010AB0  0100               	movlb	0	; () banked
  6932  010AB2  6FDF               	movwf	(??_IPV4_Packet+1)& (0+255),b
  6933  010AB4  6BDE               	clrf	??_IPV4_Packet& (0+255),b
  6934  010AB6  EE22  F04A         	lfsr	2,_ipv4Header+2
  6935  010ABA  CFDE F0E0          	movff	postinc2,??_IPV4_Packet+2
  6936  010ABE  CFDD F0E1          	movff	postdec2,??_IPV4_Packet+3
  6937  010AC2  C0E1  F0E0         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  6938  010AC6  6BE1               	clrf	(??_IPV4_Packet+3)& (0+255),b
  6939  010AC8  0EFF               	movlw	255
  6940  010ACA  17E0               	andwf	(??_IPV4_Packet+2)& (0+255),f,b
  6941  010ACC  0E00               	movlw	0
  6942  010ACE  17E1               	andwf	(??_IPV4_Packet+3)& (0+255),f,b
  6943  010AD0  51DE               	movf	??_IPV4_Packet& (0+255),w,b
  6944  010AD2  11E0               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  6945  010AD4  0102               	movlb	2	; () banked
  6946  010AD6  6F4A               	movwf	(_ipv4Header+2)& (0+255),b
  6947  010AD8  0100               	movlb	0	; () banked
  6948  010ADA  51DF               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  6949  010ADC  11E1               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  6950  010ADE  0102               	movlb	2	; () banked
  6951  010AE0  6F4B               	movwf	(_ipv4Header+3)& (0+255),b
  6952                           
  6953                           ; BSR set to: 2
  6954                           ;ipv4.c: 133: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  6955  010AE2  5148               	movf	_ipv4Header& (0+255),w,b
  6956  010AE4  0B0F               	andlw	15
  6957  010AE6  0100               	movlb	0	; () banked
  6958  010AE8  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  6959  010AEA  90D8               	bcf	status,0,c
  6960  010AEC  37DE               	rlcf	??_IPV4_Packet& (0+255),f,b
  6961  010AEE  90D8               	bcf	status,0,c
  6962  010AF0  35DE               	rlcf	??_IPV4_Packet& (0+255),w,b
  6963  010AF2  6FFA               	movwf	IPV4_Packet@hdrLen& (0+255),b
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;ipv4.c: 135: if(ipv4Header.ihl < 5)
  6967  010AF4  0102               	movlb	2	; () banked
  6968  010AF6  5148               	movf	_ipv4Header& (0+255),w,b
  6969  010AF8  0B0F               	andlw	15
  6970  010AFA  0100               	movlb	0	; () banked
  6971  010AFC  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  6972  010AFE  0E05               	movlw	5
  6973  010B00  61DE               	cpfslt	??_IPV4_Packet& (0+255),b
  6974  010B02  D001               	goto	l864
  6975  010B04  0012               	return	
  6976  010B06                     l864:
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;ipv4.c: 138: if (ipv4Header.ihl > 5)
  6980                           
  6981                           ; BSR set to: 0
  6982  010B06  0102               	movlb	2	; () banked
  6983  010B08  5148               	movf	_ipv4Header& (0+255),w,b
  6984  010B0A  0B0F               	andlw	15
  6985  010B0C  0100               	movlb	0	; () banked
  6986  010B0E  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  6987  010B10  0E05               	movlw	5
  6988  010B12  65DE               	cpfsgt	??_IPV4_Packet& (0+255),b
  6989  010B14  D074               	goto	l866
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;ipv4.c: 139: {
  6993                           ;ipv4.c: 141: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  6994  010B16  0EEC               	movlw	236
  6995  010B18  25FA               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  6996  010B1A  6E13               	movwf	ETH_Dump@length,c
  6997  010B1C  6A14               	clrf	ETH_Dump@length+1,c
  6998  010B1E  0EFF               	movlw	255
  6999  010B20  2214               	addwfc	ETH_Dump@length+1,f,c
  7000  010B22  ECFB  F0A0         	call	_ETH_Dump	;wreg free
  7001                           
  7002                           ;ipv4.c: 142: return IPV4_NO_OPTIONS;
  7003                           ;	Return value of _IPV4_Packet is never used
  7004  010B26  0012               	return	
  7005  010B28                     
  7006                           ;ipv4.c: 148: {
  7007                           ;ipv4.c: 150: if((ipv4Header.dstIpAddress == 0))
  7008  010B28  0102               	movlb	2	; () banked
  7009  010B2A  5158               	movf	(_ipv4Header+16)& (0+255),w,b
  7010  010B2C  1159               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7011  010B2E  115A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7012  010B30  115B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7013  010B32  B4D8               	btfsc	status,2,c
  7014  010B34  0012               	return	
  7015                           
  7016                           ; BSR set to: 2
  7017                           ;ipv4.c: 153: }
  7018                           ;ipv4.c: 154: length = ipv4Header.length - hdrLen;
  7019                           
  7020                           ; BSR set to: 2
  7021                           
  7022                           ; BSR set to: 2
  7023                           ;ipv4.c: 151: {
  7024                           ;ipv4.c: 152: return DEST_IP_NOT_MATCHED;
  7025                           ;	Return value of _IPV4_Packet is never used
  7026  010B36  0100               	movlb	0	; () banked
  7027  010B38  51FA               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7028  010B3A  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  7029  010B3C  6BDF               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7030  010B3E  1FDE               	comf	??_IPV4_Packet& (0+255),f,b
  7031  010B40  1FDF               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  7032  010B42  4BDE               	infsnz	??_IPV4_Packet& (0+255),f,b
  7033  010B44  2BDF               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  7034  010B46  0102               	movlb	2	; () banked
  7035  010B48  514A               	movf	(_ipv4Header+2)& (0+255),w,b
  7036  010B4A  0100               	movlb	0	; () banked
  7037  010B4C  25DE               	addwf	??_IPV4_Packet& (0+255),w,b
  7038  010B4E  6FFB               	movwf	IPV4_Packet@length& (0+255),b
  7039  010B50  0102               	movlb	2	; () banked
  7040  010B52  514B               	movf	(_ipv4Header+3)& (0+255),w,b
  7041  010B54  0100               	movlb	0	; () banked
  7042  010B56  21DF               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  7043  010B58  6FFC               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;ipv4.c: 155: cksm = ETH_RxComputeChecksum(length, 0);
  7047  010B5A  C0FB  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7048  010B5E  C0FC  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7049  010B62  0E00               	movlw	0
  7050  010B64  6E28               	movwf	ETH_RxComputeChecksum@seed+1,c
  7051  010B66  0E00               	movlw	0
  7052  010B68  6E27               	movwf	ETH_RxComputeChecksum@seed,c
  7053  010B6A  EC42  F09F         	call	_ETH_RxComputeChecksum	;wreg free
  7054  010B6E  C025  F0FD         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7055  010B72  C026  F0FE         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7056                           
  7057                           ;ipv4.c: 157: if (cksm == 0)
  7058  010B76  0100               	movlb	0	; () banked
  7059  010B78  51FD               	movf	IPV4_Packet@cksm& (0+255),w,b
  7060  010B7A  11FE               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  7061  010B7C  A4D8               	btfss	status,2,c
  7062  010B7E  0012               	return	
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;ipv4.c: 158: {
  7066                           ;ipv4.c: 159: ICMP_Receive(&ipv4Header);
  7067  010B80  0E48               	movlw	low _ipv4Header
  7068  010B82  6FB9               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
  7069  010B84  0E02               	movlw	high _ipv4Header
  7070  010B86  6FBA               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
  7071  010B88  EC12  F098         	call	_ICMP_Receive	;wreg free
  7072                           
  7073                           ;ipv4.c: 164: }
  7074                           ;ipv4.c: 165: }
  7075                           ;ipv4.c: 166: break;
  7076                           
  7077                           ;ipv4.c: 161: else
  7078                           ;ipv4.c: 162: {
  7079                           ;ipv4.c: 163: return ICMP_CHECKSUM_FAILS;
  7080                           ;	Return value of _IPV4_Packet is never used
  7081                           
  7082                           ;ipv4.c: 160: }
  7083  010B8C  0012               	return	
  7084  010B8E                     
  7085                           ;ipv4.c: 169: length = ipv4Header.length - hdrLen;
  7086  010B8E  0100               	movlb	0	; () banked
  7087  010B90  51FA               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7088  010B92  6FDE               	movwf	??_IPV4_Packet& (0+255),b
  7089  010B94  6BDF               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7090  010B96  1FDE               	comf	??_IPV4_Packet& (0+255),f,b
  7091  010B98  1FDF               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  7092  010B9A  4BDE               	infsnz	??_IPV4_Packet& (0+255),f,b
  7093  010B9C  2BDF               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  7094  010B9E  0102               	movlb	2	; () banked
  7095  010BA0  514A               	movf	(_ipv4Header+2)& (0+255),w,b
  7096  010BA2  0100               	movlb	0	; () banked
  7097  010BA4  25DE               	addwf	??_IPV4_Packet& (0+255),w,b
  7098  010BA6  6FFB               	movwf	IPV4_Packet@length& (0+255),b
  7099  010BA8  0102               	movlb	2	; () banked
  7100  010BAA  514B               	movf	(_ipv4Header+3)& (0+255),w,b
  7101  010BAC  0100               	movlb	0	; () banked
  7102  010BAE  21DF               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  7103  010BB0  6FFC               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;ipv4.c: 170: cksm = IPV4_PseudoHeaderChecksum(length);
  7107  010BB2  C0FB  F013         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  7108  010BB6  C0FC  F014         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  7109  010BBA  ECF6  F098         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  7110  010BBE  C013  F0FD         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  7111  010BC2  C014  F0FE         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  7112                           
  7113                           ;ipv4.c: 171: cksm = ETH_RxComputeChecksum(length, cksm);
  7114  010BC6  C0FB  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7115  010BCA  C0FC  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7116  010BCE  C0FD  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  7117  010BD2  C0FE  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  7118  010BD6  EC42  F09F         	call	_ETH_RxComputeChecksum	;wreg free
  7119  010BDA  C025  F0FD         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7120  010BDE  C026  F0FE         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7121                           
  7122                           ;ipv4.c: 172: UDP_Receive(cksm);
  7123  010BE2  C0FD  F0D5         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  7124  010BE6  C0FE  F0D6         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  7125  010BEA  EC6D  F093         	call	_UDP_Receive	;wreg free
  7126                           
  7127                           ;ipv4.c: 173: break;
  7128  010BEE  0012               	return	
  7129  010BF0                     
  7130                           ;ipv4.c: 175: ETH_Dump(ipv4Header.length);
  7131  010BF0  C24A  F013         	movff	_ipv4Header+2,ETH_Dump@length
  7132  010BF4  C24B  F014         	movff	_ipv4Header+3,ETH_Dump@length+1
  7133  010BF8  ECFB  F0A0         	call	_ETH_Dump	;wreg free
  7134                           
  7135                           ;ipv4.c: 177: }
  7136                           
  7137                           ;ipv4.c: 176: break;
  7138  010BFC  0012               	return	
  7139  010BFE                     l866:
  7140  010BFE  0102               	movlb	2	; () banked
  7141  010C00  5151               	movf	(_ipv4Header+9)& (0+255),w,b
  7142                           
  7143                           ; Switch size 1, requested type "space"
  7144                           ; Number of cases is 2, Range of values is 1 to 17
  7145                           ; switch strategies available:
  7146                           ; Name         Instructions Cycles
  7147                           ; simple_byte            7     4 (average)
  7148                           ;	Chosen strategy is simple_byte
  7149  010C02  0A01               	xorlw	1	; case 1
  7150  010C04  B4D8               	btfsc	status,2,c
  7151  010C06  D790               	goto	l867
  7152  010C08  0A10               	xorlw	16	; case 17
  7153  010C0A  B4D8               	btfsc	status,2,c
  7154  010C0C  D7C0               	goto	l872
  7155  010C0E  D7F0               	goto	l873
  7156  010C10                     __end_of_IPV4_Packet:
  7157                           	opt stack 0
  7158                           tosu	equ	0xFFF
  7159                           tosh	equ	0xFFE
  7160                           tosl	equ	0xFFD
  7161                           pclath	equ	0xFFA
  7162                           tblptru	equ	0xFF8
  7163                           tblptrh	equ	0xFF7
  7164                           tblptrl	equ	0xFF6
  7165                           tablat	equ	0xFF5
  7166                           prodh	equ	0xFF4
  7167                           prodl	equ	0xFF3
  7168                           intcon	equ	0xFF2
  7169                           indf0	equ	0xFEF
  7170                           postinc0	equ	0xFEE
  7171                           fsr0h	equ	0xFEA
  7172                           fsr0l	equ	0xFE9
  7173                           wreg	equ	0xFE8
  7174                           postdec1	equ	0xFE5
  7175                           fsr1l	equ	0xFE1
  7176                           indf2	equ	0xFDF
  7177                           postinc2	equ	0xFDE
  7178                           postdec2	equ	0xFDD
  7179                           fsr2h	equ	0xFDA
  7180                           fsr2l	equ	0xFD9
  7181                           status	equ	0xFD8
  7182                           
  7183 ;; *************** function _UDP_Receive *****************
  7184 ;; Defined at:
  7185 ;;		line 121 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;  udpcksm         2  117[BANK0 ] unsigned int 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;  hptr            2  124[BANK0 ] PTR struct .
  7190 ;;		 -> UDP_CallBackTable(10), NULL(0), 
  7191 ;;  x               2    0        unsigned int 
  7192 ;;  ret             1  123[BANK0 ] enum E393
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      enum E392
  7195 ;; Registers used:
  7196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7203 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;Total ram usage:        9 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:   13
  7209 ;; This function calls:
  7210 ;;		_DHCP_Handler
  7211 ;;		_DNS_Handler
  7212 ;;		_ETH_ReadBlock
  7213 ;;		_ICMP_PortUnreachable
  7214 ;;		_IPV4_GetDatagramLength
  7215 ;;		_udp_table_getIterator
  7216 ;;		_udp_table_nextEntry
  7217 ;; This function is called by:
  7218 ;;		_IPV4_Packet
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text34
  7223  0126DA                     __ptext34:
  7224                           	opt stack 0
  7225  0126DA                     _UDP_Receive:
  7226                           	opt stack 14
  7227                           
  7228                           ;udpv4.c: 123: error_msg ret = ERROR;
  7229                           
  7230                           ;incstack = 0
  7231  0126DA  0E00               	movlw	0
  7232  0126DC  0100               	movlb	0	; () banked
  7233  0126DE  6FDB               	movwf	UDP_Receive@ret& (0+255),b
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;udpv4.c: 124: udp_table_iterator_t hptr;
  7237                           ;udpv4.c: 125: uint16_t x;
  7238                           ;udpv4.c: 127: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  7239  0126E0  0E6B               	movlw	low _udpHeader
  7240  0126E2  6E13               	movwf	ETH_ReadBlock@buffer,c
  7241  0126E4  0E02               	movlw	high _udpHeader
  7242  0126E6  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  7243  0126E8  0E00               	movlw	0
  7244  0126EA  6E16               	movwf	ETH_ReadBlock@length+1,c
  7245  0126EC  0E08               	movlw	8
  7246  0126EE  6E15               	movwf	ETH_ReadBlock@length,c
  7247  0126F0  ECEE  F09E         	call	_ETH_ReadBlock	;wreg free
  7248                           
  7249                           ;udpv4.c: 129: if((udpHeader.checksum == 0) || (udpcksm == 0))
  7250  0126F4  0102               	movlb	2	; () banked
  7251  0126F6  5171               	movf	(_udpHeader+6)& (0+255),w,b
  7252  0126F8  1172               	iorwf	(_udpHeader+7)& (0+255),w,b
  7253  0126FA  B4D8               	btfsc	status,2,c
  7254  0126FC  D005               	goto	u8210
  7255                           
  7256                           ; BSR set to: 2
  7257  0126FE  0100               	movlb	0	; () banked
  7258  012700  51D5               	movf	UDP_Receive@udpcksm& (0+255),w,b
  7259  012702  11D6               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  7260  012704  A4D8               	btfss	status,2,c
  7261  012706  D0C9               	goto	l1225
  7262  012708                     u8210:
  7263                           
  7264                           ;udpv4.c: 130: {
  7265                           ;udpv4.c: 131: udpHeader.dstPort = ((((uint16_t)udpHeader.dstPort & (uint16_t)0xFF00) >>
      +                           8) | (((uint16_t)udpHeader.dstPort & (uint16_t)0x00FF) << 8));
  7266                           
  7267                           ; BSR set to: 0
  7268  012708  0102               	movlb	2	; () banked
  7269  01270A  516D               	movf	(_udpHeader+2)& (0+255),w,b
  7270  01270C  0100               	movlb	0	; () banked
  7271  01270E  6FD8               	movwf	(??_UDP_Receive+1)& (0+255),b
  7272  012710  6BD7               	clrf	??_UDP_Receive& (0+255),b
  7273  012712  EE22  F06D         	lfsr	2,_udpHeader+2
  7274  012716  CFDE F0D9          	movff	postinc2,??_UDP_Receive+2
  7275  01271A  CFDD F0DA          	movff	postdec2,??_UDP_Receive+3
  7276  01271E  C0DA  F0D9         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  7277  012722  6BDA               	clrf	(??_UDP_Receive+3)& (0+255),b
  7278  012724  0EFF               	movlw	255
  7279  012726  17D9               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  7280  012728  0E00               	movlw	0
  7281  01272A  17DA               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  7282  01272C  51D7               	movf	??_UDP_Receive& (0+255),w,b
  7283  01272E  11D9               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  7284  012730  0102               	movlb	2	; () banked
  7285  012732  6F6D               	movwf	(_udpHeader+2)& (0+255),b
  7286  012734  0100               	movlb	0	; () banked
  7287  012736  51D8               	movf	(??_UDP_Receive+1)& (0+255),w,b
  7288  012738  11DA               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  7289  01273A  0102               	movlb	2	; () banked
  7290  01273C  6F6E               	movwf	(_udpHeader+3)& (0+255),b
  7291                           
  7292                           ; BSR set to: 2
  7293                           ;udpv4.c: 132: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  7294  01273E  516B               	movf	_udpHeader& (0+255),w,b
  7295  012740  0100               	movlb	0	; () banked
  7296  012742  6FD8               	movwf	(??_UDP_Receive+1)& (0+255),b
  7297  012744  6BD7               	clrf	??_UDP_Receive& (0+255),b
  7298  012746  C26B  F0D9         	movff	_udpHeader,??_UDP_Receive+2
  7299  01274A  C26C  F0DA         	movff	_udpHeader+1,??_UDP_Receive+3
  7300  01274E  C0DA  F0D9         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  7301  012752  6BDA               	clrf	(??_UDP_Receive+3)& (0+255),b
  7302  012754  0EFF               	movlw	255
  7303  012756  17D9               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  7304  012758  0E00               	movlw	0
  7305  01275A  17DA               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  7306  01275C  51D7               	movf	??_UDP_Receive& (0+255),w,b
  7307  01275E  11D9               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  7308  012760  0102               	movlb	2	; () banked
  7309  012762  6F40               	movwf	_destPort& (0+255),b
  7310  012764  0100               	movlb	0	; () banked
  7311  012766  51D8               	movf	(??_UDP_Receive+1)& (0+255),w,b
  7312  012768  11DA               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  7313  01276A  0102               	movlb	2	; () banked
  7314  01276C  6F41               	movwf	(_destPort+1)& (0+255),b
  7315                           
  7316                           ; BSR set to: 2
  7317                           ;udpv4.c: 133: udpHeader.length = ((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8
      +                          ) | (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8));
  7318  01276E  516F               	movf	(_udpHeader+4)& (0+255),w,b
  7319  012770  0100               	movlb	0	; () banked
  7320  012772  6FD8               	movwf	(??_UDP_Receive+1)& (0+255),b
  7321  012774  6BD7               	clrf	??_UDP_Receive& (0+255),b
  7322  012776  EE22  F06F         	lfsr	2,_udpHeader+4
  7323  01277A  CFDE F0D9          	movff	postinc2,??_UDP_Receive+2
  7324  01277E  CFDD F0DA          	movff	postdec2,??_UDP_Receive+3
  7325  012782  C0DA  F0D9         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  7326  012786  6BDA               	clrf	(??_UDP_Receive+3)& (0+255),b
  7327  012788  0EFF               	movlw	255
  7328  01278A  17D9               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  7329  01278C  0E00               	movlw	0
  7330  01278E  17DA               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  7331  012790  51D7               	movf	??_UDP_Receive& (0+255),w,b
  7332  012792  11D9               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  7333  012794  0102               	movlb	2	; () banked
  7334  012796  6F6F               	movwf	(_udpHeader+4)& (0+255),b
  7335  012798  0100               	movlb	0	; () banked
  7336  01279A  51D8               	movf	(??_UDP_Receive+1)& (0+255),w,b
  7337  01279C  11DA               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  7338  01279E  0102               	movlb	2	; () banked
  7339  0127A0  6F70               	movwf	(_udpHeader+5)& (0+255),b
  7340                           
  7341                           ; BSR set to: 2
  7342                           ;udpv4.c: 134: ret = PORT_NOT_AVAILABLE;
  7343  0127A2  0E0D               	movlw	13
  7344  0127A4  0100               	movlb	0	; () banked
  7345  0127A6  6FDB               	movwf	UDP_Receive@ret& (0+255),b
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;udpv4.c: 137: hptr = udp_table_getIterator();
  7349  0127A8  ECC1  F0A2         	call	_udp_table_getIterator	;wreg free
  7350  0127AC  C013  F0DC         	movff	?_udp_table_getIterator,UDP_Receive@hptr
  7351  0127B0  C014  F0DD         	movff	?_udp_table_getIterator+1,UDP_Receive@hptr+1
  7352                           
  7353                           ;udpv4.c: 139: while(hptr != (0))
  7354  0127B4  D04C               	goto	l1228
  7355  0127B6                     
  7356                           ;udpv4.c: 140: {
  7357                           ;udpv4.c: 141: if(hptr->portNumber == udpHeader.dstPort)
  7358  0127B6  C0DC  FFF6         	movff	UDP_Receive@hptr,tblptrl
  7359  0127BA  C0DD  FFF7         	movff	UDP_Receive@hptr+1,tblptrh
  7360  0127BE                     	if	0	;tblptru may be non-zero
  7361  0127BE                     	endif
  7362  0127BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7363  0127BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7364  0127C0  6EF8               	movwf	tblptru,c
  7365  0127C2                     	endif
  7366  0127C2  0102               	movlb	2	; () banked
  7367  0127C4  516D               	movf	(_udpHeader+2)& (0+255),w,b
  7368  0127C6  0009               	tblrd		*+
  7369  0127C8  18F5               	xorwf	tablat,w,c
  7370  0127CA  E137               	bnz	l8698
  7371  0127CC  516E               	movf	(_udpHeader+3)& (0+255),w,b
  7372  0127CE  0009               	tblrd		*+
  7373  0127D0  18F5               	xorwf	tablat,w,c
  7374  0127D2  A4D8               	btfss	status,2,c
  7375  0127D4  D032               	goto	l1230
  7376                           
  7377                           ; BSR set to: 2
  7378                           ;udpv4.c: 142: {
  7379                           ;udpv4.c: 143: if(udpHeader.length == IPV4_GetDatagramLength())
  7380  0127D6  EC77  F0A2         	call	_IPV4_GetDatagramLength	;wreg free
  7381  0127DA  0102               	movlb	2	; () banked
  7382  0127DC  516F               	movf	(_udpHeader+4)& (0+255),w,b
  7383  0127DE  1813               	xorwf	?_IPV4_GetDatagramLength,w,c
  7384  0127E0  E128               	bnz	l8696
  7385  0127E2  5170               	movf	(_udpHeader+5)& (0+255),w,b
  7386  0127E4  1814               	xorwf	?_IPV4_GetDatagramLength+1,w,c
  7387  0127E6  A4D8               	btfss	status,2,c
  7388  0127E8  D024               	goto	u8249
  7389                           
  7390                           ; BSR set to: 2
  7391                           ;udpv4.c: 144: {
  7392                           ;udpv4.c: 145: hptr->callBack(udpHeader.length - sizeof(udpHeader));
  7393  0127EA  0EF8               	movlw	248
  7394  0127EC  256F               	addwf	(_udpHeader+4)& (0+255),w,b
  7395  0127EE  0100               	movlb	0	; () banked
  7396  0127F0  6FB0               	movwf	DHCP_Handler@length& (0+255),b
  7397  0127F2  0EFF               	movlw	255
  7398  0127F4  0102               	movlb	2	; () banked
  7399  0127F6  2170               	addwfc	(_udpHeader+5)& (0+255),w,b
  7400  0127F8  0100               	movlb	0	; () banked
  7401  0127FA  6FB1               	movwf	(DHCP_Handler@length+1)& (0+255),b
  7402  0127FC  0E02               	movlw	2
  7403  0127FE  25DC               	addwf	UDP_Receive@hptr& (0+255),w,b
  7404  012800  6FD7               	movwf	??_UDP_Receive& (0+255),b
  7405  012802  0E00               	movlw	0
  7406  012804  21DD               	addwfc	(UDP_Receive@hptr+1)& (0+255),w,b
  7407  012806  6FD8               	movwf	(??_UDP_Receive+1)& (0+255),b
  7408  012808  C0D7  FFF6         	movff	??_UDP_Receive,tblptrl
  7409  01280C  C0D8  FFF7         	movff	??_UDP_Receive+1,tblptrh
  7410  012810                     	if	0	;tblptru may be non-zero
  7411  012810                     	endif
  7412  012810                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7413  012810  0E00               	movlw	low (__mediumconst shr (0+16))
  7414  012812  6EF8               	movwf	tblptru,c
  7415  012814                     	endif
  7416  012814  D801               	call	u8248
  7417  012816  D00D               	goto	u8249
  7418  012818                     u8248:
  7419  012818  0005               	push	
  7420  01281A  6EFA               	movwf	pclath,c
  7421  01281C  0009               	tblrd		*+
  7422  01281E  50F5               	movf	tablat,w,c
  7423  012820  6EFD               	movwf	tosl,c
  7424  012822  0009               	tblrd		*+
  7425  012824  50F5               	movf	tablat,w,c
  7426  012826  6EFE               	movwf	tosh,c
  7427  012828  0009               	tblrd		*+
  7428  01282A  50F5               	movf	tablat,w,c
  7429  01282C  6EFF               	movwf	tosu,c
  7430  01282E  50FA               	movf	pclath,w,c
  7431  012830  0012               	return		;indir
  7432  012832                     u8249:
  7433  012832                     l8696:
  7434                           
  7435                           ;udpv4.c: 146: }
  7436                           ;udpv4.c: 147: ret = SUCCESS;
  7437  012832  0E01               	movlw	1
  7438  012834  0100               	movlb	0	; () banked
  7439  012836  6FDB               	movwf	UDP_Receive@ret& (0+255),b
  7440                           
  7441                           ;udpv4.c: 148: break;
  7442  012838  D00F               	goto	u8250
  7443  01283A                     l1230:
  7444  01283A                     l8698:
  7445                           
  7446                           ;udpv4.c: 149: }
  7447                           ;udpv4.c: 150: hptr = udp_table_nextEntry(hptr);
  7448  01283A  C0DC  F015         	movff	UDP_Receive@hptr,udp_table_nextEntry@i
  7449  01283E  C0DD  F016         	movff	UDP_Receive@hptr+1,udp_table_nextEntry@i+1
  7450  012842  ECAD  F0A0         	call	_udp_table_nextEntry	;wreg free
  7451  012846  C015  F0DC         	movff	?_udp_table_nextEntry,UDP_Receive@hptr
  7452  01284A  C016  F0DD         	movff	?_udp_table_nextEntry+1,UDP_Receive@hptr+1
  7453  01284E                     l1228:
  7454  01284E  0100               	movlb	0	; () banked
  7455  012850  51DC               	movf	UDP_Receive@hptr& (0+255),w,b
  7456  012852  11DD               	iorwf	(UDP_Receive@hptr+1)& (0+255),w,b
  7457  012854  A4D8               	btfss	status,2,c
  7458  012856  D7AF               	goto	l1229
  7459  012858                     u8250:
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;udpv4.c: 151: }
  7463                           ;udpv4.c: 152: if(ret== PORT_NOT_AVAILABLE)
  7464                           
  7465                           ; BSR set to: 0
  7466  012858  0E0D               	movlw	13
  7467  01285A  19DB               	xorwf	UDP_Receive@ret& (0+255),w,b
  7468  01285C  A4D8               	btfss	status,2,c
  7469  01285E  0012               	return	
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;udpv4.c: 153: {
  7473                           ;udpv4.c: 156: ICMP_PortUnreachable((ipv4Header.dstIpAddress), (ipv4Header.srcIpAddress)
      +                          ,(sizeof(udp_handler_t) + (udpHeader.length)));
  7474  012860  C258  F0A8         	movff	_ipv4Header+16,ICMP_PortUnreachable@srcIPAddress
  7475  012864  C259  F0A9         	movff	_ipv4Header+17,ICMP_PortUnreachable@srcIPAddress+1
  7476  012868  C25A  F0AA         	movff	_ipv4Header+18,ICMP_PortUnreachable@srcIPAddress+2
  7477  01286C  C25B  F0AB         	movff	_ipv4Header+19,ICMP_PortUnreachable@srcIPAddress+3
  7478  012870  C254  F0AC         	movff	_ipv4Header+12,ICMP_PortUnreachable@destIPAddress
  7479  012874  C255  F0AD         	movff	_ipv4Header+13,ICMP_PortUnreachable@destIPAddress+1
  7480  012878  C256  F0AE         	movff	_ipv4Header+14,ICMP_PortUnreachable@destIPAddress+2
  7481  01287C  C257  F0AF         	movff	_ipv4Header+15,ICMP_PortUnreachable@destIPAddress+3
  7482  012880  0E05               	movlw	5
  7483  012882  0102               	movlb	2	; () banked
  7484  012884  256F               	addwf	(_udpHeader+4)& (0+255),w,b
  7485  012886  0100               	movlb	0	; () banked
  7486  012888  6FB0               	movwf	ICMP_PortUnreachable@length& (0+255),b
  7487  01288A  0E00               	movlw	0
  7488  01288C  0102               	movlb	2	; () banked
  7489  01288E  2170               	addwfc	(_udpHeader+5)& (0+255),w,b
  7490  012890  0100               	movlb	0	; () banked
  7491  012892  6FB1               	movwf	(ICMP_PortUnreachable@length+1)& (0+255),b
  7492  012894  EC18  F097         	call	_ICMP_PortUnreachable	;wreg free
  7493                           
  7494                           ;udpv4.c: 157: }
  7495                           ;udpv4.c: 158: }
  7496  012898  0012               	return	
  7497  01289A                     l1225:
  7498                           
  7499                           ;udpv4.c: 159: else
  7500                           ;udpv4.c: 160: {
  7501                           ;udpv4.c: 161: ret = UDP_CHECKSUM_FAILS;
  7502  01289A  0E0A               	movlw	10
  7503  01289C  0100               	movlb	0	; () banked
  7504  01289E  6FDB               	movwf	UDP_Receive@ret& (0+255),b
  7505                           
  7506                           ; BSR set to: 0
  7507  0128A0  0012               	return	
  7508  0128A2                     __end_of_UDP_Receive:
  7509                           	opt stack 0
  7510                           tosu	equ	0xFFF
  7511                           tosh	equ	0xFFE
  7512                           tosl	equ	0xFFD
  7513                           pclath	equ	0xFFA
  7514                           tblptru	equ	0xFF8
  7515                           tblptrh	equ	0xFF7
  7516                           tblptrl	equ	0xFF6
  7517                           tablat	equ	0xFF5
  7518                           prodh	equ	0xFF4
  7519                           prodl	equ	0xFF3
  7520                           intcon	equ	0xFF2
  7521                           indf0	equ	0xFEF
  7522                           postinc0	equ	0xFEE
  7523                           fsr0h	equ	0xFEA
  7524                           fsr0l	equ	0xFE9
  7525                           wreg	equ	0xFE8
  7526                           postdec1	equ	0xFE5
  7527                           fsr1l	equ	0xFE1
  7528                           indf2	equ	0xFDF
  7529                           postinc2	equ	0xFDE
  7530                           postdec2	equ	0xFDD
  7531                           fsr2h	equ	0xFDA
  7532                           fsr2l	equ	0xFD9
  7533                           status	equ	0xFD8
  7534                           
  7535 ;; *************** function _udp_table_nextEntry *****************
  7536 ;; Defined at:
  7537 ;;		line 63 in file "mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  i               2   20[COMRAM] PTR struct .
  7540 ;;		 -> UDP_CallBackTable(10), NULL(0), 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  j               2   22[COMRAM] PTR struct .
  7543 ;;		 -> UDP_CallBackTable(10), 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  2   20[COMRAM] PTR struct .
  7546 ;; Registers used:
  7547 ;;		wreg, status,2, status,0, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;Total ram usage:        4 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    5
  7560 ;; This function calls:
  7561 ;;		_udp_table_getIterator
  7562 ;; This function is called by:
  7563 ;;		_UDP_Receive
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text35
  7568  01415A                     __ptext35:
  7569                           	opt stack 0
  7570  01415A                     _udp_table_nextEntry:
  7571                           	opt stack 21
  7572                           
  7573                           ;udpv4_port_handler_table.c: 65: udp_table_iterator_t j;
  7574                           ;udpv4_port_handler_table.c: 67: j = udp_table_getIterator() +sizeof(UDP_CallBackTable);
  7575                           
  7576                           ;incstack = 0
  7577  01415A  ECC1  F0A2         	call	_udp_table_getIterator	;wreg free
  7578  01415E  0E32               	movlw	50
  7579  014160  2413               	addwf	?_udp_table_getIterator,w,c
  7580  014162  6E17               	movwf	udp_table_nextEntry@j,c
  7581  014164  0E00               	movlw	0
  7582  014166  2014               	addwfc	?_udp_table_getIterator+1,w,c
  7583  014168  6E18               	movwf	udp_table_nextEntry@j+1,c
  7584                           
  7585                           ;udpv4_port_handler_table.c: 69: i ++;
  7586  01416A  0E05               	movlw	5
  7587  01416C  2615               	addwf	udp_table_nextEntry@i,f,c
  7588  01416E  0E00               	movlw	0
  7589  014170  2216               	addwfc	udp_table_nextEntry@i+1,f,c
  7590                           
  7591                           ;udpv4_port_handler_table.c: 70: if(i < j )
  7592  014172  5017               	movf	udp_table_nextEntry@j,w,c
  7593  014174  5C15               	subwf	udp_table_nextEntry@i,w,c
  7594  014176  5018               	movf	udp_table_nextEntry@j+1,w,c
  7595  014178  5816               	subwfb	udp_table_nextEntry@i+1,w,c
  7596  01417A  B0D8               	btfsc	status,0,c
  7597  01417C  D005               	goto	l1176
  7598                           
  7599                           ;udpv4_port_handler_table.c: 71: {
  7600                           ;udpv4_port_handler_table.c: 72: return (udp_table_iterator_t) i;
  7601  01417E  C015  F015         	movff	udp_table_nextEntry@i,?_udp_table_nextEntry
  7602  014182  C016  F016         	movff	udp_table_nextEntry@i+1,?_udp_table_nextEntry+1
  7603                           
  7604                           ;udpv4_port_handler_table.c: 73: }
  7605  014186  0012               	return	
  7606  014188                     l1176:
  7607                           
  7608                           ;udpv4_port_handler_table.c: 74: else
  7609                           ;udpv4_port_handler_table.c: 75: return (udp_table_iterator_t) (0);
  7610  014188  0E00               	movlw	0
  7611  01418A  6E15               	movwf	?_udp_table_nextEntry,c
  7612  01418C  0E00               	movlw	0
  7613  01418E  6E16               	movwf	?_udp_table_nextEntry+1,c
  7614  014190  0012               	return	
  7615  014192                     __end_of_udp_table_nextEntry:
  7616                           	opt stack 0
  7617                           tosu	equ	0xFFF
  7618                           tosh	equ	0xFFE
  7619                           tosl	equ	0xFFD
  7620                           pclath	equ	0xFFA
  7621                           tblptru	equ	0xFF8
  7622                           tblptrh	equ	0xFF7
  7623                           tblptrl	equ	0xFF6
  7624                           tablat	equ	0xFF5
  7625                           prodh	equ	0xFF4
  7626                           prodl	equ	0xFF3
  7627                           intcon	equ	0xFF2
  7628                           indf0	equ	0xFEF
  7629                           postinc0	equ	0xFEE
  7630                           fsr0h	equ	0xFEA
  7631                           fsr0l	equ	0xFE9
  7632                           wreg	equ	0xFE8
  7633                           postdec1	equ	0xFE5
  7634                           fsr1l	equ	0xFE1
  7635                           indf2	equ	0xFDF
  7636                           postinc2	equ	0xFDE
  7637                           postdec2	equ	0xFDD
  7638                           fsr2h	equ	0xFDA
  7639                           fsr2l	equ	0xFD9
  7640                           status	equ	0xFD8
  7641                           
  7642 ;; *************** function _udp_table_getIterator *****************
  7643 ;; Defined at:
  7644 ;;		line 58 in file "mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  2   18[COMRAM] PTR struct .
  7651 ;; Registers used:
  7652 ;;		wreg, status,2, status,0
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;Total ram usage:        2 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    4
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_udp_table_nextEntry
  7669 ;;		_UDP_Receive
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text36
  7674  014582                     __ptext36:
  7675                           	opt stack 0
  7676  014582                     _udp_table_getIterator:
  7677                           	opt stack 21
  7678                           
  7679                           ;udpv4_port_handler_table.c: 60: return (udp_table_iterator_t) UDP_CallBackTable;
  7680                           
  7681                           ;incstack = 0
  7682  014582  0E48               	movlw	low _UDP_CallBackTable
  7683  014584  6E13               	movwf	?_udp_table_getIterator,c
  7684  014586  0EFF               	movlw	high _UDP_CallBackTable
  7685  014588  6E14               	movwf	?_udp_table_getIterator+1,c
  7686  01458A  0012               	return	
  7687  01458C                     __end_of_udp_table_getIterator:
  7688                           	opt stack 0
  7689                           tosu	equ	0xFFF
  7690                           tosh	equ	0xFFE
  7691                           tosl	equ	0xFFD
  7692                           pclath	equ	0xFFA
  7693                           tblptru	equ	0xFF8
  7694                           tblptrh	equ	0xFF7
  7695                           tblptrl	equ	0xFF6
  7696                           tablat	equ	0xFF5
  7697                           prodh	equ	0xFF4
  7698                           prodl	equ	0xFF3
  7699                           intcon	equ	0xFF2
  7700                           indf0	equ	0xFEF
  7701                           postinc0	equ	0xFEE
  7702                           fsr0h	equ	0xFEA
  7703                           fsr0l	equ	0xFE9
  7704                           wreg	equ	0xFE8
  7705                           postdec1	equ	0xFE5
  7706                           fsr1l	equ	0xFE1
  7707                           indf2	equ	0xFDF
  7708                           postinc2	equ	0xFDE
  7709                           postdec2	equ	0xFDD
  7710                           fsr2h	equ	0xFDA
  7711                           fsr2l	equ	0xFD9
  7712                           status	equ	0xFD8
  7713                           
  7714 ;; *************** function _IPV4_GetDatagramLength *****************
  7715 ;; Defined at:
  7716 ;;		line 273 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;		None
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;		None
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  2   18[COMRAM] unsigned int 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;Total ram usage:        2 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:    4
  7737 ;; This function calls:
  7738 ;;		Nothing
  7739 ;; This function is called by:
  7740 ;;		_UDP_Receive
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text37
  7745  0144EE                     __ptext37:
  7746                           	opt stack 0
  7747  0144EE                     _IPV4_GetDatagramLength:
  7748                           	opt stack 22
  7749                           
  7750                           ;ipv4.c: 275: return ((ipv4Header.length) - sizeof(ipv4Header_t));
  7751                           
  7752                           ;incstack = 0
  7753  0144EE  0EEC               	movlw	236
  7754  0144F0  0102               	movlb	2	; () banked
  7755  0144F2  254A               	addwf	(_ipv4Header+2)& (0+255),w,b
  7756  0144F4  6E13               	movwf	?_IPV4_GetDatagramLength,c
  7757  0144F6  0EFF               	movlw	255
  7758  0144F8  214B               	addwfc	(_ipv4Header+3)& (0+255),w,b
  7759  0144FA  6E14               	movwf	?_IPV4_GetDatagramLength+1,c
  7760  0144FC  0012               	return	
  7761  0144FE                     __end_of_IPV4_GetDatagramLength:
  7762                           	opt stack 0
  7763                           tosu	equ	0xFFF
  7764                           tosh	equ	0xFFE
  7765                           tosl	equ	0xFFD
  7766                           pclath	equ	0xFFA
  7767                           tblptru	equ	0xFF8
  7768                           tblptrh	equ	0xFF7
  7769                           tblptrl	equ	0xFF6
  7770                           tablat	equ	0xFF5
  7771                           prodh	equ	0xFF4
  7772                           prodl	equ	0xFF3
  7773                           intcon	equ	0xFF2
  7774                           indf0	equ	0xFEF
  7775                           postinc0	equ	0xFEE
  7776                           fsr0h	equ	0xFEA
  7777                           fsr0l	equ	0xFE9
  7778                           wreg	equ	0xFE8
  7779                           postdec1	equ	0xFE5
  7780                           fsr1l	equ	0xFE1
  7781                           indf2	equ	0xFDF
  7782                           postinc2	equ	0xFDE
  7783                           postdec2	equ	0xFDD
  7784                           fsr2h	equ	0xFDA
  7785                           fsr2l	equ	0xFD9
  7786                           status	equ	0xFD8
  7787                           
  7788 ;; *************** function _ICMP_PortUnreachable *****************
  7789 ;; Defined at:
  7790 ;;		line 137 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  srcIPAddress    4   72[BANK0 ] unsigned long 
  7793 ;;  destIPAddres    4   76[BANK0 ] unsigned long 
  7794 ;;  length          2   80[BANK0 ] unsigned int 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  cksm            2   56[COMRAM] unsigned int 
  7797 ;;  ret             1   58[COMRAM] enum E392
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      enum E392
  7800 ;; Registers used:
  7801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7807 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;Total ram usage:       13 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:    9
  7814 ;; This function calls:
  7815 ;;		_ETH_Copy
  7816 ;;		_ETH_Insert
  7817 ;;		_ETH_SetReadPtr
  7818 ;;		_ETH_TxComputeChecksum
  7819 ;;		_ETH_Write16
  7820 ;;		_ETH_Write32
  7821 ;;		_IPV4_GetStartPosition
  7822 ;;		_IPV4_Send
  7823 ;;		_IPv4_Start
  7824 ;; This function is called by:
  7825 ;;		_UDP_Receive
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text38
  7830  012E30                     __ptext38:
  7831                           	opt stack 0
  7832  012E30                     _ICMP_PortUnreachable:
  7833                           	opt stack 17
  7834                           
  7835                           ;icmp.c: 139: error_msg ret = ERROR;
  7836                           
  7837                           ; BSR set to: 2
  7838                           ;incstack = 0
  7839  012E30  0E00               	movlw	0
  7840  012E32  6E3B               	movwf	ICMP_PortUnreachable@ret,c
  7841                           
  7842                           ;icmp.c: 140: uint16_t cksm = 0;
  7843  012E34  0E00               	movlw	0
  7844  012E36  6E3A               	movwf	ICMP_PortUnreachable@cksm+1,c
  7845  012E38  0E00               	movlw	0
  7846  012E3A  6E39               	movwf	ICMP_PortUnreachable@cksm,c
  7847                           
  7848                           ;icmp.c: 142: if(srcIPAddress!=(ip_database_info.ipv4_myAddress))
  7849  012E3C  0100               	movlb	0	; () banked
  7850  012E3E  51A8               	movf	ICMP_PortUnreachable@srcIPAddress& (0+255),w,b
  7851  012E40  0102               	movlb	2	; () banked
  7852  012E42  1900               	xorwf	_ip_database_info& (0+255),w,b
  7853  012E44  E175               	bnz	l1106
  7854  012E46  0100               	movlb	0	; () banked
  7855  012E48  51A9               	movf	(ICMP_PortUnreachable@srcIPAddress+1)& (0+255),w,b
  7856  012E4A  0102               	movlb	2	; () banked
  7857  012E4C  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
  7858  012E4E  E170               	bnz	l1106
  7859  012E50  0100               	movlb	0	; () banked
  7860  012E52  51AA               	movf	(ICMP_PortUnreachable@srcIPAddress+2)& (0+255),w,b
  7861  012E54  0102               	movlb	2	; () banked
  7862  012E56  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
  7863  012E58  E16B               	bnz	l1106
  7864  012E5A  0100               	movlb	0	; () banked
  7865  012E5C  51AB               	movf	(ICMP_PortUnreachable@srcIPAddress+3)& (0+255),w,b
  7866  012E5E  0102               	movlb	2	; () banked
  7867  012E60  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
  7868  012E62  A4D8               	btfss	status,2,c
  7869  012E64  0012               	return	
  7870                           
  7871                           ; BSR set to: 2
  7872                           ;icmp.c: 145: }
  7873                           ;icmp.c: 147: ret = IPv4_Start(destIPAddress, ICMP_TCPIP);
  7874                           
  7875                           ; BSR set to: 2
  7876                           
  7877                           ; BSR set to: 2
  7878                           ;icmp.c: 143: {
  7879                           ;icmp.c: 144: return DEST_IP_NOT_MATCHED;
  7880                           ;	Return value of _ICMP_PortUnreachable is never used
  7881  012E66  C0AC  F031         	movff	ICMP_PortUnreachable@destIPAddress,IPv4_Start@destAddress
  7882  012E6A  C0AD  F032         	movff	ICMP_PortUnreachable@destIPAddress+1,IPv4_Start@destAddress+1
  7883  012E6E  C0AE  F033         	movff	ICMP_PortUnreachable@destIPAddress+2,IPv4_Start@destAddress+2
  7884  012E72  C0AF  F034         	movff	ICMP_PortUnreachable@destIPAddress+3,IPv4_Start@destAddress+3
  7885  012E76  0E01               	movlw	1
  7886  012E78  6E35               	movwf	IPv4_Start@protocol,c
  7887  012E7A  EC35  F08F         	call	_IPv4_Start	;wreg free
  7888  012E7E  6E3B               	movwf	ICMP_PortUnreachable@ret,c
  7889                           
  7890                           ;icmp.c: 148: if(ret == SUCCESS)
  7891  012E80  043B               	decf	ICMP_PortUnreachable@ret,w,c
  7892  012E82  A4D8               	btfss	status,2,c
  7893  012E84  0012               	return	
  7894                           
  7895                           ;icmp.c: 149: {
  7896                           ;icmp.c: 150: ETH_Write16(DEST_PORT_UNREACHABLE);
  7897  012E86  0E03               	movlw	3
  7898  012E88  6E14               	movwf	ETH_Write16@data+1,c
  7899  012E8A  0E03               	movlw	3
  7900  012E8C  6E13               	movwf	ETH_Write16@data,c
  7901  012E8E  ECAA  F0A2         	call	_ETH_Write16	;wreg free
  7902                           
  7903                           ;icmp.c: 151: ETH_Write16(0);
  7904  012E92  0E00               	movlw	0
  7905  012E94  6E14               	movwf	ETH_Write16@data+1,c
  7906  012E96  0E00               	movlw	0
  7907  012E98  6E13               	movwf	ETH_Write16@data,c
  7908  012E9A  ECAA  F0A2         	call	_ETH_Write16	;wreg free
  7909                           
  7910                           ;icmp.c: 152: ETH_Write32(0);
  7911  012E9E  0E00               	movlw	0
  7912  012EA0  6E13               	movwf	ETH_Write32@data,c
  7913  012EA2  0E00               	movlw	0
  7914  012EA4  6E14               	movwf	ETH_Write32@data+1,c
  7915  012EA6  0E00               	movlw	0
  7916  012EA8  6E15               	movwf	ETH_Write32@data+2,c
  7917  012EAA  0E00               	movlw	0
  7918  012EAC  6E16               	movwf	ETH_Write32@data+3,c
  7919  012EAE  EC32  F0A2         	call	_ETH_Write32	;wreg free
  7920                           
  7921                           ;icmp.c: 153: ETH_SetReadPtr(IPV4_GetStartPosition());
  7922  012EB2  ECC6  F0A2         	call	_IPV4_GetStartPosition	;wreg free
  7923  012EB6  C013  F015         	movff	?_IPV4_GetStartPosition,ETH_SetReadPtr@rdptr
  7924  012EBA  C014  F016         	movff	?_IPV4_GetStartPosition+1,ETH_SetReadPtr@rdptr+1
  7925  012EBE  ECCB  F0A2         	call	_ETH_SetReadPtr	;wreg free
  7926                           
  7927                           ;icmp.c: 154: ETH_Copy(sizeof(ipv4Header_t) + length);
  7928  012EC2  0E14               	movlw	20
  7929  012EC4  0100               	movlb	0	; () banked
  7930  012EC6  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
  7931  012EC8  6E19               	movwf	ETH_Copy@len,c
  7932  012ECA  0E00               	movlw	0
  7933  012ECC  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
  7934  012ECE  6E1A               	movwf	ETH_Copy@len+1,c
  7935  012ED0  ECD2  F099         	call	_ETH_Copy	;wreg free
  7936                           
  7937                           ;icmp.c: 155: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_t
      +                          ), sizeof(icmpHeader_t)+ sizeof(ipv4Header_t) + length, 0);
  7938  012ED4  0E00               	movlw	0
  7939  012ED6  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
  7940  012ED8  0E22               	movlw	34
  7941  012EDA  6E25               	movwf	ETH_TxComputeChecksum@position,c
  7942  012EDC  0E18               	movlw	24
  7943  012EDE  0100               	movlb	0	; () banked
  7944  012EE0  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
  7945  012EE2  6E27               	movwf	ETH_TxComputeChecksum@len,c
  7946  012EE4  0E00               	movlw	0
  7947  012EE6  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
  7948  012EE8  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
  7949  012EEA  0E00               	movlw	0
  7950  012EEC  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
  7951  012EEE  0E00               	movlw	0
  7952  012EF0  6E29               	movwf	ETH_TxComputeChecksum@seed,c
  7953  012EF2  EC66  F099         	call	_ETH_TxComputeChecksum	;wreg free
  7954  012EF6  C025  F039         	movff	?_ETH_TxComputeChecksum,ICMP_PortUnreachable@cksm
  7955  012EFA  C026  F03A         	movff	?_ETH_TxComputeChecksum+1,ICMP_PortUnreachable@cksm+1
  7956                           
  7957                           ;icmp.c: 156: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
  7958  012EFE  0E39               	movlw	low ICMP_PortUnreachable@cksm
  7959  012F00  6E13               	movwf	ETH_Insert@data,c
  7960  012F02  0E00               	movlw	high ICMP_PortUnreachable@cksm
  7961  012F04  6E14               	movwf	ETH_Insert@data+1,c
  7962  012F06  0E00               	movlw	0
  7963  012F08  6E16               	movwf	ETH_Insert@len+1,c
  7964  012F0A  0E02               	movlw	2
  7965  012F0C  6E15               	movwf	ETH_Insert@len,c
  7966  012F0E  0E00               	movlw	0
  7967  012F10  6E18               	movwf	ETH_Insert@offset+1,c
  7968  012F12  0E24               	movlw	36
  7969  012F14  6E17               	movwf	ETH_Insert@offset,c
  7970  012F16  ECB0  F09D         	call	_ETH_Insert	;wreg free
  7971                           
  7972                           ;icmp.c: 157: ret = IPV4_Send(sizeof(icmpHeader_t)+sizeof(ipv4Header_t)+length);
  7973  012F1A  0E18               	movlw	24
  7974  012F1C  0100               	movlb	0	; () banked
  7975  012F1E  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
  7976  012F20  6E37               	movwf	IPV4_Send@payloadLength,c
  7977  012F22  0E00               	movlw	0
  7978  012F24  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
  7979  012F26  6E38               	movwf	IPV4_Send@payloadLength+1,c
  7980  012F28  EC1C  F09B         	call	_IPV4_Send	;wreg free
  7981  012F2C  6E3B               	movwf	ICMP_PortUnreachable@ret,c
  7982  012F2E  0012               	return	
  7983  012F30                     l1106:
  7984  012F30  0012               	return		;funcret
  7985  012F32                     __end_of_ICMP_PortUnreachable:
  7986                           	opt stack 0
  7987                           tosu	equ	0xFFF
  7988                           tosh	equ	0xFFE
  7989                           tosl	equ	0xFFD
  7990                           pclath	equ	0xFFA
  7991                           tblptru	equ	0xFF8
  7992                           tblptrh	equ	0xFF7
  7993                           tblptrl	equ	0xFF6
  7994                           tablat	equ	0xFF5
  7995                           prodh	equ	0xFF4
  7996                           prodl	equ	0xFF3
  7997                           intcon	equ	0xFF2
  7998                           indf0	equ	0xFEF
  7999                           postinc0	equ	0xFEE
  8000                           fsr0h	equ	0xFEA
  8001                           fsr0l	equ	0xFE9
  8002                           wreg	equ	0xFE8
  8003                           postdec1	equ	0xFE5
  8004                           fsr1l	equ	0xFE1
  8005                           indf2	equ	0xFDF
  8006                           postinc2	equ	0xFDE
  8007                           postdec2	equ	0xFDD
  8008                           fsr2h	equ	0xFDA
  8009                           fsr2l	equ	0xFD9
  8010                           status	equ	0xFD8
  8011                           
  8012 ;; *************** function _IPV4_GetStartPosition *****************
  8013 ;; Defined at:
  8014 ;;		line 267 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  2   18[COMRAM] unsigned int 
  8021 ;; Registers used:
  8022 ;;		None
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;Total ram usage:        2 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:    4
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_ICMP_PortUnreachable
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text39
  8043  01458C                     __ptext39:
  8044                           	opt stack 0
  8045  01458C                     _IPV4_GetStartPosition:
  8046                           	opt stack 21
  8047                           
  8048                           ;ipv4.c: 269: return ipv4StartPosition;
  8049                           
  8050                           ;incstack = 0
  8051  01458C  C244  F013         	movff	_ipv4StartPosition,?_IPV4_GetStartPosition
  8052  014590  C245  F014         	movff	_ipv4StartPosition+1,?_IPV4_GetStartPosition+1
  8053  014594  0012               	return		;funcret
  8054  014596                     __end_of_IPV4_GetStartPosition:
  8055                           	opt stack 0
  8056                           tosu	equ	0xFFF
  8057                           tosh	equ	0xFFE
  8058                           tosl	equ	0xFFD
  8059                           pclath	equ	0xFFA
  8060                           tblptru	equ	0xFF8
  8061                           tblptrh	equ	0xFF7
  8062                           tblptrl	equ	0xFF6
  8063                           tablat	equ	0xFF5
  8064                           prodh	equ	0xFF4
  8065                           prodl	equ	0xFF3
  8066                           intcon	equ	0xFF2
  8067                           indf0	equ	0xFEF
  8068                           postinc0	equ	0xFEE
  8069                           fsr0h	equ	0xFEA
  8070                           fsr0l	equ	0xFE9
  8071                           wreg	equ	0xFE8
  8072                           postdec1	equ	0xFE5
  8073                           fsr1l	equ	0xFE1
  8074                           indf2	equ	0xFDF
  8075                           postinc2	equ	0xFDE
  8076                           postdec2	equ	0xFDD
  8077                           fsr2h	equ	0xFDA
  8078                           fsr2l	equ	0xFD9
  8079                           status	equ	0xFD8
  8080                           
  8081 ;; *************** function _ETH_SetReadPtr *****************
  8082 ;; Defined at:
  8083 ;;		line 1085 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  rdptr           2   20[COMRAM] unsigned int 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;		None
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		None
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;Total ram usage:        2 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:    4
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_ICMP_PortUnreachable
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text40
  8112  014596                     __ptext40:
  8113                           	opt stack 0
  8114  014596                     _ETH_SetReadPtr:
  8115                           	opt stack 21
  8116                           
  8117                           ;ETHxxJ6x_driver.c: 1087: ERDPT = rdptr;
  8118                           
  8119                           ;incstack = 0
  8120  014596  C015  FF7A         	movff	ETH_SetReadPtr@rdptr,3962	;volatile
  8121  01459A  C016  FF7B         	movff	ETH_SetReadPtr@rdptr+1,3963	;volatile
  8122  01459E  0012               	return		;funcret
  8123  0145A0                     __end_of_ETH_SetReadPtr:
  8124                           	opt stack 0
  8125                           tosu	equ	0xFFF
  8126                           tosh	equ	0xFFE
  8127                           tosl	equ	0xFFD
  8128                           pclath	equ	0xFFA
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           prodh	equ	0xFF4
  8134                           prodl	equ	0xFF3
  8135                           intcon	equ	0xFF2
  8136                           indf0	equ	0xFEF
  8137                           postinc0	equ	0xFEE
  8138                           fsr0h	equ	0xFEA
  8139                           fsr0l	equ	0xFE9
  8140                           wreg	equ	0xFE8
  8141                           postdec1	equ	0xFE5
  8142                           fsr1l	equ	0xFE1
  8143                           indf2	equ	0xFDF
  8144                           postinc2	equ	0xFDE
  8145                           postdec2	equ	0xFDD
  8146                           fsr2h	equ	0xFDA
  8147                           fsr2l	equ	0xFD9
  8148                           status	equ	0xFD8
  8149                           
  8150 ;; *************** function _DHCP_Handler *****************
  8151 ;; Defined at:
  8152 ;;		line 255 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  length          2   80[BANK0 ] int 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  a               4   20[BANK1 ] unsigned long 
  8157 ;;  a               4   16[BANK1 ] unsigned long 
  8158 ;;  count           1   32[BANK1 ] unsigned char 
  8159 ;;  count           1   31[BANK1 ] unsigned char 
  8160 ;;  optionLength    1   36[BANK1 ] unsigned char 
  8161 ;;  option          1   25[BANK1 ] unsigned char 
  8162 ;;  localData      48   37[BANK1 ] struct .
  8163 ;;  chaddr         16    0[BANK1 ] unsigned char [16]
  8164 ;;  siaddr          4   26[BANK1 ] unsigned long 
  8165 ;;  acceptACK       1   35[BANK1 ] unsigned char 
  8166 ;;  acceptNACK      1   34[BANK1 ] unsigned char 
  8167 ;;  acceptOffers    1   33[BANK1 ] unsigned char 
  8168 ;;  declineOffer    1   30[BANK1 ] unsigned char 
  8169 ;;  messageType     1   24[BANK1 ] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1    wreg      void 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;      Locals:         0       0      85       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Totals:         0       6      85       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;Total ram usage:       91 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:   12
  8186 ;; This function calls:
  8187 ;;		_ETH_Dump
  8188 ;;		_ETH_Read16
  8189 ;;		_ETH_Read32
  8190 ;;		_ETH_Read8
  8191 ;;		_ETH_ReadBlock
  8192 ;;		_memcmp
  8193 ;;		_sendDHCPDECLINE
  8194 ;;		_sendDHCPREQUEST
  8195 ;;		_strlen
  8196 ;; This function is called by:
  8197 ;;		_UDP_Receive
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text41
  8202  011152                     __ptext41:
  8203                           	opt stack 0
  8204  011152                     _DHCP_Handler:
  8205                           	opt stack 14
  8206                           
  8207                           ;dhcp_client.c: 258: uint8_t chaddr[16];
  8208                           ;dhcp_client.c: 259: uint8_t messageType;
  8209                           ;dhcp_client.c: 261: bool acceptOffers;
  8210                           ;dhcp_client.c: 262: bool declineOffers;
  8211                           ;dhcp_client.c: 263: bool acceptNACK;
  8212                           ;dhcp_client.c: 264: bool acceptACK;
  8213                           ;dhcp_client.c: 266: uint32_t siaddr;
  8214                           ;dhcp_client.c: 270: switch(dhcpState.rxClientState)
  8215                           
  8216                           ;incstack = 0
  8217  011152  D01C               	goto	l1334
  8218  011154                     
  8219                           ;dhcp_client.c: 274: acceptOffers = 1;
  8220                           
  8221                           ;dhcp_client.c: 273: case SELECTING:
  8222  011154  0E01               	movlw	1
  8223  011156  0101               	movlb	1	; () banked
  8224  011158  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8225                           
  8226                           ;dhcp_client.c: 275: declineOffers = 0;
  8227  01115A  0E00               	movlw	0
  8228  01115C  6F1E               	movwf	DHCP_Handler@declineOffers& (0+255),b
  8229  01115E  D012               	goto	L3
  8230  011160                     
  8231                           ;dhcp_client.c: 280: acceptOffers = 0;
  8232                           
  8233                           ; BSR set to: 1
  8234  011160  0E00               	movlw	0
  8235  011162  0101               	movlb	1	; () banked
  8236  011164  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8237                           
  8238                           ;dhcp_client.c: 281: declineOffers = 1;
  8239  011166  0E01               	movlw	1
  8240  011168  6F1E               	movwf	DHCP_Handler@declineOffers& (0+255),b
  8241  01116A  D005               	goto	L2
  8242  01116C                     L1:
  8243  01116C  6F23               	movwf	DHCP_Handler@acceptACK& (0+255),b
  8244                           
  8245                           ;dhcp_client.c: 284: break;
  8246  01116E  D01C               	goto	l1337
  8247  011170                     
  8248                           ;dhcp_client.c: 286: acceptOffers = 0;
  8249                           
  8250                           ; BSR set to: 1
  8251  011170  0E00               	movlw	0
  8252  011172  0101               	movlb	1	; () banked
  8253  011174  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8254  011176                     L2:
  8255                           
  8256                           ;dhcp_client.c: 287: acceptNACK = 1;
  8257  011176  0E01               	movlw	1
  8258  011178  6F22               	movwf	DHCP_Handler@acceptNACK& (0+255),b
  8259                           
  8260                           ;dhcp_client.c: 288: acceptACK = 1;
  8261  01117A  0E01               	movlw	1
  8262  01117C  D7F7               	goto	L1
  8263  01117E                     
  8264                           ;dhcp_client.c: 291: acceptOffers = 0;
  8265                           
  8266                           ; BSR set to: 1
  8267  01117E  0E00               	movlw	0
  8268  011180  0101               	movlb	1	; () banked
  8269  011182  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8270  011184                     L3:
  8271                           
  8272                           ;dhcp_client.c: 292: acceptNACK = 0;
  8273  011184  0E00               	movlw	0
  8274  011186  6F22               	movwf	DHCP_Handler@acceptNACK& (0+255),b
  8275                           
  8276                           ;dhcp_client.c: 293: acceptACK = 0;
  8277  011188  0E00               	movlw	0
  8278  01118A  D7F0               	goto	L1
  8279  01118C                     l1334:
  8280                           
  8281                           ; BSR set to: 1
  8282  01118C  503C               	movf	_dhcpState,w,c
  8283                           
  8284                           ; Switch size 1, requested type "space"
  8285                           ; Number of cases is 4, Range of values is 0 to 3
  8286                           ; switch strategies available:
  8287                           ; Name         Instructions Cycles
  8288                           ; simple_byte           13     7 (average)
  8289                           ;	Chosen strategy is simple_byte
  8290  01118E  0A00               	xorlw	0	; case 0
  8291  011190  B4D8               	btfsc	status,2,c
  8292  011192  D7E0               	goto	l1335
  8293  011194  0A01               	xorlw	1	; case 1
  8294  011196  B4D8               	btfsc	status,2,c
  8295  011198  D7E3               	goto	l1338
  8296  01119A  0A03               	xorlw	3	; case 2
  8297  01119C  B4D8               	btfsc	status,2,c
  8298  01119E  D7E8               	goto	l1339
  8299  0111A0  0A01               	xorlw	1	; case 3
  8300  0111A2  B4D8               	btfsc	status,2,c
  8301  0111A4  D7EC               	goto	l1340
  8302  0111A6  D7D6               	goto	l1335
  8303  0111A8                     l1337:
  8304                           
  8305                           ;dhcp_client.c: 297: if(acceptOffers || declineOffers || acceptNACK || acceptACK)
  8306  0111A8  0101               	movlb	1	; () banked
  8307  0111AA  5121               	movf	DHCP_Handler@acceptOffers& (0+255),w,b
  8308  0111AC  A4D8               	btfss	status,2,c
  8309  0111AE  D009               	goto	u7350
  8310                           
  8311                           ; BSR set to: 1
  8312  0111B0  511E               	movf	DHCP_Handler@declineOffers& (0+255),w,b
  8313  0111B2  A4D8               	btfss	status,2,c
  8314  0111B4  D006               	goto	u7350
  8315                           
  8316                           ; BSR set to: 1
  8317  0111B6  5122               	movf	DHCP_Handler@acceptNACK& (0+255),w,b
  8318  0111B8  A4D8               	btfss	status,2,c
  8319  0111BA  D003               	goto	u7350
  8320                           
  8321                           ; BSR set to: 1
  8322  0111BC  5123               	movf	DHCP_Handler@acceptACK& (0+255),w,b
  8323  0111BE  B4D8               	btfsc	status,2,c
  8324  0111C0  0012               	return	
  8325  0111C2                     u7350:
  8326                           
  8327                           ; BSR set to: 1
  8328                           ;dhcp_client.c: 298: {
  8329                           ;dhcp_client.c: 299: dhcp_data_t localData = {0,0,0,0,0,0,0,0,0,3600,3600,0};
  8330                           
  8331                           ; BSR set to: 1
  8332  0111C2  EE22  F07D         	lfsr	2,DHCP_Handler@F840
  8333  0111C6  EE11  F025         	lfsr	1,DHCP_Handler@localData
  8334  0111CA  0E2F               	movlw	47
  8335  0111CC                     u7361:
  8336  0111CC  CFDB FFE3          	movff	plusw2,plusw1
  8337  0111D0  06E8               	decf	wreg,f,c
  8338  0111D2  E2FC               	bc	u7361
  8339                           
  8340                           ; BSR set to: 1
  8341                           ;dhcp_client.c: 300: localData.xidValue = dhcpData.xidValue;
  8342  0111D4  C2CD  F145         	movff	_dhcpData+32,DHCP_Handler@localData+32
  8343  0111D8  C2CE  F146         	movff	_dhcpData+33,DHCP_Handler@localData+33
  8344  0111DC  C2CF  F147         	movff	_dhcpData+34,DHCP_Handler@localData+34
  8345  0111E0  C2D0  F148         	movff	_dhcpData+35,DHCP_Handler@localData+35
  8346                           
  8347                           ; BSR set to: 1
  8348                           ;dhcp_client.c: 302: if(length > 240)
  8349  0111E4  0100               	movlb	0	; () banked
  8350  0111E6  BFB1               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  8351  0111E8  D235               	goto	l1386
  8352  0111EA  51B1               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  8353  0111EC  E104               	bnz	u7370
  8354  0111EE  0EF1               	movlw	241
  8355  0111F0  5DB0               	subwf	DHCP_Handler@length& (0+255),w,b
  8356  0111F2  A0D8               	btfss	status,0,c
  8357  0111F4  D22F               	goto	l1386
  8358  0111F6                     u7370:
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;dhcp_client.c: 303: {
  8362                           ;dhcp_client.c: 304: if(0x0201 == ETH_Read16())
  8363  0111F6  EC39  F0A0         	call	_ETH_Read16	;wreg free
  8364  0111FA  0413               	decf	?_ETH_Read16,w,c
  8365  0111FC  E103               	bnz	u7381
  8366  0111FE  0E02               	movlw	2
  8367  011200  1814               	xorwf	?_ETH_Read16+1,w,c
  8368  011202  A4D8               	btfss	status,2,c
  8369  011204                     u7381:
  8370  011204  D227               	goto	l1386
  8371                           
  8372                           ;dhcp_client.c: 305: {
  8373                           ;dhcp_client.c: 306: if(0x06 == ETH_Read8())
  8374  011206  ECAA  F0A1         	call	_ETH_Read8	;wreg free
  8375  01120A  0A06               	xorlw	6
  8376  01120C  A4D8               	btfss	status,2,c
  8377  01120E  D222               	goto	l1386
  8378                           
  8379                           ;dhcp_client.c: 307: {
  8380                           ;dhcp_client.c: 308: ETH_Read8();
  8381  011210  ECAA  F0A1         	call	_ETH_Read8	;wreg free
  8382                           
  8383                           ;dhcp_client.c: 309: if(dhcpData.xidValue == ETH_Read32())
  8384  011214  EC97  F09E         	call	_ETH_Read32	;wreg free
  8385  011218  0102               	movlb	2	; () banked
  8386  01121A  51CD               	movf	(_dhcpData+32)& (0+255),w,b
  8387  01121C  1813               	xorwf	?_ETH_Read32,w,c
  8388  01121E  E109               	bnz	u7401
  8389  011220  51CE               	movf	(_dhcpData+33)& (0+255),w,b
  8390  011222  1814               	xorwf	?_ETH_Read32+1,w,c
  8391  011224  E106               	bnz	u7401
  8392  011226  51CF               	movf	(_dhcpData+34)& (0+255),w,b
  8393  011228  1815               	xorwf	?_ETH_Read32+2,w,c
  8394  01122A  E103               	bnz	u7401
  8395  01122C  51D0               	movf	(_dhcpData+35)& (0+255),w,b
  8396  01122E  1816               	xorwf	?_ETH_Read32+3,w,c
  8397  011230  A4D8               	btfss	status,2,c
  8398  011232                     u7401:
  8399  011232  D210               	goto	l1386
  8400                           
  8401                           ; BSR set to: 2
  8402                           ;dhcp_client.c: 310: {
  8403                           ;dhcp_client.c: 311: ETH_Read16();
  8404  011234  EC39  F0A0         	call	_ETH_Read16	;wreg free
  8405                           
  8406                           ;dhcp_client.c: 312: ETH_Read16();
  8407  011238  EC39  F0A0         	call	_ETH_Read16	;wreg free
  8408                           
  8409                           ;dhcp_client.c: 313: ETH_Read32();
  8410  01123C  EC97  F09E         	call	_ETH_Read32	;wreg free
  8411                           
  8412                           ;dhcp_client.c: 314: localData.dhcpIPAddress = ETH_Read32();
  8413  011240  EC97  F09E         	call	_ETH_Read32	;wreg free
  8414  011244  C013  F125         	movff	?_ETH_Read32,DHCP_Handler@localData
  8415  011248  C014  F126         	movff	?_ETH_Read32+1,DHCP_Handler@localData+1
  8416  01124C  C015  F127         	movff	?_ETH_Read32+2,DHCP_Handler@localData+2
  8417  011250  C016  F128         	movff	?_ETH_Read32+3,DHCP_Handler@localData+3
  8418                           
  8419                           ;dhcp_client.c: 315: if((localData.dhcpIPAddress != 0xFFFFFFFF) && (localData.dhcpIPAddr
      +                          ess != 0x7F000001))
  8420  011254  0101               	movlb	1	; () banked
  8421  011256  2925               	incf	DHCP_Handler@localData& (0+255),w,b
  8422  011258  E107               	bnz	u7410
  8423  01125A  2926               	incf	(DHCP_Handler@localData+1)& (0+255),w,b
  8424  01125C  E105               	bnz	u7410
  8425  01125E  2927               	incf	(DHCP_Handler@localData+2)& (0+255),w,b
  8426  011260  E103               	bnz	u7410
  8427  011262  2928               	incf	(DHCP_Handler@localData+3)& (0+255),w,b
  8428  011264  B4D8               	btfsc	status,2,c
  8429  011266  D1F6               	goto	l1386
  8430  011268                     u7410:
  8431                           
  8432                           ; BSR set to: 1
  8433  011268  0525               	decf	DHCP_Handler@localData& (0+255),w,b
  8434  01126A  E106               	bnz	u7420
  8435  01126C  0E7F               	movlw	127
  8436  01126E  1928               	xorwf	(DHCP_Handler@localData+3)& (0+255),w,b
  8437  011270  1126               	iorwf	(DHCP_Handler@localData+1)& (0+255),w,b
  8438  011272  1127               	iorwf	(DHCP_Handler@localData+2)& (0+255),w,b
  8439  011274  B4D8               	btfsc	status,2,c
  8440  011276  D1EE               	goto	l1386
  8441  011278                     u7420:
  8442                           
  8443                           ; BSR set to: 1
  8444                           ;dhcp_client.c: 316: {
  8445                           ;dhcp_client.c: 317: siaddr = ETH_Read32();
  8446  011278  EC97  F09E         	call	_ETH_Read32	;wreg free
  8447  01127C  C013  F11A         	movff	?_ETH_Read32,DHCP_Handler@siaddr
  8448  011280  C014  F11B         	movff	?_ETH_Read32+1,DHCP_Handler@siaddr+1
  8449  011284  C015  F11C         	movff	?_ETH_Read32+2,DHCP_Handler@siaddr+2
  8450  011288  C016  F11D         	movff	?_ETH_Read32+3,DHCP_Handler@siaddr+3
  8451                           
  8452                           ;dhcp_client.c: 318: if((siaddr != 0xFFFFFFFF) && (siaddr != 0x7F000001))
  8453  01128C  0101               	movlb	1	; () banked
  8454  01128E  291A               	incf	DHCP_Handler@siaddr& (0+255),w,b
  8455  011290  E107               	bnz	u7430
  8456  011292  291B               	incf	(DHCP_Handler@siaddr+1)& (0+255),w,b
  8457  011294  E105               	bnz	u7430
  8458  011296  291C               	incf	(DHCP_Handler@siaddr+2)& (0+255),w,b
  8459  011298  E103               	bnz	u7430
  8460  01129A  291D               	incf	(DHCP_Handler@siaddr+3)& (0+255),w,b
  8461  01129C  B4D8               	btfsc	status,2,c
  8462  01129E  D1DA               	goto	l1386
  8463  0112A0                     u7430:
  8464                           
  8465                           ; BSR set to: 1
  8466  0112A0  051A               	decf	DHCP_Handler@siaddr& (0+255),w,b
  8467  0112A2  E106               	bnz	u7440
  8468  0112A4  0E7F               	movlw	127
  8469  0112A6  191D               	xorwf	(DHCP_Handler@siaddr+3)& (0+255),w,b
  8470  0112A8  111B               	iorwf	(DHCP_Handler@siaddr+1)& (0+255),w,b
  8471  0112AA  111C               	iorwf	(DHCP_Handler@siaddr+2)& (0+255),w,b
  8472  0112AC  B4D8               	btfsc	status,2,c
  8473  0112AE  D1D2               	goto	l1386
  8474  0112B0                     u7440:
  8475                           
  8476                           ; BSR set to: 1
  8477                           ;dhcp_client.c: 319: {
  8478                           ;dhcp_client.c: 320: ETH_Read32();
  8479  0112B0  EC97  F09E         	call	_ETH_Read32	;wreg free
  8480                           
  8481                           ;dhcp_client.c: 321: ETH_ReadBlock(chaddr,sizeof(chaddr));
  8482  0112B4  0E00               	movlw	low DHCP_Handler@chaddr
  8483  0112B6  6E13               	movwf	ETH_ReadBlock@buffer,c
  8484  0112B8  0E01               	movlw	high DHCP_Handler@chaddr
  8485  0112BA  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  8486  0112BC  0E00               	movlw	0
  8487  0112BE  6E16               	movwf	ETH_ReadBlock@length+1,c
  8488  0112C0  0E10               	movlw	16
  8489  0112C2  6E15               	movwf	ETH_ReadBlock@length,c
  8490  0112C4  ECEE  F09E         	call	_ETH_ReadBlock	;wreg free
  8491                           
  8492                           ;dhcp_client.c: 322: if(memcmp(chaddr, &hostMacAddress.s, 6)== 0 || memcmp(chaddr, &broa
      +                          dcastMAC.s, 6)== 0 || (strlen(chaddr)== 0))
  8493  0112C8  0E00               	movlw	low DHCP_Handler@chaddr
  8494  0112CA  6E13               	movwf	memcmp@s1,c
  8495  0112CC  0E01               	movlw	high DHCP_Handler@chaddr
  8496  0112CE  6E14               	movwf	memcmp@s1+1,c
  8497  0112D0  0E73               	movlw	low _hostMacAddress
  8498  0112D2  6E15               	movwf	memcmp@s2,c
  8499  0112D4  0E02               	movlw	high _hostMacAddress
  8500  0112D6  6E16               	movwf	memcmp@s2+1,c
  8501  0112D8  0E00               	movlw	0
  8502  0112DA  6E18               	movwf	memcmp@n+1,c
  8503  0112DC  0E06               	movlw	6
  8504  0112DE  6E17               	movwf	memcmp@n,c
  8505  0112E0  EC7D  F09A         	call	_memcmp	;wreg free
  8506  0112E4  5013               	movf	?_memcmp,w,c
  8507  0112E6  1014               	iorwf	?_memcmp+1,w,c
  8508  0112E8  B4D8               	btfsc	status,2,c
  8509  0112EA  D01C               	goto	u7470
  8510  0112EC  0E00               	movlw	low DHCP_Handler@chaddr
  8511  0112EE  6E13               	movwf	memcmp@s1,c
  8512  0112F0  0E01               	movlw	high DHCP_Handler@chaddr
  8513  0112F2  6E14               	movwf	memcmp@s1+1,c
  8514  0112F4  0E58               	movlw	low _broadcastMAC
  8515  0112F6  6E15               	movwf	memcmp@s2,c
  8516  0112F8  0EFF               	movlw	high _broadcastMAC
  8517  0112FA  6E16               	movwf	memcmp@s2+1,c
  8518  0112FC  0E00               	movlw	0
  8519  0112FE  6E18               	movwf	memcmp@n+1,c
  8520  011300  0E06               	movlw	6
  8521  011302  6E17               	movwf	memcmp@n,c
  8522  011304  EC7D  F09A         	call	_memcmp	;wreg free
  8523  011308  5013               	movf	?_memcmp,w,c
  8524  01130A  1014               	iorwf	?_memcmp+1,w,c
  8525  01130C  B4D8               	btfsc	status,2,c
  8526  01130E  D00A               	goto	u7470
  8527  011310  0E00               	movlw	low DHCP_Handler@chaddr
  8528  011312  6E13               	movwf	strlen@s,c
  8529  011314  0E01               	movlw	high DHCP_Handler@chaddr
  8530  011316  6E14               	movwf	strlen@s+1,c
  8531  011318  EC18  F09F         	call	_strlen	;wreg free
  8532  01131C  5013               	movf	?_strlen,w,c
  8533  01131E  1014               	iorwf	?_strlen+1,w,c
  8534  011320  A4D8               	btfss	status,2,c
  8535  011322  D198               	goto	l1386
  8536  011324                     u7470:
  8537                           
  8538                           ;dhcp_client.c: 323: {
  8539                           ;dhcp_client.c: 324: ETH_Dump(64);
  8540  011324  0E00               	movlw	0
  8541  011326  6E14               	movwf	ETH_Dump@length+1,c
  8542  011328  0E40               	movlw	64
  8543  01132A  6E13               	movwf	ETH_Dump@length,c
  8544  01132C  ECFB  F0A0         	call	_ETH_Dump	;wreg free
  8545                           
  8546                           ;dhcp_client.c: 325: ETH_Dump(128);
  8547  011330  0E00               	movlw	0
  8548  011332  6E14               	movwf	ETH_Dump@length+1,c
  8549  011334  0E80               	movlw	128
  8550  011336  6E13               	movwf	ETH_Dump@length,c
  8551  011338  ECFB  F0A0         	call	_ETH_Dump	;wreg free
  8552                           
  8553                           ;dhcp_client.c: 326: if(ETH_Read32() == 0x63825363)
  8554  01133C  EC97  F09E         	call	_ETH_Read32	;wreg free
  8555  011340  0E63               	movlw	99
  8556  011342  1813               	xorwf	?_ETH_Read32,w,c
  8557  011344  E109               	bnz	u7481
  8558  011346  0E53               	movlw	83
  8559  011348  1814               	xorwf	?_ETH_Read32+1,w,c
  8560  01134A  E106               	bnz	u7481
  8561  01134C  0E82               	movlw	130
  8562  01134E  1815               	xorwf	?_ETH_Read32+2,w,c
  8563  011350  E103               	bnz	u7481
  8564  011352  0E63               	movlw	99
  8565  011354  1816               	xorwf	?_ETH_Read32+3,w,c
  8566  011356  A4D8               	btfss	status,2,c
  8567  011358                     u7481:
  8568  011358  D17D               	goto	l1386
  8569                           
  8570                           ;dhcp_client.c: 327: {
  8571                           ;dhcp_client.c: 328: length -= 240;
  8572  01135A  0100               	movlb	0	; () banked
  8573  01135C  0E10               	movlw	16
  8574  01135E  27B0               	addwf	DHCP_Handler@length& (0+255),f,b
  8575  011360  0EFF               	movlw	255
  8576  011362  23B1               	addwfc	(DHCP_Handler@length+1)& (0+255),f,b
  8577                           
  8578                           ;dhcp_client.c: 329: while(length>0)
  8579  011364  D0DA               	goto	l1360
  8580  011366                     
  8581                           ; BSR set to: 0
  8582                           ;dhcp_client.c: 330: {
  8583                           ;dhcp_client.c: 332: uint8_t option, optionLength;
  8584                           ;dhcp_client.c: 333: option = ETH_Read8();
  8585                           
  8586                           ; BSR set to: 0
  8587  011366  ECAA  F0A1         	call	_ETH_Read8	;wreg free
  8588  01136A  0101               	movlb	1	; () banked
  8589  01136C  6F19               	movwf	DHCP_Handler@option& (0+255),b
  8590                           
  8591                           ;dhcp_client.c: 334: optionLength = ETH_Read8();
  8592  01136E  ECAA  F0A1         	call	_ETH_Read8	;wreg free
  8593  011372  0101               	movlb	1	; () banked
  8594  011374  6F24               	movwf	DHCP_Handler@optionLength& (0+255),b
  8595                           
  8596                           ; BSR set to: 1
  8597                           ;dhcp_client.c: 335: length -= 2 + optionLength;
  8598  011376  5124               	movf	DHCP_Handler@optionLength& (0+255),w,b
  8599  011378  0100               	movlb	0	; () banked
  8600  01137A  6FB2               	movwf	??_DHCP_Handler& (0+255),b
  8601  01137C  6BB3               	clrf	(??_DHCP_Handler+1)& (0+255),b
  8602  01137E  0E02               	movlw	2
  8603  011380  27B2               	addwf	??_DHCP_Handler& (0+255),f,b
  8604  011382  0E00               	movlw	0
  8605  011384  23B3               	addwfc	(??_DHCP_Handler+1)& (0+255),f,b
  8606  011386  51B2               	movf	??_DHCP_Handler& (0+255),w,b
  8607  011388  5FB0               	subwf	DHCP_Handler@length& (0+255),f,b
  8608  01138A  51B3               	movf	(??_DHCP_Handler+1)& (0+255),w,b
  8609  01138C  5BB1               	subwfb	(DHCP_Handler@length+1)& (0+255),f,b
  8610                           
  8611                           ;dhcp_client.c: 336: switch(option)
  8612  01138E  D0AD               	goto	l1358
  8613  011390                     
  8614                           ;dhcp_client.c: 339: localData.subnetMask = ETH_Read32();
  8615                           
  8616                           ; BSR set to: 0
  8617  011390  EC97  F09E         	call	_ETH_Read32	;wreg free
  8618  011394  C013  F129         	movff	?_ETH_Read32,DHCP_Handler@localData+4
  8619  011398  C014  F12A         	movff	?_ETH_Read32+1,DHCP_Handler@localData+5
  8620  01139C  C015  F12B         	movff	?_ETH_Read32+2,DHCP_Handler@localData+6
  8621  0113A0  C016  F12C         	movff	?_ETH_Read32+3,DHCP_Handler@localData+7
  8622                           
  8623                           ;dhcp_client.c: 340: break;
  8624  0113A4  D0BA               	goto	l1360
  8625  0113A6                     
  8626                           ;dhcp_client.c: 342: localData.routerAddress = ETH_Read32();
  8627  0113A6  EC97  F09E         	call	_ETH_Read32	;wreg free
  8628  0113AA  C013  F12D         	movff	?_ETH_Read32,DHCP_Handler@localData+8
  8629  0113AE  C014  F12E         	movff	?_ETH_Read32+1,DHCP_Handler@localData+9
  8630  0113B2  C015  F12F         	movff	?_ETH_Read32+2,DHCP_Handler@localData+10
  8631  0113B6  C016  F130         	movff	?_ETH_Read32+3,DHCP_Handler@localData+11
  8632                           
  8633                           ;dhcp_client.c: 343: break;
  8634  0113BA  D0AF               	goto	l1360
  8635  0113BC                     
  8636                           ;dhcp_client.c: 345: {
  8637                           ;dhcp_client.c: 346: uint8_t count=0;
  8638  0113BC  0E00               	movlw	0
  8639  0113BE  0101               	movlb	1	; () banked
  8640  0113C0  6F1F               	movwf	DHCP_Handler@count& (0+255),b
  8641                           
  8642                           ;dhcp_client.c: 347: while(optionLength >= 4)
  8643  0113C2  D025               	goto	l1363
  8644  0113C4                     
  8645                           ; BSR set to: 1
  8646                           ;dhcp_client.c: 348: {
  8647                           ;dhcp_client.c: 349: uint32_t a = ETH_Read32();
  8648                           
  8649                           ; BSR set to: 1
  8650  0113C4  EC97  F09E         	call	_ETH_Read32	;wreg free
  8651  0113C8  C013  F110         	movff	?_ETH_Read32,DHCP_Handler@a
  8652  0113CC  C014  F111         	movff	?_ETH_Read32+1,DHCP_Handler@a+1
  8653  0113D0  C015  F112         	movff	?_ETH_Read32+2,DHCP_Handler@a+2
  8654  0113D4  C016  F113         	movff	?_ETH_Read32+3,DHCP_Handler@a+3
  8655                           
  8656                           ;dhcp_client.c: 350: if(count < 2)
  8657  0113D8  0E02               	movlw	2
  8658  0113DA  0101               	movlb	1	; () banked
  8659  0113DC  611F               	cpfslt	DHCP_Handler@count& (0+255),b
  8660  0113DE  D015               	goto	l1365
  8661                           
  8662                           ; BSR set to: 1
  8663                           ;dhcp_client.c: 351: localData.dnsAddress[count++] = a;
  8664  0113E0  511F               	movf	DHCP_Handler@count& (0+255),w,b
  8665  0113E2  0D04               	mullw	4
  8666  0113E4  0E0C               	movlw	12
  8667  0113E6  26F3               	addwf	prodl,f,c
  8668  0113E8  0E00               	movlw	0
  8669  0113EA  22F4               	addwfc	prodh,f,c
  8670  0113EC  0E25               	movlw	low DHCP_Handler@localData
  8671  0113EE  24F3               	addwf	prodl,w,c
  8672  0113F0  6ED9               	movwf	fsr2l,c
  8673  0113F2  0E01               	movlw	high DHCP_Handler@localData
  8674  0113F4  20F4               	addwfc	prodh,w,c
  8675  0113F6  6EDA               	movwf	fsr2h,c
  8676  0113F8  C110  FFDE         	movff	DHCP_Handler@a,postinc2
  8677  0113FC  C111  FFDE         	movff	DHCP_Handler@a+1,postinc2
  8678  011400  C112  FFDE         	movff	DHCP_Handler@a+2,postinc2
  8679  011404  C113  FFDE         	movff	DHCP_Handler@a+3,postinc2
  8680                           
  8681                           ; BSR set to: 1
  8682  011408  2B1F               	incf	DHCP_Handler@count& (0+255),f,b
  8683  01140A                     l1365:
  8684                           
  8685                           ; BSR set to: 1
  8686                           ;dhcp_client.c: 353: optionLength -= 4;
  8687                           
  8688                           ; BSR set to: 1
  8689  01140A  0E04               	movlw	4
  8690  01140C  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  8691  01140E                     l1363:
  8692                           
  8693                           ; BSR set to: 1
  8694                           
  8695                           ; BSR set to: 1
  8696  01140E  0E04               	movlw	4
  8697  011410  6124               	cpfslt	DHCP_Handler@optionLength& (0+255),b
  8698  011412  D7D8               	goto	l1364
  8699  011414  D082               	goto	l1360
  8700  011416                     
  8701                           ; BSR set to: 1
  8702                           ;dhcp_client.c: 358: {
  8703                           ;dhcp_client.c: 359: uint8_t count=0;
  8704                           
  8705                           ; BSR set to: 1
  8706  011416  0E00               	movlw	0
  8707  011418  6F20               	movwf	DHCP_Handler@count_3164& (0+255),b
  8708                           
  8709                           ;dhcp_client.c: 360: while(optionLength >= 4)
  8710  01141A  D025               	goto	l1368
  8711  01141C                     
  8712                           ; BSR set to: 1
  8713                           ;dhcp_client.c: 361: {
  8714                           ;dhcp_client.c: 362: uint32_t a = ETH_Read32();
  8715                           
  8716                           ; BSR set to: 1
  8717  01141C  EC97  F09E         	call	_ETH_Read32	;wreg free
  8718  011420  C013  F114         	movff	?_ETH_Read32,DHCP_Handler@a_3165
  8719  011424  C014  F115         	movff	?_ETH_Read32+1,DHCP_Handler@a_3165+1
  8720  011428  C015  F116         	movff	?_ETH_Read32+2,DHCP_Handler@a_3165+2
  8721  01142C  C016  F117         	movff	?_ETH_Read32+3,DHCP_Handler@a_3165+3
  8722                           
  8723                           ;dhcp_client.c: 363: if(count < 2)
  8724  011430  0E02               	movlw	2
  8725  011432  0101               	movlb	1	; () banked
  8726  011434  6120               	cpfslt	DHCP_Handler@count_3164& (0+255),b
  8727  011436  D015               	goto	l1370
  8728                           
  8729                           ; BSR set to: 1
  8730                           ;dhcp_client.c: 364: localData.ntpAddress[count++] = a;
  8731  011438  5120               	movf	DHCP_Handler@count_3164& (0+255),w,b
  8732  01143A  0D04               	mullw	4
  8733  01143C  0E14               	movlw	20
  8734  01143E  26F3               	addwf	prodl,f,c
  8735  011440  0E00               	movlw	0
  8736  011442  22F4               	addwfc	prodh,f,c
  8737  011444  0E25               	movlw	low DHCP_Handler@localData
  8738  011446  24F3               	addwf	prodl,w,c
  8739  011448  6ED9               	movwf	fsr2l,c
  8740  01144A  0E01               	movlw	high DHCP_Handler@localData
  8741  01144C  20F4               	addwfc	prodh,w,c
  8742  01144E  6EDA               	movwf	fsr2h,c
  8743  011450  C114  FFDE         	movff	DHCP_Handler@a_3165,postinc2
  8744  011454  C115  FFDE         	movff	DHCP_Handler@a_3165+1,postinc2
  8745  011458  C116  FFDE         	movff	DHCP_Handler@a_3165+2,postinc2
  8746  01145C  C117  FFDE         	movff	DHCP_Handler@a_3165+3,postinc2
  8747                           
  8748                           ; BSR set to: 1
  8749  011460  2B20               	incf	DHCP_Handler@count_3164& (0+255),f,b
  8750  011462                     l1370:
  8751                           
  8752                           ; BSR set to: 1
  8753                           ;dhcp_client.c: 366: optionLength -= 4;
  8754                           
  8755                           ; BSR set to: 1
  8756  011462  0E04               	movlw	4
  8757  011464  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  8758  011466                     l1368:
  8759                           
  8760                           ; BSR set to: 1
  8761                           
  8762                           ; BSR set to: 1
  8763  011466  0E04               	movlw	4
  8764  011468  6124               	cpfslt	DHCP_Handler@optionLength& (0+255),b
  8765  01146A  D7D8               	goto	l1369
  8766  01146C  D056               	goto	l1360
  8767  01146E                     
  8768                           ; BSR set to: 1
  8769                           ;dhcp_client.c: 371: if(optionLength >= 4)
  8770                           
  8771                           ; BSR set to: 1
  8772  01146E  0E03               	movlw	3
  8773  011470  6524               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  8774  011472  D053               	goto	l1360
  8775                           
  8776                           ; BSR set to: 1
  8777                           ;dhcp_client.c: 372: {
  8778                           ;dhcp_client.c: 373: localData.t1 = ETH_Read32();
  8779  011474  EC97  F09E         	call	_ETH_Read32	;wreg free
  8780  011478  C013  F149         	movff	?_ETH_Read32,DHCP_Handler@localData+36
  8781  01147C  C014  F14A         	movff	?_ETH_Read32+1,DHCP_Handler@localData+37
  8782  011480  C015  F14B         	movff	?_ETH_Read32+2,DHCP_Handler@localData+38
  8783  011484  C016  F14C         	movff	?_ETH_Read32+3,DHCP_Handler@localData+39
  8784                           
  8785                           ;dhcp_client.c: 374: localData.t2 = localData.t1 >> 1;
  8786  011488  C149  F0B2         	movff	DHCP_Handler@localData+36,??_DHCP_Handler
  8787  01148C  C14A  F0B3         	movff	DHCP_Handler@localData+37,??_DHCP_Handler+1
  8788  011490  C14B  F0B4         	movff	DHCP_Handler@localData+38,??_DHCP_Handler+2
  8789  011494  C14C  F0B5         	movff	DHCP_Handler@localData+39,??_DHCP_Handler+3
  8790  011498  0100               	movlb	0	; () banked
  8791  01149A  90D8               	bcf	status,0,c
  8792  01149C  33B5               	rrcf	(??_DHCP_Handler+3)& (0+255),f,b
  8793  01149E  33B4               	rrcf	(??_DHCP_Handler+2)& (0+255),f,b
  8794  0114A0  33B3               	rrcf	(??_DHCP_Handler+1)& (0+255),f,b
  8795  0114A2  33B2               	rrcf	??_DHCP_Handler& (0+255),f,b
  8796  0114A4  C0B2  F14D         	movff	??_DHCP_Handler,DHCP_Handler@localData+40
  8797  0114A8  C0B3  F14E         	movff	??_DHCP_Handler+1,DHCP_Handler@localData+41
  8798  0114AC  C0B4  F14F         	movff	??_DHCP_Handler+2,DHCP_Handler@localData+42
  8799  0114B0  C0B5  F150         	movff	??_DHCP_Handler+3,DHCP_Handler@localData+43
  8800  0114B4  D00A               	goto	l8234
  8801  0114B6                     
  8802                           ; BSR set to: 1
  8803                           ;dhcp_client.c: 379: localData.leasee_ip = ETH_Read32();
  8804                           
  8805                           ; BSR set to: 1
  8806  0114B6  EC97  F09E         	call	_ETH_Read32	;wreg free
  8807  0114BA  C013  F151         	movff	?_ETH_Read32,DHCP_Handler@localData+44
  8808  0114BE  C014  F152         	movff	?_ETH_Read32+1,DHCP_Handler@localData+45
  8809  0114C2  C015  F153         	movff	?_ETH_Read32+2,DHCP_Handler@localData+46
  8810  0114C6  C016  F154         	movff	?_ETH_Read32+3,DHCP_Handler@localData+47
  8811  0114CA                     l8234:
  8812                           
  8813                           ;dhcp_client.c: 380: optionLength -= 4;
  8814  0114CA  0E04               	movlw	4
  8815  0114CC  0101               	movlb	1	; () banked
  8816  0114CE  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  8817                           
  8818                           ;dhcp_client.c: 381: break;
  8819  0114D0  D024               	goto	l1360
  8820  0114D2                     
  8821                           ; BSR set to: 1
  8822                           ;dhcp_client.c: 383: messageType=ETH_Read8();
  8823                           
  8824                           ; BSR set to: 1
  8825  0114D2  ECAA  F0A1         	call	_ETH_Read8	;wreg free
  8826  0114D6  0101               	movlb	1	; () banked
  8827  0114D8  6F18               	movwf	DHCP_Handler@messageType& (0+255),b
  8828                           
  8829                           ; BSR set to: 1
  8830                           ;dhcp_client.c: 384: optionLength -=1;
  8831  0114DA  0724               	decf	DHCP_Handler@optionLength& (0+255),f,b
  8832                           
  8833                           ;dhcp_client.c: 385: break;
  8834  0114DC  D01E               	goto	l1360
  8835  0114DE                     
  8836                           ; BSR set to: 1
  8837                           ;dhcp_client.c: 387: ETH_Dump(optionLength);
  8838                           
  8839                           ; BSR set to: 1
  8840  0114DE  C124  F013         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  8841  0114E2  6A14               	clrf	ETH_Dump@length+1,c
  8842  0114E4  ECFB  F0A0         	call	_ETH_Dump	;wreg free
  8843                           
  8844                           ;dhcp_client.c: 389: }
  8845                           
  8846                           ;dhcp_client.c: 388: break;
  8847  0114E8  D018               	goto	l1360
  8848  0114EA                     l1358:
  8849  0114EA  0101               	movlb	1	; () banked
  8850  0114EC  5119               	movf	DHCP_Handler@option& (0+255),w,b
  8851                           
  8852                           ; Switch size 1, requested type "space"
  8853                           ; Number of cases is 7, Range of values is 1 to 54
  8854                           ; switch strategies available:
  8855                           ; Name         Instructions Cycles
  8856                           ; simple_byte           22    12 (average)
  8857                           ;	Chosen strategy is simple_byte
  8858  0114EE  0A01               	xorlw	1	; case 1
  8859  0114F0  B4D8               	btfsc	status,2,c
  8860  0114F2  D74E               	goto	l1359
  8861  0114F4  0A02               	xorlw	2	; case 3
  8862  0114F6  B4D8               	btfsc	status,2,c
  8863  0114F8  D756               	goto	l1361
  8864  0114FA  0A05               	xorlw	5	; case 6
  8865  0114FC  B4D8               	btfsc	status,2,c
  8866  0114FE  D75E               	goto	l1362
  8867  011500  0A2C               	xorlw	44	; case 42
  8868  011502  B4D8               	btfsc	status,2,c
  8869  011504  D788               	goto	l1367
  8870  011506  0A19               	xorlw	25	; case 51
  8871  011508  B4D8               	btfsc	status,2,c
  8872  01150A  D7B1               	goto	l1372
  8873  01150C  0A06               	xorlw	6	; case 53
  8874  01150E  B4D8               	btfsc	status,2,c
  8875  011510  D7E0               	goto	l1375
  8876  011512  0A03               	xorlw	3	; case 54
  8877  011514  B4D8               	btfsc	status,2,c
  8878  011516  D7CF               	goto	l1374
  8879  011518  D7E2               	goto	l1376
  8880  01151A                     l1360:
  8881                           
  8882                           ; BSR set to: 1
  8883                           
  8884                           ; BSR set to: 1
  8885  01151A  0100               	movlb	0	; () banked
  8886  01151C  BFB1               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  8887  01151E  D09A               	goto	l1386
  8888  011520  51B1               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  8889  011522  E103               	bnz	u7541
  8890  011524  05B0               	decf	DHCP_Handler@length& (0+255),w,b
  8891  011526  A0D8               	btfss	status,0,c
  8892  011528  D095               	goto	l1386
  8893  01152A                     u7541:
  8894  01152A  D71D               	goto	l1357
  8895  01152C                     
  8896                           ;dhcp_client.c: 434: if(acceptOffers)
  8897                           
  8898                           ; BSR set to: 0
  8899  01152C  0101               	movlb	1	; () banked
  8900  01152E  5121               	movf	DHCP_Handler@acceptOffers& (0+255),w,b
  8901  011530  B4D8               	btfsc	status,2,c
  8902  011532  D00D               	goto	l1388
  8903                           
  8904                           ; BSR set to: 1
  8905                           ;dhcp_client.c: 435: {
  8906                           ;dhcp_client.c: 436: dhcpData = localData;
  8907  011534  EE21  F025         	lfsr	2,DHCP_Handler@localData
  8908  011538  EE12  F0AD         	lfsr	1,_dhcpData
  8909  01153C  0E2F               	movlw	47
  8910  01153E                     u7561:
  8911  01153E  CFDB FFE3          	movff	plusw2,plusw1
  8912  011542  06E8               	decf	wreg,f,c
  8913  011544  E2FC               	bc	u7561
  8914                           
  8915                           ; BSR set to: 1
  8916                           ;dhcp_client.c: 437: sendDHCPREQUEST();
  8917  011546  ECE8  F0A2         	call	_sendDHCPREQUEST	;wreg free
  8918                           
  8919                           ;dhcp_client.c: 438: dhcpState.rxClientState = REQUESTING;
  8920  01154A  0E01               	movlw	1
  8921  01154C  6E3C               	movwf	_dhcpState,c
  8922  01154E                     l1388:
  8923                           
  8924                           ;dhcp_client.c: 439: }
  8925                           ;dhcp_client.c: 440: if(declineOffers)
  8926  01154E  0101               	movlb	1	; () banked
  8927  011550  511E               	movf	DHCP_Handler@declineOffers& (0+255),w,b
  8928  011552  B4D8               	btfsc	status,2,c
  8929  011554  0012               	return	
  8930                           
  8931                           ; BSR set to: 1
  8932                           ;dhcp_client.c: 441: {
  8933                           ;dhcp_client.c: 442: sendDHCPDECLINE();
  8934  011556  ECE4  F0A2         	call	_sendDHCPDECLINE	;wreg free
  8935                           
  8936                           ;dhcp_client.c: 443: }
  8937                           ;dhcp_client.c: 444: break;
  8938  01155A  0012               	return	
  8939  01155C                     
  8940                           ;dhcp_client.c: 446: if(acceptACK)
  8941  01155C  0101               	movlb	1	; () banked
  8942  01155E  5123               	movf	DHCP_Handler@acceptACK& (0+255),w,b
  8943  011560  B4D8               	btfsc	status,2,c
  8944  011562  0012               	return	
  8945                           
  8946                           ; BSR set to: 1
  8947                           ;dhcp_client.c: 447: {
  8948                           ;dhcp_client.c: 448: dhcpData.t1 = localData.t1;
  8949  011564  C149  F2D1         	movff	DHCP_Handler@localData+36,_dhcpData+36
  8950  011568  C14A  F2D2         	movff	DHCP_Handler@localData+37,_dhcpData+37
  8951  01156C  C14B  F2D3         	movff	DHCP_Handler@localData+38,_dhcpData+38
  8952  011570  C14C  F2D4         	movff	DHCP_Handler@localData+39,_dhcpData+39
  8953                           
  8954                           ;dhcp_client.c: 449: dhcpData.t2 = localData.t2;
  8955  011574  C14D  F2D5         	movff	DHCP_Handler@localData+40,_dhcpData+40
  8956  011578  C14E  F2D6         	movff	DHCP_Handler@localData+41,_dhcpData+41
  8957  01157C  C14F  F2D7         	movff	DHCP_Handler@localData+42,_dhcpData+42
  8958  011580  C150  F2D8         	movff	DHCP_Handler@localData+43,_dhcpData+43
  8959                           
  8960                           ; BSR set to: 1
  8961                           
  8962                           ;dhcp_client.c: 450: do{ ip_database_info.ipv4_myAddress = dhcpData.dhcpIPAddress; } whi
      +                          le(0);
  8963  011584  C2AD  F200         	movff	_dhcpData,_ip_database_info
  8964  011588  C2AE  F201         	movff	_dhcpData+1,_ip_database_info+1
  8965  01158C  C2AF  F202         	movff	_dhcpData+2,_ip_database_info+2
  8966  011590  C2B0  F203         	movff	_dhcpData+3,_ip_database_info+3
  8967                           
  8968                           ; BSR set to: 1
  8969                           
  8970                           ; BSR set to: 1
  8971                           ;dhcp_client.c: 451: do{ if(0 < 2) ip_database_info.ipv4_dns[0] = dhcpData.dnsAddress[0]
      +                          ; } while(0);
  8972  011594  C2B9  F204         	movff	_dhcpData+12,_ip_database_info+4
  8973  011598  C2BA  F205         	movff	_dhcpData+13,_ip_database_info+5
  8974  01159C  C2BB  F206         	movff	_dhcpData+14,_ip_database_info+6
  8975  0115A0  C2BC  F207         	movff	_dhcpData+15,_ip_database_info+7
  8976                           
  8977                           ; BSR set to: 1
  8978                           
  8979                           ; BSR set to: 1
  8980                           ;dhcp_client.c: 452: do{ if(1 < 2) ip_database_info.ipv4_dns[1] = dhcpData.dnsAddress[1]
      +                          ; } while(0);
  8981                           
  8982                           ; BSR set to: 1
  8983  0115A4  C2BD  F208         	movff	_dhcpData+16,_ip_database_info+8
  8984  0115A8  C2BE  F209         	movff	_dhcpData+17,_ip_database_info+9
  8985  0115AC  C2BF  F20A         	movff	_dhcpData+18,_ip_database_info+10
  8986  0115B0  C2C0  F20B         	movff	_dhcpData+19,_ip_database_info+11
  8987                           
  8988                           ; BSR set to: 1
  8989                           
  8990                           ; BSR set to: 1
  8991                           ;dhcp_client.c: 453: do{ ip_database_info.ipv4_router = dhcpData.routerAddress; } while(
      +                          0);
  8992                           
  8993                           ; BSR set to: 1
  8994  0115B4  C2B5  F210         	movff	_dhcpData+8,_ip_database_info+16
  8995  0115B8  C2B6  F211         	movff	_dhcpData+9,_ip_database_info+17
  8996  0115BC  C2B7  F212         	movff	_dhcpData+10,_ip_database_info+18
  8997  0115C0  C2B8  F213         	movff	_dhcpData+11,_ip_database_info+19
  8998                           
  8999                           ; BSR set to: 1
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;dhcp_client.c: 454: do{ ip_database_info.ipv4_gateway = dhcpData.gatewayAddress; } whil
      +                          e(0);
  9003  0115C4  C2C9  F214         	movff	_dhcpData+28,_ip_database_info+20
  9004  0115C8  C2CA  F215         	movff	_dhcpData+29,_ip_database_info+21
  9005  0115CC  C2CB  F216         	movff	_dhcpData+30,_ip_database_info+22
  9006  0115D0  C2CC  F217         	movff	_dhcpData+31,_ip_database_info+23
  9007                           
  9008                           ; BSR set to: 1
  9009                           
  9010                           ; BSR set to: 1
  9011                           ;dhcp_client.c: 455: do{ ip_database_info.ipv4_subnetMask = dhcpData.subnetMask; } while
      +                          (0);
  9012  0115D4  C2B1  F20C         	movff	_dhcpData+4,_ip_database_info+12
  9013  0115D8  C2B2  F20D         	movff	_dhcpData+5,_ip_database_info+13
  9014  0115DC  C2B3  F20E         	movff	_dhcpData+6,_ip_database_info+14
  9015  0115E0  C2B4  F20F         	movff	_dhcpData+7,_ip_database_info+15
  9016                           
  9017                           ; BSR set to: 1
  9018                           ;dhcp_client.c: 456: if(dhcpData.ntpAddress[0])
  9019                           
  9020                           ; BSR set to: 1
  9021  0115E4  0102               	movlb	2	; () banked
  9022  0115E6  51C1               	movf	(_dhcpData+20)& (0+255),w,b
  9023  0115E8  11C2               	iorwf	(_dhcpData+21)& (0+255),w,b
  9024  0115EA  11C3               	iorwf	(_dhcpData+22)& (0+255),w,b
  9025  0115EC  11C4               	iorwf	(_dhcpData+23)& (0+255),w,b
  9026  0115EE  B4D8               	btfsc	status,2,c
  9027  0115F0  D016               	goto	l1413
  9028                           
  9029                           ; BSR set to: 2
  9030                           
  9031                           ;dhcp_client.c: 457: {
  9032                           ;dhcp_client.c: 458: do{ if(0 < 2) ip_database_info.ipv4_ntpAddress[0] = dhcpData.ntpAdd
      +                          ress[0]; } while(0);
  9033  0115F2  C2C1  F218         	movff	_dhcpData+20,_ip_database_info+24
  9034  0115F6  C2C2  F219         	movff	_dhcpData+21,_ip_database_info+25
  9035  0115FA  C2C3  F21A         	movff	_dhcpData+22,_ip_database_info+26
  9036  0115FE  C2C4  F21B         	movff	_dhcpData+23,_ip_database_info+27
  9037                           
  9038                           ; BSR set to: 2
  9039                           ;dhcp_client.c: 459: if(dhcpData.ntpAddress[1])
  9040                           
  9041                           ; BSR set to: 2
  9042                           
  9043                           ; BSR set to: 2
  9044  011602  51C5               	movf	(_dhcpData+24)& (0+255),w,b
  9045  011604  11C6               	iorwf	(_dhcpData+25)& (0+255),w,b
  9046  011606  11C7               	iorwf	(_dhcpData+26)& (0+255),w,b
  9047  011608  11C8               	iorwf	(_dhcpData+27)& (0+255),w,b
  9048  01160A  B4D8               	btfsc	status,2,c
  9049  01160C  D008               	goto	l1413
  9050                           
  9051                           ; BSR set to: 2
  9052                           
  9053                           ;dhcp_client.c: 460: do{ if(1 < 2) ip_database_info.ipv4_ntpAddress[1] = dhcpData.ntpAdd
      +                          ress[1]; } while(0);
  9054  01160E  C2C5  F21C         	movff	_dhcpData+24,_ip_database_info+28
  9055  011612  C2C6  F21D         	movff	_dhcpData+25,_ip_database_info+29
  9056  011616  C2C7  F21E         	movff	_dhcpData+26,_ip_database_info+30
  9057  01161A  C2C8  F21F         	movff	_dhcpData+27,_ip_database_info+31
  9058  01161E                     l1413:
  9059                           
  9060                           ; BSR set to: 2
  9061                           ;dhcp_client.c: 461: }
  9062                           ;dhcp_client.c: 462: dhcpState.rxClientState = BOUND;
  9063                           
  9064                           ; BSR set to: 2
  9065                           
  9066                           ; BSR set to: 2
  9067                           
  9068                           ; BSR set to: 2
  9069                           
  9070                           ; BSR set to: 2
  9071  01161E  0E03               	movlw	3
  9072  011620  6E3C               	movwf	_dhcpState,c
  9073                           
  9074                           ; BSR set to: 2
  9075                           ;dhcp_client.c: 463: }
  9076                           ;dhcp_client.c: 464: break;
  9077  011622  0012               	return	
  9078  011624                     
  9079                           ;dhcp_client.c: 466: if(acceptNACK)
  9080                           
  9081                           ; BSR set to: 2
  9082  011624  0101               	movlb	1	; () banked
  9083  011626  5122               	movf	DHCP_Handler@acceptNACK& (0+255),w,b
  9084  011628  B4D8               	btfsc	status,2,c
  9085  01162A  0012               	return	
  9086                           
  9087                           ; BSR set to: 1
  9088                           ;dhcp_client.c: 467: {
  9089                           ;dhcp_client.c: 468: dhcpData.t1 = 0;
  9090  01162C  0E00               	movlw	0
  9091  01162E  0102               	movlb	2	; () banked
  9092  011630  6FD1               	movwf	(_dhcpData+36)& (0+255),b
  9093  011632  0E00               	movlw	0
  9094  011634  6FD2               	movwf	(_dhcpData+37)& (0+255),b
  9095  011636  0E00               	movlw	0
  9096  011638  6FD3               	movwf	(_dhcpData+38)& (0+255),b
  9097  01163A  0E00               	movlw	0
  9098  01163C  6FD4               	movwf	(_dhcpData+39)& (0+255),b
  9099                           
  9100                           ;dhcp_client.c: 469: dhcpData.t2 = 0;
  9101  01163E  0E00               	movlw	0
  9102  011640  6FD5               	movwf	(_dhcpData+40)& (0+255),b
  9103  011642  0E00               	movlw	0
  9104  011644  6FD6               	movwf	(_dhcpData+41)& (0+255),b
  9105  011646  0E00               	movlw	0
  9106  011648  6FD7               	movwf	(_dhcpData+42)& (0+255),b
  9107  01164A  0E00               	movlw	0
  9108  01164C  6FD8               	movwf	(_dhcpData+43)& (0+255),b
  9109                           
  9110                           ;dhcp_client.c: 470: dhcpState.rxClientState = SELECTING;
  9111  01164E  0E00               	movlw	0
  9112  011650  6E3C               	movwf	_dhcpState,c
  9113                           
  9114                           ; BSR set to: 2
  9115                           ;dhcp_client.c: 475: }
  9116                           
  9117                           ; BSR set to: 2
  9118                           ;dhcp_client.c: 474: break;
  9119                           
  9120                           ;dhcp_client.c: 473: default:
  9121                           
  9122                           ; BSR set to: 2
  9123                           ;dhcp_client.c: 471: }
  9124                           ;dhcp_client.c: 472: break;
  9125  011652  0012               	return	
  9126  011654                     l1386:
  9127                           
  9128                           ; BSR set to: 2
  9129  011654  0101               	movlb	1	; () banked
  9130  011656  5118               	movf	DHCP_Handler@messageType& (0+255),w,b
  9131                           
  9132                           ; Switch size 1, requested type "space"
  9133                           ; Number of cases is 3, Range of values is 2 to 6
  9134                           ; switch strategies available:
  9135                           ; Name         Instructions Cycles
  9136                           ; simple_byte           10     6 (average)
  9137                           ;	Chosen strategy is simple_byte
  9138  011658  0A02               	xorlw	2	; case 2
  9139  01165A  B4D8               	btfsc	status,2,c
  9140  01165C  D767               	goto	l1387
  9141  01165E  0A07               	xorlw	7	; case 5
  9142  011660  B4D8               	btfsc	status,2,c
  9143  011662  D77C               	goto	l1391
  9144  011664  0A03               	xorlw	3	; case 6
  9145  011666  A4D8               	btfss	status,2,c
  9146                           
  9147                           ; BSR set to: 1
  9148                           
  9149                           ; BSR set to: 1
  9150                           ;dhcp_client.c: 476: }
  9151  011668  0012               	return	
  9152  01166A  D7DC               	goto	l1415
  9153  01166C                     __end_of_DHCP_Handler:
  9154                           	opt stack 0
  9155                           tosu	equ	0xFFF
  9156                           tosh	equ	0xFFE
  9157                           tosl	equ	0xFFD
  9158                           pclath	equ	0xFFA
  9159                           tblptru	equ	0xFF8
  9160                           tblptrh	equ	0xFF7
  9161                           tblptrl	equ	0xFF6
  9162                           tablat	equ	0xFF5
  9163                           prodh	equ	0xFF4
  9164                           prodl	equ	0xFF3
  9165                           intcon	equ	0xFF2
  9166                           indf0	equ	0xFEF
  9167                           postinc0	equ	0xFEE
  9168                           fsr0h	equ	0xFEA
  9169                           fsr0l	equ	0xFE9
  9170                           wreg	equ	0xFE8
  9171                           postdec1	equ	0xFE5
  9172                           plusw1	equ	0xFE3
  9173                           fsr1l	equ	0xFE1
  9174                           indf2	equ	0xFDF
  9175                           postinc2	equ	0xFDE
  9176                           postdec2	equ	0xFDD
  9177                           plusw2	equ	0xFDB
  9178                           fsr2h	equ	0xFDA
  9179                           fsr2l	equ	0xFD9
  9180                           status	equ	0xFD8
  9181                           
  9182 ;; *************** function _DNS_Handler *****************
  9183 ;; Defined at:
  9184 ;;		line 142 in file "mcc_generated_files/TCPIPLibrary/dns_client.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  length          2   80[BANK0 ] int 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;  x               1  113[BANK0 ] unsigned char 
  9189 ;;  dnsPtr          2  110[BANK0 ] PTR struct .
  9190 ;;		 -> dnsCache(128), 
  9191 ;;  dnsR          255    0[BANK1 ] unsigned char [255]
  9192 ;;  ttl             4   97[BANK0 ] unsigned long 
  9193 ;;  ipAddress       4   93[BANK0 ] unsigned long 
  9194 ;;  entryPointer    2  115[BANK0 ] PTR struct .
  9195 ;;		 -> dnsCache(128), 
  9196 ;;  dataLength      2  108[BANK0 ] unsigned int 
  9197 ;;  answer          2  106[BANK0 ] unsigned int 
  9198 ;;  type            2  103[BANK0 ] unsigned int 
  9199 ;;  v               2  101[BANK0 ] unsigned int 
  9200 ;;  authorityRR     2   91[BANK0 ] unsigned int 
  9201 ;;  lock            1  114[BANK0 ] unsigned char 
  9202 ;;  i               1  112[BANK0 ] unsigned char 
  9203 ;;  nameLen         1  105[BANK0 ] unsigned char 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  1    wreg      void 
  9206 ;; Registers used:
  9207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;      Locals:         0      26     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9216 ;;      Totals:         0      37     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9217 ;;Total ram usage:      292 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; Hardware stack levels required when called:    6
  9220 ;; This function calls:
  9221 ;;		_ETH_Read16
  9222 ;;		_ETH_Read32
  9223 ;;		_ETH_Read8
  9224 ;;		_strcmp
  9225 ;;		_time
  9226 ;; This function is called by:
  9227 ;;		_UDP_Receive
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text42
  9232  01191E                     __ptext42:
  9233                           	opt stack 0
  9234  01191E                     _DNS_Handler:
  9235                           	opt stack 20
  9236                           
  9237                           ;dns_client.c: 144: uint16_t v;
  9238                           ;dns_client.c: 145: unsigned char dnsR[255];
  9239                           ;dns_client.c: 146: uint16_t answer, authorityRR;
  9240                           ;dns_client.c: 147: uint32_t ipAddress;
  9241                           ;dns_client.c: 148: uint32_t ttl;
  9242                           ;dns_client.c: 149: uint16_t type, dataLength;
  9243                           ;dns_client.c: 151: dns_map_t *entryPointer;
  9244                           ;dns_client.c: 152: uint8_t i, nameLen,lock =0;
  9245                           
  9246                           ;incstack = 0
  9247  01191E  0E00               	movlw	0
  9248  011920  0100               	movlb	0	; () banked
  9249  011922  6FD2               	movwf	DNS_Handler@lock& (0+255),b
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;dns_client.c: 154: entryPointer = dnsCache;
  9253  011924  0E00               	movlw	low _dnsCache
  9254  011926  6FD3               	movwf	DNS_Handler@entryPointer& (0+255),b
  9255  011928  0E04               	movlw	high _dnsCache
  9256  01192A  6FD4               	movwf	(DNS_Handler@entryPointer+1)& (0+255),b
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;dns_client.c: 156: if(length > 12)
  9260  01192C  BFB1               	btfsc	(DNS_Handler@length+1)& (0+255),7,b
  9261  01192E  0012               	return	
  9262  011930  51B1               	movf	(DNS_Handler@length+1)& (0+255),w,b
  9263  011932  E104               	bnz	u7620
  9264  011934  0E0D               	movlw	13
  9265  011936  5DB0               	subwf	DNS_Handler@length& (0+255),w,b
  9266  011938  A0D8               	btfss	status,0,c
  9267  01193A  0012               	return	
  9268  01193C                     u7620:
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;dns_client.c: 157: {
  9272                           ;dns_client.c: 158: v = ETH_Read16();
  9273  01193C  EC39  F0A0         	call	_ETH_Read16	;wreg free
  9274  011940  C013  F0C5         	movff	?_ETH_Read16,DNS_Handler@v
  9275  011944  C014  F0C6         	movff	?_ETH_Read16+1,DNS_Handler@v+1
  9276                           
  9277                           ;dns_client.c: 159: if(v == dnsXidValue)
  9278  011948  0E39               	movlw	low _dnsXidValue
  9279  01194A  6EF6               	movwf	tblptrl,c
  9280  01194C                     	if	1	;There is more than 1 active tblptr byte
  9281  01194C  0EFF               	movlw	high _dnsXidValue
  9282  01194E  6EF7               	movwf	tblptrh,c
  9283  011950                     	endif
  9284  011950                     	if	1	;There are 3 active tblptr bytes
  9285  011950  0E00               	movlw	low (_dnsXidValue shr (0+16))
  9286  011952  6EF8               	movwf	tblptru,c
  9287  011954                     	endif
  9288  011954  0009               	tblrd		*+
  9289  011956  50F5               	movf	tablat,w,c
  9290  011958  0100               	movlb	0	; () banked
  9291  01195A  19C5               	xorwf	DNS_Handler@v& (0+255),w,b
  9292  01195C  E104               	bnz	u7631
  9293  01195E  0009               	tblrd		*+
  9294  011960  50F5               	movf	tablat,w,c
  9295  011962  19C6               	xorwf	(DNS_Handler@v+1)& (0+255),w,b
  9296  011964  A4D8               	btfss	status,2,c
  9297  011966                     u7631:
  9298  011966  D0A9               	goto	u7690
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;dns_client.c: 160: {
  9302                           ;dns_client.c: 161: ETH_Read32();
  9303  011968  EC97  F09E         	call	_ETH_Read32	;wreg free
  9304                           
  9305                           ;dns_client.c: 162: answer = ETH_Read16();
  9306  01196C  EC39  F0A0         	call	_ETH_Read16	;wreg free
  9307  011970  C013  F0CA         	movff	?_ETH_Read16,DNS_Handler@answer
  9308  011974  C014  F0CB         	movff	?_ETH_Read16+1,DNS_Handler@answer+1
  9309                           
  9310                           ;dns_client.c: 163: authorityRR = ETH_Read16();
  9311  011978  EC39  F0A0         	call	_ETH_Read16	;wreg free
  9312  01197C  C013  F0BB         	movff	?_ETH_Read16,DNS_Handler@authorityRR
  9313  011980  C014  F0BC         	movff	?_ETH_Read16+1,DNS_Handler@authorityRR+1
  9314                           
  9315                           ;dns_client.c: 164: ETH_Read16();
  9316  011984  EC39  F0A0         	call	_ETH_Read16	;wreg free
  9317                           
  9318                           ;dns_client.c: 165: length -= 12;
  9319  011988  0100               	movlb	0	; () banked
  9320  01198A  0EF4               	movlw	244
  9321  01198C  27B0               	addwf	DNS_Handler@length& (0+255),f,b
  9322  01198E  0EFF               	movlw	255
  9323  011990  23B1               	addwfc	(DNS_Handler@length+1)& (0+255),f,b
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;dns_client.c: 167: if(length > 0)
  9327  011992  BFB1               	btfsc	(DNS_Handler@length+1)& (0+255),7,b
  9328  011994  D092               	goto	u7690
  9329  011996  51B1               	movf	(DNS_Handler@length+1)& (0+255),w,b
  9330  011998  E120               	bnz	l8306
  9331  01199A  05B0               	decf	DNS_Handler@length& (0+255),w,b
  9332  01199C  B0D8               	btfsc	status,0,c
  9333  01199E  D01D               	goto	l1482
  9334  0119A0  D08C               	goto	u7690
  9335  0119A2                     
  9336                           ; BSR set to: 0
  9337                           ;dns_client.c: 172: {
  9338                           ;dns_client.c: 173: dnsR[lock] = ETH_Read8();
  9339                           
  9340                           ; BSR set to: 0
  9341  0119A2  51D2               	movf	DNS_Handler@lock& (0+255),w,b
  9342  0119A4  0D01               	mullw	1
  9343  0119A6  0E00               	movlw	low DNS_Handler@dnsR
  9344  0119A8  24F3               	addwf	prodl,w,c
  9345  0119AA  6ED9               	movwf	fsr2l,c
  9346  0119AC  0E01               	movlw	high DNS_Handler@dnsR
  9347  0119AE  20F4               	addwfc	prodh,w,c
  9348  0119B0  6EDA               	movwf	fsr2h,c
  9349  0119B2  ECAA  F0A1         	call	_ETH_Read8	;wreg free
  9350  0119B6  6EDF               	movwf	indf2,c
  9351                           
  9352                           ;dns_client.c: 174: lock++;
  9353  0119B8  0100               	movlb	0	; () banked
  9354  0119BA  2BD2               	incf	DNS_Handler@lock& (0+255),f,b
  9355  0119BC                     
  9356                           ; BSR set to: 0
  9357                           
  9358                           ; BSR set to: 0
  9359  0119BC  07C9               	decf	DNS_Handler@nameLen& (0+255),f,b
  9360  0119BE  29C9               	incf	DNS_Handler@nameLen& (0+255),w,b
  9361  0119C0  A4D8               	btfss	status,2,c
  9362  0119C2  D7EF               	goto	l1485
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;dns_client.c: 175: }
  9366                           ;dns_client.c: 176: dnsR[lock] = '.';
  9367                           
  9368                           ; BSR set to: 0
  9369  0119C4  51D2               	movf	DNS_Handler@lock& (0+255),w,b
  9370  0119C6  0D01               	mullw	1
  9371  0119C8  0E00               	movlw	low DNS_Handler@dnsR
  9372  0119CA  24F3               	addwf	prodl,w,c
  9373  0119CC  6ED9               	movwf	fsr2l,c
  9374  0119CE  0E01               	movlw	high DNS_Handler@dnsR
  9375  0119D0  20F4               	addwfc	prodh,w,c
  9376  0119D2  6EDA               	movwf	fsr2h,c
  9377  0119D4  0E2E               	movlw	46
  9378  0119D6  6EDF               	movwf	indf2,c
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;dns_client.c: 177: lock++;
  9382  0119D8  2BD2               	incf	DNS_Handler@lock& (0+255),f,b
  9383  0119DA                     l1482:
  9384  0119DA                     l8306:
  9385                           
  9386                           ; BSR set to: 0
  9387  0119DA  ECAA  F0A1         	call	_ETH_Read8	;wreg free
  9388  0119DE  0100               	movlb	0	; () banked
  9389  0119E0  6FC9               	movwf	DNS_Handler@nameLen& (0+255),b
  9390  0119E2  51C9               	movf	DNS_Handler@nameLen& (0+255),w,b
  9391  0119E4  A4D8               	btfss	status,2,c
  9392  0119E6  D7EA               	goto	l1484
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;dns_client.c: 178: }
  9396                           ;dns_client.c: 179: dnsR[lock-1] ='\0';
  9397                           
  9398                           ; BSR set to: 0
  9399  0119E8  0EFF               	movlw	255
  9400  0119EA  6FB2               	movwf	??_DNS_Handler& (0+255),b
  9401  0119EC  0EFF               	movlw	255
  9402  0119EE  6FB3               	movwf	(??_DNS_Handler+1)& (0+255),b
  9403  0119F0  51D2               	movf	DNS_Handler@lock& (0+255),w,b
  9404  0119F2  6FB4               	movwf	(??_DNS_Handler+2)& (0+255),b
  9405  0119F4  6BB5               	clrf	(??_DNS_Handler+3)& (0+255),b
  9406  0119F6  51B2               	movf	??_DNS_Handler& (0+255),w,b
  9407  0119F8  27B4               	addwf	(??_DNS_Handler+2)& (0+255),f,b
  9408  0119FA  51B3               	movf	(??_DNS_Handler+1)& (0+255),w,b
  9409  0119FC  23B5               	addwfc	(??_DNS_Handler+3)& (0+255),f,b
  9410  0119FE  0E00               	movlw	low DNS_Handler@dnsR
  9411  011A00  25B4               	addwf	(??_DNS_Handler+2)& (0+255),w,b
  9412  011A02  6ED9               	movwf	fsr2l,c
  9413  011A04  0E01               	movlw	high DNS_Handler@dnsR
  9414  011A06  21B5               	addwfc	(??_DNS_Handler+3)& (0+255),w,b
  9415  011A08  6EDA               	movwf	fsr2h,c
  9416  011A0A  0E00               	movlw	0
  9417  011A0C  6EDF               	movwf	indf2,c
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;dns_client.c: 181: ETH_Read32();
  9421  011A0E  EC97  F09E         	call	_ETH_Read32	;wreg free
  9422                           
  9423                           ;dns_client.c: 182: length -= lock + 5;
  9424  011A12  0100               	movlb	0	; () banked
  9425  011A14  51D2               	movf	DNS_Handler@lock& (0+255),w,b
  9426  011A16  6FB2               	movwf	??_DNS_Handler& (0+255),b
  9427  011A18  6BB3               	clrf	(??_DNS_Handler+1)& (0+255),b
  9428  011A1A  0E05               	movlw	5
  9429  011A1C  27B2               	addwf	??_DNS_Handler& (0+255),f,b
  9430  011A1E  0E00               	movlw	0
  9431  011A20  23B3               	addwfc	(??_DNS_Handler+1)& (0+255),f,b
  9432  011A22  51B2               	movf	??_DNS_Handler& (0+255),w,b
  9433  011A24  5FB0               	subwf	DNS_Handler@length& (0+255),f,b
  9434  011A26  51B3               	movf	(??_DNS_Handler+1)& (0+255),w,b
  9435  011A28  5BB1               	subwfb	(DNS_Handler@length+1)& (0+255),f,b
  9436                           
  9437                           ;dns_client.c: 184: while(answer)
  9438  011A2A  D043               	goto	l1488
  9439  011A2C                     
  9440                           ; BSR set to: 0
  9441                           ;dns_client.c: 185: {
  9442                           ;dns_client.c: 186: ETH_Read16();
  9443                           
  9444                           ; BSR set to: 0
  9445  011A2C  EC39  F0A0         	call	_ETH_Read16	;wreg free
  9446                           
  9447                           ;dns_client.c: 187: type = ETH_Read16();
  9448  011A30  EC39  F0A0         	call	_ETH_Read16	;wreg free
  9449  011A34  C013  F0C7         	movff	?_ETH_Read16,DNS_Handler@type
  9450  011A38  C014  F0C8         	movff	?_ETH_Read16+1,DNS_Handler@type+1
  9451                           
  9452                           ;dns_client.c: 188: ETH_Read16();
  9453  011A3C  EC39  F0A0         	call	_ETH_Read16	;wreg free
  9454                           
  9455                           ;dns_client.c: 189: ttl = ETH_Read32();
  9456  011A40  EC97  F09E         	call	_ETH_Read32	;wreg free
  9457  011A44  C013  F0C1         	movff	?_ETH_Read32,DNS_Handler@ttl
  9458  011A48  C014  F0C2         	movff	?_ETH_Read32+1,DNS_Handler@ttl+1
  9459  011A4C  C015  F0C3         	movff	?_ETH_Read32+2,DNS_Handler@ttl+2
  9460  011A50  C016  F0C4         	movff	?_ETH_Read32+3,DNS_Handler@ttl+3
  9461                           
  9462                           ;dns_client.c: 190: dataLength = ETH_Read16();
  9463  011A54  EC39  F0A0         	call	_ETH_Read16	;wreg free
  9464  011A58  C013  F0CC         	movff	?_ETH_Read16,DNS_Handler@dataLength
  9465  011A5C  C014  F0CD         	movff	?_ETH_Read16+1,DNS_Handler@dataLength+1
  9466                           
  9467                           ;dns_client.c: 191: if(type == 0x0001)
  9468  011A60  0100               	movlb	0	; () banked
  9469  011A62  05C7               	decf	DNS_Handler@type& (0+255),w,b
  9470  011A64  11C8               	iorwf	(DNS_Handler@type+1)& (0+255),w,b
  9471  011A66  A4D8               	btfss	status,2,c
  9472  011A68  D00D               	goto	l1492
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;dns_client.c: 192: {
  9476                           ;dns_client.c: 193: ipAddress = ETH_Read32();
  9477  011A6A  EC97  F09E         	call	_ETH_Read32	;wreg free
  9478  011A6E  C013  F0BD         	movff	?_ETH_Read32,DNS_Handler@ipAddress
  9479  011A72  C014  F0BE         	movff	?_ETH_Read32+1,DNS_Handler@ipAddress+1
  9480  011A76  C015  F0BF         	movff	?_ETH_Read32+2,DNS_Handler@ipAddress+2
  9481  011A7A  C016  F0C0         	movff	?_ETH_Read32+3,DNS_Handler@ipAddress+3
  9482                           
  9483                           ;dns_client.c: 194: }
  9484  011A7E  D015               	goto	l1491
  9485  011A80                     l8320:
  9486  011A80  ECAA  F0A1         	call	_ETH_Read8	;wreg free
  9487  011A84                     l1492:
  9488  011A84  0100               	movlb	0	; () banked
  9489  011A86  07CC               	decf	DNS_Handler@dataLength& (0+255),f,b
  9490  011A88  A0D8               	btfss	status,0,c
  9491  011A8A  07CD               	decf	(DNS_Handler@dataLength+1)& (0+255),f,b
  9492  011A8C  29CC               	incf	DNS_Handler@dataLength& (0+255),w,b
  9493  011A8E  E1F8               	bnz	l8320
  9494  011A90  29CD               	incf	(DNS_Handler@dataLength+1)& (0+255),w,b
  9495  011A92  A4D8               	btfss	status,2,c
  9496  011A94  D7F5               	goto	l1493
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;dns_client.c: 198: length -=14+dataLength;
  9500                           
  9501                           ; BSR set to: 0
  9502  011A96  0E0E               	movlw	14
  9503  011A98  25CC               	addwf	DNS_Handler@dataLength& (0+255),w,b
  9504  011A9A  6FB2               	movwf	??_DNS_Handler& (0+255),b
  9505  011A9C  0E00               	movlw	0
  9506  011A9E  21CD               	addwfc	(DNS_Handler@dataLength+1)& (0+255),w,b
  9507  011AA0  6FB3               	movwf	(??_DNS_Handler+1)& (0+255),b
  9508  011AA2  51B2               	movf	??_DNS_Handler& (0+255),w,b
  9509  011AA4  5FB0               	subwf	DNS_Handler@length& (0+255),f,b
  9510  011AA6  51B3               	movf	(??_DNS_Handler+1)& (0+255),w,b
  9511  011AA8  5BB1               	subwfb	(DNS_Handler@length+1)& (0+255),f,b
  9512  011AAA                     l1491:
  9513                           
  9514                           ;dns_client.c: 199: }
  9515                           ;dns_client.c: 205: answer--;
  9516                           
  9517                           ; BSR set to: 0
  9518  011AAA  0100               	movlb	0	; () banked
  9519  011AAC  07CA               	decf	DNS_Handler@answer& (0+255),f,b
  9520  011AAE  A0D8               	btfss	status,0,c
  9521  011AB0  07CB               	decf	(DNS_Handler@answer+1)& (0+255),f,b
  9522  011AB2                     l1488:
  9523                           
  9524                           ; BSR set to: 0
  9525                           
  9526                           ; BSR set to: 0
  9527  011AB2  51CA               	movf	DNS_Handler@answer& (0+255),w,b
  9528  011AB4  11CB               	iorwf	(DNS_Handler@answer+1)& (0+255),w,b
  9529  011AB6  A4D8               	btfss	status,2,c
  9530  011AB8  D7B9               	goto	l1489
  9531  011ABA                     u7690:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;dns_client.c: 206: }
  9535                           ;dns_client.c: 207: }
  9536                           ;dns_client.c: 208: }
  9537                           ;dns_client.c: 210: dns_map_t *dnsPtr = dnsCache;
  9538                           
  9539                           ; BSR set to: 0
  9540                           
  9541                           ; BSR set to: 0
  9542                           
  9543                           ; BSR set to: 0
  9544  011ABA  0E00               	movlw	low _dnsCache
  9545  011ABC  6FCE               	movwf	DNS_Handler@dnsPtr& (0+255),b
  9546  011ABE  0E04               	movlw	high _dnsCache
  9547  011AC0  6FCF               	movwf	(DNS_Handler@dnsPtr+1)& (0+255),b
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;dns_client.c: 211: for(uint8_t x=8; x !=0; x--)
  9551  011AC2  0E08               	movlw	8
  9552  011AC4  6FD1               	movwf	DNS_Handler@x& (0+255),b
  9553  011AC6                     l8334:
  9554                           
  9555                           ; BSR set to: 0
  9556  011AC6  51D1               	movf	DNS_Handler@x& (0+255),w,b
  9557  011AC8  B4D8               	btfsc	status,2,c
  9558  011ACA  D024               	goto	u7720
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;dns_client.c: 212: {
  9562                           ;dns_client.c: 213: if(entryPointer->birthSecond < dnsPtr->birthSecond)
  9563                           
  9564                           ; BSR set to: 0
  9565                           
  9566                           ; BSR set to: 0
  9567  011ACC  EE20 F00C          	lfsr	2,12
  9568  011AD0  51CE               	movf	DNS_Handler@dnsPtr& (0+255),w,b
  9569  011AD2  26D9               	addwf	fsr2l,f,c
  9570  011AD4  51CF               	movf	(DNS_Handler@dnsPtr+1)& (0+255),w,b
  9571  011AD6  22DA               	addwfc	fsr2h,f,c
  9572  011AD8  EE10 F00C          	lfsr	1,12
  9573  011ADC  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9574  011ADE  26E1               	addwf	fsr1l,f,c
  9575  011AE0  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9576  011AE2  22E2               	addwfc	fsr1h,f,c
  9577  011AE4  50DE               	movf	postinc2,w,c
  9578  011AE6  5CE6               	subwf	postinc1,w,c
  9579  011AE8  50DE               	movf	postinc2,w,c
  9580  011AEA  58E6               	subwfb	postinc1,w,c
  9581  011AEC  50DE               	movf	postinc2,w,c
  9582  011AEE  58E6               	subwfb	postinc1,w,c
  9583  011AF0  50E6               	movf	postinc1,w,c
  9584  011AF2  0A80               	xorlw	128
  9585  011AF4  6FBA               	movwf	(??_DNS_Handler+8)& (0+255),b
  9586  011AF6  50DE               	movf	postinc2,w,c
  9587  011AF8  0A80               	xorlw	128
  9588  011AFA  59BA               	subwfb	(??_DNS_Handler+8)& (0+255),w,b
  9589  011AFC  B0D8               	btfsc	status,0,c
  9590  011AFE  D004               	goto	l1498
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;dns_client.c: 214: {
  9594                           ;dns_client.c: 215: entryPointer = dnsPtr;
  9595  011B00  C0CE  F0D3         	movff	DNS_Handler@dnsPtr,DNS_Handler@entryPointer
  9596  011B04  C0CF  F0D4         	movff	DNS_Handler@dnsPtr+1,DNS_Handler@entryPointer+1
  9597  011B08                     l1498:
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;dns_client.c: 216: }
  9601                           ;dns_client.c: 218: dnsPtr++;
  9602  011B08  0E10               	movlw	16
  9603  011B0A  27CE               	addwf	DNS_Handler@dnsPtr& (0+255),f,b
  9604  011B0C  0E00               	movlw	0
  9605  011B0E  23CF               	addwfc	(DNS_Handler@dnsPtr+1)& (0+255),f,b
  9606                           
  9607                           ; BSR set to: 0
  9608  011B10  07D1               	decf	DNS_Handler@x& (0+255),f,b
  9609  011B12  D7D9               	goto	l8334
  9610  011B14                     u7720:
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;dns_client.c: 219: }
  9614                           ;dns_client.c: 220: for(i = 0; i < (sizeof(dnsCache) / sizeof(*(dnsCache)));i++)
  9615                           
  9616                           ; BSR set to: 0
  9617  011B14  0E00               	movlw	0
  9618  011B16  6FD0               	movwf	DNS_Handler@i& (0+255),b
  9619  011B18                     l8348:
  9620                           
  9621                           ; BSR set to: 0
  9622  011B18  0E07               	movlw	7
  9623  011B1A  65D0               	cpfsgt	DNS_Handler@i& (0+255),b
  9624  011B1C  D001               	goto	l1499
  9625  011B1E  0012               	return	
  9626  011B20                     l1499:
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;dns_client.c: 221: {
  9630                           ;dns_client.c: 222: if(strcmp(entryPointer->dnsName, dnsR) == 0)
  9631                           
  9632                           ; BSR set to: 0
  9633  011B20  C0D3  FFD9         	movff	DNS_Handler@entryPointer,fsr2l
  9634  011B24  C0D4  FFDA         	movff	DNS_Handler@entryPointer+1,fsr2h
  9635  011B28  CFDE F013          	movff	postinc2,strcmp@s1
  9636  011B2C  CFDD F014          	movff	postdec2,strcmp@s1+1
  9637  011B30  0E00               	movlw	low DNS_Handler@dnsR
  9638  011B32  6E15               	movwf	strcmp@s2,c
  9639  011B34  0E01               	movlw	high DNS_Handler@dnsR
  9640  011B36  6E16               	movwf	strcmp@s2+1,c
  9641  011B38  ECB4  F09F         	call	_strcmp	;wreg free
  9642  011B3C  5013               	movf	?_strcmp,w,c
  9643  011B3E  1014               	iorwf	?_strcmp+1,w,c
  9644  011B40  A4D8               	btfss	status,2,c
  9645  011B42  D03A               	goto	l1501
  9646                           
  9647                           ;dns_client.c: 223: {
  9648                           ;dns_client.c: 226: entryPointer->birthSecond = time(0);
  9649  011B44  0E00               	movlw	0
  9650  011B46  6E13               	movwf	time@t,c
  9651  011B48  0E00               	movlw	0
  9652  011B4A  6E14               	movwf	time@t+1,c
  9653  011B4C  ECC3  F09E         	call	_time	;wreg free
  9654  011B50  0100               	movlb	0	; () banked
  9655  011B52  EE20 F00C          	lfsr	2,12
  9656  011B56  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9657  011B58  26D9               	addwf	fsr2l,f,c
  9658  011B5A  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9659  011B5C  22DA               	addwfc	fsr2h,f,c
  9660  011B5E  C013  FFDE         	movff	?_time,postinc2
  9661  011B62  C014  FFDE         	movff	?_time+1,postinc2
  9662  011B66  C015  FFDE         	movff	?_time+2,postinc2
  9663  011B6A  C016  FFDE         	movff	?_time+3,postinc2
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;dns_client.c: 227: entryPointer->ipAddress = ipAddress;
  9667  011B6E  EE20 F003          	lfsr	2,3
  9668  011B72  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9669  011B74  26D9               	addwf	fsr2l,f,c
  9670  011B76  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9671  011B78  22DA               	addwfc	fsr2h,f,c
  9672  011B7A  C0BD  FFDE         	movff	DNS_Handler@ipAddress,postinc2
  9673  011B7E  C0BE  FFDE         	movff	DNS_Handler@ipAddress+1,postinc2
  9674  011B82  C0BF  FFDE         	movff	DNS_Handler@ipAddress+2,postinc2
  9675  011B86  C0C0  FFDE         	movff	DNS_Handler@ipAddress+3,postinc2
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;dns_client.c: 228: entryPointer->ttl = ttl;
  9679  011B8A  EE20 F007          	lfsr	2,7
  9680  011B8E  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9681  011B90  26D9               	addwf	fsr2l,f,c
  9682  011B92  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9683  011B94  22DA               	addwfc	fsr2h,f,c
  9684  011B96  C0C1  FFDE         	movff	DNS_Handler@ttl,postinc2
  9685  011B9A  C0C2  FFDE         	movff	DNS_Handler@ttl+1,postinc2
  9686  011B9E  C0C3  FFDE         	movff	DNS_Handler@ttl+2,postinc2
  9687  011BA2  C0C4  FFDE         	movff	DNS_Handler@ttl+3,postinc2
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;dns_client.c: 229: entryPointer->isValid = 1;
  9691  011BA6  EE20 F00B          	lfsr	2,11
  9692  011BAA  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9693  011BAC  26D9               	addwf	fsr2l,f,c
  9694  011BAE  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9695  011BB0  22DA               	addwfc	fsr2h,f,c
  9696  011BB2  0E01               	movlw	1
  9697  011BB4  6EDF               	movwf	indf2,c
  9698                           
  9699                           ;dns_client.c: 230: break;
  9700  011BB6  0012               	return	
  9701  011BB8                     l1501:
  9702                           
  9703                           ;dns_client.c: 231: }
  9704                           ;dns_client.c: 232: entryPointer ++;
  9705                           
  9706                           ; BSR set to: 0
  9707  011BB8  0E10               	movlw	16
  9708  011BBA  0100               	movlb	0	; () banked
  9709  011BBC  27D3               	addwf	DNS_Handler@entryPointer& (0+255),f,b
  9710  011BBE  0E00               	movlw	0
  9711  011BC0  23D4               	addwfc	(DNS_Handler@entryPointer+1)& (0+255),f,b
  9712                           
  9713                           ; BSR set to: 0
  9714  011BC2  2BD0               	incf	DNS_Handler@i& (0+255),f,b
  9715  011BC4  D7A9               	goto	l8348
  9716  011BC6                     __end_of_DNS_Handler:
  9717                           	opt stack 0
  9718                           tosu	equ	0xFFF
  9719                           tosh	equ	0xFFE
  9720                           tosl	equ	0xFFD
  9721                           pclath	equ	0xFFA
  9722                           tblptru	equ	0xFF8
  9723                           tblptrh	equ	0xFF7
  9724                           tblptrl	equ	0xFF6
  9725                           tablat	equ	0xFF5
  9726                           prodh	equ	0xFF4
  9727                           prodl	equ	0xFF3
  9728                           intcon	equ	0xFF2
  9729                           indf0	equ	0xFEF
  9730                           postinc0	equ	0xFEE
  9731                           fsr0h	equ	0xFEA
  9732                           fsr0l	equ	0xFE9
  9733                           wreg	equ	0xFE8
  9734                           postinc1	equ	0xFE6
  9735                           postdec1	equ	0xFE5
  9736                           plusw1	equ	0xFE3
  9737                           fsr1h	equ	0xFE2
  9738                           fsr1l	equ	0xFE1
  9739                           indf2	equ	0xFDF
  9740                           postinc2	equ	0xFDE
  9741                           postdec2	equ	0xFDD
  9742                           plusw2	equ	0xFDB
  9743                           fsr2h	equ	0xFDA
  9744                           fsr2l	equ	0xFD9
  9745                           status	equ	0xFD8
  9746                           
  9747 ;; *************** function _strcmp *****************
  9748 ;; Defined at:
  9749 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\strcmp.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  s1              2   18[COMRAM] PTR const unsigned char 
  9752 ;;  s2              2   20[COMRAM] PTR const unsigned char 
  9753 ;;		 -> DNS_Handler@dnsR(255), 
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;  r               1   23[COMRAM] char 
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  2   18[COMRAM] int 
  9758 ;; Registers used:
  9759 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;Total ram usage:        6 bytes
  9770 ;; Hardware stack levels used:    1
  9771 ;; Hardware stack levels required when called:    4
  9772 ;; This function calls:
  9773 ;;		Nothing
  9774 ;; This function is called by:
  9775 ;;		_DNS_Handler
  9776 ;;		_DNS_Lookup
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text43
  9781  013F68                     __ptext43:
  9782                           	opt stack 0
  9783  013F68                     _strcmp:
  9784                           	opt stack 21
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;incstack = 0
  9788  013F68  D004               	goto	l2214
  9789  013F6A  4A13               	infsnz	strcmp@s1,f,c
  9790  013F6C  2A14               	incf	strcmp@s1+1,f,c
  9791  013F6E  4A15               	infsnz	strcmp@s2,f,c
  9792  013F70  2A16               	incf	strcmp@s2+1,f,c
  9793  013F72                     l2214:
  9794  013F72  C013  FFD9         	movff	strcmp@s1,fsr2l
  9795  013F76  C014  FFDA         	movff	strcmp@s1+1,fsr2h
  9796  013F7A  50DF               	movf	indf2,w,c
  9797  013F7C  6E17               	movwf	??_strcmp& (0+255),c
  9798  013F7E  C015  FFD9         	movff	strcmp@s2,fsr2l
  9799  013F82  C016  FFDA         	movff	strcmp@s2+1,fsr2h
  9800  013F86  50DF               	movf	indf2,w,c
  9801  013F88  0800               	sublw	0
  9802  013F8A  2417               	addwf	??_strcmp,w,c
  9803  013F8C  6E18               	movwf	strcmp@r,c
  9804  013F8E  5018               	movf	strcmp@r,w,c
  9805  013F90  A4D8               	btfss	status,2,c
  9806  013F92  D007               	goto	u7160
  9807  013F94  C013  FFD9         	movff	strcmp@s1,fsr2l
  9808  013F98  C014  FFDA         	movff	strcmp@s1+1,fsr2h
  9809  013F9C  50DF               	movf	indf2,w,c
  9810  013F9E  A4D8               	btfss	status,2,c
  9811  013FA0  D7E4               	goto	l2215
  9812  013FA2                     u7160:
  9813  013FA2  5018               	movf	strcmp@r,w,c
  9814  013FA4  6E13               	movwf	?_strcmp,c
  9815  013FA6  6A14               	clrf	?_strcmp+1,c
  9816  013FA8  BE13               	btfsc	?_strcmp,7,c
  9817  013FAA  0614               	decf	?_strcmp+1,f,c
  9818  013FAC  0012               	return	
  9819  013FAE                     __end_of_strcmp:
  9820                           	opt stack 0
  9821                           tosu	equ	0xFFF
  9822                           tosh	equ	0xFFE
  9823                           tosl	equ	0xFFD
  9824                           pclath	equ	0xFFA
  9825                           tblptru	equ	0xFF8
  9826                           tblptrh	equ	0xFF7
  9827                           tblptrl	equ	0xFF6
  9828                           tablat	equ	0xFF5
  9829                           prodh	equ	0xFF4
  9830                           prodl	equ	0xFF3
  9831                           intcon	equ	0xFF2
  9832                           indf0	equ	0xFEF
  9833                           postinc0	equ	0xFEE
  9834                           fsr0h	equ	0xFEA
  9835                           fsr0l	equ	0xFE9
  9836                           wreg	equ	0xFE8
  9837                           postinc1	equ	0xFE6
  9838                           postdec1	equ	0xFE5
  9839                           plusw1	equ	0xFE3
  9840                           fsr1h	equ	0xFE2
  9841                           fsr1l	equ	0xFE1
  9842                           indf2	equ	0xFDF
  9843                           postinc2	equ	0xFDE
  9844                           postdec2	equ	0xFDD
  9845                           plusw2	equ	0xFDB
  9846                           fsr2h	equ	0xFDA
  9847                           fsr2l	equ	0xFD9
  9848                           status	equ	0xFD8
  9849                           
  9850 ;; *************** function _sendDHCPDECLINE *****************
  9851 ;; Defined at:
  9852 ;;		line 136 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;		None
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;		None
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      unsigned char 
  9859 ;; Registers used:
  9860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9870 ;;Total ram usage:        0 bytes
  9871 ;; Hardware stack levels used:    1
  9872 ;; Hardware stack levels required when called:   11
  9873 ;; This function calls:
  9874 ;;		_sendRequest
  9875 ;; This function is called by:
  9876 ;;		_DHCP_Handler
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text44
  9881  0145C8                     __ptext44:
  9882                           	opt stack 0
  9883  0145C8                     _sendDHCPDECLINE:
  9884                           	opt stack 14
  9885                           
  9886                           ;dhcp_client.c: 138: return sendRequest(DHCP_DECLINE);
  9887                           ;	Return value of _sendDHCPDECLINE is never used
  9888                           
  9889                           ;incstack = 0
  9890  0145C8  0E04               	movlw	4
  9891  0145CA  EC64  F091         	call	_sendRequest
  9892  0145CE  0012               	return	
  9893  0145D0                     __end_of_sendDHCPDECLINE:
  9894                           	opt stack 0
  9895                           tosu	equ	0xFFF
  9896                           tosh	equ	0xFFE
  9897                           tosl	equ	0xFFD
  9898                           pclath	equ	0xFFA
  9899                           tblptru	equ	0xFF8
  9900                           tblptrh	equ	0xFF7
  9901                           tblptrl	equ	0xFF6
  9902                           tablat	equ	0xFF5
  9903                           prodh	equ	0xFF4
  9904                           prodl	equ	0xFF3
  9905                           intcon	equ	0xFF2
  9906                           indf0	equ	0xFEF
  9907                           postinc0	equ	0xFEE
  9908                           fsr0h	equ	0xFEA
  9909                           fsr0l	equ	0xFE9
  9910                           wreg	equ	0xFE8
  9911                           postinc1	equ	0xFE6
  9912                           postdec1	equ	0xFE5
  9913                           plusw1	equ	0xFE3
  9914                           fsr1h	equ	0xFE2
  9915                           fsr1l	equ	0xFE1
  9916                           indf2	equ	0xFDF
  9917                           postinc2	equ	0xFDE
  9918                           postdec2	equ	0xFDD
  9919                           plusw2	equ	0xFDB
  9920                           fsr2h	equ	0xFDA
  9921                           fsr2l	equ	0xFD9
  9922                           status	equ	0xFD8
  9923                           
  9924 ;; *************** function _memcmp *****************
  9925 ;; Defined at:
  9926 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\memcmp.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  s1              2   18[COMRAM] PTR const void 
  9929 ;;		 -> DHCP_Handler@chaddr(16), 
  9930 ;;  s2              2   20[COMRAM] PTR const void 
  9931 ;;		 -> broadcastMAC(6), hostMacAddress(6), 
  9932 ;;  n               2   22[COMRAM] unsigned int 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  2   18[COMRAM] int 
  9937 ;; Registers used:
  9938 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9944 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9946 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9947 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;Total ram usage:        9 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; Hardware stack levels required when called:    4
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_DHCP_Handler
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text45
  9959  0134FA                     __ptext45:
  9960                           	opt stack 0
  9961  0134FA                     _memcmp:
  9962                           	opt stack 21
  9963                           
  9964                           ;incstack = 0
  9965  0134FA  D042               	goto	l2056
  9966  0134FC                     l7950:
  9967  0134FC  C013  FFD9         	movff	memcmp@s1,fsr2l
  9968  013500  C014  FFDA         	movff	memcmp@s1+1,fsr2h
  9969  013504  50DF               	movf	indf2,w,c
  9970  013506  6E19               	movwf	??_memcmp& (0+255),c
  9971  013508  C015  FFF6         	movff	memcmp@s2,tblptrl
  9972  01350C  C016  FFF7         	movff	memcmp@s2+1,tblptrh
  9973  013510  0E00               	movlw	low (__mediumconst shr (0+16))
  9974  013512  6EF8               	movwf	tblptru,c
  9975  013514  0E0F               	movlw	(high __ramtop+-1)
  9976  013516  64F7               	cpfsgt	tblptrh,c
  9977  013518  D003               	bra	u7117
  9978  01351A  0008               	tblrd		*
  9979  01351C  50F5               	movf	tablat,w,c
  9980  01351E  D005               	bra	u7110
  9981  013520                     u7117:
  9982  013520  CFF6 FFE9          	movff	tblptrl,fsr0l
  9983  013524  CFF7 FFEA          	movff	tblptrh,fsr0h
  9984  013528  50EF               	movf	indf0,w,c
  9985  01352A                     u7110:
  9986  01352A  1819               	xorwf	??_memcmp,w,c
  9987  01352C  B4D8               	btfsc	status,2,c
  9988  01352E  D024               	goto	l2058
  9989  013530  C015  FFF6         	movff	memcmp@s2,tblptrl
  9990  013534  C016  FFF7         	movff	memcmp@s2+1,tblptrh
  9991  013538  0E00               	movlw	low (__mediumconst shr (0+16))
  9992  01353A  6EF8               	movwf	tblptru,c
  9993  01353C  0E0F               	movlw	(high __ramtop+-1)
  9994  01353E  64F7               	cpfsgt	tblptrh,c
  9995  013540  D003               	bra	u7137
  9996  013542  0008               	tblrd		*
  9997  013544  50F5               	movf	tablat,w,c
  9998  013546  D005               	bra	u7130
  9999  013548                     u7137:
 10000  013548  CFF6 FFE9          	movff	tblptrl,fsr0l
 10001  01354C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10002  013550  50EF               	movf	indf0,w,c
 10003  013552                     u7130:
 10004  013552  6E19               	movwf	??_memcmp& (0+255),c
 10005  013554  6A1A               	clrf	(??_memcmp+1)& (0+255),c
 10006  013556  1E19               	comf	??_memcmp,f,c
 10007  013558  1E1A               	comf	??_memcmp+1,f,c
 10008  01355A  4A19               	infsnz	??_memcmp,f,c
 10009  01355C  2A1A               	incf	??_memcmp+1,f,c
 10010  01355E  C013  FFD9         	movff	memcmp@s1,fsr2l
 10011  013562  C014  FFDA         	movff	memcmp@s1+1,fsr2h
 10012  013566  50DF               	movf	indf2,w,c
 10013  013568  6E1B               	movwf	(??_memcmp+2)& (0+255),c
 10014  01356A  501B               	movf	??_memcmp+2,w,c
 10015  01356C  2419               	addwf	??_memcmp,w,c
 10016  01356E  6E13               	movwf	?_memcmp,c
 10017  013570  0E00               	movlw	0
 10018  013572  201A               	addwfc	??_memcmp+1,w,c
 10019  013574  6E14               	movwf	?_memcmp+1,c
 10020  013576  0012               	return	
 10021  013578                     l2058:
 10022  013578  4A13               	infsnz	memcmp@s1,f,c
 10023  01357A  2A14               	incf	memcmp@s1+1,f,c
 10024  01357C  4A15               	infsnz	memcmp@s2,f,c
 10025  01357E  2A16               	incf	memcmp@s2+1,f,c
 10026  013580                     l2056:
 10027  013580  0617               	decf	memcmp@n,f,c
 10028  013582  A0D8               	btfss	status,0,c
 10029  013584  0618               	decf	memcmp@n+1,f,c
 10030  013586  2817               	incf	memcmp@n,w,c
 10031  013588  E1B9               	bnz	l7950
 10032  01358A  2818               	incf	memcmp@n+1,w,c
 10033  01358C  A4D8               	btfss	status,2,c
 10034  01358E  D7B6               	goto	l2057
 10035  013590  0E00               	movlw	0
 10036  013592  6E14               	movwf	?_memcmp+1,c
 10037  013594  0E00               	movlw	0
 10038  013596  6E13               	movwf	?_memcmp,c
 10039  013598  0012               	return	
 10040  01359A                     __end_of_memcmp:
 10041                           	opt stack 0
 10042                           tosu	equ	0xFFF
 10043                           tosh	equ	0xFFE
 10044                           tosl	equ	0xFFD
 10045                           pclath	equ	0xFFA
 10046                           tblptru	equ	0xFF8
 10047                           tblptrh	equ	0xFF7
 10048                           tblptrl	equ	0xFF6
 10049                           tablat	equ	0xFF5
 10050                           prodh	equ	0xFF4
 10051                           prodl	equ	0xFF3
 10052                           intcon	equ	0xFF2
 10053                           indf0	equ	0xFEF
 10054                           postinc0	equ	0xFEE
 10055                           fsr0h	equ	0xFEA
 10056                           fsr0l	equ	0xFE9
 10057                           wreg	equ	0xFE8
 10058                           postinc1	equ	0xFE6
 10059                           postdec1	equ	0xFE5
 10060                           plusw1	equ	0xFE3
 10061                           fsr1h	equ	0xFE2
 10062                           fsr1l	equ	0xFE1
 10063                           indf2	equ	0xFDF
 10064                           postinc2	equ	0xFDE
 10065                           postdec2	equ	0xFDD
 10066                           plusw2	equ	0xFDB
 10067                           fsr2h	equ	0xFDA
 10068                           fsr2l	equ	0xFD9
 10069                           status	equ	0xFD8
 10070                           
 10071 ;; *************** function _ETH_Read8 *****************
 10072 ;; Defined at:
 10073 ;;		line 433 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;		None
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;  ret             1   18[COMRAM] unsigned char 
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      unsigned char 
 10080 ;; Registers used:
 10081 ;;		wreg, status,2, status,0, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10091 ;;Total ram usage:        1 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; Hardware stack levels required when called:    5
 10094 ;; This function calls:
 10095 ;;		_ETH_EdataRead
 10096 ;; This function is called by:
 10097 ;;		_DHCP_Handler
 10098 ;;		_DNS_Handler
 10099 ;;		_udp_test
 10100 ;; This function uses a non-reentrant model
 10101 ;;
 10102                           
 10103                           	psect	text46
 10104  014354                     __ptext46:
 10105                           	opt stack 0
 10106  014354                     _ETH_Read8:
 10107                           	opt stack 20
 10108                           
 10109                           ;ETHxxJ6x_driver.c: 435: uint8_t ret = 0;
 10110                           
 10111                           ;incstack = 0
 10112  014354  0E00               	movlw	0
 10113  014356  6E13               	movwf	ETH_Read8@ret,c
 10114                           
 10115                           ;ETHxxJ6x_driver.c: 436: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 10116  014358  0102               	movlb	2	; () banked
 10117  01435A  513A               	movf	_rxPacketStatusVector& (0+255),w,b
 10118  01435C  113B               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 10119  01435E  B4D8               	btfsc	status,2,c
 10120  014360  D009               	goto	l552
 10121                           
 10122                           ; BSR set to: 2
 10123                           ;ETHxxJ6x_driver.c: 437: {
 10124                           ;ETHxxJ6x_driver.c: 438: ret = ETH_EdataRead();
 10125  014362  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 10126  014366  6E13               	movwf	ETH_Read8@ret,c
 10127                           
 10128                           ;ETHxxJ6x_driver.c: 439: rxPacketStatusVector.byteCount -= sizeof(ret);
 10129  014368  0102               	movlb	2	; () banked
 10130  01436A  073A               	decf	_rxPacketStatusVector& (0+255),f,b
 10131  01436C  A0D8               	btfss	status,0,c
 10132  01436E  073B               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
 10133                           
 10134                           ; BSR set to: 2
 10135                           ;ETHxxJ6x_driver.c: 440: ethData.error = 0;
 10136  014370  9124               	bcf	_ethData& (0+255),0,b	;volatile
 10137                           
 10138                           ;ETHxxJ6x_driver.c: 441: }
 10139  014372  D001               	goto	l553
 10140  014374                     l552:
 10141                           
 10142                           ; BSR set to: 2
 10143                           ;ETHxxJ6x_driver.c: 442: else
 10144                           ;ETHxxJ6x_driver.c: 443: {
 10145                           ;ETHxxJ6x_driver.c: 444: ethData.error = 1;
 10146  014374  8124               	bsf	_ethData& (0+255),0,b	;volatile
 10147  014376                     l553:
 10148                           
 10149                           ; BSR set to: 2
 10150                           ;ETHxxJ6x_driver.c: 445: }
 10151                           ;ETHxxJ6x_driver.c: 446: return ret;
 10152                           
 10153                           ; BSR set to: 2
 10154  014376  5013               	movf	ETH_Read8@ret,w,c
 10155  014378  0012               	return	
 10156  01437A                     __end_of_ETH_Read8:
 10157                           	opt stack 0
 10158                           tosu	equ	0xFFF
 10159                           tosh	equ	0xFFE
 10160                           tosl	equ	0xFFD
 10161                           pclath	equ	0xFFA
 10162                           tblptru	equ	0xFF8
 10163                           tblptrh	equ	0xFF7
 10164                           tblptrl	equ	0xFF6
 10165                           tablat	equ	0xFF5
 10166                           prodh	equ	0xFF4
 10167                           prodl	equ	0xFF3
 10168                           intcon	equ	0xFF2
 10169                           indf0	equ	0xFEF
 10170                           postinc0	equ	0xFEE
 10171                           fsr0h	equ	0xFEA
 10172                           fsr0l	equ	0xFE9
 10173                           wreg	equ	0xFE8
 10174                           postinc1	equ	0xFE6
 10175                           postdec1	equ	0xFE5
 10176                           plusw1	equ	0xFE3
 10177                           fsr1h	equ	0xFE2
 10178                           fsr1l	equ	0xFE1
 10179                           indf2	equ	0xFDF
 10180                           postinc2	equ	0xFDE
 10181                           postdec2	equ	0xFDD
 10182                           plusw2	equ	0xFDB
 10183                           fsr2h	equ	0xFDA
 10184                           fsr2l	equ	0xFD9
 10185                           status	equ	0xFD8
 10186                           
 10187 ;; *************** function _ETH_Read32 *****************
 10188 ;; Defined at:
 10189 ;;		line 495 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;		None
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  ret             4   22[COMRAM] unsigned long 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  4   18[COMRAM] unsigned long 
 10196 ;; Registers used:
 10197 ;;		wreg, status,2, status,0, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;Total ram usage:        8 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    5
 10210 ;; This function calls:
 10211 ;;		_ETH_EdataRead
 10212 ;; This function is called by:
 10213 ;;		_DHCP_Handler
 10214 ;;		_DNS_Handler
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text47
 10219  013D2E                     __ptext47:
 10220                           	opt stack 0
 10221  013D2E                     _ETH_Read32:
 10222                           	opt stack 20
 10223                           
 10224                           ;ETHxxJ6x_driver.c: 497: uint32_t ret = 0;
 10225                           
 10226                           ; BSR set to: 2
 10227                           ;incstack = 0
 10228  013D2E  0E00               	movlw	0
 10229  013D30  6E17               	movwf	ETH_Read32@ret,c
 10230  013D32  0E00               	movlw	0
 10231  013D34  6E18               	movwf	ETH_Read32@ret+1,c
 10232  013D36  0E00               	movlw	0
 10233  013D38  6E19               	movwf	ETH_Read32@ret+2,c
 10234  013D3A  0E00               	movlw	0
 10235  013D3C  6E1A               	movwf	ETH_Read32@ret+3,c
 10236                           
 10237                           ;ETHxxJ6x_driver.c: 498: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 10238  013D3E  0102               	movlb	2	; () banked
 10239  013D40  513B               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 10240  013D42  E104               	bnz	u6980
 10241  013D44  0E04               	movlw	4
 10242  013D46  5D3A               	subwf	_rxPacketStatusVector& (0+255),w,b
 10243  013D48  A0D8               	btfss	status,0,c
 10244  013D4A  D013               	goto	l567
 10245  013D4C                     u6980:
 10246                           
 10247                           ; BSR set to: 2
 10248                           ;ETHxxJ6x_driver.c: 499: {
 10249                           ;ETHxxJ6x_driver.c: 500: ((uint8_t *)&ret)[3] = ETH_EdataRead();
 10250  013D4C  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 10251  013D50  6E1A               	movwf	ETH_Read32@ret+3,c
 10252                           
 10253                           ;ETHxxJ6x_driver.c: 501: ((uint8_t *)&ret)[2] = ETH_EdataRead();
 10254  013D52  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 10255  013D56  6E19               	movwf	ETH_Read32@ret+2,c
 10256                           
 10257                           ;ETHxxJ6x_driver.c: 502: ((uint8_t *)&ret)[1] = ETH_EdataRead();
 10258  013D58  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 10259  013D5C  6E18               	movwf	ETH_Read32@ret+1,c
 10260                           
 10261                           ;ETHxxJ6x_driver.c: 503: ((uint8_t *)&ret)[0] = ETH_EdataRead();
 10262  013D5E  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 10263  013D62  6E17               	movwf	ETH_Read32@ret,c
 10264                           
 10265                           ;ETHxxJ6x_driver.c: 504: rxPacketStatusVector.byteCount -= sizeof(ret);
 10266  013D64  0E04               	movlw	4
 10267  013D66  0102               	movlb	2	; () banked
 10268  013D68  5F3A               	subwf	_rxPacketStatusVector& (0+255),f,b
 10269  013D6A  0E00               	movlw	0
 10270  013D6C  5B3B               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 10271                           
 10272                           ; BSR set to: 2
 10273                           ;ETHxxJ6x_driver.c: 505: ethData.error = 0;
 10274  013D6E  9124               	bcf	_ethData& (0+255),0,b	;volatile
 10275                           
 10276                           ;ETHxxJ6x_driver.c: 506: }
 10277  013D70  D001               	goto	l568
 10278  013D72                     l567:
 10279                           
 10280                           ; BSR set to: 2
 10281                           ;ETHxxJ6x_driver.c: 507: else
 10282                           ;ETHxxJ6x_driver.c: 508: {
 10283                           ;ETHxxJ6x_driver.c: 509: ethData.error = 1;
 10284  013D72  8124               	bsf	_ethData& (0+255),0,b	;volatile
 10285  013D74                     l568:
 10286                           
 10287                           ; BSR set to: 2
 10288                           ;ETHxxJ6x_driver.c: 510: }
 10289                           ;ETHxxJ6x_driver.c: 511: return ret;
 10290  013D74  C017  F013         	movff	ETH_Read32@ret,?_ETH_Read32
 10291  013D78  C018  F014         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
 10292  013D7C  C019  F015         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
 10293  013D80  C01A  F016         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
 10294                           
 10295                           ; BSR set to: 2
 10296  013D84  0012               	return		;funcret
 10297  013D86                     __end_of_ETH_Read32:
 10298                           	opt stack 0
 10299                           tosu	equ	0xFFF
 10300                           tosh	equ	0xFFE
 10301                           tosl	equ	0xFFD
 10302                           pclath	equ	0xFFA
 10303                           tblptru	equ	0xFF8
 10304                           tblptrh	equ	0xFF7
 10305                           tblptrl	equ	0xFF6
 10306                           tablat	equ	0xFF5
 10307                           prodh	equ	0xFF4
 10308                           prodl	equ	0xFF3
 10309                           intcon	equ	0xFF2
 10310                           indf0	equ	0xFEF
 10311                           postinc0	equ	0xFEE
 10312                           fsr0h	equ	0xFEA
 10313                           fsr0l	equ	0xFE9
 10314                           wreg	equ	0xFE8
 10315                           postinc1	equ	0xFE6
 10316                           postdec1	equ	0xFE5
 10317                           plusw1	equ	0xFE3
 10318                           fsr1h	equ	0xFE2
 10319                           fsr1l	equ	0xFE1
 10320                           indf2	equ	0xFDF
 10321                           postinc2	equ	0xFDE
 10322                           postdec2	equ	0xFDD
 10323                           plusw2	equ	0xFDB
 10324                           fsr2h	equ	0xFDA
 10325                           fsr2l	equ	0xFD9
 10326                           status	equ	0xFD8
 10327                           
 10328 ;; *************** function _IPV4_SaveStartPosition *****************
 10329 ;; Defined at:
 10330 ;;		line 262 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;		None
 10333 ;; Auto vars:     Size  Location     Type
 10334 ;;		None
 10335 ;; Return value:  Size  Location     Type
 10336 ;;                  1    wreg      void 
 10337 ;; Registers used:
 10338 ;;		cstack
 10339 ;; Tracked objects:
 10340 ;;		On entry : 0/0
 10341 ;;		On exit  : 0/0
 10342 ;;		Unchanged: 0/0
 10343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;Total ram usage:        0 bytes
 10349 ;; Hardware stack levels used:    1
 10350 ;; Hardware stack levels required when called:    5
 10351 ;; This function calls:
 10352 ;;		_ETH_GetReadPtr
 10353 ;; This function is called by:
 10354 ;;		_IPV4_Packet
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           	psect	text48
 10359  014546                     __ptext48:
 10360                           	opt stack 0
 10361  014546                     _IPV4_SaveStartPosition:
 10362                           	opt stack 22
 10363                           
 10364                           ;ipv4.c: 264: ipv4StartPosition = ETH_GetReadPtr();
 10365                           
 10366                           ; BSR set to: 2
 10367                           ;incstack = 0
 10368  014546  ECD0  F0A2         	call	_ETH_GetReadPtr	;wreg free
 10369  01454A  C013  F244         	movff	?_ETH_GetReadPtr,_ipv4StartPosition
 10370  01454E  C014  F245         	movff	?_ETH_GetReadPtr+1,_ipv4StartPosition+1
 10371  014552  0012               	return		;funcret
 10372  014554                     __end_of_IPV4_SaveStartPosition:
 10373                           	opt stack 0
 10374                           tosu	equ	0xFFF
 10375                           tosh	equ	0xFFE
 10376                           tosl	equ	0xFFD
 10377                           pclath	equ	0xFFA
 10378                           tblptru	equ	0xFF8
 10379                           tblptrh	equ	0xFF7
 10380                           tblptrl	equ	0xFF6
 10381                           tablat	equ	0xFF5
 10382                           prodh	equ	0xFF4
 10383                           prodl	equ	0xFF3
 10384                           intcon	equ	0xFF2
 10385                           indf0	equ	0xFEF
 10386                           postinc0	equ	0xFEE
 10387                           fsr0h	equ	0xFEA
 10388                           fsr0l	equ	0xFE9
 10389                           wreg	equ	0xFE8
 10390                           postinc1	equ	0xFE6
 10391                           postdec1	equ	0xFE5
 10392                           plusw1	equ	0xFE3
 10393                           fsr1h	equ	0xFE2
 10394                           fsr1l	equ	0xFE1
 10395                           indf2	equ	0xFDF
 10396                           postinc2	equ	0xFDE
 10397                           postdec2	equ	0xFDD
 10398                           plusw2	equ	0xFDB
 10399                           fsr2h	equ	0xFDA
 10400                           fsr2l	equ	0xFD9
 10401                           status	equ	0xFD8
 10402                           
 10403 ;; *************** function _ETH_GetReadPtr *****************
 10404 ;; Defined at:
 10405 ;;		line 1080 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;		None
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;		None
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  2   18[COMRAM] unsigned int 
 10412 ;; Registers used:
 10413 ;;		None
 10414 ;; Tracked objects:
 10415 ;;		On entry : 0/0
 10416 ;;		On exit  : 0/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10423 ;;Total ram usage:        2 bytes
 10424 ;; Hardware stack levels used:    1
 10425 ;; Hardware stack levels required when called:    4
 10426 ;; This function calls:
 10427 ;;		Nothing
 10428 ;; This function is called by:
 10429 ;;		_IPV4_SaveStartPosition
 10430 ;; This function uses a non-reentrant model
 10431 ;;
 10432                           
 10433                           	psect	text49
 10434  0145A0                     __ptext49:
 10435                           	opt stack 0
 10436  0145A0                     _ETH_GetReadPtr:
 10437                           	opt stack 22
 10438                           
 10439                           ;ETHxxJ6x_driver.c: 1082: return(ERDPT);
 10440                           
 10441                           ;incstack = 0
 10442  0145A0  CF7A F013          	movff	3962,?_ETH_GetReadPtr	;volatile
 10443  0145A4  CF7B F014          	movff	3963,?_ETH_GetReadPtr+1	;volatile
 10444  0145A8  0012               	return		;funcret
 10445  0145AA                     __end_of_ETH_GetReadPtr:
 10446                           	opt stack 0
 10447                           tosu	equ	0xFFF
 10448                           tosh	equ	0xFFE
 10449                           tosl	equ	0xFFD
 10450                           pclath	equ	0xFFA
 10451                           tblptru	equ	0xFF8
 10452                           tblptrh	equ	0xFF7
 10453                           tblptrl	equ	0xFF6
 10454                           tablat	equ	0xFF5
 10455                           prodh	equ	0xFF4
 10456                           prodl	equ	0xFF3
 10457                           intcon	equ	0xFF2
 10458                           indf0	equ	0xFEF
 10459                           postinc0	equ	0xFEE
 10460                           fsr0h	equ	0xFEA
 10461                           fsr0l	equ	0xFE9
 10462                           wreg	equ	0xFE8
 10463                           postinc1	equ	0xFE6
 10464                           postdec1	equ	0xFE5
 10465                           plusw1	equ	0xFE3
 10466                           fsr1h	equ	0xFE2
 10467                           fsr1l	equ	0xFE1
 10468                           indf2	equ	0xFDF
 10469                           postinc2	equ	0xFDE
 10470                           postdec2	equ	0xFDD
 10471                           plusw2	equ	0xFDB
 10472                           fsr2h	equ	0xFDA
 10473                           fsr2l	equ	0xFD9
 10474                           status	equ	0xFD8
 10475                           
 10476 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
 10477 ;; Defined at:
 10478 ;;		line 64 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;  payloadLen      2   18[COMRAM] unsigned int 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;  tmp            12   35[COMRAM] struct .
 10483 ;;  cksm            4   31[COMRAM] unsigned long 
 10484 ;;  v               2   28[COMRAM] PTR unsigned int 
 10485 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
 10486 ;;  len             1   30[COMRAM] unsigned char 
 10487 ;; Return value:  Size  Location     Type
 10488 ;;                  2   18[COMRAM] unsigned int 
 10489 ;; Registers used:
 10490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10491 ;; Tracked objects:
 10492 ;;		On entry : 0/0
 10493 ;;		On exit  : 0/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10497 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10498 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10499 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10500 ;;Total ram usage:       29 bytes
 10501 ;; Hardware stack levels used:    1
 10502 ;; Hardware stack levels required when called:    4
 10503 ;; This function calls:
 10504 ;;		Nothing
 10505 ;; This function is called by:
 10506 ;;		_IPV4_Packet
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           	psect	text50
 10511  0131EC                     __ptext50:
 10512                           	opt stack 0
 10513  0131EC                     _IPV4_PseudoHeaderChecksum:
 10514                           	opt stack 23
 10515                           
 10516                           ;ipv4.c: 66: ipv4_pseudo_header_t tmp;
 10517                           ;ipv4.c: 67: uint8_t len;
 10518                           ;ipv4.c: 68: uint32_t cksm = 0;
 10519                           
 10520                           ;incstack = 0
 10521  0131EC  0E00               	movlw	0
 10522  0131EE  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
 10523  0131F0  0E00               	movlw	0
 10524  0131F2  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
 10525  0131F4  0E00               	movlw	0
 10526  0131F6  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
 10527  0131F8  0E00               	movlw	0
 10528  0131FA  6E23               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
 10529                           
 10530                           ;ipv4.c: 69: uint16_t *v;
 10531                           ;ipv4.c: 71: tmp.srcIpAddress = ipv4Header.srcIpAddress;
 10532  0131FC  C254  F024         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
 10533  013200  C255  F025         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
 10534  013204  C256  F026         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
 10535  013208  C257  F027         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
 10536                           
 10537                           ;ipv4.c: 72: tmp.dstIpAddress = ipv4Header.dstIpAddress;
 10538  01320C  C258  F028         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
 10539  013210  C259  F029         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
 10540  013214  C25A  F02A         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
 10541  013218  C25B  F02B         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
 10542                           
 10543                           ;ipv4.c: 73: tmp.protocol = ipv4Header.protocol;
 10544  01321C  C251  F02C         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
 10545                           
 10546                           ;ipv4.c: 74: tmp.z = 0;
 10547  013220  0E00               	movlw	0
 10548  013222  6E2D               	movwf	IPV4_PseudoHeaderChecksum@tmp+9,c
 10549                           
 10550                           ;ipv4.c: 75: tmp.length = payloadLen;
 10551  013224  C013  F02E         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
 10552  013228  C014  F02F         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
 10553                           
 10554                           ;ipv4.c: 77: len = sizeof(tmp);
 10555  01322C  0E0C               	movlw	12
 10556  01322E  6E1F               	movwf	IPV4_PseudoHeaderChecksum@len,c
 10557                           
 10558                           ;ipv4.c: 78: len = len >> 1;
 10559  013230  90D8               	bcf	status,0,c
 10560  013232  301F               	rrcf	IPV4_PseudoHeaderChecksum@len,w,c
 10561  013234  6E1F               	movwf	IPV4_PseudoHeaderChecksum@len,c
 10562                           
 10563                           ;ipv4.c: 80: v = (uint16_t *) &tmp;
 10564  013236  0E24               	movlw	low IPV4_PseudoHeaderChecksum@tmp
 10565  013238  6E1D               	movwf	IPV4_PseudoHeaderChecksum@v,c
 10566  01323A  0E00               	movlw	high IPV4_PseudoHeaderChecksum@tmp
 10567  01323C  6E1E               	movwf	IPV4_PseudoHeaderChecksum@v+1,c
 10568                           
 10569                           ;ipv4.c: 82: while(len)
 10570  01323E  D015               	goto	l845
 10571  013240                     
 10572                           ;ipv4.c: 83: {
 10573                           ;ipv4.c: 84: cksm += *v;
 10574  013240  C01D  FFD9         	movff	IPV4_PseudoHeaderChecksum@v,fsr2l
 10575  013244  C01E  FFDA         	movff	IPV4_PseudoHeaderChecksum@v+1,fsr2h
 10576  013248  CFDE F015          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
 10577  01324C  CFDD F016          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
 10578  013250  5015               	movf	??_IPV4_PseudoHeaderChecksum,w,c
 10579  013252  2620               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
 10580  013254  5016               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
 10581  013256  2221               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
 10582  013258  0E00               	movlw	0
 10583  01325A  2222               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
 10584  01325C  0E00               	movlw	0
 10585  01325E  2223               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
 10586                           
 10587                           ;ipv4.c: 85: len--;
 10588  013260  061F               	decf	IPV4_PseudoHeaderChecksum@len,f,c
 10589                           
 10590                           ;ipv4.c: 86: v++;
 10591  013262  0E02               	movlw	2
 10592  013264  261D               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
 10593  013266  0E00               	movlw	0
 10594  013268  221E               	addwfc	IPV4_PseudoHeaderChecksum@v+1,f,c
 10595  01326A                     l845:
 10596  01326A  501F               	movf	IPV4_PseudoHeaderChecksum@len,w,c
 10597  01326C  A4D8               	btfss	status,2,c
 10598  01326E  D7E8               	goto	l846
 10599                           
 10600                           ;ipv4.c: 87: }
 10601                           ;ipv4.c: 90: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 10602  013270  C020  F015         	movff	IPV4_PseudoHeaderChecksum@cksm,??_IPV4_PseudoHeaderChecksum
 10603  013274  C021  F016         	movff	IPV4_PseudoHeaderChecksum@cksm+1,??_IPV4_PseudoHeaderChecksum+1
 10604  013278  C022  F017         	movff	IPV4_PseudoHeaderChecksum@cksm+2,??_IPV4_PseudoHeaderChecksum+2
 10605  01327C  C023  F018         	movff	IPV4_PseudoHeaderChecksum@cksm+3,??_IPV4_PseudoHeaderChecksum+3
 10606  013280  0E11               	movlw	17
 10607  013282  D005               	goto	u8170
 10608  013284                     u8175:
 10609  013284  90D8               	bcf	status,0,c
 10610  013286  3218               	rrcf	??_IPV4_PseudoHeaderChecksum+3,f,c
 10611  013288  3217               	rrcf	??_IPV4_PseudoHeaderChecksum+2,f,c
 10612  01328A  3216               	rrcf	??_IPV4_PseudoHeaderChecksum+1,f,c
 10613  01328C  3215               	rrcf	??_IPV4_PseudoHeaderChecksum,f,c
 10614  01328E                     u8170:
 10615  01328E  2EE8               	decfsz	wreg,f,c
 10616  013290  D7F9               	goto	u8175
 10617  013292  0EFF               	movlw	255
 10618  013294  1420               	andwf	IPV4_PseudoHeaderChecksum@cksm,w,c
 10619  013296  6E19               	movwf	(??_IPV4_PseudoHeaderChecksum+4)& (0+255),c
 10620  013298  0EFF               	movlw	255
 10621  01329A  1421               	andwf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
 10622  01329C  6E1A               	movwf	(??_IPV4_PseudoHeaderChecksum+5)& (0+255),c
 10623  01329E  0E00               	movlw	0
 10624  0132A0  1422               	andwf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
 10625  0132A2  6E1B               	movwf	(??_IPV4_PseudoHeaderChecksum+6)& (0+255),c
 10626  0132A4  0E00               	movlw	0
 10627  0132A6  1423               	andwf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
 10628  0132A8  6E1C               	movwf	(??_IPV4_PseudoHeaderChecksum+7)& (0+255),c
 10629  0132AA  5015               	movf	??_IPV4_PseudoHeaderChecksum,w,c
 10630  0132AC  2419               	addwf	??_IPV4_PseudoHeaderChecksum+4,w,c
 10631  0132AE  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
 10632  0132B0  5016               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
 10633  0132B2  201A               	addwfc	??_IPV4_PseudoHeaderChecksum+5,w,c
 10634  0132B4  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
 10635  0132B6  5017               	movf	??_IPV4_PseudoHeaderChecksum+2,w,c
 10636  0132B8  201B               	addwfc	??_IPV4_PseudoHeaderChecksum+6,w,c
 10637  0132BA  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
 10638  0132BC  5018               	movf	??_IPV4_PseudoHeaderChecksum+3,w,c
 10639  0132BE  201C               	addwfc	??_IPV4_PseudoHeaderChecksum+7,w,c
 10640  0132C0  6E23               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
 10641                           
 10642                           ;ipv4.c: 93: return cksm;
 10643  0132C2  C020  F013         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
 10644  0132C6  C021  F014         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
 10645  0132CA  0012               	return	
 10646  0132CC                     __end_of_IPV4_PseudoHeaderChecksum:
 10647                           	opt stack 0
 10648                           tosu	equ	0xFFF
 10649                           tosh	equ	0xFFE
 10650                           tosl	equ	0xFFD
 10651                           pclath	equ	0xFFA
 10652                           tblptru	equ	0xFF8
 10653                           tblptrh	equ	0xFF7
 10654                           tblptrl	equ	0xFF6
 10655                           tablat	equ	0xFF5
 10656                           prodh	equ	0xFF4
 10657                           prodl	equ	0xFF3
 10658                           intcon	equ	0xFF2
 10659                           indf0	equ	0xFEF
 10660                           postinc0	equ	0xFEE
 10661                           fsr0h	equ	0xFEA
 10662                           fsr0l	equ	0xFE9
 10663                           wreg	equ	0xFE8
 10664                           postinc1	equ	0xFE6
 10665                           postdec1	equ	0xFE5
 10666                           plusw1	equ	0xFE3
 10667                           fsr1h	equ	0xFE2
 10668                           fsr1l	equ	0xFE1
 10669                           indf2	equ	0xFDF
 10670                           postinc2	equ	0xFDE
 10671                           postdec2	equ	0xFDD
 10672                           plusw2	equ	0xFDB
 10673                           fsr2h	equ	0xFDA
 10674                           fsr2l	equ	0xFD9
 10675                           status	equ	0xFD8
 10676                           
 10677 ;; *************** function _ICMP_Receive *****************
 10678 ;; Defined at:
 10679 ;;		line 58 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  ipv4Hdr         2   89[BANK0 ] PTR struct .
 10682 ;;		 -> ipv4Header(20), 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;  icmpHdr         4   96[BANK0 ] struct .
 10685 ;;  ret             1   95[BANK0 ] enum E392
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  1    wreg      enum E392
 10688 ;; Registers used:
 10689 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10696 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10697 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;Total ram usage:       11 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:   10
 10702 ;; This function calls:
 10703 ;;		_ETH_Dump
 10704 ;;		_ETH_Read16
 10705 ;;		_ETH_ReadBlock
 10706 ;;		_ICMP_EchoReply
 10707 ;; This function is called by:
 10708 ;;		_IPV4_Packet
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           	psect	text51
 10713  013024                     __ptext51:
 10714                           	opt stack 0
 10715  013024                     _ICMP_Receive:
 10716                           	opt stack 17
 10717                           
 10718                           ;icmp.c: 60: icmpHeader_t icmpHdr;
 10719                           ;icmp.c: 61: error_msg ret = ERROR;
 10720                           
 10721                           ;incstack = 0
 10722  013024  0E00               	movlw	0
 10723  013026  0100               	movlb	0	; () banked
 10724  013028  6FBF               	movwf	ICMP_Receive@ret& (0+255),b
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;icmp.c: 62: ETH_ReadBlock(&icmpHdr, sizeof(icmpHeader_t));
 10728  01302A  0EC0               	movlw	low ICMP_Receive@icmpHdr
 10729  01302C  6E13               	movwf	ETH_ReadBlock@buffer,c
 10730  01302E  0E00               	movlw	high ICMP_Receive@icmpHdr
 10731  013030  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 10732  013032  0E00               	movlw	0
 10733  013034  6E16               	movwf	ETH_ReadBlock@length+1,c
 10734  013036  0E04               	movlw	4
 10735  013038  6E15               	movwf	ETH_ReadBlock@length,c
 10736  01303A  ECEE  F09E         	call	_ETH_ReadBlock	;wreg free
 10737                           
 10738                           ;icmp.c: 64: if(ipv4Hdr->dstIpAddress == 0xFFFFFFFF)
 10739  01303E  0100               	movlb	0	; () banked
 10740  013040  EE20 F010          	lfsr	2,16
 10741  013044  51B9               	movf	ICMP_Receive@ipv4Hdr& (0+255),w,b
 10742  013046  26D9               	addwf	fsr2l,f,c
 10743  013048  51BA               	movf	(ICMP_Receive@ipv4Hdr+1)& (0+255),w,b
 10744  01304A  22DA               	addwfc	fsr2h,f,c
 10745  01304C  28DE               	incf	postinc2,w,c
 10746  01304E  E132               	bnz	l8662
 10747  013050  28DE               	incf	postinc2,w,c
 10748  013052  E130               	bnz	l8662
 10749  013054  28DE               	incf	postinc2,w,c
 10750  013056  E12E               	bnz	l8662
 10751  013058  28DE               	incf	postinc2,w,c
 10752  01305A  B4D8               	btfsc	status,2,c
 10753  01305C  0012               	return	
 10754  01305E  D02A               	goto	l1090
 10755  013060                     
 10756                           ; BSR set to: 0
 10757                           ;icmp.c: 69: case UNASSIGNED_ECHO_TYPE_CODE_REQUEST_1:
 10758                           ;icmp.c: 70: case UNASSIGNED_ECHO_TYPE_CODE_REQUEST_2:
 10759                           ;icmp.c: 71: {
 10760                           ;icmp.c: 72: ret = ICMP_EchoReply(ipv4Hdr);
 10761                           
 10762                           ; BSR set to: 0
 10763                           
 10764                           ; BSR set to: 0
 10765                           
 10766                           ; BSR set to: 0
 10767  013060  C0B9  F0A8         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
 10768  013064  C0BA  F0A9         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
 10769  013068  EC1E  F095         	call	_ICMP_EchoReply	;wreg free
 10770  01306C  0100               	movlb	0	; () banked
 10771  01306E  6FBF               	movwf	ICMP_Receive@ret& (0+255),b
 10772                           
 10773                           ;icmp.c: 73: }
 10774                           ;icmp.c: 74: break;
 10775  013070  0012               	return	
 10776  013072                     
 10777                           ; BSR set to: 0
 10778                           ;icmp.c: 76: ETH_Dump(4);
 10779                           
 10780                           ; BSR set to: 0
 10781  013072  0E00               	movlw	0
 10782  013074  6E14               	movwf	ETH_Dump@length+1,c
 10783  013076  0E04               	movlw	4
 10784  013078  6E13               	movwf	ETH_Dump@length,c
 10785  01307A  ECFB  F0A0         	call	_ETH_Dump	;wreg free
 10786                           
 10787                           ;icmp.c: 77: ETH_ReadBlock(ipv4Hdr,sizeof(ipv4Header_t));
 10788  01307E  C0B9  F013         	movff	ICMP_Receive@ipv4Hdr,ETH_ReadBlock@buffer
 10789  013082  C0BA  F014         	movff	ICMP_Receive@ipv4Hdr+1,ETH_ReadBlock@buffer+1
 10790  013086  0E00               	movlw	0
 10791  013088  6E16               	movwf	ETH_ReadBlock@length+1,c
 10792  01308A  0E14               	movlw	20
 10793  01308C  6E15               	movwf	ETH_ReadBlock@length,c
 10794  01308E  ECEE  F09E         	call	_ETH_ReadBlock	;wreg free
 10795                           
 10796                           ;icmp.c: 78: if(5 == ipv4Hdr->ihl)
 10797  013092  C0B9  FFD9         	movff	ICMP_Receive@ipv4Hdr,fsr2l
 10798  013096  C0BA  FFDA         	movff	ICMP_Receive@ipv4Hdr+1,fsr2h
 10799  01309A  0100               	movlb	0	; () banked
 10800  01309C  50DF               	movf	223,w,c
 10801  01309E  0B0F               	andlw	15
 10802  0130A0  0A05               	xorlw	5
 10803  0130A2  A4D8               	btfss	status,2,c
 10804  0130A4  0012               	return	
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;icmp.c: 79: {
 10808                           ;icmp.c: 80: portUnreachable = ETH_Read16();
 10809  0130A6  EC39  F0A0         	call	_ETH_Read16	;wreg free
 10810  0130AA  C013  F242         	movff	?_ETH_Read16,_portUnreachable
 10811  0130AE  C014  F243         	movff	?_ETH_Read16+1,_portUnreachable+1
 10812                           
 10813                           ;icmp.c: 85: }
 10814                           
 10815                           ;icmp.c: 84: break;
 10816                           
 10817                           ;icmp.c: 83: default:
 10818                           
 10819                           ;icmp.c: 81: }
 10820                           ;icmp.c: 82: break;
 10821  0130B2  0012               	return	
 10822  0130B4                     l1090:
 10823  0130B4                     l8662:
 10824  0130B4  0100               	movlb	0	; () banked
 10825  0130B6  51C0               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
 10826  0130B8  6FBC               	movwf	(??_ICMP_Receive+1)& (0+255),b
 10827  0130BA  6BBB               	clrf	??_ICMP_Receive& (0+255),b
 10828  0130BC  C0C0  F0BD         	movff	ICMP_Receive@icmpHdr,??_ICMP_Receive+2
 10829  0130C0  C0C1  F0BE         	movff	ICMP_Receive@icmpHdr+1,??_ICMP_Receive+3
 10830  0130C4  C0BE  F0BD         	movff	??_ICMP_Receive+3,??_ICMP_Receive+2
 10831  0130C8  6BBE               	clrf	(??_ICMP_Receive+3)& (0+255),b
 10832  0130CA  0EFF               	movlw	255
 10833  0130CC  17BD               	andwf	(??_ICMP_Receive+2)& (0+255),f,b
 10834  0130CE  0E00               	movlw	0
 10835  0130D0  17BE               	andwf	(??_ICMP_Receive+3)& (0+255),f,b
 10836  0130D2  51BB               	movf	??_ICMP_Receive& (0+255),w,b
 10837  0130D4  13BD               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
 10838  0130D6  51BC               	movf	(??_ICMP_Receive+1)& (0+255),w,b
 10839  0130D8  13BE               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
 10840                           
 10841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10842                           ; Switch size 1, requested type "space"
 10843                           ; Number of cases is 2, Range of values is 3 to 8
 10844                           ; switch strategies available:
 10845                           ; Name         Instructions Cycles
 10846                           ; simple_byte            7     4 (average)
 10847                           ;	Chosen strategy is simple_byte
 10848  0130DA  51BE               	movf	(??_ICMP_Receive+3)& (0+255),w,b
 10849  0130DC  0A03               	xorlw	3	; case 3
 10850  0130DE  B4D8               	btfsc	status,2,c
 10851  0130E0  D004               	goto	l9450
 10852  0130E2  0A0B               	xorlw	11	; case 8
 10853  0130E4  A4D8               	btfss	status,2,c
 10854  0130E6  0012               	return	
 10855  0130E8  D005               	goto	l9452
 10856  0130EA                     l9450:
 10857                           
 10858                           ; BSR set to: 0
 10859                           ; Switch size 1, requested type "space"
 10860                           ; Number of cases is 1, Range of values is 3 to 3
 10861                           ; switch strategies available:
 10862                           ; Name         Instructions Cycles
 10863                           ; simple_byte            4     3 (average)
 10864                           ;	Chosen strategy is simple_byte
 10865  0130EA  51BD               	movf	(??_ICMP_Receive+2)& (0+255),w,b
 10866  0130EC  0A03               	xorlw	3	; case 3
 10867  0130EE  A4D8               	btfss	status,2,c
 10868  0130F0  0012               	return	
 10869  0130F2  D7BF               	goto	l1095
 10870  0130F4                     l9452:
 10871                           
 10872                           ; BSR set to: 0
 10873                           ; Switch size 1, requested type "space"
 10874                           ; Number of cases is 3, Range of values is 0 to 252
 10875                           ; switch strategies available:
 10876                           ; Name         Instructions Cycles
 10877                           ; simple_byte           10     6 (average)
 10878                           ;	Chosen strategy is simple_byte
 10879  0130F4  51BD               	movf	(??_ICMP_Receive+2)& (0+255),w,b
 10880  0130F6  0A00               	xorlw	0	; case 0
 10881  0130F8  B4D8               	btfsc	status,2,c
 10882  0130FA  D7B2               	goto	l1091
 10883  0130FC  0A2A               	xorlw	42	; case 42
 10884  0130FE  B4D8               	btfsc	status,2,c
 10885  013100  D7AF               	goto	l1091
 10886  013102  0AD6               	xorlw	214	; case 252
 10887  013104  A4D8               	btfss	status,2,c
 10888  013106  0012               	return	
 10889  013108  D7AB               	goto	l1091
 10890  01310A                     __end_of_ICMP_Receive:
 10891                           	opt stack 0
 10892                           tosu	equ	0xFFF
 10893                           tosh	equ	0xFFE
 10894                           tosl	equ	0xFFD
 10895                           pclath	equ	0xFFA
 10896                           tblptru	equ	0xFF8
 10897                           tblptrh	equ	0xFF7
 10898                           tblptrl	equ	0xFF6
 10899                           tablat	equ	0xFF5
 10900                           prodh	equ	0xFF4
 10901                           prodl	equ	0xFF3
 10902                           intcon	equ	0xFF2
 10903                           indf0	equ	0xFEF
 10904                           postinc0	equ	0xFEE
 10905                           fsr0h	equ	0xFEA
 10906                           fsr0l	equ	0xFE9
 10907                           wreg	equ	0xFE8
 10908                           postinc1	equ	0xFE6
 10909                           postdec1	equ	0xFE5
 10910                           plusw1	equ	0xFE3
 10911                           fsr1h	equ	0xFE2
 10912                           fsr1l	equ	0xFE1
 10913                           indf2	equ	0xFDF
 10914                           postinc2	equ	0xFDE
 10915                           postdec2	equ	0xFDD
 10916                           plusw2	equ	0xFDB
 10917                           fsr2h	equ	0xFDA
 10918                           fsr2l	equ	0xFD9
 10919                           status	equ	0xFD8
 10920                           
 10921 ;; *************** function _ICMP_EchoReply *****************
 10922 ;; Defined at:
 10923 ;;		line 99 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;  ipv4Hdr         2   72[BANK0 ] PTR struct .
 10926 ;;		 -> ipv4Header(20), 
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;  ipv4PayloadL    2   86[BANK0 ] unsigned int 
 10929 ;;  icmp_cksm_st    2   82[BANK0 ] unsigned int 
 10930 ;;  cksm            2   84[BANK0 ] unsigned int 
 10931 ;;  sequence        2   80[BANK0 ] unsigned int 
 10932 ;;  identifier      2   78[BANK0 ] unsigned int 
 10933 ;;  ret             1   88[BANK0 ] enum E392
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  1    wreg      enum E392
 10936 ;; Registers used:
 10937 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10946 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10947 ;;Total ram usage:       17 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; Hardware stack levels required when called:    9
 10950 ;; This function calls:
 10951 ;;		_ETH_Copy
 10952 ;;		_ETH_Insert
 10953 ;;		_ETH_Read16
 10954 ;;		_ETH_TxComputeChecksum
 10955 ;;		_ETH_Write16
 10956 ;;		_IPV4_Send
 10957 ;;		_IPv4_Start
 10958 ;; This function is called by:
 10959 ;;		_ICMP_Receive
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text52
 10964  012A3C                     __ptext52:
 10965                           	opt stack 0
 10966  012A3C                     _ICMP_EchoReply:
 10967                           	opt stack 17
 10968                           
 10969                           ;icmp.c: 101: uint16_t cksm =0;
 10970                           
 10971                           ;incstack = 0
 10972  012A3C  0E00               	movlw	0
 10973  012A3E  0100               	movlb	0	; () banked
 10974  012A40  6FB5               	movwf	(ICMP_EchoReply@cksm+1)& (0+255),b
 10975  012A42  0E00               	movlw	0
 10976  012A44  6FB4               	movwf	ICMP_EchoReply@cksm& (0+255),b
 10977                           
 10978                           ;icmp.c: 102: error_msg ret = ERROR;
 10979  012A46  0E00               	movlw	0
 10980  012A48  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;icmp.c: 103: uint16_t identifier;
 10984                           ;icmp.c: 104: uint16_t sequence;
 10985                           ;icmp.c: 106: identifier = ETH_Read16();
 10986  012A4A  EC39  F0A0         	call	_ETH_Read16	;wreg free
 10987  012A4E  C013  F0AE         	movff	?_ETH_Read16,ICMP_EchoReply@identifier
 10988  012A52  C014  F0AF         	movff	?_ETH_Read16+1,ICMP_EchoReply@identifier+1
 10989                           
 10990                           ;icmp.c: 107: sequence = ETH_Read16();
 10991  012A56  EC39  F0A0         	call	_ETH_Read16	;wreg free
 10992  012A5A  C013  F0B0         	movff	?_ETH_Read16,ICMP_EchoReply@sequence
 10993  012A5E  C014  F0B1         	movff	?_ETH_Read16+1,ICMP_EchoReply@sequence+1
 10994                           
 10995                           ;icmp.c: 108: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
 10996  012A62  0100               	movlb	0	; () banked
 10997  012A64  EE20 F00C          	lfsr	2,12
 10998  012A68  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 10999  012A6A  26D9               	addwf	fsr2l,f,c
 11000  012A6C  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 11001  012A6E  22DA               	addwfc	fsr2h,f,c
 11002  012A70  CFDE F031          	movff	postinc2,IPv4_Start@destAddress
 11003  012A74  CFDE F032          	movff	postinc2,IPv4_Start@destAddress+1
 11004  012A78  CFDE F033          	movff	postinc2,IPv4_Start@destAddress+2
 11005  012A7C  CFDE F034          	movff	postinc2,IPv4_Start@destAddress+3
 11006  012A80  EE20 F009          	lfsr	2,9
 11007  012A84  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 11008  012A86  26D9               	addwf	fsr2l,f,c
 11009  012A88  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 11010  012A8A  22DA               	addwfc	fsr2h,f,c
 11011  012A8C  50DF               	movf	indf2,w,c
 11012  012A8E  6E35               	movwf	IPv4_Start@protocol,c
 11013  012A90  EC35  F08F         	call	_IPv4_Start	;wreg free
 11014  012A94  0100               	movlb	0	; () banked
 11015  012A96  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;icmp.c: 109: if(ret == SUCCESS)
 11019  012A98  05B8               	decf	ICMP_EchoReply@ret& (0+255),w,b
 11020  012A9A  A4D8               	btfss	status,2,c
 11021  012A9C  D088               	goto	l1101
 11022                           
 11023                           ; BSR set to: 0
 11024                           ;icmp.c: 110: {
 11025                           ;icmp.c: 111: uint16_t icmp_cksm_start;
 11026                           ;icmp.c: 112: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
 11027  012A9E  EE20 F002          	lfsr	2,2
 11028  012AA2  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 11029  012AA4  26D9               	addwf	fsr2l,f,c
 11030  012AA6  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 11031  012AA8  22DA               	addwfc	fsr2h,f,c
 11032  012AAA  CFDE F0AA          	movff	postinc2,??_ICMP_EchoReply
 11033  012AAE  CFDD F0AB          	movff	postdec2,??_ICMP_EchoReply+1
 11034  012AB2  0EEC               	movlw	236
 11035  012AB4  25AA               	addwf	??_ICMP_EchoReply& (0+255),w,b
 11036  012AB6  6FB6               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 11037  012AB8  0EFF               	movlw	255
 11038  012ABA  21AB               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
 11039  012ABC  6FB7               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 11040                           
 11041                           ;icmp.c: 114: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
 11042  012ABE  EE20 F002          	lfsr	2,2
 11043  012AC2  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 11044  012AC4  26D9               	addwf	fsr2l,f,c
 11045  012AC6  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 11046  012AC8  22DA               	addwfc	fsr2h,f,c
 11047  012ACA  CFDE F0AA          	movff	postinc2,??_ICMP_EchoReply
 11048  012ACE  CFDD F0AB          	movff	postdec2,??_ICMP_EchoReply+1
 11049  012AD2  C0A8  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
 11050  012AD6  C0A9  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
 11051  012ADA  50DF               	movf	223,w,c
 11052  012ADC  0B0F               	andlw	15
 11053  012ADE  6FAC               	movwf	(??_ICMP_EchoReply+2)& (0+255),b
 11054  012AE0  6BAD               	clrf	(??_ICMP_EchoReply+3)& (0+255),b
 11055  012AE2  90D8               	bcf	status,0,c
 11056  012AE4  37AC               	rlcf	(??_ICMP_EchoReply+2)& (0+255),f,b
 11057  012AE6  37AD               	rlcf	(??_ICMP_EchoReply+3)& (0+255),f,b
 11058  012AE8  90D8               	bcf	status,0,c
 11059  012AEA  37AC               	rlcf	(??_ICMP_EchoReply+2)& (0+255),f,b
 11060  012AEC  37AD               	rlcf	(??_ICMP_EchoReply+3)& (0+255),f,b
 11061  012AEE  1FAC               	comf	(??_ICMP_EchoReply+2)& (0+255),f,b
 11062  012AF0  1FAD               	comf	(??_ICMP_EchoReply+3)& (0+255),f,b
 11063  012AF2  4BAC               	infsnz	(??_ICMP_EchoReply+2)& (0+255),f,b
 11064  012AF4  2BAD               	incf	(??_ICMP_EchoReply+3)& (0+255),f,b
 11065  012AF6  51AA               	movf	??_ICMP_EchoReply& (0+255),w,b
 11066  012AF8  25AC               	addwf	(??_ICMP_EchoReply+2)& (0+255),w,b
 11067  012AFA  6FB6               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 11068  012AFC  51AB               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
 11069  012AFE  21AD               	addwfc	(??_ICMP_EchoReply+3)& (0+255),w,b
 11070  012B00  6FB7               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;icmp.c: 116: ETH_Write16(ECHO_REPLY);
 11074  012B02  0E00               	movlw	0
 11075  012B04  6E14               	movwf	ETH_Write16@data+1,c
 11076  012B06  0E00               	movlw	0
 11077  012B08  6E13               	movwf	ETH_Write16@data,c
 11078  012B0A  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 11079                           
 11080                           ;icmp.c: 117: ETH_Write16(0);
 11081  012B0E  0E00               	movlw	0
 11082  012B10  6E14               	movwf	ETH_Write16@data+1,c
 11083  012B12  0E00               	movlw	0
 11084  012B14  6E13               	movwf	ETH_Write16@data,c
 11085  012B16  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 11086                           
 11087                           ;icmp.c: 119: ETH_Write16(identifier);
 11088  012B1A  C0AE  F013         	movff	ICMP_EchoReply@identifier,ETH_Write16@data
 11089  012B1E  C0AF  F014         	movff	ICMP_EchoReply@identifier+1,ETH_Write16@data+1
 11090  012B22  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 11091                           
 11092                           ;icmp.c: 120: ETH_Write16(sequence);
 11093  012B26  C0B0  F013         	movff	ICMP_EchoReply@sequence,ETH_Write16@data
 11094  012B2A  C0B1  F014         	movff	ICMP_EchoReply@sequence+1,ETH_Write16@data+1
 11095  012B2E  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 11096                           
 11097                           ;icmp.c: 123: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t) - 4);
 11098  012B32  0EF8               	movlw	248
 11099  012B34  0100               	movlb	0	; () banked
 11100  012B36  25B6               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
 11101  012B38  6E19               	movwf	ETH_Copy@len,c
 11102  012B3A  0EFF               	movlw	255
 11103  012B3C  21B7               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
 11104  012B3E  6E1A               	movwf	ETH_Copy@len+1,c
 11105  012B40  ECD2  F099         	call	_ETH_Copy	;wreg free
 11106  012B44  0100               	movlb	0	; () banked
 11107  012B46  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;icmp.c: 124: if(ret==SUCCESS)
 11111  012B48  05B8               	decf	ICMP_EchoReply@ret& (0+255),w,b
 11112  012B4A  A4D8               	btfss	status,2,c
 11113  012B4C  D030               	goto	l1101
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;icmp.c: 125: {
 11117                           ;icmp.c: 127: cksm = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
 11118  012B4E  0E00               	movlw	0
 11119  012B50  6FB5               	movwf	(ICMP_EchoReply@cksm+1)& (0+255),b
 11120  012B52  0E22               	movlw	34
 11121  012B54  6FB4               	movwf	ICMP_EchoReply@cksm& (0+255),b
 11122                           
 11123                           ;icmp.c: 128: icmp_cksm_start = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
 11124  012B56  0E00               	movlw	0
 11125  012B58  6FB3               	movwf	(ICMP_EchoReply@icmp_cksm_start+1)& (0+255),b
 11126  012B5A  0E22               	movlw	34
 11127  012B5C  6FB2               	movwf	ICMP_EchoReply@icmp_cksm_start& (0+255),b
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;icmp.c: 129: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
 11131  012B5E  C0B2  F025         	movff	ICMP_EchoReply@icmp_cksm_start,ETH_TxComputeChecksum@position
 11132  012B62  C0B3  F026         	movff	ICMP_EchoReply@icmp_cksm_start+1,ETH_TxComputeChecksum@position+1
 11133  012B66  C0B6  F027         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
 11134  012B6A  C0B7  F028         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
 11135  012B6E  0E00               	movlw	0
 11136  012B70  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
 11137  012B72  0E00               	movlw	0
 11138  012B74  6E29               	movwf	ETH_TxComputeChecksum@seed,c
 11139  012B76  EC66  F099         	call	_ETH_TxComputeChecksum	;wreg free
 11140  012B7A  C025  F0B4         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
 11141  012B7E  C026  F0B5         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
 11142                           
 11143                           ;icmp.c: 130: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
 11144  012B82  0EB4               	movlw	low ICMP_EchoReply@cksm
 11145  012B84  6E13               	movwf	ETH_Insert@data,c
 11146  012B86  0E00               	movlw	high ICMP_EchoReply@cksm
 11147  012B88  6E14               	movwf	ETH_Insert@data+1,c
 11148  012B8A  0E00               	movlw	0
 11149  012B8C  6E16               	movwf	ETH_Insert@len+1,c
 11150  012B8E  0E02               	movlw	2
 11151  012B90  6E15               	movwf	ETH_Insert@len,c
 11152  012B92  0E00               	movlw	0
 11153  012B94  6E18               	movwf	ETH_Insert@offset+1,c
 11154  012B96  0E24               	movlw	36
 11155  012B98  6E17               	movwf	ETH_Insert@offset,c
 11156  012B9A  ECB0  F09D         	call	_ETH_Insert	;wreg free
 11157                           
 11158                           ;icmp.c: 131: ret = IPV4_Send(ipv4PayloadLength);
 11159  012B9E  C0B6  F037         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
 11160  012BA2  C0B7  F038         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
 11161  012BA6  EC1C  F09B         	call	_IPV4_Send	;wreg free
 11162  012BAA  0100               	movlb	0	; () banked
 11163  012BAC  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 11164  012BAE                     l1101:
 11165                           
 11166                           ; BSR set to: 0
 11167                           ;icmp.c: 132: }
 11168                           ;icmp.c: 133: }
 11169                           ;icmp.c: 134: return ret;
 11170                           
 11171                           ; BSR set to: 0
 11172                           
 11173                           ; BSR set to: 0
 11174  012BAE  51B8               	movf	ICMP_EchoReply@ret& (0+255),w,b
 11175  012BB0  0012               	return	
 11176  012BB2                     __end_of_ICMP_EchoReply:
 11177                           	opt stack 0
 11178                           tosu	equ	0xFFF
 11179                           tosh	equ	0xFFE
 11180                           tosl	equ	0xFFD
 11181                           pclath	equ	0xFFA
 11182                           tblptru	equ	0xFF8
 11183                           tblptrh	equ	0xFF7
 11184                           tblptrl	equ	0xFF6
 11185                           tablat	equ	0xFF5
 11186                           prodh	equ	0xFF4
 11187                           prodl	equ	0xFF3
 11188                           intcon	equ	0xFF2
 11189                           indf0	equ	0xFEF
 11190                           postinc0	equ	0xFEE
 11191                           fsr0h	equ	0xFEA
 11192                           fsr0l	equ	0xFE9
 11193                           wreg	equ	0xFE8
 11194                           postinc1	equ	0xFE6
 11195                           postdec1	equ	0xFE5
 11196                           plusw1	equ	0xFE3
 11197                           fsr1h	equ	0xFE2
 11198                           fsr1l	equ	0xFE1
 11199                           indf2	equ	0xFDF
 11200                           postinc2	equ	0xFDE
 11201                           postdec2	equ	0xFDD
 11202                           plusw2	equ	0xFDB
 11203                           fsr2h	equ	0xFDA
 11204                           fsr2l	equ	0xFD9
 11205                           status	equ	0xFD8
 11206                           
 11207 ;; *************** function _ETH_Read16 *****************
 11208 ;; Defined at:
 11209 ;;		line 452 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;		None
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;  ret             2   20[COMRAM] unsigned int 
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  2   18[COMRAM] unsigned int 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2, status,0, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11226 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11227 ;;Total ram usage:        4 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:    5
 11230 ;; This function calls:
 11231 ;;		_ETH_EdataRead
 11232 ;; This function is called by:
 11233 ;;		_ICMP_Receive
 11234 ;;		_ICMP_EchoReply
 11235 ;;		_DHCP_Handler
 11236 ;;		_DNS_Handler
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           	psect	text53
 11241  014072                     __ptext53:
 11242                           	opt stack 0
 11243  014072                     _ETH_Read16:
 11244                           	opt stack 20
 11245                           
 11246                           ;ETHxxJ6x_driver.c: 454: uint16_t ret = 0;
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;incstack = 0
 11250  014072  0E00               	movlw	0
 11251  014074  6E16               	movwf	ETH_Read16@ret+1,c
 11252  014076  0E00               	movlw	0
 11253  014078  6E15               	movwf	ETH_Read16@ret,c
 11254                           
 11255                           ;ETHxxJ6x_driver.c: 455: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 11256  01407A  0102               	movlb	2	; () banked
 11257  01407C  513B               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 11258  01407E  E104               	bnz	u6970
 11259  014080  0E02               	movlw	2
 11260  014082  5D3A               	subwf	_rxPacketStatusVector& (0+255),w,b
 11261  014084  A0D8               	btfss	status,0,c
 11262  014086  D00D               	goto	l557
 11263  014088                     u6970:
 11264                           
 11265                           ; BSR set to: 2
 11266                           ;ETHxxJ6x_driver.c: 456: {
 11267                           ;ETHxxJ6x_driver.c: 457: ((uint8_t *)&ret)[1] = ETH_EdataRead();
 11268  014088  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 11269  01408C  6E16               	movwf	ETH_Read16@ret+1,c
 11270                           
 11271                           ;ETHxxJ6x_driver.c: 458: ((uint8_t *)&ret)[0] = ETH_EdataRead();
 11272  01408E  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 11273  014092  6E15               	movwf	ETH_Read16@ret,c
 11274                           
 11275                           ;ETHxxJ6x_driver.c: 459: rxPacketStatusVector.byteCount -= sizeof(ret);
 11276  014094  0E02               	movlw	2
 11277  014096  0102               	movlb	2	; () banked
 11278  014098  5F3A               	subwf	_rxPacketStatusVector& (0+255),f,b
 11279  01409A  0E00               	movlw	0
 11280  01409C  5B3B               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 11281                           
 11282                           ; BSR set to: 2
 11283                           ;ETHxxJ6x_driver.c: 460: ethData.error = 0;
 11284  01409E  9124               	bcf	_ethData& (0+255),0,b	;volatile
 11285                           
 11286                           ;ETHxxJ6x_driver.c: 461: }
 11287  0140A0  D001               	goto	l558
 11288  0140A2                     l557:
 11289                           
 11290                           ; BSR set to: 2
 11291                           ;ETHxxJ6x_driver.c: 462: else
 11292                           ;ETHxxJ6x_driver.c: 463: {
 11293                           ;ETHxxJ6x_driver.c: 464: ethData.error = 1;
 11294  0140A2  8124               	bsf	_ethData& (0+255),0,b	;volatile
 11295  0140A4                     l558:
 11296                           
 11297                           ; BSR set to: 2
 11298                           ;ETHxxJ6x_driver.c: 465: }
 11299                           ;ETHxxJ6x_driver.c: 466: return ret;
 11300  0140A4  C015  F013         	movff	ETH_Read16@ret,?_ETH_Read16
 11301  0140A8  C016  F014         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
 11302                           
 11303                           ; BSR set to: 2
 11304  0140AC  0012               	return		;funcret
 11305  0140AE                     __end_of_ETH_Read16:
 11306                           	opt stack 0
 11307                           tosu	equ	0xFFF
 11308                           tosh	equ	0xFFE
 11309                           tosl	equ	0xFFD
 11310                           pclath	equ	0xFFA
 11311                           tblptru	equ	0xFF8
 11312                           tblptrh	equ	0xFF7
 11313                           tblptrl	equ	0xFF6
 11314                           tablat	equ	0xFF5
 11315                           prodh	equ	0xFF4
 11316                           prodl	equ	0xFF3
 11317                           intcon	equ	0xFF2
 11318                           indf0	equ	0xFEF
 11319                           postinc0	equ	0xFEE
 11320                           fsr0h	equ	0xFEA
 11321                           fsr0l	equ	0xFE9
 11322                           wreg	equ	0xFE8
 11323                           postinc1	equ	0xFE6
 11324                           postdec1	equ	0xFE5
 11325                           plusw1	equ	0xFE3
 11326                           fsr1h	equ	0xFE2
 11327                           fsr1l	equ	0xFE1
 11328                           indf2	equ	0xFDF
 11329                           postinc2	equ	0xFDE
 11330                           postdec2	equ	0xFDD
 11331                           plusw2	equ	0xFDB
 11332                           fsr2h	equ	0xFDA
 11333                           fsr2l	equ	0xFD9
 11334                           status	equ	0xFD8
 11335                           
 11336 ;; *************** function _ETH_Copy *****************
 11337 ;; Defined at:
 11338 ;;		line 866 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;  len             2   24[COMRAM] unsigned int 
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;  tmp_len         2   28[COMRAM] unsigned int 
 11343 ;;  timer           2   26[COMRAM] unsigned int 
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      enum E4853
 11346 ;; Registers used:
 11347 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11356 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;Total ram usage:        6 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; Hardware stack levels required when called:    5
 11360 ;; This function calls:
 11361 ;;		___wmul
 11362 ;; This function is called by:
 11363 ;;		_ICMP_EchoReply
 11364 ;;		_ICMP_PortUnreachable
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           	psect	text54
 11369  0133A4                     __ptext54:
 11370                           	opt stack 0
 11371  0133A4                     _ETH_Copy:
 11372                           	opt stack 20
 11373                           
 11374                           ;ETHxxJ6x_driver.c: 868: uint16_t timer;
 11375                           ;ETHxxJ6x_driver.c: 869: uint16_t tmp_len;
 11376                           ;ETHxxJ6x_driver.c: 871: timer = 2 * len;
 11377                           
 11378                           ; BSR set to: 2
 11379                           ;incstack = 0
 11380  0133A4  90D8               	bcf	status,0,c
 11381  0133A6  3419               	rlcf	ETH_Copy@len,w,c
 11382  0133A8  6E1B               	movwf	ETH_Copy@timer,c
 11383  0133AA  341A               	rlcf	ETH_Copy@len+1,w,c
 11384  0133AC  6E1C               	movwf	ETH_Copy@timer+1,c
 11385                           
 11386                           ;ETHxxJ6x_driver.c: 872: while(ECON1bits.DMAST!=0 && --timer) __nop();
 11387  0133AE  D001               	goto	l666
 11388  0133B0                     l667:
 11389  0133B0  F000               	nop	
 11390  0133B2                     l666:
 11391  0133B2  AAD2               	btfss	4050,5,c	;volatile
 11392  0133B4  D007               	goto	u7020
 11393  0133B6  061B               	decf	ETH_Copy@timer,f,c
 11394  0133B8  A0D8               	btfss	status,0,c
 11395  0133BA  061C               	decf	ETH_Copy@timer+1,f,c
 11396  0133BC  501B               	movf	ETH_Copy@timer,w,c
 11397  0133BE  101C               	iorwf	ETH_Copy@timer+1,w,c
 11398  0133C0  A4D8               	btfss	status,2,c
 11399  0133C2  D7F6               	goto	l667
 11400  0133C4                     u7020:
 11401                           
 11402                           ;ETHxxJ6x_driver.c: 873: if(ECON1bits.DMAST==0)
 11403  0133C4  BAD2               	btfsc	4050,5,c	;volatile
 11404  0133C6  D042               	goto	l679
 11405                           
 11406                           ;ETHxxJ6x_driver.c: 874: {
 11407                           ;ETHxxJ6x_driver.c: 875: EDMADST = EWRPT;
 11408  0133C8  CEE2 FEF4          	movff	3810,3828	;volatile
 11409  0133CC  CEE3 FEF5          	movff	3811,3829	;volatile
 11410                           
 11411                           ;ETHxxJ6x_driver.c: 876: EDMAST = ERDPT;
 11412  0133D0  CF7A FEF0          	movff	3962,3824	;volatile
 11413  0133D4  CF7B FEF1          	movff	3963,3825	;volatile
 11414                           
 11415                           ;ETHxxJ6x_driver.c: 878: tmp_len = ERDPT + len;
 11416  0133D8  5019               	movf	ETH_Copy@len,w,c
 11417  0133DA  247A               	addwf	3962,w,c	;volatile
 11418  0133DC  6E1D               	movwf	ETH_Copy@tmp_len,c
 11419  0133DE  501A               	movf	ETH_Copy@len+1,w,c
 11420  0133E0  207B               	addwfc	3963,w,c	;volatile
 11421  0133E2  6E1E               	movwf	ETH_Copy@tmp_len+1,c
 11422                           
 11423                           ;ETHxxJ6x_driver.c: 880: if (tmp_len > ((((8192) - (((1518) + (7)) << 1)) - 1)) )
 11424  0133E4  0E16               	movlw	22
 11425  0133E6  5C1D               	subwf	ETH_Copy@tmp_len,w,c
 11426  0133E8  0E14               	movlw	20
 11427  0133EA  581E               	subwfb	ETH_Copy@tmp_len+1,w,c
 11428  0133EC  A0D8               	btfss	status,0,c
 11429  0133EE  D006               	goto	l7900
 11430                           
 11431                           ;ETHxxJ6x_driver.c: 881: {
 11432                           ;ETHxxJ6x_driver.c: 882: tmp_len = tmp_len - ((((8192) - (((1518) + (7)) << 1)) - 1));
 11433  0133F0  0EEB               	movlw	235
 11434  0133F2  241D               	addwf	ETH_Copy@tmp_len,w,c
 11435  0133F4  6E1D               	movwf	ETH_Copy@tmp_len,c
 11436  0133F6  0EEB               	movlw	235
 11437  0133F8  201E               	addwfc	ETH_Copy@tmp_len+1,w,c
 11438  0133FA  6E1E               	movwf	ETH_Copy@tmp_len+1,c
 11439  0133FC                     l7900:
 11440                           
 11441                           ;ETHxxJ6x_driver.c: 886: {
 11442                           ;ETHxxJ6x_driver.c: 887: EDMAND = tmp_len;
 11443                           
 11444                           ;ETHxxJ6x_driver.c: 885: }else
 11445                           
 11446                           ;ETHxxJ6x_driver.c: 883: EDMAND = (0) + tmp_len;
 11447  0133FC  C01D  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
 11448  013400  C01E  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
 11449                           
 11450                           ;ETHxxJ6x_driver.c: 888: }
 11451                           ;ETHxxJ6x_driver.c: 890: ECON1bits.CSUMEN = 0;
 11452  013404  98D2               	bcf	4050,4,c	;volatile
 11453                           
 11454                           ;ETHxxJ6x_driver.c: 891: ECON1bits.DMAST = 1;
 11455  013406  8AD2               	bsf	4050,5,c	;volatile
 11456                           
 11457                           ;ETHxxJ6x_driver.c: 893: timer = 40 * len;
 11458  013408  C019  F013         	movff	ETH_Copy@len,___wmul@multiplier
 11459  01340C  C01A  F014         	movff	ETH_Copy@len+1,___wmul@multiplier+1
 11460  013410  0E00               	movlw	0
 11461  013412  6E16               	movwf	___wmul@multiplicand+1,c
 11462  013414  0E28               	movlw	40
 11463  013416  6E15               	movwf	___wmul@multiplicand,c
 11464  013418  ECBD  F0A1         	call	___wmul	;wreg free
 11465  01341C  C013  F01B         	movff	?___wmul,ETH_Copy@timer
 11466  013420  C014  F01C         	movff	?___wmul+1,ETH_Copy@timer+1
 11467                           
 11468                           ;ETHxxJ6x_driver.c: 894: while(ECON1bits.DMAST!=0 && --timer) __nop();
 11469  013424  D001               	goto	l674
 11470  013426                     l675:
 11471  013426  F000               	nop	
 11472  013428                     l674:
 11473  013428  AAD2               	btfss	4050,5,c	;volatile
 11474  01342A  D007               	goto	u7060
 11475  01342C  061B               	decf	ETH_Copy@timer,f,c
 11476  01342E  A0D8               	btfss	status,0,c
 11477  013430  061C               	decf	ETH_Copy@timer+1,f,c
 11478  013432  501B               	movf	ETH_Copy@timer,w,c
 11479  013434  101C               	iorwf	ETH_Copy@timer+1,w,c
 11480  013436  A4D8               	btfss	status,2,c
 11481  013438  D7F6               	goto	l675
 11482  01343A                     u7060:
 11483                           
 11484                           ;ETHxxJ6x_driver.c: 895: if(ECON1bits.DMAST == 0)
 11485  01343A  BAD2               	btfsc	4050,5,c	;volatile
 11486  01343C  D007               	goto	l679
 11487                           
 11488                           ;ETHxxJ6x_driver.c: 896: {
 11489                           ;ETHxxJ6x_driver.c: 897: EWRPT += len;
 11490  01343E  5019               	movf	ETH_Copy@len,w,c
 11491  013440  010E               	movlb	14	; () banked
 11492  013442  27E2               	addwf	226,f,b	;volatile
 11493  013444  501A               	movf	ETH_Copy@len+1,w,c
 11494  013446  23E3               	addwfc	227,f,b	;volatile
 11495                           
 11496                           ; BSR set to: 14
 11497                           ;ETHxxJ6x_driver.c: 898: return SUCCESS;
 11498  013448  0E01               	movlw	1
 11499                           
 11500                           ; BSR set to: 14
 11501  01344A  0012               	return	
 11502  01344C                     l679:
 11503                           
 11504                           ; BSR set to: 14
 11505  01344C  00FF               	reset		;# 
 11506                           
 11507                           ;ETHxxJ6x_driver.c: 903: return DMA_TIMEOUT;
 11508  01344E  0E0C               	movlw	12
 11509  013450  0012               	return	
 11510  013452                     __end_of_ETH_Copy:
 11511                           	opt stack 0
 11512                           tosu	equ	0xFFF
 11513                           tosh	equ	0xFFE
 11514                           tosl	equ	0xFFD
 11515                           pclath	equ	0xFFA
 11516                           tblptru	equ	0xFF8
 11517                           tblptrh	equ	0xFF7
 11518                           tblptrl	equ	0xFF6
 11519                           tablat	equ	0xFF5
 11520                           prodh	equ	0xFF4
 11521                           prodl	equ	0xFF3
 11522                           intcon	equ	0xFF2
 11523                           indf0	equ	0xFEF
 11524                           postinc0	equ	0xFEE
 11525                           fsr0h	equ	0xFEA
 11526                           fsr0l	equ	0xFE9
 11527                           wreg	equ	0xFE8
 11528                           postinc1	equ	0xFE6
 11529                           postdec1	equ	0xFE5
 11530                           plusw1	equ	0xFE3
 11531                           fsr1h	equ	0xFE2
 11532                           fsr1l	equ	0xFE1
 11533                           indf2	equ	0xFDF
 11534                           postinc2	equ	0xFDE
 11535                           postdec2	equ	0xFDD
 11536                           plusw2	equ	0xFDB
 11537                           fsr2h	equ	0xFDA
 11538                           fsr2l	equ	0xFD9
 11539                           status	equ	0xFD8
 11540                           
 11541 ;; *************** function _ETH_Dump *****************
 11542 ;; Defined at:
 11543 ;;		line 789 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  length          2   18[COMRAM] unsigned int 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg, status,2, status,0
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;Total ram usage:        2 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:    4
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_IPV4_Packet
 11568 ;;		_ICMP_Receive
 11569 ;;		_DHCP_Handler
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           
 11573                           	psect	text55
 11574  0141F6                     __ptext55:
 11575                           	opt stack 0
 11576  0141F6                     _ETH_Dump:
 11577                           	opt stack 21
 11578                           
 11579                           ;ETHxxJ6x_driver.c: 791: length = (rxPacketStatusVector.byteCount <= length) ? rxPacketS
      +                          tatusVector.byteCount : length;
 11580                           
 11581                           ;incstack = 0
 11582  0141F6  0102               	movlb	2	; () banked
 11583  0141F8  513A               	movf	_rxPacketStatusVector& (0+255),w,b
 11584  0141FA  5C13               	subwf	ETH_Dump@length,w,c
 11585  0141FC  513B               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 11586  0141FE  5814               	subwfb	ETH_Dump@length+1,w,c
 11587  014200  A0D8               	btfss	status,0,c
 11588  014202  D004               	goto	l654
 11589                           
 11590                           ; BSR set to: 2
 11591                           
 11592                           ; BSR set to: 2
 11593  014204  C23A  F013         	movff	_rxPacketStatusVector,ETH_Dump@length
 11594  014208  C23B  F014         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
 11595  01420C                     l654:
 11596                           
 11597                           ; BSR set to: 2
 11598                           ;ETHxxJ6x_driver.c: 792: if (length)
 11599                           
 11600                           ; BSR set to: 2
 11601  01420C  5013               	movf	ETH_Dump@length,w,c
 11602  01420E  1014               	iorwf	ETH_Dump@length+1,w,c
 11603  014210  B4D8               	btfsc	status,2,c
 11604  014212  0012               	return	
 11605                           
 11606                           ; BSR set to: 2
 11607                           ;ETHxxJ6x_driver.c: 793: {
 11608                           ;ETHxxJ6x_driver.c: 795: ERDPT += length;
 11609  014214  5013               	movf	ETH_Dump@length,w,c
 11610  014216  267A               	addwf	3962,f,c	;volatile
 11611  014218  5014               	movf	ETH_Dump@length+1,w,c
 11612  01421A  227B               	addwfc	3963,f,c	;volatile
 11613                           
 11614                           ;ETHxxJ6x_driver.c: 796: rxPacketStatusVector.byteCount -= length;
 11615  01421C  5013               	movf	ETH_Dump@length,w,c
 11616  01421E  5F3A               	subwf	_rxPacketStatusVector& (0+255),f,b
 11617  014220  5014               	movf	ETH_Dump@length+1,w,c
 11618  014222  5B3B               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 11619  014224  0012               	return	
 11620  014226                     __end_of_ETH_Dump:
 11621                           	opt stack 0
 11622                           tosu	equ	0xFFF
 11623                           tosh	equ	0xFFE
 11624                           tosl	equ	0xFFD
 11625                           pclath	equ	0xFFA
 11626                           tblptru	equ	0xFF8
 11627                           tblptrh	equ	0xFF7
 11628                           tblptrl	equ	0xFF6
 11629                           tablat	equ	0xFF5
 11630                           prodh	equ	0xFF4
 11631                           prodl	equ	0xFF3
 11632                           intcon	equ	0xFF2
 11633                           indf0	equ	0xFEF
 11634                           postinc0	equ	0xFEE
 11635                           fsr0h	equ	0xFEA
 11636                           fsr0l	equ	0xFE9
 11637                           wreg	equ	0xFE8
 11638                           postinc1	equ	0xFE6
 11639                           postdec1	equ	0xFE5
 11640                           plusw1	equ	0xFE3
 11641                           fsr1h	equ	0xFE2
 11642                           fsr1l	equ	0xFE1
 11643                           indf2	equ	0xFDF
 11644                           postinc2	equ	0xFDE
 11645                           postdec2	equ	0xFDD
 11646                           plusw2	equ	0xFDB
 11647                           fsr2h	equ	0xFDA
 11648                           fsr2l	equ	0xFD9
 11649                           status	equ	0xFD8
 11650                           
 11651 ;; *************** function _ETH_RxComputeChecksum *****************
 11652 ;; Defined at:
 11653 ;;		line 1026 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11654 ;; Parameters:    Size  Location     Type
 11655 ;;  len             2   36[COMRAM] unsigned int 
 11656 ;;  seed            2   38[COMRAM] unsigned int 
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;  cksm            4   46[COMRAM] unsigned long 
 11659 ;;  rxptr           2   44[COMRAM] unsigned int 
 11660 ;; Return value:  Size  Location     Type
 11661 ;;                  2   36[COMRAM] unsigned int 
 11662 ;; Registers used:
 11663 ;;		wreg, status,2, status,0, cstack
 11664 ;; Tracked objects:
 11665 ;;		On entry : 0/0
 11666 ;;		On exit  : 0/0
 11667 ;;		Unchanged: 0/0
 11668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11670 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11671 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11672 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11673 ;;Total ram usage:       14 bytes
 11674 ;; Hardware stack levels used:    1
 11675 ;; Hardware stack levels required when called:    6
 11676 ;; This function calls:
 11677 ;;		_ETH_ComputeChecksum
 11678 ;; This function is called by:
 11679 ;;		_IPV4_Packet
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683                           	psect	text56
 11684  013E84                     __ptext56:
 11685                           	opt stack 0
 11686  013E84                     _ETH_RxComputeChecksum:
 11687                           	opt stack 21
 11688                           
 11689                           ;ETHxxJ6x_driver.c: 1028: uint16_t rxptr;
 11690                           ;ETHxxJ6x_driver.c: 1029: uint32_t cksm;
 11691                           ;ETHxxJ6x_driver.c: 1032: rxptr = ERDPT;
 11692                           
 11693                           ; BSR set to: 2
 11694                           ;incstack = 0
 11695  013E84  CF7A F02D          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
 11696  013E88  CF7B F02E          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
 11697                           
 11698                           ;ETHxxJ6x_driver.c: 1034: cksm = ETH_ComputeChecksum( len, seed);
 11699  013E8C  C025  F013         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
 11700  013E90  C026  F014         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 11701  013E94  C027  F015         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
 11702  013E98  C028  F016         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 11703  013E9C  EC86  F096         	call	_ETH_ComputeChecksum	;wreg free
 11704  013EA0  C013  F02F         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
 11705  013EA4  C014  F030         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
 11706  013EA8  6A31               	clrf	ETH_RxComputeChecksum@cksm+2,c
 11707  013EAA  6A32               	clrf	ETH_RxComputeChecksum@cksm+3,c
 11708                           
 11709                           ;ETHxxJ6x_driver.c: 1037: ERDPT = rxptr;
 11710  013EAC  C02D  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
 11711  013EB0  C02E  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
 11712                           
 11713                           ;ETHxxJ6x_driver.c: 1040: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 11714  013EB4  502F               	movf	ETH_RxComputeChecksum@cksm,w,c
 11715  013EB6  6E2A               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
 11716  013EB8  6A29               	clrf	??_ETH_RxComputeChecksum& (0+255),c
 11717  013EBA  0EFF               	movlw	255
 11718  013EBC  1430               	andwf	ETH_RxComputeChecksum@cksm+1,w,c
 11719  013EBE  6E2B               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
 11720  013EC0  0E00               	movlw	0
 11721  013EC2  1431               	andwf	ETH_RxComputeChecksum@cksm+2,w,c
 11722  013EC4  6E2C               	movwf	(??_ETH_RxComputeChecksum+3)& (0+255),c
 11723  013EC6  5029               	movf	??_ETH_RxComputeChecksum,w,c
 11724  013EC8  102B               	iorwf	??_ETH_RxComputeChecksum+2,w,c
 11725  013ECA  6E25               	movwf	?_ETH_RxComputeChecksum,c
 11726  013ECC  502A               	movf	??_ETH_RxComputeChecksum+1,w,c
 11727  013ECE  102C               	iorwf	??_ETH_RxComputeChecksum+3,w,c
 11728  013ED0  6E26               	movwf	?_ETH_RxComputeChecksum+1,c
 11729  013ED2  0012               	return	
 11730  013ED4                     __end_of_ETH_RxComputeChecksum:
 11731                           	opt stack 0
 11732                           tosu	equ	0xFFF
 11733                           tosh	equ	0xFFE
 11734                           tosl	equ	0xFFD
 11735                           pclath	equ	0xFFA
 11736                           tblptru	equ	0xFF8
 11737                           tblptrh	equ	0xFF7
 11738                           tblptrl	equ	0xFF6
 11739                           tablat	equ	0xFF5
 11740                           prodh	equ	0xFF4
 11741                           prodl	equ	0xFF3
 11742                           intcon	equ	0xFF2
 11743                           indf0	equ	0xFEF
 11744                           postinc0	equ	0xFEE
 11745                           fsr0h	equ	0xFEA
 11746                           fsr0l	equ	0xFE9
 11747                           wreg	equ	0xFE8
 11748                           postinc1	equ	0xFE6
 11749                           postdec1	equ	0xFE5
 11750                           plusw1	equ	0xFE3
 11751                           fsr1h	equ	0xFE2
 11752                           fsr1l	equ	0xFE1
 11753                           indf2	equ	0xFDF
 11754                           postinc2	equ	0xFDE
 11755                           postdec2	equ	0xFDD
 11756                           plusw2	equ	0xFDB
 11757                           fsr2h	equ	0xFDA
 11758                           fsr2l	equ	0xFD9
 11759                           status	equ	0xFD8
 11760                           
 11761 ;; *************** function _ETH_NextPacketUpdate *****************
 11762 ;; Defined at:
 11763 ;;		line 319 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;		None
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;		None
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      void 
 11770 ;; Registers used:
 11771 ;;		wreg, status,2, status,0, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;Total ram usage:        0 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    5
 11784 ;; This function calls:
 11785 ;;		_ETH_EdataRead
 11786 ;; This function is called by:
 11787 ;;		_Network_Read
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text57
 11792  014034                     __ptext57:
 11793                           	opt stack 0
 11794  014034                     _ETH_NextPacketUpdate:
 11795                           	opt stack 23
 11796                           
 11797                           ;ETHxxJ6x_driver.c: 322: ERDPT = nextPacketPointer;
 11798                           
 11799                           ;incstack = 0
 11800  014034  C03E  FF7A         	movff	_nextPacketPointer,3962	;volatile
 11801  014038  C03F  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
 11802                           
 11803                           ;ETHxxJ6x_driver.c: 326: ((char *) &nextPacketPointer)[0] = ETH_EdataRead();
 11804  01403C  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 11805  014040  6E3E               	movwf	_nextPacketPointer,c
 11806                           
 11807                           ;ETHxxJ6x_driver.c: 327: ((char *) &nextPacketPointer)[1] = ETH_EdataRead();
 11808  014042  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 11809  014046  6E3F               	movwf	_nextPacketPointer+1,c
 11810                           
 11811                           ;ETHxxJ6x_driver.c: 328: ((char *) &rxPacketStatusVector)[0] = ETH_EdataRead();
 11812  014048  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 11813  01404C  0102               	movlb	2	; () banked
 11814  01404E  6F3A               	movwf	_rxPacketStatusVector& (0+255),b
 11815                           
 11816                           ;ETHxxJ6x_driver.c: 329: ((char *) &rxPacketStatusVector)[1] = ETH_EdataRead();
 11817  014050  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 11818  014054  0102               	movlb	2	; () banked
 11819  014056  6F3B               	movwf	(_rxPacketStatusVector+1)& (0+255),b
 11820                           
 11821                           ;ETHxxJ6x_driver.c: 330: ((char *) &rxPacketStatusVector)[2] = ETH_EdataRead();
 11822  014058  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 11823  01405C  0102               	movlb	2	; () banked
 11824  01405E  6F3C               	movwf	(_rxPacketStatusVector+2)& (0+255),b
 11825                           
 11826                           ;ETHxxJ6x_driver.c: 331: ((char *) &rxPacketStatusVector)[3] = ETH_EdataRead();
 11827  014060  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 11828  014064  0102               	movlb	2	; () banked
 11829  014066  6F3D               	movwf	(_rxPacketStatusVector+3)& (0+255),b
 11830                           
 11831                           ; BSR set to: 2
 11832                           ;ETHxxJ6x_driver.c: 334: rxPacketStatusVector.byteCount -= 4;
 11833  014068  0E04               	movlw	4
 11834  01406A  5F3A               	subwf	_rxPacketStatusVector& (0+255),f,b
 11835  01406C  0E00               	movlw	0
 11836  01406E  5B3B               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 11837                           
 11838                           ; BSR set to: 2
 11839  014070  0012               	return		;funcret
 11840  014072                     __end_of_ETH_NextPacketUpdate:
 11841                           	opt stack 0
 11842                           tosu	equ	0xFFF
 11843                           tosh	equ	0xFFE
 11844                           tosl	equ	0xFFD
 11845                           pclath	equ	0xFFA
 11846                           tblptru	equ	0xFF8
 11847                           tblptrh	equ	0xFF7
 11848                           tblptrl	equ	0xFF6
 11849                           tablat	equ	0xFF5
 11850                           prodh	equ	0xFF4
 11851                           prodl	equ	0xFF3
 11852                           intcon	equ	0xFF2
 11853                           indf0	equ	0xFEF
 11854                           postinc0	equ	0xFEE
 11855                           fsr0h	equ	0xFEA
 11856                           fsr0l	equ	0xFE9
 11857                           wreg	equ	0xFE8
 11858                           postinc1	equ	0xFE6
 11859                           postdec1	equ	0xFE5
 11860                           plusw1	equ	0xFE3
 11861                           fsr1h	equ	0xFE2
 11862                           fsr1l	equ	0xFE1
 11863                           indf2	equ	0xFDF
 11864                           postinc2	equ	0xFDE
 11865                           postdec2	equ	0xFDD
 11866                           plusw2	equ	0xFDB
 11867                           fsr2h	equ	0xFDA
 11868                           fsr2l	equ	0xFD9
 11869                           status	equ	0xFD8
 11870                           
 11871 ;; *************** function _ETH_Flush *****************
 11872 ;; Defined at:
 11873 ;;		line 803 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11874 ;; Parameters:    Size  Location     Type
 11875 ;;		None
 11876 ;; Auto vars:     Size  Location     Type
 11877 ;;		None
 11878 ;; Return value:  Size  Location     Type
 11879 ;;                  1    wreg      void 
 11880 ;; Registers used:
 11881 ;;		wreg, status,2, status,0
 11882 ;; Tracked objects:
 11883 ;;		On entry : 0/0
 11884 ;;		On exit  : 0/0
 11885 ;;		Unchanged: 0/0
 11886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11890 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;Total ram usage:        4 bytes
 11892 ;; Hardware stack levels used:    1
 11893 ;; Hardware stack levels required when called:    4
 11894 ;; This function calls:
 11895 ;;		Nothing
 11896 ;; This function is called by:
 11897 ;;		_ETH_Init
 11898 ;;		_Network_Read
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text58
 11903  0139CC                     __ptext58:
 11904                           	opt stack 0
 11905  0139CC                     _ETH_Flush:
 11906                           	opt stack 23
 11907                           
 11908                           ;ETHxxJ6x_driver.c: 805: ethData.pktReady = 0;
 11909                           
 11910                           ; BSR set to: 2
 11911                           ;incstack = 0
 11912  0139CC  0102               	movlb	2	; () banked
 11913  0139CE  9324               	bcf	_ethData& (0+255),1,b	;volatile
 11914                           
 11915                           ; BSR set to: 2
 11916                           ;ETHxxJ6x_driver.c: 807: ECON2 = ECON2 | 0x40;
 11917  0139D0  010E               	movlb	14	; () banked
 11918  0139D2  51FE               	movf	254,w,b	;volatile
 11919  0139D4  0940               	iorlw	64
 11920  0139D6  6FFE               	movwf	254,b	;volatile
 11921                           
 11922                           ;ETHxxJ6x_driver.c: 813: if (((nextPacketPointer - 1) < ERXST) ||
 11923                           ;ETHxxJ6x_driver.c: 814: ((nextPacketPointer - 1) > ERXND))
 11924  0139D8  0EFF               	movlw	255
 11925  0139DA  6E13               	movwf	??_ETH_Flush& (0+255),c
 11926  0139DC  0EFF               	movlw	255
 11927  0139DE  6E14               	movwf	(??_ETH_Flush+1)& (0+255),c
 11928  0139E0  C03E  F015         	movff	_nextPacketPointer,??_ETH_Flush+2
 11929  0139E4  C03F  F016         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 11930  0139E8  5013               	movf	??_ETH_Flush,w,c
 11931  0139EA  2615               	addwf	??_ETH_Flush+2,f,c
 11932  0139EC  5014               	movf	??_ETH_Flush+1,w,c
 11933  0139EE  2216               	addwfc	??_ETH_Flush+3,f,c
 11934  0139F0  51E8               	movf	232,w,b	;volatile
 11935  0139F2  5C15               	subwf	??_ETH_Flush+2,w,c
 11936  0139F4  51E9               	movf	233,w,b	;volatile
 11937  0139F6  5816               	subwfb	??_ETH_Flush+3,w,c
 11938  0139F8  A0D8               	btfss	status,0,c
 11939  0139FA  D012               	goto	u8140
 11940                           
 11941                           ; BSR set to: 14
 11942  0139FC  0EFF               	movlw	255
 11943  0139FE  6E13               	movwf	??_ETH_Flush& (0+255),c
 11944  013A00  0EFF               	movlw	255
 11945  013A02  6E14               	movwf	(??_ETH_Flush+1)& (0+255),c
 11946  013A04  C03E  F015         	movff	_nextPacketPointer,??_ETH_Flush+2
 11947  013A08  C03F  F016         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 11948  013A0C  5013               	movf	??_ETH_Flush,w,c
 11949  013A0E  2615               	addwf	??_ETH_Flush+2,f,c
 11950  013A10  5014               	movf	??_ETH_Flush+1,w,c
 11951  013A12  2216               	addwfc	??_ETH_Flush+3,f,c
 11952  013A14  5015               	movf	??_ETH_Flush+2,w,c
 11953  013A16  5DEA               	subwf	234,w,b	;volatile
 11954  013A18  5016               	movf	??_ETH_Flush+3,w,c
 11955  013A1A  59EB               	subwfb	235,w,b	;volatile
 11956  013A1C  B0D8               	btfsc	status,0,c
 11957  013A1E  D005               	goto	l659
 11958  013A20                     u8140:
 11959                           
 11960                           ; BSR set to: 14
 11961                           ;ETHxxJ6x_driver.c: 815: ERXRDPT = ERXND;
 11962  013A20  CEEA FEEC          	movff	3818,3820	;volatile
 11963  013A24  CEEB FEED          	movff	3819,3821	;volatile
 11964  013A28  D006               	goto	l662
 11965  013A2A                     l659:
 11966                           
 11967                           ; BSR set to: 14
 11968                           ;ETHxxJ6x_driver.c: 816: else
 11969                           ;ETHxxJ6x_driver.c: 817: ERXRDPT = nextPacketPointer - 1;
 11970                           
 11971                           ; BSR set to: 14
 11972  013A2A  0EFF               	movlw	255
 11973  013A2C  243E               	addwf	_nextPacketPointer,w,c
 11974  013A2E  6FEC               	movwf	236,b	;volatile
 11975  013A30  0EFF               	movlw	255
 11976  013A32  203F               	addwfc	_nextPacketPointer+1,w,c
 11977  013A34  6FED               	movwf	237,b	;volatile
 11978  013A36                     l662:
 11979                           
 11980                           ; BSR set to: 14
 11981                           ;ETHxxJ6x_driver.c: 819: EIEbits.PKTIE = 1;
 11982                           
 11983                           ; BSR set to: 14
 11984  013A36  8DFB               	bsf	251,6,b	;volatile
 11985                           
 11986                           ; BSR set to: 14
 11987  013A38  0012               	return		;funcret
 11988  013A3A                     __end_of_ETH_Flush:
 11989                           	opt stack 0
 11990                           tosu	equ	0xFFF
 11991                           tosh	equ	0xFFE
 11992                           tosl	equ	0xFFD
 11993                           pclath	equ	0xFFA
 11994                           tblptru	equ	0xFF8
 11995                           tblptrh	equ	0xFF7
 11996                           tblptrl	equ	0xFF6
 11997                           tablat	equ	0xFF5
 11998                           prodh	equ	0xFF4
 11999                           prodl	equ	0xFF3
 12000                           intcon	equ	0xFF2
 12001                           indf0	equ	0xFEF
 12002                           postinc0	equ	0xFEE
 12003                           fsr0h	equ	0xFEA
 12004                           fsr0l	equ	0xFE9
 12005                           wreg	equ	0xFE8
 12006                           postinc1	equ	0xFE6
 12007                           postdec1	equ	0xFE5
 12008                           plusw1	equ	0xFE3
 12009                           fsr1h	equ	0xFE2
 12010                           fsr1l	equ	0xFE1
 12011                           indf2	equ	0xFDF
 12012                           postinc2	equ	0xFDE
 12013                           postdec2	equ	0xFDD
 12014                           plusw2	equ	0xFDB
 12015                           fsr2h	equ	0xFDA
 12016                           fsr2l	equ	0xFD9
 12017                           status	equ	0xFD8
 12018                           
 12019 ;; *************** function _ARPV4_Packet *****************
 12020 ;; Defined at:
 12021 ;;		line 101 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;		None
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  x               1   39[BANK0 ] unsigned char 
 12026 ;;  arpPtr          2   36[BANK0 ] PTR struct .
 12027 ;;		 -> arpMap(104), 
 12028 ;;  x               1   38[BANK0 ] unsigned char 
 12029 ;;  header         28   42[BANK0 ] struct .
 12030 ;;  entryPointer    2   40[BANK0 ] PTR struct .
 12031 ;;		 -> arpMap(104), 
 12032 ;;  length          2   32[BANK0 ] unsigned int 
 12033 ;;  ret             1   35[BANK0 ] enum E476
 12034 ;;  mergeFlag       1   34[BANK0 ] unsigned char 
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  1    wreg      enum E476
 12037 ;; Registers used:
 12038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/0
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12045 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12046 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12047 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;Total ram usage:       70 bytes
 12049 ;; Hardware stack levels used:    1
 12050 ;; Hardware stack levels required when called:    7
 12051 ;; This function calls:
 12052 ;;		_ETH_ReadBlock
 12053 ;;		_ETH_Send
 12054 ;;		_ETH_WriteBlock
 12055 ;;		_ETH_WriteStart
 12056 ;;		_memcpy
 12057 ;; This function is called by:
 12058 ;;		_Network_Read
 12059 ;; This function uses a non-reentrant model
 12060 ;;
 12061                           
 12062                           	psect	text59
 12063  010C10                     __ptext59:
 12064                           	opt stack 0
 12065  010C10                     _ARPV4_Packet:
 12066                           	opt stack 21
 12067                           
 12068                           ;arpv4.c: 103: arpHeader_t header;
 12069                           ;arpv4.c: 104: arpMap_t *entryPointer;
 12070                           ;arpv4.c: 105: bool mergeFlag;
 12071                           ;arpv4.c: 106: uint16_t length;
 12072                           ;arpv4.c: 107: error_msg ret;
 12073                           ;arpv4.c: 109: ret = ERROR;
 12074                           
 12075                           ; BSR set to: 14
 12076                           ;incstack = 0
 12077  010C10  0E00               	movlw	0
 12078  010C12  0100               	movlb	0	; () banked
 12079  010C14  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 12080                           
 12081                           ; BSR set to: 0
 12082                           ;arpv4.c: 111: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
 12083  010C16  0E8A               	movlw	low ARPV4_Packet@header
 12084  010C18  6E13               	movwf	ETH_ReadBlock@buffer,c
 12085  010C1A  0E00               	movlw	high ARPV4_Packet@header
 12086  010C1C  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 12087  010C1E  0E00               	movlw	0
 12088  010C20  6E16               	movwf	ETH_ReadBlock@length+1,c
 12089  010C22  0E1C               	movlw	28
 12090  010C24  6E15               	movwf	ETH_ReadBlock@length,c
 12091  010C26  ECEE  F09E         	call	_ETH_ReadBlock	;wreg free
 12092  010C2A  C013  F080         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
 12093  010C2E  C014  F081         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
 12094                           
 12095                           ;arpv4.c: 112: if(length == sizeof(arpHeader_t))
 12096  010C32  0E1C               	movlw	28
 12097  010C34  0100               	movlb	0	; () banked
 12098  010C36  1980               	xorwf	ARPV4_Packet@length& (0+255),w,b
 12099  010C38  1181               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
 12100  010C3A  A4D8               	btfss	status,2,c
 12101  010C3C  0012               	return	
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;arpv4.c: 113: {
 12105                           ;arpv4.c: 115: mergeFlag = 0;
 12106  010C3E  0E00               	movlw	0
 12107  010C40  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;arpv4.c: 116: entryPointer = arpMap;
 12111  010C42  0E80               	movlw	low _arpMap
 12112  010C44  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 12113  010C46  0E04               	movlw	high _arpMap
 12114  010C48  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;arpv4.c: 118: for(uint8_t x=8; x > 0; x--)
 12118  010C4A  0E08               	movlw	8
 12119  010C4C  6F86               	movwf	ARPV4_Packet@x& (0+255),b
 12120  010C4E                     l8730:
 12121                           
 12122                           ; BSR set to: 0
 12123  010C4E  5186               	movf	ARPV4_Packet@x& (0+255),w,b
 12124  010C50  B4D8               	btfsc	status,2,c
 12125  010C52  D03C               	goto	u8330
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;arpv4.c: 119: {
 12129                           ;arpv4.c: 120: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
 12130                           
 12131                           ; BSR set to: 0
 12132                           
 12133                           ; BSR set to: 0
 12134  010C54  EE20 F006          	lfsr	2,6
 12135  010C58  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 12136  010C5A  26D9               	addwf	fsr2l,f,c
 12137  010C5C  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 12138  010C5E  22DA               	addwfc	fsr2h,f,c
 12139  010C60  50DE               	movf	postinc2,w,c
 12140  010C62  1998               	xorwf	(ARPV4_Packet@header+14)& (0+255),w,b
 12141  010C64  E12D               	bnz	l8744
 12142  010C66  50DE               	movf	postinc2,w,c
 12143  010C68  1999               	xorwf	(ARPV4_Packet@header+15)& (0+255),w,b
 12144  010C6A  E12A               	bnz	l8744
 12145  010C6C  50DE               	movf	postinc2,w,c
 12146  010C6E  199A               	xorwf	(ARPV4_Packet@header+16)& (0+255),w,b
 12147  010C70  E127               	bnz	l8744
 12148  010C72  50DE               	movf	postinc2,w,c
 12149  010C74  199B               	xorwf	(ARPV4_Packet@header+17)& (0+255),w,b
 12150  010C76  A4D8               	btfss	status,2,c
 12151  010C78  D023               	goto	l320
 12152                           
 12153                           ; BSR set to: 0
 12154  010C7A  EE20 F00A          	lfsr	2,10
 12155  010C7E  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 12156  010C80  26D9               	addwf	fsr2l,f,c
 12157  010C82  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 12158  010C84  22DA               	addwfc	fsr2h,f,c
 12159  010C86  50DE               	movf	postinc2,w,c
 12160  010C88  198C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
 12161  010C8A  E11A               	bnz	l8744
 12162  010C8C  50DE               	movf	postinc2,w,c
 12163  010C8E  198D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
 12164  010C90  A4D8               	btfss	status,2,c
 12165  010C92  D016               	goto	l320
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;arpv4.c: 121: {
 12169                           ;arpv4.c: 122: entryPointer->age = 0;
 12170  010C94  EE20 F00C          	lfsr	2,12
 12171  010C98  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 12172  010C9A  26D9               	addwf	fsr2l,f,c
 12173  010C9C  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 12174  010C9E  22DA               	addwfc	fsr2h,f,c
 12175  010CA0  0E00               	movlw	0
 12176  010CA2  6EDF               	movwf	indf2,c
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;arpv4.c: 123: entryPointer->macAddress.s = header.sha.s;
 12180  010CA4  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 12181  010CA8  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 12182  010CAC  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 12183  010CB0  0E05               	movlw	5
 12184  010CB2                     u8321:
 12185  010CB2  CFDB FFE3          	movff	plusw2,plusw1
 12186  010CB6  06E8               	decf	wreg,f,c
 12187  010CB8  E2FC               	bc	u8321
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;arpv4.c: 124: mergeFlag = 1;
 12191  010CBA  0E01               	movlw	1
 12192  010CBC  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 12193                           
 12194                           ;arpv4.c: 125: break;
 12195  010CBE  D006               	goto	u8330
 12196  010CC0                     l320:
 12197  010CC0                     l8744:
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;arpv4.c: 126: }
 12201                           ;arpv4.c: 127: entryPointer++;
 12202  010CC0  0E0D               	movlw	13
 12203  010CC2  2788               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
 12204  010CC4  0E00               	movlw	0
 12205  010CC6  2389               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
 12206                           
 12207                           ; BSR set to: 0
 12208  010CC8  0786               	decf	ARPV4_Packet@x& (0+255),f,b
 12209  010CCA  D7C1               	goto	l8730
 12210  010CCC                     u8330:
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;arpv4.c: 128: }
 12214                           ;arpv4.c: 130: if((ip_database_info.ipv4_myAddress) && ((ip_database_info.ipv4_myAddress
      +                          ) == ((((uint32_t)header.tpa&(uint32_t)0xff000000) >> 24) | (((uint32_t)header.tpa&(uint
      +                          32_t)0x00ff0000) >> 8) | (((uint32_t)header.tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_
      +                          t
 12215                           
 12216                           ; BSR set to: 0
 12217  010CCC  0102               	movlb	2	; () banked
 12218  010CCE  5100               	movf	_ip_database_info& (0+255),w,b
 12219  010CD0  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 12220  010CD2  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 12221  010CD4  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 12222  010CD6  B4D8               	btfsc	status,2,c
 12223  010CD8  D238               	goto	l321
 12224                           
 12225                           ; BSR set to: 2
 12226  010CDA  0EFF               	movlw	255
 12227  010CDC  0100               	movlb	0	; () banked
 12228  010CDE  15A2               	andwf	(ARPV4_Packet@header+24)& (0+255),w,b
 12229  010CE0  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 12230  010CE2  0E00               	movlw	0
 12231  010CE4  15A3               	andwf	(ARPV4_Packet@header+25)& (0+255),w,b
 12232  010CE6  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 12233  010CE8  0E00               	movlw	0
 12234  010CEA  15A4               	andwf	(ARPV4_Packet@header+26)& (0+255),w,b
 12235  010CEC  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 12236  010CEE  0E00               	movlw	0
 12237  010CF0  15A5               	andwf	(ARPV4_Packet@header+27)& (0+255),w,b
 12238  010CF2  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 12239  010CF4  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 12240  010CF8  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 12241  010CFA  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 12242  010CFC  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 12243  010CFE  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 12244  010D02  0E00               	movlw	0
 12245  010D04  14DE               	andwf	postinc2,w,c
 12246  010D06  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 12247  010D08  0EFF               	movlw	255
 12248  010D0A  14DE               	andwf	postinc2,w,c
 12249  010D0C  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 12250  010D0E  0E00               	movlw	0
 12251  010D10  14DE               	andwf	postinc2,w,c
 12252  010D12  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 12253  010D14  0E00               	movlw	0
 12254  010D16  14DE               	andwf	postinc2,w,c
 12255  010D18  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 12256  010D1A  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 12257  010D1E  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 12258  010D22  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 12259  010D26  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 12260  010D28  C0A2  F068         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 12261  010D2C  C0A3  F069         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 12262  010D30  C0A4  F06A         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 12263  010D34  C0A5  F06B         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 12264  010D38  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 12265  010D3C  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 12266  010D40  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 12267  010D44  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 12268  010D46  0E00               	movlw	0
 12269  010D48  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 12270  010D4A  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 12271  010D4C  0EFF               	movlw	255
 12272  010D4E  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 12273  010D50  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 12274  010D52  0E00               	movlw	0
 12275  010D54  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 12276  010D56  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 12277  010D58  0E00               	movlw	0
 12278  010D5A  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 12279  010D5C  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 12280  010D5E  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 12281  010D62  0E00               	movlw	0
 12282  010D64  14DE               	andwf	postinc2,w,c
 12283  010D66  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 12284  010D68  0E00               	movlw	0
 12285  010D6A  14DE               	andwf	postinc2,w,c
 12286  010D6C  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 12287  010D6E  0E00               	movlw	0
 12288  010D70  14DE               	andwf	postinc2,w,c
 12289  010D72  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 12290  010D74  0EFF               	movlw	255
 12291  010D76  14DE               	andwf	postinc2,w,c
 12292  010D78  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 12293  010D7A  0E19               	movlw	25
 12294  010D7C  D005               	goto	u8350
 12295  010D7E                     u8355:
 12296  010D7E  90D8               	bcf	status,0,c
 12297  010D80  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 12298  010D82  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 12299  010D84  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 12300  010D86  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 12301  010D88                     u8350:
 12302  010D88  2EE8               	decfsz	wreg,f,c
 12303  010D8A  D7F9               	goto	u8355
 12304  010D8C  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 12305  010D8E  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 12306  010D90  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 12307  010D92  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 12308  010D94  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 12309  010D96  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 12310  010D98  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 12311  010D9A  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 12312  010D9C  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 12313  010D9E  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 12314  010DA0  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 12315  010DA2  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 12316  010DA4  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 12317  010DA6  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 12318  010DA8  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 12319  010DAA  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 12320  010DAC  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 12321  010DAE  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 12322  010DB0  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 12323  010DB2  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 12324  010DB4  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 12325  010DB6  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 12326  010DB8  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 12327  010DBA  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 12328  010DBC  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 12329  010DBE  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 12330  010DC0  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 12331  010DC2  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 12332  010DC4  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 12333  010DC6  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 12334  010DC8  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 12335  010DCA  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 12336  010DCC  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 12337  010DCE  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 12338  010DD0  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 12339  010DD2  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 12340  010DD4  0102               	movlb	2	; () banked
 12341  010DD6  5100               	movf	_ip_database_info& (0+255),w,b
 12342  010DD8  0100               	movlb	0	; () banked
 12343  010DDA  197C               	xorwf	(??_ARPV4_Packet+28)& (0+255),w,b
 12344  010DDC  E10F               	bnz	u8361
 12345  010DDE  0102               	movlb	2	; () banked
 12346  010DE0  5101               	movf	(_ip_database_info+1)& (0+255),w,b
 12347  010DE2  0100               	movlb	0	; () banked
 12348  010DE4  197D               	xorwf	(??_ARPV4_Packet+29)& (0+255),w,b
 12349  010DE6  E10A               	bnz	u8361
 12350  010DE8  0102               	movlb	2	; () banked
 12351  010DEA  5102               	movf	(_ip_database_info+2)& (0+255),w,b
 12352  010DEC  0100               	movlb	0	; () banked
 12353  010DEE  197E               	xorwf	(??_ARPV4_Packet+30)& (0+255),w,b
 12354  010DF0  E105               	bnz	u8361
 12355  010DF2  0102               	movlb	2	; () banked
 12356  010DF4  5103               	movf	(_ip_database_info+3)& (0+255),w,b
 12357  010DF6  0100               	movlb	0	; () banked
 12358  010DF8  197F               	xorwf	(??_ARPV4_Packet+31)& (0+255),w,b
 12359  010DFA  A4D8               	btfss	status,2,c
 12360  010DFC                     u8361:
 12361  010DFC  D1A6               	goto	l321
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;arpv4.c: 131: {
 12365                           ;arpv4.c: 132: if(!mergeFlag)
 12366  010DFE  5182               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
 12367  010E00  A4D8               	btfss	status,2,c
 12368  010E02  D0CE               	goto	l322
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;arpv4.c: 133: {
 12372                           ;arpv4.c: 135: entryPointer = arpMap;
 12373  010E04  0E80               	movlw	low _arpMap
 12374  010E06  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 12375  010E08  0E04               	movlw	high _arpMap
 12376  010E0A  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 12377                           
 12378                           ;arpv4.c: 136: arpMap_t *arpPtr = arpMap;
 12379  010E0C  0E80               	movlw	low _arpMap
 12380  010E0E  6F84               	movwf	ARPV4_Packet@arpPtr& (0+255),b
 12381  010E10  0E04               	movlw	high _arpMap
 12382  010E12  6F85               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;arpv4.c: 137: for(uint8_t x=8; x !=0; x--)
 12386  010E14  0E08               	movlw	8
 12387  010E16  6F87               	movwf	ARPV4_Packet@x_939& (0+255),b
 12388  010E18                     l8760:
 12389                           
 12390                           ; BSR set to: 0
 12391  010E18  5187               	movf	ARPV4_Packet@x_939& (0+255),w,b
 12392  010E1A  B4D8               	btfsc	status,2,c
 12393  010E1C  D01A               	goto	u8400
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;arpv4.c: 138: {
 12397                           ;arpv4.c: 139: if(entryPointer->age < arpPtr->age)
 12398                           
 12399                           ; BSR set to: 0
 12400                           
 12401                           ; BSR set to: 0
 12402  010E1E  EE20 F00C          	lfsr	2,12
 12403  010E22  5184               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
 12404  010E24  26D9               	addwf	fsr2l,f,c
 12405  010E26  5185               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
 12406  010E28  22DA               	addwfc	fsr2h,f,c
 12407  010E2A  EE10 F00C          	lfsr	1,12
 12408  010E2E  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 12409  010E30  26E1               	addwf	fsr1l,f,c
 12410  010E32  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 12411  010E34  22E2               	addwfc	fsr1h,f,c
 12412  010E36  50DE               	movf	postinc2,w,c
 12413  010E38  5CE6               	subwf	postinc1,w,c
 12414  010E3A  B0D8               	btfsc	status,0,c
 12415  010E3C  D004               	goto	l325
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;arpv4.c: 140: {
 12419                           ;arpv4.c: 141: entryPointer = arpPtr;
 12420  010E3E  C084  F088         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 12421  010E42  C085  F089         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 12422  010E46                     l325:
 12423                           
 12424                           ; BSR set to: 0
 12425                           ;arpv4.c: 142: }
 12426                           ;arpv4.c: 144: arpPtr++;
 12427  010E46  0E0D               	movlw	13
 12428  010E48  2784               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
 12429  010E4A  0E00               	movlw	0
 12430  010E4C  2385               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
 12431                           
 12432                           ; BSR set to: 0
 12433  010E4E  0787               	decf	ARPV4_Packet@x_939& (0+255),f,b
 12434  010E50  D7E3               	goto	l8760
 12435  010E52                     u8400:
 12436                           
 12437                           ; BSR set to: 0
 12438                           ;arpv4.c: 145: }
 12439                           ;arpv4.c: 148: entryPointer->age = 0;
 12440                           
 12441                           ; BSR set to: 0
 12442  010E52  EE20 F00C          	lfsr	2,12
 12443  010E56  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 12444  010E58  26D9               	addwf	fsr2l,f,c
 12445  010E5A  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 12446  010E5C  22DA               	addwfc	fsr2h,f,c
 12447  010E5E  0E00               	movlw	0
 12448  010E60  6EDF               	movwf	indf2,c
 12449                           
 12450                           ; BSR set to: 0
 12451                           ;arpv4.c: 149: entryPointer->macAddress.s = header.sha.s;
 12452  010E62  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 12453  010E66  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 12454  010E6A  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 12455  010E6E  0E05               	movlw	5
 12456  010E70                     u8411:
 12457  010E70  CFDB FFE3          	movff	plusw2,plusw1
 12458  010E74  06E8               	decf	wreg,f,c
 12459  010E76  E2FC               	bc	u8411
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;arpv4.c: 150: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 12463  010E78  0EFF               	movlw	255
 12464  010E7A  1598               	andwf	(ARPV4_Packet@header+14)& (0+255),w,b
 12465  010E7C  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 12466  010E7E  0E00               	movlw	0
 12467  010E80  1599               	andwf	(ARPV4_Packet@header+15)& (0+255),w,b
 12468  010E82  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 12469  010E84  0E00               	movlw	0
 12470  010E86  159A               	andwf	(ARPV4_Packet@header+16)& (0+255),w,b
 12471  010E88  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 12472  010E8A  0E00               	movlw	0
 12473  010E8C  159B               	andwf	(ARPV4_Packet@header+17)& (0+255),w,b
 12474  010E8E  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 12475  010E90  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 12476  010E94  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 12477  010E96  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 12478  010E98  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 12479  010E9A  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 12480  010E9E  0E00               	movlw	0
 12481  010EA0  14DE               	andwf	postinc2,w,c
 12482  010EA2  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 12483  010EA4  0EFF               	movlw	255
 12484  010EA6  14DE               	andwf	postinc2,w,c
 12485  010EA8  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 12486  010EAA  0E00               	movlw	0
 12487  010EAC  14DE               	andwf	postinc2,w,c
 12488  010EAE  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 12489  010EB0  0E00               	movlw	0
 12490  010EB2  14DE               	andwf	postinc2,w,c
 12491  010EB4  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 12492  010EB6  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 12493  010EBA  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 12494  010EBE  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 12495  010EC2  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 12496  010EC4  C098  F068         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 12497  010EC8  C099  F069         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 12498  010ECC  C09A  F06A         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 12499  010ED0  C09B  F06B         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 12500  010ED4  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 12501  010ED8  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 12502  010EDC  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 12503  010EE0  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 12504  010EE2  0E00               	movlw	0
 12505  010EE4  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 12506  010EE6  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 12507  010EE8  0EFF               	movlw	255
 12508  010EEA  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 12509  010EEC  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 12510  010EEE  0E00               	movlw	0
 12511  010EF0  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 12512  010EF2  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 12513  010EF4  0E00               	movlw	0
 12514  010EF6  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 12515  010EF8  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 12516  010EFA  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 12517  010EFE  0E00               	movlw	0
 12518  010F00  14DE               	andwf	postinc2,w,c
 12519  010F02  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 12520  010F04  0E00               	movlw	0
 12521  010F06  14DE               	andwf	postinc2,w,c
 12522  010F08  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 12523  010F0A  0E00               	movlw	0
 12524  010F0C  14DE               	andwf	postinc2,w,c
 12525  010F0E  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 12526  010F10  0EFF               	movlw	255
 12527  010F12  14DE               	andwf	postinc2,w,c
 12528  010F14  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 12529  010F16  0E19               	movlw	25
 12530  010F18  D005               	goto	u8420
 12531  010F1A                     u8425:
 12532  010F1A  90D8               	bcf	status,0,c
 12533  010F1C  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 12534  010F1E  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 12535  010F20  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 12536  010F22  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 12537  010F24                     u8420:
 12538  010F24  2EE8               	decfsz	wreg,f,c
 12539  010F26  D7F9               	goto	u8425
 12540  010F28  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 12541  010F2A  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 12542  010F2C  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 12543  010F2E  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 12544  010F30  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 12545  010F32  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 12546  010F34  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 12547  010F36  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 12548  010F38  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 12549  010F3A  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 12550  010F3C  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 12551  010F3E  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 12552  010F40  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 12553  010F42  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 12554  010F44  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 12555  010F46  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 12556  010F48  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 12557  010F4A  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 12558  010F4C  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 12559  010F4E  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 12560  010F50  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 12561  010F52  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 12562  010F54  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 12563  010F56  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 12564  010F58  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 12565  010F5A  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 12566  010F5C  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 12567  010F5E  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 12568  010F60  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 12569  010F62  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 12570  010F64  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 12571  010F66  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 12572  010F68  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 12573  010F6A  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 12574  010F6C  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 12575  010F6E  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 12576  010F70  EE20 F006          	lfsr	2,6
 12577  010F74  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 12578  010F76  26D9               	addwf	fsr2l,f,c
 12579  010F78  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 12580  010F7A  22DA               	addwfc	fsr2h,f,c
 12581  010F7C  C07C  FFDE         	movff	??_ARPV4_Packet+28,postinc2
 12582  010F80  C07D  FFDE         	movff	??_ARPV4_Packet+29,postinc2
 12583  010F84  C07E  FFDE         	movff	??_ARPV4_Packet+30,postinc2
 12584  010F88  C07F  FFDE         	movff	??_ARPV4_Packet+31,postinc2
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;arpv4.c: 151: entryPointer->protocolType = header.ptype;
 12588  010F8C  EE20 F00A          	lfsr	2,10
 12589  010F90  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 12590  010F92  26D9               	addwf	fsr2l,f,c
 12591  010F94  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 12592  010F96  22DA               	addwfc	fsr2h,f,c
 12593  010F98  C08C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 12594  010F9C  C08D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 12595  010FA0                     l322:
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;arpv4.c: 152: }
 12599                           ;arpv4.c: 153: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
 12600                           
 12601                           ; BSR set to: 0
 12602  010FA0  0591               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
 12603  010FA2  1190               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
 12604  010FA4  A4D8               	btfss	status,2,c
 12605  010FA6  0012               	return	
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;arpv4.c: 154: {
 12609                           ;arpv4.c: 155: ret = ETH_WriteStart(&header.sha ,0x0806);
 12610  010FA8  0E92               	movlw	low (ARPV4_Packet@header+8)
 12611  010FAA  6E25               	movwf	ETH_WriteStart@dest_mac,c
 12612  010FAC  0E00               	movlw	high (ARPV4_Packet@header+8)
 12613  010FAE  6E26               	movwf	ETH_WriteStart@dest_mac+1,c
 12614  010FB0  0E08               	movlw	8
 12615  010FB2  6E28               	movwf	ETH_WriteStart@type+1,c
 12616  010FB4  0E06               	movlw	6
 12617  010FB6  6E27               	movwf	ETH_WriteStart@type,c
 12618  010FB8  EC53  F090         	call	_ETH_WriteStart	;wreg free
 12619  010FBC  0100               	movlb	0	; () banked
 12620  010FBE  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;arpv4.c: 156: if(ret == SUCCESS)
 12624  010FC0  0583               	decf	ARPV4_Packet@ret& (0+255),w,b
 12625  010FC2  A4D8               	btfss	status,2,c
 12626  010FC4  0012               	return	
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;arpv4.c: 157: {
 12630                           ;arpv4.c: 159: header.tha.s = header.sha.s;
 12631  010FC6  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 12632  010FCA  EE10  F09C         	lfsr	1,ARPV4_Packet@header+18
 12633  010FCE  0E05               	movlw	5
 12634  010FD0                     u8451:
 12635  010FD0  CFDB FFE3          	movff	plusw2,plusw1
 12636  010FD4  06E8               	decf	wreg,f,c
 12637  010FD6  E2FC               	bc	u8451
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;arpv4.c: 160: memcpy((void*)&header.sha.s, (void*)&hostMacAddress.s, sizeof(mac48Addres
      +                          s_t));
 12641  010FD8  0E92               	movlw	low (ARPV4_Packet@header+8)
 12642  010FDA  6E13               	movwf	memcpy@d1,c
 12643  010FDC  0E00               	movlw	high (ARPV4_Packet@header+8)
 12644  010FDE  6E14               	movwf	memcpy@d1+1,c
 12645  010FE0  0E73               	movlw	low _hostMacAddress
 12646  010FE2  6E15               	movwf	memcpy@s1,c
 12647  010FE4  0E02               	movlw	high _hostMacAddress
 12648  010FE6  6E16               	movwf	memcpy@s1+1,c
 12649  010FE8  0E00               	movlw	0
 12650  010FEA  6E18               	movwf	memcpy@n+1,c
 12651  010FEC  0E06               	movlw	6
 12652  010FEE  6E17               	movwf	memcpy@n,c
 12653  010FF0  ECD7  F09F         	call	_memcpy	;wreg free
 12654                           
 12655                           ;arpv4.c: 161: header.tpa = header.spa;
 12656  010FF4  C098  F0A2         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 12657  010FF8  C099  F0A3         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 12658  010FFC  C09A  F0A4         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 12659  011000  C09B  F0A5         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 12660                           
 12661                           ;arpv4.c: 162: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
 12662  011004  0EFF               	movlw	255
 12663  011006  0102               	movlb	2	; () banked
 12664  011008  1500               	andwf	_ip_database_info& (0+255),w,b
 12665  01100A  0100               	movlb	0	; () banked
 12666  01100C  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 12667  01100E  0E00               	movlw	0
 12668  011010  0102               	movlb	2	; () banked
 12669  011012  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 12670  011014  0100               	movlb	0	; () banked
 12671  011016  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 12672  011018  0E00               	movlw	0
 12673  01101A  0102               	movlb	2	; () banked
 12674  01101C  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 12675  01101E  0100               	movlb	0	; () banked
 12676  011020  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 12677  011022  0E00               	movlw	0
 12678  011024  0102               	movlb	2	; () banked
 12679  011026  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 12680  011028  0100               	movlb	0	; () banked
 12681  01102A  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 12682  01102C  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 12683  011030  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 12684  011032  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 12685  011034  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 12686  011036  0E00               	movlw	0
 12687  011038  0102               	movlb	2	; () banked
 12688  01103A  1500               	andwf	_ip_database_info& (0+255),w,b
 12689  01103C  0100               	movlb	0	; () banked
 12690  01103E  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 12691  011040  0EFF               	movlw	255
 12692  011042  0102               	movlb	2	; () banked
 12693  011044  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 12694  011046  0100               	movlb	0	; () banked
 12695  011048  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 12696  01104A  0E00               	movlw	0
 12697  01104C  0102               	movlb	2	; () banked
 12698  01104E  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 12699  011050  0100               	movlb	0	; () banked
 12700  011052  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 12701  011054  0E00               	movlw	0
 12702  011056  0102               	movlb	2	; () banked
 12703  011058  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 12704  01105A  0100               	movlb	0	; () banked
 12705  01105C  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 12706  01105E  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 12707  011062  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 12708  011066  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 12709  01106A  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 12710  01106C  C200  F068         	movff	_ip_database_info,??_ARPV4_Packet+8
 12711  011070  C201  F069         	movff	_ip_database_info+1,??_ARPV4_Packet+9
 12712  011074  C202  F06A         	movff	_ip_database_info+2,??_ARPV4_Packet+10
 12713  011078  C203  F06B         	movff	_ip_database_info+3,??_ARPV4_Packet+11
 12714  01107C  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 12715  011080  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 12716  011084  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 12717  011088  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 12718  01108A  0E00               	movlw	0
 12719  01108C  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 12720  01108E  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 12721  011090  0EFF               	movlw	255
 12722  011092  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 12723  011094  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 12724  011096  0E00               	movlw	0
 12725  011098  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 12726  01109A  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 12727  01109C  0E00               	movlw	0
 12728  01109E  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 12729  0110A0  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 12730  0110A2  0E00               	movlw	0
 12731  0110A4  0102               	movlb	2	; () banked
 12732  0110A6  1500               	andwf	_ip_database_info& (0+255),w,b
 12733  0110A8  0100               	movlb	0	; () banked
 12734  0110AA  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 12735  0110AC  0E00               	movlw	0
 12736  0110AE  0102               	movlb	2	; () banked
 12737  0110B0  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 12738  0110B2  0100               	movlb	0	; () banked
 12739  0110B4  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 12740  0110B6  0E00               	movlw	0
 12741  0110B8  0102               	movlb	2	; () banked
 12742  0110BA  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 12743  0110BC  0100               	movlb	0	; () banked
 12744  0110BE  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 12745  0110C0  0EFF               	movlw	255
 12746  0110C2  0102               	movlb	2	; () banked
 12747  0110C4  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 12748  0110C6  0100               	movlb	0	; () banked
 12749  0110C8  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 12750  0110CA  0E19               	movlw	25
 12751  0110CC  D005               	goto	u8460
 12752  0110CE                     u8465:
 12753  0110CE  90D8               	bcf	status,0,c
 12754  0110D0  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 12755  0110D2  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 12756  0110D4  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 12757  0110D6  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 12758  0110D8                     u8460:
 12759  0110D8  2EE8               	decfsz	wreg,f,c
 12760  0110DA  D7F9               	goto	u8465
 12761  0110DC  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 12762  0110DE  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 12763  0110E0  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 12764  0110E2  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 12765  0110E4  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 12766  0110E6  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 12767  0110E8  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 12768  0110EA  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 12769  0110EC  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 12770  0110EE  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 12771  0110F0  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 12772  0110F2  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 12773  0110F4  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 12774  0110F6  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 12775  0110F8  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 12776  0110FA  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 12777  0110FC  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 12778  0110FE  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 12779  011100  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 12780  011102  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 12781  011104  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 12782  011106  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 12783  011108  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 12784  01110A  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 12785  01110C  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 12786  01110E  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 12787  011110  6F98               	movwf	(ARPV4_Packet@header+14)& (0+255),b
 12788  011112  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 12789  011114  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 12790  011116  6F99               	movwf	(ARPV4_Packet@header+15)& (0+255),b
 12791  011118  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 12792  01111A  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 12793  01111C  6F9A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
 12794  01111E  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 12795  011120  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 12796  011122  6F9B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;arpv4.c: 163: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 12800  011124  0E02               	movlw	2
 12801  011126  6F91               	movwf	(ARPV4_Packet@header+7)& (0+255),b
 12802  011128  0E00               	movlw	0
 12803  01112A  6F90               	movwf	(ARPV4_Packet@header+6)& (0+255),b
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;arpv4.c: 164: ETH_WriteBlock((char*)&header,sizeof(header));
 12807  01112C  0E8A               	movlw	low ARPV4_Packet@header
 12808  01112E  6E13               	movwf	ETH_WriteBlock@buffer,c
 12809  011130  0E00               	movlw	high ARPV4_Packet@header
 12810  011132  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 12811  011134  0E00               	movlw	0
 12812  011136  6E16               	movwf	ETH_WriteBlock@length+1,c
 12813  011138  0E1C               	movlw	28
 12814  01113A  6E15               	movwf	ETH_WriteBlock@length,c
 12815  01113C  EC74  F0A0         	call	_ETH_WriteBlock	;wreg free
 12816                           
 12817                           ;arpv4.c: 167: ret = ETH_Send();
 12818  011140  EC29  F09A         	call	_ETH_Send	;wreg free
 12819  011144  0100               	movlb	0	; () banked
 12820  011146  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 12821                           
 12822                           ; BSR set to: 0
 12823                           ;arpv4.c: 168: }
 12824                           ;arpv4.c: 169: }
 12825                           ;arpv4.c: 170: }
 12826                           
 12827                           ; BSR set to: 0
 12828  011148  0012               	return	
 12829  01114A                     l321:
 12830                           
 12831                           ;arpv4.c: 171: else
 12832                           ;arpv4.c: 172: {
 12833                           ;arpv4.c: 173: ret = ARP_IP_NOT_MATCHED;
 12834                           
 12835                           ; BSR set to: 0
 12836  01114A  0E0E               	movlw	14
 12837  01114C  0100               	movlb	0	; () banked
 12838  01114E  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 12839                           
 12840                           ; BSR set to: 0
 12841                           
 12842                           ; BSR set to: 0
 12843  011150  0012               	return	
 12844  011152                     __end_of_ARPV4_Packet:
 12845                           	opt stack 0
 12846                           tosu	equ	0xFFF
 12847                           tosh	equ	0xFFE
 12848                           tosl	equ	0xFFD
 12849                           pclath	equ	0xFFA
 12850                           tblptru	equ	0xFF8
 12851                           tblptrh	equ	0xFF7
 12852                           tblptrl	equ	0xFF6
 12853                           tablat	equ	0xFF5
 12854                           prodh	equ	0xFF4
 12855                           prodl	equ	0xFF3
 12856                           intcon	equ	0xFF2
 12857                           indf0	equ	0xFEF
 12858                           postinc0	equ	0xFEE
 12859                           fsr0h	equ	0xFEA
 12860                           fsr0l	equ	0xFE9
 12861                           wreg	equ	0xFE8
 12862                           postinc1	equ	0xFE6
 12863                           postdec1	equ	0xFE5
 12864                           plusw1	equ	0xFE3
 12865                           fsr1h	equ	0xFE2
 12866                           fsr1l	equ	0xFE1
 12867                           indf2	equ	0xFDF
 12868                           postinc2	equ	0xFDE
 12869                           postdec2	equ	0xFDD
 12870                           plusw2	equ	0xFDB
 12871                           fsr2h	equ	0xFDA
 12872                           fsr2l	equ	0xFD9
 12873                           status	equ	0xFD8
 12874                           
 12875 ;; *************** function _ETH_ReadBlock *****************
 12876 ;; Defined at:
 12877 ;;		line 520 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;  buffer          2   18[COMRAM] PTR void 
 12880 ;;		 -> DHCP_Handler@chaddr(16), udpHeader(8), ICMP_Receive@icmpHdr(4), Network_Read@header(14), 
 12881 ;;		 -> ipv4Header(20), ARPV4_Packet@header(28), 
 12882 ;;  length          2   20[COMRAM] unsigned int 
 12883 ;; Auto vars:     Size  Location     Type
 12884 ;;  p               2   24[COMRAM] PTR unsigned char 
 12885 ;;		 -> DHCP_Handler@chaddr(16), udpHeader(8), ICMP_Receive@icmpHdr(4), Network_Read@header(14), 
 12886 ;;		 -> ipv4Header(20), ARPV4_Packet@header(28), 
 12887 ;;  len             2   22[COMRAM] unsigned int 
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  2   18[COMRAM] unsigned int 
 12890 ;; Registers used:
 12891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12900 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12901 ;;Total ram usage:        8 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:    5
 12904 ;; This function calls:
 12905 ;;		_ETH_EdataRead
 12906 ;; This function is called by:
 12907 ;;		_ARPV4_Packet
 12908 ;;		_IPV4_Packet
 12909 ;;		_Network_Read
 12910 ;;		_ICMP_Receive
 12911 ;;		_UDP_Receive
 12912 ;;		_DHCP_Handler
 12913 ;; This function uses a non-reentrant model
 12914 ;;
 12915                           
 12916                           	psect	text60
 12917  013DDC                     __ptext60:
 12918                           	opt stack 0
 12919  013DDC                     _ETH_ReadBlock:
 12920                           	opt stack 21
 12921                           
 12922                           ;ETHxxJ6x_driver.c: 522: uint16_t len = 0;
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;incstack = 0
 12926  013DDC  0E00               	movlw	0
 12927  013DDE  6E18               	movwf	ETH_ReadBlock@len+1,c
 12928  013DE0  0E00               	movlw	0
 12929  013DE2  6E17               	movwf	ETH_ReadBlock@len,c
 12930                           
 12931                           ;ETHxxJ6x_driver.c: 523: char *p = buffer;
 12932  013DE4  C013  F019         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 12933  013DE8  C014  F01A         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 12934                           
 12935                           ;ETHxxJ6x_driver.c: 524: while(rxPacketStatusVector.byteCount && length)
 12936  013DEC  D013               	goto	l572
 12937  013DEE                     
 12938                           ;ETHxxJ6x_driver.c: 525: {
 12939                           ;ETHxxJ6x_driver.c: 526: *p++ = ETH_EdataRead();
 12940  013DEE  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 12941  013DF2  C019  FFD9         	movff	ETH_ReadBlock@p,fsr2l
 12942  013DF6  C01A  FFDA         	movff	ETH_ReadBlock@p+1,fsr2h
 12943  013DFA  6EDF               	movwf	indf2,c
 12944  013DFC  4A19               	infsnz	ETH_ReadBlock@p,f,c
 12945  013DFE  2A1A               	incf	ETH_ReadBlock@p+1,f,c
 12946                           
 12947                           ;ETHxxJ6x_driver.c: 527: len ++;
 12948  013E00  4A17               	infsnz	ETH_ReadBlock@len,f,c
 12949  013E02  2A18               	incf	ETH_ReadBlock@len+1,f,c
 12950                           
 12951                           ;ETHxxJ6x_driver.c: 528: length --;
 12952  013E04  0615               	decf	ETH_ReadBlock@length,f,c
 12953  013E06  A0D8               	btfss	status,0,c
 12954  013E08  0616               	decf	ETH_ReadBlock@length+1,f,c
 12955                           
 12956                           ;ETHxxJ6x_driver.c: 529: rxPacketStatusVector.byteCount --;
 12957  013E0A  0102               	movlb	2	; () banked
 12958  013E0C  073A               	decf	_rxPacketStatusVector& (0+255),f,b
 12959  013E0E  A0D8               	btfss	status,0,c
 12960  013E10  073B               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
 12961                           
 12962                           ; BSR set to: 2
 12963                           ;ETHxxJ6x_driver.c: 530: ethData.error = 0;
 12964  013E12  9124               	bcf	_ethData& (0+255),0,b	;volatile
 12965  013E14                     l572:
 12966                           
 12967                           ; BSR set to: 2
 12968  013E14  0102               	movlb	2	; () banked
 12969  013E16  513A               	movf	_rxPacketStatusVector& (0+255),w,b
 12970  013E18  113B               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 12971  013E1A  B4D8               	btfsc	status,2,c
 12972  013E1C  D004               	goto	u6910
 12973                           
 12974                           ; BSR set to: 2
 12975  013E1E  5015               	movf	ETH_ReadBlock@length,w,c
 12976  013E20  1016               	iorwf	ETH_ReadBlock@length+1,w,c
 12977  013E22  A4D8               	btfss	status,2,c
 12978  013E24  D7E4               	goto	l573
 12979  013E26                     u6910:
 12980                           
 12981                           ; BSR set to: 2
 12982                           ;ETHxxJ6x_driver.c: 531: }
 12983                           ;ETHxxJ6x_driver.c: 532: return len;
 12984                           
 12985                           ; BSR set to: 2
 12986  013E26  C017  F013         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 12987  013E2A  C018  F014         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 12988                           
 12989                           ; BSR set to: 2
 12990  013E2E  0012               	return		;funcret
 12991  013E30                     __end_of_ETH_ReadBlock:
 12992                           	opt stack 0
 12993                           tosu	equ	0xFFF
 12994                           tosh	equ	0xFFE
 12995                           tosl	equ	0xFFD
 12996                           pclath	equ	0xFFA
 12997                           tblptru	equ	0xFF8
 12998                           tblptrh	equ	0xFF7
 12999                           tblptrl	equ	0xFF6
 13000                           tablat	equ	0xFF5
 13001                           prodh	equ	0xFF4
 13002                           prodl	equ	0xFF3
 13003                           intcon	equ	0xFF2
 13004                           indf0	equ	0xFEF
 13005                           postinc0	equ	0xFEE
 13006                           fsr0h	equ	0xFEA
 13007                           fsr0l	equ	0xFE9
 13008                           wreg	equ	0xFE8
 13009                           postinc1	equ	0xFE6
 13010                           postdec1	equ	0xFE5
 13011                           plusw1	equ	0xFE3
 13012                           fsr1h	equ	0xFE2
 13013                           fsr1l	equ	0xFE1
 13014                           indf2	equ	0xFDF
 13015                           postinc2	equ	0xFDE
 13016                           postdec2	equ	0xFDD
 13017                           plusw2	equ	0xFDB
 13018                           fsr2h	equ	0xFDA
 13019                           fsr2l	equ	0xFD9
 13020                           status	equ	0xFD8
 13021                           
 13022 ;; *************** function _ETH_EventHandler *****************
 13023 ;; Defined at:
 13024 ;;		line 263 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13025 ;; Parameters:    Size  Location     Type
 13026 ;;		None
 13027 ;; Auto vars:     Size  Location     Type
 13028 ;;		None
 13029 ;; Return value:  Size  Location     Type
 13030 ;;                  1    wreg      void 
 13031 ;; Registers used:
 13032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13033 ;; Tracked objects:
 13034 ;;		On entry : 0/0
 13035 ;;		On exit  : 0/0
 13036 ;;		Unchanged: 0/0
 13037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13042 ;;Total ram usage:        0 bytes
 13043 ;; Hardware stack levels used:    1
 13044 ;; Hardware stack levels required when called:    7
 13045 ;; This function calls:
 13046 ;;		_ETH_CheckLinkUp
 13047 ;;		_ETH_RemovePacket
 13048 ;;		_ETH_SendQueued
 13049 ;;		_ETH_Shift_Tx_Packets
 13050 ;;		_PHY_Read
 13051 ;; This function is called by:
 13052 ;;		_Network_Manage
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           	psect	text61
 13057  013C7A                     __ptext61:
 13058                           	opt stack 0
 13059  013C7A                     _ETH_EventHandler:
 13060                           	opt stack 22
 13061                           
 13062                           ;ETHxxJ6x_driver.c: 266: PIR2bits.ETHIF = 0;
 13063                           
 13064                           ; BSR set to: 2
 13065                           ;incstack = 0
 13066  013C7A  9AA1               	bcf	4001,5,c	;volatile
 13067                           
 13068                           ;ETHxxJ6x_driver.c: 268: if (EIRbits.LINKIF)
 13069  013C7C  A860               	btfss	3936,4,c	;volatile
 13070  013C7E  D007               	goto	l511
 13071                           
 13072                           ;ETHxxJ6x_driver.c: 269: {
 13073                           ;ETHxxJ6x_driver.c: 270: PHY_Read(PHIR);
 13074  013C80  0E13               	movlw	19
 13075  013C82  EC73  F09C         	call	_PHY_Read
 13076                           
 13077                           ;ETHxxJ6x_driver.c: 272: ethData.linkChange = 1;
 13078  013C86  0102               	movlb	2	; () banked
 13079  013C88  8924               	bsf	_ethData& (0+255),4,b	;volatile
 13080                           
 13081                           ;ETHxxJ6x_driver.c: 274: ETH_CheckLinkUp();
 13082  013C8A  EC81  F0A1         	call	_ETH_CheckLinkUp	;wreg free
 13083  013C8E                     l511:
 13084                           
 13085                           ;ETHxxJ6x_driver.c: 275: }
 13086                           ;ETHxxJ6x_driver.c: 277: if(EIRbits.RXERIF)
 13087  013C8E  B060               	btfsc	3936,0,c	;volatile
 13088                           
 13089                           ;ETHxxJ6x_driver.c: 278: {
 13090                           ;ETHxxJ6x_driver.c: 281: EIRbits.RXERIF = 0;
 13091  013C90  9060               	bcf	3936,0,c	;volatile
 13092                           
 13093                           ;ETHxxJ6x_driver.c: 282: }
 13094                           ;ETHxxJ6x_driver.c: 284: if (EIRbits.TXERIF)
 13095  013C92  B260               	btfsc	3936,1,c	;volatile
 13096                           
 13097                           ;ETHxxJ6x_driver.c: 285: {
 13098                           ;ETHxxJ6x_driver.c: 286: EIRbits.TXERIF = 0;
 13099  013C94  9260               	bcf	3936,1,c	;volatile
 13100                           
 13101                           ;ETHxxJ6x_driver.c: 287: }
 13102                           ;ETHxxJ6x_driver.c: 289: if(EIRbits.TXIF)
 13103  013C96  A660               	btfss	3936,3,c	;volatile
 13104  013C98  D014               	goto	l515
 13105                           
 13106                           ;ETHxxJ6x_driver.c: 290: {
 13107                           ;ETHxxJ6x_driver.c: 291: EIRbits.TXIF = 0;
 13108  013C9A  9660               	bcf	3936,3,c	;volatile
 13109                           
 13110                           ;ETHxxJ6x_driver.c: 292: ETH_RemovePacket( (uint16_t)pTail );
 13111  013C9C  C040  F013         	movff	_pTail,ETH_RemovePacket@packetHandle
 13112  013CA0  C041  F014         	movff	_pTail+1,ETH_RemovePacket@packetHandle+1
 13113  013CA4  EC85  F098         	call	_ETH_RemovePacket	;wreg free
 13114                           
 13115                           ;ETHxxJ6x_driver.c: 293: if( ethListSize > 0 )
 13116  013CA8  5045               	movf	_ethListSize,w,c
 13117  013CAA  B4D8               	btfsc	status,2,c
 13118  013CAC  D00A               	goto	l515
 13119                           
 13120                           ;ETHxxJ6x_driver.c: 294: {
 13121                           ;ETHxxJ6x_driver.c: 295: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 13122  013CAE  0E0C               	movlw	12
 13123  013CB0  010E               	movlb	14	; () banked
 13124  013CB2  5DE2               	subwf	226,w,b	;volatile
 13125  013CB4  0E1A               	movlw	26
 13126  013CB6  59E3               	subwfb	227,w,b	;volatile
 13127  013CB8  B0D8               	btfsc	status,0,c
 13128                           
 13129                           ; BSR set to: 14
 13130                           ;ETHxxJ6x_driver.c: 296: {
 13131                           ;ETHxxJ6x_driver.c: 298: ETH_Shift_Tx_Packets();
 13132  013CBA  EC51  F094         	call	_ETH_Shift_Tx_Packets	;wreg free
 13133                           
 13134                           ;ETHxxJ6x_driver.c: 299: }
 13135                           ;ETHxxJ6x_driver.c: 302: ETH_SendQueued();
 13136  013CBE  ECF7  F09B         	call	_ETH_SendQueued	;wreg free
 13137  013CC2                     l515:
 13138                           
 13139                           ;ETHxxJ6x_driver.c: 303: }
 13140                           ;ETHxxJ6x_driver.c: 304: }
 13141                           ;ETHxxJ6x_driver.c: 306: if (EIRbits.PKTIF)
 13142  013CC2  AC60               	btfss	3936,6,c	;volatile
 13143  013CC4  0012               	return	
 13144                           
 13145                           ;ETHxxJ6x_driver.c: 307: {
 13146                           ;ETHxxJ6x_driver.c: 309: if(ethData.pktReady == 0)
 13147  013CC6  0102               	movlb	2	; () banked
 13148  013CC8  B324               	btfsc	_ethData& (0+255),1,b	;volatile
 13149  013CCA  0012               	return	
 13150                           
 13151                           ; BSR set to: 2
 13152                           ;ETHxxJ6x_driver.c: 310: {
 13153                           ;ETHxxJ6x_driver.c: 311: ethData.pktReady = 1;
 13154  013CCC  8324               	bsf	_ethData& (0+255),1,b	;volatile
 13155                           
 13156                           ;ETHxxJ6x_driver.c: 312: EIEbits.PKTIE = 0;
 13157  013CCE  010E               	movlb	14	; () banked
 13158  013CD0  9DFB               	bcf	251,6,b	;volatile
 13159                           
 13160                           ; BSR set to: 14
 13161  013CD2  0012               	return	
 13162  013CD4                     __end_of_ETH_EventHandler:
 13163                           	opt stack 0
 13164                           tosu	equ	0xFFF
 13165                           tosh	equ	0xFFE
 13166                           tosl	equ	0xFFD
 13167                           pclath	equ	0xFFA
 13168                           tblptru	equ	0xFF8
 13169                           tblptrh	equ	0xFF7
 13170                           tblptrl	equ	0xFF6
 13171                           tablat	equ	0xFF5
 13172                           prodh	equ	0xFF4
 13173                           prodl	equ	0xFF3
 13174                           intcon	equ	0xFF2
 13175                           indf0	equ	0xFEF
 13176                           postinc0	equ	0xFEE
 13177                           fsr0h	equ	0xFEA
 13178                           fsr0l	equ	0xFE9
 13179                           wreg	equ	0xFE8
 13180                           postinc1	equ	0xFE6
 13181                           postdec1	equ	0xFE5
 13182                           plusw1	equ	0xFE3
 13183                           fsr1h	equ	0xFE2
 13184                           fsr1l	equ	0xFE1
 13185                           indf2	equ	0xFDF
 13186                           postinc2	equ	0xFDE
 13187                           postdec2	equ	0xFDD
 13188                           plusw2	equ	0xFDB
 13189                           fsr2h	equ	0xFDA
 13190                           fsr2l	equ	0xFD9
 13191                           status	equ	0xFD8
 13192                           
 13193 ;; *************** function _ETH_RemovePacket *****************
 13194 ;; Defined at:
 13195 ;;		line 1232 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13196 ;; Parameters:    Size  Location     Type
 13197 ;;  packetHandle    2   18[COMRAM] unsigned int 
 13198 ;; Auto vars:     Size  Location     Type
 13199 ;;  pPacket         2   22[COMRAM] PTR struct .
 13200 ;;		 -> RAM(3935), NULL(0), 
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  1    wreg      void 
 13203 ;; Registers used:
 13204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13213 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13214 ;;Total ram usage:        6 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:    4
 13217 ;; This function calls:
 13218 ;;		Nothing
 13219 ;; This function is called by:
 13220 ;;		_ETH_EventHandler
 13221 ;; This function uses a non-reentrant model
 13222 ;;
 13223                           
 13224                           	psect	text62
 13225  01310A                     __ptext62:
 13226                           	opt stack 0
 13227  01310A                     _ETH_RemovePacket:
 13228                           	opt stack 24
 13229                           
 13230                           ;ETHxxJ6x_driver.c: 1234: txPacket_t* pPacket = (0);
 13231                           
 13232                           ;incstack = 0
 13233  01310A  0E00               	movlw	0
 13234  01310C  6E17               	movwf	ETH_RemovePacket@pPacket,c
 13235  01310E  0E00               	movlw	0
 13236  013110  6E18               	movwf	ETH_RemovePacket@pPacket+1,c
 13237                           
 13238                           ;ETHxxJ6x_driver.c: 1239: if( (packetHandle == (0)) || (ethListSize == 0) )
 13239  013112  5013               	movf	ETH_RemovePacket@packetHandle,w,c
 13240  013114  1014               	iorwf	ETH_RemovePacket@packetHandle+1,w,c
 13241  013116  B4D8               	btfsc	status,2,c
 13242  013118  0012               	return	
 13243  01311A  5045               	movf	_ethListSize,w,c
 13244  01311C  B4D8               	btfsc	status,2,c
 13245  01311E  0012               	return	
 13246                           
 13247                           ;ETHxxJ6x_driver.c: 1242: }
 13248                           ;ETHxxJ6x_driver.c: 1244: pPacket = (txPacket_t*)packetHandle;
 13249                           
 13250                           ;ETHxxJ6x_driver.c: 1240: {
 13251                           ;ETHxxJ6x_driver.c: 1241: return;
 13252  013120  C013  F017         	movff	ETH_RemovePacket@packetHandle,ETH_RemovePacket@pPacket
 13253  013124  C014  F018         	movff	ETH_RemovePacket@packetHandle+1,ETH_RemovePacket@pPacket+1
 13254                           
 13255                           ;ETHxxJ6x_driver.c: 1262: if( pPacket->nextPacket == (0) )
 13256  013128  EE20 F008          	lfsr	2,8
 13257  01312C  5017               	movf	ETH_RemovePacket@pPacket,w,c
 13258  01312E  26D9               	addwf	fsr2l,f,c
 13259  013130  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 13260  013132  22DA               	addwfc	fsr2h,f,c
 13261  013134  50DE               	movf	postinc2,w,c
 13262  013136  10DE               	iorwf	postinc2,w,c
 13263  013138  A4D8               	btfss	status,2,c
 13264  01313A  D018               	goto	l789
 13265                           
 13266                           ;ETHxxJ6x_driver.c: 1263: {
 13267                           ;ETHxxJ6x_driver.c: 1264: pTail = pPacket->prevPacket;
 13268  01313C  EE20 F006          	lfsr	2,6
 13269  013140  5017               	movf	ETH_RemovePacket@pPacket,w,c
 13270  013142  26D9               	addwf	fsr2l,f,c
 13271  013144  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 13272  013146  22DA               	addwfc	fsr2h,f,c
 13273  013148  CFDE F040          	movff	postinc2,_pTail
 13274  01314C  CFDD F041          	movff	postdec2,_pTail+1
 13275                           
 13276                           ;ETHxxJ6x_driver.c: 1265: if( pTail != (0) )
 13277  013150  5040               	movf	_pTail,w,c
 13278  013152  1041               	iorwf	_pTail+1,w,c
 13279  013154  B4D8               	btfsc	status,2,c
 13280  013156  D00A               	goto	l789
 13281                           
 13282                           ;ETHxxJ6x_driver.c: 1266: {
 13283                           ;ETHxxJ6x_driver.c: 1267: pTail->nextPacket = (0);
 13284  013158  EE20 F008          	lfsr	2,8
 13285  01315C  5040               	movf	_pTail,w,c
 13286  01315E  26D9               	addwf	fsr2l,f,c
 13287  013160  5041               	movf	_pTail+1,w,c
 13288  013162  22DA               	addwfc	fsr2h,f,c
 13289  013164  0E00               	movlw	0
 13290  013166  6EDE               	movwf	postinc2,c
 13291  013168  0E00               	movlw	0
 13292  01316A  6EDD               	movwf	postdec2,c
 13293  01316C                     l789:
 13294                           
 13295                           ;ETHxxJ6x_driver.c: 1268: }
 13296                           ;ETHxxJ6x_driver.c: 1269: }
 13297                           ;ETHxxJ6x_driver.c: 1271: if( pPacket->prevPacket == (0) )
 13298  01316C  EE20 F006          	lfsr	2,6
 13299  013170  5017               	movf	ETH_RemovePacket@pPacket,w,c
 13300  013172  26D9               	addwf	fsr2l,f,c
 13301  013174  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 13302  013176  22DA               	addwfc	fsr2h,f,c
 13303  013178  50DE               	movf	postinc2,w,c
 13304  01317A  10DE               	iorwf	postinc2,w,c
 13305  01317C  A4D8               	btfss	status,2,c
 13306  01317E  D018               	goto	l791
 13307                           
 13308                           ;ETHxxJ6x_driver.c: 1272: {
 13309                           ;ETHxxJ6x_driver.c: 1273: pHead = pPacket->nextPacket;
 13310  013180  EE20 F008          	lfsr	2,8
 13311  013184  5017               	movf	ETH_RemovePacket@pPacket,w,c
 13312  013186  26D9               	addwf	fsr2l,f,c
 13313  013188  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 13314  01318A  22DA               	addwfc	fsr2h,f,c
 13315  01318C  CFDE F042          	movff	postinc2,_pHead
 13316  013190  CFDD F043          	movff	postdec2,_pHead+1
 13317                           
 13318                           ;ETHxxJ6x_driver.c: 1274: if( pHead != (0) )
 13319  013194  5042               	movf	_pHead,w,c
 13320  013196  1043               	iorwf	_pHead+1,w,c
 13321  013198  B4D8               	btfsc	status,2,c
 13322  01319A  D00A               	goto	l791
 13323                           
 13324                           ;ETHxxJ6x_driver.c: 1275: {
 13325                           ;ETHxxJ6x_driver.c: 1276: pHead->prevPacket = (0);
 13326  01319C  EE20 F006          	lfsr	2,6
 13327  0131A0  5042               	movf	_pHead,w,c
 13328  0131A2  26D9               	addwf	fsr2l,f,c
 13329  0131A4  5043               	movf	_pHead+1,w,c
 13330  0131A6  22DA               	addwfc	fsr2h,f,c
 13331  0131A8  0E00               	movlw	0
 13332  0131AA  6EDE               	movwf	postinc2,c
 13333  0131AC  0E00               	movlw	0
 13334  0131AE  6EDD               	movwf	postdec2,c
 13335  0131B0                     l791:
 13336                           
 13337                           ;ETHxxJ6x_driver.c: 1277: }
 13338                           ;ETHxxJ6x_driver.c: 1278: }
 13339                           ;ETHxxJ6x_driver.c: 1281: pPacket->flags = 0;
 13340  0131B0  C017  FFD9         	movff	ETH_RemovePacket@pPacket,fsr2l
 13341  0131B4  C018  FFDA         	movff	ETH_RemovePacket@pPacket+1,fsr2h
 13342  0131B8  0E00               	movlw	0
 13343  0131BA  6EDE               	movwf	postinc2,c
 13344  0131BC  0E00               	movlw	0
 13345  0131BE  6EDD               	movwf	postdec2,c
 13346                           
 13347                           ;ETHxxJ6x_driver.c: 1282: pPacket->prevPacket = (0);
 13348  0131C0  EE20 F006          	lfsr	2,6
 13349  0131C4  5017               	movf	ETH_RemovePacket@pPacket,w,c
 13350  0131C6  26D9               	addwf	fsr2l,f,c
 13351  0131C8  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 13352  0131CA  22DA               	addwfc	fsr2h,f,c
 13353  0131CC  0E00               	movlw	0
 13354  0131CE  6EDE               	movwf	postinc2,c
 13355  0131D0  0E00               	movlw	0
 13356  0131D2  6EDD               	movwf	postdec2,c
 13357                           
 13358                           ;ETHxxJ6x_driver.c: 1283: pPacket->nextPacket = (0);
 13359  0131D4  EE20 F008          	lfsr	2,8
 13360  0131D8  5017               	movf	ETH_RemovePacket@pPacket,w,c
 13361  0131DA  26D9               	addwf	fsr2l,f,c
 13362  0131DC  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 13363  0131DE  22DA               	addwfc	fsr2h,f,c
 13364  0131E0  0E00               	movlw	0
 13365  0131E2  6EDE               	movwf	postinc2,c
 13366  0131E4  0E00               	movlw	0
 13367  0131E6  6EDD               	movwf	postdec2,c
 13368                           
 13369                           ;ETHxxJ6x_driver.c: 1285: ethListSize --;
 13370  0131E8  0645               	decf	_ethListSize,f,c
 13371  0131EA  0012               	return	
 13372  0131EC                     __end_of_ETH_RemovePacket:
 13373                           	opt stack 0
 13374                           tosu	equ	0xFFF
 13375                           tosh	equ	0xFFE
 13376                           tosl	equ	0xFFD
 13377                           pclath	equ	0xFFA
 13378                           tblptru	equ	0xFF8
 13379                           tblptrh	equ	0xFF7
 13380                           tblptrl	equ	0xFF6
 13381                           tablat	equ	0xFF5
 13382                           prodh	equ	0xFF4
 13383                           prodl	equ	0xFF3
 13384                           intcon	equ	0xFF2
 13385                           indf0	equ	0xFEF
 13386                           postinc0	equ	0xFEE
 13387                           fsr0h	equ	0xFEA
 13388                           fsr0l	equ	0xFE9
 13389                           wreg	equ	0xFE8
 13390                           postinc1	equ	0xFE6
 13391                           postdec1	equ	0xFE5
 13392                           plusw1	equ	0xFE3
 13393                           fsr1h	equ	0xFE2
 13394                           fsr1l	equ	0xFE1
 13395                           indf2	equ	0xFDF
 13396                           postinc2	equ	0xFDE
 13397                           postdec2	equ	0xFDD
 13398                           plusw2	equ	0xFDB
 13399                           fsr2h	equ	0xFDA
 13400                           fsr2l	equ	0xFD9
 13401                           status	equ	0xFD8
 13402                           
 13403 ;; *************** function _ETH_CheckLinkUp *****************
 13404 ;; Defined at:
 13405 ;;		line 243 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13406 ;; Parameters:    Size  Location     Type
 13407 ;;		None
 13408 ;; Auto vars:     Size  Location     Type
 13409 ;;  value           4   29[COMRAM] unsigned long 
 13410 ;; Return value:  Size  Location     Type
 13411 ;;                  1    wreg      unsigned char 
 13412 ;; Registers used:
 13413 ;;		wreg, status,2, status,0, cstack
 13414 ;; Tracked objects:
 13415 ;;		On entry : 0/0
 13416 ;;		On exit  : 0/0
 13417 ;;		Unchanged: 0/0
 13418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13420 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13423 ;;Total ram usage:        4 bytes
 13424 ;; Hardware stack levels used:    1
 13425 ;; Hardware stack levels required when called:    6
 13426 ;; This function calls:
 13427 ;;		_PHY_Read
 13428 ;; This function is called by:
 13429 ;;		_ETH_Init
 13430 ;;		_ETH_EventHandler
 13431 ;;		_Network_WaitForLink
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435                           	psect	text63
 13436  014302                     __ptext63:
 13437                           	opt stack 0
 13438  014302                     _ETH_CheckLinkUp:
 13439                           	opt stack 21
 13440                           
 13441                           ;ETHxxJ6x_driver.c: 245: uint32_t value;
 13442                           ;ETHxxJ6x_driver.c: 247: value = PHY_Read(PHSTAT2);
 13443                           
 13444                           ;incstack = 0
 13445  014302  0E11               	movlw	17
 13446  014304  EC73  F09C         	call	_PHY_Read
 13447  014308  C015  F01E         	movff	?_PHY_Read,ETH_CheckLinkUp@value
 13448  01430C  C016  F01F         	movff	?_PHY_Read+1,ETH_CheckLinkUp@value+1
 13449  014310  C017  F020         	movff	?_PHY_Read+2,ETH_CheckLinkUp@value+2
 13450  014314  C018  F021         	movff	?_PHY_Read+3,ETH_CheckLinkUp@value+3
 13451                           
 13452                           ;ETHxxJ6x_driver.c: 248: if(value & 0x0400)
 13453  014318  A41F               	btfss	ETH_CheckLinkUp@value+1,2,c
 13454  01431A  D004               	goto	l506
 13455                           
 13456                           ;ETHxxJ6x_driver.c: 249: {
 13457                           ;ETHxxJ6x_driver.c: 250: ethData.up = 1;
 13458  01431C  0102               	movlb	2	; () banked
 13459  01431E  8524               	bsf	_ethData& (0+255),2,b	;volatile
 13460                           
 13461                           ; BSR set to: 2
 13462                           ;ETHxxJ6x_driver.c: 251: return 1;
 13463  014320  0E01               	movlw	1
 13464                           
 13465                           ; BSR set to: 2
 13466                           ;ETHxxJ6x_driver.c: 252: }
 13467                           
 13468                           ; BSR set to: 2
 13469  014322  0012               	return	
 13470  014324                     l506:
 13471                           
 13472                           ;ETHxxJ6x_driver.c: 253: else
 13473                           ;ETHxxJ6x_driver.c: 254: {
 13474                           ;ETHxxJ6x_driver.c: 255: ethData.up = 0;
 13475  014324  0102               	movlb	2	; () banked
 13476  014326  9524               	bcf	_ethData& (0+255),2,b	;volatile
 13477                           
 13478                           ; BSR set to: 2
 13479                           ;ETHxxJ6x_driver.c: 256: return 0;
 13480  014328  0E00               	movlw	0
 13481                           
 13482                           ; BSR set to: 2
 13483  01432A  0012               	return	
 13484  01432C                     __end_of_ETH_CheckLinkUp:
 13485                           	opt stack 0
 13486                           tosu	equ	0xFFF
 13487                           tosh	equ	0xFFE
 13488                           tosl	equ	0xFFD
 13489                           pclath	equ	0xFFA
 13490                           tblptru	equ	0xFF8
 13491                           tblptrh	equ	0xFF7
 13492                           tblptrl	equ	0xFF6
 13493                           tablat	equ	0xFF5
 13494                           prodh	equ	0xFF4
 13495                           prodl	equ	0xFF3
 13496                           intcon	equ	0xFF2
 13497                           indf0	equ	0xFEF
 13498                           postinc0	equ	0xFEE
 13499                           fsr0h	equ	0xFEA
 13500                           fsr0l	equ	0xFE9
 13501                           wreg	equ	0xFE8
 13502                           postinc1	equ	0xFE6
 13503                           postdec1	equ	0xFE5
 13504                           plusw1	equ	0xFE3
 13505                           fsr1h	equ	0xFE2
 13506                           fsr1l	equ	0xFE1
 13507                           indf2	equ	0xFDF
 13508                           postinc2	equ	0xFDE
 13509                           postdec2	equ	0xFDD
 13510                           plusw2	equ	0xFDB
 13511                           fsr2h	equ	0xFDA
 13512                           fsr2l	equ	0xFD9
 13513                           status	equ	0xFD8
 13514                           
 13515 ;; *************** function _PHY_Read *****************
 13516 ;; Defined at:
 13517 ;;		line 403 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;  reg             1    wreg     enum E5175
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;  reg             1   24[COMRAM] enum E5175
 13522 ;;  ret             4   25[COMRAM] long 
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  4   20[COMRAM] long 
 13525 ;; Registers used:
 13526 ;;		wreg, status,2, status,0, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13533 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13535 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13536 ;;Total ram usage:        9 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:    5
 13539 ;; This function calls:
 13540 ;;		_PHY_WaitForBusy
 13541 ;; This function is called by:
 13542 ;;		_ETH_CheckLinkUp
 13543 ;;		_ETH_EventHandler
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547                           	psect	text64
 13548  0138E6                     __ptext64:
 13549                           	opt stack 0
 13550  0138E6                     _PHY_Read:
 13551                           	opt stack 21
 13552                           
 13553                           ; BSR set to: 2
 13554                           ;incstack = 0
 13555                           ;PHY_Read@reg stored from wreg
 13556  0138E6  6E19               	movwf	PHY_Read@reg,c
 13557                           
 13558                           ;ETHxxJ6x_driver.c: 405: int32_t ret = NOERROR;
 13559  0138E8  0E00               	movlw	0
 13560  0138EA  6E1A               	movwf	PHY_Read@ret,c
 13561  0138EC  0E00               	movlw	0
 13562  0138EE  6E1B               	movwf	PHY_Read@ret+1,c
 13563  0138F0  0E00               	movlw	0
 13564  0138F2  6E1C               	movwf	PHY_Read@ret+2,c
 13565  0138F4  0E00               	movlw	0
 13566  0138F6  6E1D               	movwf	PHY_Read@ret+3,c
 13567                           
 13568                           ;ETHxxJ6x_driver.c: 406: if(PHY_WaitForBusy() == NOERROR)
 13569  0138F8  ECE2  F0A0         	call	_PHY_WaitForBusy	;wreg free
 13570  0138FC  0900               	iorlw	0
 13571  0138FE  A4D8               	btfss	status,2,c
 13572  013900  D01F               	goto	l545
 13573                           
 13574                           ;ETHxxJ6x_driver.c: 407: {
 13575                           ;ETHxxJ6x_driver.c: 408: MIREGADR = reg;
 13576  013902  C019  FEB4         	movff	PHY_Read@reg,3764	;volatile
 13577                           
 13578                           ;ETHxxJ6x_driver.c: 409: MICMD = 0;
 13579  013906  0E00               	movlw	0
 13580  013908  010E               	movlb	14	; () banked
 13581  01390A  6FB2               	movwf	178,b	;volatile
 13582                           
 13583                           ; BSR set to: 14
 13584                           ;ETHxxJ6x_driver.c: 410: MICMDbits.MIIRD = 1;
 13585  01390C  81B2               	bsf	178,0,b	;volatile
 13586                           
 13587                           ; BSR set to: 14
 13588                           ;ETHxxJ6x_driver.c: 411: __nop(); __nop();
 13589  01390E  F000               	nop	
 13590  013910  F000               	nop	
 13591                           
 13592                           ;ETHxxJ6x_driver.c: 412: if(PHY_WaitForBusy() == BUSY_TIMEOUT)
 13593  013912  ECE2  F0A0         	call	_PHY_WaitForBusy	;wreg free
 13594  013916  0AFF               	xorlw	-1
 13595  013918  A4D8               	btfss	status,2,c
 13596  01391A  D009               	goto	l546
 13597                           
 13598                           ;ETHxxJ6x_driver.c: 413: {
 13599                           ;ETHxxJ6x_driver.c: 414: ret = READ_FAIL;
 13600  01391C  0EFD               	movlw	253
 13601  01391E  6E1A               	movwf	PHY_Read@ret,c
 13602  013920  0EFF               	movlw	255
 13603  013922  6E1B               	movwf	PHY_Read@ret+1,c
 13604  013924  0EFF               	movlw	255
 13605  013926  6E1C               	movwf	PHY_Read@ret+2,c
 13606  013928  0EFF               	movlw	255
 13607  01392A  6E1D               	movwf	PHY_Read@ret+3,c
 13608                           
 13609                           ;ETHxxJ6x_driver.c: 415: }
 13610  01392C  D00D               	goto	l548
 13611  01392E                     l546:
 13612                           
 13613                           ;ETHxxJ6x_driver.c: 416: else
 13614                           ;ETHxxJ6x_driver.c: 417: {
 13615                           ;ETHxxJ6x_driver.c: 418: MICMDbits.MIIRD = 0;
 13616  01392E  010E               	movlb	14	; () banked
 13617  013930  91B2               	bcf	178,0,b	;volatile
 13618                           
 13619                           ; BSR set to: 14
 13620                           ;ETHxxJ6x_driver.c: 419: ret = MIRD;
 13621  013932  CEB8 F01A          	movff	3768,PHY_Read@ret	;volatile
 13622  013936  CEB9 F01B          	movff	3769,PHY_Read@ret+1	;volatile
 13623  01393A  6A1C               	clrf	PHY_Read@ret+2,c
 13624  01393C  6A1D               	clrf	PHY_Read@ret+3,c
 13625                           
 13626                           ; BSR set to: 14
 13627                           ;ETHxxJ6x_driver.c: 420: }
 13628                           ;ETHxxJ6x_driver.c: 421: }
 13629  01393E  D004               	goto	l548
 13630  013940                     l545:
 13631                           
 13632                           ;ETHxxJ6x_driver.c: 422: else
 13633                           ;ETHxxJ6x_driver.c: 423: {
 13634                           ;ETHxxJ6x_driver.c: 424: ret = BUSY_TIMEOUT;
 13635  013940  681A               	setf	PHY_Read@ret,c
 13636  013942  681B               	setf	PHY_Read@ret+1,c
 13637  013944  681C               	setf	PHY_Read@ret+2,c
 13638  013946  681D               	setf	PHY_Read@ret+3,c
 13639  013948                     l548:
 13640                           
 13641                           ;ETHxxJ6x_driver.c: 425: }
 13642                           ;ETHxxJ6x_driver.c: 426: return ret;
 13643  013948  C01A  F015         	movff	PHY_Read@ret,?_PHY_Read
 13644  01394C  C01B  F016         	movff	PHY_Read@ret+1,?_PHY_Read+1
 13645  013950  C01C  F017         	movff	PHY_Read@ret+2,?_PHY_Read+2
 13646  013954  C01D  F018         	movff	PHY_Read@ret+3,?_PHY_Read+3
 13647  013958  0012               	return		;funcret
 13648  01395A                     __end_of_PHY_Read:
 13649                           	opt stack 0
 13650                           tosu	equ	0xFFF
 13651                           tosh	equ	0xFFE
 13652                           tosl	equ	0xFFD
 13653                           pclath	equ	0xFFA
 13654                           tblptru	equ	0xFF8
 13655                           tblptrh	equ	0xFF7
 13656                           tblptrl	equ	0xFF6
 13657                           tablat	equ	0xFF5
 13658                           prodh	equ	0xFF4
 13659                           prodl	equ	0xFF3
 13660                           intcon	equ	0xFF2
 13661                           indf0	equ	0xFEF
 13662                           postinc0	equ	0xFEE
 13663                           fsr0h	equ	0xFEA
 13664                           fsr0l	equ	0xFE9
 13665                           wreg	equ	0xFE8
 13666                           postinc1	equ	0xFE6
 13667                           postdec1	equ	0xFE5
 13668                           plusw1	equ	0xFE3
 13669                           fsr1h	equ	0xFE2
 13670                           fsr1l	equ	0xFE1
 13671                           indf2	equ	0xFDF
 13672                           postinc2	equ	0xFDE
 13673                           postdec2	equ	0xFDD
 13674                           plusw2	equ	0xFDB
 13675                           fsr2h	equ	0xFDA
 13676                           fsr2l	equ	0xFD9
 13677                           status	equ	0xFD8
 13678                           
 13679 ;; *************** function _PHY_WaitForBusy *****************
 13680 ;; Defined at:
 13681 ;;		line 351 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;		None
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;  timeout         1   19[COMRAM] unsigned char 
 13686 ;;  ret             1   18[COMRAM] enum E5184
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  1    wreg      enum E5184
 13689 ;; Registers used:
 13690 ;;		wreg, status,2, status,0
 13691 ;; Tracked objects:
 13692 ;;		On entry : 0/0
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13700 ;;Total ram usage:        2 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; Hardware stack levels required when called:    4
 13703 ;; This function calls:
 13704 ;;		Nothing
 13705 ;; This function is called by:
 13706 ;;		_PHY_Write
 13707 ;;		_PHY_Read
 13708 ;; This function uses a non-reentrant model
 13709 ;;
 13710                           
 13711                           	psect	text65
 13712  0141C4                     __ptext65:
 13713                           	opt stack 0
 13714  0141C4                     _PHY_WaitForBusy:
 13715                           	opt stack 21
 13716                           
 13717                           ;ETHxxJ6x_driver.c: 353: phyError_t ret = NOERROR;
 13718                           
 13719                           ;incstack = 0
 13720  0141C4  0E00               	movlw	0
 13721  0141C6  6E13               	movwf	PHY_WaitForBusy@ret,c
 13722                           
 13723                           ;ETHxxJ6x_driver.c: 354: uint8_t timeout;
 13724                           ;ETHxxJ6x_driver.c: 356: for(timeout = 0; timeout < 10;timeout++) __nop();
 13725  0141C8  0E00               	movlw	0
 13726  0141CA  6E14               	movwf	PHY_WaitForBusy@timeout,c
 13727  0141CC                     l7828:
 13728  0141CC  0E09               	movlw	9
 13729  0141CE  6414               	cpfsgt	PHY_WaitForBusy@timeout,c
 13730  0141D0  D001               	goto	l531
 13731  0141D2  D003               	goto	u6930
 13732  0141D4                     l531:
 13733  0141D4  F000               	nop	
 13734  0141D6  2A14               	incf	PHY_WaitForBusy@timeout,f,c
 13735  0141D8  D7F9               	goto	l7828
 13736  0141DA                     u6930:
 13737                           
 13738                           ;ETHxxJ6x_driver.c: 357: timeout = 90;
 13739  0141DA  0E5A               	movlw	90
 13740  0141DC  6E14               	movwf	PHY_WaitForBusy@timeout,c
 13741                           
 13742                           ;ETHxxJ6x_driver.c: 358: while(MISTATbits.BUSY && --timeout) __nop();
 13743  0141DE  D001               	goto	l533
 13744  0141E0                     l534:
 13745                           
 13746                           ; BSR set to: 14
 13747  0141E0  F000               	nop	
 13748  0141E2                     l533:
 13749  0141E2  010E               	movlb	14	; () banked
 13750  0141E4  A18A               	btfss	138,0,b	;volatile
 13751  0141E6  D002               	goto	l536
 13752                           
 13753                           ; BSR set to: 14
 13754  0141E8  2E14               	decfsz	PHY_WaitForBusy@timeout,f,c
 13755  0141EA  D7FA               	goto	l534
 13756  0141EC                     l536:
 13757                           
 13758                           ; BSR set to: 14
 13759                           ;ETHxxJ6x_driver.c: 360: if(timeout == 0) ret = BUSY_TIMEOUT;
 13760                           
 13761                           ; BSR set to: 14
 13762                           
 13763                           ; BSR set to: 14
 13764  0141EC  5014               	movf	PHY_WaitForBusy@timeout,w,c
 13765  0141EE  B4D8               	btfsc	status,2,c
 13766                           
 13767                           ; BSR set to: 14
 13768  0141F0  6813               	setf	PHY_WaitForBusy@ret,c
 13769                           
 13770                           ; BSR set to: 14
 13771                           ;ETHxxJ6x_driver.c: 361: return ret;
 13772                           
 13773                           ; BSR set to: 14
 13774  0141F2  5013               	movf	PHY_WaitForBusy@ret,w,c
 13775  0141F4  0012               	return	
 13776  0141F6                     __end_of_PHY_WaitForBusy:
 13777                           	opt stack 0
 13778                           tosu	equ	0xFFF
 13779                           tosh	equ	0xFFE
 13780                           tosl	equ	0xFFD
 13781                           pclath	equ	0xFFA
 13782                           tblptru	equ	0xFF8
 13783                           tblptrh	equ	0xFF7
 13784                           tblptrl	equ	0xFF6
 13785                           tablat	equ	0xFF5
 13786                           prodh	equ	0xFF4
 13787                           prodl	equ	0xFF3
 13788                           intcon	equ	0xFF2
 13789                           indf0	equ	0xFEF
 13790                           postinc0	equ	0xFEE
 13791                           fsr0h	equ	0xFEA
 13792                           fsr0l	equ	0xFE9
 13793                           wreg	equ	0xFE8
 13794                           postinc1	equ	0xFE6
 13795                           postdec1	equ	0xFE5
 13796                           plusw1	equ	0xFE3
 13797                           fsr1h	equ	0xFE2
 13798                           fsr1l	equ	0xFE1
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           postdec2	equ	0xFDD
 13802                           plusw2	equ	0xFDB
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function _DHCP_Manage *****************
 13808 ;; Defined at:
 13809 ;;		line 202 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;  now             4   81[BANK0 ] long 
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  1    wreg      void 
 13816 ;; Registers used:
 13817 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13824 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13825 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13826 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13827 ;;Total ram usage:        5 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:   12
 13830 ;; This function calls:
 13831 ;;		_sendDHCPDISCOVER
 13832 ;;		_sendDHCPREQUEST
 13833 ;;		_time
 13834 ;; This function is called by:
 13835 ;;		_Network_Manage
 13836 ;; This function uses a non-reentrant model
 13837 ;;
 13838                           
 13839                           	psect	text66
 13840  012BB2                     __ptext66:
 13841                           	opt stack 0
 13842  012BB2                     _DHCP_Manage:
 13843                           	opt stack 17
 13844                           
 13845                           ;dhcp_client.c: 204: static time_t managementTimer = 0;
 13846                           ;dhcp_client.c: 205: time_t now;
 13847                           ;dhcp_client.c: 206: now = time(0);
 13848                           
 13849                           ; BSR set to: 14
 13850                           ;incstack = 0
 13851  012BB2  0E00               	movlw	0
 13852  012BB4  6E13               	movwf	time@t,c
 13853  012BB6  0E00               	movlw	0
 13854  012BB8  6E14               	movwf	time@t+1,c
 13855  012BBA  ECC3  F09E         	call	_time	;wreg free
 13856  012BBE  C013  F0B1         	movff	?_time,DHCP_Manage@now
 13857  012BC2  C014  F0B2         	movff	?_time+1,DHCP_Manage@now+1
 13858  012BC6  C015  F0B3         	movff	?_time+2,DHCP_Manage@now+2
 13859  012BCA  C016  F0B4         	movff	?_time+3,DHCP_Manage@now+3
 13860                           
 13861                           ;dhcp_client.c: 208: if(managementTimer <= now)
 13862  012BCE  0102               	movlb	2	; () banked
 13863  012BD0  512A               	movf	DHCP_Manage@managementTimer& (0+255),w,b
 13864  012BD2  0100               	movlb	0	; () banked
 13865  012BD4  5DB1               	subwf	DHCP_Manage@now& (0+255),w,b
 13866  012BD6  0102               	movlb	2	; () banked
 13867  012BD8  512B               	movf	(DHCP_Manage@managementTimer+1)& (0+255),w,b
 13868  012BDA  0100               	movlb	0	; () banked
 13869  012BDC  59B2               	subwfb	(DHCP_Manage@now+1)& (0+255),w,b
 13870  012BDE  0102               	movlb	2	; () banked
 13871  012BE0  512C               	movf	(DHCP_Manage@managementTimer+2)& (0+255),w,b
 13872  012BE2  0100               	movlb	0	; () banked
 13873  012BE4  59B3               	subwfb	(DHCP_Manage@now+2)& (0+255),w,b
 13874  012BE6  51B4               	movf	(DHCP_Manage@now+3)& (0+255),w,b
 13875  012BE8  0A80               	xorlw	128
 13876  012BEA  6FB0               	movwf	??_DHCP_Manage& (0+255),b
 13877  012BEC  0102               	movlb	2	; () banked
 13878  012BEE  512D               	movf	(DHCP_Manage@managementTimer+3)& (0+255),w,b
 13879  012BF0  0A80               	xorlw	128
 13880  012BF2  0100               	movlb	0	; () banked
 13881  012BF4  59B0               	subwfb	??_DHCP_Manage& (0+255),w,b
 13882  012BF6  B0D8               	btfsc	status,0,c
 13883  012BF8  D066               	goto	l1316
 13884  012BFA  D073               	goto	l1318
 13885  012BFC                     
 13886                           ;dhcp_client.c: 213: dhcpData.t1 = 4;
 13887                           
 13888                           ; BSR set to: 0
 13889  012BFC  0E04               	movlw	4
 13890  012BFE  0102               	movlb	2	; () banked
 13891  012C00  6FD1               	movwf	(_dhcpData+36)& (0+255),b
 13892  012C02  0E00               	movlw	0
 13893  012C04  6FD2               	movwf	(_dhcpData+37)& (0+255),b
 13894  012C06  0E00               	movlw	0
 13895  012C08  6FD3               	movwf	(_dhcpData+38)& (0+255),b
 13896  012C0A  0E00               	movlw	0
 13897  012C0C  6FD4               	movwf	(_dhcpData+39)& (0+255),b
 13898  012C0E                     
 13899                           ;dhcp_client.c: 214: dhcpState.tmrClientState = WAITFORTIMER;
 13900  012C0E  0E01               	movlw	1
 13901  012C10  D037               	goto	L6
 13902  012C12                     
 13903                           ;dhcp_client.c: 217: if(dhcpData.t1 == 2)
 13904                           
 13905                           ; BSR set to: 2
 13906  012C12  0E02               	movlw	2
 13907  012C14  0102               	movlb	2	; () banked
 13908  012C16  19D1               	xorwf	(_dhcpData+36)& (0+255),w,b
 13909  012C18  11D2               	iorwf	(_dhcpData+37)& (0+255),w,b
 13910  012C1A  11D3               	iorwf	(_dhcpData+38)& (0+255),w,b
 13911  012C1C  11D4               	iorwf	(_dhcpData+39)& (0+255),w,b
 13912  012C1E  A4D8               	btfss	status,2,c
 13913  012C20  D003               	goto	l1320
 13914                           
 13915                           ; BSR set to: 2
 13916                           ;dhcp_client.c: 218: {
 13917                           ;dhcp_client.c: 219: dhcpState.tmrClientState = STARTDISCOVER;
 13918  012C22  0E02               	movlw	2
 13919  012C24  6E3D               	movwf	_dhcpState+1,c
 13920                           
 13921                           ;dhcp_client.c: 220: }
 13922  012C26  D005               	goto	l1321
 13923  012C28                     l1320:
 13924                           
 13925                           ; BSR set to: 2
 13926                           ;dhcp_client.c: 221: else dhcpData.t1 --;
 13927                           
 13928                           ; BSR set to: 2
 13929  012C28  07D1               	decf	(_dhcpData+36)& (0+255),f,b
 13930  012C2A  0E00               	movlw	0
 13931  012C2C  5BD2               	subwfb	(_dhcpData+37)& (0+255),f,b
 13932  012C2E  5BD3               	subwfb	(_dhcpData+38)& (0+255),f,b
 13933  012C30  5BD4               	subwfb	(_dhcpData+39)& (0+255),f,b
 13934  012C32                     l1321:
 13935                           
 13936                           ; BSR set to: 2
 13937                           ;dhcp_client.c: 222: if(dhcpData.t2 == 2)
 13938  012C32  0E02               	movlw	2
 13939  012C34  19D5               	xorwf	(_dhcpData+40)& (0+255),w,b
 13940  012C36  11D6               	iorwf	(_dhcpData+41)& (0+255),w,b
 13941  012C38  11D7               	iorwf	(_dhcpData+42)& (0+255),w,b
 13942  012C3A  11D8               	iorwf	(_dhcpData+43)& (0+255),w,b
 13943  012C3C  A4D8               	btfss	status,2,c
 13944  012C3E  D002               	goto	l1322
 13945                           
 13946                           ; BSR set to: 2
 13947                           ;dhcp_client.c: 223: {
 13948                           ;dhcp_client.c: 224: dhcpState.tmrClientState = STARTREQUEST;
 13949  012C40  0E03               	movlw	3
 13950  012C42  D01E               	goto	L6
 13951  012C44                     l1322:
 13952                           
 13953                           ; BSR set to: 2
 13954                           ;dhcp_client.c: 226: else dhcpData.t2 --;
 13955                           
 13956                           ; BSR set to: 2
 13957  012C44  07D5               	decf	(_dhcpData+40)& (0+255),f,b
 13958  012C46  0E00               	movlw	0
 13959  012C48  5BD6               	subwfb	(_dhcpData+41)& (0+255),f,b
 13960  012C4A  5BD7               	subwfb	(_dhcpData+42)& (0+255),f,b
 13961  012C4C  5BD8               	subwfb	(_dhcpData+43)& (0+255),f,b
 13962                           
 13963                           ; BSR set to: 2
 13964                           ;dhcp_client.c: 227: break;
 13965  012C4E  D049               	goto	l1318
 13966  012C50                     
 13967                           ;dhcp_client.c: 229: if(sendDHCPDISCOVER())
 13968                           
 13969                           ; BSR set to: 2
 13970  012C50  EC37  F09C         	call	_sendDHCPDISCOVER	;wreg free
 13971  012C54  0900               	iorlw	0
 13972  012C56  B4D8               	btfsc	status,2,c
 13973  012C58  D044               	goto	l1318
 13974                           
 13975                           ;dhcp_client.c: 230: {
 13976                           ;dhcp_client.c: 231: dhcpData.t1 = 10;
 13977  012C5A  0E0A               	movlw	10
 13978  012C5C  0102               	movlb	2	; () banked
 13979  012C5E  6FD1               	movwf	(_dhcpData+36)& (0+255),b
 13980  012C60  0E00               	movlw	0
 13981  012C62  6FD2               	movwf	(_dhcpData+37)& (0+255),b
 13982  012C64  0E00               	movlw	0
 13983  012C66  6FD3               	movwf	(_dhcpData+38)& (0+255),b
 13984  012C68  0E00               	movlw	0
 13985  012C6A  6FD4               	movwf	(_dhcpData+39)& (0+255),b
 13986                           
 13987                           ;dhcp_client.c: 232: dhcpData.t2 = 2147483647;
 13988  012C6C  0EFF               	movlw	255
 13989  012C6E  6FD5               	movwf	(_dhcpData+40)& (0+255),b
 13990  012C70  0EFF               	movlw	255
 13991  012C72  6FD6               	movwf	(_dhcpData+41)& (0+255),b
 13992  012C74  0EFF               	movlw	255
 13993  012C76  6FD7               	movwf	(_dhcpData+42)& (0+255),b
 13994  012C78  0E7F               	movlw	127
 13995  012C7A  6FD8               	movwf	(_dhcpData+43)& (0+255),b
 13996                           
 13997                           ;dhcp_client.c: 233: dhcpState.rxClientState = SELECTING;
 13998  012C7C  0E00               	movlw	0
 13999  012C7E  D01F               	goto	L4
 14000  012C80                     L6:
 14001  012C80  6E3D               	movwf	_dhcpState+1,c
 14002                           
 14003                           ; BSR set to: 2
 14004                           ;dhcp_client.c: 235: }
 14005                           ;dhcp_client.c: 236: break;
 14006  012C82  D02F               	goto	l1318
 14007  012C84                     
 14008                           ;dhcp_client.c: 238: if(sendDHCPREQUEST())
 14009                           
 14010                           ; BSR set to: 2
 14011  012C84  ECE8  F0A2         	call	_sendDHCPREQUEST	;wreg free
 14012  012C88  0900               	iorlw	0
 14013  012C8A  B4D8               	btfsc	status,2,c
 14014  012C8C  D02A               	goto	l1318
 14015                           
 14016                           ;dhcp_client.c: 239: {
 14017                           ;dhcp_client.c: 240: dhcpData.t1 = 30;
 14018  012C8E  0E1E               	movlw	30
 14019  012C90  0102               	movlb	2	; () banked
 14020  012C92  6FD1               	movwf	(_dhcpData+36)& (0+255),b
 14021  012C94  0E00               	movlw	0
 14022  012C96  6FD2               	movwf	(_dhcpData+37)& (0+255),b
 14023  012C98  0E00               	movlw	0
 14024  012C9A  6FD3               	movwf	(_dhcpData+38)& (0+255),b
 14025  012C9C  0E00               	movlw	0
 14026  012C9E  6FD4               	movwf	(_dhcpData+39)& (0+255),b
 14027                           
 14028                           ;dhcp_client.c: 241: dhcpData.t2 = 15;
 14029  012CA0  0E0F               	movlw	15
 14030  012CA2  6FD5               	movwf	(_dhcpData+40)& (0+255),b
 14031  012CA4  0E00               	movlw	0
 14032  012CA6  6FD6               	movwf	(_dhcpData+41)& (0+255),b
 14033  012CA8  0E00               	movlw	0
 14034  012CAA  6FD7               	movwf	(_dhcpData+42)& (0+255),b
 14035  012CAC  0E00               	movlw	0
 14036  012CAE  6FD8               	movwf	(_dhcpData+43)& (0+255),b
 14037                           
 14038                           ; BSR set to: 2
 14039                           ;dhcp_client.c: 242: if(dhcpState.rxClientState == BOUND )dhcpState.rxClientState = RENE
      +                          WLEASE;
 14040  012CB0  0E03               	movlw	3
 14041  012CB2  183C               	xorwf	_dhcpState,w,c
 14042  012CB4  A4D8               	btfss	status,2,c
 14043  012CB6  D002               	goto	l1328
 14044                           
 14045                           ; BSR set to: 2
 14046  012CB8  0E02               	movlw	2
 14047  012CBA  D001               	goto	L4
 14048  012CBC                     l1328:
 14049                           
 14050                           ; BSR set to: 2
 14051                           ;dhcp_client.c: 243: else dhcpState.rxClientState = REQUESTING;
 14052                           
 14053                           ; BSR set to: 2
 14054  012CBC  0E01               	movlw	1
 14055  012CBE                     L4:
 14056  012CBE  6E3C               	movwf	_dhcpState,c
 14057  012CC0  D7A6               	goto	L7
 14058  012CC2                     
 14059                           ;dhcp_client.c: 248: dhcpState.tmrClientState = INIT_TIMER;
 14060                           
 14061                           ; BSR set to: 2
 14062  012CC2  0E00               	movlw	0
 14063  012CC4  D7DD               	goto	L6
 14064  012CC6                     l1316:
 14065  012CC6  503D               	movf	_dhcpState+1,w,c
 14066                           
 14067                           ; Switch size 1, requested type "space"
 14068                           ; Number of cases is 4, Range of values is 0 to 3
 14069                           ; switch strategies available:
 14070                           ; Name         Instructions Cycles
 14071                           ; simple_byte           13     7 (average)
 14072                           ;	Chosen strategy is simple_byte
 14073  012CC8  0A00               	xorlw	0	; case 0
 14074  012CCA  B4D8               	btfsc	status,2,c
 14075  012CCC  D797               	goto	l1317
 14076  012CCE  0A01               	xorlw	1	; case 1
 14077  012CD0  B4D8               	btfsc	status,2,c
 14078  012CD2  D79F               	goto	l1319
 14079  012CD4  0A03               	xorlw	3	; case 2
 14080  012CD6  B4D8               	btfsc	status,2,c
 14081  012CD8  D7BB               	goto	l1324
 14082  012CDA  0A01               	xorlw	1	; case 3
 14083  012CDC  B4D8               	btfsc	status,2,c
 14084  012CDE  D7D2               	goto	l1326
 14085  012CE0  D7F0               	goto	l1330
 14086  012CE2                     l1318:
 14087                           
 14088                           ;dhcp_client.c: 251: }
 14089                           ;dhcp_client.c: 252: managementTimer = now + 1;
 14090  012CE2  0E01               	movlw	1
 14091  012CE4  0100               	movlb	0	; () banked
 14092  012CE6  25B1               	addwf	DHCP_Manage@now& (0+255),w,b
 14093  012CE8  0102               	movlb	2	; () banked
 14094  012CEA  6F2A               	movwf	DHCP_Manage@managementTimer& (0+255),b
 14095  012CEC  0E00               	movlw	0
 14096  012CEE  0100               	movlb	0	; () banked
 14097  012CF0  21B2               	addwfc	(DHCP_Manage@now+1)& (0+255),w,b
 14098  012CF2  0102               	movlb	2	; () banked
 14099  012CF4  6F2B               	movwf	(DHCP_Manage@managementTimer+1)& (0+255),b
 14100  012CF6  0E00               	movlw	0
 14101  012CF8  0100               	movlb	0	; () banked
 14102  012CFA  21B3               	addwfc	(DHCP_Manage@now+2)& (0+255),w,b
 14103  012CFC  0102               	movlb	2	; () banked
 14104  012CFE  6F2C               	movwf	(DHCP_Manage@managementTimer+2)& (0+255),b
 14105  012D00  0E00               	movlw	0
 14106  012D02  0100               	movlb	0	; () banked
 14107  012D04  21B4               	addwfc	(DHCP_Manage@now+3)& (0+255),w,b
 14108  012D06  0102               	movlb	2	; () banked
 14109  012D08  6F2D               	movwf	(DHCP_Manage@managementTimer+3)& (0+255),b
 14110                           
 14111                           ; BSR set to: 2
 14112  012D0A  0012               	return		;funcret
 14113  012D0C                     __end_of_DHCP_Manage:
 14114                           	opt stack 0
 14115                           tosu	equ	0xFFF
 14116                           tosh	equ	0xFFE
 14117                           tosl	equ	0xFFD
 14118                           pclath	equ	0xFFA
 14119                           tblptru	equ	0xFF8
 14120                           tblptrh	equ	0xFF7
 14121                           tblptrl	equ	0xFF6
 14122                           tablat	equ	0xFF5
 14123                           prodh	equ	0xFF4
 14124                           prodl	equ	0xFF3
 14125                           intcon	equ	0xFF2
 14126                           indf0	equ	0xFEF
 14127                           postinc0	equ	0xFEE
 14128                           fsr0h	equ	0xFEA
 14129                           fsr0l	equ	0xFE9
 14130                           wreg	equ	0xFE8
 14131                           postinc1	equ	0xFE6
 14132                           postdec1	equ	0xFE5
 14133                           plusw1	equ	0xFE3
 14134                           fsr1h	equ	0xFE2
 14135                           fsr1l	equ	0xFE1
 14136                           indf2	equ	0xFDF
 14137                           postinc2	equ	0xFDE
 14138                           postdec2	equ	0xFDD
 14139                           plusw2	equ	0xFDB
 14140                           fsr2h	equ	0xFDA
 14141                           fsr2l	equ	0xFD9
 14142                           status	equ	0xFD8
 14143                           
 14144 ;; *************** function _time *****************
 14145 ;; Defined at:
 14146 ;;		line 163 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;  t               2   18[COMRAM] PTR long 
 14149 ;;		 -> Network_Manage@now(4), arpTimer(4), NULL(0), 
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;  the_time        4   23[COMRAM] long 
 14152 ;;  gie_val         1   22[COMRAM] unsigned char 
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  4   18[COMRAM] long 
 14155 ;; Registers used:
 14156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14163 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14165 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14166 ;;Total ram usage:        9 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; Hardware stack levels required when called:    4
 14169 ;; This function calls:
 14170 ;;		Nothing
 14171 ;; This function is called by:
 14172 ;;		_timersInit
 14173 ;;		_Network_Manage
 14174 ;;		_DHCP_Manage
 14175 ;;		_DNS_Handler
 14176 ;;		_SYSLOG_Init
 14177 ;;		_SYSLOG_Write
 14178 ;; This function uses a non-reentrant model
 14179 ;;
 14180                           
 14181                           	psect	text67
 14182  013D86                     __ptext67:
 14183                           	opt stack 0
 14184  013D86                     _time:
 14185                           	opt stack 23
 14186                           
 14187                           ;rtcc.c: 165: bool gie_val;
 14188                           ;rtcc.c: 166: time_t the_time;
 14189                           ;rtcc.c: 168: gie_val = GIE;
 14190                           
 14191                           ; BSR set to: 2
 14192                           ;incstack = 0
 14193  013D86  0E00               	movlw	0
 14194  013D88  BEF2               	btfsc	intcon,7,c	;volatile
 14195  013D8A  0E01               	movlw	1
 14196  013D8C  6E17               	movwf	time@gie_val,c
 14197                           
 14198                           ;rtcc.c: 169: GIE = 0;
 14199  013D8E  9EF2               	bcf	intcon,7,c	;volatile
 14200                           
 14201                           ;rtcc.c: 170: the_time = device_time;
 14202  013D90  C22E  F018         	movff	_device_time,time@the_time	;volatile
 14203  013D94  C22F  F019         	movff	_device_time+1,time@the_time+1	;volatile
 14204  013D98  C230  F01A         	movff	_device_time+2,time@the_time+2	;volatile
 14205  013D9C  C231  F01B         	movff	_device_time+3,time@the_time+3	;volatile
 14206                           
 14207                           ;rtcc.c: 171: GIE = gie_val;
 14208  013DA0  A017               	btfss	time@gie_val,0,c
 14209  013DA2  D002               	goto	u7080
 14210  013DA4  8EF2               	bsf	intcon,7,c	;volatile
 14211  013DA6  D001               	goto	u7095
 14212  013DA8                     u7080:
 14213  013DA8  9EF2               	bcf	intcon,7,c	;volatile
 14214  013DAA                     u7095:
 14215                           
 14216                           ;rtcc.c: 173: if(t)
 14217  013DAA  5013               	movf	time@t,w,c
 14218  013DAC  1014               	iorwf	time@t+1,w,c
 14219  013DAE  B4D8               	btfsc	status,2,c
 14220  013DB0  D00C               	goto	l1028
 14221                           
 14222                           ;rtcc.c: 174: {
 14223                           ;rtcc.c: 175: *t = the_time;
 14224  013DB2  C013  FFD9         	movff	time@t,fsr2l
 14225  013DB6  C014  FFDA         	movff	time@t+1,fsr2h
 14226  013DBA  C018  FFDE         	movff	time@the_time,postinc2
 14227  013DBE  C019  FFDE         	movff	time@the_time+1,postinc2
 14228  013DC2  C01A  FFDE         	movff	time@the_time+2,postinc2
 14229  013DC6  C01B  FFDE         	movff	time@the_time+3,postinc2
 14230  013DCA                     l1028:
 14231                           
 14232                           ;rtcc.c: 176: }
 14233                           ;rtcc.c: 178: return (the_time);
 14234  013DCA  C018  F013         	movff	time@the_time,?_time
 14235  013DCE  C019  F014         	movff	time@the_time+1,?_time+1
 14236  013DD2  C01A  F015         	movff	time@the_time+2,?_time+2
 14237  013DD6  C01B  F016         	movff	time@the_time+3,?_time+3
 14238  013DDA  0012               	return	
 14239  013DDC                     __end_of_time:
 14240                           	opt stack 0
 14241                           tosu	equ	0xFFF
 14242                           tosh	equ	0xFFE
 14243                           tosl	equ	0xFFD
 14244                           pclath	equ	0xFFA
 14245                           tblptru	equ	0xFF8
 14246                           tblptrh	equ	0xFF7
 14247                           tblptrl	equ	0xFF6
 14248                           tablat	equ	0xFF5
 14249                           prodh	equ	0xFF4
 14250                           prodl	equ	0xFF3
 14251                           intcon	equ	0xFF2
 14252                           indf0	equ	0xFEF
 14253                           postinc0	equ	0xFEE
 14254                           fsr0h	equ	0xFEA
 14255                           fsr0l	equ	0xFE9
 14256                           wreg	equ	0xFE8
 14257                           postinc1	equ	0xFE6
 14258                           postdec1	equ	0xFE5
 14259                           plusw1	equ	0xFE3
 14260                           fsr1h	equ	0xFE2
 14261                           fsr1l	equ	0xFE1
 14262                           indf2	equ	0xFDF
 14263                           postinc2	equ	0xFDE
 14264                           postdec2	equ	0xFDD
 14265                           plusw2	equ	0xFDB
 14266                           fsr2h	equ	0xFDA
 14267                           fsr2l	equ	0xFD9
 14268                           status	equ	0xFD8
 14269                           
 14270 ;; *************** function _sendDHCPREQUEST *****************
 14271 ;; Defined at:
 14272 ;;		line 131 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;		None
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;		None
 14277 ;; Return value:  Size  Location     Type
 14278 ;;                  1    wreg      unsigned char 
 14279 ;; Registers used:
 14280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14281 ;; Tracked objects:
 14282 ;;		On entry : 0/0
 14283 ;;		On exit  : 0/0
 14284 ;;		Unchanged: 0/0
 14285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14290 ;;Total ram usage:        0 bytes
 14291 ;; Hardware stack levels used:    1
 14292 ;; Hardware stack levels required when called:   11
 14293 ;; This function calls:
 14294 ;;		_sendRequest
 14295 ;; This function is called by:
 14296 ;;		_DHCP_Manage
 14297 ;;		_DHCP_Handler
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           	psect	text68
 14302  0145D0                     __ptext68:
 14303                           	opt stack 0
 14304  0145D0                     _sendDHCPREQUEST:
 14305                           	opt stack 14
 14306                           
 14307                           ;dhcp_client.c: 133: return sendRequest(DHCP_REQUEST);
 14308                           
 14309                           ;incstack = 0
 14310  0145D0  0E03               	movlw	3
 14311  0145D2  EC64  F091         	call	_sendRequest
 14312  0145D6  0012               	return	
 14313  0145D8                     __end_of_sendDHCPREQUEST:
 14314                           	opt stack 0
 14315                           tosu	equ	0xFFF
 14316                           tosh	equ	0xFFE
 14317                           tosl	equ	0xFFD
 14318                           pclath	equ	0xFFA
 14319                           tblptru	equ	0xFF8
 14320                           tblptrh	equ	0xFF7
 14321                           tblptrl	equ	0xFF6
 14322                           tablat	equ	0xFF5
 14323                           prodh	equ	0xFF4
 14324                           prodl	equ	0xFF3
 14325                           intcon	equ	0xFF2
 14326                           indf0	equ	0xFEF
 14327                           postinc0	equ	0xFEE
 14328                           fsr0h	equ	0xFEA
 14329                           fsr0l	equ	0xFE9
 14330                           wreg	equ	0xFE8
 14331                           postinc1	equ	0xFE6
 14332                           postdec1	equ	0xFE5
 14333                           plusw1	equ	0xFE3
 14334                           fsr1h	equ	0xFE2
 14335                           fsr1l	equ	0xFE1
 14336                           indf2	equ	0xFDF
 14337                           postinc2	equ	0xFDE
 14338                           postdec2	equ	0xFDD
 14339                           plusw2	equ	0xFDB
 14340                           fsr2h	equ	0xFDA
 14341                           fsr2l	equ	0xFD9
 14342                           status	equ	0xFD8
 14343                           
 14344 ;; *************** function _sendDHCPDISCOVER *****************
 14345 ;; Defined at:
 14346 ;;		line 118 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 14347 ;; Parameters:    Size  Location     Type
 14348 ;;		None
 14349 ;; Auto vars:     Size  Location     Type
 14350 ;;		None
 14351 ;; Return value:  Size  Location     Type
 14352 ;;                  1    wreg      unsigned char 
 14353 ;; Registers used:
 14354 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14355 ;; Tracked objects:
 14356 ;;		On entry : 0/0
 14357 ;;		On exit  : 0/0
 14358 ;;		Unchanged: 0/0
 14359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14364 ;;Total ram usage:        1 bytes
 14365 ;; Hardware stack levels used:    1
 14366 ;; Hardware stack levels required when called:   11
 14367 ;; This function calls:
 14368 ;;		_lfsr
 14369 ;;		_sendRequest
 14370 ;; This function is called by:
 14371 ;;		_DHCP_Manage
 14372 ;; This function uses a non-reentrant model
 14373 ;;
 14374                           
 14375                           	psect	text69
 14376  01386E                     __ptext69:
 14377                           	opt stack 0
 14378  01386E                     _sendDHCPDISCOVER:
 14379                           	opt stack 17
 14380                           
 14381                           ;dhcp_client.c: 120: dhcpData.dhcpIPAddress = (ip_database_info.ipv4_myAddress);
 14382                           
 14383                           ;incstack = 0
 14384  01386E  C200  F2AD         	movff	_ip_database_info,_dhcpData
 14385  013872  C201  F2AE         	movff	_ip_database_info+1,_dhcpData+1
 14386  013876  C202  F2AF         	movff	_ip_database_info+2,_dhcpData+2
 14387  01387A  C203  F2B0         	movff	_ip_database_info+3,_dhcpData+3
 14388                           
 14389                           ;dhcp_client.c: 121: dhcpData.xidValue = lfsr();
 14390  01387E  EC4C  F0A2         	call	_lfsr	;wreg free
 14391  013882  6E3B               	movwf	??_sendDHCPDISCOVER& (0+255),c
 14392  013884  503B               	movf	??_sendDHCPDISCOVER,w,c
 14393  013886  0102               	movlb	2	; () banked
 14394  013888  6FCD               	movwf	(_dhcpData+32)& (0+255),b
 14395  01388A  6BCE               	clrf	(_dhcpData+33)& (0+255),b
 14396  01388C  6BCF               	clrf	(_dhcpData+34)& (0+255),b
 14397  01388E  6BD0               	clrf	(_dhcpData+35)& (0+255),b
 14398                           
 14399                           ; BSR set to: 2
 14400                           ;dhcp_client.c: 122: dhcpData.xidValue <<= 8;
 14401  013890  C2CF  F2D0         	movff	_dhcpData+34,_dhcpData+35
 14402  013894  C2CE  F2CF         	movff	_dhcpData+33,_dhcpData+34
 14403  013898  C2CD  F2CE         	movff	_dhcpData+32,_dhcpData+33
 14404  01389C  6BCD               	clrf	(_dhcpData+32)& (0+255),b
 14405                           
 14406                           ; BSR set to: 2
 14407                           ;dhcp_client.c: 123: dhcpData.xidValue |= lfsr();
 14408  01389E  EC4C  F0A2         	call	_lfsr	;wreg free
 14409  0138A2  6E3B               	movwf	??_sendDHCPDISCOVER& (0+255),c
 14410  0138A4  503B               	movf	??_sendDHCPDISCOVER,w,c
 14411  0138A6  0102               	movlb	2	; () banked
 14412  0138A8  13CD               	iorwf	(_dhcpData+32)& (0+255),f,b
 14413                           
 14414                           ;dhcp_client.c: 124: dhcpData.xidValue <<= 8;
 14415  0138AA  C2CF  F2D0         	movff	_dhcpData+34,_dhcpData+35
 14416  0138AE  C2CE  F2CF         	movff	_dhcpData+33,_dhcpData+34
 14417  0138B2  C2CD  F2CE         	movff	_dhcpData+32,_dhcpData+33
 14418  0138B6  6BCD               	clrf	(_dhcpData+32)& (0+255),b
 14419                           
 14420                           ; BSR set to: 2
 14421                           ;dhcp_client.c: 125: dhcpData.xidValue |= lfsr();
 14422  0138B8  EC4C  F0A2         	call	_lfsr	;wreg free
 14423  0138BC  6E3B               	movwf	??_sendDHCPDISCOVER& (0+255),c
 14424  0138BE  503B               	movf	??_sendDHCPDISCOVER,w,c
 14425  0138C0  0102               	movlb	2	; () banked
 14426  0138C2  13CD               	iorwf	(_dhcpData+32)& (0+255),f,b
 14427                           
 14428                           ; BSR set to: 2
 14429                           ;dhcp_client.c: 126: dhcpData.xidValue <<= 8;
 14430  0138C4  C2CF  F2D0         	movff	_dhcpData+34,_dhcpData+35
 14431  0138C8  C2CE  F2CF         	movff	_dhcpData+33,_dhcpData+34
 14432  0138CC  C2CD  F2CE         	movff	_dhcpData+32,_dhcpData+33
 14433  0138D0  6BCD               	clrf	(_dhcpData+32)& (0+255),b
 14434                           
 14435                           ;dhcp_client.c: 127: dhcpData.xidValue |= lfsr();
 14436  0138D2  EC4C  F0A2         	call	_lfsr	;wreg free
 14437  0138D6  6E3B               	movwf	??_sendDHCPDISCOVER& (0+255),c
 14438  0138D8  503B               	movf	??_sendDHCPDISCOVER,w,c
 14439  0138DA  0102               	movlb	2	; () banked
 14440  0138DC  13CD               	iorwf	(_dhcpData+32)& (0+255),f,b
 14441                           
 14442                           ; BSR set to: 2
 14443                           ;dhcp_client.c: 128: return sendRequest(DHCP_DISCOVER);
 14444  0138DE  0E01               	movlw	1
 14445  0138E0  EC64  F091         	call	_sendRequest
 14446  0138E4  0012               	return	
 14447  0138E6                     __end_of_sendDHCPDISCOVER:
 14448                           	opt stack 0
 14449                           tosu	equ	0xFFF
 14450                           tosh	equ	0xFFE
 14451                           tosl	equ	0xFFD
 14452                           pclath	equ	0xFFA
 14453                           tblptru	equ	0xFF8
 14454                           tblptrh	equ	0xFF7
 14455                           tblptrl	equ	0xFF6
 14456                           tablat	equ	0xFF5
 14457                           prodh	equ	0xFF4
 14458                           prodl	equ	0xFF3
 14459                           intcon	equ	0xFF2
 14460                           indf0	equ	0xFEF
 14461                           postinc0	equ	0xFEE
 14462                           fsr0h	equ	0xFEA
 14463                           fsr0l	equ	0xFE9
 14464                           wreg	equ	0xFE8
 14465                           postinc1	equ	0xFE6
 14466                           postdec1	equ	0xFE5
 14467                           plusw1	equ	0xFE3
 14468                           fsr1h	equ	0xFE2
 14469                           fsr1l	equ	0xFE1
 14470                           indf2	equ	0xFDF
 14471                           postinc2	equ	0xFDE
 14472                           postdec2	equ	0xFDD
 14473                           plusw2	equ	0xFDB
 14474                           fsr2h	equ	0xFDA
 14475                           fsr2l	equ	0xFD9
 14476                           status	equ	0xFD8
 14477                           
 14478 ;; *************** function _sendRequest *****************
 14479 ;; Defined at:
 14480 ;;		line 141 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 14481 ;; Parameters:    Size  Location     Type
 14482 ;;  type            1    wreg     enum E769
 14483 ;; Auto vars:     Size  Location     Type
 14484 ;;  type            1   57[COMRAM] enum E769
 14485 ;;  started         1   56[COMRAM] enum E507
 14486 ;; Return value:  Size  Location     Type
 14487 ;;                  1    wreg      unsigned char 
 14488 ;; Registers used:
 14489 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14490 ;; Tracked objects:
 14491 ;;		On entry : 0/0
 14492 ;;		On exit  : 0/0
 14493 ;;		Unchanged: 0/0
 14494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14499 ;;Total ram usage:        2 bytes
 14500 ;; Hardware stack levels used:    1
 14501 ;; Hardware stack levels required when called:   10
 14502 ;; This function calls:
 14503 ;;		_DHCP_WriteZeros
 14504 ;;		_ETH_Write16
 14505 ;;		_ETH_Write32
 14506 ;;		_ETH_Write8
 14507 ;;		_ETH_WriteBlock
 14508 ;;		_ETH_WriteString
 14509 ;;		_UDP_Send
 14510 ;;		_UDP_Start
 14511 ;;		_strlen
 14512 ;; This function is called by:
 14513 ;;		_sendDHCPDISCOVER
 14514 ;;		_sendDHCPREQUEST
 14515 ;;		_sendDHCPDECLINE
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text70
 14520  0122C8                     __ptext70:
 14521                           	opt stack 0
 14522  0122C8                     _sendRequest:
 14523                           	opt stack 14
 14524                           
 14525                           ;incstack = 0
 14526                           ;sendRequest@type stored from wreg
 14527  0122C8  6E3A               	movwf	sendRequest@type,c
 14528                           
 14529                           ;dhcp_client.c: 144: error_msg started;
 14530                           ;dhcp_client.c: 147: started = UDP_Start(0xFFFFFFFF,68,67);
 14531  0122CA  0EFF               	movlw	255
 14532  0122CC  0100               	movlb	0	; () banked
 14533  0122CE  6FA8               	movwf	UDP_Start@destIP& (0+255),b
 14534  0122D0  0EFF               	movlw	255
 14535  0122D2  6FA9               	movwf	(UDP_Start@destIP+1)& (0+255),b
 14536  0122D4  0EFF               	movlw	255
 14537  0122D6  6FAA               	movwf	(UDP_Start@destIP+2)& (0+255),b
 14538  0122D8  0EFF               	movlw	255
 14539  0122DA  6FAB               	movwf	(UDP_Start@destIP+3)& (0+255),b
 14540  0122DC  0E00               	movlw	0
 14541  0122DE  6FAD               	movwf	(UDP_Start@srcPort+1)& (0+255),b
 14542  0122E0  0E44               	movlw	68
 14543  0122E2  6FAC               	movwf	UDP_Start@srcPort& (0+255),b
 14544  0122E4  0E00               	movlw	0
 14545  0122E6  6FAF               	movwf	(UDP_Start@dstPort+1)& (0+255),b
 14546  0122E8  0E43               	movlw	67
 14547  0122EA  6FAE               	movwf	UDP_Start@dstPort& (0+255),b
 14548  0122EC  EC0F  F09E         	call	_UDP_Start	;wreg free
 14549  0122F0  6E39               	movwf	sendRequest@started,c
 14550                           
 14551                           ;dhcp_client.c: 148: if(started==SUCCESS)
 14552  0122F2  0439               	decf	sendRequest@started,w,c
 14553  0122F4  A4D8               	btfss	status,2,c
 14554  0122F6  D0F6               	goto	l1303
 14555                           
 14556                           ;dhcp_client.c: 149: {
 14557                           ;dhcp_client.c: 150: ETH_Write32(0x01010600);
 14558  0122F8  0E00               	movlw	0
 14559  0122FA  6E13               	movwf	ETH_Write32@data,c
 14560  0122FC  0E06               	movlw	6
 14561  0122FE  6E14               	movwf	ETH_Write32@data+1,c
 14562  012300  0E01               	movlw	1
 14563  012302  6E15               	movwf	ETH_Write32@data+2,c
 14564  012304  0E01               	movlw	1
 14565  012306  6E16               	movwf	ETH_Write32@data+3,c
 14566  012308  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14567                           
 14568                           ;dhcp_client.c: 151: ETH_Write32(dhcpData.xidValue);
 14569  01230C  C2CD  F013         	movff	_dhcpData+32,ETH_Write32@data
 14570  012310  C2CE  F014         	movff	_dhcpData+33,ETH_Write32@data+1
 14571  012314  C2CF  F015         	movff	_dhcpData+34,ETH_Write32@data+2
 14572  012318  C2D0  F016         	movff	_dhcpData+35,ETH_Write32@data+3
 14573  01231C  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14574                           
 14575                           ;dhcp_client.c: 152: ETH_Write32(0x00008000);
 14576  012320  0E00               	movlw	0
 14577  012322  6E13               	movwf	ETH_Write32@data,c
 14578  012324  0E80               	movlw	128
 14579  012326  6E14               	movwf	ETH_Write32@data+1,c
 14580  012328  0E00               	movlw	0
 14581  01232A  6E15               	movwf	ETH_Write32@data+2,c
 14582  01232C  0E00               	movlw	0
 14583  01232E  6E16               	movwf	ETH_Write32@data+3,c
 14584  012330  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14585                           
 14586                           ;dhcp_client.c: 153: if(type == DHCP_REQUEST)
 14587  012334  0E03               	movlw	3
 14588  012336  183A               	xorwf	sendRequest@type,w,c
 14589  012338  A4D8               	btfss	status,2,c
 14590  01233A  D00B               	goto	l1304
 14591                           
 14592                           ;dhcp_client.c: 154: {
 14593                           ;dhcp_client.c: 155: ETH_Write32(0);
 14594  01233C  0E00               	movlw	0
 14595  01233E  6E13               	movwf	ETH_Write32@data,c
 14596  012340  0E00               	movlw	0
 14597  012342  6E14               	movwf	ETH_Write32@data+1,c
 14598  012344  0E00               	movlw	0
 14599  012346  6E15               	movwf	ETH_Write32@data+2,c
 14600  012348  0E00               	movlw	0
 14601  01234A  6E16               	movwf	ETH_Write32@data+3,c
 14602  01234C  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14603                           
 14604                           ;dhcp_client.c: 156: }
 14605  012350  D00A               	goto	l1305
 14606  012352                     l1304:
 14607                           
 14608                           ;dhcp_client.c: 157: else
 14609                           ;dhcp_client.c: 158: {
 14610                           ;dhcp_client.c: 159: ETH_Write32(dhcpData.dhcpIPAddress);
 14611  012352  C2AD  F013         	movff	_dhcpData,ETH_Write32@data
 14612  012356  C2AE  F014         	movff	_dhcpData+1,ETH_Write32@data+1
 14613  01235A  C2AF  F015         	movff	_dhcpData+2,ETH_Write32@data+2
 14614  01235E  C2B0  F016         	movff	_dhcpData+3,ETH_Write32@data+3
 14615  012362  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14616  012366                     l1305:
 14617                           
 14618                           ;dhcp_client.c: 160: }
 14619                           ;dhcp_client.c: 161: ETH_Write32(0);
 14620  012366  0E00               	movlw	0
 14621  012368  6E13               	movwf	ETH_Write32@data,c
 14622  01236A  0E00               	movlw	0
 14623  01236C  6E14               	movwf	ETH_Write32@data+1,c
 14624  01236E  0E00               	movlw	0
 14625  012370  6E15               	movwf	ETH_Write32@data+2,c
 14626  012372  0E00               	movlw	0
 14627  012374  6E16               	movwf	ETH_Write32@data+3,c
 14628  012376  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14629                           
 14630                           ;dhcp_client.c: 162: ETH_Write32(0);
 14631  01237A  0E00               	movlw	0
 14632  01237C  6E13               	movwf	ETH_Write32@data,c
 14633  01237E  0E00               	movlw	0
 14634  012380  6E14               	movwf	ETH_Write32@data+1,c
 14635  012382  0E00               	movlw	0
 14636  012384  6E15               	movwf	ETH_Write32@data+2,c
 14637  012386  0E00               	movlw	0
 14638  012388  6E16               	movwf	ETH_Write32@data+3,c
 14639  01238A  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14640                           
 14641                           ;dhcp_client.c: 163: ETH_Write32(0);
 14642  01238E  0E00               	movlw	0
 14643  012390  6E13               	movwf	ETH_Write32@data,c
 14644  012392  0E00               	movlw	0
 14645  012394  6E14               	movwf	ETH_Write32@data+1,c
 14646  012396  0E00               	movlw	0
 14647  012398  6E15               	movwf	ETH_Write32@data+2,c
 14648  01239A  0E00               	movlw	0
 14649  01239C  6E16               	movwf	ETH_Write32@data+3,c
 14650  01239E  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14651                           
 14652                           ;dhcp_client.c: 164: ETH_WriteBlock((char *)&hostMacAddress,6);
 14653  0123A2  0E73               	movlw	low _hostMacAddress
 14654  0123A4  6E13               	movwf	ETH_WriteBlock@buffer,c
 14655  0123A6  0E02               	movlw	high _hostMacAddress
 14656  0123A8  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 14657  0123AA  0E00               	movlw	0
 14658  0123AC  6E16               	movwf	ETH_WriteBlock@length+1,c
 14659  0123AE  0E06               	movlw	6
 14660  0123B0  6E15               	movwf	ETH_WriteBlock@length,c
 14661  0123B2  EC74  F0A0         	call	_ETH_WriteBlock	;wreg free
 14662                           
 14663                           ;dhcp_client.c: 165: DHCP_WriteZeros(202);
 14664  0123B6  0E00               	movlw	0
 14665  0123B8  6E15               	movwf	DHCP_WriteZeros@length+1,c
 14666  0123BA  0ECA               	movlw	202
 14667  0123BC  6E14               	movwf	DHCP_WriteZeros@length,c
 14668  0123BE  EC3F  F0A2         	call	_DHCP_WriteZeros	;wreg free
 14669                           
 14670                           ;dhcp_client.c: 166: ETH_Write32(0x63825363);
 14671  0123C2  0E63               	movlw	99
 14672  0123C4  6E13               	movwf	ETH_Write32@data,c
 14673  0123C6  0E53               	movlw	83
 14674  0123C8  6E14               	movwf	ETH_Write32@data+1,c
 14675  0123CA  0E82               	movlw	130
 14676  0123CC  6E15               	movwf	ETH_Write32@data+2,c
 14677  0123CE  0E63               	movlw	99
 14678  0123D0  6E16               	movwf	ETH_Write32@data+3,c
 14679  0123D2  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14680                           
 14681                           ;dhcp_client.c: 169: ETH_Write8(12); ETH_Write8(strlen(dhcpName)); ETH_WriteString(dhcpN
      +                          ame);
 14682  0123D6  0E0C               	movlw	12
 14683  0123D8  ECDF  F0A2         	call	_ETH_Write8
 14684  0123DC  0E3B               	movlw	low _dhcpName
 14685  0123DE  6E13               	movwf	strlen@s,c
 14686  0123E0  0EFF               	movlw	high _dhcpName
 14687  0123E2  6E14               	movwf	strlen@s+1,c
 14688  0123E4  EC18  F09F         	call	_strlen	;wreg free
 14689  0123E8  5013               	movf	?_strlen,w,c
 14690  0123EA  ECDF  F0A2         	call	_ETH_Write8
 14691  0123EE  0E3B               	movlw	low _dhcpName
 14692  0123F0  6E13               	movwf	ETH_WriteString@string,c
 14693  0123F2  0EFF               	movlw	high _dhcpName
 14694  0123F4  6E14               	movwf	ETH_WriteString@string+1,c
 14695  0123F6  EC8F  F09F         	call	_ETH_WriteString	;wreg free
 14696                           
 14697                           ;dhcp_client.c: 171: ETH_Write8(42); ETH_Write8(4); ETH_Write32(0);
 14698  0123FA  0E2A               	movlw	42
 14699  0123FC  ECDF  F0A2         	call	_ETH_Write8
 14700  012400  0E04               	movlw	4
 14701  012402  ECDF  F0A2         	call	_ETH_Write8
 14702  012406  0E00               	movlw	0
 14703  012408  6E13               	movwf	ETH_Write32@data,c
 14704  01240A  0E00               	movlw	0
 14705  01240C  6E14               	movwf	ETH_Write32@data+1,c
 14706  01240E  0E00               	movlw	0
 14707  012410  6E15               	movwf	ETH_Write32@data+2,c
 14708  012412  0E00               	movlw	0
 14709  012414  6E16               	movwf	ETH_Write32@data+3,c
 14710  012416  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14711                           
 14712                           ;dhcp_client.c: 173: ETH_Write8(53); ETH_Write8(1); ETH_Write8(type);
 14713  01241A  0E35               	movlw	53
 14714  01241C  ECDF  F0A2         	call	_ETH_Write8
 14715  012420  0E01               	movlw	1
 14716  012422  ECDF  F0A2         	call	_ETH_Write8
 14717  012426  503A               	movf	sendRequest@type,w,c
 14718  012428  ECDF  F0A2         	call	_ETH_Write8
 14719                           
 14720                           ;dhcp_client.c: 174: if(type == DHCP_REQUEST)
 14721  01242C  0E03               	movlw	3
 14722  01242E  183A               	xorwf	sendRequest@type,w,c
 14723  012430  A4D8               	btfss	status,2,c
 14724  012432  D020               	goto	l1306
 14725                           
 14726                           ;dhcp_client.c: 175: {
 14727                           ;dhcp_client.c: 177: ETH_Write8(50);ETH_Write8(4);ETH_Write32(dhcpData.dhcpIPAddress);
 14728  012434  0E32               	movlw	50
 14729  012436  ECDF  F0A2         	call	_ETH_Write8
 14730  01243A  0E04               	movlw	4
 14731  01243C  ECDF  F0A2         	call	_ETH_Write8
 14732  012440  C2AD  F013         	movff	_dhcpData,ETH_Write32@data
 14733  012444  C2AE  F014         	movff	_dhcpData+1,ETH_Write32@data+1
 14734  012448  C2AF  F015         	movff	_dhcpData+2,ETH_Write32@data+2
 14735  01244C  C2B0  F016         	movff	_dhcpData+3,ETH_Write32@data+3
 14736  012450  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14737                           
 14738                           ;dhcp_client.c: 179: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpData.leasee_ip);
 14739  012454  0E36               	movlw	54
 14740  012456  ECDF  F0A2         	call	_ETH_Write8
 14741  01245A  0E04               	movlw	4
 14742  01245C  ECDF  F0A2         	call	_ETH_Write8
 14743  012460  C2D9  F013         	movff	_dhcpData+44,ETH_Write32@data
 14744  012464  C2DA  F014         	movff	_dhcpData+45,ETH_Write32@data+1
 14745  012468  C2DB  F015         	movff	_dhcpData+46,ETH_Write32@data+2
 14746  01246C  C2DC  F016         	movff	_dhcpData+47,ETH_Write32@data+3
 14747  012470  EC32  F0A2         	call	_ETH_Write32	;wreg free
 14748  012474                     l1306:
 14749                           
 14750                           ;dhcp_client.c: 180: }
 14751                           ;dhcp_client.c: 182: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 14752  012474  0E37               	movlw	55
 14753  012476  ECDF  F0A2         	call	_ETH_Write8
 14754  01247A  0E04               	movlw	4
 14755  01247C  ECDF  F0A2         	call	_ETH_Write8
 14756  012480  0E01               	movlw	1
 14757  012482  ECDF  F0A2         	call	_ETH_Write8
 14758  012486  0E03               	movlw	3
 14759  012488  ECDF  F0A2         	call	_ETH_Write8
 14760  01248C  0E06               	movlw	6
 14761  01248E  ECDF  F0A2         	call	_ETH_Write8
 14762  012492  0E0F               	movlw	15
 14763  012494  ECDF  F0A2         	call	_ETH_Write8
 14764                           
 14765                           ;dhcp_client.c: 184: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 14766  012498  0E39               	movlw	57
 14767  01249A  ECDF  F0A2         	call	_ETH_Write8
 14768  01249E  0E02               	movlw	2
 14769  0124A0  ECDF  F0A2         	call	_ETH_Write8
 14770  0124A4  0E02               	movlw	2
 14771  0124A6  6E14               	movwf	ETH_Write16@data+1,c
 14772  0124A8  0E00               	movlw	0
 14773  0124AA  6E13               	movwf	ETH_Write16@data,c
 14774  0124AC  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 14775                           
 14776                           ;dhcp_client.c: 186: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock(&hostM
      +                          acAddress,6);
 14777  0124B0  0E3D               	movlw	61
 14778  0124B2  ECDF  F0A2         	call	_ETH_Write8
 14779  0124B6  0E07               	movlw	7
 14780  0124B8  ECDF  F0A2         	call	_ETH_Write8
 14781  0124BC  0E01               	movlw	1
 14782  0124BE  ECDF  F0A2         	call	_ETH_Write8
 14783  0124C2  0E73               	movlw	low _hostMacAddress
 14784  0124C4  6E13               	movwf	ETH_WriteBlock@buffer,c
 14785  0124C6  0E02               	movlw	high _hostMacAddress
 14786  0124C8  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 14787  0124CA  0E00               	movlw	0
 14788  0124CC  6E16               	movwf	ETH_WriteBlock@length+1,c
 14789  0124CE  0E06               	movlw	6
 14790  0124D0  6E15               	movwf	ETH_WriteBlock@length,c
 14791  0124D2  EC74  F0A0         	call	_ETH_WriteBlock	;wreg free
 14792                           
 14793                           ;dhcp_client.c: 187: ETH_Write8(255);
 14794  0124D6  0EFF               	movlw	255
 14795  0124D8  ECDF  F0A2         	call	_ETH_Write8
 14796                           
 14797                           ;dhcp_client.c: 192: UDP_Send();
 14798  0124DC  EC99  F097         	call	_UDP_Send	;wreg free
 14799                           
 14800                           ;dhcp_client.c: 193: return 1;
 14801  0124E0  0E01               	movlw	1
 14802  0124E2  0012               	return	
 14803  0124E4                     l1303:
 14804                           
 14805                           ;dhcp_client.c: 194: }
 14806                           ;dhcp_client.c: 195: return 0;
 14807  0124E4  0E00               	movlw	0
 14808  0124E6  0012               	return	
 14809  0124E8                     __end_of_sendRequest:
 14810                           	opt stack 0
 14811                           tosu	equ	0xFFF
 14812                           tosh	equ	0xFFE
 14813                           tosl	equ	0xFFD
 14814                           pclath	equ	0xFFA
 14815                           tblptru	equ	0xFF8
 14816                           tblptrh	equ	0xFF7
 14817                           tblptrl	equ	0xFF6
 14818                           tablat	equ	0xFF5
 14819                           prodh	equ	0xFF4
 14820                           prodl	equ	0xFF3
 14821                           intcon	equ	0xFF2
 14822                           indf0	equ	0xFEF
 14823                           postinc0	equ	0xFEE
 14824                           fsr0h	equ	0xFEA
 14825                           fsr0l	equ	0xFE9
 14826                           wreg	equ	0xFE8
 14827                           postinc1	equ	0xFE6
 14828                           postdec1	equ	0xFE5
 14829                           plusw1	equ	0xFE3
 14830                           fsr1h	equ	0xFE2
 14831                           fsr1l	equ	0xFE1
 14832                           indf2	equ	0xFDF
 14833                           postinc2	equ	0xFDE
 14834                           postdec2	equ	0xFDD
 14835                           plusw2	equ	0xFDB
 14836                           fsr2h	equ	0xFDA
 14837                           fsr2l	equ	0xFD9
 14838                           status	equ	0xFD8
 14839                           
 14840 ;; *************** function _strlen *****************
 14841 ;; Defined at:
 14842 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\strlen.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;  s               2   18[COMRAM] PTR const unsigned char 
 14845 ;;		 -> DHCP_Handler@chaddr(16), dhcpName(13), 
 14846 ;; Auto vars:     Size  Location     Type
 14847 ;;  cp              2   22[COMRAM] PTR const unsigned char 
 14848 ;;		 -> DHCP_Handler@chaddr(16), dhcpName(13), 
 14849 ;; Return value:  Size  Location     Type
 14850 ;;                  2   18[COMRAM] unsigned int 
 14851 ;; Registers used:
 14852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14861 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14862 ;;Total ram usage:        6 bytes
 14863 ;; Hardware stack levels used:    1
 14864 ;; Hardware stack levels required when called:    4
 14865 ;; This function calls:
 14866 ;;		Nothing
 14867 ;; This function is called by:
 14868 ;;		_sendRequest
 14869 ;;		_DHCP_Handler
 14870 ;;		_DNS_Query
 14871 ;; This function uses a non-reentrant model
 14872 ;;
 14873                           
 14874                           	psect	text71
 14875  013E30                     __ptext71:
 14876                           	opt stack 0
 14877  013E30                     _strlen:
 14878                           	opt stack 21
 14879                           
 14880                           ;incstack = 0
 14881  013E30  C013  F017         	movff	strlen@s,strlen@cp
 14882  013E34  C014  F018         	movff	strlen@s+1,strlen@cp+1
 14883  013E38  D002               	goto	l2222
 14884  013E3A  4A17               	infsnz	strlen@cp,f,c
 14885  013E3C  2A18               	incf	strlen@cp+1,f,c
 14886  013E3E                     l2222:
 14887  013E3E  C017  FFF6         	movff	strlen@cp,tblptrl
 14888  013E42  C018  FFF7         	movff	strlen@cp+1,tblptrh
 14889  013E46  0E00               	movlw	low (__mediumconst shr (0+16))
 14890  013E48  6EF8               	movwf	tblptru,c
 14891  013E4A  0E0F               	movlw	(high __ramtop+-1)
 14892  013E4C  64F7               	cpfsgt	tblptrh,c
 14893  013E4E  D003               	bra	u6857
 14894  013E50  0008               	tblrd		*
 14895  013E52  50F5               	movf	tablat,w,c
 14896  013E54  D005               	bra	u6850
 14897  013E56                     u6857:
 14898  013E56  CFF6 FFE9          	movff	tblptrl,fsr0l
 14899  013E5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14900  013E5E  50EF               	movf	indf0,w,c
 14901  013E60                     u6850:
 14902  013E60  0900               	iorlw	0
 14903  013E62  A4D8               	btfss	status,2,c
 14904  013E64  D7EA               	goto	l2223
 14905  013E66  C013  F015         	movff	strlen@s,??_strlen
 14906  013E6A  C014  F016         	movff	strlen@s+1,??_strlen+1
 14907  013E6E  1E15               	comf	??_strlen,f,c
 14908  013E70  1E16               	comf	??_strlen+1,f,c
 14909  013E72  4A15               	infsnz	??_strlen,f,c
 14910  013E74  2A16               	incf	??_strlen+1,f,c
 14911  013E76  5017               	movf	strlen@cp,w,c
 14912  013E78  2415               	addwf	??_strlen,w,c
 14913  013E7A  6E13               	movwf	?_strlen,c
 14914  013E7C  5018               	movf	strlen@cp+1,w,c
 14915  013E7E  2016               	addwfc	??_strlen+1,w,c
 14916  013E80  6E14               	movwf	?_strlen+1,c
 14917  013E82  0012               	return	
 14918  013E84                     __end_of_strlen:
 14919                           	opt stack 0
 14920                           tosu	equ	0xFFF
 14921                           tosh	equ	0xFFE
 14922                           tosl	equ	0xFFD
 14923                           pclath	equ	0xFFA
 14924                           tblptru	equ	0xFF8
 14925                           tblptrh	equ	0xFF7
 14926                           tblptrl	equ	0xFF6
 14927                           tablat	equ	0xFF5
 14928                           prodh	equ	0xFF4
 14929                           prodl	equ	0xFF3
 14930                           intcon	equ	0xFF2
 14931                           indf0	equ	0xFEF
 14932                           postinc0	equ	0xFEE
 14933                           fsr0h	equ	0xFEA
 14934                           fsr0l	equ	0xFE9
 14935                           wreg	equ	0xFE8
 14936                           postinc1	equ	0xFE6
 14937                           postdec1	equ	0xFE5
 14938                           plusw1	equ	0xFE3
 14939                           fsr1h	equ	0xFE2
 14940                           fsr1l	equ	0xFE1
 14941                           indf2	equ	0xFDF
 14942                           postinc2	equ	0xFDE
 14943                           postdec2	equ	0xFDD
 14944                           plusw2	equ	0xFDB
 14945                           fsr2h	equ	0xFDA
 14946                           fsr2l	equ	0xFD9
 14947                           status	equ	0xFD8
 14948                           
 14949 ;; *************** function _UDP_Start *****************
 14950 ;; Defined at:
 14951 ;;		line 66 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 14952 ;; Parameters:    Size  Location     Type
 14953 ;;  destIP          4   72[BANK0 ] unsigned long 
 14954 ;;  srcPort         2   76[BANK0 ] unsigned int 
 14955 ;;  dstPort         2   78[BANK0 ] unsigned int 
 14956 ;; Auto vars:     Size  Location     Type
 14957 ;;  ret             1   53[COMRAM] enum E393
 14958 ;; Return value:  Size  Location     Type
 14959 ;;                  1    wreg      enum E393
 14960 ;; Registers used:
 14961 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14962 ;; Tracked objects:
 14963 ;;		On entry : 0/0
 14964 ;;		On exit  : 0/0
 14965 ;;		Unchanged: 0/0
 14966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14967 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14970 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14971 ;;Total ram usage:        9 bytes
 14972 ;; Hardware stack levels used:    1
 14973 ;; Hardware stack levels required when called:    9
 14974 ;; This function calls:
 14975 ;;		_ETH_ResetByteCount
 14976 ;;		_ETH_Write16
 14977 ;;		_IPv4_Start
 14978 ;; This function is called by:
 14979 ;;		_sendRequest
 14980 ;;		_DNS_Query
 14981 ;; This function uses a non-reentrant model
 14982 ;;
 14983                           
 14984                           	psect	text72
 14985  013C1E                     __ptext72:
 14986                           	opt stack 0
 14987  013C1E                     _UDP_Start:
 14988                           	opt stack 14
 14989                           
 14990                           ;udpv4.c: 69: error_msg ret = ERROR;
 14991                           
 14992                           ;incstack = 0
 14993  013C1E  0E00               	movlw	0
 14994  013C20  6E36               	movwf	UDP_Start@ret,c
 14995                           
 14996                           ;udpv4.c: 72: ret = IPv4_Start(destIP,UDP_TCPIP);
 14997  013C22  C0A8  F031         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 14998  013C26  C0A9  F032         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 14999  013C2A  C0AA  F033         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 15000  013C2E  C0AB  F034         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 15001  013C32  0E11               	movlw	17
 15002  013C34  6E35               	movwf	IPv4_Start@protocol,c
 15003  013C36  EC35  F08F         	call	_IPv4_Start	;wreg free
 15004  013C3A  6E36               	movwf	UDP_Start@ret,c
 15005                           
 15006                           ;udpv4.c: 73: if(ret == SUCCESS)
 15007  013C3C  0436               	decf	UDP_Start@ret,w,c
 15008  013C3E  A4D8               	btfss	status,2,c
 15009  013C40  D01A               	goto	l1217
 15010                           
 15011                           ;udpv4.c: 74: {
 15012                           ;udpv4.c: 76: ETH_ResetByteCount();
 15013  013C42  ECD5  F0A2         	call	_ETH_ResetByteCount	;wreg free
 15014                           
 15015                           ;udpv4.c: 79: ETH_Write16(srcPort);
 15016  013C46  C0AC  F013         	movff	UDP_Start@srcPort,ETH_Write16@data
 15017  013C4A  C0AD  F014         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 15018  013C4E  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 15019                           
 15020                           ;udpv4.c: 82: ETH_Write16(dstPort);
 15021  013C52  C0AE  F013         	movff	UDP_Start@dstPort,ETH_Write16@data
 15022  013C56  C0AF  F014         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 15023  013C5A  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 15024                           
 15025                           ;udpv4.c: 85: ETH_Write16(0);
 15026  013C5E  0E00               	movlw	0
 15027  013C60  6E14               	movwf	ETH_Write16@data+1,c
 15028  013C62  0E00               	movlw	0
 15029  013C64  6E13               	movwf	ETH_Write16@data,c
 15030  013C66  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 15031                           
 15032                           ;udpv4.c: 88: ETH_Write16(0);
 15033  013C6A  0E00               	movlw	0
 15034  013C6C  6E14               	movwf	ETH_Write16@data+1,c
 15035  013C6E  0E00               	movlw	0
 15036  013C70  6E13               	movwf	ETH_Write16@data,c
 15037  013C72  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 15038  013C76                     l1217:
 15039                           
 15040                           ;udpv4.c: 90: }
 15041                           ;udpv4.c: 91: return ret;
 15042  013C76  5036               	movf	UDP_Start@ret,w,c
 15043  013C78  0012               	return	
 15044  013C7A                     __end_of_UDP_Start:
 15045                           	opt stack 0
 15046                           tosu	equ	0xFFF
 15047                           tosh	equ	0xFFE
 15048                           tosl	equ	0xFFD
 15049                           pclath	equ	0xFFA
 15050                           tblptru	equ	0xFF8
 15051                           tblptrh	equ	0xFF7
 15052                           tblptrl	equ	0xFF6
 15053                           tablat	equ	0xFF5
 15054                           prodh	equ	0xFF4
 15055                           prodl	equ	0xFF3
 15056                           intcon	equ	0xFF2
 15057                           indf0	equ	0xFEF
 15058                           postinc0	equ	0xFEE
 15059                           fsr0h	equ	0xFEA
 15060                           fsr0l	equ	0xFE9
 15061                           wreg	equ	0xFE8
 15062                           postinc1	equ	0xFE6
 15063                           postdec1	equ	0xFE5
 15064                           plusw1	equ	0xFE3
 15065                           fsr1h	equ	0xFE2
 15066                           fsr1l	equ	0xFE1
 15067                           indf2	equ	0xFDF
 15068                           postinc2	equ	0xFDE
 15069                           postdec2	equ	0xFDD
 15070                           plusw2	equ	0xFDB
 15071                           fsr2h	equ	0xFDA
 15072                           fsr2l	equ	0xFD9
 15073                           status	equ	0xFD8
 15074                           
 15075 ;; *************** function _IPv4_Start *****************
 15076 ;; Defined at:
 15077 ;;		line 186 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 15078 ;; Parameters:    Size  Location     Type
 15079 ;;  destAddress     4   48[COMRAM] unsigned long 
 15080 ;;  protocol        1   52[COMRAM] enum E236
 15081 ;; Auto vars:     Size  Location     Type
 15082 ;;  targetAddres    4   65[BANK0 ] unsigned long 
 15083 ;;  macAddress      2   69[BANK0 ] PTR const struct .
 15084 ;;		 -> arpMap.macAddress(6), NULL(0), broadcastMAC(6), arpMap(104), 
 15085 ;;  ret             1   71[BANK0 ] enum E392
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      enum E392
 15088 ;; Registers used:
 15089 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15095 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15096 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15097 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;      Totals:         5      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15099 ;;Total ram usage:       20 bytes
 15100 ;; Hardware stack levels used:    1
 15101 ;; Hardware stack levels required when called:    8
 15102 ;; This function calls:
 15103 ;;		_ARPV4_Lookup
 15104 ;;		_ARPV4_Request
 15105 ;;		_ETH_Write16
 15106 ;;		_ETH_Write32
 15107 ;;		_ETH_Write8
 15108 ;;		_ETH_WriteStart
 15109 ;; This function is called by:
 15110 ;;		_ICMP_EchoReply
 15111 ;;		_ICMP_PortUnreachable
 15112 ;;		_UDP_Start
 15113 ;; This function uses a non-reentrant model
 15114 ;;
 15115                           
 15116                           	psect	text73
 15117  011E6A                     __ptext73:
 15118                           	opt stack 0
 15119  011E6A                     _IPv4_Start:
 15120                           	opt stack 17
 15121                           
 15122                           ;ipv4.c: 188: error_msg ret = ERROR;
 15123                           
 15124                           ;incstack = 0
 15125  011E6A  0E00               	movlw	0
 15126  011E6C  0100               	movlb	0	; () banked
 15127  011E6E  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 15128                           
 15129                           ; BSR set to: 0
 15130                           ;ipv4.c: 190: const mac48Address_t *macAddress;
 15131                           ;ipv4.c: 191: uint32_t targetAddress;
 15132                           ;ipv4.c: 194: if((((ip_database_info.ipv4_myAddress) != 0) || (protocol == UDP_TCPIP))
 15133                           ;ipv4.c: 195: && ((ip_database_info.ipv4_myAddress) != 0x7F000001))
 15134  011E70  0102               	movlb	2	; () banked
 15135  011E72  5100               	movf	_ip_database_info& (0+255),w,b
 15136  011E74  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 15137  011E76  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 15138  011E78  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 15139  011E7A  A4D8               	btfss	status,2,c
 15140  011E7C  D004               	goto	u6710
 15141                           
 15142                           ; BSR set to: 2
 15143  011E7E  0E11               	movlw	17
 15144  011E80  1835               	xorwf	IPv4_Start@protocol,w,c
 15145  011E82  A4D8               	btfss	status,2,c
 15146  011E84  D10D               	goto	l886
 15147  011E86                     u6710:
 15148                           
 15149                           ; BSR set to: 2
 15150                           
 15151                           ; BSR set to: 2
 15152  011E86  0500               	decf	_ip_database_info& (0+255),w,b
 15153  011E88  E106               	bnz	u6720
 15154  011E8A  0E7F               	movlw	127
 15155  011E8C  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 15156  011E8E  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 15157  011E90  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 15158  011E92  B4D8               	btfsc	status,2,c
 15159  011E94  D105               	goto	l886
 15160  011E96                     u6720:
 15161                           
 15162                           ; BSR set to: 2
 15163                           ;ipv4.c: 196: {
 15164                           ;ipv4.c: 197: if(((destAddress == 0xFFFFFFFF)
 15165                           ;ipv4.c: 198: |((destAddress | 0XFF000000) == 0xFFFFFFFF)
 15166                           ;ipv4.c: 199: |((destAddress | 0xFFFF0000 )== 0xFFFFFFFF)
 15167                           ;ipv4.c: 200: |((destAddress | 0xFFFFFF00) == 0xFFFFFFFF))==0)
 15168  011E96  2831               	incf	IPv4_Start@destAddress,w,c
 15169  011E98  E107               	bnz	u6730
 15170  011E9A  2832               	incf	IPv4_Start@destAddress+1,w,c
 15171  011E9C  E105               	bnz	u6730
 15172  011E9E  2833               	incf	IPv4_Start@destAddress+2,w,c
 15173  011EA0  E103               	bnz	u6730
 15174  011EA2  2834               	incf	IPv4_Start@destAddress+3,w,c
 15175  011EA4  B4D8               	btfsc	status,2,c
 15176  011EA6  D0A0               	goto	l880
 15177  011EA8                     u6730:
 15178                           
 15179                           ; BSR set to: 2
 15180  011EA8  0E00               	movlw	0
 15181  011EAA  1031               	iorwf	IPv4_Start@destAddress,w,c
 15182  011EAC  0100               	movlb	0	; () banked
 15183  011EAE  6F99               	movwf	??_IPv4_Start& (0+255),b
 15184  011EB0  0E00               	movlw	0
 15185  011EB2  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 15186  011EB4  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 15187  011EB6  0E00               	movlw	0
 15188  011EB8  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 15189  011EBA  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 15190  011EBC  0EFF               	movlw	255
 15191  011EBE  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 15192  011EC0  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 15193  011EC2  2999               	incf	??_IPv4_Start& (0+255),w,b
 15194  011EC4  E107               	bnz	u6740
 15195  011EC6  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 15196  011EC8  E105               	bnz	u6740
 15197  011ECA  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 15198  011ECC  E103               	bnz	u6740
 15199  011ECE  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 15200  011ED0  B4D8               	btfsc	status,2,c
 15201  011ED2  D08A               	goto	l880
 15202  011ED4                     u6740:
 15203                           
 15204                           ; BSR set to: 0
 15205  011ED4  0E00               	movlw	0
 15206  011ED6  1031               	iorwf	IPv4_Start@destAddress,w,c
 15207  011ED8  6F99               	movwf	??_IPv4_Start& (0+255),b
 15208  011EDA  0E00               	movlw	0
 15209  011EDC  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 15210  011EDE  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 15211  011EE0  0EFF               	movlw	255
 15212  011EE2  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 15213  011EE4  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 15214  011EE6  0EFF               	movlw	255
 15215  011EE8  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 15216  011EEA  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 15217  011EEC  2999               	incf	??_IPv4_Start& (0+255),w,b
 15218  011EEE  E107               	bnz	u6750
 15219  011EF0  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 15220  011EF2  E105               	bnz	u6750
 15221  011EF4  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 15222  011EF6  E103               	bnz	u6750
 15223  011EF8  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 15224  011EFA  B4D8               	btfsc	status,2,c
 15225  011EFC  D075               	goto	l880
 15226  011EFE                     u6750:
 15227                           
 15228                           ; BSR set to: 0
 15229  011EFE  0E00               	movlw	0
 15230  011F00  1031               	iorwf	IPv4_Start@destAddress,w,c
 15231  011F02  6F99               	movwf	??_IPv4_Start& (0+255),b
 15232  011F04  0EFF               	movlw	255
 15233  011F06  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 15234  011F08  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 15235  011F0A  0EFF               	movlw	255
 15236  011F0C  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 15237  011F0E  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 15238  011F10  0EFF               	movlw	255
 15239  011F12  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 15240  011F14  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 15241  011F16  2999               	incf	??_IPv4_Start& (0+255),w,b
 15242  011F18  E107               	bnz	u6760
 15243  011F1A  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 15244  011F1C  E105               	bnz	u6760
 15245  011F1E  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 15246  011F20  E103               	bnz	u6760
 15247  011F22  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 15248  011F24  B4D8               	btfsc	status,2,c
 15249  011F26  D060               	goto	l880
 15250  011F28                     u6760:
 15251                           
 15252                           ; BSR set to: 0
 15253                           ;ipv4.c: 201: {
 15254                           ;ipv4.c: 202: if( ((destAddress ^ (ip_database_info.ipv4_myAddress)) & (ip_database_info
      +                          .ipv4_subnetMask)) == 0)
 15255  011F28  5031               	movf	IPv4_Start@destAddress,w,c
 15256  011F2A  0102               	movlb	2	; () banked
 15257  011F2C  1900               	xorwf	_ip_database_info& (0+255),w,b
 15258  011F2E  0100               	movlb	0	; () banked
 15259  011F30  6F99               	movwf	??_IPv4_Start& (0+255),b
 15260  011F32  5032               	movf	IPv4_Start@destAddress+1,w,c
 15261  011F34  0102               	movlb	2	; () banked
 15262  011F36  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
 15263  011F38  0100               	movlb	0	; () banked
 15264  011F3A  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 15265  011F3C  5033               	movf	IPv4_Start@destAddress+2,w,c
 15266  011F3E  0102               	movlb	2	; () banked
 15267  011F40  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
 15268  011F42  0100               	movlb	0	; () banked
 15269  011F44  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 15270  011F46  5034               	movf	IPv4_Start@destAddress+3,w,c
 15271  011F48  0102               	movlb	2	; () banked
 15272  011F4A  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 15273  011F4C  0100               	movlb	0	; () banked
 15274  011F4E  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 15275  011F50  0102               	movlb	2	; () banked
 15276  011F52  510C               	movf	(_ip_database_info+12)& (0+255),w,b
 15277  011F54  0100               	movlb	0	; () banked
 15278  011F56  1599               	andwf	??_IPv4_Start& (0+255),w,b
 15279  011F58  6F9D               	movwf	(??_IPv4_Start+4)& (0+255),b
 15280  011F5A  0102               	movlb	2	; () banked
 15281  011F5C  510D               	movf	(_ip_database_info+13)& (0+255),w,b
 15282  011F5E  0100               	movlb	0	; () banked
 15283  011F60  159A               	andwf	(??_IPv4_Start+1)& (0+255),w,b
 15284  011F62  6F9E               	movwf	(??_IPv4_Start+5)& (0+255),b
 15285  011F64  0102               	movlb	2	; () banked
 15286  011F66  510E               	movf	(_ip_database_info+14)& (0+255),w,b
 15287  011F68  0100               	movlb	0	; () banked
 15288  011F6A  159B               	andwf	(??_IPv4_Start+2)& (0+255),w,b
 15289  011F6C  6F9F               	movwf	(??_IPv4_Start+6)& (0+255),b
 15290  011F6E  0102               	movlb	2	; () banked
 15291  011F70  510F               	movf	(_ip_database_info+15)& (0+255),w,b
 15292  011F72  0100               	movlb	0	; () banked
 15293  011F74  159C               	andwf	(??_IPv4_Start+3)& (0+255),w,b
 15294  011F76  6FA0               	movwf	(??_IPv4_Start+7)& (0+255),b
 15295  011F78  519D               	movf	(??_IPv4_Start+4)& (0+255),w,b
 15296  011F7A  119E               	iorwf	(??_IPv4_Start+5)& (0+255),w,b
 15297  011F7C  119F               	iorwf	(??_IPv4_Start+6)& (0+255),w,b
 15298  011F7E  11A0               	iorwf	(??_IPv4_Start+7)& (0+255),w,b
 15299  011F80  A4D8               	btfss	status,2,c
 15300  011F82  D009               	goto	l881
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;ipv4.c: 203: {
 15304                           ;ipv4.c: 204: targetAddress = destAddress;
 15305  011F84  C031  F0A1         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 15306  011F88  C032  F0A2         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 15307  011F8C  C033  F0A3         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 15308  011F90  C034  F0A4         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 15309                           
 15310                           ;ipv4.c: 205: }
 15311  011F94  D008               	goto	l882
 15312  011F96                     l881:
 15313                           
 15314                           ; BSR set to: 0
 15315                           ;ipv4.c: 206: else
 15316                           ;ipv4.c: 207: {
 15317                           ;ipv4.c: 208: targetAddress = (ip_database_info.ipv4_router);
 15318  011F96  C210  F0A1         	movff	_ip_database_info+16,IPv4_Start@targetAddress
 15319  011F9A  C211  F0A2         	movff	_ip_database_info+17,IPv4_Start@targetAddress+1
 15320  011F9E  C212  F0A3         	movff	_ip_database_info+18,IPv4_Start@targetAddress+2
 15321  011FA2  C213  F0A4         	movff	_ip_database_info+19,IPv4_Start@targetAddress+3
 15322  011FA6                     l882:
 15323                           
 15324                           ; BSR set to: 0
 15325                           ;ipv4.c: 209: }
 15326                           ;ipv4.c: 210: macAddress= ARPV4_Lookup(targetAddress);
 15327                           
 15328                           ; BSR set to: 0
 15329  011FA6  C0A1  F013         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 15330  011FAA  C0A2  F014         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 15331  011FAE  C0A3  F015         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 15332  011FB2  C0A4  F016         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 15333  011FB6  EC6A  F09E         	call	_ARPV4_Lookup	;wreg free
 15334  011FBA  C013  F0A5         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 15335  011FBE  C014  F0A6         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 15336                           
 15337                           ;ipv4.c: 211: if(macAddress == 0)
 15338  011FC2  0100               	movlb	0	; () banked
 15339  011FC4  51A5               	movf	IPv4_Start@macAddress& (0+255),w,b
 15340  011FC6  11A6               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 15341  011FC8  A4D8               	btfss	status,2,c
 15342  011FCA  D013               	goto	l885
 15343                           
 15344                           ; BSR set to: 0
 15345                           ;ipv4.c: 212: {
 15346                           ;ipv4.c: 213: ret = ARPV4_Request(targetAddress);
 15347  011FCC  C0A1  F02D         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 15348  011FD0  C0A2  F02E         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 15349  011FD4  C0A3  F02F         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 15350  011FD8  C0A4  F030         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 15351  011FDC  EC36  F08B         	call	_ARPV4_Request	;wreg free
 15352  011FE0  0100               	movlb	0	; () banked
 15353  011FE2  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 15354                           
 15355                           ; BSR set to: 0
 15356                           ;ipv4.c: 214: return ret;
 15357  011FE4  51A7               	movf	IPv4_Start@ret& (0+255),w,b
 15358                           
 15359                           ; BSR set to: 0
 15360  011FE6  0012               	return	
 15361  011FE8                     l880:
 15362                           
 15363                           ;ipv4.c: 217: else
 15364                           ;ipv4.c: 218: {
 15365                           ;ipv4.c: 219: macAddress = &broadcastMAC;
 15366                           
 15367                           ; BSR set to: 0
 15368  011FE8  0E58               	movlw	low _broadcastMAC
 15369  011FEA  0100               	movlb	0	; () banked
 15370  011FEC  6FA5               	movwf	IPv4_Start@macAddress& (0+255),b
 15371  011FEE  0EFF               	movlw	high _broadcastMAC
 15372  011FF0  6FA6               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 15373  011FF2                     l885:
 15374                           
 15375                           ; BSR set to: 0
 15376                           ;ipv4.c: 220: }
 15377                           ;ipv4.c: 221: ret = ETH_WriteStart(macAddress, 0x0800);
 15378                           
 15379                           ; BSR set to: 0
 15380  011FF2  C0A5  F025         	movff	IPv4_Start@macAddress,ETH_WriteStart@dest_mac
 15381  011FF6  C0A6  F026         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@dest_mac+1
 15382  011FFA  0E08               	movlw	8
 15383  011FFC  6E28               	movwf	ETH_WriteStart@type+1,c
 15384  011FFE  0E00               	movlw	0
 15385  012000  6E27               	movwf	ETH_WriteStart@type,c
 15386  012002  EC53  F090         	call	_ETH_WriteStart	;wreg free
 15387  012006  0100               	movlb	0	; () banked
 15388  012008  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;ipv4.c: 222: if(ret == SUCCESS)
 15392  01200A  05A7               	decf	IPv4_Start@ret& (0+255),w,b
 15393  01200C  A4D8               	btfss	status,2,c
 15394  01200E  D048               	goto	l886
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;ipv4.c: 223: {
 15398                           ;ipv4.c: 224: ETH_Write16(0x4500);
 15399  012010  0E45               	movlw	69
 15400  012012  6E14               	movwf	ETH_Write16@data+1,c
 15401  012014  0E00               	movlw	0
 15402  012016  6E13               	movwf	ETH_Write16@data,c
 15403  012018  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 15404                           
 15405                           ;ipv4.c: 225: ETH_Write16(0);
 15406  01201C  0E00               	movlw	0
 15407  01201E  6E14               	movwf	ETH_Write16@data+1,c
 15408  012020  0E00               	movlw	0
 15409  012022  6E13               	movwf	ETH_Write16@data,c
 15410  012024  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 15411                           
 15412                           ;ipv4.c: 226: ETH_Write32(0xAA554000);
 15413  012028  0E00               	movlw	0
 15414  01202A  6E13               	movwf	ETH_Write32@data,c
 15415  01202C  0E40               	movlw	64
 15416  01202E  6E14               	movwf	ETH_Write32@data+1,c
 15417  012030  0E55               	movlw	85
 15418  012032  6E15               	movwf	ETH_Write32@data+2,c
 15419  012034  0EAA               	movlw	170
 15420  012036  6E16               	movwf	ETH_Write32@data+3,c
 15421  012038  EC32  F0A2         	call	_ETH_Write32	;wreg free
 15422                           
 15423                           ;ipv4.c: 227: ETH_Write8(64u);
 15424  01203C  0E40               	movlw	64
 15425  01203E  ECDF  F0A2         	call	_ETH_Write8
 15426                           
 15427                           ;ipv4.c: 228: ETH_Write8(protocol);
 15428  012042  5035               	movf	IPv4_Start@protocol,w,c
 15429  012044  ECDF  F0A2         	call	_ETH_Write8
 15430                           
 15431                           ;ipv4.c: 229: ETH_Write16(0);
 15432  012048  0E00               	movlw	0
 15433  01204A  6E14               	movwf	ETH_Write16@data+1,c
 15434  01204C  0E00               	movlw	0
 15435  01204E  6E13               	movwf	ETH_Write16@data,c
 15436  012050  ECAA  F0A2         	call	_ETH_Write16	;wreg free
 15437                           
 15438                           ;ipv4.c: 230: ETH_Write32((ip_database_info.ipv4_myAddress));
 15439  012054  C200  F013         	movff	_ip_database_info,ETH_Write32@data
 15440  012058  C201  F014         	movff	_ip_database_info+1,ETH_Write32@data+1
 15441  01205C  C202  F015         	movff	_ip_database_info+2,ETH_Write32@data+2
 15442  012060  C203  F016         	movff	_ip_database_info+3,ETH_Write32@data+3
 15443  012064  EC32  F0A2         	call	_ETH_Write32	;wreg free
 15444                           
 15445                           ;ipv4.c: 231: ETH_Write32(destAddress);
 15446  012068  C031  F013         	movff	IPv4_Start@destAddress,ETH_Write32@data
 15447  01206C  C032  F014         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 15448  012070  C033  F015         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 15449  012074  C034  F016         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 15450  012078  EC32  F0A2         	call	_ETH_Write32	;wreg free
 15451                           
 15452                           ;ipv4.c: 234: ipv4Header.srcIpAddress = (ip_database_info.ipv4_myAddress);
 15453  01207C  C200  F254         	movff	_ip_database_info,_ipv4Header+12
 15454  012080  C201  F255         	movff	_ip_database_info+1,_ipv4Header+13
 15455  012084  C202  F256         	movff	_ip_database_info+2,_ipv4Header+14
 15456  012088  C203  F257         	movff	_ip_database_info+3,_ipv4Header+15
 15457                           
 15458                           ;ipv4.c: 235: ipv4Header.dstIpAddress = destAddress;
 15459  01208C  C031  F258         	movff	IPv4_Start@destAddress,_ipv4Header+16
 15460  012090  C032  F259         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 15461  012094  C033  F25A         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 15462  012098  C034  F25B         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 15463                           
 15464                           ;ipv4.c: 236: ipv4Header.protocol = protocol;
 15465  01209C  C035  F251         	movff	IPv4_Start@protocol,_ipv4Header+9
 15466  0120A0                     l886:
 15467                           
 15468                           ;ipv4.c: 237: }
 15469                           ;ipv4.c: 238: }
 15470                           ;ipv4.c: 239: return ret;
 15471  0120A0  0100               	movlb	0	; () banked
 15472  0120A2  51A7               	movf	IPv4_Start@ret& (0+255),w,b
 15473  0120A4  0012               	return	
 15474  0120A6                     __end_of_IPv4_Start:
 15475                           	opt stack 0
 15476                           tosu	equ	0xFFF
 15477                           tosh	equ	0xFFE
 15478                           tosl	equ	0xFFD
 15479                           pclath	equ	0xFFA
 15480                           tblptru	equ	0xFF8
 15481                           tblptrh	equ	0xFF7
 15482                           tblptrl	equ	0xFF6
 15483                           tablat	equ	0xFF5
 15484                           prodh	equ	0xFF4
 15485                           prodl	equ	0xFF3
 15486                           intcon	equ	0xFF2
 15487                           indf0	equ	0xFEF
 15488                           postinc0	equ	0xFEE
 15489                           fsr0h	equ	0xFEA
 15490                           fsr0l	equ	0xFE9
 15491                           wreg	equ	0xFE8
 15492                           postinc1	equ	0xFE6
 15493                           postdec1	equ	0xFE5
 15494                           plusw1	equ	0xFE3
 15495                           fsr1h	equ	0xFE2
 15496                           fsr1l	equ	0xFE1
 15497                           indf2	equ	0xFDF
 15498                           postinc2	equ	0xFDE
 15499                           postdec2	equ	0xFDD
 15500                           plusw2	equ	0xFDB
 15501                           fsr2h	equ	0xFDA
 15502                           fsr2l	equ	0xFD9
 15503                           status	equ	0xFD8
 15504                           
 15505 ;; *************** function _ETH_Write32 *****************
 15506 ;; Defined at:
 15507 ;;		line 570 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;  data            4   18[COMRAM] unsigned long 
 15510 ;; Auto vars:     Size  Location     Type
 15511 ;;		None
 15512 ;; Return value:  Size  Location     Type
 15513 ;;                  1    wreg      void 
 15514 ;; Registers used:
 15515 ;;		wreg, status,2, cstack
 15516 ;; Tracked objects:
 15517 ;;		On entry : 0/0
 15518 ;;		On exit  : 0/0
 15519 ;;		Unchanged: 0/0
 15520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15525 ;;Total ram usage:        4 bytes
 15526 ;; Hardware stack levels used:    1
 15527 ;; Hardware stack levels required when called:    5
 15528 ;; This function calls:
 15529 ;;		_ETH_EdataWrite
 15530 ;; This function is called by:
 15531 ;;		_IPv4_Start
 15532 ;;		_ICMP_PortUnreachable
 15533 ;;		_sendRequest
 15534 ;; This function uses a non-reentrant model
 15535 ;;
 15536                           
 15537                           	psect	text74
 15538  014464                     __ptext74:
 15539                           	opt stack 0
 15540  014464                     _ETH_Write32:
 15541                           	opt stack 19
 15542                           
 15543                           ;ETHxxJ6x_driver.c: 572: ETH_EdataWrite(data >> 24);
 15544                           
 15545                           ; BSR set to: 0
 15546                           ;incstack = 0
 15547  014464  5016               	movf	ETH_Write32@data+3,w,c
 15548  014466  ECEF  F0A2         	call	_ETH_EdataWrite
 15549                           
 15550                           ;ETHxxJ6x_driver.c: 573: ETH_EdataWrite(data >> 16);
 15551  01446A  5015               	movf	ETH_Write32@data+2,w,c
 15552  01446C  ECEF  F0A2         	call	_ETH_EdataWrite
 15553                           
 15554                           ;ETHxxJ6x_driver.c: 574: ETH_EdataWrite(data >> 8);
 15555  014470  5014               	movf	ETH_Write32@data+1,w,c
 15556  014472  ECEF  F0A2         	call	_ETH_EdataWrite
 15557                           
 15558                           ;ETHxxJ6x_driver.c: 575: ETH_EdataWrite(data);
 15559  014476  5013               	movf	ETH_Write32@data,w,c
 15560  014478  ECEF  F0A2         	call	_ETH_EdataWrite
 15561  01447C  0012               	return		;funcret
 15562  01447E                     __end_of_ETH_Write32:
 15563                           	opt stack 0
 15564                           tosu	equ	0xFFF
 15565                           tosh	equ	0xFFE
 15566                           tosl	equ	0xFFD
 15567                           pclath	equ	0xFFA
 15568                           tblptru	equ	0xFF8
 15569                           tblptrh	equ	0xFF7
 15570                           tblptrl	equ	0xFF6
 15571                           tablat	equ	0xFF5
 15572                           prodh	equ	0xFF4
 15573                           prodl	equ	0xFF3
 15574                           intcon	equ	0xFF2
 15575                           indf0	equ	0xFEF
 15576                           postinc0	equ	0xFEE
 15577                           fsr0h	equ	0xFEA
 15578                           fsr0l	equ	0xFE9
 15579                           wreg	equ	0xFE8
 15580                           postinc1	equ	0xFE6
 15581                           postdec1	equ	0xFE5
 15582                           plusw1	equ	0xFE3
 15583                           fsr1h	equ	0xFE2
 15584                           fsr1l	equ	0xFE1
 15585                           indf2	equ	0xFDF
 15586                           postinc2	equ	0xFDE
 15587                           postdec2	equ	0xFDD
 15588                           plusw2	equ	0xFDB
 15589                           fsr2h	equ	0xFDA
 15590                           fsr2l	equ	0xFD9
 15591                           status	equ	0xFD8
 15592                           
 15593 ;; *************** function _ETH_Write16 *****************
 15594 ;; Defined at:
 15595 ;;		line 549 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 15596 ;; Parameters:    Size  Location     Type
 15597 ;;  data            2   18[COMRAM] unsigned int 
 15598 ;; Auto vars:     Size  Location     Type
 15599 ;;		None
 15600 ;; Return value:  Size  Location     Type
 15601 ;;                  1    wreg      void 
 15602 ;; Registers used:
 15603 ;;		wreg, status,2, cstack
 15604 ;; Tracked objects:
 15605 ;;		On entry : 0/0
 15606 ;;		On exit  : 0/0
 15607 ;;		Unchanged: 0/0
 15608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15613 ;;Total ram usage:        2 bytes
 15614 ;; Hardware stack levels used:    1
 15615 ;; Hardware stack levels required when called:    5
 15616 ;; This function calls:
 15617 ;;		_ETH_EdataWrite
 15618 ;; This function is called by:
 15619 ;;		_IPv4_Start
 15620 ;;		_ICMP_EchoReply
 15621 ;;		_ICMP_PortUnreachable
 15622 ;;		_UDP_Start
 15623 ;;		_sendRequest
 15624 ;;		_DNS_Query
 15625 ;; This function uses a non-reentrant model
 15626 ;;
 15627                           
 15628                           	psect	text75
 15629  014554                     __ptext75:
 15630                           	opt stack 0
 15631  014554                     _ETH_Write16:
 15632                           	opt stack 19
 15633                           
 15634                           ;ETHxxJ6x_driver.c: 551: ETH_EdataWrite(data >> 8);
 15635                           
 15636                           ;incstack = 0
 15637  014554  5014               	movf	ETH_Write16@data+1,w,c
 15638  014556  ECEF  F0A2         	call	_ETH_EdataWrite
 15639                           
 15640                           ;ETHxxJ6x_driver.c: 552: ETH_EdataWrite(data);
 15641  01455A  5013               	movf	ETH_Write16@data,w,c
 15642  01455C  ECEF  F0A2         	call	_ETH_EdataWrite
 15643  014560  0012               	return		;funcret
 15644  014562                     __end_of_ETH_Write16:
 15645                           	opt stack 0
 15646                           tosu	equ	0xFFF
 15647                           tosh	equ	0xFFE
 15648                           tosl	equ	0xFFD
 15649                           pclath	equ	0xFFA
 15650                           tblptru	equ	0xFF8
 15651                           tblptrh	equ	0xFF7
 15652                           tblptrl	equ	0xFF6
 15653                           tablat	equ	0xFF5
 15654                           prodh	equ	0xFF4
 15655                           prodl	equ	0xFF3
 15656                           intcon	equ	0xFF2
 15657                           indf0	equ	0xFEF
 15658                           postinc0	equ	0xFEE
 15659                           fsr0h	equ	0xFEA
 15660                           fsr0l	equ	0xFE9
 15661                           wreg	equ	0xFE8
 15662                           postinc1	equ	0xFE6
 15663                           postdec1	equ	0xFE5
 15664                           plusw1	equ	0xFE3
 15665                           fsr1h	equ	0xFE2
 15666                           fsr1l	equ	0xFE1
 15667                           indf2	equ	0xFDF
 15668                           postinc2	equ	0xFDE
 15669                           postdec2	equ	0xFDD
 15670                           plusw2	equ	0xFDB
 15671                           fsr2h	equ	0xFDA
 15672                           fsr2l	equ	0xFD9
 15673                           status	equ	0xFD8
 15674                           
 15675 ;; *************** function _ARPV4_Request *****************
 15676 ;; Defined at:
 15677 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 15678 ;; Parameters:    Size  Location     Type
 15679 ;;  destAddress     4   44[COMRAM] unsigned long 
 15680 ;; Auto vars:     Size  Location     Type
 15681 ;;  header         28   29[BANK0 ] struct .
 15682 ;;  ret             1   28[BANK0 ] enum E476
 15683 ;; Return value:  Size  Location     Type
 15684 ;;                  1    wreg      enum E476
 15685 ;; Registers used:
 15686 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15693 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15694 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15695 ;;      Totals:         4      57       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15696 ;;Total ram usage:       61 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:    7
 15699 ;; This function calls:
 15700 ;;		_ETH_Send
 15701 ;;		_ETH_WriteBlock
 15702 ;;		_ETH_WriteStart
 15703 ;;		_memcpy
 15704 ;; This function is called by:
 15705 ;;		_IPv4_Start
 15706 ;; This function uses a non-reentrant model
 15707 ;;
 15708                           
 15709                           	psect	text76
 15710  01166C                     __ptext76:
 15711                           	opt stack 0
 15712  01166C                     _ARPV4_Request:
 15713                           	opt stack 17
 15714                           
 15715                           ;arpv4.c: 200: error_msg ret;
 15716                           ;arpv4.c: 202: ret = ERROR;
 15717                           
 15718                           ;incstack = 0
 15719  01166C  0E00               	movlw	0
 15720  01166E  0100               	movlb	0	; () banked
 15721  011670  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 15722                           
 15723                           ;arpv4.c: 204: arpHeader_t header;
 15724                           ;arpv4.c: 205: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 15725  011672  0E01               	movlw	1
 15726  011674  6F7E               	movwf	(ARPV4_Request@header+1)& (0+255),b
 15727  011676  0E00               	movlw	0
 15728  011678  6F7D               	movwf	ARPV4_Request@header& (0+255),b
 15729                           
 15730                           ;arpv4.c: 206: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 15731  01167A  0E00               	movlw	0
 15732  01167C  6F80               	movwf	(ARPV4_Request@header+3)& (0+255),b
 15733  01167E  0E08               	movlw	8
 15734  011680  6F7F               	movwf	(ARPV4_Request@header+2)& (0+255),b
 15735                           
 15736                           ;arpv4.c: 207: header.hlen = 6;
 15737  011682  0E06               	movlw	6
 15738  011684  6F81               	movwf	(ARPV4_Request@header+4)& (0+255),b
 15739                           
 15740                           ;arpv4.c: 208: header.plen = 4;
 15741  011686  0E04               	movlw	4
 15742  011688  6F82               	movwf	(ARPV4_Request@header+5)& (0+255),b
 15743                           
 15744                           ;arpv4.c: 209: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 15745  01168A  0E01               	movlw	1
 15746  01168C  6F84               	movwf	(ARPV4_Request@header+7)& (0+255),b
 15747  01168E  0E00               	movlw	0
 15748  011690  6F83               	movwf	(ARPV4_Request@header+6)& (0+255),b
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;arpv4.c: 210: memcpy((void*)&header.sha, (void*)&hostMacAddress, sizeof(mac48Address_t)
      +                          );
 15752  011692  0E85               	movlw	low (ARPV4_Request@header+8)
 15753  011694  6E13               	movwf	memcpy@d1,c
 15754  011696  0E00               	movlw	high (ARPV4_Request@header+8)
 15755  011698  6E14               	movwf	memcpy@d1+1,c
 15756  01169A  0E73               	movlw	low _hostMacAddress
 15757  01169C  6E15               	movwf	memcpy@s1,c
 15758  01169E  0E02               	movlw	high _hostMacAddress
 15759  0116A0  6E16               	movwf	memcpy@s1+1,c
 15760  0116A2  0E00               	movlw	0
 15761  0116A4  6E18               	movwf	memcpy@n+1,c
 15762  0116A6  0E06               	movlw	6
 15763  0116A8  6E17               	movwf	memcpy@n,c
 15764  0116AA  ECD7  F09F         	call	_memcpy	;wreg free
 15765                           
 15766                           ;arpv4.c: 211: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
 15767  0116AE  0EFF               	movlw	255
 15768  0116B0  0102               	movlb	2	; () banked
 15769  0116B2  1500               	andwf	_ip_database_info& (0+255),w,b
 15770  0116B4  0100               	movlb	0	; () banked
 15771  0116B6  6F60               	movwf	??_ARPV4_Request& (0+255),b
 15772  0116B8  0E00               	movlw	0
 15773  0116BA  0102               	movlb	2	; () banked
 15774  0116BC  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 15775  0116BE  0100               	movlb	0	; () banked
 15776  0116C0  6F61               	movwf	(??_ARPV4_Request+1)& (0+255),b
 15777  0116C2  0E00               	movlw	0
 15778  0116C4  0102               	movlb	2	; () banked
 15779  0116C6  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 15780  0116C8  0100               	movlb	0	; () banked
 15781  0116CA  6F62               	movwf	(??_ARPV4_Request+2)& (0+255),b
 15782  0116CC  0E00               	movlw	0
 15783  0116CE  0102               	movlb	2	; () banked
 15784  0116D0  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 15785  0116D2  0100               	movlb	0	; () banked
 15786  0116D4  6F63               	movwf	(??_ARPV4_Request+3)& (0+255),b
 15787  0116D6  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 15788  0116DA  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 15789  0116DC  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 15790  0116DE  6B60               	clrf	??_ARPV4_Request& (0+255),b
 15791  0116E0  0E00               	movlw	0
 15792  0116E2  0102               	movlb	2	; () banked
 15793  0116E4  1500               	andwf	_ip_database_info& (0+255),w,b
 15794  0116E6  0100               	movlb	0	; () banked
 15795  0116E8  6F64               	movwf	(??_ARPV4_Request+4)& (0+255),b
 15796  0116EA  0EFF               	movlw	255
 15797  0116EC  0102               	movlb	2	; () banked
 15798  0116EE  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 15799  0116F0  0100               	movlb	0	; () banked
 15800  0116F2  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 15801  0116F4  0E00               	movlw	0
 15802  0116F6  0102               	movlb	2	; () banked
 15803  0116F8  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 15804  0116FA  0100               	movlb	0	; () banked
 15805  0116FC  6F66               	movwf	(??_ARPV4_Request+6)& (0+255),b
 15806  0116FE  0E00               	movlw	0
 15807  011700  0102               	movlb	2	; () banked
 15808  011702  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 15809  011704  0100               	movlb	0	; () banked
 15810  011706  6F67               	movwf	(??_ARPV4_Request+7)& (0+255),b
 15811  011708  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 15812  01170C  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 15813  011710  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 15814  011714  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 15815  011716  C200  F068         	movff	_ip_database_info,??_ARPV4_Request+8
 15816  01171A  C201  F069         	movff	_ip_database_info+1,??_ARPV4_Request+9
 15817  01171E  C202  F06A         	movff	_ip_database_info+2,??_ARPV4_Request+10
 15818  011722  C203  F06B         	movff	_ip_database_info+3,??_ARPV4_Request+11
 15819  011726  C069  F068         	movff	??_ARPV4_Request+9,??_ARPV4_Request+8
 15820  01172A  C06A  F069         	movff	??_ARPV4_Request+10,??_ARPV4_Request+9
 15821  01172E  C06B  F06A         	movff	??_ARPV4_Request+11,??_ARPV4_Request+10
 15822  011732  6B6B               	clrf	(??_ARPV4_Request+11)& (0+255),b
 15823  011734  0E00               	movlw	0
 15824  011736  1568               	andwf	(??_ARPV4_Request+8)& (0+255),w,b
 15825  011738  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 15826  01173A  0EFF               	movlw	255
 15827  01173C  1569               	andwf	(??_ARPV4_Request+9)& (0+255),w,b
 15828  01173E  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 15829  011740  0E00               	movlw	0
 15830  011742  156A               	andwf	(??_ARPV4_Request+10)& (0+255),w,b
 15831  011744  6F6E               	movwf	(??_ARPV4_Request+14)& (0+255),b
 15832  011746  0E00               	movlw	0
 15833  011748  156B               	andwf	(??_ARPV4_Request+11)& (0+255),w,b
 15834  01174A  6F6F               	movwf	(??_ARPV4_Request+15)& (0+255),b
 15835  01174C  0E00               	movlw	0
 15836  01174E  0102               	movlb	2	; () banked
 15837  011750  1500               	andwf	_ip_database_info& (0+255),w,b
 15838  011752  0100               	movlb	0	; () banked
 15839  011754  6F70               	movwf	(??_ARPV4_Request+16)& (0+255),b
 15840  011756  0E00               	movlw	0
 15841  011758  0102               	movlb	2	; () banked
 15842  01175A  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 15843  01175C  0100               	movlb	0	; () banked
 15844  01175E  6F71               	movwf	(??_ARPV4_Request+17)& (0+255),b
 15845  011760  0E00               	movlw	0
 15846  011762  0102               	movlb	2	; () banked
 15847  011764  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 15848  011766  0100               	movlb	0	; () banked
 15849  011768  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 15850  01176A  0EFF               	movlw	255
 15851  01176C  0102               	movlb	2	; () banked
 15852  01176E  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 15853  011770  0100               	movlb	0	; () banked
 15854  011772  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 15855  011774  0E19               	movlw	25
 15856  011776  D005               	goto	u6620
 15857  011778                     u6625:
 15858  011778  90D8               	bcf	status,0,c
 15859  01177A  3373               	rrcf	(??_ARPV4_Request+19)& (0+255),f,b
 15860  01177C  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 15861  01177E  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 15862  011780  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 15863  011782                     u6620:
 15864  011782  2EE8               	decfsz	wreg,f,c
 15865  011784  D7F9               	goto	u6625
 15866  011786  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 15867  011788  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 15868  01178A  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 15869  01178C  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 15870  01178E  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 15871  011790  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 15872  011792  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 15873  011794  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 15874  011796  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 15875  011798  516F               	movf	(??_ARPV4_Request+15)& (0+255),w,b
 15876  01179A  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 15877  01179C  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 15878  01179E  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 15879  0117A0  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 15880  0117A2  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 15881  0117A4  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 15882  0117A6  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 15883  0117A8  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 15884  0117AA  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 15885  0117AC  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 15886  0117AE  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 15887  0117B0  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 15888  0117B2  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 15889  0117B4  6F7B               	movwf	(??_ARPV4_Request+27)& (0+255),b
 15890  0117B6  5160               	movf	??_ARPV4_Request& (0+255),w,b
 15891  0117B8  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 15892  0117BA  6F8B               	movwf	(ARPV4_Request@header+14)& (0+255),b
 15893  0117BC  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 15894  0117BE  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 15895  0117C0  6F8C               	movwf	(ARPV4_Request@header+15)& (0+255),b
 15896  0117C2  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 15897  0117C4  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 15898  0117C6  6F8D               	movwf	(ARPV4_Request@header+16)& (0+255),b
 15899  0117C8  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 15900  0117CA  117B               	iorwf	(??_ARPV4_Request+27)& (0+255),w,b
 15901  0117CC  6F8E               	movwf	(ARPV4_Request@header+17)& (0+255),b
 15902                           
 15903                           ; BSR set to: 0
 15904                           ;arpv4.c: 212: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 15905  0117CE  0EFF               	movlw	255
 15906  0117D0  142D               	andwf	ARPV4_Request@destAddress,w,c
 15907  0117D2  6F60               	movwf	??_ARPV4_Request& (0+255),b
 15908  0117D4  0E00               	movlw	0
 15909  0117D6  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 15910  0117D8  6F61               	movwf	(??_ARPV4_Request+1)& (0+255),b
 15911  0117DA  0E00               	movlw	0
 15912  0117DC  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 15913  0117DE  6F62               	movwf	(??_ARPV4_Request+2)& (0+255),b
 15914  0117E0  0E00               	movlw	0
 15915  0117E2  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 15916  0117E4  6F63               	movwf	(??_ARPV4_Request+3)& (0+255),b
 15917  0117E6  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 15918  0117EA  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 15919  0117EC  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 15920  0117EE  6B60               	clrf	??_ARPV4_Request& (0+255),b
 15921  0117F0  0E00               	movlw	0
 15922  0117F2  142D               	andwf	ARPV4_Request@destAddress,w,c
 15923  0117F4  6F64               	movwf	(??_ARPV4_Request+4)& (0+255),b
 15924  0117F6  0EFF               	movlw	255
 15925  0117F8  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 15926  0117FA  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 15927  0117FC  0E00               	movlw	0
 15928  0117FE  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 15929  011800  6F66               	movwf	(??_ARPV4_Request+6)& (0+255),b
 15930  011802  0E00               	movlw	0
 15931  011804  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 15932  011806  6F67               	movwf	(??_ARPV4_Request+7)& (0+255),b
 15933  011808  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 15934  01180C  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 15935  011810  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 15936  011814  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 15937  011816  C02D  F068         	movff	ARPV4_Request@destAddress,??_ARPV4_Request+8
 15938  01181A  C02E  F069         	movff	ARPV4_Request@destAddress+1,??_ARPV4_Request+9
 15939  01181E  C02F  F06A         	movff	ARPV4_Request@destAddress+2,??_ARPV4_Request+10
 15940  011822  C030  F06B         	movff	ARPV4_Request@destAddress+3,??_ARPV4_Request+11
 15941  011826  C069  F068         	movff	??_ARPV4_Request+9,??_ARPV4_Request+8
 15942  01182A  C06A  F069         	movff	??_ARPV4_Request+10,??_ARPV4_Request+9
 15943  01182E  C06B  F06A         	movff	??_ARPV4_Request+11,??_ARPV4_Request+10
 15944  011832  6B6B               	clrf	(??_ARPV4_Request+11)& (0+255),b
 15945  011834  0E00               	movlw	0
 15946  011836  1568               	andwf	(??_ARPV4_Request+8)& (0+255),w,b
 15947  011838  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 15948  01183A  0EFF               	movlw	255
 15949  01183C  1569               	andwf	(??_ARPV4_Request+9)& (0+255),w,b
 15950  01183E  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 15951  011840  0E00               	movlw	0
 15952  011842  156A               	andwf	(??_ARPV4_Request+10)& (0+255),w,b
 15953  011844  6F6E               	movwf	(??_ARPV4_Request+14)& (0+255),b
 15954  011846  0E00               	movlw	0
 15955  011848  156B               	andwf	(??_ARPV4_Request+11)& (0+255),w,b
 15956  01184A  6F6F               	movwf	(??_ARPV4_Request+15)& (0+255),b
 15957  01184C  0E00               	movlw	0
 15958  01184E  142D               	andwf	ARPV4_Request@destAddress,w,c
 15959  011850  6F70               	movwf	(??_ARPV4_Request+16)& (0+255),b
 15960  011852  0E00               	movlw	0
 15961  011854  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 15962  011856  6F71               	movwf	(??_ARPV4_Request+17)& (0+255),b
 15963  011858  0E00               	movlw	0
 15964  01185A  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 15965  01185C  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 15966  01185E  0EFF               	movlw	255
 15967  011860  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 15968  011862  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 15969  011864  0E19               	movlw	25
 15970  011866  D005               	goto	u6630
 15971  011868                     u6635:
 15972  011868  90D8               	bcf	status,0,c
 15973  01186A  3373               	rrcf	(??_ARPV4_Request+19)& (0+255),f,b
 15974  01186C  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 15975  01186E  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 15976  011870  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 15977  011872                     u6630:
 15978  011872  2EE8               	decfsz	wreg,f,c
 15979  011874  D7F9               	goto	u6635
 15980  011876  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 15981  011878  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 15982  01187A  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 15983  01187C  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 15984  01187E  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 15985  011880  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 15986  011882  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 15987  011884  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 15988  011886  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 15989  011888  516F               	movf	(??_ARPV4_Request+15)& (0+255),w,b
 15990  01188A  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 15991  01188C  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 15992  01188E  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 15993  011890  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 15994  011892  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 15995  011894  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 15996  011896  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 15997  011898  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 15998  01189A  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 15999  01189C  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 16000  01189E  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 16001  0118A0  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 16002  0118A2  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 16003  0118A4  6F7B               	movwf	(??_ARPV4_Request+27)& (0+255),b
 16004  0118A6  5160               	movf	??_ARPV4_Request& (0+255),w,b
 16005  0118A8  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 16006  0118AA  6F95               	movwf	(ARPV4_Request@header+24)& (0+255),b
 16007  0118AC  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 16008  0118AE  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 16009  0118B0  6F96               	movwf	(ARPV4_Request@header+25)& (0+255),b
 16010  0118B2  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 16011  0118B4  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 16012  0118B6  6F97               	movwf	(ARPV4_Request@header+26)& (0+255),b
 16013  0118B8  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 16014  0118BA  117B               	iorwf	(??_ARPV4_Request+27)& (0+255),w,b
 16015  0118BC  6F98               	movwf	(ARPV4_Request@header+27)& (0+255),b
 16016                           
 16017                           ; BSR set to: 0
 16018                           ;arpv4.c: 213: header.tha.s.byte1 = 0;
 16019  0118BE  0E00               	movlw	0
 16020  0118C0  6F8F               	movwf	(ARPV4_Request@header+18)& (0+255),b
 16021                           
 16022                           ; BSR set to: 0
 16023                           ;arpv4.c: 214: header.tha.s.byte2 = 0;
 16024  0118C2  0E00               	movlw	0
 16025  0118C4  6F90               	movwf	(ARPV4_Request@header+19)& (0+255),b
 16026                           
 16027                           ; BSR set to: 0
 16028                           ;arpv4.c: 215: header.tha.s.byte3 = 0;
 16029  0118C6  0E00               	movlw	0
 16030  0118C8  6F91               	movwf	(ARPV4_Request@header+20)& (0+255),b
 16031                           
 16032                           ; BSR set to: 0
 16033                           ;arpv4.c: 216: header.tha.s.byte4 = 0;
 16034  0118CA  0E00               	movlw	0
 16035  0118CC  6F92               	movwf	(ARPV4_Request@header+21)& (0+255),b
 16036                           
 16037                           ; BSR set to: 0
 16038                           ;arpv4.c: 217: header.tha.s.byte5 = 0;
 16039  0118CE  0E00               	movlw	0
 16040  0118D0  6F93               	movwf	(ARPV4_Request@header+22)& (0+255),b
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;arpv4.c: 218: header.tha.s.byte6 = 0;
 16044  0118D2  0E00               	movlw	0
 16045  0118D4  6F94               	movwf	(ARPV4_Request@header+23)& (0+255),b
 16046                           
 16047                           ; BSR set to: 0
 16048                           ;arpv4.c: 220: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 16049  0118D6  0E58               	movlw	low _broadcastMAC
 16050  0118D8  6E25               	movwf	ETH_WriteStart@dest_mac,c
 16051  0118DA  0EFF               	movlw	high _broadcastMAC
 16052  0118DC  6E26               	movwf	ETH_WriteStart@dest_mac+1,c
 16053  0118DE  0E08               	movlw	8
 16054  0118E0  6E28               	movwf	ETH_WriteStart@type+1,c
 16055  0118E2  0E06               	movlw	6
 16056  0118E4  6E27               	movwf	ETH_WriteStart@type,c
 16057  0118E6  EC53  F090         	call	_ETH_WriteStart	;wreg free
 16058  0118EA  0100               	movlb	0	; () banked
 16059  0118EC  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 16060                           
 16061                           ; BSR set to: 0
 16062                           ;arpv4.c: 221: if(ret == SUCCESS)
 16063  0118EE  057C               	decf	ARPV4_Request@ret& (0+255),w,b
 16064  0118F0  A4D8               	btfss	status,2,c
 16065  0118F2  D013               	goto	l338
 16066                           
 16067                           ; BSR set to: 0
 16068                           ;arpv4.c: 222: {
 16069                           ;arpv4.c: 223: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 16070  0118F4  0E7D               	movlw	low ARPV4_Request@header
 16071  0118F6  6E13               	movwf	ETH_WriteBlock@buffer,c
 16072  0118F8  0E00               	movlw	high ARPV4_Request@header
 16073  0118FA  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 16074  0118FC  0E00               	movlw	0
 16075  0118FE  6E16               	movwf	ETH_WriteBlock@length+1,c
 16076  011900  0E1C               	movlw	28
 16077  011902  6E15               	movwf	ETH_WriteBlock@length,c
 16078  011904  EC74  F0A0         	call	_ETH_WriteBlock	;wreg free
 16079                           
 16080                           ;arpv4.c: 224: ret = ETH_Send();
 16081  011908  EC29  F09A         	call	_ETH_Send	;wreg free
 16082  01190C  0100               	movlb	0	; () banked
 16083  01190E  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;arpv4.c: 225: if(ret == SUCCESS)
 16087  011910  057C               	decf	ARPV4_Request@ret& (0+255),w,b
 16088  011912  A4D8               	btfss	status,2,c
 16089  011914  D002               	goto	l338
 16090                           
 16091                           ; BSR set to: 0
 16092                           ;arpv4.c: 226: {
 16093                           ;arpv4.c: 227: return MAC_NOT_FOUND;
 16094  011916  0E05               	movlw	5
 16095                           
 16096                           ; BSR set to: 0
 16097  011918  0012               	return	
 16098  01191A                     l338:
 16099                           
 16100                           ; BSR set to: 0
 16101                           ;arpv4.c: 228: }
 16102                           ;arpv4.c: 229: }
 16103                           ;arpv4.c: 230: return ret;
 16104                           
 16105                           ; BSR set to: 0
 16106                           
 16107                           ; BSR set to: 0
 16108  01191A  517C               	movf	ARPV4_Request@ret& (0+255),w,b
 16109  01191C  0012               	return	
 16110  01191E                     __end_of_ARPV4_Request:
 16111                           	opt stack 0
 16112                           tosu	equ	0xFFF
 16113                           tosh	equ	0xFFE
 16114                           tosl	equ	0xFFD
 16115                           pclath	equ	0xFFA
 16116                           tblptru	equ	0xFF8
 16117                           tblptrh	equ	0xFF7
 16118                           tblptrl	equ	0xFF6
 16119                           tablat	equ	0xFF5
 16120                           prodh	equ	0xFF4
 16121                           prodl	equ	0xFF3
 16122                           intcon	equ	0xFF2
 16123                           indf0	equ	0xFEF
 16124                           postinc0	equ	0xFEE
 16125                           fsr0h	equ	0xFEA
 16126                           fsr0l	equ	0xFE9
 16127                           wreg	equ	0xFE8
 16128                           postinc1	equ	0xFE6
 16129                           postdec1	equ	0xFE5
 16130                           plusw1	equ	0xFE3
 16131                           fsr1h	equ	0xFE2
 16132                           fsr1l	equ	0xFE1
 16133                           indf2	equ	0xFDF
 16134                           postinc2	equ	0xFDE
 16135                           postdec2	equ	0xFDD
 16136                           plusw2	equ	0xFDB
 16137                           fsr2h	equ	0xFDA
 16138                           fsr2l	equ	0xFD9
 16139                           status	equ	0xFD8
 16140                           
 16141 ;; *************** function _memcpy *****************
 16142 ;; Defined at:
 16143 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\memcpy.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;  d1              2   18[COMRAM] PTR void 
 16146 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), 
 16147 ;;  s1              2   20[COMRAM] PTR const void 
 16148 ;;		 -> hostMacAddress(6), 
 16149 ;;  n               2   22[COMRAM] unsigned int 
 16150 ;; Auto vars:     Size  Location     Type
 16151 ;;  s               2   27[COMRAM] PTR const unsigned char 
 16152 ;;		 -> hostMacAddress(6), 
 16153 ;;  d               2   25[COMRAM] PTR unsigned char 
 16154 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), 
 16155 ;;  tmp             1   24[COMRAM] unsigned char 
 16156 ;; Return value:  Size  Location     Type
 16157 ;;                  2   18[COMRAM] PTR void 
 16158 ;; Registers used:
 16159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16160 ;; Tracked objects:
 16161 ;;		On entry : 0/0
 16162 ;;		On exit  : 0/0
 16163 ;;		Unchanged: 0/0
 16164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16165 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16166 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16168 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;Total ram usage:       11 bytes
 16170 ;; Hardware stack levels used:    1
 16171 ;; Hardware stack levels required when called:    4
 16172 ;; This function calls:
 16173 ;;		Nothing
 16174 ;; This function is called by:
 16175 ;;		_ARPV4_Packet
 16176 ;;		_ARPV4_Request
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           	psect	text77
 16181  013FAE                     __ptext77:
 16182                           	opt stack 0
 16183  013FAE                     _memcpy:
 16184                           	opt stack 19
 16185                           
 16186                           ; BSR set to: 0
 16187                           ;incstack = 0
 16188  013FAE  C015  F01C         	movff	memcpy@s1,memcpy@s
 16189  013FB2  C016  F01D         	movff	memcpy@s1+1,memcpy@s+1
 16190  013FB6  C013  F01A         	movff	memcpy@d1,memcpy@d
 16191  013FBA  C014  F01B         	movff	memcpy@d1+1,memcpy@d+1
 16192  013FBE  D010               	goto	l2063
 16193  013FC0                     l7452:
 16194  013FC0  C01C  FFD9         	movff	memcpy@s,fsr2l
 16195  013FC4  C01D  FFDA         	movff	memcpy@s+1,fsr2h
 16196  013FC8  50DF               	movf	indf2,w,c
 16197  013FCA  6E19               	movwf	memcpy@tmp,c
 16198  013FCC  4A1C               	infsnz	memcpy@s,f,c
 16199  013FCE  2A1D               	incf	memcpy@s+1,f,c
 16200  013FD0  C01A  FFD9         	movff	memcpy@d,fsr2l
 16201  013FD4  C01B  FFDA         	movff	memcpy@d+1,fsr2h
 16202  013FD8  C019  FFDF         	movff	memcpy@tmp,indf2
 16203  013FDC  4A1A               	infsnz	memcpy@d,f,c
 16204  013FDE  2A1B               	incf	memcpy@d+1,f,c
 16205  013FE0                     l2063:
 16206  013FE0  0617               	decf	memcpy@n,f,c
 16207  013FE2  A0D8               	btfss	status,0,c
 16208  013FE4  0618               	decf	memcpy@n+1,f,c
 16209  013FE6  2817               	incf	memcpy@n,w,c
 16210  013FE8  E1EB               	bnz	l7452
 16211  013FEA  2818               	incf	memcpy@n+1,w,c
 16212  013FEC  B4D8               	btfsc	status,2,c
 16213  013FEE  0012               	return	
 16214  013FF0  D7E7               	goto	l2064
 16215  013FF2                     __end_of_memcpy:
 16216                           	opt stack 0
 16217                           tosu	equ	0xFFF
 16218                           tosh	equ	0xFFE
 16219                           tosl	equ	0xFFD
 16220                           pclath	equ	0xFFA
 16221                           tblptru	equ	0xFF8
 16222                           tblptrh	equ	0xFF7
 16223                           tblptrl	equ	0xFF6
 16224                           tablat	equ	0xFF5
 16225                           prodh	equ	0xFF4
 16226                           prodl	equ	0xFF3
 16227                           intcon	equ	0xFF2
 16228                           indf0	equ	0xFEF
 16229                           postinc0	equ	0xFEE
 16230                           fsr0h	equ	0xFEA
 16231                           fsr0l	equ	0xFE9
 16232                           wreg	equ	0xFE8
 16233                           postinc1	equ	0xFE6
 16234                           postdec1	equ	0xFE5
 16235                           plusw1	equ	0xFE3
 16236                           fsr1h	equ	0xFE2
 16237                           fsr1l	equ	0xFE1
 16238                           indf2	equ	0xFDF
 16239                           postinc2	equ	0xFDE
 16240                           postdec2	equ	0xFDD
 16241                           plusw2	equ	0xFDB
 16242                           fsr2h	equ	0xFDA
 16243                           fsr2l	equ	0xFD9
 16244                           status	equ	0xFD8
 16245                           
 16246 ;; *************** function _ETH_WriteStart *****************
 16247 ;; Defined at:
 16248 ;;		line 622 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 16249 ;; Parameters:    Size  Location     Type
 16250 ;;  dest_mac        2   36[COMRAM] PTR const struct .
 16251 ;;		 -> arpMap.macAddress(6), NULL(0), broadcastMAC(6), header.sha(6), 
 16252 ;;		 -> ARPV4_Packet@header(28), arpMap(104), 
 16253 ;;  type            2   38[COMRAM] unsigned int 
 16254 ;; Auto vars:     Size  Location     Type
 16255 ;;  ethPacket       2   42[COMRAM] PTR struct .
 16256 ;;		 -> RAM(3935), NULL(0), 
 16257 ;; Return value:  Size  Location     Type
 16258 ;;                  1    wreg      enum E476
 16259 ;; Registers used:
 16260 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16261 ;; Tracked objects:
 16262 ;;		On entry : 0/0
 16263 ;;		On exit  : 0/0
 16264 ;;		Unchanged: 0/0
 16265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16269 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16270 ;;Total ram usage:        8 bytes
 16271 ;; Hardware stack levels used:    1
 16272 ;; Hardware stack levels required when called:    6
 16273 ;; This function calls:
 16274 ;;		_ETH_EdataWrite
 16275 ;;		_ETH_NewPacket
 16276 ;;		_ETH_ResetByteCount
 16277 ;;		_ETH_Shift_Tx_Packets
 16278 ;;		_putch
 16279 ;; This function is called by:
 16280 ;;		_ARPV4_Packet
 16281 ;;		_ARPV4_Request
 16282 ;;		_IPv4_Start
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           	psect	text78
 16287  0120A6                     __ptext78:
 16288                           	opt stack 0
 16289  0120A6                     _ETH_WriteStart:
 16290                           	opt stack 18
 16291                           
 16292                           ;ETHxxJ6x_driver.c: 624: txPacket_t* ethPacket = (0);
 16293                           
 16294                           ;incstack = 0
 16295  0120A6  0E00               	movlw	0
 16296  0120A8  6E2B               	movwf	ETH_WriteStart@ethPacket,c
 16297  0120AA  0E00               	movlw	0
 16298  0120AC  6E2C               	movwf	ETH_WriteStart@ethPacket+1,c
 16299                           
 16300                           ;ETHxxJ6x_driver.c: 626: if(!ethData.up)
 16301  0120AE  0102               	movlb	2	; () banked
 16302  0120B0  B524               	btfsc	_ethData& (0+255),2,b	;volatile
 16303  0120B2  D002               	goto	l611
 16304                           
 16305                           ; BSR set to: 2
 16306                           ;ETHxxJ6x_driver.c: 627: {
 16307                           ;ETHxxJ6x_driver.c: 628: return LINK_NOT_FOUND;
 16308  0120B4  0E02               	movlw	2
 16309                           
 16310                           ; BSR set to: 2
 16311  0120B6  0012               	return	
 16312  0120B8                     l611:
 16313                           
 16314                           ; BSR set to: 2
 16315                           ;ETHxxJ6x_driver.c: 629: }
 16316                           ;ETHxxJ6x_driver.c: 632: if( pHead != (0) )
 16317                           
 16318                           ; BSR set to: 2
 16319  0120B8  5042               	movf	_pHead,w,c
 16320  0120BA  1043               	iorwf	_pHead+1,w,c
 16321  0120BC  B4D8               	btfsc	status,2,c
 16322  0120BE  D00C               	goto	l614
 16323                           
 16324                           ; BSR set to: 2
 16325                           ;ETHxxJ6x_driver.c: 633: {
 16326                           ;ETHxxJ6x_driver.c: 634: if( pHead->flags & (0x0001 << 0) )
 16327  0120C0  C042  FFD9         	movff	_pHead,fsr2l
 16328  0120C4  C043  FFDA         	movff	_pHead+1,fsr2h
 16329  0120C8  CFDE F029          	movff	postinc2,??_ETH_WriteStart
 16330  0120CC  CFDD F02A          	movff	postdec2,??_ETH_WriteStart+1
 16331  0120D0  A029               	btfss	??_ETH_WriteStart,0,c
 16332  0120D2  D002               	goto	l614
 16333                           
 16334                           ; BSR set to: 2
 16335                           ;ETHxxJ6x_driver.c: 635: {
 16336                           ;ETHxxJ6x_driver.c: 636: return BUFFER_BUSY;
 16337  0120D4  0E03               	movlw	3
 16338                           
 16339                           ; BSR set to: 2
 16340  0120D6  0012               	return	
 16341  0120D8                     l614:
 16342                           
 16343                           ; BSR set to: 2
 16344                           ;ETHxxJ6x_driver.c: 637: }
 16345                           ;ETHxxJ6x_driver.c: 638: }
 16346                           ;ETHxxJ6x_driver.c: 640: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 16347                           
 16348                           ; BSR set to: 2
 16349                           
 16350                           ; BSR set to: 2
 16351  0120D8  0E0C               	movlw	12
 16352  0120DA  010E               	movlb	14	; () banked
 16353  0120DC  5DE2               	subwf	226,w,b	;volatile
 16354  0120DE  0E1A               	movlw	26
 16355  0120E0  59E3               	subwfb	227,w,b	;volatile
 16356  0120E2  A0D8               	btfss	status,0,c
 16357  0120E4  D00F               	goto	l617
 16358                           
 16359                           ; BSR set to: 14
 16360                           ;ETHxxJ6x_driver.c: 641: {
 16361                           ;ETHxxJ6x_driver.c: 645: if(ECON1bits.TXRTS)
 16362  0120E6  A6D2               	btfss	4050,3,c	;volatile
 16363  0120E8  D002               	goto	l616
 16364                           
 16365                           ; BSR set to: 14
 16366                           ;ETHxxJ6x_driver.c: 646: {
 16367                           ;ETHxxJ6x_driver.c: 647: return TX_LOGIC_NOT_IDLE;
 16368  0120EA  0E04               	movlw	4
 16369                           
 16370                           ; BSR set to: 14
 16371  0120EC  0012               	return	
 16372  0120EE                     l616:
 16373                           
 16374                           ; BSR set to: 14
 16375                           ;ETHxxJ6x_driver.c: 648: }
 16376                           ;ETHxxJ6x_driver.c: 651: ETH_Shift_Tx_Packets();
 16377                           
 16378                           ; BSR set to: 14
 16379  0120EE  EC51  F094         	call	_ETH_Shift_Tx_Packets	;wreg free
 16380                           
 16381                           ;ETHxxJ6x_driver.c: 654: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 16382  0120F2  0E0C               	movlw	12
 16383  0120F4  010E               	movlb	14	; () banked
 16384  0120F6  5DE2               	subwf	226,w,b	;volatile
 16385  0120F8  0E1A               	movlw	26
 16386  0120FA  59E3               	subwfb	227,w,b	;volatile
 16387  0120FC  A0D8               	btfss	status,0,c
 16388  0120FE  D002               	goto	l617
 16389                           
 16390                           ; BSR set to: 14
 16391                           ;ETHxxJ6x_driver.c: 655: {
 16392                           ;ETHxxJ6x_driver.c: 656: return BUFFER_BUSY;
 16393  012100  0E03               	movlw	3
 16394                           
 16395                           ; BSR set to: 14
 16396  012102  0012               	return	
 16397  012104                     l617:
 16398                           
 16399                           ; BSR set to: 14
 16400                           ;ETHxxJ6x_driver.c: 657: }
 16401                           ;ETHxxJ6x_driver.c: 658: }
 16402                           ;ETHxxJ6x_driver.c: 663: ethPacket = (txPacket_t*)ETH_NewPacket();
 16403                           
 16404                           ; BSR set to: 14
 16405                           
 16406                           ; BSR set to: 14
 16407  012104  EC74  F092         	call	_ETH_NewPacket	;wreg free
 16408  012108  C013  F02B         	movff	?_ETH_NewPacket,ETH_WriteStart@ethPacket
 16409  01210C  C014  F02C         	movff	?_ETH_NewPacket+1,ETH_WriteStart@ethPacket+1
 16410                           
 16411                           ;ETHxxJ6x_driver.c: 665: if( ethPacket == (0) )
 16412  012110  502B               	movf	ETH_WriteStart@ethPacket,w,c
 16413  012112  102C               	iorwf	ETH_WriteStart@ethPacket+1,w,c
 16414  012114  A4D8               	btfss	status,2,c
 16415  012116  D002               	goto	l618
 16416                           
 16417                           ;ETHxxJ6x_driver.c: 666: {
 16418                           ;ETHxxJ6x_driver.c: 668: return BUFFER_BUSY;
 16419  012118  0E03               	movlw	3
 16420  01211A  0012               	return	
 16421  01211C                     l618:
 16422                           
 16423                           ;ETHxxJ6x_driver.c: 669: }
 16424                           ;ETHxxJ6x_driver.c: 671: do{ ethPacket->flags = ethPacket->flags | (0x0001 << 0); } whil
      +                          e(0);
 16425  01211C  C02B  FFD9         	movff	ETH_WriteStart@ethPacket,fsr2l
 16426  012120  C02C  FFDA         	movff	ETH_WriteStart@ethPacket+1,fsr2h
 16427  012124  CFDE F029          	movff	postinc2,??_ETH_WriteStart
 16428  012128  CFDD F02A          	movff	postdec2,??_ETH_WriteStart+1
 16429  01212C  0E01               	movlw	1
 16430  01212E  1229               	iorwf	??_ETH_WriteStart,f,c
 16431  012130  0E00               	movlw	0
 16432  012132  122A               	iorwf	??_ETH_WriteStart+1,f,c
 16433  012134  C02B  FFD9         	movff	ETH_WriteStart@ethPacket,fsr2l
 16434  012138  C02C  FFDA         	movff	ETH_WriteStart@ethPacket+1,fsr2h
 16435  01213C  C029  FFDE         	movff	??_ETH_WriteStart,postinc2
 16436  012140  C02A  FFDD         	movff	??_ETH_WriteStart+1,postdec2
 16437                           
 16438                           ;ETHxxJ6x_driver.c: 673: EWRPT = ethPacket->packetStart;
 16439  012144  EE20 F002          	lfsr	2,2
 16440  012148  502B               	movf	ETH_WriteStart@ethPacket,w,c
 16441  01214A  26D9               	addwf	fsr2l,f,c
 16442  01214C  502C               	movf	ETH_WriteStart@ethPacket+1,w,c
 16443  01214E  22DA               	addwfc	fsr2h,f,c
 16444  012150  CFDE FEE2          	movff	postinc2,3810	;volatile
 16445  012154  CFDD FEE3          	movff	postdec2,3811	;volatile
 16446                           
 16447                           ;ETHxxJ6x_driver.c: 675: ETH_ResetByteCount();
 16448  012158  ECD5  F0A2         	call	_ETH_ResetByteCount	;wreg free
 16449                           
 16450                           ;ETHxxJ6x_driver.c: 677: ETH_EdataWrite(0x06);
 16451  01215C  0E06               	movlw	6
 16452  01215E  ECEF  F0A2         	call	_ETH_EdataWrite
 16453                           
 16454                           ;ETHxxJ6x_driver.c: 678: ETH_EdataWrite(dest_mac->mac_array[0]);
 16455  012162  C025  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
 16456  012166  C026  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
 16457  01216A  0E00               	movlw	low (__mediumconst shr (0+16))
 16458  01216C  6EF8               	movwf	tblptru,c
 16459  01216E  0E0F               	movlw	(high __ramtop+-1)
 16460  012170  64F7               	cpfsgt	tblptrh,c
 16461  012172  D003               	bra	u6447
 16462  012174  0008               	tblrd		*
 16463  012176  50F5               	movf	tablat,w,c
 16464  012178  D005               	bra	u6440
 16465  01217A                     u6447:
 16466  01217A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16467  01217E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16468  012182  50EF               	movf	indf0,w,c
 16469  012184                     u6440:
 16470  012184  ECEF  F0A2         	call	_ETH_EdataWrite
 16471                           
 16472                           ;ETHxxJ6x_driver.c: 679: ETH_EdataWrite(dest_mac->mac_array[1]);
 16473  012188  0E01               	movlw	1
 16474  01218A  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 16475  01218C  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 16476  01218E  0E00               	movlw	0
 16477  012190  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 16478  012192  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 16479  012194  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 16480  012198  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 16481  01219C  0E00               	movlw	low (__mediumconst shr (0+16))
 16482  01219E  6EF8               	movwf	tblptru,c
 16483  0121A0  0E0F               	movlw	(high __ramtop+-1)
 16484  0121A2  64F7               	cpfsgt	tblptrh,c
 16485  0121A4  D003               	bra	u6457
 16486  0121A6  0008               	tblrd		*
 16487  0121A8  50F5               	movf	tablat,w,c
 16488  0121AA  D005               	bra	u6450
 16489  0121AC                     u6457:
 16490  0121AC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16491  0121B0  CFF7 FFEA          	movff	tblptrh,fsr0h
 16492  0121B4  50EF               	movf	indf0,w,c
 16493  0121B6                     u6450:
 16494  0121B6  ECEF  F0A2         	call	_ETH_EdataWrite
 16495                           
 16496                           ;ETHxxJ6x_driver.c: 680: ETH_EdataWrite(dest_mac->mac_array[2]);
 16497  0121BA  0E02               	movlw	2
 16498  0121BC  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 16499  0121BE  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 16500  0121C0  0E00               	movlw	0
 16501  0121C2  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 16502  0121C4  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 16503  0121C6  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 16504  0121CA  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 16505  0121CE  0E00               	movlw	low (__mediumconst shr (0+16))
 16506  0121D0  6EF8               	movwf	tblptru,c
 16507  0121D2  0E0F               	movlw	(high __ramtop+-1)
 16508  0121D4  64F7               	cpfsgt	tblptrh,c
 16509  0121D6  D003               	bra	u6467
 16510  0121D8  0008               	tblrd		*
 16511  0121DA  50F5               	movf	tablat,w,c
 16512  0121DC  D005               	bra	u6460
 16513  0121DE                     u6467:
 16514  0121DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 16515  0121E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 16516  0121E6  50EF               	movf	indf0,w,c
 16517  0121E8                     u6460:
 16518  0121E8  ECEF  F0A2         	call	_ETH_EdataWrite
 16519                           
 16520                           ;ETHxxJ6x_driver.c: 681: ETH_EdataWrite(dest_mac->mac_array[3]);
 16521  0121EC  0E03               	movlw	3
 16522  0121EE  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 16523  0121F0  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 16524  0121F2  0E00               	movlw	0
 16525  0121F4  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 16526  0121F6  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 16527  0121F8  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 16528  0121FC  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 16529  012200  0E00               	movlw	low (__mediumconst shr (0+16))
 16530  012202  6EF8               	movwf	tblptru,c
 16531  012204  0E0F               	movlw	(high __ramtop+-1)
 16532  012206  64F7               	cpfsgt	tblptrh,c
 16533  012208  D003               	bra	u6477
 16534  01220A  0008               	tblrd		*
 16535  01220C  50F5               	movf	tablat,w,c
 16536  01220E  D005               	bra	u6470
 16537  012210                     u6477:
 16538  012210  CFF6 FFE9          	movff	tblptrl,fsr0l
 16539  012214  CFF7 FFEA          	movff	tblptrh,fsr0h
 16540  012218  50EF               	movf	indf0,w,c
 16541  01221A                     u6470:
 16542  01221A  ECEF  F0A2         	call	_ETH_EdataWrite
 16543                           
 16544                           ;ETHxxJ6x_driver.c: 682: ETH_EdataWrite(dest_mac->mac_array[4]);
 16545  01221E  0E04               	movlw	4
 16546  012220  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 16547  012222  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 16548  012224  0E00               	movlw	0
 16549  012226  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 16550  012228  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 16551  01222A  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 16552  01222E  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 16553  012232  0E00               	movlw	low (__mediumconst shr (0+16))
 16554  012234  6EF8               	movwf	tblptru,c
 16555  012236  0E0F               	movlw	(high __ramtop+-1)
 16556  012238  64F7               	cpfsgt	tblptrh,c
 16557  01223A  D003               	bra	u6487
 16558  01223C  0008               	tblrd		*
 16559  01223E  50F5               	movf	tablat,w,c
 16560  012240  D005               	bra	u6480
 16561  012242                     u6487:
 16562  012242  CFF6 FFE9          	movff	tblptrl,fsr0l
 16563  012246  CFF7 FFEA          	movff	tblptrh,fsr0h
 16564  01224A  50EF               	movf	indf0,w,c
 16565  01224C                     u6480:
 16566  01224C  ECEF  F0A2         	call	_ETH_EdataWrite
 16567                           
 16568                           ;ETHxxJ6x_driver.c: 683: ETH_EdataWrite(dest_mac->mac_array[5]);
 16569  012250  0E05               	movlw	5
 16570  012252  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 16571  012254  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 16572  012256  0E00               	movlw	0
 16573  012258  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 16574  01225A  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 16575  01225C  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 16576  012260  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 16577  012264  0E00               	movlw	low (__mediumconst shr (0+16))
 16578  012266  6EF8               	movwf	tblptru,c
 16579  012268  0E0F               	movlw	(high __ramtop+-1)
 16580  01226A  64F7               	cpfsgt	tblptrh,c
 16581  01226C  D003               	bra	u6497
 16582  01226E  0008               	tblrd		*
 16583  012270  50F5               	movf	tablat,w,c
 16584  012272  D005               	bra	u6490
 16585  012274                     u6497:
 16586  012274  CFF6 FFE9          	movff	tblptrl,fsr0l
 16587  012278  CFF7 FFEA          	movff	tblptrh,fsr0h
 16588  01227C  50EF               	movf	indf0,w,c
 16589  01227E                     u6490:
 16590  01227E  ECEF  F0A2         	call	_ETH_EdataWrite
 16591                           
 16592                           ;ETHxxJ6x_driver.c: 685: ETH_EdataWrite(MAADR1);
 16593  012282  010E               	movlb	14	; () banked
 16594  012284  5184               	movf	132,w,b	;volatile
 16595  012286  ECEF  F0A2         	call	_ETH_EdataWrite
 16596                           
 16597                           ;ETHxxJ6x_driver.c: 686: ETH_EdataWrite(MAADR2);
 16598  01228A  010E               	movlb	14	; () banked
 16599  01228C  5185               	movf	133,w,b	;volatile
 16600  01228E  ECEF  F0A2         	call	_ETH_EdataWrite
 16601                           
 16602                           ;ETHxxJ6x_driver.c: 687: ETH_EdataWrite(MAADR3);
 16603  012292  010E               	movlb	14	; () banked
 16604  012294  5182               	movf	130,w,b	;volatile
 16605  012296  ECEF  F0A2         	call	_ETH_EdataWrite
 16606                           
 16607                           ;ETHxxJ6x_driver.c: 688: ETH_EdataWrite(MAADR4);
 16608  01229A  010E               	movlb	14	; () banked
 16609  01229C  5183               	movf	131,w,b	;volatile
 16610  01229E  ECEF  F0A2         	call	_ETH_EdataWrite
 16611                           
 16612                           ;ETHxxJ6x_driver.c: 689: ETH_EdataWrite(MAADR5);
 16613  0122A2  010E               	movlb	14	; () banked
 16614  0122A4  5180               	movf	128,w,b	;volatile
 16615  0122A6  ECEF  F0A2         	call	_ETH_EdataWrite
 16616                           
 16617                           ;ETHxxJ6x_driver.c: 690: ETH_EdataWrite(MAADR6);
 16618  0122AA  010E               	movlb	14	; () banked
 16619  0122AC  5181               	movf	129,w,b	;volatile
 16620  0122AE  ECEF  F0A2         	call	_ETH_EdataWrite
 16621                           
 16622                           ;ETHxxJ6x_driver.c: 691: ETH_EdataWrite(((char *)&type)[1]);
 16623  0122B2  5028               	movf	ETH_WriteStart@type+1,w,c
 16624  0122B4  ECEF  F0A2         	call	_ETH_EdataWrite
 16625                           
 16626                           ;ETHxxJ6x_driver.c: 692: ETH_EdataWrite(((char *)&type)[0]);
 16627  0122B8  5027               	movf	ETH_WriteStart@type,w,c
 16628  0122BA  ECEF  F0A2         	call	_ETH_EdataWrite
 16629                           
 16630                           ;ETHxxJ6x_driver.c: 694: putch('+');
 16631  0122BE  0E2B               	movlw	43
 16632  0122C0  ECF6  F0A2         	call	_putch
 16633                           
 16634                           ;ETHxxJ6x_driver.c: 695: return SUCCESS;
 16635  0122C4  0E01               	movlw	1
 16636  0122C6  0012               	return	
 16637  0122C8                     __end_of_ETH_WriteStart:
 16638                           	opt stack 0
 16639                           tosu	equ	0xFFF
 16640                           tosh	equ	0xFFE
 16641                           tosl	equ	0xFFD
 16642                           pclath	equ	0xFFA
 16643                           tblptru	equ	0xFF8
 16644                           tblptrh	equ	0xFF7
 16645                           tblptrl	equ	0xFF6
 16646                           tablat	equ	0xFF5
 16647                           prodh	equ	0xFF4
 16648                           prodl	equ	0xFF3
 16649                           intcon	equ	0xFF2
 16650                           indf0	equ	0xFEF
 16651                           postinc0	equ	0xFEE
 16652                           fsr0h	equ	0xFEA
 16653                           fsr0l	equ	0xFE9
 16654                           wreg	equ	0xFE8
 16655                           postinc1	equ	0xFE6
 16656                           postdec1	equ	0xFE5
 16657                           plusw1	equ	0xFE3
 16658                           fsr1h	equ	0xFE2
 16659                           fsr1l	equ	0xFE1
 16660                           indf2	equ	0xFDF
 16661                           postinc2	equ	0xFDE
 16662                           postdec2	equ	0xFDD
 16663                           plusw2	equ	0xFDB
 16664                           fsr2h	equ	0xFDA
 16665                           fsr2l	equ	0xFD9
 16666                           status	equ	0xFD8
 16667                           
 16668 ;; *************** function _ETH_Shift_Tx_Packets *****************
 16669 ;; Defined at:
 16670 ;;		line 911 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 16671 ;; Parameters:    Size  Location     Type
 16672 ;;		None
 16673 ;; Auto vars:     Size  Location     Type
 16674 ;;  pElem           2   34[COMRAM] PTR struct .
 16675 ;;		 -> txData(200), NULL(0), 
 16676 ;;  shiftOffset     2   28[COMRAM] unsigned int 
 16677 ;;  len             2   32[COMRAM] unsigned int 
 16678 ;;  timer           2   30[COMRAM] unsigned int 
 16679 ;; Return value:  Size  Location     Type
 16680 ;;                  1    wreg      enum E4853
 16681 ;; Registers used:
 16682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16683 ;; Tracked objects:
 16684 ;;		On entry : 0/0
 16685 ;;		On exit  : 0/0
 16686 ;;		Unchanged: 0/0
 16687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16689 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16691 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16692 ;;Total ram usage:       12 bytes
 16693 ;; Hardware stack levels used:    1
 16694 ;; Hardware stack levels required when called:    5
 16695 ;; This function calls:
 16696 ;;		___wmul
 16697 ;; This function is called by:
 16698 ;;		_ETH_EventHandler
 16699 ;;		_ETH_WriteStart
 16700 ;; This function uses a non-reentrant model
 16701 ;;
 16702                           
 16703                           	psect	text79
 16704  0128A2                     __ptext79:
 16705                           	opt stack 0
 16706  0128A2                     _ETH_Shift_Tx_Packets:
 16707                           	opt stack 18
 16708                           
 16709                           ;ETHxxJ6x_driver.c: 913: uint16_t timer;
 16710                           ;ETHxxJ6x_driver.c: 914: uint16_t len = pHead->packetEnd - pTail->packetStart;
 16711                           
 16712                           ;incstack = 0
 16713  0128A2  EE20 F004          	lfsr	2,4
 16714  0128A6  5042               	movf	_pHead,w,c
 16715  0128A8  26D9               	addwf	fsr2l,f,c
 16716  0128AA  5043               	movf	_pHead+1,w,c
 16717  0128AC  22DA               	addwfc	fsr2h,f,c
 16718  0128AE  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 16719  0128B2  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 16720  0128B6  EE20 F002          	lfsr	2,2
 16721  0128BA  5040               	movf	_pTail,w,c
 16722  0128BC  26D9               	addwf	fsr2l,f,c
 16723  0128BE  5041               	movf	_pTail+1,w,c
 16724  0128C0  22DA               	addwfc	fsr2h,f,c
 16725  0128C2  CFDE F01B          	movff	postinc2,??_ETH_Shift_Tx_Packets+2
 16726  0128C6  CFDD F01C          	movff	postdec2,??_ETH_Shift_Tx_Packets+3
 16727  0128CA  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 16728  0128CC  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 16729  0128CE  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 16730  0128D0  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 16731  0128D2  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 16732  0128D4  241B               	addwf	??_ETH_Shift_Tx_Packets+2,w,c
 16733  0128D6  6E21               	movwf	ETH_Shift_Tx_Packets@len,c
 16734  0128D8  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 16735  0128DA  201C               	addwfc	??_ETH_Shift_Tx_Packets+3,w,c
 16736  0128DC  6E22               	movwf	ETH_Shift_Tx_Packets@len+1,c
 16737                           
 16738                           ;ETHxxJ6x_driver.c: 916: timer = 2 * len;
 16739  0128DE  90D8               	bcf	status,0,c
 16740  0128E0  3421               	rlcf	ETH_Shift_Tx_Packets@len,w,c
 16741  0128E2  6E1F               	movwf	ETH_Shift_Tx_Packets@timer,c
 16742  0128E4  3422               	rlcf	ETH_Shift_Tx_Packets@len+1,w,c
 16743  0128E6  6E20               	movwf	ETH_Shift_Tx_Packets@timer+1,c
 16744                           
 16745                           ;ETHxxJ6x_driver.c: 917: while(ECON1bits.DMAST!=0 && --timer) __nop();
 16746  0128E8  D001               	goto	l683
 16747  0128EA                     l684:
 16748  0128EA  F000               	nop	
 16749  0128EC                     l683:
 16750  0128EC  AAD2               	btfss	4050,5,c	;volatile
 16751  0128EE  D007               	goto	u6250
 16752  0128F0  061F               	decf	ETH_Shift_Tx_Packets@timer,f,c
 16753  0128F2  A0D8               	btfss	status,0,c
 16754  0128F4  0620               	decf	ETH_Shift_Tx_Packets@timer+1,f,c
 16755  0128F6  501F               	movf	ETH_Shift_Tx_Packets@timer,w,c
 16756  0128F8  1020               	iorwf	ETH_Shift_Tx_Packets@timer+1,w,c
 16757  0128FA  A4D8               	btfss	status,2,c
 16758  0128FC  D7F6               	goto	l684
 16759  0128FE                     u6250:
 16760                           
 16761                           ;ETHxxJ6x_driver.c: 918: if(ECON1bits.DMAST==0)
 16762  0128FE  BAD2               	btfsc	4050,5,c	;volatile
 16763  012900  D09B               	goto	l694
 16764                           
 16765                           ;ETHxxJ6x_driver.c: 919: {
 16766                           ;ETHxxJ6x_driver.c: 920: EDMADST = ((8192) - (((1518) + (7)) << 1));
 16767  012902  0E14               	movlw	20
 16768  012904  010E               	movlb	14	; () banked
 16769  012906  6FF5               	movwf	245,b	;volatile
 16770  012908  0E16               	movlw	22
 16771  01290A  6FF4               	movwf	244,b	;volatile
 16772                           
 16773                           ; BSR set to: 14
 16774                           ;ETHxxJ6x_driver.c: 922: EDMAST = pTail->packetStart;
 16775  01290C  EE20 F002          	lfsr	2,2
 16776  012910  5040               	movf	_pTail,w,c
 16777  012912  26D9               	addwf	fsr2l,f,c
 16778  012914  5041               	movf	_pTail+1,w,c
 16779  012916  22DA               	addwfc	fsr2h,f,c
 16780  012918  CFDE FEF0          	movff	postinc2,3824	;volatile
 16781  01291C  CFDD FEF1          	movff	postdec2,3825	;volatile
 16782                           
 16783                           ; BSR set to: 14
 16784                           ;ETHxxJ6x_driver.c: 923: EDMAND = pHead->packetEnd;
 16785  012920  EE20 F004          	lfsr	2,4
 16786  012924  5042               	movf	_pHead,w,c
 16787  012926  26D9               	addwf	fsr2l,f,c
 16788  012928  5043               	movf	_pHead+1,w,c
 16789  01292A  22DA               	addwfc	fsr2h,f,c
 16790  01292C  CFDE FEF2          	movff	postinc2,3826	;volatile
 16791  012930  CFDD FEF3          	movff	postdec2,3827	;volatile
 16792                           
 16793                           ; BSR set to: 14
 16794                           ;ETHxxJ6x_driver.c: 925: ECON1bits.CSUMEN = 0;
 16795  012934  98D2               	bcf	4050,4,c	;volatile
 16796                           
 16797                           ; BSR set to: 14
 16798                           ;ETHxxJ6x_driver.c: 926: ECON1bits.DMAST = 1;
 16799  012936  8AD2               	bsf	4050,5,c	;volatile
 16800                           
 16801                           ; BSR set to: 14
 16802                           ;ETHxxJ6x_driver.c: 928: timer = 40 * len;
 16803  012938  C021  F013         	movff	ETH_Shift_Tx_Packets@len,___wmul@multiplier
 16804  01293C  C022  F014         	movff	ETH_Shift_Tx_Packets@len+1,___wmul@multiplier+1
 16805  012940  0E00               	movlw	0
 16806  012942  6E16               	movwf	___wmul@multiplicand+1,c
 16807  012944  0E28               	movlw	40
 16808  012946  6E15               	movwf	___wmul@multiplicand,c
 16809  012948  ECBD  F0A1         	call	___wmul	;wreg free
 16810  01294C  C013  F01F         	movff	?___wmul,ETH_Shift_Tx_Packets@timer
 16811  012950  C014  F020         	movff	?___wmul+1,ETH_Shift_Tx_Packets@timer+1
 16812                           
 16813                           ;ETHxxJ6x_driver.c: 929: while(ECON1bits.DMAST!=0 && --timer) __nop();
 16814  012954  D001               	goto	l689
 16815  012956                     l690:
 16816  012956  F000               	nop	
 16817  012958                     l689:
 16818  012958  AAD2               	btfss	4050,5,c	;volatile
 16819  01295A  D007               	goto	u6280
 16820  01295C  061F               	decf	ETH_Shift_Tx_Packets@timer,f,c
 16821  01295E  A0D8               	btfss	status,0,c
 16822  012960  0620               	decf	ETH_Shift_Tx_Packets@timer+1,f,c
 16823  012962  501F               	movf	ETH_Shift_Tx_Packets@timer,w,c
 16824  012964  1020               	iorwf	ETH_Shift_Tx_Packets@timer+1,w,c
 16825  012966  A4D8               	btfss	status,2,c
 16826  012968  D7F6               	goto	l690
 16827  01296A                     u6280:
 16828                           
 16829                           ;ETHxxJ6x_driver.c: 930: if(ECON1bits.DMAST == 0)
 16830  01296A  BAD2               	btfsc	4050,5,c	;volatile
 16831  01296C  D065               	goto	l694
 16832                           
 16833                           ;ETHxxJ6x_driver.c: 931: {
 16834                           ;ETHxxJ6x_driver.c: 933: txPacket_t *pElem = pHead;
 16835  01296E  C042  F023         	movff	_pHead,ETH_Shift_Tx_Packets@pElem
 16836  012972  C043  F024         	movff	_pHead+1,ETH_Shift_Tx_Packets@pElem+1
 16837                           
 16838                           ;ETHxxJ6x_driver.c: 934: uint16_t shiftOffset = pTail->packetStart;
 16839  012976  EE20 F002          	lfsr	2,2
 16840  01297A  5040               	movf	_pTail,w,c
 16841  01297C  26D9               	addwf	fsr2l,f,c
 16842  01297E  5041               	movf	_pTail+1,w,c
 16843  012980  22DA               	addwfc	fsr2h,f,c
 16844  012982  CFDE F01D          	movff	postinc2,ETH_Shift_Tx_Packets@shiftOffset
 16845  012986  CFDD F01E          	movff	postdec2,ETH_Shift_Tx_Packets@shiftOffset+1
 16846                           
 16847                           ;ETHxxJ6x_driver.c: 936: while( pElem != (0) )
 16848  01298A  D04A               	goto	l695
 16849  01298C                     
 16850                           ;ETHxxJ6x_driver.c: 937: {
 16851                           ;ETHxxJ6x_driver.c: 938: pElem->packetStart = pElem->packetStart - shiftOffset;
 16852  01298C  EE20 F002          	lfsr	2,2
 16853  012990  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 16854  012992  26D9               	addwf	fsr2l,f,c
 16855  012994  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 16856  012996  22DA               	addwfc	fsr2h,f,c
 16857  012998  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 16858  01299C  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 16859  0129A0  C01D  F01B         	movff	ETH_Shift_Tx_Packets@shiftOffset,??_ETH_Shift_Tx_Packets+2
 16860  0129A4  C01E  F01C         	movff	ETH_Shift_Tx_Packets@shiftOffset+1,??_ETH_Shift_Tx_Packets+3
 16861  0129A8  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 16862  0129AA  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 16863  0129AC  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 16864  0129AE  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 16865  0129B0  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 16866  0129B2  261B               	addwf	??_ETH_Shift_Tx_Packets+2,f,c
 16867  0129B4  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 16868  0129B6  221C               	addwfc	??_ETH_Shift_Tx_Packets+3,f,c
 16869  0129B8  EE20 F002          	lfsr	2,2
 16870  0129BC  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 16871  0129BE  26D9               	addwf	fsr2l,f,c
 16872  0129C0  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 16873  0129C2  22DA               	addwfc	fsr2h,f,c
 16874  0129C4  C01B  FFDE         	movff	??_ETH_Shift_Tx_Packets+2,postinc2
 16875  0129C8  C01C  FFDD         	movff	??_ETH_Shift_Tx_Packets+3,postdec2
 16876                           
 16877                           ;ETHxxJ6x_driver.c: 939: pElem->packetEnd = pElem->packetEnd - shiftOffset;
 16878  0129CC  EE20 F004          	lfsr	2,4
 16879  0129D0  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 16880  0129D2  26D9               	addwf	fsr2l,f,c
 16881  0129D4  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 16882  0129D6  22DA               	addwfc	fsr2h,f,c
 16883  0129D8  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 16884  0129DC  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 16885  0129E0  C01D  F01B         	movff	ETH_Shift_Tx_Packets@shiftOffset,??_ETH_Shift_Tx_Packets+2
 16886  0129E4  C01E  F01C         	movff	ETH_Shift_Tx_Packets@shiftOffset+1,??_ETH_Shift_Tx_Packets+3
 16887  0129E8  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 16888  0129EA  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 16889  0129EC  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 16890  0129EE  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 16891  0129F0  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 16892  0129F2  261B               	addwf	??_ETH_Shift_Tx_Packets+2,f,c
 16893  0129F4  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 16894  0129F6  221C               	addwfc	??_ETH_Shift_Tx_Packets+3,f,c
 16895  0129F8  EE20 F004          	lfsr	2,4
 16896  0129FC  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 16897  0129FE  26D9               	addwf	fsr2l,f,c
 16898  012A00  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 16899  012A02  22DA               	addwfc	fsr2h,f,c
 16900  012A04  C01B  FFDE         	movff	??_ETH_Shift_Tx_Packets+2,postinc2
 16901  012A08  C01C  FFDD         	movff	??_ETH_Shift_Tx_Packets+3,postdec2
 16902                           
 16903                           ;ETHxxJ6x_driver.c: 940: pElem = pElem->nextPacket;
 16904  012A0C  EE20 F008          	lfsr	2,8
 16905  012A10  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 16906  012A12  26D9               	addwf	fsr2l,f,c
 16907  012A14  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 16908  012A16  22DA               	addwfc	fsr2h,f,c
 16909  012A18  CFDE F023          	movff	postinc2,ETH_Shift_Tx_Packets@pElem
 16910  012A1C  CFDD F024          	movff	postdec2,ETH_Shift_Tx_Packets@pElem+1
 16911  012A20                     l695:
 16912  012A20  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 16913  012A22  1024               	iorwf	ETH_Shift_Tx_Packets@pElem+1,w,c
 16914  012A24  A4D8               	btfss	status,2,c
 16915  012A26  D7B2               	goto	l696
 16916                           
 16917                           ;ETHxxJ6x_driver.c: 941: }
 16918                           ;ETHxxJ6x_driver.c: 944: EWRPT = ((8192) - (((1518) + (7)) << 1)) + len;
 16919  012A28  0E16               	movlw	22
 16920  012A2A  2421               	addwf	ETH_Shift_Tx_Packets@len,w,c
 16921  012A2C  010E               	movlb	14	; () banked
 16922  012A2E  6FE2               	movwf	226,b	;volatile
 16923  012A30  0E14               	movlw	20
 16924  012A32  2022               	addwfc	ETH_Shift_Tx_Packets@len+1,w,c
 16925  012A34  6FE3               	movwf	227,b	;volatile
 16926                           
 16927                           ; BSR set to: 14
 16928                           ;ETHxxJ6x_driver.c: 945: return SUCCESS;
 16929                           ;	Return value of _ETH_Shift_Tx_Packets is never used
 16930  012A36  0012               	return	
 16931  012A38                     l694:
 16932                           
 16933                           ; BSR set to: 14
 16934  012A38  00FF               	reset		;# 
 16935                           
 16936                           ;ETHxxJ6x_driver.c: 951: return DMA_TIMEOUT;
 16937                           ;	Return value of _ETH_Shift_Tx_Packets is never used
 16938  012A3A  0012               	return		;funcret
 16939  012A3C                     __end_of_ETH_Shift_Tx_Packets:
 16940                           	opt stack 0
 16941                           tosu	equ	0xFFF
 16942                           tosh	equ	0xFFE
 16943                           tosl	equ	0xFFD
 16944                           pclath	equ	0xFFA
 16945                           tblptru	equ	0xFF8
 16946                           tblptrh	equ	0xFF7
 16947                           tblptrl	equ	0xFF6
 16948                           tablat	equ	0xFF5
 16949                           prodh	equ	0xFF4
 16950                           prodl	equ	0xFF3
 16951                           intcon	equ	0xFF2
 16952                           indf0	equ	0xFEF
 16953                           postinc0	equ	0xFEE
 16954                           fsr0h	equ	0xFEA
 16955                           fsr0l	equ	0xFE9
 16956                           wreg	equ	0xFE8
 16957                           postinc1	equ	0xFE6
 16958                           postdec1	equ	0xFE5
 16959                           plusw1	equ	0xFE3
 16960                           fsr1h	equ	0xFE2
 16961                           fsr1l	equ	0xFE1
 16962                           indf2	equ	0xFDF
 16963                           postinc2	equ	0xFDE
 16964                           postdec2	equ	0xFDD
 16965                           plusw2	equ	0xFDB
 16966                           fsr2h	equ	0xFDA
 16967                           fsr2l	equ	0xFD9
 16968                           status	equ	0xFD8
 16969                           
 16970 ;; *************** function ___wmul *****************
 16971 ;; Defined at:
 16972 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;  multiplier      2   18[COMRAM] unsigned int 
 16975 ;;  multiplicand    2   20[COMRAM] unsigned int 
 16976 ;; Auto vars:     Size  Location     Type
 16977 ;;  product         2   22[COMRAM] unsigned int 
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  2   18[COMRAM] unsigned int 
 16980 ;; Registers used:
 16981 ;;		wreg, status,2, status,0, prodl, prodh
 16982 ;; Tracked objects:
 16983 ;;		On entry : 0/0
 16984 ;;		On exit  : 0/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16991 ;;Total ram usage:        6 bytes
 16992 ;; Hardware stack levels used:    1
 16993 ;; Hardware stack levels required when called:    4
 16994 ;; This function calls:
 16995 ;;		Nothing
 16996 ;; This function is called by:
 16997 ;;		_ETH_Copy
 16998 ;;		_ETH_Shift_Tx_Packets
 16999 ;;		__doprnt
 17000 ;; This function uses a non-reentrant model
 17001 ;;
 17002                           
 17003                           	psect	text80
 17004  01437A                     __ptext80:
 17005                           	opt stack 0
 17006  01437A                     ___wmul:
 17007                           	opt stack 21
 17008                           
 17009                           ;incstack = 0
 17010  01437A  5013               	movf	___wmul@multiplier,w,c
 17011  01437C  0215               	mulwf	___wmul@multiplicand,c
 17012  01437E  CFF3 F017          	movff	prodl,___wmul@product
 17013  014382  CFF4 F018          	movff	prodh,___wmul@product+1
 17014  014386  5013               	movf	___wmul@multiplier,w,c
 17015  014388  0216               	mulwf	___wmul@multiplicand+1,c
 17016  01438A  50F3               	movf	prodl,w,c
 17017  01438C  2618               	addwf	___wmul@product+1,f,c
 17018  01438E  5014               	movf	___wmul@multiplier+1,w,c
 17019  014390  0215               	mulwf	___wmul@multiplicand,c
 17020  014392  50F3               	movf	prodl,w,c
 17021  014394  2618               	addwf	___wmul@product+1,f,c
 17022  014396  C017  F013         	movff	___wmul@product,?___wmul
 17023  01439A  C018  F014         	movff	___wmul@product+1,?___wmul+1
 17024  01439E  0012               	return	
 17025  0143A0                     __end_of___wmul:
 17026                           	opt stack 0
 17027                           tosu	equ	0xFFF
 17028                           tosh	equ	0xFFE
 17029                           tosl	equ	0xFFD
 17030                           pclath	equ	0xFFA
 17031                           tblptru	equ	0xFF8
 17032                           tblptrh	equ	0xFF7
 17033                           tblptrl	equ	0xFF6
 17034                           tablat	equ	0xFF5
 17035                           prodh	equ	0xFF4
 17036                           prodl	equ	0xFF3
 17037                           intcon	equ	0xFF2
 17038                           indf0	equ	0xFEF
 17039                           postinc0	equ	0xFEE
 17040                           fsr0h	equ	0xFEA
 17041                           fsr0l	equ	0xFE9
 17042                           wreg	equ	0xFE8
 17043                           postinc1	equ	0xFE6
 17044                           postdec1	equ	0xFE5
 17045                           plusw1	equ	0xFE3
 17046                           fsr1h	equ	0xFE2
 17047                           fsr1l	equ	0xFE1
 17048                           indf2	equ	0xFDF
 17049                           postinc2	equ	0xFDE
 17050                           postdec2	equ	0xFDD
 17051                           plusw2	equ	0xFDB
 17052                           fsr2h	equ	0xFDA
 17053                           fsr2l	equ	0xFD9
 17054                           status	equ	0xFD8
 17055                           
 17056 ;; *************** function _ETH_ResetByteCount *****************
 17057 ;; Defined at:
 17058 ;;		line 1121 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;		None
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;		None
 17063 ;; Return value:  Size  Location     Type
 17064 ;;                  1    wreg      void 
 17065 ;; Registers used:
 17066 ;;		None
 17067 ;; Tracked objects:
 17068 ;;		On entry : 0/0
 17069 ;;		On exit  : 0/0
 17070 ;;		Unchanged: 0/0
 17071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17076 ;;Total ram usage:        0 bytes
 17077 ;; Hardware stack levels used:    1
 17078 ;; Hardware stack levels required when called:    4
 17079 ;; This function calls:
 17080 ;;		Nothing
 17081 ;; This function is called by:
 17082 ;;		_ETH_WriteStart
 17083 ;;		_UDP_Start
 17084 ;;		_ETH_TxReset
 17085 ;; This function uses a non-reentrant model
 17086 ;;
 17087                           
 17088                           	psect	text81
 17089  0145AA                     __ptext81:
 17090                           	opt stack 0
 17091  0145AA                     _ETH_ResetByteCount:
 17092                           	opt stack 19
 17093                           
 17094                           ;ETHxxJ6x_driver.c: 1123: ethData.saveWRPT = EWRPT;
 17095                           
 17096                           ;incstack = 0
 17097  0145AA  CEE2 F228          	movff	3810,_ethData+4	;volatile
 17098  0145AE  CEE3 F229          	movff	3811,_ethData+5	;volatile
 17099  0145B2  0012               	return		;funcret
 17100  0145B4                     __end_of_ETH_ResetByteCount:
 17101                           	opt stack 0
 17102                           tosu	equ	0xFFF
 17103                           tosh	equ	0xFFE
 17104                           tosl	equ	0xFFD
 17105                           pclath	equ	0xFFA
 17106                           tblptru	equ	0xFF8
 17107                           tblptrh	equ	0xFF7
 17108                           tblptrl	equ	0xFF6
 17109                           tablat	equ	0xFF5
 17110                           prodh	equ	0xFF4
 17111                           prodl	equ	0xFF3
 17112                           intcon	equ	0xFF2
 17113                           indf0	equ	0xFEF
 17114                           postinc0	equ	0xFEE
 17115                           fsr0h	equ	0xFEA
 17116                           fsr0l	equ	0xFE9
 17117                           wreg	equ	0xFE8
 17118                           postinc1	equ	0xFE6
 17119                           postdec1	equ	0xFE5
 17120                           plusw1	equ	0xFE3
 17121                           fsr1h	equ	0xFE2
 17122                           fsr1l	equ	0xFE1
 17123                           indf2	equ	0xFDF
 17124                           postinc2	equ	0xFDE
 17125                           postdec2	equ	0xFDD
 17126                           plusw2	equ	0xFDB
 17127                           fsr2h	equ	0xFDA
 17128                           fsr2l	equ	0xFD9
 17129                           status	equ	0xFD8
 17130                           
 17131 ;; *************** function _ETH_NewPacket *****************
 17132 ;; Defined at:
 17133 ;;		line 1177 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 17134 ;; Parameters:    Size  Location     Type
 17135 ;;		None
 17136 ;; Auto vars:     Size  Location     Type
 17137 ;;  index           1   22[COMRAM] unsigned char 
 17138 ;; Return value:  Size  Location     Type
 17139 ;;                  2   18[COMRAM] unsigned int 
 17140 ;; Registers used:
 17141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17142 ;; Tracked objects:
 17143 ;;		On entry : 0/0
 17144 ;;		On exit  : 0/0
 17145 ;;		Unchanged: 0/0
 17146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17150 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17151 ;;Total ram usage:        5 bytes
 17152 ;; Hardware stack levels used:    1
 17153 ;; Hardware stack levels required when called:    4
 17154 ;; This function calls:
 17155 ;;		Nothing
 17156 ;; This function is called by:
 17157 ;;		_ETH_WriteStart
 17158 ;; This function uses a non-reentrant model
 17159 ;;
 17160                           
 17161                           	psect	text82
 17162  0124E8                     __ptext82:
 17163                           	opt stack 0
 17164  0124E8                     _ETH_NewPacket:
 17165                           	opt stack 19
 17166                           
 17167                           ;ETHxxJ6x_driver.c: 1179: uint8_t index = 0;
 17168                           
 17169                           ;incstack = 0
 17170  0124E8  0E00               	movlw	0
 17171  0124EA  6E17               	movwf	ETH_NewPacket@index,c
 17172                           
 17173                           ;ETHxxJ6x_driver.c: 1181: if( ethListSize == (20) )
 17174  0124EC  0E14               	movlw	20
 17175  0124EE  1845               	xorwf	_ethListSize,w,c
 17176  0124F0  A4D8               	btfss	status,2,c
 17177  0124F2  D0EB               	goto	l773
 17178                           
 17179                           ;ETHxxJ6x_driver.c: 1182: {
 17180                           ;ETHxxJ6x_driver.c: 1183: return (0);
 17181  0124F4  0E00               	movlw	0
 17182  0124F6  6E14               	movwf	?_ETH_NewPacket+1,c
 17183  0124F8  0E00               	movlw	0
 17184  0124FA  6E13               	movwf	?_ETH_NewPacket,c
 17185  0124FC  0012               	return	
 17186  0124FE                     
 17187                           ;ETHxxJ6x_driver.c: 1187: {
 17188                           ;ETHxxJ6x_driver.c: 1188: if( (bool)(txData[index].flags & (0x0001 << 2)) == 0 )
 17189  0124FE  5017               	movf	ETH_NewPacket@index,w,c
 17190  012500  0D0A               	mullw	10
 17191  012502  0E00               	movlw	low _txData
 17192  012504  24F3               	addwf	prodl,w,c
 17193  012506  6ED9               	movwf	fsr2l,c
 17194  012508  0E03               	movlw	high _txData
 17195  01250A  20F4               	addwfc	prodh,w,c
 17196  01250C  6EDA               	movwf	fsr2h,c
 17197  01250E  0103               	movlb	3	; () banked
 17198  012510  B4DF               	btfsc	indf2,2,c
 17199  012512  D0DA               	goto	l775
 17200                           
 17201                           ; BSR set to: 3
 17202                           ;ETHxxJ6x_driver.c: 1189: {
 17203                           ;ETHxxJ6x_driver.c: 1190: txData[index].flags = 0;
 17204  012514  5017               	movf	ETH_NewPacket@index,w,c
 17205  012516  0D0A               	mullw	10
 17206  012518  0E00               	movlw	low _txData
 17207  01251A  24F3               	addwf	prodl,w,c
 17208  01251C  6ED9               	movwf	fsr2l,c
 17209  01251E  0E03               	movlw	high _txData
 17210  012520  20F4               	addwfc	prodh,w,c
 17211  012522  6EDA               	movwf	fsr2h,c
 17212  012524  0E00               	movlw	0
 17213  012526  6EDE               	movwf	postinc2,c
 17214  012528  0E00               	movlw	0
 17215  01252A  6EDD               	movwf	postdec2,c
 17216                           
 17217                           ; BSR set to: 3
 17218                           
 17219                           ;ETHxxJ6x_driver.c: 1191: do{ txData[index].flags = txData[index].flags | (0x0001 << 2);
      +                           } while(0);
 17220  01252C  5017               	movf	ETH_NewPacket@index,w,c
 17221  01252E  0D0A               	mullw	10
 17222  012530  0E00               	movlw	low _txData
 17223  012532  24F3               	addwf	prodl,w,c
 17224  012534  6ED9               	movwf	fsr2l,c
 17225  012536  0E03               	movlw	high _txData
 17226  012538  20F4               	addwfc	prodh,w,c
 17227  01253A  6EDA               	movwf	fsr2h,c
 17228  01253C  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 17229  012540  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 17230  012544  0E04               	movlw	4
 17231  012546  1215               	iorwf	??_ETH_NewPacket,f,c
 17232  012548  0E00               	movlw	0
 17233  01254A  1216               	iorwf	??_ETH_NewPacket+1,f,c
 17234  01254C  5017               	movf	ETH_NewPacket@index,w,c
 17235  01254E  0D0A               	mullw	10
 17236  012550  0E00               	movlw	low _txData
 17237  012552  24F3               	addwf	prodl,w,c
 17238  012554  6ED9               	movwf	fsr2l,c
 17239  012556  0E03               	movlw	high _txData
 17240  012558  20F4               	addwfc	prodh,w,c
 17241  01255A  6EDA               	movwf	fsr2h,c
 17242  01255C  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 17243  012560  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 17244                           
 17245                           ; BSR set to: 3
 17246                           ;ETHxxJ6x_driver.c: 1193: txData[index].packetEnd = ((8192)-1);
 17247  012564  5017               	movf	ETH_NewPacket@index,w,c
 17248  012566  0D0A               	mullw	10
 17249  012568  0E04               	movlw	4
 17250  01256A  26F3               	addwf	prodl,f,c
 17251  01256C  0E00               	movlw	0
 17252  01256E  22F4               	addwfc	prodh,f,c
 17253  012570  0E00               	movlw	low _txData
 17254  012572  24F3               	addwf	prodl,w,c
 17255  012574  6ED9               	movwf	fsr2l,c
 17256  012576  0E03               	movlw	high _txData
 17257  012578  20F4               	addwfc	prodh,w,c
 17258  01257A  6EDA               	movwf	fsr2h,c
 17259  01257C  0EFF               	movlw	255
 17260  01257E  6EDE               	movwf	postinc2,c
 17261  012580  0E1F               	movlw	31
 17262  012582  6EDD               	movwf	postdec2,c
 17263                           
 17264                           ;ETHxxJ6x_driver.c: 1195: txData[index].prevPacket = (0);
 17265  012584  5017               	movf	ETH_NewPacket@index,w,c
 17266  012586  0D0A               	mullw	10
 17267  012588  0E06               	movlw	6
 17268  01258A  26F3               	addwf	prodl,f,c
 17269  01258C  0E00               	movlw	0
 17270  01258E  22F4               	addwfc	prodh,f,c
 17271  012590  0E00               	movlw	low _txData
 17272  012592  24F3               	addwf	prodl,w,c
 17273  012594  6ED9               	movwf	fsr2l,c
 17274  012596  0E03               	movlw	high _txData
 17275  012598  20F4               	addwfc	prodh,w,c
 17276  01259A  6EDA               	movwf	fsr2h,c
 17277  01259C  0E00               	movlw	0
 17278  01259E  6EDE               	movwf	postinc2,c
 17279  0125A0  0E00               	movlw	0
 17280  0125A2  6EDD               	movwf	postdec2,c
 17281                           
 17282                           ;ETHxxJ6x_driver.c: 1196: txData[index].nextPacket = pHead;
 17283  0125A4  5017               	movf	ETH_NewPacket@index,w,c
 17284  0125A6  0D0A               	mullw	10
 17285  0125A8  0E08               	movlw	8
 17286  0125AA  26F3               	addwf	prodl,f,c
 17287  0125AC  0E00               	movlw	0
 17288  0125AE  22F4               	addwfc	prodh,f,c
 17289  0125B0  0E00               	movlw	low _txData
 17290  0125B2  24F3               	addwf	prodl,w,c
 17291  0125B4  6ED9               	movwf	fsr2l,c
 17292  0125B6  0E03               	movlw	high _txData
 17293  0125B8  20F4               	addwfc	prodh,w,c
 17294  0125BA  6EDA               	movwf	fsr2h,c
 17295  0125BC  C042  FFDE         	movff	_pHead,postinc2
 17296  0125C0  C043  FFDD         	movff	_pHead+1,postdec2
 17297                           
 17298                           ; BSR set to: 3
 17299                           ;ETHxxJ6x_driver.c: 1198: if( pHead != (0) )
 17300  0125C4  5042               	movf	_pHead,w,c
 17301  0125C6  1043               	iorwf	_pHead+1,w,c
 17302  0125C8  B4D8               	btfsc	status,2,c
 17303  0125CA  D054               	goto	l778
 17304                           
 17305                           ; BSR set to: 3
 17306                           ;ETHxxJ6x_driver.c: 1199: {
 17307                           ;ETHxxJ6x_driver.c: 1200: pHead->prevPacket = &txData[index];
 17308  0125CC  5017               	movf	ETH_NewPacket@index,w,c
 17309  0125CE  0D0A               	mullw	10
 17310  0125D0  0E00               	movlw	low _txData
 17311  0125D2  6E15               	movwf	??_ETH_NewPacket& (0+255),c
 17312  0125D4  0E03               	movlw	high _txData
 17313  0125D6  6E16               	movwf	(??_ETH_NewPacket+1)& (0+255),c
 17314  0125D8  50F3               	movf	prodl,w,c
 17315  0125DA  2615               	addwf	??_ETH_NewPacket,f,c
 17316  0125DC  50F4               	movf	prodh,w,c
 17317  0125DE  2216               	addwfc	??_ETH_NewPacket+1,f,c
 17318  0125E0  EE20 F006          	lfsr	2,6
 17319  0125E4  5042               	movf	_pHead,w,c
 17320  0125E6  26D9               	addwf	fsr2l,f,c
 17321  0125E8  5043               	movf	_pHead+1,w,c
 17322  0125EA  22DA               	addwfc	fsr2h,f,c
 17323  0125EC  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 17324  0125F0  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 17325                           
 17326                           ;ETHxxJ6x_driver.c: 1201: txData[index].packetStart = pHead->packetEnd + (7);
 17327  0125F4  EE20 F004          	lfsr	2,4
 17328  0125F8  5042               	movf	_pHead,w,c
 17329  0125FA  26D9               	addwf	fsr2l,f,c
 17330  0125FC  5043               	movf	_pHead+1,w,c
 17331  0125FE  22DA               	addwfc	fsr2h,f,c
 17332  012600  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 17333  012604  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 17334  012608  0E07               	movlw	7
 17335  01260A  2615               	addwf	??_ETH_NewPacket,f,c
 17336  01260C  0E00               	movlw	0
 17337  01260E  2216               	addwfc	??_ETH_NewPacket+1,f,c
 17338  012610  5017               	movf	ETH_NewPacket@index,w,c
 17339  012612  0D0A               	mullw	10
 17340  012614  0E02               	movlw	2
 17341  012616  26F3               	addwf	prodl,f,c
 17342  012618  0E00               	movlw	0
 17343  01261A  22F4               	addwfc	prodh,f,c
 17344  01261C  0E00               	movlw	low _txData
 17345  01261E  24F3               	addwf	prodl,w,c
 17346  012620  6ED9               	movwf	fsr2l,c
 17347  012622  0E03               	movlw	high _txData
 17348  012624  20F4               	addwfc	prodh,w,c
 17349  012626  6EDA               	movwf	fsr2h,c
 17350  012628  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 17351  01262C  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 17352                           
 17353                           ;ETHxxJ6x_driver.c: 1204: if( txData[index].packetStart & 0x0001 )
 17354  012630  5017               	movf	ETH_NewPacket@index,w,c
 17355  012632  0D0A               	mullw	10
 17356  012634  0E02               	movlw	2
 17357  012636  26F3               	addwf	prodl,f,c
 17358  012638  0E00               	movlw	0
 17359  01263A  22F4               	addwfc	prodh,f,c
 17360  01263C  0E00               	movlw	low _txData
 17361  01263E  24F3               	addwf	prodl,w,c
 17362  012640  6ED9               	movwf	fsr2l,c
 17363  012642  0E03               	movlw	high _txData
 17364  012644  20F4               	addwfc	prodh,w,c
 17365  012646  6EDA               	movwf	fsr2h,c
 17366  012648  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 17367  01264C  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 17368  012650  A015               	btfss	??_ETH_NewPacket,0,c
 17369  012652  D028               	goto	l780
 17370                           
 17371                           ; BSR set to: 3
 17372                           ;ETHxxJ6x_driver.c: 1205: {
 17373                           ;ETHxxJ6x_driver.c: 1207: ++ txData[index].packetStart;
 17374  012654  5017               	movf	ETH_NewPacket@index,w,c
 17375  012656  0D0A               	mullw	10
 17376  012658  0E02               	movlw	2
 17377  01265A  26F3               	addwf	prodl,f,c
 17378  01265C  0E00               	movlw	0
 17379  01265E  22F4               	addwfc	prodh,f,c
 17380  012660  0E00               	movlw	low _txData
 17381  012662  24F3               	addwf	prodl,w,c
 17382  012664  6ED9               	movwf	fsr2l,c
 17383  012666  0E03               	movlw	high _txData
 17384  012668  20F4               	addwfc	prodh,w,c
 17385  01266A  6EDA               	movwf	fsr2h,c
 17386  01266C  2ADE               	incf	postinc2,f,c
 17387  01266E  0E00               	movlw	0
 17388  012670  22DD               	addwfc	postdec2,f,c
 17389                           
 17390                           ; BSR set to: 3
 17391                           ;ETHxxJ6x_driver.c: 1208: }
 17392                           ;ETHxxJ6x_driver.c: 1209: }
 17393  012672  D018               	goto	l780
 17394  012674                     l778:
 17395                           
 17396                           ; BSR set to: 3
 17397                           ;ETHxxJ6x_driver.c: 1210: else
 17398                           ;ETHxxJ6x_driver.c: 1211: {
 17399                           ;ETHxxJ6x_driver.c: 1212: txData[index].packetStart = ((8192) - (((1518) + (7)) << 1));
 17400                           
 17401                           ; BSR set to: 3
 17402  012674  5017               	movf	ETH_NewPacket@index,w,c
 17403  012676  0D0A               	mullw	10
 17404  012678  0E02               	movlw	2
 17405  01267A  26F3               	addwf	prodl,f,c
 17406  01267C  0E00               	movlw	0
 17407  01267E  22F4               	addwfc	prodh,f,c
 17408  012680  0E00               	movlw	low _txData
 17409  012682  24F3               	addwf	prodl,w,c
 17410  012684  6ED9               	movwf	fsr2l,c
 17411  012686  0E03               	movlw	high _txData
 17412  012688  20F4               	addwfc	prodh,w,c
 17413  01268A  6EDA               	movwf	fsr2h,c
 17414  01268C  0E16               	movlw	22
 17415  01268E  6EDE               	movwf	postinc2,c
 17416  012690  0E14               	movlw	20
 17417  012692  6EDD               	movwf	postdec2,c
 17418                           
 17419                           ; BSR set to: 3
 17420                           ;ETHxxJ6x_driver.c: 1213: pTail = (txPacket_t*)&txData[index];
 17421  012694  5017               	movf	ETH_NewPacket@index,w,c
 17422  012696  0D0A               	mullw	10
 17423  012698  0E00               	movlw	low _txData
 17424  01269A  24F3               	addwf	prodl,w,c
 17425  01269C  6E40               	movwf	_pTail,c
 17426  01269E  0E03               	movlw	high _txData
 17427  0126A0  20F4               	addwfc	prodh,w,c
 17428  0126A2  6E41               	movwf	_pTail+1,c
 17429  0126A4                     l780:
 17430                           
 17431                           ; BSR set to: 3
 17432                           ;ETHxxJ6x_driver.c: 1214: }
 17433                           ;ETHxxJ6x_driver.c: 1216: pHead = (txPacket_t*)&txData[index];
 17434                           
 17435                           ; BSR set to: 3
 17436  0126A4  5017               	movf	ETH_NewPacket@index,w,c
 17437  0126A6  0D0A               	mullw	10
 17438  0126A8  0E00               	movlw	low _txData
 17439  0126AA  24F3               	addwf	prodl,w,c
 17440  0126AC  6E42               	movwf	_pHead,c
 17441  0126AE  0E03               	movlw	high _txData
 17442  0126B0  20F4               	addwfc	prodh,w,c
 17443  0126B2  6E43               	movwf	_pHead+1,c
 17444                           
 17445                           ; BSR set to: 3
 17446                           ;ETHxxJ6x_driver.c: 1218: ethListSize ++;
 17447  0126B4  2A45               	incf	_ethListSize,f,c
 17448                           
 17449                           ; BSR set to: 3
 17450                           ;ETHxxJ6x_driver.c: 1219: return (uint16_t)(&txData[index]);
 17451  0126B6  5017               	movf	ETH_NewPacket@index,w,c
 17452  0126B8  0D0A               	mullw	10
 17453  0126BA  0E00               	movlw	low _txData
 17454  0126BC  24F3               	addwf	prodl,w,c
 17455  0126BE  6E13               	movwf	?_ETH_NewPacket,c
 17456  0126C0  0E03               	movlw	high _txData
 17457  0126C2  20F4               	addwfc	prodh,w,c
 17458  0126C4  6E14               	movwf	?_ETH_NewPacket+1,c
 17459                           
 17460                           ; BSR set to: 3
 17461  0126C6  0012               	return	
 17462  0126C8                     l775:
 17463                           
 17464                           ; BSR set to: 3
 17465                           ;ETHxxJ6x_driver.c: 1220: }
 17466                           ;ETHxxJ6x_driver.c: 1221: index ++;
 17467                           
 17468                           ; BSR set to: 3
 17469  0126C8  2A17               	incf	ETH_NewPacket@index,f,c
 17470  0126CA                     l773:
 17471                           
 17472                           ; BSR set to: 3
 17473  0126CA  0E13               	movlw	19
 17474  0126CC  6417               	cpfsgt	ETH_NewPacket@index,c
 17475  0126CE  D717               	goto	l774
 17476                           
 17477                           ;ETHxxJ6x_driver.c: 1222: }
 17478                           ;ETHxxJ6x_driver.c: 1224: return (0);
 17479  0126D0  0E00               	movlw	0
 17480  0126D2  6E14               	movwf	?_ETH_NewPacket+1,c
 17481  0126D4  0E00               	movlw	0
 17482  0126D6  6E13               	movwf	?_ETH_NewPacket,c
 17483  0126D8  0012               	return	
 17484  0126DA                     __end_of_ETH_NewPacket:
 17485                           	opt stack 0
 17486                           tosu	equ	0xFFF
 17487                           tosh	equ	0xFFE
 17488                           tosl	equ	0xFFD
 17489                           pclath	equ	0xFFA
 17490                           tblptru	equ	0xFF8
 17491                           tblptrh	equ	0xFF7
 17492                           tblptrl	equ	0xFF6
 17493                           tablat	equ	0xFF5
 17494                           prodh	equ	0xFF4
 17495                           prodl	equ	0xFF3
 17496                           intcon	equ	0xFF2
 17497                           indf0	equ	0xFEF
 17498                           postinc0	equ	0xFEE
 17499                           fsr0h	equ	0xFEA
 17500                           fsr0l	equ	0xFE9
 17501                           wreg	equ	0xFE8
 17502                           postinc1	equ	0xFE6
 17503                           postdec1	equ	0xFE5
 17504                           plusw1	equ	0xFE3
 17505                           fsr1h	equ	0xFE2
 17506                           fsr1l	equ	0xFE1
 17507                           indf2	equ	0xFDF
 17508                           postinc2	equ	0xFDE
 17509                           postdec2	equ	0xFDD
 17510                           plusw2	equ	0xFDB
 17511                           fsr2h	equ	0xFDA
 17512                           fsr2l	equ	0xFD9
 17513                           status	equ	0xFD8
 17514                           
 17515 ;; *************** function _ETH_WriteBlock *****************
 17516 ;; Defined at:
 17517 ;;		line 596 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 17518 ;; Parameters:    Size  Location     Type
 17519 ;;  buffer          2   18[COMRAM] PTR const void 
 17520 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), hostMacAddress(6), 
 17521 ;;  length          2   20[COMRAM] unsigned int 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;  p               2   22[COMRAM] PTR const unsigned char 
 17524 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), hostMacAddress(6), 
 17525 ;; Return value:  Size  Location     Type
 17526 ;;                  2   18[COMRAM] unsigned int 
 17527 ;; Registers used:
 17528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17529 ;; Tracked objects:
 17530 ;;		On entry : 0/0
 17531 ;;		On exit  : 0/0
 17532 ;;		Unchanged: 0/0
 17533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17538 ;;Total ram usage:        6 bytes
 17539 ;; Hardware stack levels used:    1
 17540 ;; Hardware stack levels required when called:    5
 17541 ;; This function calls:
 17542 ;;		_ETH_EdataWrite
 17543 ;; This function is called by:
 17544 ;;		_ARPV4_Packet
 17545 ;;		_ARPV4_Request
 17546 ;;		_sendRequest
 17547 ;; This function uses a non-reentrant model
 17548 ;;
 17549                           
 17550                           	psect	text83
 17551  0140E8                     __ptext83:
 17552                           	opt stack 0
 17553  0140E8                     _ETH_WriteBlock:
 17554                           	opt stack 18
 17555                           
 17556                           ;ETHxxJ6x_driver.c: 598: const char *p = buffer;
 17557                           
 17558                           ;incstack = 0
 17559  0140E8  C013  F017         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 17560  0140EC  C014  F018         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 17561                           
 17562                           ;ETHxxJ6x_driver.c: 599: while(length-- && (EWRPT < ((8192)-1)))
 17563  0140F0  D009               	goto	l600
 17564  0140F2                     
 17565                           ;ETHxxJ6x_driver.c: 600: {
 17566                           ;ETHxxJ6x_driver.c: 601: ETH_EdataWrite(*p++);
 17567  0140F2  C017  FFD9         	movff	ETH_WriteBlock@p,fsr2l
 17568  0140F6  C018  FFDA         	movff	ETH_WriteBlock@p+1,fsr2h
 17569  0140FA  50DF               	movf	indf2,w,c
 17570  0140FC  ECEF  F0A2         	call	_ETH_EdataWrite
 17571  014100  4A17               	infsnz	ETH_WriteBlock@p,f,c
 17572  014102  2A18               	incf	ETH_WriteBlock@p+1,f,c
 17573  014104                     l600:
 17574  014104  0615               	decf	ETH_WriteBlock@length,f,c
 17575  014106  A0D8               	btfss	status,0,c
 17576  014108  0616               	decf	ETH_WriteBlock@length+1,f,c
 17577  01410A  2815               	incf	ETH_WriteBlock@length,w,c
 17578  01410C  E103               	bnz	u6510
 17579  01410E  2816               	incf	ETH_WriteBlock@length+1,w,c
 17580  014110  B4D8               	btfsc	status,2,c
 17581  014112  0012               	return	
 17582  014114                     u6510:
 17583  014114  010E               	movlb	14	; () banked
 17584  014116  29E2               	incf	226,w,b	;volatile
 17585  014118  0E1F               	movlw	31
 17586  01411A  59E3               	subwfb	227,w,b	;volatile
 17587  01411C  B0D8               	btfsc	status,0,c
 17588  01411E  0012               	return	
 17589  014120  D7E8               	goto	l601
 17590  014122                     __end_of_ETH_WriteBlock:
 17591                           	opt stack 0
 17592                           tosu	equ	0xFFF
 17593                           tosh	equ	0xFFE
 17594                           tosl	equ	0xFFD
 17595                           pclath	equ	0xFFA
 17596                           tblptru	equ	0xFF8
 17597                           tblptrh	equ	0xFF7
 17598                           tblptrl	equ	0xFF6
 17599                           tablat	equ	0xFF5
 17600                           prodh	equ	0xFF4
 17601                           prodl	equ	0xFF3
 17602                           intcon	equ	0xFF2
 17603                           indf0	equ	0xFEF
 17604                           postinc0	equ	0xFEE
 17605                           fsr0h	equ	0xFEA
 17606                           fsr0l	equ	0xFE9
 17607                           wreg	equ	0xFE8
 17608                           postinc1	equ	0xFE6
 17609                           postdec1	equ	0xFE5
 17610                           plusw1	equ	0xFE3
 17611                           fsr1h	equ	0xFE2
 17612                           fsr1l	equ	0xFE1
 17613                           indf2	equ	0xFDF
 17614                           postinc2	equ	0xFDE
 17615                           postdec2	equ	0xFDD
 17616                           plusw2	equ	0xFDB
 17617                           fsr2h	equ	0xFDA
 17618                           fsr2l	equ	0xFD9
 17619                           status	equ	0xFD8
 17620                           
 17621 ;; *************** function _ARPV4_Lookup *****************
 17622 ;; Defined at:
 17623 ;;		line 238 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 17624 ;; Parameters:    Size  Location     Type
 17625 ;;  ip_address      4   18[COMRAM] unsigned long 
 17626 ;; Auto vars:     Size  Location     Type
 17627 ;;  entry_pointe    2   26[COMRAM] PTR struct .
 17628 ;;		 -> arpMap(104), 
 17629 ;;  x               1   28[COMRAM] unsigned char 
 17630 ;; Return value:  Size  Location     Type
 17631 ;;                  2   18[COMRAM] PTR struct .
 17632 ;; Registers used:
 17633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17634 ;; Tracked objects:
 17635 ;;		On entry : 0/0
 17636 ;;		On exit  : 0/0
 17637 ;;		Unchanged: 0/0
 17638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17640 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17642 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17643 ;;Total ram usage:       11 bytes
 17644 ;; Hardware stack levels used:    1
 17645 ;; Hardware stack levels required when called:    4
 17646 ;; This function calls:
 17647 ;;		Nothing
 17648 ;; This function is called by:
 17649 ;;		_IPv4_Start
 17650 ;; This function uses a non-reentrant model
 17651 ;;
 17652                           
 17653                           	psect	text84
 17654  013CD4                     __ptext84:
 17655                           	opt stack 0
 17656  013CD4                     _ARPV4_Lookup:
 17657                           	opt stack 20
 17658                           
 17659                           ;arpv4.c: 240: arpMap_t *entry_pointer = arpMap;
 17660                           
 17661                           ;incstack = 0
 17662  013CD4  0E80               	movlw	low _arpMap
 17663  013CD6  6E1B               	movwf	ARPV4_Lookup@entry_pointer,c
 17664  013CD8  0E04               	movlw	high _arpMap
 17665  013CDA  6E1C               	movwf	ARPV4_Lookup@entry_pointer+1,c
 17666                           
 17667                           ;arpv4.c: 241: uint8_t x;
 17668                           ;arpv4.c: 243: for(x = 0; x < 8; x++)
 17669  013CDC  0E00               	movlw	0
 17670  013CDE  6E1D               	movwf	ARPV4_Lookup@x,c
 17671  013CE0                     l7568:
 17672  013CE0  0E07               	movlw	7
 17673  013CE2  641D               	cpfsgt	ARPV4_Lookup@x,c
 17674  013CE4  D001               	goto	l342
 17675  013CE6  D01E               	goto	u6680
 17676  013CE8                     l342:
 17677                           
 17678                           ;arpv4.c: 244: {
 17679                           ;arpv4.c: 245: if(entry_pointer->ipAddress == ip_address)
 17680  013CE8  EE20 F006          	lfsr	2,6
 17681  013CEC  501B               	movf	ARPV4_Lookup@entry_pointer,w,c
 17682  013CEE  26D9               	addwf	fsr2l,f,c
 17683  013CF0  501C               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 17684  013CF2  22DA               	addwfc	fsr2h,f,c
 17685  013CF4  5013               	movf	ARPV4_Lookup@ip_address,w,c
 17686  013CF6  18DE               	xorwf	postinc2,w,c
 17687  013CF8  E10F               	bnz	l7578
 17688  013CFA  5014               	movf	ARPV4_Lookup@ip_address+1,w,c
 17689  013CFC  18DE               	xorwf	postinc2,w,c
 17690  013CFE  E10C               	bnz	l7578
 17691  013D00  5015               	movf	ARPV4_Lookup@ip_address+2,w,c
 17692  013D02  18DE               	xorwf	postinc2,w,c
 17693  013D04  E109               	bnz	l7578
 17694  013D06  5016               	movf	ARPV4_Lookup@ip_address+3,w,c
 17695  013D08  18DE               	xorwf	postinc2,w,c
 17696  013D0A  A4D8               	btfss	status,2,c
 17697  013D0C  D005               	goto	l344
 17698                           
 17699                           ;arpv4.c: 246: return &entry_pointer->macAddress;
 17700  013D0E  C01B  F013         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 17701  013D12  C01C  F014         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 17702  013D16  0012               	return	
 17703  013D18                     l344:
 17704  013D18                     l7578:
 17705                           
 17706                           ;arpv4.c: 247: entry_pointer ++;
 17707  013D18  0E0D               	movlw	13
 17708  013D1A  261B               	addwf	ARPV4_Lookup@entry_pointer,f,c
 17709  013D1C  0E00               	movlw	0
 17710  013D1E  221C               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 17711  013D20  2A1D               	incf	ARPV4_Lookup@x,f,c
 17712  013D22  D7DE               	goto	l7568
 17713  013D24                     u6680:
 17714                           
 17715                           ;arpv4.c: 248: }
 17716                           ;arpv4.c: 249: return 0;
 17717  013D24  0E00               	movlw	0
 17718  013D26  6E13               	movwf	?_ARPV4_Lookup,c
 17719  013D28  0E00               	movlw	0
 17720  013D2A  6E14               	movwf	?_ARPV4_Lookup+1,c
 17721  013D2C  0012               	return	
 17722  013D2E                     __end_of_ARPV4_Lookup:
 17723                           	opt stack 0
 17724                           tosu	equ	0xFFF
 17725                           tosh	equ	0xFFE
 17726                           tosl	equ	0xFFD
 17727                           pclath	equ	0xFFA
 17728                           tblptru	equ	0xFF8
 17729                           tblptrh	equ	0xFF7
 17730                           tblptrl	equ	0xFF6
 17731                           tablat	equ	0xFF5
 17732                           prodh	equ	0xFF4
 17733                           prodl	equ	0xFF3
 17734                           intcon	equ	0xFF2
 17735                           indf0	equ	0xFEF
 17736                           postinc0	equ	0xFEE
 17737                           fsr0h	equ	0xFEA
 17738                           fsr0l	equ	0xFE9
 17739                           wreg	equ	0xFE8
 17740                           postinc1	equ	0xFE6
 17741                           postdec1	equ	0xFE5
 17742                           plusw1	equ	0xFE3
 17743                           fsr1h	equ	0xFE2
 17744                           fsr1l	equ	0xFE1
 17745                           indf2	equ	0xFDF
 17746                           postinc2	equ	0xFDE
 17747                           postdec2	equ	0xFDD
 17748                           plusw2	equ	0xFDB
 17749                           fsr2h	equ	0xFDA
 17750                           fsr2l	equ	0xFD9
 17751                           status	equ	0xFD8
 17752                           
 17753 ;; *************** function _UDP_Send *****************
 17754 ;; Defined at:
 17755 ;;		line 94 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 17756 ;; Parameters:    Size  Location     Type
 17757 ;;		None
 17758 ;; Auto vars:     Size  Location     Type
 17759 ;;  udpLength       2   22[BANK0 ] unsigned int 
 17760 ;;  cksm            2   20[BANK0 ] unsigned int 
 17761 ;;  ret             1   19[BANK0 ] enum E393
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  1    wreg      enum E393
 17764 ;; Registers used:
 17765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17772 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17773 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17774 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17775 ;;Total ram usage:        9 bytes
 17776 ;; Hardware stack levels used:    1
 17777 ;; Hardware stack levels required when called:    8
 17778 ;; This function calls:
 17779 ;;		_ETH_GetByteCount
 17780 ;;		_ETH_Insert
 17781 ;;		_ETH_TxComputeChecksum
 17782 ;;		_IPV4_Send
 17783 ;; This function is called by:
 17784 ;;		_sendRequest
 17785 ;;		_DNS_Query
 17786 ;; This function uses a non-reentrant model
 17787 ;;
 17788                           
 17789                           	psect	text85
 17790  012F32                     __ptext85:
 17791                           	opt stack 0
 17792  012F32                     _UDP_Send:
 17793                           	opt stack 15
 17794                           
 17795                           ;udpv4.c: 96: uint16_t udpLength;
 17796                           ;udpv4.c: 97: uint16_t cksm;
 17797                           ;udpv4.c: 98: error_msg ret = ERROR;
 17798                           
 17799                           ;incstack = 0
 17800  012F32  0E00               	movlw	0
 17801  012F34  0100               	movlb	0	; () banked
 17802  012F36  6F73               	movwf	UDP_Send@ret& (0+255),b
 17803                           
 17804                           ; BSR set to: 0
 17805                           ;udpv4.c: 100: udpLength = ETH_GetByteCount();
 17806  012F38  ECE2  F0A1         	call	_ETH_GetByteCount	;wreg free
 17807  012F3C  C013  F076         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 17808  012F40  C014  F077         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 17809                           
 17810                           ;udpv4.c: 101: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 17811  012F44  0100               	movlb	0	; () banked
 17812  012F46  5176               	movf	UDP_Send@udpLength& (0+255),w,b
 17813  012F48  6F70               	movwf	(??_UDP_Send+1)& (0+255),b
 17814  012F4A  6B6F               	clrf	??_UDP_Send& (0+255),b
 17815  012F4C  C076  F071         	movff	UDP_Send@udpLength,??_UDP_Send+2
 17816  012F50  C077  F072         	movff	UDP_Send@udpLength+1,??_UDP_Send+3
 17817  012F54  C072  F071         	movff	??_UDP_Send+3,??_UDP_Send+2
 17818  012F58  6B72               	clrf	(??_UDP_Send+3)& (0+255),b
 17819  012F5A  0EFF               	movlw	255
 17820  012F5C  1771               	andwf	(??_UDP_Send+2)& (0+255),f,b
 17821  012F5E  0E00               	movlw	0
 17822  012F60  1772               	andwf	(??_UDP_Send+3)& (0+255),f,b
 17823  012F62  516F               	movf	??_UDP_Send& (0+255),w,b
 17824  012F64  1171               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 17825  012F66  6F76               	movwf	UDP_Send@udpLength& (0+255),b
 17826  012F68  5170               	movf	(??_UDP_Send+1)& (0+255),w,b
 17827  012F6A  1172               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 17828  012F6C  6F77               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;udpv4.c: 102: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (size_t)(((char*)&((udpHeader_t *)1)->length)-1));
 17832  012F6E  0E76               	movlw	low UDP_Send@udpLength
 17833  012F70  6E13               	movwf	ETH_Insert@data,c
 17834  012F72  0E00               	movlw	high UDP_Send@udpLength
 17835  012F74  6E14               	movwf	ETH_Insert@data+1,c
 17836  012F76  0E00               	movlw	0
 17837  012F78  6E16               	movwf	ETH_Insert@len+1,c
 17838  012F7A  0E02               	movlw	2
 17839  012F7C  6E15               	movwf	ETH_Insert@len,c
 17840  012F7E  0E00               	movlw	0
 17841  012F80  6E18               	movwf	ETH_Insert@offset+1,c
 17842  012F82  0E26               	movlw	38
 17843  012F84  6E17               	movwf	ETH_Insert@offset,c
 17844  012F86  ECB0  F09D         	call	_ETH_Insert	;wreg free
 17845                           
 17846                           ;udpv4.c: 103: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 17847  012F8A  0100               	movlb	0	; () banked
 17848  012F8C  5176               	movf	UDP_Send@udpLength& (0+255),w,b
 17849  012F8E  6F70               	movwf	(??_UDP_Send+1)& (0+255),b
 17850  012F90  6B6F               	clrf	??_UDP_Send& (0+255),b
 17851  012F92  C076  F071         	movff	UDP_Send@udpLength,??_UDP_Send+2
 17852  012F96  C077  F072         	movff	UDP_Send@udpLength+1,??_UDP_Send+3
 17853  012F9A  C072  F071         	movff	??_UDP_Send+3,??_UDP_Send+2
 17854  012F9E  6B72               	clrf	(??_UDP_Send+3)& (0+255),b
 17855  012FA0  0EFF               	movlw	255
 17856  012FA2  1771               	andwf	(??_UDP_Send+2)& (0+255),f,b
 17857  012FA4  0E00               	movlw	0
 17858  012FA6  1772               	andwf	(??_UDP_Send+3)& (0+255),f,b
 17859  012FA8  516F               	movf	??_UDP_Send& (0+255),w,b
 17860  012FAA  1171               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 17861  012FAC  6F76               	movwf	UDP_Send@udpLength& (0+255),b
 17862  012FAE  5170               	movf	(??_UDP_Send+1)& (0+255),w,b
 17863  012FB0  1172               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 17864  012FB2  6F77               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;udpv4.c: 106: cksm = udpLength + UDP_TCPIP;
 17868  012FB4  0E11               	movlw	17
 17869  012FB6  2576               	addwf	UDP_Send@udpLength& (0+255),w,b
 17870  012FB8  6F74               	movwf	UDP_Send@cksm& (0+255),b
 17871  012FBA  0E00               	movlw	0
 17872  012FBC  2177               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 17873  012FBE  6F75               	movwf	(UDP_Send@cksm+1)& (0+255),b
 17874                           
 17875                           ; BSR set to: 0
 17876                           ;udpv4.c: 107: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 17877  012FC0  0E00               	movlw	0
 17878  012FC2  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 17879  012FC4  0E1A               	movlw	26
 17880  012FC6  6E25               	movwf	ETH_TxComputeChecksum@position,c
 17881  012FC8  0E08               	movlw	8
 17882  012FCA  2576               	addwf	UDP_Send@udpLength& (0+255),w,b
 17883  012FCC  6E27               	movwf	ETH_TxComputeChecksum@len,c
 17884  012FCE  0E00               	movlw	0
 17885  012FD0  2177               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 17886  012FD2  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 17887  012FD4  C074  F029         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 17888  012FD8  C075  F02A         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 17889  012FDC  EC66  F099         	call	_ETH_TxComputeChecksum	;wreg free
 17890  012FE0  C025  F074         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 17891  012FE4  C026  F075         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 17892                           
 17893                           ;udpv4.c: 110: if (cksm == 0){
 17894  012FE8  0100               	movlb	0	; () banked
 17895  012FEA  5174               	movf	UDP_Send@cksm& (0+255),w,b
 17896  012FEC  1175               	iorwf	(UDP_Send@cksm+1)& (0+255),w,b
 17897  012FEE  A4D8               	btfss	status,2,c
 17898  012FF0  D002               	goto	l1221
 17899                           
 17900                           ; BSR set to: 0
 17901                           ;udpv4.c: 111: cksm = 0xffff;
 17902  012FF2  6974               	setf	UDP_Send@cksm& (0+255),b
 17903  012FF4  6975               	setf	(UDP_Send@cksm+1)& (0+255),b
 17904  012FF6                     l1221:
 17905                           
 17906                           ; BSR set to: 0
 17907                           ;udpv4.c: 112: }
 17908                           ;udpv4.c: 114: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((udpHeader_t *)1)->checksum)-1));
 17909                           
 17910                           ; BSR set to: 0
 17911  012FF6  0E74               	movlw	low UDP_Send@cksm
 17912  012FF8  6E13               	movwf	ETH_Insert@data,c
 17913  012FFA  0E00               	movlw	high UDP_Send@cksm
 17914  012FFC  6E14               	movwf	ETH_Insert@data+1,c
 17915  012FFE  0E00               	movlw	0
 17916  013000  6E16               	movwf	ETH_Insert@len+1,c
 17917  013002  0E02               	movlw	2
 17918  013004  6E15               	movwf	ETH_Insert@len,c
 17919  013006  0E00               	movlw	0
 17920  013008  6E18               	movwf	ETH_Insert@offset+1,c
 17921  01300A  0E28               	movlw	40
 17922  01300C  6E17               	movwf	ETH_Insert@offset,c
 17923  01300E  ECB0  F09D         	call	_ETH_Insert	;wreg free
 17924                           
 17925                           ;udpv4.c: 116: ret = IPV4_Send(udpLength);
 17926  013012  C076  F037         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 17927  013016  C077  F038         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 17928  01301A  EC1C  F09B         	call	_IPV4_Send	;wreg free
 17929  01301E  0100               	movlb	0	; () banked
 17930  013020  6F73               	movwf	UDP_Send@ret& (0+255),b
 17931  013022  0012               	return	
 17932  013024                     __end_of_UDP_Send:
 17933                           	opt stack 0
 17934                           tosu	equ	0xFFF
 17935                           tosh	equ	0xFFE
 17936                           tosl	equ	0xFFD
 17937                           pclath	equ	0xFFA
 17938                           tblptru	equ	0xFF8
 17939                           tblptrh	equ	0xFF7
 17940                           tblptrl	equ	0xFF6
 17941                           tablat	equ	0xFF5
 17942                           prodh	equ	0xFF4
 17943                           prodl	equ	0xFF3
 17944                           intcon	equ	0xFF2
 17945                           indf0	equ	0xFEF
 17946                           postinc0	equ	0xFEE
 17947                           fsr0h	equ	0xFEA
 17948                           fsr0l	equ	0xFE9
 17949                           wreg	equ	0xFE8
 17950                           postinc1	equ	0xFE6
 17951                           postdec1	equ	0xFE5
 17952                           plusw1	equ	0xFE3
 17953                           fsr1h	equ	0xFE2
 17954                           fsr1l	equ	0xFE1
 17955                           indf2	equ	0xFDF
 17956                           postinc2	equ	0xFDE
 17957                           postdec2	equ	0xFDD
 17958                           plusw2	equ	0xFDB
 17959                           fsr2h	equ	0xFDA
 17960                           fsr2l	equ	0xFD9
 17961                           status	equ	0xFD8
 17962                           
 17963 ;; *************** function _IPV4_Send *****************
 17964 ;; Defined at:
 17965 ;;		line 242 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 17966 ;; Parameters:    Size  Location     Type
 17967 ;;  payloadLengt    2   54[COMRAM] unsigned int 
 17968 ;; Auto vars:     Size  Location     Type
 17969 ;;  totalLength     2   13[BANK0 ] unsigned int 
 17970 ;;  cksm            2   11[BANK0 ] unsigned int 
 17971 ;;  ret             1   10[BANK0 ] enum E392
 17972 ;; Return value:  Size  Location     Type
 17973 ;;                  1    wreg      enum E392
 17974 ;; Registers used:
 17975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17976 ;; Tracked objects:
 17977 ;;		On entry : 0/0
 17978 ;;		On exit  : 0/0
 17979 ;;		Unchanged: 0/0
 17980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17982 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17983 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17984 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17985 ;;Total ram usage:       11 bytes
 17986 ;; Hardware stack levels used:    1
 17987 ;; Hardware stack levels required when called:    7
 17988 ;; This function calls:
 17989 ;;		_ETH_Insert
 17990 ;;		_ETH_Send
 17991 ;;		_ETH_TxComputeChecksum
 17992 ;; This function is called by:
 17993 ;;		_ICMP_EchoReply
 17994 ;;		_ICMP_PortUnreachable
 17995 ;;		_UDP_Send
 17996 ;; This function uses a non-reentrant model
 17997 ;;
 17998                           
 17999                           	psect	text86
 18000  013638                     __ptext86:
 18001                           	opt stack 0
 18002  013638                     _IPV4_Send:
 18003                           	opt stack 18
 18004                           
 18005                           ;ipv4.c: 244: uint16_t totalLength;
 18006                           ;ipv4.c: 245: uint16_t cksm;
 18007                           ;ipv4.c: 246: error_msg ret;
 18008                           ;ipv4.c: 248: totalLength = 20 + payloadLength;
 18009                           
 18010                           ; BSR set to: 0
 18011                           ;incstack = 0
 18012  013638  0E14               	movlw	20
 18013  01363A  2437               	addwf	IPV4_Send@payloadLength,w,c
 18014  01363C  0100               	movlb	0	; () banked
 18015  01363E  6F6D               	movwf	IPV4_Send@totalLength& (0+255),b
 18016  013640  0E00               	movlw	0
 18017  013642  2038               	addwfc	IPV4_Send@payloadLength+1,w,c
 18018  013644  6F6E               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 18019                           
 18020                           ;ipv4.c: 249: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 18021  013646  516D               	movf	IPV4_Send@totalLength& (0+255),w,b
 18022  013648  6F67               	movwf	(??_IPV4_Send+1)& (0+255),b
 18023  01364A  6B66               	clrf	??_IPV4_Send& (0+255),b
 18024  01364C  C06D  F068         	movff	IPV4_Send@totalLength,??_IPV4_Send+2
 18025  013650  C06E  F069         	movff	IPV4_Send@totalLength+1,??_IPV4_Send+3
 18026  013654  C069  F068         	movff	??_IPV4_Send+3,??_IPV4_Send+2
 18027  013658  6B69               	clrf	(??_IPV4_Send+3)& (0+255),b
 18028  01365A  0EFF               	movlw	255
 18029  01365C  1768               	andwf	(??_IPV4_Send+2)& (0+255),f,b
 18030  01365E  0E00               	movlw	0
 18031  013660  1769               	andwf	(??_IPV4_Send+3)& (0+255),f,b
 18032  013662  5166               	movf	??_IPV4_Send& (0+255),w,b
 18033  013664  1168               	iorwf	(??_IPV4_Send+2)& (0+255),w,b
 18034  013666  6F6D               	movwf	IPV4_Send@totalLength& (0+255),b
 18035  013668  5167               	movf	(??_IPV4_Send+1)& (0+255),w,b
 18036  01366A  1169               	iorwf	(??_IPV4_Send+3)& (0+255),w,b
 18037  01366C  6F6E               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;ipv4.c: 252: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (size_t)(((c
      +                          har*)&((ipv4Header_t *)1)->length)-1));
 18041  01366E  0E6D               	movlw	low IPV4_Send@totalLength
 18042  013670  6E13               	movwf	ETH_Insert@data,c
 18043  013672  0E00               	movlw	high IPV4_Send@totalLength
 18044  013674  6E14               	movwf	ETH_Insert@data+1,c
 18045  013676  0E00               	movlw	0
 18046  013678  6E16               	movwf	ETH_Insert@len+1,c
 18047  01367A  0E02               	movlw	2
 18048  01367C  6E15               	movwf	ETH_Insert@len,c
 18049  01367E  0E00               	movlw	0
 18050  013680  6E18               	movwf	ETH_Insert@offset+1,c
 18051  013682  0E10               	movlw	16
 18052  013684  6E17               	movwf	ETH_Insert@offset,c
 18053  013686  ECB0  F09D         	call	_ETH_Insert	;wreg free
 18054                           
 18055                           ;ipv4.c: 254: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 18056  01368A  0E00               	movlw	0
 18057  01368C  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 18058  01368E  0E0E               	movlw	14
 18059  013690  6E25               	movwf	ETH_TxComputeChecksum@position,c
 18060  013692  0E00               	movlw	0
 18061  013694  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 18062  013696  0E14               	movlw	20
 18063  013698  6E27               	movwf	ETH_TxComputeChecksum@len,c
 18064  01369A  0E00               	movlw	0
 18065  01369C  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
 18066  01369E  0E00               	movlw	0
 18067  0136A0  6E29               	movwf	ETH_TxComputeChecksum@seed,c
 18068  0136A2  EC66  F099         	call	_ETH_TxComputeChecksum	;wreg free
 18069  0136A6  C025  F06B         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 18070  0136AA  C026  F06C         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 18071                           
 18072                           ;ipv4.c: 256: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (size_t)(((char*)&(
      +                          (ipv4Header_t *)1)->headerCksm)-1));
 18073  0136AE  0E6B               	movlw	low IPV4_Send@cksm
 18074  0136B0  6E13               	movwf	ETH_Insert@data,c
 18075  0136B2  0E00               	movlw	high IPV4_Send@cksm
 18076  0136B4  6E14               	movwf	ETH_Insert@data+1,c
 18077  0136B6  0E00               	movlw	0
 18078  0136B8  6E16               	movwf	ETH_Insert@len+1,c
 18079  0136BA  0E02               	movlw	2
 18080  0136BC  6E15               	movwf	ETH_Insert@len,c
 18081  0136BE  0E00               	movlw	0
 18082  0136C0  6E18               	movwf	ETH_Insert@offset+1,c
 18083  0136C2  0E18               	movlw	24
 18084  0136C4  6E17               	movwf	ETH_Insert@offset,c
 18085  0136C6  ECB0  F09D         	call	_ETH_Insert	;wreg free
 18086                           
 18087                           ;ipv4.c: 257: ret = ETH_Send();
 18088  0136CA  EC29  F09A         	call	_ETH_Send	;wreg free
 18089  0136CE  0100               	movlb	0	; () banked
 18090  0136D0  6F6A               	movwf	IPV4_Send@ret& (0+255),b
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;ipv4.c: 259: return ret;
 18094  0136D2  516A               	movf	IPV4_Send@ret& (0+255),w,b
 18095  0136D4  0012               	return	
 18096  0136D6                     __end_of_IPV4_Send:
 18097                           	opt stack 0
 18098                           tosu	equ	0xFFF
 18099                           tosh	equ	0xFFE
 18100                           tosl	equ	0xFFD
 18101                           pclath	equ	0xFFA
 18102                           tblptru	equ	0xFF8
 18103                           tblptrh	equ	0xFF7
 18104                           tblptrl	equ	0xFF6
 18105                           tablat	equ	0xFF5
 18106                           prodh	equ	0xFF4
 18107                           prodl	equ	0xFF3
 18108                           intcon	equ	0xFF2
 18109                           indf0	equ	0xFEF
 18110                           postinc0	equ	0xFEE
 18111                           fsr0h	equ	0xFEA
 18112                           fsr0l	equ	0xFE9
 18113                           wreg	equ	0xFE8
 18114                           postinc1	equ	0xFE6
 18115                           postdec1	equ	0xFE5
 18116                           plusw1	equ	0xFE3
 18117                           fsr1h	equ	0xFE2
 18118                           fsr1l	equ	0xFE1
 18119                           indf2	equ	0xFDF
 18120                           postinc2	equ	0xFDE
 18121                           postdec2	equ	0xFDD
 18122                           plusw2	equ	0xFDB
 18123                           fsr2h	equ	0xFDA
 18124                           fsr2l	equ	0xFD9
 18125                           status	equ	0xFD8
 18126                           
 18127 ;; *************** function _ETH_TxComputeChecksum *****************
 18128 ;; Defined at:
 18129 ;;		line 999 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18130 ;; Parameters:    Size  Location     Type
 18131 ;;  position        2   36[COMRAM] unsigned int 
 18132 ;;  len             2   38[COMRAM] unsigned int 
 18133 ;;  seed            2   40[COMRAM] unsigned int 
 18134 ;; Auto vars:     Size  Location     Type
 18135 ;;  cksm            4    2[BANK0 ] unsigned long 
 18136 ;;  rxptr           2    0[BANK0 ] unsigned int 
 18137 ;; Return value:  Size  Location     Type
 18138 ;;                  2   36[COMRAM] unsigned int 
 18139 ;; Registers used:
 18140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18141 ;; Tracked objects:
 18142 ;;		On entry : 0/0
 18143 ;;		On exit  : 0/0
 18144 ;;		Unchanged: 0/0
 18145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18146 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18147 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18148 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18149 ;;      Totals:        18       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18150 ;;Total ram usage:       24 bytes
 18151 ;; Hardware stack levels used:    1
 18152 ;; Hardware stack levels required when called:    6
 18153 ;; This function calls:
 18154 ;;		_ETH_ComputeChecksum
 18155 ;; This function is called by:
 18156 ;;		_IPV4_Send
 18157 ;;		_ICMP_EchoReply
 18158 ;;		_ICMP_PortUnreachable
 18159 ;;		_UDP_Send
 18160 ;; This function uses a non-reentrant model
 18161 ;;
 18162                           
 18163                           	psect	text87
 18164  0132CC                     __ptext87:
 18165                           	opt stack 0
 18166  0132CC                     _ETH_TxComputeChecksum:
 18167                           	opt stack 18
 18168                           
 18169                           ;ETHxxJ6x_driver.c: 1001: uint16_t rxptr;
 18170                           ;ETHxxJ6x_driver.c: 1002: uint32_t cksm;
 18171                           ;ETHxxJ6x_driver.c: 1005: rxptr = ERDPT;
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;incstack = 0
 18175  0132CC  CF7A F060          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
 18176  0132D0  CF7B F061          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
 18177                           
 18178                           ;ETHxxJ6x_driver.c: 1008: ERDPT = pHead->packetStart + position + 1;
 18179  0132D4  EE20 F002          	lfsr	2,2
 18180  0132D8  5042               	movf	_pHead,w,c
 18181  0132DA  26D9               	addwf	fsr2l,f,c
 18182  0132DC  5043               	movf	_pHead+1,w,c
 18183  0132DE  22DA               	addwfc	fsr2h,f,c
 18184  0132E0  CFDE F02B          	movff	postinc2,??_ETH_TxComputeChecksum
 18185  0132E4  CFDD F02C          	movff	postdec2,??_ETH_TxComputeChecksum+1
 18186  0132E8  5025               	movf	ETH_TxComputeChecksum@position,w,c
 18187  0132EA  262B               	addwf	??_ETH_TxComputeChecksum,f,c
 18188  0132EC  5026               	movf	ETH_TxComputeChecksum@position+1,w,c
 18189  0132EE  222C               	addwfc	??_ETH_TxComputeChecksum+1,f,c
 18190  0132F0  0E01               	movlw	1
 18191  0132F2  242B               	addwf	??_ETH_TxComputeChecksum,w,c
 18192  0132F4  6E7A               	movwf	3962,c	;volatile
 18193  0132F6  0E00               	movlw	0
 18194  0132F8  202C               	addwfc	??_ETH_TxComputeChecksum+1,w,c
 18195  0132FA  6E7B               	movwf	3963,c	;volatile
 18196                           
 18197                           ;ETHxxJ6x_driver.c: 1010: cksm = ETH_ComputeChecksum( len, seed);
 18198  0132FC  C027  F013         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
 18199  013300  C028  F014         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 18200  013304  C029  F015         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
 18201  013308  C02A  F016         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 18202  01330C  EC86  F096         	call	_ETH_ComputeChecksum	;wreg free
 18203  013310  C013  F062         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
 18204  013314  C014  F063         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
 18205  013318  0100               	movlb	0	; () banked
 18206  01331A  6B64               	clrf	(ETH_TxComputeChecksum@cksm+2)& (0+255),b
 18207  01331C  6B65               	clrf	(ETH_TxComputeChecksum@cksm+3)& (0+255),b
 18208                           
 18209                           ; BSR set to: 0
 18210                           ;ETHxxJ6x_driver.c: 1013: ERDPT = rxptr;
 18211  01331E  C060  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
 18212  013322  C061  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;ETHxxJ6x_driver.c: 1015: cksm = ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 18216  013326  0EFF               	movlw	255
 18217  013328  1562               	andwf	ETH_TxComputeChecksum@cksm& (0+255),w,b
 18218  01332A  6E2B               	movwf	??_ETH_TxComputeChecksum& (0+255),c
 18219  01332C  0E00               	movlw	0
 18220  01332E  1563               	andwf	(ETH_TxComputeChecksum@cksm+1)& (0+255),w,b
 18221  013330  6E2C               	movwf	(??_ETH_TxComputeChecksum+1)& (0+255),c
 18222  013332  0E00               	movlw	0
 18223  013334  1564               	andwf	(ETH_TxComputeChecksum@cksm+2)& (0+255),w,b
 18224  013336  6E2D               	movwf	(??_ETH_TxComputeChecksum+2)& (0+255),c
 18225  013338  0E00               	movlw	0
 18226  01333A  1565               	andwf	(ETH_TxComputeChecksum@cksm+3)& (0+255),w,b
 18227  01333C  6E2E               	movwf	(??_ETH_TxComputeChecksum+3)& (0+255),c
 18228  01333E  C02D  F02E         	movff	??_ETH_TxComputeChecksum+2,??_ETH_TxComputeChecksum+3
 18229  013342  C02C  F02D         	movff	??_ETH_TxComputeChecksum+1,??_ETH_TxComputeChecksum+2
 18230  013346  C02B  F02C         	movff	??_ETH_TxComputeChecksum,??_ETH_TxComputeChecksum+1
 18231  01334A  6A2B               	clrf	??_ETH_TxComputeChecksum,c
 18232  01334C  0EFF               	movlw	255
 18233  01334E  C062  F02F         	movff	ETH_TxComputeChecksum@cksm,??_ETH_TxComputeChecksum+4
 18234  013352  C063  F030         	movff	ETH_TxComputeChecksum@cksm+1,??_ETH_TxComputeChecksum+5
 18235  013356  C064  F031         	movff	ETH_TxComputeChecksum@cksm+2,??_ETH_TxComputeChecksum+6
 18236  01335A  C065  F032         	movff	ETH_TxComputeChecksum@cksm+3,??_ETH_TxComputeChecksum+7
 18237  01335E  C030  F02F         	movff	??_ETH_TxComputeChecksum+5,??_ETH_TxComputeChecksum+4
 18238  013362  C031  F030         	movff	??_ETH_TxComputeChecksum+6,??_ETH_TxComputeChecksum+5
 18239  013366  C032  F031         	movff	??_ETH_TxComputeChecksum+7,??_ETH_TxComputeChecksum+6
 18240  01336A  6A32               	clrf	??_ETH_TxComputeChecksum+7,c
 18241  01336C  142F               	andwf	??_ETH_TxComputeChecksum+4,w,c
 18242  01336E  6E33               	movwf	(??_ETH_TxComputeChecksum+8)& (0+255),c
 18243  013370  0E00               	movlw	0
 18244  013372  1430               	andwf	??_ETH_TxComputeChecksum+5,w,c
 18245  013374  6E34               	movwf	(??_ETH_TxComputeChecksum+9)& (0+255),c
 18246  013376  0E00               	movlw	0
 18247  013378  1431               	andwf	??_ETH_TxComputeChecksum+6,w,c
 18248  01337A  6E35               	movwf	(??_ETH_TxComputeChecksum+10)& (0+255),c
 18249  01337C  0E00               	movlw	0
 18250  01337E  1432               	andwf	??_ETH_TxComputeChecksum+7,w,c
 18251  013380  6E36               	movwf	(??_ETH_TxComputeChecksum+11)& (0+255),c
 18252  013382  502B               	movf	??_ETH_TxComputeChecksum,w,c
 18253  013384  1033               	iorwf	??_ETH_TxComputeChecksum+8,w,c
 18254  013386  6F62               	movwf	ETH_TxComputeChecksum@cksm& (0+255),b
 18255  013388  502C               	movf	??_ETH_TxComputeChecksum+1,w,c
 18256  01338A  1034               	iorwf	??_ETH_TxComputeChecksum+9,w,c
 18257  01338C  6F63               	movwf	(ETH_TxComputeChecksum@cksm+1)& (0+255),b
 18258  01338E  502D               	movf	??_ETH_TxComputeChecksum+2,w,c
 18259  013390  1035               	iorwf	??_ETH_TxComputeChecksum+10,w,c
 18260  013392  6F64               	movwf	(ETH_TxComputeChecksum@cksm+2)& (0+255),b
 18261  013394  502E               	movf	??_ETH_TxComputeChecksum+3,w,c
 18262  013396  1036               	iorwf	??_ETH_TxComputeChecksum+11,w,c
 18263  013398  6F65               	movwf	(ETH_TxComputeChecksum@cksm+3)& (0+255),b
 18264                           
 18265                           ; BSR set to: 0
 18266                           ;ETHxxJ6x_driver.c: 1017: return cksm;
 18267  01339A  C062  F025         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 18268  01339E  C063  F026         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 18269  0133A2  0012               	return	
 18270  0133A4                     __end_of_ETH_TxComputeChecksum:
 18271                           	opt stack 0
 18272                           tosu	equ	0xFFF
 18273                           tosh	equ	0xFFE
 18274                           tosl	equ	0xFFD
 18275                           pclath	equ	0xFFA
 18276                           tblptru	equ	0xFF8
 18277                           tblptrh	equ	0xFF7
 18278                           tblptrl	equ	0xFF6
 18279                           tablat	equ	0xFF5
 18280                           prodh	equ	0xFF4
 18281                           prodl	equ	0xFF3
 18282                           intcon	equ	0xFF2
 18283                           indf0	equ	0xFEF
 18284                           postinc0	equ	0xFEE
 18285                           fsr0h	equ	0xFEA
 18286                           fsr0l	equ	0xFE9
 18287                           wreg	equ	0xFE8
 18288                           postinc1	equ	0xFE6
 18289                           postdec1	equ	0xFE5
 18290                           plusw1	equ	0xFE3
 18291                           fsr1h	equ	0xFE2
 18292                           fsr1l	equ	0xFE1
 18293                           indf2	equ	0xFDF
 18294                           postinc2	equ	0xFDE
 18295                           postdec2	equ	0xFDD
 18296                           plusw2	equ	0xFDB
 18297                           fsr2h	equ	0xFDA
 18298                           fsr2l	equ	0xFD9
 18299                           status	equ	0xFD8
 18300                           
 18301 ;; *************** function _ETH_ComputeChecksum *****************
 18302 ;; Defined at:
 18303 ;;		line 955 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18304 ;; Parameters:    Size  Location     Type
 18305 ;;  len             2   18[COMRAM] unsigned int 
 18306 ;;  seed            2   20[COMRAM] unsigned int 
 18307 ;; Auto vars:     Size  Location     Type
 18308 ;;  cksm            4   30[COMRAM] unsigned long 
 18309 ;;  v               2   34[COMRAM] unsigned int 
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  2   18[COMRAM] unsigned int 
 18312 ;; Registers used:
 18313 ;;		wreg, status,2, status,0, cstack
 18314 ;; Tracked objects:
 18315 ;;		On entry : 0/0
 18316 ;;		On exit  : 0/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18320 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18321 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18322 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18323 ;;Total ram usage:       18 bytes
 18324 ;; Hardware stack levels used:    1
 18325 ;; Hardware stack levels required when called:    5
 18326 ;; This function calls:
 18327 ;;		_ETH_EdataRead
 18328 ;; This function is called by:
 18329 ;;		_ETH_TxComputeChecksum
 18330 ;;		_ETH_RxComputeChecksum
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           	psect	text88
 18335  012D0C                     __ptext88:
 18336                           	opt stack 0
 18337  012D0C                     _ETH_ComputeChecksum:
 18338                           	opt stack 18
 18339                           
 18340                           ;ETHxxJ6x_driver.c: 957: uint32_t cksm;
 18341                           ;ETHxxJ6x_driver.c: 958: uint16_t v;
 18342                           ;ETHxxJ6x_driver.c: 960: cksm = seed;
 18343                           
 18344                           ; BSR set to: 0
 18345                           ;incstack = 0
 18346  012D0C  C015  F01F         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
 18347  012D10  C016  F020         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
 18348  012D14  6A21               	clrf	ETH_ComputeChecksum@cksm+2,c
 18349  012D16  6A22               	clrf	ETH_ComputeChecksum@cksm+3,c
 18350                           
 18351                           ;ETHxxJ6x_driver.c: 962: while(len > 1)
 18352  012D18  D016               	goto	l701
 18353  012D1A                     l7504:
 18354                           
 18355                           ;ETHxxJ6x_driver.c: 963: {
 18356                           ;ETHxxJ6x_driver.c: 964: v = 0;
 18357  012D1A  0E00               	movlw	0
 18358  012D1C  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 18359  012D1E  0E00               	movlw	0
 18360  012D20  6E23               	movwf	ETH_ComputeChecksum@v,c
 18361                           
 18362                           ;ETHxxJ6x_driver.c: 965: ((char *)&v)[1] = ETH_EdataRead();
 18363  012D22  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 18364  012D26  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 18365                           
 18366                           ;ETHxxJ6x_driver.c: 966: ((char *)&v)[0] = ETH_EdataRead();
 18367  012D28  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 18368  012D2C  6E23               	movwf	ETH_ComputeChecksum@v,c
 18369                           
 18370                           ;ETHxxJ6x_driver.c: 967: cksm += v;
 18371  012D2E  5023               	movf	ETH_ComputeChecksum@v,w,c
 18372  012D30  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 18373  012D32  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 18374  012D34  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 18375  012D36  0E00               	movlw	0
 18376  012D38  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 18377  012D3A  0E00               	movlw	0
 18378  012D3C  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 18379                           
 18380                           ;ETHxxJ6x_driver.c: 968: len -= 2;
 18381  012D3E  0E02               	movlw	2
 18382  012D40  5E13               	subwf	ETH_ComputeChecksum@len,f,c
 18383  012D42  0E00               	movlw	0
 18384  012D44  5A14               	subwfb	ETH_ComputeChecksum@len+1,f,c
 18385  012D46                     l701:
 18386  012D46  5014               	movf	ETH_ComputeChecksum@len+1,w,c
 18387  012D48  E1E8               	bnz	l7504
 18388  012D4A  0E02               	movlw	2
 18389  012D4C  5C13               	subwf	ETH_ComputeChecksum@len,w,c
 18390  012D4E  B0D8               	btfsc	status,0,c
 18391  012D50  D7E4               	goto	l702
 18392                           
 18393                           ;ETHxxJ6x_driver.c: 969: }
 18394                           ;ETHxxJ6x_driver.c: 971: if(len)
 18395  012D52  5013               	movf	ETH_ComputeChecksum@len,w,c
 18396  012D54  1014               	iorwf	ETH_ComputeChecksum@len+1,w,c
 18397  012D56  B4D8               	btfsc	status,2,c
 18398  012D58  D03B               	goto	l705
 18399                           
 18400                           ;ETHxxJ6x_driver.c: 972: {
 18401                           ;ETHxxJ6x_driver.c: 973: v = 0;
 18402  012D5A  0E00               	movlw	0
 18403  012D5C  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 18404  012D5E  0E00               	movlw	0
 18405  012D60  6E23               	movwf	ETH_ComputeChecksum@v,c
 18406                           
 18407                           ;ETHxxJ6x_driver.c: 974: ((char *)&v)[1] = ETH_EdataRead();
 18408  012D62  ECDA  F0A2         	call	_ETH_EdataRead	;wreg free
 18409  012D66  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 18410                           
 18411                           ;ETHxxJ6x_driver.c: 975: ((char *)&v)[0] = 0;
 18412  012D68  0E00               	movlw	0
 18413  012D6A  6E23               	movwf	ETH_ComputeChecksum@v,c
 18414                           
 18415                           ;ETHxxJ6x_driver.c: 976: cksm += v;
 18416  012D6C  5023               	movf	ETH_ComputeChecksum@v,w,c
 18417  012D6E  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 18418  012D70  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 18419  012D72  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 18420  012D74  0E00               	movlw	0
 18421  012D76  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 18422  012D78  0E00               	movlw	0
 18423  012D7A  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 18424                           
 18425                           ;ETHxxJ6x_driver.c: 977: }
 18426                           ;ETHxxJ6x_driver.c: 980: while(cksm >> 16)
 18427  012D7C  D029               	goto	l705
 18428  012D7E                     
 18429                           ;ETHxxJ6x_driver.c: 981: {
 18430                           ;ETHxxJ6x_driver.c: 982: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 18431  012D7E  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 18432  012D82  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 18433  012D86  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 18434  012D8A  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 18435  012D8E  0E11               	movlw	17
 18436  012D90  D005               	goto	u6590
 18437  012D92                     u6595:
 18438  012D92  90D8               	bcf	status,0,c
 18439  012D94  321A               	rrcf	??_ETH_ComputeChecksum+3,f,c
 18440  012D96  3219               	rrcf	??_ETH_ComputeChecksum+2,f,c
 18441  012D98  3218               	rrcf	??_ETH_ComputeChecksum+1,f,c
 18442  012D9A  3217               	rrcf	??_ETH_ComputeChecksum,f,c
 18443  012D9C                     u6590:
 18444  012D9C  2EE8               	decfsz	wreg,f,c
 18445  012D9E  D7F9               	goto	u6595
 18446  012DA0  0EFF               	movlw	255
 18447  012DA2  141F               	andwf	ETH_ComputeChecksum@cksm,w,c
 18448  012DA4  6E1B               	movwf	(??_ETH_ComputeChecksum+4)& (0+255),c
 18449  012DA6  0EFF               	movlw	255
 18450  012DA8  1420               	andwf	ETH_ComputeChecksum@cksm+1,w,c
 18451  012DAA  6E1C               	movwf	(??_ETH_ComputeChecksum+5)& (0+255),c
 18452  012DAC  0E00               	movlw	0
 18453  012DAE  1421               	andwf	ETH_ComputeChecksum@cksm+2,w,c
 18454  012DB0  6E1D               	movwf	(??_ETH_ComputeChecksum+6)& (0+255),c
 18455  012DB2  0E00               	movlw	0
 18456  012DB4  1422               	andwf	ETH_ComputeChecksum@cksm+3,w,c
 18457  012DB6  6E1E               	movwf	(??_ETH_ComputeChecksum+7)& (0+255),c
 18458  012DB8  5017               	movf	??_ETH_ComputeChecksum,w,c
 18459  012DBA  241B               	addwf	??_ETH_ComputeChecksum+4,w,c
 18460  012DBC  6E1F               	movwf	ETH_ComputeChecksum@cksm,c
 18461  012DBE  5018               	movf	??_ETH_ComputeChecksum+1,w,c
 18462  012DC0  201C               	addwfc	??_ETH_ComputeChecksum+5,w,c
 18463  012DC2  6E20               	movwf	ETH_ComputeChecksum@cksm+1,c
 18464  012DC4  5019               	movf	??_ETH_ComputeChecksum+2,w,c
 18465  012DC6  201D               	addwfc	??_ETH_ComputeChecksum+6,w,c
 18466  012DC8  6E21               	movwf	ETH_ComputeChecksum@cksm+2,c
 18467  012DCA  501A               	movf	??_ETH_ComputeChecksum+3,w,c
 18468  012DCC  201E               	addwfc	??_ETH_ComputeChecksum+7,w,c
 18469  012DCE  6E22               	movwf	ETH_ComputeChecksum@cksm+3,c
 18470  012DD0                     l705:
 18471  012DD0  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 18472  012DD4  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 18473  012DD8  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 18474  012DDC  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 18475  012DE0  0E11               	movlw	17
 18476  012DE2  D005               	goto	u6600
 18477  012DE4                     u6605:
 18478  012DE4  90D8               	bcf	status,0,c
 18479  012DE6  321A               	rrcf	??_ETH_ComputeChecksum+3,f,c
 18480  012DE8  3219               	rrcf	??_ETH_ComputeChecksum+2,f,c
 18481  012DEA  3218               	rrcf	??_ETH_ComputeChecksum+1,f,c
 18482  012DEC  3217               	rrcf	??_ETH_ComputeChecksum,f,c
 18483  012DEE                     u6600:
 18484  012DEE  2EE8               	decfsz	wreg,f,c
 18485  012DF0  D7F9               	goto	u6605
 18486  012DF2  5017               	movf	??_ETH_ComputeChecksum,w,c
 18487  012DF4  1018               	iorwf	??_ETH_ComputeChecksum+1,w,c
 18488  012DF6  1019               	iorwf	??_ETH_ComputeChecksum+2,w,c
 18489  012DF8  101A               	iorwf	??_ETH_ComputeChecksum+3,w,c
 18490  012DFA  A4D8               	btfss	status,2,c
 18491  012DFC  D7C0               	goto	l706
 18492                           
 18493                           ;ETHxxJ6x_driver.c: 983: }
 18494                           ;ETHxxJ6x_driver.c: 986: cksm = ~cksm;
 18495  012DFE  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 18496  012E02  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 18497  012E06  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 18498  012E0A  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 18499  012E0E  1E17               	comf	??_ETH_ComputeChecksum,f,c
 18500  012E10  1E18               	comf	??_ETH_ComputeChecksum+1,f,c
 18501  012E12  1E19               	comf	??_ETH_ComputeChecksum+2,f,c
 18502  012E14  1E1A               	comf	??_ETH_ComputeChecksum+3,f,c
 18503  012E16  C017  F01F         	movff	??_ETH_ComputeChecksum,ETH_ComputeChecksum@cksm
 18504  012E1A  C018  F020         	movff	??_ETH_ComputeChecksum+1,ETH_ComputeChecksum@cksm+1
 18505  012E1E  C019  F021         	movff	??_ETH_ComputeChecksum+2,ETH_ComputeChecksum@cksm+2
 18506  012E22  C01A  F022         	movff	??_ETH_ComputeChecksum+3,ETH_ComputeChecksum@cksm+3
 18507                           
 18508                           ;ETHxxJ6x_driver.c: 989: return cksm;
 18509  012E26  C01F  F013         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
 18510  012E2A  C020  F014         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
 18511  012E2E  0012               	return		;funcret
 18512  012E30                     __end_of_ETH_ComputeChecksum:
 18513                           	opt stack 0
 18514                           tosu	equ	0xFFF
 18515                           tosh	equ	0xFFE
 18516                           tosl	equ	0xFFD
 18517                           pclath	equ	0xFFA
 18518                           tblptru	equ	0xFF8
 18519                           tblptrh	equ	0xFF7
 18520                           tblptrl	equ	0xFF6
 18521                           tablat	equ	0xFF5
 18522                           prodh	equ	0xFF4
 18523                           prodl	equ	0xFF3
 18524                           intcon	equ	0xFF2
 18525                           indf0	equ	0xFEF
 18526                           postinc0	equ	0xFEE
 18527                           fsr0h	equ	0xFEA
 18528                           fsr0l	equ	0xFE9
 18529                           wreg	equ	0xFE8
 18530                           postinc1	equ	0xFE6
 18531                           postdec1	equ	0xFE5
 18532                           plusw1	equ	0xFE3
 18533                           fsr1h	equ	0xFE2
 18534                           fsr1l	equ	0xFE1
 18535                           indf2	equ	0xFDF
 18536                           postinc2	equ	0xFDE
 18537                           postdec2	equ	0xFDD
 18538                           plusw2	equ	0xFDB
 18539                           fsr2h	equ	0xFDA
 18540                           fsr2l	equ	0xFD9
 18541                           status	equ	0xFD8
 18542                           
 18543 ;; *************** function _ETH_EdataRead *****************
 18544 ;; Defined at:
 18545 ;;		line 108 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18546 ;; Parameters:    Size  Location     Type
 18547 ;;		None
 18548 ;; Auto vars:     Size  Location     Type
 18549 ;;		None
 18550 ;; Return value:  Size  Location     Type
 18551 ;;                  1    wreg      unsigned char 
 18552 ;; Registers used:
 18553 ;;		wreg, status,2
 18554 ;; Tracked objects:
 18555 ;;		On entry : 0/0
 18556 ;;		On exit  : 0/0
 18557 ;;		Unchanged: 0/0
 18558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18563 ;;Total ram usage:        0 bytes
 18564 ;; Hardware stack levels used:    1
 18565 ;; Hardware stack levels required when called:    4
 18566 ;; This function calls:
 18567 ;;		Nothing
 18568 ;; This function is called by:
 18569 ;;		_ETH_NextPacketUpdate
 18570 ;;		_ETH_Read8
 18571 ;;		_ETH_Read16
 18572 ;;		_ETH_Read32
 18573 ;;		_ETH_ReadBlock
 18574 ;;		_ETH_ComputeChecksum
 18575 ;;		_ETH_Read24
 18576 ;; This function uses a non-reentrant model
 18577 ;;
 18578                           
 18579                           	psect	text89
 18580  0145B4                     __ptext89:
 18581                           	opt stack 0
 18582  0145B4                     _ETH_EdataRead:
 18583                           	opt stack 18
 18584                           
 18585                           ;incstack = 0
 18586  0145B4  CF61 FE7E          	movff	3937,_errataTemp	;# 
 18587                           
 18588                           ;ETHxxJ6x_driver.c: 111: return (uint8_t) errataTemp;
 18589  0145B8  010E               	movlb	14	; () banked
 18590  0145BA  517E               	movf	126,w,b
 18591  0145BC  0012               	return	
 18592  0145BE                     __end_of_ETH_EdataRead:
 18593                           	opt stack 0
 18594                           tosu	equ	0xFFF
 18595                           tosh	equ	0xFFE
 18596                           tosl	equ	0xFFD
 18597                           pclath	equ	0xFFA
 18598                           tblptru	equ	0xFF8
 18599                           tblptrh	equ	0xFF7
 18600                           tblptrl	equ	0xFF6
 18601                           tablat	equ	0xFF5
 18602                           prodh	equ	0xFF4
 18603                           prodl	equ	0xFF3
 18604                           intcon	equ	0xFF2
 18605                           indf0	equ	0xFEF
 18606                           postinc0	equ	0xFEE
 18607                           fsr0h	equ	0xFEA
 18608                           fsr0l	equ	0xFE9
 18609                           wreg	equ	0xFE8
 18610                           postinc1	equ	0xFE6
 18611                           postdec1	equ	0xFE5
 18612                           plusw1	equ	0xFE3
 18613                           fsr1h	equ	0xFE2
 18614                           fsr1l	equ	0xFE1
 18615                           indf2	equ	0xFDF
 18616                           postinc2	equ	0xFDE
 18617                           postdec2	equ	0xFDD
 18618                           plusw2	equ	0xFDB
 18619                           fsr2h	equ	0xFDA
 18620                           fsr2l	equ	0xFD9
 18621                           status	equ	0xFD8
 18622                           
 18623 ;; *************** function _ETH_Send *****************
 18624 ;; Defined at:
 18625 ;;		line 711 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18626 ;; Parameters:    Size  Location     Type
 18627 ;;		None
 18628 ;; Auto vars:     Size  Location     Type
 18629 ;;  packetEnd       2   26[COMRAM] unsigned int 
 18630 ;; Return value:  Size  Location     Type
 18631 ;;                  1    wreg      enum E476
 18632 ;; Registers used:
 18633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18634 ;; Tracked objects:
 18635 ;;		On entry : 0/0
 18636 ;;		On exit  : 0/0
 18637 ;;		Unchanged: 0/0
 18638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18643 ;;Total ram usage:        6 bytes
 18644 ;; Hardware stack levels used:    1
 18645 ;; Hardware stack levels required when called:    6
 18646 ;; This function calls:
 18647 ;;		_ETH_SendQueued
 18648 ;;		_putch
 18649 ;; This function is called by:
 18650 ;;		_ARPV4_Packet
 18651 ;;		_ARPV4_Request
 18652 ;;		_IPV4_Send
 18653 ;; This function uses a non-reentrant model
 18654 ;;
 18655                           
 18656                           	psect	text90
 18657  013452                     __ptext90:
 18658                           	opt stack 0
 18659  013452                     _ETH_Send:
 18660                           	opt stack 17
 18661                           
 18662                           ;ETHxxJ6x_driver.c: 713: uint16_t packetEnd = EWRPT - 1;
 18663                           
 18664                           ; BSR set to: 14
 18665                           ;incstack = 0
 18666  013452  0EFF               	movlw	255
 18667  013454  010E               	movlb	14	; () banked
 18668  013456  25E2               	addwf	226,w,b	;volatile
 18669  013458  6E1B               	movwf	ETH_Send@packetEnd,c
 18670  01345A  0EFF               	movlw	255
 18671  01345C  21E3               	addwfc	227,w,b	;volatile
 18672  01345E  6E1C               	movwf	ETH_Send@packetEnd+1,c
 18673                           
 18674                           ; BSR set to: 14
 18675                           ;ETHxxJ6x_driver.c: 715: if( !ethData.up )
 18676  013460  0102               	movlb	2	; () banked
 18677  013462  B524               	btfsc	_ethData& (0+255),2,b	;volatile
 18678  013464  D002               	goto	l626
 18679                           
 18680                           ; BSR set to: 2
 18681                           ;ETHxxJ6x_driver.c: 716: {
 18682                           ;ETHxxJ6x_driver.c: 717: return LINK_NOT_FOUND;
 18683  013466  0E02               	movlw	2
 18684                           
 18685                           ; BSR set to: 2
 18686  013468  0012               	return	
 18687  01346A                     l626:
 18688                           
 18689                           ; BSR set to: 2
 18690                           ;ETHxxJ6x_driver.c: 718: }
 18691                           ;ETHxxJ6x_driver.c: 720: if( ethListSize == 0 )
 18692                           
 18693                           ; BSR set to: 2
 18694  01346A  5045               	movf	_ethListSize,w,c
 18695  01346C  A4D8               	btfss	status,2,c
 18696  01346E  D002               	goto	l628
 18697                           
 18698                           ; BSR set to: 2
 18699                           ;ETHxxJ6x_driver.c: 721: {
 18700                           ;ETHxxJ6x_driver.c: 722: return BUFFER_BUSY;
 18701  013470  0E03               	movlw	3
 18702                           
 18703                           ; BSR set to: 2
 18704  013472  0012               	return	
 18705  013474                     l628:
 18706                           
 18707                           ; BSR set to: 2
 18708                           
 18709                           ; BSR set to: 2
 18710                           
 18711                           ;ETHxxJ6x_driver.c: 723: }
 18712                           ;ETHxxJ6x_driver.c: 725: do{ pHead->flags = pHead->flags & (~(0x0001 << 0)); } while(0);
 18713                           
 18714                           ; BSR set to: 2
 18715  013474  0EFE               	movlw	254
 18716  013476  6E17               	movwf	??_ETH_Send& (0+255),c
 18717  013478  0EFF               	movlw	255
 18718  01347A  6E18               	movwf	(??_ETH_Send+1)& (0+255),c
 18719  01347C  C042  FFD9         	movff	_pHead,fsr2l
 18720  013480  C043  FFDA         	movff	_pHead+1,fsr2h
 18721  013484  CFDE F019          	movff	postinc2,??_ETH_Send+2
 18722  013488  CFDD F01A          	movff	postdec2,??_ETH_Send+3
 18723  01348C  5017               	movf	??_ETH_Send,w,c
 18724  01348E  1619               	andwf	??_ETH_Send+2,f,c
 18725  013490  5018               	movf	??_ETH_Send+1,w,c
 18726  013492  161A               	andwf	??_ETH_Send+3,f,c
 18727  013494  C042  FFD9         	movff	_pHead,fsr2l
 18728  013498  C043  FFDA         	movff	_pHead+1,fsr2h
 18729  01349C  C019  FFDE         	movff	??_ETH_Send+2,postinc2
 18730  0134A0  C01A  FFDD         	movff	??_ETH_Send+3,postdec2
 18731                           
 18732                           ; BSR set to: 2
 18733                           ;ETHxxJ6x_driver.c: 726: pHead->packetEnd = packetEnd;
 18734  0134A4  EE20 F004          	lfsr	2,4
 18735  0134A8  5042               	movf	_pHead,w,c
 18736  0134AA  26D9               	addwf	fsr2l,f,c
 18737  0134AC  5043               	movf	_pHead+1,w,c
 18738  0134AE  22DA               	addwfc	fsr2h,f,c
 18739  0134B0  C01B  FFDE         	movff	ETH_Send@packetEnd,postinc2
 18740  0134B4  C01C  FFDD         	movff	ETH_Send@packetEnd+1,postdec2
 18741                           
 18742                           ; BSR set to: 2
 18743                           
 18744                           ;ETHxxJ6x_driver.c: 727: do{ pHead->flags = pHead->flags | (0x0001 << 1); } while(0);
 18745  0134B8  C042  FFD9         	movff	_pHead,fsr2l
 18746  0134BC  C043  FFDA         	movff	_pHead+1,fsr2h
 18747  0134C0  CFDE F017          	movff	postinc2,??_ETH_Send
 18748  0134C4  CFDD F018          	movff	postdec2,??_ETH_Send+1
 18749  0134C8  0E02               	movlw	2
 18750  0134CA  1217               	iorwf	??_ETH_Send,f,c
 18751  0134CC  0E00               	movlw	0
 18752  0134CE  1218               	iorwf	??_ETH_Send+1,f,c
 18753  0134D0  C042  FFD9         	movff	_pHead,fsr2l
 18754  0134D4  C043  FFDA         	movff	_pHead+1,fsr2h
 18755  0134D8  C017  FFDE         	movff	??_ETH_Send,postinc2
 18756  0134DC  C018  FFDD         	movff	??_ETH_Send+1,postdec2
 18757                           
 18758                           ; BSR set to: 2
 18759                           ;ETHxxJ6x_driver.c: 730: if( (ECON1bits.TXRTS) || (ethListSize > 1) )
 18760                           
 18761                           ; BSR set to: 2
 18762  0134E0  B6D2               	btfsc	4050,3,c	;volatile
 18763  0134E2  D003               	goto	u6560
 18764                           
 18765                           ; BSR set to: 2
 18766  0134E4  0E01               	movlw	1
 18767  0134E6  6445               	cpfsgt	_ethListSize,c
 18768  0134E8  D005               	goto	l633
 18769  0134EA                     u6560:
 18770                           
 18771                           ; BSR set to: 2
 18772                           ;ETHxxJ6x_driver.c: 731: {
 18773                           ;ETHxxJ6x_driver.c: 732: putch('~');
 18774                           
 18775                           ; BSR set to: 2
 18776  0134EA  0E7E               	movlw	126
 18777  0134EC  ECF6  F0A2         	call	_putch
 18778                           
 18779                           ;ETHxxJ6x_driver.c: 733: return (0x0001 << 1);
 18780  0134F0  0E02               	movlw	2
 18781  0134F2  0012               	return	
 18782  0134F4                     l633:
 18783                           
 18784                           ;ETHxxJ6x_driver.c: 734: }
 18785                           ;ETHxxJ6x_driver.c: 736: return ETH_SendQueued();
 18786  0134F4  ECF7  F09B         	call	_ETH_SendQueued	;wreg free
 18787  0134F8  0012               	return	
 18788  0134FA                     __end_of_ETH_Send:
 18789                           	opt stack 0
 18790                           tosu	equ	0xFFF
 18791                           tosh	equ	0xFFE
 18792                           tosl	equ	0xFFD
 18793                           pclath	equ	0xFFA
 18794                           tblptru	equ	0xFF8
 18795                           tblptrh	equ	0xFF7
 18796                           tblptrl	equ	0xFF6
 18797                           tablat	equ	0xFF5
 18798                           prodh	equ	0xFF4
 18799                           prodl	equ	0xFF3
 18800                           intcon	equ	0xFF2
 18801                           indf0	equ	0xFEF
 18802                           postinc0	equ	0xFEE
 18803                           fsr0h	equ	0xFEA
 18804                           fsr0l	equ	0xFE9
 18805                           wreg	equ	0xFE8
 18806                           postinc1	equ	0xFE6
 18807                           postdec1	equ	0xFE5
 18808                           plusw1	equ	0xFE3
 18809                           fsr1h	equ	0xFE2
 18810                           fsr1l	equ	0xFE1
 18811                           indf2	equ	0xFDF
 18812                           postinc2	equ	0xFDE
 18813                           postdec2	equ	0xFDD
 18814                           plusw2	equ	0xFDB
 18815                           fsr2h	equ	0xFDA
 18816                           fsr2l	equ	0xFD9
 18817                           status	equ	0xFD8
 18818                           
 18819 ;; *************** function _ETH_SendQueued *****************
 18820 ;; Defined at:
 18821 ;;		line 744 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18822 ;; Parameters:    Size  Location     Type
 18823 ;;		None
 18824 ;; Auto vars:     Size  Location     Type
 18825 ;;		None
 18826 ;; Return value:  Size  Location     Type
 18827 ;;                  1    wreg      enum E4853
 18828 ;; Registers used:
 18829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18830 ;; Tracked objects:
 18831 ;;		On entry : 0/0
 18832 ;;		On exit  : 0/0
 18833 ;;		Unchanged: 0/0
 18834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18839 ;;Total ram usage:        4 bytes
 18840 ;; Hardware stack levels used:    1
 18841 ;; Hardware stack levels required when called:    5
 18842 ;; This function calls:
 18843 ;;		_putch
 18844 ;; This function is called by:
 18845 ;;		_ETH_EventHandler
 18846 ;;		_ETH_Send
 18847 ;; This function uses a non-reentrant model
 18848 ;;
 18849                           
 18850                           	psect	text91
 18851  0137EE                     __ptext91:
 18852                           	opt stack 0
 18853  0137EE                     _ETH_SendQueued:
 18854                           	opt stack 17
 18855                           
 18856                           ;ETHxxJ6x_driver.c: 746: if( pHead->flags & (0x0001 << 1) )
 18857                           
 18858                           ;incstack = 0
 18859  0137EE  C042  FFD9         	movff	_pHead,fsr2l
 18860  0137F2  C043  FFDA         	movff	_pHead+1,fsr2h
 18861  0137F6  CFDE F013          	movff	postinc2,??_ETH_SendQueued
 18862  0137FA  CFDD F014          	movff	postdec2,??_ETH_SendQueued+1
 18863  0137FE  A213               	btfss	??_ETH_SendQueued,1,c
 18864  013800  D034               	goto	l638
 18865                           
 18866                           ;ETHxxJ6x_driver.c: 747: {
 18867                           ;ETHxxJ6x_driver.c: 749: do{ pHead->flags = pHead->flags & (~(0x0001 << 1)); } while(0);
 18868  013802  0EFD               	movlw	253
 18869  013804  6E13               	movwf	??_ETH_SendQueued& (0+255),c
 18870  013806  0EFF               	movlw	255
 18871  013808  6E14               	movwf	(??_ETH_SendQueued+1)& (0+255),c
 18872  01380A  C042  FFD9         	movff	_pHead,fsr2l
 18873  01380E  C043  FFDA         	movff	_pHead+1,fsr2h
 18874  013812  CFDE F015          	movff	postinc2,??_ETH_SendQueued+2
 18875  013816  CFDD F016          	movff	postdec2,??_ETH_SendQueued+3
 18876  01381A  5013               	movf	??_ETH_SendQueued,w,c
 18877  01381C  1615               	andwf	??_ETH_SendQueued+2,f,c
 18878  01381E  5014               	movf	??_ETH_SendQueued+1,w,c
 18879  013820  1616               	andwf	??_ETH_SendQueued+3,f,c
 18880  013822  C042  FFD9         	movff	_pHead,fsr2l
 18881  013826  C043  FFDA         	movff	_pHead+1,fsr2h
 18882  01382A  C015  FFDE         	movff	??_ETH_SendQueued+2,postinc2
 18883  01382E  C016  FFDD         	movff	??_ETH_SendQueued+3,postdec2
 18884                           
 18885                           ;ETHxxJ6x_driver.c: 752: ETXST = pTail->packetStart;
 18886  013832  EE20 F002          	lfsr	2,2
 18887  013836  5040               	movf	_pTail,w,c
 18888  013838  26D9               	addwf	fsr2l,f,c
 18889  01383A  5041               	movf	_pTail+1,w,c
 18890  01383C  22DA               	addwfc	fsr2h,f,c
 18891  01383E  CFDE FEE4          	movff	postinc2,3812	;volatile
 18892  013842  CFDD FEE5          	movff	postdec2,3813	;volatile
 18893                           
 18894                           ;ETHxxJ6x_driver.c: 753: ETXND = pTail->packetEnd;
 18895  013846  EE20 F004          	lfsr	2,4
 18896  01384A  5040               	movf	_pTail,w,c
 18897  01384C  26D9               	addwf	fsr2l,f,c
 18898  01384E  5041               	movf	_pTail+1,w,c
 18899  013850  22DA               	addwfc	fsr2h,f,c
 18900  013852  CFDE FEE6          	movff	postinc2,3814	;volatile
 18901  013856  CFDD FEE7          	movff	postdec2,3815	;volatile
 18902                           
 18903                           ;ETHxxJ6x_driver.c: 755: __nop(); __nop();
 18904  01385A  F000               	nop	
 18905  01385C  F000               	nop	
 18906                           
 18907                           ;ETHxxJ6x_driver.c: 756: ECON1bits.TXRTS = 1;
 18908  01385E  86D2               	bsf	4050,3,c	;volatile
 18909                           
 18910                           ;ETHxxJ6x_driver.c: 758: putch('-');
 18911  013860  0E2D               	movlw	45
 18912  013862  ECF6  F0A2         	call	_putch
 18913                           
 18914                           ;ETHxxJ6x_driver.c: 759: return SUCCESS;
 18915  013866  0E01               	movlw	1
 18916                           
 18917                           ;ETHxxJ6x_driver.c: 760: }
 18918  013868  0012               	return	
 18919  01386A                     l638:
 18920                           
 18921                           ;ETHxxJ6x_driver.c: 761: else
 18922                           ;ETHxxJ6x_driver.c: 762: {
 18923                           ;ETHxxJ6x_driver.c: 763: return BUFFER_BUSY;
 18924  01386A  0E03               	movlw	3
 18925  01386C  0012               	return	
 18926  01386E                     __end_of_ETH_SendQueued:
 18927                           	opt stack 0
 18928                           tosu	equ	0xFFF
 18929                           tosh	equ	0xFFE
 18930                           tosl	equ	0xFFD
 18931                           pclath	equ	0xFFA
 18932                           tblptru	equ	0xFF8
 18933                           tblptrh	equ	0xFF7
 18934                           tblptrl	equ	0xFF6
 18935                           tablat	equ	0xFF5
 18936                           prodh	equ	0xFF4
 18937                           prodl	equ	0xFF3
 18938                           intcon	equ	0xFF2
 18939                           indf0	equ	0xFEF
 18940                           postinc0	equ	0xFEE
 18941                           fsr0h	equ	0xFEA
 18942                           fsr0l	equ	0xFE9
 18943                           wreg	equ	0xFE8
 18944                           postinc1	equ	0xFE6
 18945                           postdec1	equ	0xFE5
 18946                           plusw1	equ	0xFE3
 18947                           fsr1h	equ	0xFE2
 18948                           fsr1l	equ	0xFE1
 18949                           indf2	equ	0xFDF
 18950                           postinc2	equ	0xFDE
 18951                           postdec2	equ	0xFDD
 18952                           plusw2	equ	0xFDB
 18953                           fsr2h	equ	0xFDA
 18954                           fsr2l	equ	0xFD9
 18955                           status	equ	0xFD8
 18956                           
 18957 ;; *************** function _putch *****************
 18958 ;; Defined at:
 18959 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\putch.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;  c               1    wreg     unsigned char 
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;  c               1    0[COMRAM] unsigned char 
 18964 ;; Return value:  Size  Location     Type
 18965 ;;                  1    wreg      void 
 18966 ;; Registers used:
 18967 ;;		wreg
 18968 ;; Tracked objects:
 18969 ;;		On entry : 0/0
 18970 ;;		On exit  : 0/0
 18971 ;;		Unchanged: 0/0
 18972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18977 ;;Total ram usage:        0 bytes
 18978 ;; Hardware stack levels used:    1
 18979 ;; Hardware stack levels required when called:    4
 18980 ;; This function calls:
 18981 ;;		Nothing
 18982 ;; This function is called by:
 18983 ;;		_ETH_WriteStart
 18984 ;;		_ETH_Send
 18985 ;;		_ETH_SendQueued
 18986 ;;		_printf
 18987 ;;		_udp_test
 18988 ;;		__doprnt
 18989 ;; This function uses a non-reentrant model
 18990 ;;
 18991                           
 18992                           	psect	text92
 18993  0145EC                     __ptext92:
 18994                           	opt stack 0
 18995  0145EC                     _putch:
 18996                           	opt stack 21
 18997                           
 18998                           ;incstack = 0
 18999  0145EC  0012               	return		;funcret
 19000  0145EE                     __end_of_putch:
 19001                           	opt stack 0
 19002                           tosu	equ	0xFFF
 19003                           tosh	equ	0xFFE
 19004                           tosl	equ	0xFFD
 19005                           pclath	equ	0xFFA
 19006                           tblptru	equ	0xFF8
 19007                           tblptrh	equ	0xFF7
 19008                           tblptrl	equ	0xFF6
 19009                           tablat	equ	0xFF5
 19010                           prodh	equ	0xFF4
 19011                           prodl	equ	0xFF3
 19012                           intcon	equ	0xFF2
 19013                           indf0	equ	0xFEF
 19014                           postinc0	equ	0xFEE
 19015                           fsr0h	equ	0xFEA
 19016                           fsr0l	equ	0xFE9
 19017                           wreg	equ	0xFE8
 19018                           postinc1	equ	0xFE6
 19019                           postdec1	equ	0xFE5
 19020                           plusw1	equ	0xFE3
 19021                           fsr1h	equ	0xFE2
 19022                           fsr1l	equ	0xFE1
 19023                           indf2	equ	0xFDF
 19024                           postinc2	equ	0xFDE
 19025                           postdec2	equ	0xFDD
 19026                           plusw2	equ	0xFDB
 19027                           fsr2h	equ	0xFDA
 19028                           fsr2l	equ	0xFD9
 19029                           status	equ	0xFD8
 19030                           
 19031 ;; *************** function _ETH_Insert *****************
 19032 ;; Defined at:
 19033 ;;		line 774 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19034 ;; Parameters:    Size  Location     Type
 19035 ;;  data            2   18[COMRAM] PTR unsigned char 
 19036 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), ICMP_PortUnreachable@cksm(2), ICMP_EchoReply@cksm(2), 
 19037 ;;		 -> IPV4_Send@cksm(2), IPV4_Send@totalLength(2), 
 19038 ;;  len             2   20[COMRAM] unsigned int 
 19039 ;;  offset          2   22[COMRAM] unsigned int 
 19040 ;; Auto vars:     Size  Location     Type
 19041 ;;  current_tx_p    2   26[COMRAM] unsigned int 
 19042 ;; Return value:  Size  Location     Type
 19043 ;;                  1    wreg      void 
 19044 ;; Registers used:
 19045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19046 ;; Tracked objects:
 19047 ;;		On entry : 0/0
 19048 ;;		On exit  : 0/0
 19049 ;;		Unchanged: 0/0
 19050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19051 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19054 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19055 ;;Total ram usage:       10 bytes
 19056 ;; Hardware stack levels used:    1
 19057 ;; Hardware stack levels required when called:    5
 19058 ;; This function calls:
 19059 ;;		_ETH_EdataWrite
 19060 ;; This function is called by:
 19061 ;;		_IPV4_Send
 19062 ;;		_ICMP_EchoReply
 19063 ;;		_ICMP_PortUnreachable
 19064 ;;		_UDP_Send
 19065 ;; This function uses a non-reentrant model
 19066 ;;
 19067                           
 19068                           	psect	text93
 19069  013B60                     __ptext93:
 19070                           	opt stack 0
 19071  013B60                     _ETH_Insert:
 19072                           	opt stack 19
 19073                           
 19074                           ;ETHxxJ6x_driver.c: 776: uint16_t current_tx_ptr = EWRPT;
 19075                           
 19076                           ;incstack = 0
 19077  013B60  CEE2 F01B          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
 19078  013B64  CEE3 F01C          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
 19079                           
 19080                           ;ETHxxJ6x_driver.c: 777: EWRPT = pHead->packetStart + offset + 1;
 19081  013B68  EE20 F002          	lfsr	2,2
 19082  013B6C  5042               	movf	_pHead,w,c
 19083  013B6E  26D9               	addwf	fsr2l,f,c
 19084  013B70  5043               	movf	_pHead+1,w,c
 19085  013B72  22DA               	addwfc	fsr2h,f,c
 19086  013B74  CFDE F019          	movff	postinc2,??_ETH_Insert
 19087  013B78  CFDD F01A          	movff	postdec2,??_ETH_Insert+1
 19088  013B7C  5017               	movf	ETH_Insert@offset,w,c
 19089  013B7E  2619               	addwf	??_ETH_Insert,f,c
 19090  013B80  5018               	movf	ETH_Insert@offset+1,w,c
 19091  013B82  221A               	addwfc	??_ETH_Insert+1,f,c
 19092  013B84  0E01               	movlw	1
 19093  013B86  2419               	addwf	??_ETH_Insert,w,c
 19094  013B88  010E               	movlb	14	; () banked
 19095  013B8A  6FE2               	movwf	226,b	;volatile
 19096  013B8C  0E00               	movlw	0
 19097  013B8E  201A               	addwfc	??_ETH_Insert+1,w,c
 19098  013B90  6FE3               	movwf	227,b	;volatile
 19099                           
 19100                           ;ETHxxJ6x_driver.c: 778: while(len--)
 19101  013B92  D009               	goto	l645
 19102  013B94                     l7598:
 19103                           
 19104                           ;ETHxxJ6x_driver.c: 779: {
 19105                           ;ETHxxJ6x_driver.c: 780: ETH_EdataWrite(*data++);
 19106  013B94  C013  FFD9         	movff	ETH_Insert@data,fsr2l
 19107  013B98  C014  FFDA         	movff	ETH_Insert@data+1,fsr2h
 19108  013B9C  50DF               	movf	indf2,w,c
 19109  013B9E  ECEF  F0A2         	call	_ETH_EdataWrite
 19110  013BA2  4A13               	infsnz	ETH_Insert@data,f,c
 19111  013BA4  2A14               	incf	ETH_Insert@data+1,f,c
 19112  013BA6                     l645:
 19113  013BA6  0615               	decf	ETH_Insert@len,f,c
 19114  013BA8  A0D8               	btfss	status,0,c
 19115  013BAA  0616               	decf	ETH_Insert@len+1,f,c
 19116  013BAC  2815               	incf	ETH_Insert@len,w,c
 19117  013BAE  E1F2               	bnz	l7598
 19118  013BB0  2816               	incf	ETH_Insert@len+1,w,c
 19119  013BB2  A4D8               	btfss	status,2,c
 19120  013BB4  D7EF               	goto	l646
 19121                           
 19122                           ;ETHxxJ6x_driver.c: 781: }
 19123                           ;ETHxxJ6x_driver.c: 782: EWRPT = current_tx_ptr;
 19124  013BB6  C01B  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
 19125  013BBA  C01C  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
 19126  013BBE  0012               	return		;funcret
 19127  013BC0                     __end_of_ETH_Insert:
 19128                           	opt stack 0
 19129                           tosu	equ	0xFFF
 19130                           tosh	equ	0xFFE
 19131                           tosl	equ	0xFFD
 19132                           pclath	equ	0xFFA
 19133                           tblptru	equ	0xFF8
 19134                           tblptrh	equ	0xFF7
 19135                           tblptrl	equ	0xFF6
 19136                           tablat	equ	0xFF5
 19137                           prodh	equ	0xFF4
 19138                           prodl	equ	0xFF3
 19139                           intcon	equ	0xFF2
 19140                           indf0	equ	0xFEF
 19141                           postinc0	equ	0xFEE
 19142                           fsr0h	equ	0xFEA
 19143                           fsr0l	equ	0xFE9
 19144                           wreg	equ	0xFE8
 19145                           postinc1	equ	0xFE6
 19146                           postdec1	equ	0xFE5
 19147                           plusw1	equ	0xFE3
 19148                           fsr1h	equ	0xFE2
 19149                           fsr1l	equ	0xFE1
 19150                           indf2	equ	0xFDF
 19151                           postinc2	equ	0xFDE
 19152                           postdec2	equ	0xFDD
 19153                           plusw2	equ	0xFDB
 19154                           fsr2h	equ	0xFDA
 19155                           fsr2l	equ	0xFD9
 19156                           status	equ	0xFD8
 19157                           
 19158 ;; *************** function _ETH_GetByteCount *****************
 19159 ;; Defined at:
 19160 ;;		line 1126 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19161 ;; Parameters:    Size  Location     Type
 19162 ;;		None
 19163 ;; Auto vars:     Size  Location     Type
 19164 ;;		None
 19165 ;; Return value:  Size  Location     Type
 19166 ;;                  2   18[COMRAM] unsigned int 
 19167 ;; Registers used:
 19168 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19169 ;; Tracked objects:
 19170 ;;		On entry : 0/0
 19171 ;;		On exit  : 0/0
 19172 ;;		Unchanged: 0/0
 19173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19178 ;;Total ram usage:        4 bytes
 19179 ;; Hardware stack levels used:    1
 19180 ;; Hardware stack levels required when called:    4
 19181 ;; This function calls:
 19182 ;;		Nothing
 19183 ;; This function is called by:
 19184 ;;		_UDP_Send
 19185 ;; This function uses a non-reentrant model
 19186 ;;
 19187                           
 19188                           	psect	text94
 19189  0143C4                     __ptext94:
 19190                           	opt stack 0
 19191  0143C4                     _ETH_GetByteCount:
 19192                           	opt stack 18
 19193                           
 19194                           ;ETHxxJ6x_driver.c: 1128: return (EWRPT - ethData.saveWRPT);
 19195                           
 19196                           ;incstack = 0
 19197  0143C4  EE22  F028         	lfsr	2,_ethData+4	;volatile
 19198  0143C8  CFDE F015          	movff	postinc2,??_ETH_GetByteCount
 19199  0143CC  CFDD F016          	movff	postdec2,??_ETH_GetByteCount+1
 19200  0143D0  1E15               	comf	??_ETH_GetByteCount,f,c
 19201  0143D2  1E16               	comf	??_ETH_GetByteCount+1,f,c
 19202  0143D4  4A15               	infsnz	??_ETH_GetByteCount,f,c
 19203  0143D6  2A16               	incf	??_ETH_GetByteCount+1,f,c
 19204  0143D8  010E               	movlb	14	; () banked
 19205  0143DA  51E2               	movf	226,w,b	;volatile
 19206  0143DC  2415               	addwf	??_ETH_GetByteCount,w,c
 19207  0143DE  6E13               	movwf	?_ETH_GetByteCount,c
 19208  0143E0  51E3               	movf	227,w,b	;volatile
 19209  0143E2  2016               	addwfc	??_ETH_GetByteCount+1,w,c
 19210  0143E4  6E14               	movwf	?_ETH_GetByteCount+1,c
 19211  0143E6  0012               	return	
 19212  0143E8                     __end_of_ETH_GetByteCount:
 19213                           	opt stack 0
 19214                           tosu	equ	0xFFF
 19215                           tosh	equ	0xFFE
 19216                           tosl	equ	0xFFD
 19217                           pclath	equ	0xFFA
 19218                           tblptru	equ	0xFF8
 19219                           tblptrh	equ	0xFF7
 19220                           tblptrl	equ	0xFF6
 19221                           tablat	equ	0xFF5
 19222                           prodh	equ	0xFF4
 19223                           prodl	equ	0xFF3
 19224                           intcon	equ	0xFF2
 19225                           indf0	equ	0xFEF
 19226                           postinc0	equ	0xFEE
 19227                           fsr0h	equ	0xFEA
 19228                           fsr0l	equ	0xFE9
 19229                           wreg	equ	0xFE8
 19230                           postinc1	equ	0xFE6
 19231                           postdec1	equ	0xFE5
 19232                           plusw1	equ	0xFE3
 19233                           fsr1h	equ	0xFE2
 19234                           fsr1l	equ	0xFE1
 19235                           indf2	equ	0xFDF
 19236                           postinc2	equ	0xFDE
 19237                           postdec2	equ	0xFDD
 19238                           plusw2	equ	0xFDB
 19239                           fsr2h	equ	0xFDA
 19240                           fsr2l	equ	0xFD9
 19241                           status	equ	0xFD8
 19242                           
 19243 ;; *************** function _ETH_WriteString *****************
 19244 ;; Defined at:
 19245 ;;		line 578 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19246 ;; Parameters:    Size  Location     Type
 19247 ;;  string          2   18[COMRAM] PTR const unsigned char 
 19248 ;;		 -> dhcpName(13), 
 19249 ;; Auto vars:     Size  Location     Type
 19250 ;;  length          2   20[COMRAM] unsigned int 
 19251 ;; Return value:  Size  Location     Type
 19252 ;;                  2   18[COMRAM] unsigned int 
 19253 ;; Registers used:
 19254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19255 ;; Tracked objects:
 19256 ;;		On entry : 0/0
 19257 ;;		On exit  : 0/0
 19258 ;;		Unchanged: 0/0
 19259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19264 ;;Total ram usage:        4 bytes
 19265 ;; Hardware stack levels used:    1
 19266 ;; Hardware stack levels required when called:    5
 19267 ;; This function calls:
 19268 ;;		_ETH_EdataWrite
 19269 ;; This function is called by:
 19270 ;;		_sendRequest
 19271 ;; This function uses a non-reentrant model
 19272 ;;
 19273                           
 19274                           	psect	text95
 19275  013F1E                     __ptext95:
 19276                           	opt stack 0
 19277  013F1E                     _ETH_WriteString:
 19278                           	opt stack 18
 19279                           
 19280                           ;ETHxxJ6x_driver.c: 580: uint16_t length = 0;
 19281                           
 19282                           ; BSR set to: 14
 19283                           ;incstack = 0
 19284  013F1E  0E00               	movlw	0
 19285  013F20  6E16               	movwf	ETH_WriteString@length+1,c
 19286  013F22  0E00               	movlw	0
 19287  013F24  6E15               	movwf	ETH_WriteString@length,c
 19288                           
 19289                           ;ETHxxJ6x_driver.c: 581: while(*string && (EWRPT < ((8192)-1)))
 19290  013F26  D00E               	goto	l592
 19291  013F28                     
 19292                           ;ETHxxJ6x_driver.c: 582: {
 19293                           ;ETHxxJ6x_driver.c: 583: ETH_EdataWrite(*string++);
 19294  013F28  C013  FFF6         	movff	ETH_WriteString@string,tblptrl
 19295  013F2C  C014  FFF7         	movff	ETH_WriteString@string+1,tblptrh
 19296  013F30                     	if	0	;tblptru may be non-zero
 19297  013F30                     	endif
 19298  013F30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19299  013F30  0E00               	movlw	low (__mediumconst shr (0+16))
 19300  013F32  6EF8               	movwf	tblptru,c
 19301  013F34                     	endif
 19302  013F34  0008               	tblrd		*
 19303  013F36  50F5               	movf	tablat,w,c
 19304  013F38  ECEF  F0A2         	call	_ETH_EdataWrite
 19305  013F3C  4A13               	infsnz	ETH_WriteString@string,f,c
 19306  013F3E  2A14               	incf	ETH_WriteString@string+1,f,c
 19307                           
 19308                           ;ETHxxJ6x_driver.c: 584: length ++;
 19309  013F40  4A15               	infsnz	ETH_WriteString@length,f,c
 19310  013F42  2A16               	incf	ETH_WriteString@length+1,f,c
 19311  013F44                     l592:
 19312  013F44  C013  FFF6         	movff	ETH_WriteString@string,tblptrl
 19313  013F48  C014  FFF7         	movff	ETH_WriteString@string+1,tblptrh
 19314  013F4C                     	if	0	;tblptru may be non-zero
 19315  013F4C                     	endif
 19316  013F4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19317  013F4C  0E00               	movlw	low (__mediumconst shr (0+16))
 19318  013F4E  6EF8               	movwf	tblptru,c
 19319  013F50                     	endif
 19320  013F50  0008               	tblrd		*
 19321  013F52  50F5               	movf	tablat,w,c
 19322  013F54  0900               	iorlw	0
 19323  013F56  B4D8               	btfsc	status,2,c
 19324  013F58  0012               	return	
 19325  013F5A  010E               	movlb	14	; () banked
 19326  013F5C  29E2               	incf	226,w,b	;volatile
 19327  013F5E  0E1F               	movlw	31
 19328  013F60  59E3               	subwfb	227,w,b	;volatile
 19329  013F62  B0D8               	btfsc	status,0,c
 19330  013F64  0012               	return	
 19331  013F66  D7E0               	goto	l593
 19332  013F68                     __end_of_ETH_WriteString:
 19333                           	opt stack 0
 19334                           tosu	equ	0xFFF
 19335                           tosh	equ	0xFFE
 19336                           tosl	equ	0xFFD
 19337                           pclath	equ	0xFFA
 19338                           tblptru	equ	0xFF8
 19339                           tblptrh	equ	0xFF7
 19340                           tblptrl	equ	0xFF6
 19341                           tablat	equ	0xFF5
 19342                           prodh	equ	0xFF4
 19343                           prodl	equ	0xFF3
 19344                           intcon	equ	0xFF2
 19345                           indf0	equ	0xFEF
 19346                           postinc0	equ	0xFEE
 19347                           fsr0h	equ	0xFEA
 19348                           fsr0l	equ	0xFE9
 19349                           wreg	equ	0xFE8
 19350                           postinc1	equ	0xFE6
 19351                           postdec1	equ	0xFE5
 19352                           plusw1	equ	0xFE3
 19353                           fsr1h	equ	0xFE2
 19354                           fsr1l	equ	0xFE1
 19355                           indf2	equ	0xFDF
 19356                           postinc2	equ	0xFDE
 19357                           postdec2	equ	0xFDD
 19358                           plusw2	equ	0xFDB
 19359                           fsr2h	equ	0xFDA
 19360                           fsr2l	equ	0xFD9
 19361                           status	equ	0xFD8
 19362                           
 19363 ;; *************** function _DHCP_WriteZeros *****************
 19364 ;; Defined at:
 19365 ;;		line 483 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 19366 ;; Parameters:    Size  Location     Type
 19367 ;;  length          2   19[COMRAM] unsigned int 
 19368 ;; Auto vars:     Size  Location     Type
 19369 ;;		None
 19370 ;; Return value:  Size  Location     Type
 19371 ;;                  1    wreg      void 
 19372 ;; Registers used:
 19373 ;;		wreg, status,2, status,0, cstack
 19374 ;; Tracked objects:
 19375 ;;		On entry : 0/0
 19376 ;;		On exit  : 0/0
 19377 ;;		Unchanged: 0/0
 19378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19383 ;;Total ram usage:        2 bytes
 19384 ;; Hardware stack levels used:    1
 19385 ;; Hardware stack levels required when called:    6
 19386 ;; This function calls:
 19387 ;;		_ETH_Write8
 19388 ;; This function is called by:
 19389 ;;		_sendRequest
 19390 ;; This function uses a non-reentrant model
 19391 ;;
 19392                           
 19393                           	psect	text96
 19394  01447E                     __ptext96:
 19395                           	opt stack 0
 19396  01447E                     _DHCP_WriteZeros:
 19397                           	opt stack 17
 19398                           
 19399                           ;dhcp_client.c: 485: while(length--)
 19400                           
 19401                           ;incstack = 0
 19402  01447E  D003               	goto	l1422
 19403  014480                     l7740:
 19404                           
 19405                           ;dhcp_client.c: 486: {
 19406                           ;dhcp_client.c: 487: ETH_Write8(0);
 19407  014480  0E00               	movlw	0
 19408  014482  ECDF  F0A2         	call	_ETH_Write8
 19409  014486                     l1422:
 19410  014486  0614               	decf	DHCP_WriteZeros@length,f,c
 19411  014488  A0D8               	btfss	status,0,c
 19412  01448A  0615               	decf	DHCP_WriteZeros@length+1,f,c
 19413  01448C  2814               	incf	DHCP_WriteZeros@length,w,c
 19414  01448E  E1F8               	bnz	l7740
 19415  014490  2815               	incf	DHCP_WriteZeros@length+1,w,c
 19416  014492  B4D8               	btfsc	status,2,c
 19417  014494  0012               	return	
 19418  014496  D7F4               	goto	l1423
 19419  014498                     __end_of_DHCP_WriteZeros:
 19420                           	opt stack 0
 19421                           tosu	equ	0xFFF
 19422                           tosh	equ	0xFFE
 19423                           tosl	equ	0xFFD
 19424                           pclath	equ	0xFFA
 19425                           tblptru	equ	0xFF8
 19426                           tblptrh	equ	0xFF7
 19427                           tblptrl	equ	0xFF6
 19428                           tablat	equ	0xFF5
 19429                           prodh	equ	0xFF4
 19430                           prodl	equ	0xFF3
 19431                           intcon	equ	0xFF2
 19432                           indf0	equ	0xFEF
 19433                           postinc0	equ	0xFEE
 19434                           fsr0h	equ	0xFEA
 19435                           fsr0l	equ	0xFE9
 19436                           wreg	equ	0xFE8
 19437                           postinc1	equ	0xFE6
 19438                           postdec1	equ	0xFE5
 19439                           plusw1	equ	0xFE3
 19440                           fsr1h	equ	0xFE2
 19441                           fsr1l	equ	0xFE1
 19442                           indf2	equ	0xFDF
 19443                           postinc2	equ	0xFDE
 19444                           postdec2	equ	0xFDD
 19445                           plusw2	equ	0xFDB
 19446                           fsr2h	equ	0xFDA
 19447                           fsr2l	equ	0xFD9
 19448                           status	equ	0xFD8
 19449                           
 19450 ;; *************** function _ETH_Write8 *****************
 19451 ;; Defined at:
 19452 ;;		line 540 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19453 ;; Parameters:    Size  Location     Type
 19454 ;;  data            1    wreg     unsigned char 
 19455 ;; Auto vars:     Size  Location     Type
 19456 ;;  data            1   18[COMRAM] unsigned char 
 19457 ;; Return value:  Size  Location     Type
 19458 ;;                  1    wreg      void 
 19459 ;; Registers used:
 19460 ;;		wreg, status,2, cstack
 19461 ;; Tracked objects:
 19462 ;;		On entry : 0/0
 19463 ;;		On exit  : 0/0
 19464 ;;		Unchanged: 0/0
 19465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19470 ;;Total ram usage:        1 bytes
 19471 ;; Hardware stack levels used:    1
 19472 ;; Hardware stack levels required when called:    5
 19473 ;; This function calls:
 19474 ;;		_ETH_EdataWrite
 19475 ;; This function is called by:
 19476 ;;		_IPv4_Start
 19477 ;;		_sendRequest
 19478 ;;		_DHCP_WriteZeros
 19479 ;;		_DNS_Query
 19480 ;; This function uses a non-reentrant model
 19481 ;;
 19482                           
 19483                           	psect	text97
 19484  0145BE                     __ptext97:
 19485                           	opt stack 0
 19486  0145BE                     _ETH_Write8:
 19487                           	opt stack 19
 19488                           
 19489                           ;incstack = 0
 19490                           ;ETH_Write8@data stored from wreg
 19491  0145BE  6E13               	movwf	ETH_Write8@data,c
 19492                           
 19493                           ;ETHxxJ6x_driver.c: 542: ETH_EdataWrite(data);
 19494  0145C0  5013               	movf	ETH_Write8@data,w,c
 19495  0145C2  ECEF  F0A2         	call	_ETH_EdataWrite
 19496  0145C6  0012               	return		;funcret
 19497  0145C8                     __end_of_ETH_Write8:
 19498                           	opt stack 0
 19499                           tosu	equ	0xFFF
 19500                           tosh	equ	0xFFE
 19501                           tosl	equ	0xFFD
 19502                           pclath	equ	0xFFA
 19503                           tblptru	equ	0xFF8
 19504                           tblptrh	equ	0xFF7
 19505                           tblptrl	equ	0xFF6
 19506                           tablat	equ	0xFF5
 19507                           prodh	equ	0xFF4
 19508                           prodl	equ	0xFF3
 19509                           intcon	equ	0xFF2
 19510                           indf0	equ	0xFEF
 19511                           postinc0	equ	0xFEE
 19512                           fsr0h	equ	0xFEA
 19513                           fsr0l	equ	0xFE9
 19514                           wreg	equ	0xFE8
 19515                           postinc1	equ	0xFE6
 19516                           postdec1	equ	0xFE5
 19517                           plusw1	equ	0xFE3
 19518                           fsr1h	equ	0xFE2
 19519                           fsr1l	equ	0xFE1
 19520                           indf2	equ	0xFDF
 19521                           postinc2	equ	0xFDE
 19522                           postdec2	equ	0xFDD
 19523                           plusw2	equ	0xFDB
 19524                           fsr2h	equ	0xFDA
 19525                           fsr2l	equ	0xFD9
 19526                           status	equ	0xFD8
 19527                           
 19528 ;; *************** function _ETH_EdataWrite *****************
 19529 ;; Defined at:
 19530 ;;		line 114 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;  d               1    wreg     unsigned char 
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;  d               1    0[COMRAM] unsigned char 
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1    wreg      void 
 19537 ;; Registers used:
 19538 ;;		wreg
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19548 ;;Total ram usage:        0 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    4
 19551 ;; This function calls:
 19552 ;;		Nothing
 19553 ;; This function is called by:
 19554 ;;		_ETH_Write8
 19555 ;;		_ETH_Write16
 19556 ;;		_ETH_Write32
 19557 ;;		_ETH_WriteString
 19558 ;;		_ETH_WriteBlock
 19559 ;;		_ETH_WriteStart
 19560 ;;		_ETH_Insert
 19561 ;;		_ETH_Write24
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text98
 19566  0145DE                     __ptext98:
 19567                           	opt stack 0
 19568  0145DE                     _ETH_EdataWrite:
 19569                           	opt stack 19
 19570                           
 19571                           ;incstack = 0
 19572  0145DE  CFE8 FF61          	movff	wreg,3937	;# 
 19573  0145E2  0012               	return		;funcret
 19574  0145E4                     __end_of_ETH_EdataWrite:
 19575                           	opt stack 0
 19576                           tosu	equ	0xFFF
 19577                           tosh	equ	0xFFE
 19578                           tosl	equ	0xFFD
 19579                           pclath	equ	0xFFA
 19580                           tblptru	equ	0xFF8
 19581                           tblptrh	equ	0xFF7
 19582                           tblptrl	equ	0xFF6
 19583                           tablat	equ	0xFF5
 19584                           prodh	equ	0xFF4
 19585                           prodl	equ	0xFF3
 19586                           intcon	equ	0xFF2
 19587                           indf0	equ	0xFEF
 19588                           postinc0	equ	0xFEE
 19589                           fsr0h	equ	0xFEA
 19590                           fsr0l	equ	0xFE9
 19591                           wreg	equ	0xFE8
 19592                           postinc1	equ	0xFE6
 19593                           postdec1	equ	0xFE5
 19594                           plusw1	equ	0xFE3
 19595                           fsr1h	equ	0xFE2
 19596                           fsr1l	equ	0xFE1
 19597                           indf2	equ	0xFDF
 19598                           postinc2	equ	0xFDE
 19599                           postdec2	equ	0xFDD
 19600                           plusw2	equ	0xFDB
 19601                           fsr2h	equ	0xFDA
 19602                           fsr2l	equ	0xFD9
 19603                           status	equ	0xFD8
 19604                           
 19605 ;; *************** function _lfsr *****************
 19606 ;; Defined at:
 19607 ;;		line 32 in file "mcc_generated_files/TCPIPLibrary/lfsr.c"
 19608 ;; Parameters:    Size  Location     Type
 19609 ;;		None
 19610 ;; Auto vars:     Size  Location     Type
 19611 ;;  lsb             1   18[COMRAM] unsigned char 
 19612 ;; Return value:  Size  Location     Type
 19613 ;;                  1    wreg      unsigned char 
 19614 ;; Registers used:
 19615 ;;		wreg, status,2, status,0
 19616 ;; Tracked objects:
 19617 ;;		On entry : 0/0
 19618 ;;		On exit  : 0/0
 19619 ;;		Unchanged: 0/0
 19620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19625 ;;Total ram usage:        1 bytes
 19626 ;; Hardware stack levels used:    1
 19627 ;; Hardware stack levels required when called:    4
 19628 ;; This function calls:
 19629 ;;		Nothing
 19630 ;; This function is called by:
 19631 ;;		_sendDHCPDISCOVER
 19632 ;; This function uses a non-reentrant model
 19633 ;;
 19634                           
 19635                           	psect	text99
 19636  014498                     __ptext99:
 19637                           	opt stack 0
 19638  014498                     _lfsr:
 19639                           	opt stack 23
 19640                           
 19641                           ;lfsr.c: 34: char lsb = lfsr_value & 1;
 19642                           
 19643                           ;incstack = 0
 19644  014498  504B               	movf	_lfsr_value,w,c
 19645  01449A  0B01               	andlw	1
 19646  01449C  6E13               	movwf	lfsr@lsb,c
 19647                           
 19648                           ;lfsr.c: 35: lfsr_value >>= 1;
 19649  01449E  90D8               	bcf	status,0,c
 19650  0144A0  324B               	rrcf	_lfsr_value,f,c
 19651                           
 19652                           ;lfsr.c: 36: if (lsb)
 19653  0144A2  5013               	movf	lfsr@lsb,w,c
 19654  0144A4  B4D8               	btfsc	status,2,c
 19655  0144A6  D002               	goto	l1052
 19656                           
 19657                           ;lfsr.c: 37: lfsr_value ^= xor_mask;
 19658  0144A8  504C               	movf	_xor_mask,w,c
 19659  0144AA  1A4B               	xorwf	_lfsr_value,f,c
 19660  0144AC                     l1052:
 19661                           
 19662                           ;lfsr.c: 38: return lfsr_value & 0x7f;
 19663  0144AC  504B               	movf	_lfsr_value,w,c
 19664  0144AE  0B7F               	andlw	127
 19665  0144B0  0012               	return	
 19666  0144B2                     __end_of_lfsr:
 19667                           	opt stack 0
 19668                           tosu	equ	0xFFF
 19669                           tosh	equ	0xFFE
 19670                           tosl	equ	0xFFD
 19671                           pclath	equ	0xFFA
 19672                           tblptru	equ	0xFF8
 19673                           tblptrh	equ	0xFF7
 19674                           tblptrl	equ	0xFF6
 19675                           tablat	equ	0xFF5
 19676                           prodh	equ	0xFF4
 19677                           prodl	equ	0xFF3
 19678                           intcon	equ	0xFF2
 19679                           indf0	equ	0xFEF
 19680                           postinc0	equ	0xFEE
 19681                           fsr0h	equ	0xFEA
 19682                           fsr0l	equ	0xFE9
 19683                           wreg	equ	0xFE8
 19684                           postinc1	equ	0xFE6
 19685                           postdec1	equ	0xFE5
 19686                           plusw1	equ	0xFE3
 19687                           fsr1h	equ	0xFE2
 19688                           fsr1l	equ	0xFE1
 19689                           indf2	equ	0xFDF
 19690                           postinc2	equ	0xFDE
 19691                           postdec2	equ	0xFDD
 19692                           plusw2	equ	0xFDB
 19693                           fsr2h	equ	0xFDA
 19694                           fsr2l	equ	0xFD9
 19695                           status	equ	0xFD8
 19696                           
 19697 ;; *************** function _ARPV4_Update *****************
 19698 ;; Defined at:
 19699 ;;		line 183 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 19700 ;; Parameters:    Size  Location     Type
 19701 ;;		None
 19702 ;; Auto vars:     Size  Location     Type
 19703 ;;  x               1   20[COMRAM] unsigned char 
 19704 ;;  entryPointer    2   18[COMRAM] PTR struct .
 19705 ;;		 -> arpMap(104), 
 19706 ;; Return value:  Size  Location     Type
 19707 ;;                  1    wreg      void 
 19708 ;; Registers used:
 19709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19710 ;; Tracked objects:
 19711 ;;		On entry : 0/0
 19712 ;;		On exit  : 0/0
 19713 ;;		Unchanged: 0/0
 19714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19716 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19718 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19719 ;;Total ram usage:        3 bytes
 19720 ;; Hardware stack levels used:    1
 19721 ;; Hardware stack levels required when called:    4
 19722 ;; This function calls:
 19723 ;;		Nothing
 19724 ;; This function is called by:
 19725 ;;		_Network_Manage
 19726 ;; This function uses a non-reentrant model
 19727 ;;
 19728                           
 19729                           	psect	text100
 19730  014226                     __ptext100:
 19731                           	opt stack 0
 19732  014226                     _ARPV4_Update:
 19733                           	opt stack 25
 19734                           
 19735                           ;arpv4.c: 185: arpMap_t *entryPointer = arpMap;
 19736                           
 19737                           ;incstack = 0
 19738  014226  0E80               	movlw	low _arpMap
 19739  014228  6E13               	movwf	ARPV4_Update@entryPointer,c
 19740  01422A  0E04               	movlw	high _arpMap
 19741  01422C  6E14               	movwf	ARPV4_Update@entryPointer+1,c
 19742                           
 19743                           ;arpv4.c: 186: for(uint8_t x=0; x < 8; x++)
 19744  01422E  0E00               	movlw	0
 19745  014230  6E15               	movwf	ARPV4_Update@x,c
 19746  014232                     l9042:
 19747  014232  0E07               	movlw	7
 19748  014234  6415               	cpfsgt	ARPV4_Update@x,c
 19749  014236  D001               	goto	l332
 19750  014238  0012               	return	
 19751  01423A                     l332:
 19752                           
 19753                           ;arpv4.c: 187: {
 19754                           ;arpv4.c: 188: entryPointer->age ++;
 19755  01423A  EE20 F00C          	lfsr	2,12
 19756  01423E  5013               	movf	ARPV4_Update@entryPointer,w,c
 19757  014240  26D9               	addwf	fsr2l,f,c
 19758  014242  5014               	movf	ARPV4_Update@entryPointer+1,w,c
 19759  014244  22DA               	addwfc	fsr2h,f,c
 19760  014246  2ADF               	incf	indf2,f,c
 19761                           
 19762                           ;arpv4.c: 189: entryPointer ++;
 19763  014248  0E0D               	movlw	13
 19764  01424A  2613               	addwf	ARPV4_Update@entryPointer,f,c
 19765  01424C  0E00               	movlw	0
 19766  01424E  2214               	addwfc	ARPV4_Update@entryPointer+1,f,c
 19767  014250  2A15               	incf	ARPV4_Update@x,f,c
 19768  014252  D7EF               	goto	l9042
 19769  014254                     __end_of_ARPV4_Update:
 19770                           	opt stack 0
 19771                           tosu	equ	0xFFF
 19772                           tosh	equ	0xFFE
 19773                           tosl	equ	0xFFD
 19774                           pclath	equ	0xFFA
 19775                           tblptru	equ	0xFF8
 19776                           tblptrh	equ	0xFF7
 19777                           tblptrl	equ	0xFF6
 19778                           tablat	equ	0xFF5
 19779                           prodh	equ	0xFF4
 19780                           prodl	equ	0xFF3
 19781                           intcon	equ	0xFF2
 19782                           indf0	equ	0xFEF
 19783                           postinc0	equ	0xFEE
 19784                           fsr0h	equ	0xFEA
 19785                           fsr0l	equ	0xFE9
 19786                           wreg	equ	0xFE8
 19787                           postinc1	equ	0xFE6
 19788                           postdec1	equ	0xFE5
 19789                           plusw1	equ	0xFE3
 19790                           fsr1h	equ	0xFE2
 19791                           fsr1l	equ	0xFE1
 19792                           indf2	equ	0xFDF
 19793                           postinc2	equ	0xFDE
 19794                           postdec2	equ	0xFDD
 19795                           plusw2	equ	0xFDB
 19796                           fsr2h	equ	0xFDA
 19797                           fsr2l	equ	0xFD9
 19798                           status	equ	0xFD8
 19799                           
 19800 ;; *************** function _INTERRUPT_InterruptManager *****************
 19801 ;; Defined at:
 19802 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 19803 ;; Parameters:    Size  Location     Type
 19804 ;;		None
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;		None
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  1    wreg      void 
 19809 ;; Registers used:
 19810 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/0
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19818 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19819 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19820 ;;Total ram usage:       18 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; Hardware stack levels required when called:    3
 19823 ;; This function calls:
 19824 ;;		_TMR0_ISR
 19825 ;;		_TMR1_ISR
 19826 ;; This function is called by:
 19827 ;;		Interrupt level 2
 19828 ;; This function uses a non-reentrant model
 19829 ;;
 19830                           
 19831                           	psect	intcode
 19832  000008                     __pintcode:
 19833                           	opt stack 0
 19834  000008                     _INTERRUPT_InterruptManager:
 19835                           	opt stack 14
 19836                           
 19837                           ;incstack = 0
 19838  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19839  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 19840  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 19841  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 19842  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 19843  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 19844  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 19845  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 19846  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 19847  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
 19848  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
 19849  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 19850  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 19851  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 19852  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
 19853  000042  C04D  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
 19854  000046  C04E  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 19855  00004A  C04F  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 19856  00004E  C050  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 19857                           
 19858                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 19859  000052  BAF2               	btfsc	intcon,5,c	;volatile
 19860  000054  A4F2               	btfss	intcon,2,c	;volatile
 19861  000056  D003               	goto	i2l22
 19862                           
 19863                           ;interrupt_manager.c: 61: {
 19864                           ;interrupt_manager.c: 62: TMR0_ISR();
 19865  000058  EC2A  F0A1         	call	_TMR0_ISR	;wreg free
 19866                           
 19867                           ;interrupt_manager.c: 63: }
 19868  00005C  D006               	goto	i2l24
 19869  00005E                     i2l22:
 19870                           
 19871                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 19872  00005E  BCF2               	btfsc	intcon,6,c	;volatile
 19873  000060  A09D               	btfss	3997,0,c	;volatile
 19874  000062  D003               	goto	i2l24
 19875  000064  B09E               	btfsc	3998,0,c	;volatile
 19876                           
 19877                           ;interrupt_manager.c: 65: {
 19878                           ;interrupt_manager.c: 66: TMR1_ISR();
 19879  000066  EC41  F0A1         	call	_TMR1_ISR	;wreg free
 19880  00006A                     i2l24:
 19881                           
 19882                           ;interrupt_manager.c: 68: else
 19883                           ;interrupt_manager.c: 69: {
 19884  00006A  C012  F050         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 19885  00006E  C011  F04F         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 19886  000072  C010  F04E         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 19887  000076  C00F  F04D         	movff	??_INTERRUPT_InterruptManager+14,btemp
 19888  00007A  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 19889  00007E  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 19890  000082  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 19891  000086  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 19892  00008A  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 19893  00008E  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 19894  000092  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 19895  000096  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 19896  00009A  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 19897  00009E  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 19898  0000A2  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 19899  0000A6  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 19900  0000AA  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 19901  0000AE  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 19902  0000B2  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19903  0000B4  0011               	retfie		f
 19904  0000B6                     __end_of_INTERRUPT_InterruptManager:
 19905                           	opt stack 0
 19906                           tosu	equ	0xFFF
 19907                           tosh	equ	0xFFE
 19908                           tosl	equ	0xFFD
 19909                           pclatu	equ	0xFFB
 19910                           pclath	equ	0xFFA
 19911                           tblptru	equ	0xFF8
 19912                           tblptrh	equ	0xFF7
 19913                           tblptrl	equ	0xFF6
 19914                           tablat	equ	0xFF5
 19915                           prodh	equ	0xFF4
 19916                           prodl	equ	0xFF3
 19917                           intcon	equ	0xFF2
 19918                           indf0	equ	0xFEF
 19919                           postinc0	equ	0xFEE
 19920                           fsr0h	equ	0xFEA
 19921                           fsr0l	equ	0xFE9
 19922                           wreg	equ	0xFE8
 19923                           postinc1	equ	0xFE6
 19924                           postdec1	equ	0xFE5
 19925                           plusw1	equ	0xFE3
 19926                           fsr1h	equ	0xFE2
 19927                           fsr1l	equ	0xFE1
 19928                           indf2	equ	0xFDF
 19929                           postinc2	equ	0xFDE
 19930                           postdec2	equ	0xFDD
 19931                           plusw2	equ	0xFDB
 19932                           fsr2h	equ	0xFDA
 19933                           fsr2l	equ	0xFD9
 19934                           status	equ	0xFD8
 19935                           
 19936 ;; *************** function _TMR1_ISR *****************
 19937 ;; Defined at:
 19938 ;;		line 144 in file "mcc_generated_files/tmr1.c"
 19939 ;; Parameters:    Size  Location     Type
 19940 ;;		None
 19941 ;; Auto vars:     Size  Location     Type
 19942 ;;		None
 19943 ;; Return value:  Size  Location     Type
 19944 ;;                  1    wreg      void 
 19945 ;; Registers used:
 19946 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19947 ;; Tracked objects:
 19948 ;;		On entry : 0/0
 19949 ;;		On exit  : 0/0
 19950 ;;		Unchanged: 0/0
 19951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19956 ;;Total ram usage:        0 bytes
 19957 ;; Hardware stack levels used:    1
 19958 ;; Hardware stack levels required when called:    2
 19959 ;; This function calls:
 19960 ;;		_TMR1_CallBack
 19961 ;; This function is called by:
 19962 ;;		_INTERRUPT_InterruptManager
 19963 ;; This function uses a non-reentrant model
 19964 ;;
 19965                           
 19966                           	psect	text102
 19967  014282                     __ptext102:
 19968                           	opt stack 0
 19969  014282                     _TMR1_ISR:
 19970                           	opt stack 14
 19971                           
 19972                           ;tmr1.c: 146: static volatile uint16_t CountCallBack = 0;
 19973                           ;tmr1.c: 149: PIR1bits.TMR1IF = 0;
 19974                           
 19975                           ;incstack = 0
 19976  014282  909E               	bcf	3998,0,c	;volatile
 19977                           
 19978                           ;tmr1.c: 152: TMR1H = (timer1ReloadVal >> 8);
 19979  014284  504A               	movf	_timer1ReloadVal+1,w,c	;volatile
 19980  014286  6ECF               	movwf	4047,c	;volatile
 19981                           
 19982                           ;tmr1.c: 153: TMR1L = (uint8_t) timer1ReloadVal;
 19983  014288  C049  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 19984                           
 19985                           ;tmr1.c: 156: if (++CountCallBack >= 20)
 19986  01428C  0102               	movlb	2	; () banked
 19987  01428E  4B46               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
 19988  014290  2B47               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 19989  014292  5147               	movf	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 19990  014294  E104               	bnz	i2u595_40
 19991  014296  0E14               	movlw	20
 19992  014298  5D46               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
 19993  01429A  A0D8               	btfss	status,0,c
 19994  01429C  0012               	return	
 19995  01429E                     i2u595_40:
 19996                           
 19997                           ; BSR set to: 2
 19998                           ;tmr1.c: 157: {
 19999                           ;tmr1.c: 159: TMR1_CallBack();
 20000  01429E  ECF4  F0A1         	call	_TMR1_CallBack	;wreg free
 20001                           
 20002                           ;tmr1.c: 162: CountCallBack = 0;
 20003  0142A2  0E00               	movlw	0
 20004  0142A4  0102               	movlb	2	; () banked
 20005  0142A6  6F47               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
 20006  0142A8  0E00               	movlw	0
 20007  0142AA  6F46               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
 20008  0142AC  0012               	return	
 20009  0142AE                     __end_of_TMR1_ISR:
 20010                           	opt stack 0
 20011                           tosu	equ	0xFFF
 20012                           tosh	equ	0xFFE
 20013                           tosl	equ	0xFFD
 20014                           pclatu	equ	0xFFB
 20015                           pclath	equ	0xFFA
 20016                           tblptru	equ	0xFF8
 20017                           tblptrh	equ	0xFF7
 20018                           tblptrl	equ	0xFF6
 20019                           tablat	equ	0xFF5
 20020                           prodh	equ	0xFF4
 20021                           prodl	equ	0xFF3
 20022                           intcon	equ	0xFF2
 20023                           indf0	equ	0xFEF
 20024                           postinc0	equ	0xFEE
 20025                           fsr0h	equ	0xFEA
 20026                           fsr0l	equ	0xFE9
 20027                           wreg	equ	0xFE8
 20028                           postinc1	equ	0xFE6
 20029                           postdec1	equ	0xFE5
 20030                           plusw1	equ	0xFE3
 20031                           fsr1h	equ	0xFE2
 20032                           fsr1l	equ	0xFE1
 20033                           indf2	equ	0xFDF
 20034                           postinc2	equ	0xFDE
 20035                           postdec2	equ	0xFDD
 20036                           plusw2	equ	0xFDB
 20037                           fsr2h	equ	0xFDA
 20038                           fsr2l	equ	0xFD9
 20039                           status	equ	0xFD8
 20040                           
 20041 ;; *************** function _TMR1_CallBack *****************
 20042 ;; Defined at:
 20043 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 20044 ;; Parameters:    Size  Location     Type
 20045 ;;		None
 20046 ;; Auto vars:     Size  Location     Type
 20047 ;;		None
 20048 ;; Return value:  Size  Location     Type
 20049 ;;                  1    wreg      void 
 20050 ;; Registers used:
 20051 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20052 ;; Tracked objects:
 20053 ;;		On entry : 0/0
 20054 ;;		On exit  : 0/0
 20055 ;;		Unchanged: 0/0
 20056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20061 ;;Total ram usage:        0 bytes
 20062 ;; Hardware stack levels used:    1
 20063 ;; Hardware stack levels required when called:    1
 20064 ;; This function calls:
 20065 ;;		Absolute function
 20066 ;;		_TMR1_DefaultInterruptHandler
 20067 ;;		_rtcc_handler
 20068 ;; This function is called by:
 20069 ;;		_TMR1_ISR
 20070 ;; This function uses a non-reentrant model
 20071 ;;
 20072                           
 20073                           	psect	text103
 20074  0143E8                     __ptext103:
 20075                           	opt stack 0
 20076  0143E8                     _TMR1_CallBack:
 20077                           	opt stack 14
 20078                           
 20079                           ;tmr1.c: 170: if(TMR1_InterruptHandler)
 20080                           
 20081                           ; BSR set to: 2
 20082                           ;incstack = 0
 20083  0143E8  0102               	movlb	2	; () banked
 20084  0143EA  51F6               	movf	_TMR1_InterruptHandler& (0+255),w,b
 20085  0143EC  11F7               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 20086  0143EE  11F8               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 20087  0143F0  B4D8               	btfsc	status,2,c
 20088  0143F2  0012               	return	
 20089                           
 20090                           ; BSR set to: 2
 20091                           ;tmr1.c: 171: {
 20092                           ;tmr1.c: 172: TMR1_InterruptHandler();
 20093  0143F4  D801               	call	i2u575_48
 20094  0143F6  0012               	return	
 20095  0143F8                     i2u575_48:
 20096  0143F8  0005               	push	
 20097  0143FA  6EFA               	movwf	pclath,c
 20098  0143FC  51F6               	movf	_TMR1_InterruptHandler& (0+255),w,b
 20099  0143FE  6EFD               	movwf	tosl,c
 20100  014400  51F7               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 20101  014402  6EFE               	movwf	tosh,c
 20102  014404  51F8               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 20103  014406  6EFF               	movwf	tosu,c
 20104  014408  50FA               	movf	pclath,w,c
 20105  01440A  0012               	return		;indir
 20106  01440C                     __end_of_TMR1_CallBack:
 20107                           	opt stack 0
 20108                           tosu	equ	0xFFF
 20109                           tosh	equ	0xFFE
 20110                           tosl	equ	0xFFD
 20111                           pclatu	equ	0xFFB
 20112                           pclath	equ	0xFFA
 20113                           tblptru	equ	0xFF8
 20114                           tblptrh	equ	0xFF7
 20115                           tblptrl	equ	0xFF6
 20116                           tablat	equ	0xFF5
 20117                           prodh	equ	0xFF4
 20118                           prodl	equ	0xFF3
 20119                           intcon	equ	0xFF2
 20120                           indf0	equ	0xFEF
 20121                           postinc0	equ	0xFEE
 20122                           fsr0h	equ	0xFEA
 20123                           fsr0l	equ	0xFE9
 20124                           wreg	equ	0xFE8
 20125                           postinc1	equ	0xFE6
 20126                           postdec1	equ	0xFE5
 20127                           plusw1	equ	0xFE3
 20128                           fsr1h	equ	0xFE2
 20129                           fsr1l	equ	0xFE1
 20130                           indf2	equ	0xFDF
 20131                           postinc2	equ	0xFDE
 20132                           postdec2	equ	0xFDD
 20133                           plusw2	equ	0xFDB
 20134                           fsr2h	equ	0xFDA
 20135                           fsr2l	equ	0xFD9
 20136                           status	equ	0xFD8
 20137                           
 20138 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 20139 ;; Defined at:
 20140 ;;		line 180 in file "mcc_generated_files/tmr1.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;		None
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;		None
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  1    wreg      void 
 20147 ;; Registers used:
 20148 ;;		None
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/0
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20158 ;;Total ram usage:        0 bytes
 20159 ;; Hardware stack levels used:    1
 20160 ;; This function calls:
 20161 ;;		Nothing
 20162 ;; This function is called by:
 20163 ;;		_TMR1_Initialize
 20164 ;;		_TMR1_CallBack
 20165 ;; This function uses a non-reentrant model
 20166 ;;
 20167                           
 20168                           	psect	text104
 20169  0145EE                     __ptext104:
 20170                           	opt stack 0
 20171  0145EE                     _TMR1_DefaultInterruptHandler:
 20172                           	opt stack 14
 20173                           
 20174                           ;incstack = 0
 20175  0145EE  0012               	return		;funcret
 20176  0145F0                     __end_of_TMR1_DefaultInterruptHandler:
 20177                           	opt stack 0
 20178                           tosu	equ	0xFFF
 20179                           tosh	equ	0xFFE
 20180                           tosl	equ	0xFFD
 20181                           pclatu	equ	0xFFB
 20182                           pclath	equ	0xFFA
 20183                           tblptru	equ	0xFF8
 20184                           tblptrh	equ	0xFF7
 20185                           tblptrl	equ	0xFF6
 20186                           tablat	equ	0xFF5
 20187                           prodh	equ	0xFF4
 20188                           prodl	equ	0xFF3
 20189                           intcon	equ	0xFF2
 20190                           indf0	equ	0xFEF
 20191                           postinc0	equ	0xFEE
 20192                           fsr0h	equ	0xFEA
 20193                           fsr0l	equ	0xFE9
 20194                           wreg	equ	0xFE8
 20195                           postinc1	equ	0xFE6
 20196                           postdec1	equ	0xFE5
 20197                           plusw1	equ	0xFE3
 20198                           fsr1h	equ	0xFE2
 20199                           fsr1l	equ	0xFE1
 20200                           indf2	equ	0xFDF
 20201                           postinc2	equ	0xFDE
 20202                           postdec2	equ	0xFDD
 20203                           plusw2	equ	0xFDB
 20204                           fsr2h	equ	0xFDA
 20205                           fsr2l	equ	0xFD9
 20206                           status	equ	0xFD8
 20207                           
 20208 ;; *************** function _rtcc_handler *****************
 20209 ;; Defined at:
 20210 ;;		line 95 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 20211 ;; Parameters:    Size  Location     Type
 20212 ;;		None
 20213 ;; Auto vars:     Size  Location     Type
 20214 ;;		None
 20215 ;; Return value:  Size  Location     Type
 20216 ;;                  1    wreg      void 
 20217 ;; Registers used:
 20218 ;;		wreg, status,2, status,0
 20219 ;; Tracked objects:
 20220 ;;		On entry : 0/0
 20221 ;;		On exit  : 0/0
 20222 ;;		Unchanged: 0/0
 20223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20228 ;;Total ram usage:        0 bytes
 20229 ;; Hardware stack levels used:    1
 20230 ;; This function calls:
 20231 ;;		Nothing
 20232 ;; This function is called by:
 20233 ;;		_rtcc_init
 20234 ;;		_TMR1_CallBack
 20235 ;; This function uses a non-reentrant model
 20236 ;;
 20237                           
 20238                           	psect	text105
 20239  0144FE                     __ptext105:
 20240                           	opt stack 0
 20241  0144FE                     _rtcc_handler:
 20242                           	opt stack 14
 20243                           
 20244                           ;rtcc.c: 97: device_time++;
 20245                           
 20246                           ;incstack = 0
 20247  0144FE  0E01               	movlw	1
 20248  014500  0102               	movlb	2	; () banked
 20249  014502  272E               	addwf	_device_time& (0+255),f,b	;volatile
 20250  014504  0E00               	movlw	0
 20251  014506  232F               	addwfc	(_device_time+1)& (0+255),f,b	;volatile
 20252  014508  2330               	addwfc	(_device_time+2)& (0+255),f,b	;volatile
 20253  01450A  2331               	addwfc	(_device_time+3)& (0+255),f,b	;volatile
 20254                           
 20255                           ; BSR set to: 2
 20256  01450C  0012               	return		;funcret
 20257  01450E                     __end_of_rtcc_handler:
 20258                           	opt stack 0
 20259                           tosu	equ	0xFFF
 20260                           tosh	equ	0xFFE
 20261                           tosl	equ	0xFFD
 20262                           pclatu	equ	0xFFB
 20263                           pclath	equ	0xFFA
 20264                           tblptru	equ	0xFF8
 20265                           tblptrh	equ	0xFF7
 20266                           tblptrl	equ	0xFF6
 20267                           tablat	equ	0xFF5
 20268                           prodh	equ	0xFF4
 20269                           prodl	equ	0xFF3
 20270                           intcon	equ	0xFF2
 20271                           indf0	equ	0xFEF
 20272                           postinc0	equ	0xFEE
 20273                           fsr0h	equ	0xFEA
 20274                           fsr0l	equ	0xFE9
 20275                           wreg	equ	0xFE8
 20276                           postinc1	equ	0xFE6
 20277                           postdec1	equ	0xFE5
 20278                           plusw1	equ	0xFE3
 20279                           fsr1h	equ	0xFE2
 20280                           fsr1l	equ	0xFE1
 20281                           indf2	equ	0xFDF
 20282                           postinc2	equ	0xFDE
 20283                           postdec2	equ	0xFDD
 20284                           plusw2	equ	0xFDB
 20285                           fsr2h	equ	0xFDA
 20286                           fsr2l	equ	0xFD9
 20287                           status	equ	0xFD8
 20288                           
 20289 ;; *************** function _TMR0_ISR *****************
 20290 ;; Defined at:
 20291 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 20292 ;; Parameters:    Size  Location     Type
 20293 ;;		None
 20294 ;; Auto vars:     Size  Location     Type
 20295 ;;		None
 20296 ;; Return value:  Size  Location     Type
 20297 ;;                  1    wreg      void 
 20298 ;; Registers used:
 20299 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20300 ;; Tracked objects:
 20301 ;;		On entry : 0/0
 20302 ;;		On exit  : 0/0
 20303 ;;		Unchanged: 0/0
 20304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20309 ;;Total ram usage:        0 bytes
 20310 ;; Hardware stack levels used:    1
 20311 ;; Hardware stack levels required when called:    1
 20312 ;; This function calls:
 20313 ;;		Absolute function
 20314 ;;		_TMR0_DefaultInterruptHandler
 20315 ;; This function is called by:
 20316 ;;		_INTERRUPT_InterruptManager
 20317 ;; This function uses a non-reentrant model
 20318 ;;
 20319                           
 20320                           	psect	text106
 20321  014254                     __ptext106:
 20322                           	opt stack 0
 20323  014254                     _TMR0_ISR:
 20324                           	opt stack 15
 20325                           
 20326                           ;tmr0.c: 136: INTCONbits.TMR0IF = 0;
 20327                           
 20328                           ; BSR set to: 2
 20329                           ;incstack = 0
 20330  014254  94F2               	bcf	intcon,2,c	;volatile
 20331                           
 20332                           ;tmr0.c: 140: TMR0H = timer0ReloadVal >> 8;
 20333  014256  5048               	movf	_timer0ReloadVal+1,w,c	;volatile
 20334  014258  6ED7               	movwf	4055,c	;volatile
 20335                           
 20336                           ;tmr0.c: 141: TMR0L = (uint8_t) timer0ReloadVal;
 20337  01425A  C047  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 20338                           
 20339                           ;tmr0.c: 143: if(TMR0_InterruptHandler)
 20340  01425E  0102               	movlb	2	; () banked
 20341  014260  51F3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 20342  014262  11F4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 20343  014264  11F5               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 20344  014266  B4D8               	btfsc	status,2,c
 20345  014268  0012               	return	
 20346                           
 20347                           ; BSR set to: 2
 20348                           ;tmr0.c: 144: {
 20349                           ;tmr0.c: 145: TMR0_InterruptHandler();
 20350  01426A  D801               	call	i2u594_48
 20351  01426C  0012               	return	
 20352  01426E                     i2u594_48:
 20353  01426E  0005               	push	
 20354  014270  6EFA               	movwf	pclath,c
 20355  014272  51F3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 20356  014274  6EFD               	movwf	tosl,c
 20357  014276  51F4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 20358  014278  6EFE               	movwf	tosh,c
 20359  01427A  51F5               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 20360  01427C  6EFF               	movwf	tosu,c
 20361  01427E  50FA               	movf	pclath,w,c
 20362  014280  0012               	return		;indir
 20363  014282                     __end_of_TMR0_ISR:
 20364                           	opt stack 0
 20365                           tosu	equ	0xFFF
 20366                           tosh	equ	0xFFE
 20367                           tosl	equ	0xFFD
 20368                           pclatu	equ	0xFFB
 20369                           pclath	equ	0xFFA
 20370                           tblptru	equ	0xFF8
 20371                           tblptrh	equ	0xFF7
 20372                           tblptrl	equ	0xFF6
 20373                           tablat	equ	0xFF5
 20374                           prodh	equ	0xFF4
 20375                           prodl	equ	0xFF3
 20376                           intcon	equ	0xFF2
 20377                           indf0	equ	0xFEF
 20378                           postinc0	equ	0xFEE
 20379                           fsr0h	equ	0xFEA
 20380                           fsr0l	equ	0xFE9
 20381                           wreg	equ	0xFE8
 20382                           postinc1	equ	0xFE6
 20383                           postdec1	equ	0xFE5
 20384                           plusw1	equ	0xFE3
 20385                           fsr1h	equ	0xFE2
 20386                           fsr1l	equ	0xFE1
 20387                           indf2	equ	0xFDF
 20388                           postinc2	equ	0xFDE
 20389                           postdec2	equ	0xFDD
 20390                           plusw2	equ	0xFDB
 20391                           fsr2h	equ	0xFDA
 20392                           fsr2l	equ	0xFD9
 20393                           status	equ	0xFD8
 20394                           
 20395 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20396 ;; Defined at:
 20397 ;;		line 156 in file "mcc_generated_files/tmr0.c"
 20398 ;; Parameters:    Size  Location     Type
 20399 ;;		None
 20400 ;; Auto vars:     Size  Location     Type
 20401 ;;		None
 20402 ;; Return value:  Size  Location     Type
 20403 ;;                  1    wreg      void 
 20404 ;; Registers used:
 20405 ;;		None
 20406 ;; Tracked objects:
 20407 ;;		On entry : 0/0
 20408 ;;		On exit  : 0/0
 20409 ;;		Unchanged: 0/0
 20410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20415 ;;Total ram usage:        0 bytes
 20416 ;; Hardware stack levels used:    1
 20417 ;; This function calls:
 20418 ;;		Nothing
 20419 ;; This function is called by:
 20420 ;;		_TMR0_Initialize
 20421 ;;		_TMR0_ISR
 20422 ;; This function uses a non-reentrant model
 20423 ;;
 20424                           
 20425                           	psect	text107
 20426  0145F0                     __ptext107:
 20427                           	opt stack 0
 20428  0145F0                     _TMR0_DefaultInterruptHandler:
 20429                           	opt stack 15
 20430                           
 20431                           ;incstack = 0
 20432  0145F0  0012               	return		;funcret
 20433  0145F2                     __end_of_TMR0_DefaultInterruptHandler:
 20434                           	opt stack 0
 20435                           tosu	equ	0xFFF
 20436                           tosh	equ	0xFFE
 20437                           tosl	equ	0xFFD
 20438                           pclatu	equ	0xFFB
 20439                           pclath	equ	0xFFA
 20440                           tblptru	equ	0xFF8
 20441                           tblptrh	equ	0xFF7
 20442                           tblptrl	equ	0xFF6
 20443                           tablat	equ	0xFF5
 20444                           prodh	equ	0xFF4
 20445                           prodl	equ	0xFF3
 20446                           intcon	equ	0xFF2
 20447                           indf0	equ	0xFEF
 20448                           postinc0	equ	0xFEE
 20449                           fsr0h	equ	0xFEA
 20450                           fsr0l	equ	0xFE9
 20451                           wreg	equ	0xFE8
 20452                           postinc1	equ	0xFE6
 20453                           postdec1	equ	0xFE5
 20454                           plusw1	equ	0xFE3
 20455                           fsr1h	equ	0xFE2
 20456                           fsr1l	equ	0xFE1
 20457                           indf2	equ	0xFDF
 20458                           postinc2	equ	0xFDE
 20459                           postdec2	equ	0xFDD
 20460                           plusw2	equ	0xFDB
 20461                           fsr2h	equ	0xFDA
 20462                           fsr2l	equ	0xFD9
 20463                           status	equ	0xFD8
 20464                           tosu	equ	0xFFF
 20465                           tosh	equ	0xFFE
 20466                           tosl	equ	0xFFD
 20467                           pclatu	equ	0xFFB
 20468                           pclath	equ	0xFFA
 20469                           tblptru	equ	0xFF8
 20470                           tblptrh	equ	0xFF7
 20471                           tblptrl	equ	0xFF6
 20472                           tablat	equ	0xFF5
 20473                           prodh	equ	0xFF4
 20474                           prodl	equ	0xFF3
 20475                           intcon	equ	0xFF2
 20476                           indf0	equ	0xFEF
 20477                           postinc0	equ	0xFEE
 20478                           fsr0h	equ	0xFEA
 20479                           fsr0l	equ	0xFE9
 20480                           wreg	equ	0xFE8
 20481                           postinc1	equ	0xFE6
 20482                           postdec1	equ	0xFE5
 20483                           plusw1	equ	0xFE3
 20484                           fsr1h	equ	0xFE2
 20485                           fsr1l	equ	0xFE1
 20486                           indf2	equ	0xFDF
 20487                           postinc2	equ	0xFDE
 20488                           postdec2	equ	0xFDD
 20489                           plusw2	equ	0xFDB
 20490                           fsr2h	equ	0xFDA
 20491                           fsr2l	equ	0xFD9
 20492                           status	equ	0xFD8
 20493                           
 20494                           	psect	text108
 20495  000000                     __ptext108:
 20496                           	opt stack 0
 20497                           tosu	equ	0xFFF
 20498                           tosh	equ	0xFFE
 20499                           tosl	equ	0xFFD
 20500                           pclatu	equ	0xFFB
 20501                           pclath	equ	0xFFA
 20502                           tblptru	equ	0xFF8
 20503                           tblptrh	equ	0xFF7
 20504                           tblptrl	equ	0xFF6
 20505                           tablat	equ	0xFF5
 20506                           prodh	equ	0xFF4
 20507                           prodl	equ	0xFF3
 20508                           intcon	equ	0xFF2
 20509                           indf0	equ	0xFEF
 20510                           postinc0	equ	0xFEE
 20511                           fsr0h	equ	0xFEA
 20512                           fsr0l	equ	0xFE9
 20513                           wreg	equ	0xFE8
 20514                           postinc1	equ	0xFE6
 20515                           postdec1	equ	0xFE5
 20516                           plusw1	equ	0xFE3
 20517                           fsr1h	equ	0xFE2
 20518                           fsr1l	equ	0xFE1
 20519                           indf2	equ	0xFDF
 20520                           postinc2	equ	0xFDE
 20521                           postdec2	equ	0xFDD
 20522                           plusw2	equ	0xFDB
 20523                           fsr2h	equ	0xFDA
 20524                           fsr2l	equ	0xFD9
 20525                           status	equ	0xFD8
 20526                           
 20527                           	psect	rparam
 20528  0000                     tosu	equ	0xFFF
 20529                           tosh	equ	0xFFE
 20530                           tosl	equ	0xFFD
 20531                           pclatu	equ	0xFFB
 20532                           pclath	equ	0xFFA
 20533                           tblptru	equ	0xFF8
 20534                           tblptrh	equ	0xFF7
 20535                           tblptrl	equ	0xFF6
 20536                           tablat	equ	0xFF5
 20537                           prodh	equ	0xFF4
 20538                           prodl	equ	0xFF3
 20539                           intcon	equ	0xFF2
 20540                           indf0	equ	0xFEF
 20541                           postinc0	equ	0xFEE
 20542                           fsr0h	equ	0xFEA
 20543                           fsr0l	equ	0xFE9
 20544                           wreg	equ	0xFE8
 20545                           postinc1	equ	0xFE6
 20546                           postdec1	equ	0xFE5
 20547                           plusw1	equ	0xFE3
 20548                           fsr1h	equ	0xFE2
 20549                           fsr1l	equ	0xFE1
 20550                           indf2	equ	0xFDF
 20551                           postinc2	equ	0xFDE
 20552                           postdec2	equ	0xFDD
 20553                           plusw2	equ	0xFDB
 20554                           fsr2h	equ	0xFDA
 20555                           fsr2l	equ	0xFD9
 20556                           status	equ	0xFD8
 20557                           
 20558                           	psect	temp
 20559  00004D                     btemp:
 20560                           	opt stack 0
 20561  00004D                     	ds	1
 20562  0000                     int$flags	set	btemp
 20563  0000                     wtemp6	set	btemp+1
 20564                           tosu	equ	0xFFF
 20565                           tosh	equ	0xFFE
 20566                           tosl	equ	0xFFD
 20567                           pclatu	equ	0xFFB
 20568                           pclath	equ	0xFFA
 20569                           tblptru	equ	0xFF8
 20570                           tblptrh	equ	0xFF7
 20571                           tblptrl	equ	0xFF6
 20572                           tablat	equ	0xFF5
 20573                           prodh	equ	0xFF4
 20574                           prodl	equ	0xFF3
 20575                           intcon	equ	0xFF2
 20576                           indf0	equ	0xFEF
 20577                           postinc0	equ	0xFEE
 20578                           fsr0h	equ	0xFEA
 20579                           fsr0l	equ	0xFE9
 20580                           wreg	equ	0xFE8
 20581                           postinc1	equ	0xFE6
 20582                           postdec1	equ	0xFE5
 20583                           plusw1	equ	0xFE3
 20584                           fsr1h	equ	0xFE2
 20585                           fsr1l	equ	0xFE1
 20586                           indf2	equ	0xFDF
 20587                           postinc2	equ	0xFDE
 20588                           postdec2	equ	0xFDD
 20589                           plusw2	equ	0xFDB
 20590                           fsr2h	equ	0xFDA
 20591                           fsr2l	equ	0xFD9
 20592                           status	equ	0xFD8


Data Sizes:
    Strings     161
    Constant    127
    Data        98
    BSS         568
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160    160     160
    BANK1           256    255     255
    BANK2           256     22     249
    BANK3           256      0     200
    BANK4           256      0     232
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    dnsCache.dnsName	PTR const unsigned char  size(2) Largest target is 0

    ?_udp_table_nextEntry.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), DNS_Handler(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> DHCP_Handler@chaddr(BANK1[16]), dhcpName(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> DHCP_Handler@chaddr(BANK1[16]), dhcpName(CODE[13]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 255
		 -> DNS_Handler@dnsR(BANK1[255]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 0

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK2[15]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_6(CODE[10]), STR_5(CODE[29]), STR_1(CODE[58]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK2[15]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    memcpy@s1	PTR const void  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    memcmp@s2	PTR const void  size(2) Largest target is 6
		 -> broadcastMAC(CODE[6]), hostMacAddress(BANK2[6]), 

    memcmp@s1	PTR const void  size(2) Largest target is 16
		 -> DHCP_Handler@chaddr(BANK1[16]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(COMRAM[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK0[2]), STR_8(CODE[7]), DNS_Lookup@str(COMRAM[80]), 
		 -> makeIpv4AddresstoStr@ip_str(BANK2[15]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_7(CODE[26]), STR_6(CODE[10]), STR_5(CODE[29]), STR_4(CODE[12]), 
		 -> STR_1(CODE[58]), 

    S3328__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S3328__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK2[15]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK2[15]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(COMRAM[5]), 

    DNS_Lookup@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@dnsPtr.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@dnsPtr	PTR struct . size(2) Largest target is 128
		 -> dnsCache(BANK4[128]), 

    DNS_Handler@entryPointer	PTR struct . size(2) Largest target is 128
		 -> dnsCache(BANK4[128]), 

    DNS_Query@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    S3169$dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Query@oldestEntry.dnsName	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 128
		 -> dnsCache(BANK4[128]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), DNS_Handler(), 

    UDP_Receive@hptr	PTR struct . size(2) Largest target is 10
		 -> UDP_CallBackTable(CODE[10]), NULL(NULL[0]), 

    sp__udp_table_nextEntry.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), DNS_Handler(), 

    sp__udp_table_nextEntry	PTR struct . size(2) Largest target is 10
		 -> UDP_CallBackTable(CODE[10]), NULL(NULL[0]), 

    udp_table_nextEntry@i	PTR struct . size(2) Largest target is 10
		 -> UDP_CallBackTable(CODE[10]), NULL(NULL[0]), 

    udp_table_nextEntry@j.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), DNS_Handler(), 

    udp_table_nextEntry@j	PTR struct . size(2) Largest target is 10
		 -> UDP_CallBackTable(CODE[10]), 

    sp__udp_table_getIterator	PTR struct . size(2) Largest target is 10
		 -> UDP_CallBackTable(CODE[10]), 

    S2710$callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), DNS_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), DNS_Handler(), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> Network_Manage@now(BANK2[4]), arpTimer(BANK2[4]), NULL(NULL[0]), 

    sp__makeIpv4AddresstoStr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK2[15]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK4[6]), NULL(NULL[0]), broadcastMAC(CODE[6]), arpMap(BANK4[104]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(2) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ETH_RemovePacket@pPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket	PTR struct . size(2) Largest target is 3935
		 -> RAM(DATA[3935]), NULL(NULL[0]), 

    txData.nextPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    txData.nextPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    txData.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    txData.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_PacketListReset@ptr	PTR unsigned char  size(2) Largest target is 240
		 -> txData(BANK3[200]), 

    ETH_GetMAC@mac	PTR unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    ETH_Shift_Tx_Packets@pElem.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem	PTR struct . size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_Insert@data	PTR unsigned char  size(2) Largest target is 2
		 -> UDP_Send@cksm(BANK0[2]), UDP_Send@udpLength(BANK0[2]), ICMP_PortUnreachable@cksm(COMRAM[2]), ICMP_EchoReply@cksm(BANK0[2]), 
		 -> IPV4_Send@cksm(BANK0[2]), IPV4_Send@totalLength(BANK0[2]), 

    pTail.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    pTail.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK4[6]), NULL(NULL[0]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(BANK0[28]), arpMap(BANK4[104]), 

    ETH_WriteStart@ethPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    S1081$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    pHead.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    S1081$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    pHead.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    pHead	PTR struct . size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket	PTR struct . size(2) Largest target is 3935
		 -> RAM(DATA[3935]), NULL(NULL[0]), 

    ETH_WriteBlock@buffer	PTR const void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), hostMacAddress(BANK2[6]), 

    ETH_WriteBlock@p	PTR const unsigned char  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), hostMacAddress(BANK2[6]), 

    ETH_WriteString@string	PTR const unsigned char  size(2) Largest target is 13
		 -> dhcpName(CODE[13]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 28
		 -> DHCP_Handler@chaddr(BANK1[16]), udpHeader(BANK2[8]), ICMP_Receive@icmpHdr(BANK0[4]), Network_Read@header(BANK2[14]), 
		 -> ipv4Header(BANK2[20]), ARPV4_Packet@header(BANK0[28]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> DHCP_Handler@chaddr(BANK1[16]), udpHeader(BANK2[8]), ICMP_Receive@icmpHdr(BANK0[4]), Network_Read@header(BANK2[14]), 
		 -> ipv4Header(BANK2[20]), ARPV4_Packet@header(BANK0[28]), 

    pTail	PTR struct . size(2) Largest target is 240
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_Init@mac	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), 

    sp__MAC_getAddress	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK4[6]), NULL(NULL[0]), arpMap(BANK4[104]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK4[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK4[104]), 

    sp__memcpy	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK4[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK4[104]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _timersInit->_time
    _rtcc_init->_TMR1_SetInterruptHandler
    _Network_WaitForLink->_ETH_CheckLinkUp
    _IPV4_Init->_ipdb_init
    _ETH_Init->_printf
    _printf->__doprnt
    __doprnt->___llmod
    ___llmod->___lldiv
    _PHY_Write->_PHY_WaitForBusy
    _ARPV4_Init->_ETH_GetMAC
    _UDP_Receive->_ICMP_PortUnreachable
    _udp_table_nextEntry->_udp_table_getIterator
    _ICMP_PortUnreachable->_IPV4_Send
    _ETH_SetReadPtr->_IPV4_GetStartPosition
    _sendDHCPDECLINE->_sendRequest
    _IPV4_SaveStartPosition->_ETH_GetReadPtr
    _ICMP_EchoReply->_IPV4_Send
    _ETH_Copy->___wmul
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_WriteStart
    _ETH_EventHandler->_ETH_Shift_Tx_Packets
    _ETH_CheckLinkUp->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy
    _DHCP_Manage->_sendDHCPDISCOVER
    _sendDHCPREQUEST->_sendRequest
    _sendDHCPDISCOVER->_sendRequest
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _ARPV4_Request->_ETH_WriteStart
    _ETH_WriteStart->_ETH_Shift_Tx_Packets
    _ETH_Shift_Tx_Packets->___wmul
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum
    _ETH_Send->_ETH_SendQueued
    _DHCP_WriteZeros->_ETH_Write8

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Network_Manage
    _Network_Init->_ETH_Init
    _ETH_Init->_printf
    _printf->__doprnt
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_UDP_Receive
    _UDP_Receive->_DNS_Handler
    _ICMP_PortUnreachable->_IPv4_Start
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _sendRequest->_UDP_Start
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _UDP_Receive->_DNS_Handler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Network_Manage
    _Network_Manage->_Network_Read

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  207906
                     _Network_Manage
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    8603
                     _ADC_Initialize
                   _ECCP1_Initialize
               _INTERRUPT_Initialize
                       _Network_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3      98
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Network_Init                                         0     0      0    8331
                         _ARPV4_Init
                          _DHCP_init
                           _ETH_Init
                          _IPV4_Init
                _Network_WaitForLink
                          _rtcc_init
                         _timersInit
 ---------------------------------------------------------------------------------
 (3) _timersInit                                           0     0      0     701
                               _time
 ---------------------------------------------------------------------------------
 (3) _rtcc_init                                            0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3     174
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (3) _IPV4_Init                                            0     0      0     136
                          _ipdb_init
 ---------------------------------------------------------------------------------
 (4) _ipdb_init                                            2     2      0     136
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ETH_Init                                            14    14      0    6761
                                             27 BANK0     14    14      0
                    _ETH_CheckLinkUp
                          _ETH_Flush
                _ETH_PacketListReset
                     _MAC_getAddress
                          _PHY_Write
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              21     7     14    5346
                                             50 COMRAM     7     7      0
                                             13 BANK0     14     0     14
                            __doprnt
 ---------------------------------------------------------------------------------
 (5) __doprnt                                             27    21      6    4850
                                             40 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                   Absolute function *
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     412
                                             31 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PHY_Write                                            4     2      2     626
                                             20 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _MAC_getAddress                                       2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_PacketListReset                                  4     4      0     102
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _DHCP_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Init                                           1     1      0     281
                                             20 COMRAM     1     1      0
                         _ETH_GetMAC
 ---------------------------------------------------------------------------------
 (4) _ETH_GetMAC                                           2     0      2     213
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  199303
                                            159 BANK0      1     1      0
                                             18 BANK2      4     4      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                               _time
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  136205
                                              0 BANK2     18    18      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  127399
                                            126 BANK0     33    33      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
             _IPV4_SaveStartPosition
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2   95280
                                            117 BANK0      9     7      2
                       _DHCP_Handler *
                        _DNS_Handler *
                      _ETH_ReadBlock
               _ICMP_PortUnreachable
             _IPV4_GetDatagramLength
              _udp_table_getIterator
                _udp_table_nextEntry
 ---------------------------------------------------------------------------------
 (5) _udp_table_nextEntry                                  4     2      2     189
                                             20 COMRAM     4     2      2
              _udp_table_getIterator
 ---------------------------------------------------------------------------------
 (6) _udp_table_getIterator                                2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _IPV4_GetDatagramLength                               2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ICMP_PortUnreachable                                13     3     10   26788
                                             56 COMRAM     3     3      0
                                             72 BANK0     10     0     10
                           _ETH_Copy
                         _ETH_Insert
                     _ETH_SetReadPtr
              _ETH_TxComputeChecksum
                        _ETH_Write16
                        _ETH_Write32
              _IPV4_GetStartPosition
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _IPV4_GetStartPosition                                2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ETH_SetReadPtr                                       2     0      2     121
                                             20 COMRAM     2     0      2
              _IPV4_GetStartPosition (ARG)
 ---------------------------------------------------------------------------------
 (5) _DNS_Handler                                        292   290      2    2476
                                             80 BANK0     37    35      2
                                              0 BANK1    255   255      0
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                             _strcmp
                               _time
 ---------------------------------------------------------------------------------
 (6) _strcmp                                               6     2      4     493
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        91    89      2   64127
                                             80 BANK0      6     4      2
                                              0 BANK1     85    85      0
                           _ETH_Dump
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
                    _sendDHCPDECLINE
                    _sendDHCPREQUEST
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _sendDHCPDECLINE                                      0     0      0   29566
                        _sendRequest
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               9     3      6     701
                                             18 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      37
                                             18 COMRAM     1     1      0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     148
                                             18 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _IPV4_SaveStartPosition                               0     0      0       0
                     _ETH_GetReadPtr
 ---------------------------------------------------------------------------------
 (5) _ETH_GetReadPtr                                       2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           29    27      2     516
                                             18 COMRAM    29    27      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        11     9      2   27725
                                             89 BANK0     11     9      2
                           _ETH_Dump
                         _ETH_Read16
                      _ETH_ReadBlock
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      17    15      2   25259
                                             72 BANK0     17    15      2
                           _ETH_Copy
                         _ETH_Insert
                         _ETH_Read16
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2      74
                                             18 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             6     4      2    1414
                                             24 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             2     0      2     667
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    1475
                                             36 COMRAM    14    10      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _ETH_Flush                                            4     4      0       0
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0    7228
                                              0 BANK0     70    70      0
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        8     4      4    1399
                                             18 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     0     0      0    2230
                    _ETH_CheckLinkUp
                   _ETH_RemovePacket
                     _ETH_SendQueued
               _ETH_Shift_Tx_Packets
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (3) _ETH_RemovePacket                                     6     4      2     375
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _ETH_CheckLinkUp                                      4     4      0     278
                                             29 COMRAM     4     4      0
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (5) _PHY_Read                                             9     5      4     244
                                             20 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (6) _PHY_WaitForBusy                                      2     2      0     170
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          5     5      0   59932
                                             80 BANK0      5     5      0
                   _sendDHCPDISCOVER
                    _sendDHCPREQUEST
                               _time
 ---------------------------------------------------------------------------------
 (4) _time                                                 9     5      4     701
                                             18 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (6) _sendDHCPREQUEST                                      0     0      0   29566
                        _sendRequest
 ---------------------------------------------------------------------------------
 (3) _sendDHCPDISCOVER                                     1     1      0   29600
                                             58 COMRAM     1     1      0
                               _lfsr
                        _sendRequest
 ---------------------------------------------------------------------------------
 (7) _sendRequest                                          2     2      0   29566
                                             56 COMRAM     2     2      0
                    _DHCP_WriteZeros
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                    _ETH_WriteString
                           _UDP_Send
                          _UDP_Start
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               6     4      2     400
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _UDP_Start                                            9     1      8   15710
                                             53 COMRAM     1     1      0
                                             72 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _IPv4_Start                                          20    15      5   12967
                                             48 COMRAM     5     0      5
                                             57 BANK0     15    15      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (7) _ETH_Write32                                          4     0      4    1564
                                             18 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_Write16                                          2     0      2    2042
                                             18 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ARPV4_Request                                       61    57      4    5198
                                             44 COMRAM     4     0      4
                                              0 BANK0     57    57      0
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     748
                                             18 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteStart                                       8     4      4    2756
                                             36 COMRAM     8     4      4
                     _ETH_EdataWrite
                      _ETH_NewPacket
                 _ETH_ResetByteCount
               _ETH_Shift_Tx_Packets
                              _putch
 ---------------------------------------------------------------------------------
 (8) _ETH_Shift_Tx_Packets                                12    12      0    1333
                                             24 COMRAM    12    12      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ETH_NewPacket                                        5     3      2     502
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _ETH_WriteBlock                                       6     2      4     826
                                             18 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ARPV4_Lookup                                        11     7      4     257
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (8) _UDP_Send                                             9     9      0    8546
                                             15 BANK0      9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (6) _IPV4_Send                                           11     9      2    4338
                                             54 COMRAM     2     0      2
                                              6 BANK0      9     9      0
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (7) _ETH_TxComputeChecksum                               24    18      6    2080
                                             36 COMRAM    18    12      6
                                              0 BANK0      6     6      0
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (8) _ETH_ComputeChecksum                                 18    14      4     774
                                             18 COMRAM    18    14      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (9) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ETH_Send                                             6     6      0      34
                                             22 COMRAM     6     6      0
                     _ETH_SendQueued
                              _putch
 ---------------------------------------------------------------------------------
 (9) _ETH_SendQueued                                       4     4      0       0
                                             18 COMRAM     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_Insert                                          10     4      6    1750
                                             18 COMRAM    10     4      6
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (9) _ETH_GetByteCount                                     4     2      2       0
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ETH_WriteString                                      4     2      2     168
                                             18 COMRAM     4     2      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (8) _DHCP_WriteZeros                                      2     0      2     152
                                             19 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (7) _ETH_Write8                                           1     1      0      31
                                             18 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (8) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _lfsr                                                 1     1      0      34
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                         18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (16) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _rtcc_handler *
 ---------------------------------------------------------------------------------
 (17) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _sendDHCPDISCOVER
         _lfsr
         _sendRequest
           _DHCP_WriteZeros
             _ETH_Write8
               _ETH_EdataWrite
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteBlock
             _ETH_EdataWrite
           _ETH_WriteString
             _ETH_EdataWrite
           _UDP_Send
             _ETH_GetByteCount
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
           _UDP_Start
             _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _strlen
       _sendDHCPREQUEST
         _sendRequest
           _DHCP_WriteZeros
             _ETH_Write8
               _ETH_EdataWrite
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteBlock
             _ETH_EdataWrite
           _ETH_WriteString
             _ETH_EdataWrite
           _UDP_Send
             _ETH_GetByteCount
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
           _UDP_Start
             _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _strlen
       _time
     _ETH_EventHandler
       _ETH_CheckLinkUp
         _PHY_Read
           _PHY_WaitForBusy
       _ETH_RemovePacket
       _ETH_SendQueued
         _putch
       _ETH_Shift_Tx_Packets
         ___wmul
       _PHY_Read
         _PHY_WaitForBusy
     _Network_Read
       _ARPV4_Packet
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_Send
           _ETH_SendQueued
             _putch
           _putch
         _ETH_WriteBlock
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_NewPacket
           _ETH_ResetByteCount
           _ETH_Shift_Tx_Packets
             ___wmul
           _putch
         _memcpy
       _ETH_Flush
       _ETH_NextPacketUpdate
         _ETH_EdataRead
       _ETH_ReadBlock
         _ETH_EdataRead
       _IPV4_Packet
         _ETH_Dump
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_RxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ICMP_Receive
           _ETH_Dump
           _ETH_Read16
             _ETH_EdataRead
           _ETH_ReadBlock
             _ETH_EdataRead
           _ICMP_EchoReply
             _ETH_Copy
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Read16
               _ETH_EdataRead
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
         _IPV4_PseudoHeaderChecksum
         _IPV4_SaveStartPosition
           _ETH_GetReadPtr
         _UDP_Receive
           _DHCP_Handler *
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _ETH_ReadBlock
               _ETH_EdataRead
             _memcmp
             _sendDHCPDECLINE
               _sendRequest
                 _DHCP_WriteZeros
                   _ETH_Write8
                     _ETH_EdataWrite
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteString
                   _ETH_EdataWrite
                 _UDP_Send
                   _ETH_GetByteCount
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                   _IPV4_Send
                     _ETH_Insert
                       _ETH_EdataWrite
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_TxComputeChecksum
                       _ETH_ComputeChecksum
                         _ETH_EdataRead
                 _UDP_Start
                   _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _IPv4_Start
                     _ARPV4_Lookup
                     _ARPV4_Request
                       _ETH_Send
                         _ETH_SendQueued
                           _putch
                         _putch
                       _ETH_WriteBlock
                         _ETH_EdataWrite
                       _ETH_WriteStart
                         _ETH_EdataWrite
                         _ETH_NewPacket
                         _ETH_ResetByteCount
                         _ETH_Shift_Tx_Packets
                           ___wmul
                         _putch
                       _memcpy
                     _ETH_Write16
                       _ETH_EdataWrite
                     _ETH_Write32
                       _ETH_EdataWrite
                     _ETH_Write8
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                 _strlen
             _sendDHCPREQUEST
               _sendRequest
                 _DHCP_WriteZeros
                   _ETH_Write8
                     _ETH_EdataWrite
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteString
                   _ETH_EdataWrite
                 _UDP_Send
                   _ETH_GetByteCount
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                   _IPV4_Send
                     _ETH_Insert
                       _ETH_EdataWrite
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_TxComputeChecksum
                       _ETH_ComputeChecksum
                         _ETH_EdataRead
                 _UDP_Start
                   _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _IPv4_Start
                     _ARPV4_Lookup
                     _ARPV4_Request
                       _ETH_Send
                         _ETH_SendQueued
                           _putch
                         _putch
                       _ETH_WriteBlock
                         _ETH_EdataWrite
                       _ETH_WriteStart
                         _ETH_EdataWrite
                         _ETH_NewPacket
                         _ETH_ResetByteCount
                         _ETH_Shift_Tx_Packets
                           ___wmul
                         _putch
                       _memcpy
                     _ETH_Write16
                       _ETH_EdataWrite
                     _ETH_Write32
                       _ETH_EdataWrite
                     _ETH_Write8
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                 _strlen
             _strlen
           _DNS_Handler *
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _strcmp
             _time
           _ETH_ReadBlock *
             _ETH_EdataRead
           _ICMP_PortUnreachable *
             _ETH_Copy
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_SetReadPtr
               _IPV4_GetStartPosition (ARG)
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _IPV4_GetStartPosition
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _IPV4_GetDatagramLength *
           _udp_table_getIterator *
           _udp_table_nextEntry *
             _udp_table_getIterator
     _time
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECCP1_Initialize
     _INTERRUPT_Initialize
     _Network_Init
       _ARPV4_Init
         _ETH_GetMAC
       _DHCP_init
       _ETH_Init
         _ETH_CheckLinkUp
           _PHY_Read
             _PHY_WaitForBusy
         _ETH_Flush
         _ETH_PacketListReset
         _MAC_getAddress
         _PHY_Write
           _PHY_WaitForBusy
         _printf
           __doprnt
             Absolute function(Fake) *
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
       _IPV4_Init
         _ipdb_init
       _Network_WaitForLink
         _ETH_CheckLinkUp
           _PHY_Read
             _PHY_WaitForBusy
       _rtcc_init
         _TMR1_SetInterruptHandler
       _timersInit
         _time
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      E8      13       90.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     16      F9       9       97.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     494      29        0.0%
DATA                 0      0     494       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Nov 07 17:50:23 2017

                  _IPV4_GetDatagramLength 44EE                      __end_of_DHCP_Handler 166C  
               ETH_Shift_Tx_Packets@pElem 0023                       ___wmul@multiplicand 0015  
                        ??_ICMP_EchoReply 00AA                 ETH_Shift_Tx_Packets@timer 001F  
             ??_IPV4_PseudoHeaderChecksum 0015                           _timer0ReloadVal 0047  
                          ??_ICMP_Receive 00BB                              __CFG_CP0$OFF 000000  
                   ETH_WriteString@length 0015                                       l320 0CC0  
                                     l312 419E                                       l321 114A  
                                     l322 0FA0                                       l332 423A  
                                     l325 0E46                                       l501 1C12  
                                     l342 3CE8                                       l511 3C8E  
                                     l344 3D18                                       l600 4104  
                                     l601 40F2                                       l338 191A  
                                     l506 4324                                       l611 20B8  
                                     l531 41D4                                       l515 3CC2  
                                     l701 2D46                                       l533 41E2  
                                     l702 2D1A                                       l614 20D8  
                                     l534 41E0                                       l616 20EE  
                                     l536 41EC                                       l552 4374  
                                     l633 34F4                                       l705 2DD0  
                                     l617 2104                                       l545 3940  
                                     l553 4376                                       WREG 000FE8  
                                     l626 346A                                       l706 2D7E  
                                     l618 211C                                       l546 392E  
                                     l628 3474                                       l548 3948  
                                     l572 3E14                                       l492 1BE8  
                                     l645 3BA6                                       l573 3DEE  
                                     l557 40A2                                       l646 3B94  
                                     l638 386A                                       l662 3A36  
                                     l654 420C                                       l558 40A4  
                                     l567 3D72                                       l911 373C  
                                     l592 3F44                                       l568 3D74  
                                     l593 3F28                                       l497 1BFC  
                                     l690 2956                                       l674 3428  
                                     l666 33B2                                       l498 1BF4  
                                     l683 28EC                                       l659 3A2A  
                                     l675 3426                                       l667 33B0  
                                     l780 26A4                                       l684 28EA  
                  __size_of_ETH_EdataRead 000A                                       l773 26CA  
                                     l845 326A                                       l765 3F0E  
                                     l909 3714                                       l774 24FE  
                                     l694 2A38                                       l846 3240  
                                     l766 3EFA                                       l775 26C8  
                                     l695 2A20                                       l791 31B0  
                                     l679 344C                                       l696 298C  
                                     l880 1FE8                                       l872 0B8E  
                                     l864 0B06                                       l768 3F1C  
                                     l689 2958                                       l881 1F96  
                                     l873 0BF0                                       l778 2674  
                                     l882 1FA6                                       l866 0BFE  
                                     l867 0B28                                       _EIE 000EFB  
                                     l885 1FF2                                       l789 316C  
                                     l886 20A0                                       l991 35F4  
                                     l993 3632                                       l985 3B4E  
                                     l994 35E8                                       l995 35EE  
                                     _GIE 007F97                               ?_ETH_GetMAC 0013  
                                     _PR2 000FCB                         DNS_Handler@dnsPtr 00CE  
                      ICMP_EchoReply@cksm 00B4                         DNS_Handler@answer 00CA  
                 IPv4_Start@targetAddress 00A1                           _timer1ReloadVal 0049  
         ETH_Shift_Tx_Packets@shiftOffset 001D                               ?_ETH_Read32 0013  
                             ?_ETH_Read16 0013                         DNS_Handler@length 00B0  
                   ETH_WriteString@string 0013                              UDP_Start@ret 0036  
                         _TMR2_Initialize 44DE                              ?_DNS_Handler 00B0  
                                     prod 000FF3                        __size_of_DHCP_init 0002  
                   ??_ETH_ComputeChecksum 0017                                       tosl 000FFD  
                                     wreg 000FE8                               ?_ETH_Insert 0013  
                            __CFG_IESO$ON 000000                      udp_table_nextEntry@i 0015  
                    udp_table_nextEntry@j 0017                               ?_ETH_Write8 0001  
                                    EDATA 000F61                           ?_Network_Manage 0001  
                            __CFG_WDT$OFF 000000                                      l1101 2BAE  
                                    l1106 2F30                                      l1052 44AC  
                                    l1028 3DCA                                      l1221 2FF6  
                                    l1230 283A                                      l1303 24E4  
                                    l1304 2352                                      l1320 2C28  
                                    l1217 3C76                                      l1305 2366  
                                    l1321 2C32                                      l1225 289A  
                                    l1306 2474                                      l1330 2CC2  
                                    l1322 2C44                                      l1090 30B4  
                                    l1091 3060                                      l1316 2CC6  
                                    l1324 2C50                                      l1340 117E  
                                    l1228 284E                                      l1317 2BFC  
                                    l1501 1BB8                                      l1413 161E  
                                    l1229 27B6                                      l1422 4486  
                                    l2222 3E3E                                      l1318 2CE2  
                                    l1326 2C84                                      l2214 3F72  
                                    l1334 118C                                      l1423 4480  
                                    l2063 3FE0                                      l2223 3E3A  
                                    l1319 2C12                                      l1095 3072  
                                    l2215 3F6A                                      l1415 1624  
                                    l1335 1154                                      l2064 3FC0  
                                    l1328 2CBC                                      l2056 3580  
                                    l1360 151A                                      l1176 4188  
                                    l1600 050A                                      l2057 34FC  
                                    l1361 13A6                                      l1337 11A8  
                                    l2058 3578                                      l1370 1462  
                                    l1362 13BC                                      l1338 1160  
                                    l1602 061A                                      l1363 140E  
                                    l1339 1170                                      l1603 058A  
                                    l1372 146E                                      l1364 13C4  
                                    l1604 0656                                      l1540 0002  
                                    l1365 140A                                      l1357 1366  
                                    l1605 0680                                      l1541 0074  
                                    l1525 4516                                      l1358 14EA  
                                    l1374 14B6                                      l1550 0270  
                                    l1542 0048                                      l1391 155C  
                                    l1375 14D2                                      l1367 1416  
                                    l1359 1390                                      l1376 14DE  
                                    l1368 1466                                      l1560 0140  
                                    l1544 00F4                                      l1369 141C  
                                    l1561 0150                                      l1553 0100  
                                    l1545 00DA                                      l1482 19DA  
                                    l1386 1654                                      l1562 014A  
                                    l1546 009E                                      l1491 1AAA  
                                    l1387 152C                                      l1571 026A  
                                    l1492 1A84                                      l1484 19BC  
                                    l1388 154E                                      l1580 0452  
                                    l1572 034A                                      l1556 02BC  
                                    l1493 1A80                                      l1485 19A2  
                                    l1581 03CE                                      l1573 02FE  
                                    l1557 0104                                      l1574 0330  
                                    l1566 01A4                                      l1591 0484  
                                    l1567 0208                                      l1559 0108  
                                    l1488 1AB2                                      l1568 0258  
                                    l1489 1A2C                                      l1593 04A4  
                                    l1577 0380                                      l1498 1B08  
                                    l1586 0468                                      l1578 03B4  
                                    l1499 1B20                                      l1595 04EC  
                                    l1587 0410                                      l1599 0602  
                                    l1953 4440                                      l1980 378E  
                                    l1990 3A4C                                      l1983 37CE  
                                    l1984 37DC                                      l1993 3A80  
                                    l1994 3A8E                                      l6250 3734  
                                    l1979 379A                                      l1989 3A58  
                                    l6238 370C                                      l6372 4196  
                                    l7504 2D1A                                      l8320 1A80  
                                    l9042 4232                                      l8306 19DA  
                                    l8234 14CA                                      l7452 3FC0  
                                    l8334 1AC6                                      l8520 0602  
                                    l8418 01A4                                      l7740 4480  
                                    l7900 33FC                                      l8348 1B18  
                                    l7568 3CE0                                      l8528 0672  
                                    l8464 03D2                                      l7578 3D18  
                                    l8730 0C4E                                      l9450 30EA  
                                    l7828 41CC                                      l9452 30F4  
                                    l9444 3618                                      l7598 3B94  
                                    l8662 30B4                                      l7950 34FC  
                                    l9446 3628                                      l8478 0414  
                                    l8760 0E18                                      l8744 0CC0  
                                    l9448 362E                                      l8696 2832  
                                    l8952 0A42                                      l8698 283A  
                                    l8938 0950                                      l8956 0A9A  
                                    l8948 09E4                                      STR_1 FF5E  
                                    STR_2 FFFD                                      STR_4 FFE0  
                                    STR_5 FF98                                      STR_6 FFEC  
                                    STR_7 FFB5                                      STR_8 FFF6  
                                    STR_9 FFCF                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _LATF 000F8E                                      _LATG 000F8F  
                                    u5100 3758                             __CFG_DEBUG$ON 000000  
                                    u5240 41B6                                      u5080 3730  
                                    u7020 33C4                                      u7110 352A  
                                    u7200 379E                                      u6250 28FE  
                                    u7130 3552                                      u7060 343A  
                                    u8100 0692                                      _MIRD 000EB8  
                                    u7117 3520                                      i2l22 005E  
                                    u6510 4114                                      u7230 3A5C  
                                    u8110 06B0                                      i2l24 006A  
                                    u6600 2DEE                                      u6280 296A  
                                    u6440 2184                                      u7080 3DA8  
                                    u7160 3FA2                                      u7137 3548  
                                    u7401 1232                                      u6450 21B6  
                                    u7410 1268                                      u8210 2708  
                                    u6460 21E8                                      u6620 1782  
                                    u8140 3A20                                      u7420 1278  
                                    u6605 2DE4                                      u6470 221A  
                                    u6630 1872                                      u6710 1E86  
                                    u7430 12A0                                      u7350 11C2  
                                    u6447 217A                                      u7095 3DAA  
                                    u6560 34EA                                      u6480 224C  
                                    u6720 1E96                                      u8400 0E52  
                                    u7440 12B0                                      u6457 21AC  
                                    u6625 1778                                      u8321 0CB2  
                                    u7361 11CC                                      u6490 227E  
                                    u6730 1EA8                                      u8330 0CCC  
                                    u8170 328E                                      u7370 11F6  
                                    u8250 2858                                      u6467 21DE  
                                    u6635 1868                                      u8411 0E70  
                                    u6740 1ED4                                      u8420 0F24  
                                    u7620 193C                                      u6477 2210  
                                    u7541 152A                                      u7381 1204  
                                    u6590 2D9C                                      u6750 1EFE  
                                    u6910 3E26                                      u8350 0D88  
                                    u7470 1324                                      u8078 04D6  
                                    u6487 2242                                      u8175 3284  
                                    u7631 1966                                      u6680 3D24  
                                    u6760 1F28                                      u7720 1B14  
                                    u8248 2818                                      u8600 08E4  
                                    u6497 2274                                      u8425 0F1A  
                                    u8361 0DFC                                      u7561 153E  
                                    u7481 1358                                      u8249 2832  
                                    u6850 3E60                                      u6930 41DA  
                                    u8098 0640                                      u6595 2D92  
                                    u8451 0FD0                                      u8355 0D7E  
                                    u8460 10D8                                      u8700 0A9A  
                                    u8620 096A                                      u7820 017E  
                                    _MIWR 000EB6                                      u8605 08DA  
                                    u8710 0AAC                                      u8470 1BEE  
                                    u8711 0AAA                                      u8640 0988  
                                    u6857 3E56                                      u8465 10CE  
                                    u6970 4088                                      u7690 1ABA  
                                    u7827 0174                                      u6980 3D4C  
                                    u8660 09E4                                      u8590 07D0  
                       ??_PHY_WaitForBusy 0013                                      u8680 0A42  
                                    u7880 01FE                                      u7890 0242  
                                    u8595 07C6                                      u7788 0032  
                                    u7878 01CA                                      u7887 01F4  
                                    u7879 0200                                      u7897 0238  
                                    _TMR1 000FCE                                      _TMR2 000FCC  
                 __size_of_ETH_EdataWrite 0006                             __CFG_FCMEN$ON 000000  
                            __CFG_STVR$ON 000000                        DNS_Handler@nameLen 00C9  
                                    _main 450E                                      _lfsr 4498  
                                    _time 3D86                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004D  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00B6                             __CFG_FOSC2$ON 000000  
                       ?_ETH_RemovePacket 0013                           ETH_EdataWrite@d 0001  
                            ?_IPV4_Packet 0001                makeIpv4AddresstoStr@ip_str 025C  
              ??_TMR1_SetInterruptHandler 0016                      _ETH_Shift_Tx_Packets 28A2  
                      __size_of_ETH_Read8 0026                        __size_of_ETH_Flush 006E  
                  __size_of_ETH_ReadBlock 0054                              ___param_bank 000000  
                      __size_of_IPV4_Init 0006                        __size_of_IPV4_Send 009E  
                 __end_of_ETH_WriteString 3F68                    __size_of_ETH_NewPacket 01F2  
                      ??_ETH_RemovePacket 0015                              ?_ETH_Write32 0013  
                            ?_ETH_Write16 0013                   __size_of_ETH_GetReadPtr 000A  
                        ARPV4_Request@ret 007C                   __end_of_TMR0_Initialize 415A  
                     __size_of_ARPV4_Init 0032                  __size_of_ETH_CheckLinkUp 002A  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000A  
                __size_of_sendDHCPDECLINE 0008                          _ETH_GetByteCount 43C4  
           __end_of_OSCILLATOR_Initialize 4578                          __end_of_ETH_Copy 3452  
                        __end_of_ETH_Dump 4226                          __end_of_ETH_Init 1E6A  
                       _nextPacketPointer 003E                          __end_of_ETH_Send 34FA  
                                   ?_main 0001                                     ?_lfsr 0001  
                                   _ECON1 000FD2                                     _ECON2 000EFE  
                                   ?_time 0013       IPV4_PseudoHeaderChecksum@payloadLen 0013  
                         __end_of___lldiv 37EE                                     _T0CON 000FD5  
                                   _T1CON 000FCD                           __end_of___llmod 3AA0  
                                   _T2CON 000FCA                                     _MAIPG 000EA6  
                                   _ERDPT 000F7A                                     _MICMD 000EB2  
                                   _ERXND 000EEA                                     _ETXND 000EE6  
                                   _ERXST 000EE8                                     _EWRPT 000EE2  
                                   _ETXST 000EE4                                     _TMR0H 000FD7  
                                   _TMR1H 000FCF                                     _TMR0L 000FD6  
                                   _TMR1L 000FCE                           __end_of__doprnt 06BA  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _TRISF 000F97  
                                   _TRISG 000F98                                     _RXRST 007E96  
          __size_of_ETH_TxComputeChecksum 00D8         __size_of_TMR0_SetInterruptHandler 000E  
           __end_of_ETH_TxComputeChecksum 33A4                 ?_TMR0_SetInterruptHandler 0013  
                    __size_of_DHCP_Manage 015A                          __end_of_TMR0_ISR 4282  
                        __end_of_TMR1_ISR 42AE                  __size_of_sendDHCPREQUEST 0008  
                                   _pHead 0042                               ?_IPv4_Start 0031  
                        __end_of_PHY_Read 395A                                     _pTail 0040  
                         __end_of_dpowers FF07                          __end_of_UDP_Send 3024  
                         __end_of_isdigit 4448                                     _putch 45EC  
                  DHCP_Handler@acceptNACK 0122                        __size_of_PHY_Write 0028  
                 __end_of_TMR1_Initialize 4302                        __size_of_UDP_Start 005C  
               __size_of_ETH_EventHandler 005A                 _IPV4_PseudoHeaderChecksum 31EC  
                                   pclath 000FFA                                     tablat 000FF5  
                                   time@t 0013                       _udp_table_nextEntry 415A  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   status 000FD8                                     wtemp6 004E  
                           _ETH_EdataRead 45B4                    ?_IPV4_GetStartPosition 0013  
              ETH_RxComputeChecksum@rxptr 002D                  __size_of_SPI1_Initialize 000E  
                     __size_of_ETH_GetMAC 005E                            __CFG_ETHLED$ON 000000  
                   ?_ETH_Shift_Tx_Packets 0001             ETH_TxComputeChecksum@position 0025  
                       __end_of_DHCP_init 45EC                       __size_of_ETH_Read16 003C  
                     __size_of_ETH_Read32 0058                      __end_of_ARPV4_Packet 1152  
                         __initialization 395A                       __size_of_ETH_Insert 0060  
                    __end_of_ARPV4_Lookup 3D2E                              __end_of_main 451C  
                            __end_of_lfsr 44B2                      __end_of_ARPV4_Update 4254  
                            __end_of_time 3DDC                              _xorSequences FF27  
                     __size_of_ETH_Write8 000A                               ETH_Copy@len 0019  
                 __end_of_TMR2_Initialize 44EE               ?_INTERRUPT_InterruptManager 0001  
                    ?_udp_table_nextEntry 0015                               ETH_Init@mac 0087  
                         _DHCP_WriteZeros 447E                  ETH_TxComputeChecksum@len 0027  
                                  ??_main 003C                                    ??_lfsr 0013  
                                  ??_time 0017                             __activetblptr 000003  
                          _MAC_getAddress 4578              __end_of_ICMP_PortUnreachable 2F32  
                            ?_sendRequest 0001                   ETH_WriteStart@ethPacket 002B  
                  ETH_PacketListReset@ptr 0013                             _ETH_ReadBlock 3DDC  
                       __end_of_ETH_Read8 437A                             _ETH_NewPacket 24E8  
                       __end_of_ETH_Flush 3A3A                         ETH_Send@packetEnd 001B  
                       __end_of_IPV4_Init 45DE                         __end_of_IPV4_Send 36D6  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                           ipdb_init@x_2008 0014  
                        ___llmod@dividend 0020                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR1L 000FBE                            ETH_Dump@length 0013  
                                  _EDMAND 000EF2                                    _EDMAST 000EF0  
                                  ?_putch 0001                                    _MAADR1 000E84  
                                  _MAADR2 000E85                                    _MAADR3 000E82  
                                  _MAADR4 000E83                                    _MAADR5 000E80  
                                  _MAADR6 000E81                   __size_of_ETH_SetReadPtr 000A  
                                  _MACON1 000EA0                                    _MACON3 000EA2  
                                  _MACON4 000EA3                      DNS_Handler@ipAddress 00BD  
                                  _MAMXFL 000EAA                   __size_of_ETH_SendQueued 0080  
                                  _INTCON 000FF2                                    _OSCCON 000FD3  
                          ?_ETH_EdataRead 0001                      __end_of_ICMP_Receive 310A  
                            DNS_Handler@i 00D0                              DNS_Handler@v 00C5  
                            DNS_Handler@x 00D1                          __end_of_dhcpName FF48  
                   __size_of_DHCP_Handler 051A              __size_of_ETH_PacketListReset 004A  
                          __CFG_XINST$OFF 000000                  __end_of_sendDHCPDISCOVER 38E6  
    __end_of_TMR1_DefaultInterruptHandler 45F0     __size_of_TMR1_DefaultInterruptHandler 0002  
            _TMR1_DefaultInterruptHandler 45EE                            ETH_ReadBlock@p 0019  
                      _ETH_ResetByteCount 45AA                     ICMP_EchoReply@ipv4Hdr 00A8  
                        ?_ETH_WriteString 0013                                    ___wmul 437A  
                               ??___lldiv 001B                       __size_of_IPv4_Start 023C  
                                  _arpMap 0480                                 ??___llmod 0028  
                       __end_of_PHY_Write 4354                     ??_udp_table_nextEntry 0017  
                                  _memcmp 34FA                                 ??__doprnt 002F  
                                  _memcpy 3FAE                          ?_TMR0_Initialize 0001  
                       __end_of_UDP_Start 3C7A                                    clear_0 3998  
                                  clear_1 39A4                                    clear_2 39B0  
                                  clear_3 39BC                    __end_of_MAC_getAddress 4582  
                                  _txData 0300                    DHCP_Handler@count_3164 0120  
                            __doprnt@flag 0065                      __end_of_broadcastMAC FF5E  
                                  _printf 40AE                       ?_ETH_ResetByteCount 0001  
                            __doprnt@prec 006A                                    _strcmp 3F68  
                                  _strlen 3E30                    ETH_ComputeChecksum@len 0013  
       ICMP_PortUnreachable@destIPAddress 00AC                           UDP_Start@destIP 00A8  
                            __pdataCOMRAM 004B                                 ??_isdigit 0013  
                          ?_ETH_ReadBlock 0013                              ?_UDP_Receive 00D5  
                            __mediumconst FEDE                         ??_ETH_CheckLinkUp 001E  
                          ?_ETH_NewPacket 0013                       ETH_SetReadPtr@rdptr 0015  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                         ??_sendDHCPDECLINE 003B  
                                  putch@c 0001              __size_of_Network_WaitForLink 000C  
                    __size_of_DNS_Handler 02A8  TMR0_SetInterruptHandler@InterruptHandler 0013  
TMR1_SetInterruptHandler@InterruptHandler 0013                              ??_ARPV4_Init 0015  
                       ?_ECCP1_Initialize 0001                     DHCP_WriteZeros@length 0014  
                            _DHCP_Handler 1152                             DHCP_Handler@a 0110  
                         __CFG_FOSC$ECPLL 000000             __size_of_INTERRUPT_Initialize 0004  
                   __end_of_TMR1_CallBack 440C                            _ETH_EdataWrite 45DE  
                 ?_IPV4_SaveStartPosition 0001                          ?_TMR1_Initialize 0001  
                          ETH_Insert@data 0013                         _SYSTEM_Initialize 42AE  
                      ??_ECCP1_Initialize 0013                                __accesstop 0060  
                 __end_of__initialization 39C2                      ??_ETH_ResetByteCount 0013  
                       ??_sendDHCPREQUEST 003B                        ?_SYSTEM_Initialize 0001  
                               ?_ETH_Copy 0019                    ??_ETH_Shift_Tx_Packets 0019  
                               ?_ETH_Dump 0013                                 ?_ETH_Init 0001  
                               ?_ETH_Send 0001                             ___rparam_used 000001  
                 ?_IPV4_GetDatagramLength 0013                             ?_Network_Init 0001  
                           ?_Network_Read 0001                    IPV4_Send@payloadLength 0037  
                   IPv4_Start@destAddress 0031                   __end_of_DHCP_WriteZeros 4498  
              DHCP_Manage@managementTimer 022A                            __pcstackCOMRAM 0001  
                            __pidataBANK2 3AA0                       ??_SYSTEM_Initialize 003A  
                   _ETH_RxComputeChecksum 3E84                   __size_of_ETH_WriteBlock 003A  
                          _ETH_GetReadPtr 45A0                                 ?_TMR0_ISR 0001  
                    __size_of_IPV4_Packet 0556                                 ?_TMR1_ISR 0001  
                   __end_of_ARPV4_Request 191E             ?_TMR1_DefaultInterruptHandler 0001  
                               ?_PHY_Read 0015                         ??_SPI1_Initialize 0013  
                 __size_of_ETH_WriteStart 0222                                 ?_UDP_Send 0001  
                           __end_of_putch 45EE                          ?_TMR2_Initialize 0001  
                   _udp_table_getIterator 4582                        PHY_WaitForBusy@ret 0013  
                    __size_of_ETH_Write16 000E                      __size_of_ETH_Write32 001A  
                         ?_MAC_getAddress 0013                        __end_of_ARPV4_Init 41C4  
            __end_of_ETH_NextPacketUpdate 4072                              ??_ETH_GetMAC 0015  
                         ETH_Copy@tmp_len 001D                           _PHY_WaitForBusy 41C4  
                            ETH_Read8@ret 0013                              ??_ETH_Read32 0017  
                            ??_ETH_Read16 0015                          ??_Network_Manage 00FF  
                            ??_ETH_Insert 0019                              ??_ETH_Write8 0013  
                DHCP_Handler@optionLength 0124                                __doprnt@ap 002D  
                              __doprnt@cp 0063                    __end_of_ETH_EdataWrite 45E4  
                              __doprnt@pb 0029                      ETH_ComputeChecksum@v 0023  
          __end_of_IPV4_SaveStartPosition 4554                 __end_of_SYSTEM_Initialize 42D8  
                                 ??_putch 0013                           ??_ETH_EdataRead 0013  
                       _ipv4StartPosition 0244                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                        _ETH_EventHandler 3C7A                        __size_of_ipdb_init 0096  
                __end_of_ETH_GetByteCount 43E8                     __size_of_ARPV4_Packet 0542  
          __end_of_IPV4_GetDatagramLength 44FE                                __pnvCOMRAM 0047  
                   __size_of_ARPV4_Lookup 005A                                ??_ETH_Copy 001B  
                              ??_ETH_Dump 0015                                ??_ETH_Init 007B  
                          ??_Network_Init 003A                            ??_Network_Read 02DD  
                              ??_ETH_Send 0017                     __size_of_ARPV4_Update 002E  
                              _macAddress FF52                      _ICMP_PortUnreachable 2E30  
                      __end_of_ETH_GetMAC 3C1E                    __end_of_ETH_GetReadPtr 45AA  
                      __end_of_ETH_Read16 40AE                        __end_of_ETH_Read32 3D86  
        __end_of_TMR0_SetInterruptHandler 452A                        __end_of_ETH_Insert 3BC0  
                            IPV4_Send@ret 006A                                   ?___wmul 0013  
                              ??_TMR0_ISR 0001                                ??_TMR1_ISR 0001  
                   DNS_Handler@dataLength 00CC                                ??_PHY_Read 0019  
                                 _CCP1CON 000FBD                        __end_of_ETH_Write8 45C8  
                              ??_UDP_Send 006F                                   _ECCP1AS 000FB6  
                                 ?_memcmp 0013                                   ?_memcpy 0013  
             __end_of_ETH_ComputeChecksum 2E30                                   _EDMADST 000EF4  
                                 ?_printf 006D                                   _EFLOCON 000E97  
                                 _MABBIPG 000EA4                   __size_of_ADC_Initialize 0016  
                                 ?_strcmp 0013                                   ?_strlen 0013  
                         ??_ETH_ReadBlock 0017                           ??_ETH_NewPacket 0015  
                                 _EIEbits 000EFB                 __size_of_ETH_RemovePacket 00E2  
                                 _ERXFCON 000ED8                        __size_of_rtcc_init 0024  
                                 _EIRbits 000F60                                   _ERXRDPT 000EEC  
                              _ipv4Header 0248                              _ARPV4_Packet 0C10  
                                 _OSCTUNE 000F9B                              ??_IPv4_Start 0099  
                                 _SSP1ADD 000FC8                      __size_of_sendRequest 0220  
                                 _SSP1BUF 000FC9                              _ARPV4_Lookup 3CD4  
                         ?_ETH_EdataWrite 0001                     __size_of_ICMP_Receive 00E6  
                            _ARPV4_Update 4226                            _ETH_SetReadPtr 4596  
                 ??_IPV4_GetStartPosition 0015                            _ETH_SendQueued 37EE  
                  ARPV4_Lookup@ip_address 0013                        UDP_Receive@udpcksm 00D5  
                   ?_ICMP_PortUnreachable 00A8                                   __Hparam 0000  
                                 __Lparam 0000                           ?_ETH_GetReadPtr 0013  
                  ?_ETH_RxComputeChecksum 0025                                _errataTemp 000E7E  
                        ?_DHCP_WriteZeros 0014                                 _ECON1bits 000FD2  
                      ETH_NewPacket@index 0017                   __end_of_PHY_WaitForBusy 41F6  
                             time@gie_val 0017                                   ___lldiv 376C  
                         __size_of___wmul 0026                                   ___llmod 3A3A  
                  ?_udp_table_getIterator 0013                                 _DHCP_init 45EA  
                      __end_of_IPv4_Start 20A6                                   __doprnt 0000  
                                 __pcinit 395A                           __size_of_memcmp 00A0  
                         __size_of_memcpy 0044                                   __ramtop 1000  
                       __end_of_ipdb_init 376C                                   __ptext0 450E  
                                 __ptext1 42AE                                   __ptext2 44DE  
                                 __ptext3 42D8                                   __ptext4 4122  
                                 __ptext5 451C                                   __ptext6 452A  
                                 __ptext7 3FF2                                   __ptext8 456E  
                                 __ptext9 440C                                   _ethData 0224  
                         __size_of_printf 003A                             ??_DHCP_Manage 00B0  
                               _T0CONbits 000FD5            ??_TMR1_DefaultInterruptHandler 0001  
                         __size_of_strcmp 0046                              _ICMP_Receive 3024  
                         __size_of_strlen 0054                         __end_of_hexpowers FF27  
                               _T1CONbits 000FCD                                   _dpowers FEDF  
                   _OSCILLATOR_Initialize 456E                                 _T2CONbits 000FCA  
                              _lfsr_value 004B                                   _isdigit 442A  
       __size_of_TMR1_SetInterruptHandler 000E                       _ETH_PacketListReset 3ED4  
                ??_PIN_MANAGER_Initialize 0013                 ?_TMR1_SetInterruptHandler 0013  
                  __end_of_ETH_SetReadPtr 45A0                    __end_of_ETH_SendQueued 386E  
                  ICMP_EchoReply@sequence 00B0                      __size_of_UDP_Receive 01C8  
                   _ETH_TxComputeChecksum 32CC                   __size_of_ICMP_EchoReply 0176  
              __size_of_SYSTEM_Initialize 002A                                 _MICMDbits 000EB2  
                    end_of_initialization 39C2                                 _ESTATbits 000EFD  
                 ETH_ComputeChecksum@cksm 001F                   ETH_ComputeChecksum@seed 0015  
                               _ETH_Read8 4354                                 _ETH_Flush 39CC  
                                 memcmp@n 0017                                   memcpy@d 001A  
                                 memcpy@n 0017                                   memcpy@s 001C  
                               _IPV4_Init 45D8                                   lfsr@lsb 0013  
                               _IPV4_Send 3638                        IPv4_Start@protocol 0035  
                            _broadcastMAC FF58                          UDP_Start@dstPort 00AE  
                     ETH_ReadBlock@buffer 0013                      _ETH_NextPacketUpdate 4034  
                DHCP_Handler@acceptOffers 0121                       ETH_ReadBlock@length 0015  
                         ___lldiv@divisor 0017                            ETH_Write8@data 0013  
                    ?_ETH_PacketListReset 0001                             ?_rtcc_handler 0001  
                       __end_of_rtcc_init 43C4                               PHY_Read@reg 0019  
                         ___lldiv@counter 001F                               PHY_Read@ret 001A  
                        UDP_Start@srcPort 00AC                              _Control_Byte 0046  
                                 printf@f 006D                         ?_sendDHCPDISCOVER 0001  
                          _ETH_WriteBlock 40E8                       _Network_WaitForLink 4562  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                           _ETH_CheckLinkUp 4302  
                          _ETH_WriteStart 20A6                                ?_DHCP_init 0001  
                   ARPV4_Packet@mergeFlag 0082                           _sendDHCPDECLINE 45C8  
                      ??_sendDHCPDISCOVER 003B                                   strcmp@r 0018  
                                 strlen@s 0013                  ETH_RxComputeChecksum@len 0025  
                _TMR0_SetInterruptHandler 451C                                _timersInit 4448  
                               _PHY_Write 432C                                 _UDP_Start 3C1E  
                    __end_of_Network_Init 442A                      __end_of_Network_Read 3638  
                         _sendDHCPREQUEST 45D0                               UDP_Send@ret 0073  
                         ?_ETH_SetReadPtr 0015                      ?_Network_WaitForLink 0001  
                         ?_ETH_SendQueued 0001                         IPV4_Packet@hdrLen 00FA  
                         DNS_Handler@dnsR 0100                       __end_of_DHCP_Manage 2D0C  
                           ETH_GetMAC@mac 0013                           DNS_Handler@lock 00D2  
                       IPV4_Packet@length 00FB                           DNS_Handler@type 00C7  
                       ICMP_EchoReply@ret 00B8                                ?_ETH_Read8 0001  
                              ?_ETH_Flush 0001                                ?_IPV4_Init 0001  
                              ?_IPV4_Send 0037                    ??_ICMP_PortUnreachable 0039  
                   ?_ETH_NextPacketUpdate 0001                           _SPI1_Initialize 452A  
                          DHCP_Manage@now 00B1                    PHY_WaitForBusy@timeout 0014  
                          ??_rtcc_handler 0001                     ??_ETH_PacketListReset 0013  
                 DHCP_Handler@messageType 0118                    __end_of_ETH_WriteBlock 4122  
             __end_of_udp_table_nextEntry 4192                         __size_of_ETH_Copy 00AE  
                       __size_of_ETH_Dump 0030                         __size_of_ETH_Init 02A4  
                  __end_of_ETH_WriteStart 22C8                         __size_of_ETH_Send 00A8  
                        ??_MAC_getAddress 0015                 __size_of_ECCP1_Initialize 0016  
            __end_of_INTERRUPT_Initialize 45E8                          ?_PHY_WaitForBusy 0001  
                          __end_of___wmul 43A0                  __end_of_ETH_EventHandler 3CD4  
                ARPV4_Request@destAddress 002D                             __pidataCOMRAM 45E8  
                       _UDP_CallBackTable FF48                         __size_of_TMR0_ISR 002E  
                       __size_of_TMR1_ISR 002C                            _ADC_Initialize 44C8  
                          __end_of_memcmp 359A                         __size_of_PHY_Read 0074  
                          __end_of_memcpy 3FF2                    ?_OSCILLATOR_Initialize 0001  
                   DHCP_Handler@acceptACK 0123                         __size_of_UDP_Send 00F2  
                __size_of_ETH_WriteString 004A                                ?_PHY_Write 0015  
                          __end_of_printf 40E8                          _ETH_RemovePacket 310A  
               ETH_RxComputeChecksum@cksm 002F                                ?_UDP_Start 00A8  
                          __end_of_strcmp 3FAE                             ??_DNS_Handler 00B2  
                     ICMP_Receive@icmpHdr 00C0                 ETH_RxComputeChecksum@seed 0027  
                          __end_of_strlen 3E84                       ICMP_Receive@ipv4Hdr 00B9  
                     start_initialization 395A                   ETH_RemovePacket@pPacket 0017  
                   ??_Network_WaitForLink 0022                  __size_of_TMR0_Initialize 0038  
                  ?_ETH_TxComputeChecksum 0025           __size_of_PIN_MANAGER_Initialize 0042  
                              ipdb_init@x 0013                             ETH_Copy@timer 001B  
                      sendRequest@started 0039                             ETH_Read32@ret 0017  
                           ETH_Read16@ret 0015                    ETH_WriteStart@dest_mac 0025  
             __size_of_ETH_ResetByteCount 000A                         ?_ETH_GetByteCount 0013  
                         ___llmod@divisor 0024                           ___llmod@counter 0028  
                 __end_of_ETH_CheckLinkUp 432C                   __end_of_sendDHCPDECLINE 45D0  
                      ??_ETH_GetByteCount 0015                             ??_IPV4_Packet 00DE  
                         ?_ETH_WriteBlock 0013             __size_of_ETH_Shift_Tx_Packets 019A  
                __size_of_TMR1_Initialize 002A                           ?_ETH_WriteStart 0025  
                           ??_ETH_Write32 0017                             ??_ETH_Write16 0015  
                 ETH_Shift_Tx_Packets@len 0021                                  ??___wmul 0017  
               __end_of_UDP_CallBackTable FF52                       __end_of_dnsXidValue FF3B  
                             __doprnt@idx 0060                               __doprnt@len 0061  
                  __end_of_ADC_Initialize 44DE                               __doprnt@val 0066  
                             ??_DHCP_init 0013                       ARPV4_Request@header 007D  
                             __pdataBANK2 027D                                  ??_memcmp 0019  
                                ??_memcpy 0019                   __end_of_sendDHCPREQUEST 45D8  
                  __size_of_TMR1_CallBack 0024                                  ??_printf 0033  
                             ?_timersInit 0001                                  ??_strcmp 0017  
                                ??_strlen 0015                     DHCP_Handler@localData 0125  
                        ??_ETH_EdataWrite 0013                               _DHCP_Manage 2BB2  
                    IPv4_Start@macAddress 00A5                             ETH_Insert@len 0015  
                         IPV4_Packet@cksm 00FD                     TMR1_ISR@CountCallBack 0246  
                             __pbssCOMRAM 003C                  ICMP_EchoReply@identifier 00AE  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 02DD                  __size_of_TMR2_Initialize 0010  
                          _hostMacAddress 0273                            _ICMP_EchoReply 2A3C  
                 __end_of_SPI1_Initialize 4538                              _isdigit$3586 0014  
                ICMP_PortUnreachable@cksm 0039                       __end_of_DNS_Handler 1BC6  
                  __size_of_ARPV4_Request 02B2                               ??_ETH_Read8 0013  
                             ??_ETH_Flush 0013                    ??_ETH_NextPacketUpdate 0013  
                             ??_IPV4_Init 0015                               ??_IPV4_Send 0066  
          __size_of_IPV4_GetStartPosition 000A                     __end_of_ETH_EdataRead 45BE  
                        ??_ETH_GetReadPtr 0015             __end_of_IPV4_GetStartPosition 4596  
                               __doprnt@c 006C                                 __doprnt@f 002B  
                ETH_PacketListReset@index 0015                   ??_ETH_RxComputeChecksum 0029  
                   _TMR0_InterruptHandler 02F3                                 __pnvBANK2 02F3  
                               _dhcpState 003C           ICMP_EchoReply@ipv4PayloadLength 00B6  
                  _PIN_MANAGER_Initialize 3FF2                   ??_udp_table_getIterator 0015  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 4546  
                           __pmediumconst FEDE                                 __ptext100 4226  
                               __ptext102 4282                                 __ptext103 43E8  
                               __ptext104 45EE                                 __ptext105 44FE  
                               __ptext106 4254                                 __ptext107 45F0  
                               __ptext108 0000                                  ?___lldiv 0013  
                                ?___llmod 0020                             IPV4_Send@cksm 006B  
                         ?_ADC_Initialize 0001                                  ?__doprnt 0029  
                   __size_of_Network_Init 001E                     __size_of_Network_Read 009E  
                      ARPV4_Packet@header 008A                       __end_of_IPV4_Packet 0C10  
                      ARPV4_Packet@arpPtr 0084                          _ip_database_info 0200  
            ??_INTERRUPT_InterruptManager 0001                        ARPV4_Packet@length 0080  
            IPV4_PseudoHeaderChecksum@len 001F              IPV4_PseudoHeaderChecksum@tmp 0024  
                ARPV4_Update@entryPointer 0013                       __end_of_ETH_Write16 4562  
                     __end_of_ETH_Write32 447E                               ??_PHY_Write 0017  
                                _ECCP1DEL 000F79                             ??_sendRequest 0039  
                             ??_UDP_Start 0036                                  ?_isdigit 0001  
                   __end_of_ETH_ReadBlock 3E30                      __end_of_rtcc_handler 450E  
                  __end_of_ICMP_EchoReply 2BB2                                 _ipdb_init 36D6  
                         sendRequest@type 003A                     __end_of_ETH_NewPacket 26DA  
                             _device_time 022E              __size_of_ETH_ComputeChecksum 0124  
            ETH_RemovePacket@packetHandle 0013                                 _hexpowers FF07  
                       ??_ETH_WriteString 0015                            __size_of_putch 0002  
                    _INTERRUPT_Initialize 45E4                             _TMR1_CallBack 43E8  
                       ??_TMR0_Initialize 0016                   __size_of_Network_Manage 0060  
                          ___wmul@product 0017                      ETH_WriteBlock@buffer 0013  
                               _udpHeader 026B                      ETH_WriteBlock@length 0015  
                                _MIREGADR 000EB4                                  _ETH_Copy 33A4  
                                _ETH_Dump 41F6                                  _ETH_Init 1BC6  
                     __size_of_timersInit 001C                                  _ETH_Send 3452  
                                _PIE1bits 000F9D                               _dnsXidValue FF39  
                        ?_ETH_CheckLinkUp 0001                          ?_sendDHCPDECLINE 0001  
                            _Network_Init 440C                              _Network_Read 359A  
     __size_of_INTERRUPT_InterruptManager 00AE                ??_TMR0_SetInterruptHandler 0016  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u575_48 43F8                                  i2u594_48 426E  
                                i2u595_40 429E                                  _RCONbits 000FD0  
                             _ethListSize 0045                          __CFG_WDTPS$32768 000000  
                        _ECCP1_Initialize 44B2                                  _SSP1CON1 000FC6  
                           ARPV4_Packet@x 0086                                  _TMR0_ISR 4254  
                                _TMR1_ISR 4282                                 _rtcc_init 43A0  
                                _SSP1STAT 000FC7                                  _PHY_Read 38E6  
      __size_of_IPV4_PseudoHeaderChecksum 00E0                             _ARPV4_Request 166C  
                                _UDP_Send 2F32          ICMP_PortUnreachable@srcIPAddress 00A8  
                         _portUnreachable 0242                ?_IPV4_PseudoHeaderChecksum 0013  
                        ?_sendDHCPREQUEST 0001                         ??_TMR1_Initialize 0016  
                        ??_ETH_SetReadPtr 0017                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0013  
                          DNS_Handler@ttl 00C1                  __size_of_DHCP_WriteZeros 001A  
                           ARPV4_Lookup@x 001D                          ??_ETH_SendQueued 0013  
              ICMP_PortUnreachable@length 00B0                  ??_IPV4_SaveStartPosition 0015  
                           ??_UDP_Receive 00D7                                ?_ipdb_init 0001  
                         ?_ICMP_EchoReply 00A8                               _DNS_Handler 191E  
                           ARPV4_Update@x 0015                 __size_of_sendDHCPDISCOVER 0078  
                      __end_of_macAddress FF58                   DNS_Handler@entryPointer 00D3  
                ??_IPV4_GetDatagramLength 0015                          ?_SPI1_Initialize 0001  
              IPV4_PseudoHeaderChecksum@v 001D                             ?_DHCP_Handler 00B0  
                               copy_data0 396E                     ?_INTERRUPT_Initialize 0001  
                     __end_of_sendRequest 24E8                            ?_TMR1_CallBack 0001  
                       ??_TMR2_Initialize 0013                  __end_of_ETH_RemovePacket 31EC  
                           IPv4_Start@ret 00A7                                  __Hrparam 0000  
              ETH_TxComputeChecksum@rxptr 0060                               _IPV4_Packet 06BA  
                               memcpy@tmp 0019                                  __Lrparam 0000  
               DHCP_Handler@declineOffers 011E                        DHCP_Handler@a_3165 0114  
                             _ETH_Write32 4464                               _ETH_Write16 4554  
                        ETH_ReadBlock@len 0017                            ?_ARPV4_Request 002D  
                 ??_OSCILLATOR_Initialize 0013                                ?_rtcc_init 0001  
                        __size_of___lldiv 0082                          __size_of___llmod 0066  
                       ?_ETH_EventHandler 0001                          __size_of__doprnt 06BA  
       __end_of_IPV4_PseudoHeaderChecksum 32CC                  _TMR1_SetInterruptHandler 4538  
                      DHCP_Handler@chaddr 0100                  ARPV4_Packet@entryPointer 0088  
                 ICMP_PortUnreachable@ret 003B                   ??_ETH_TxComputeChecksum 002B  
                   _TMR1_InterruptHandler 02F6                        ??_ETH_EventHandler 0025  
                      DHCP_Handler@length 00B0                                  _dhcpData 02AD  
                                _dhcpName FF3B                        DHCP_Handler@siaddr 011A  
                        __size_of_isdigit 001E                        DHCP_Handler@option 0119  
                                _dnsCache 0400                                  __ptext10 4448  
                                __ptext11 43A0                                  __ptext20 3A3A  
                                __ptext12 4538                                  _destPort 0240  
                                __ptext21 376C                                  __ptext13 4562  
                                __ptext30 44C8                                  __ptext22 432C  
                                __ptext14 45D8                                  __ptext31 3B00  
                                __ptext23 4578                                  __ptext15 36D6  
                                __ptext40 4596                                  __ptext32 359A  
                                __ptext24 3ED4                                  __ptext16 1BC6  
                                _arpTimer 0279                                  __ptext41 1152  
                                __ptext33 06BA                                  __ptext25 45EA  
                                __ptext17 40AE                                  __ptext50 31EC  
                                __ptext42 191E                                  __ptext34 26DA  
                                __ptext26 4192                                  __ptext18 0000  
                                __ptext51 3024                                  __ptext43 3F68  
                                __ptext35 415A                                  __ptext27 3BC0  
                                __ptext19 442A                                  __ptext60 3DDC  
                                __ptext52 2A3C                                  __ptext44 45C8  
                                __ptext36 4582                                  __ptext28 45E4  
                                __ptext61 3C7A                                  __ptext53 4072  
                                __ptext45 34FA                                  __ptext37 44EE  
                                __ptext29 44B2                                  __ptext70 22C8  
                                __ptext62 310A                                  __ptext54 33A4  
                                __ptext46 4354                                  __ptext38 2E30  
                                __ptext71 3E30                                  __ptext63 4302  
                                __ptext55 41F6                                  __ptext47 3D2E  
                                __ptext39 458C                                  __ptext80 437A  
                                __ptext72 3C1E                                  __ptext64 38E6  
                                __ptext56 3E84                                  __ptext48 4546  
                                __ptext81 45AA                                  __ptext73 1E6A  
                                __ptext65 41C4                                  __ptext57 4034  
                                __ptext49 45A0                                  __ptext90 3452  
                                __ptext82 24E8                                  __ptext74 4464  
                                __ptext66 2BB2                                  __ptext58 39CC  
                                __ptext91 37EE                                  __ptext83 40E8  
                                __ptext75 4554                                  __ptext67 3D86  
                                __ptext59 0C10                                  __ptext92 45EC  
                                __ptext84 3CD4                                  __ptext76 166C  
                                __ptext68 45D0                                  __ptext93 3B60  
                                __ptext85 2F32                                  __ptext77 3FAE  
                                __ptext69 386E                                  __ptext94 43C4  
                                __ptext86 3638                                  __ptext78 20A6  
                                __ptext95 3F1E                                  __ptext87 32CC  
                                __ptext79 28A2                                  __ptext96 447E  
                                __ptext88 2D0C                                  __ptext97 45BE  
                                __ptext89 45B4                                  __ptext98 45DE  
                                __ptext99 4498                            ??_DHCP_Handler 00B2  
                       ARPV4_Packet@x_939 0087                              _SSP1CON1bits 000FC6  
                           _sequenceIndex 0044                                _ARPV4_Init 4192  
                            time@the_time 0018               __end_of_ETH_PacketListReset 3F1E  
                     __end_of_UDP_Receive 28A2                          ??_ETH_WriteBlock 0017  
                         ICMP_Receive@ret 00BF                         _remoteIpv4Address 0236  
                      ETH_WriteStart@type 0027                 ARPV4_Lookup@entry_pointer 001B  
                        ??_ETH_WriteStart 0029                             __size_of_main 000E  
                           __size_of_lfsr 001A                             __size_of_time 0056  
    __end_of_TMR0_DefaultInterruptHandler 45F2     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 45F0             __size_of_ICMP_PortUnreachable 0102  
                  DNS_Handler@authorityRR 00BB                         UDP_Send@udpLength 0076  
                        PHY_Write@GIESave 0018                                  int$flags 004D  
                    _rxPacketStatusVector 023A        __end_of_INTERRUPT_InterruptManager 00B6  
              _INTERRUPT_InterruptManager 0008                              _SSP1STATbits 000FC7  
                   __size_of_rtcc_handler 0010              __size_of_udp_table_nextEntry 0038  
               __size_of_ETH_GetByteCount 0024               __end_of_Network_WaitForLink 456E  
                            ??_timersInit 001C                                  _xor_mask 004C  
                            ?_DHCP_Manage 0001                                _ETH_GetMAC 3BC0  
                     Network_Manage@nowPv 0232           __size_of_IPV4_SaveStartPosition 000E  
                              _ETH_Read32 3D2E                                _ETH_Read16 4072  
            __end_of_ETH_Shift_Tx_Packets 2A3C                                _INTCONbits 000FF2  
                             _sendRequest 22C8                 ETH_TxComputeChecksum@cksm 0062  
                __size_of_PHY_WaitForBusy 0032                               ??_ipdb_init 0013  
               ETH_TxComputeChecksum@seed 0029                                  memcmp@s1 0013  
                                memcmp@s2 0015                                _ETH_Insert 3B60  
                                memcpy@d1 0013                                  memcpy@s1 0015  
                           ?_ARPV4_Packet 0001                           ETH_Write32@data 0013  
                         ETH_Write16@data 0013                             ?_ARPV4_Lookup 0013  
                                isdigit@c 0015                    ??_INTERRUPT_Initialize 0013  
                              _ETH_Write8 45BE                      __end_of_xorSequences FF39  
                         ??_TMR1_CallBack 0001                         ??_DHCP_WriteZeros 0016  
                           ?_ARPV4_Update 0001           __size_of_IPV4_GetDatagramLength 0010  
              __end_of_ETH_ResetByteCount 45B4             ICMP_EchoReply@icmp_cksm_start 00B2  
                                intlevel2 0000                         DHCP_Handler@count 011F  
                          _Network_Manage 3B00                                _MISTATbits 000E8A  
                        ___lldiv@dividend 0013                   ?_PIN_MANAGER_Initialize 0001  
                         UDP_Receive@hptr 00DC                        __end_of_timersInit 4464  
          __size_of_ETH_RxComputeChecksum 0050                          ??_ADC_Initialize 0013  
           __end_of_ETH_RxComputeChecksum 3ED4                              _rtcc_handler 44FE  
           ?_TMR0_DefaultInterruptHandler 0001                           ??_ARPV4_Request 0060  
                     _ETH_ComputeChecksum 2D0C                               ARPV4_Init@x 0015  
          __size_of_udp_table_getIterator 000A                                  printf@ap 0033  
           __end_of_udp_table_getIterator 458C                                  printf@pb 0035  
                             ??_rtcc_init 0016                          DHCP_Handler@F840 027D  
                    IPV4_Send@totalLength 006D                           _ETH_WriteString 3F1E  
                           ?_ICMP_Receive 00B9                      ETH_CheckLinkUp@value 001E  
                                strcmp@s1 0013                                  strcmp@s2 0015  
                 __size_of_MAC_getAddress 000A                           ETH_WriteBlock@p 0017  
                        ___lldiv@quotient 001B             IPV4_PseudoHeaderChecksum@cksm 0020  
                         ARPV4_Packet@ret 0083                           _TMR0_Initialize 4122  
                          UDP_Receive@ret 00DB                                  strlen@cp 0017  
                          ??_ARPV4_Packet 0060                               _UDP_Receive 26DA  
                   ETH_Init@phycon1_value 0085                            ??_ARPV4_Lookup 0017  
                    ?_ETH_ComputeChecksum 0013                          _sendDHCPDISCOVER 386E  
                          ??_ARPV4_Update 0013                                  strtok@sp 023E  
                              _IPv4_Start 1E6A                  __end_of_ECCP1_Initialize 44C8  
                ETH_Insert@current_tx_ptr 001B                         Network_Manage@now 02EF  
                  __end_of_Network_Manage 3B60                               ?_ARPV4_Init 0001  
          __end_of_PIN_MANAGER_Initialize 4034                        Network_Read@header 02E1  
           __size_of_ETH_NextPacketUpdate 003E                    _IPV4_SaveStartPosition 4546  
                           PHY_Write@data 0015                     _IPV4_GetStartPosition 458C  
                            UDP_Send@cksm 0074                           _TMR1_Initialize 42D8  
                            PHY_Write@reg 0017                          ETH_Insert@offset 0017  
