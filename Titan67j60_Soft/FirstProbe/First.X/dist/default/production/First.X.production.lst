

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Jan 09 14:21:49 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F67J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1,inline
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   154                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   155                           	dabs	1,0xE7E,2,_errataTemp
   156  0000                     
   157                           ; Version 1.44
   158                           ; Generated 14/09/2017 GMT
   159                           ; 
   160                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   161                           ; All rights reserved.
   162                           ; 
   163                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   164                           ; 
   165                           ; Redistribution and use in source and binary forms, with or without modification, are
   166                           ; permitted provided that the following conditions are met:
   167                           ; 
   168                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   169                           ;        conditions and the following disclaimer.
   170                           ; 
   171                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   172                           ;        of conditions and the following disclaimer in the documentation and/or other
   173                           ;        materials provided with the distribution.
   174                           ; 
   175                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   176                           ;        software without specific prior written permission.
   177                           ; 
   178                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   179                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   180                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   181                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   182                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   183                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   184                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   185                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   186                           ; 
   187                           ; 
   188                           ; Code-generator required, PIC18F67J60 Definitions
   189                           ; 
   190                           ; SFR Addresses
   191  0000                     
   192                           	psect	idataBANK1
   193  016F46                     __pidataBANK1:
   194                           	opt stack 0
   195                           
   196                           ;initializer for _lfsr_value
   197  016F46  40                 	db	64
   198                           
   199                           	psect	idataBANK2
   200  016948                     __pidataBANK2:
   201                           	opt stack 0
   202                           
   203                           ;initializer for _dhcpData
   204  016948  0000               	dw	0
   205  01694A  0000               	dw	0
   206  01694C  0000               	dw	0
   207  01694E  0000               	dw	0
   208  016950  0000               	dw	0
   209  016952  0000               	dw	0
   210  016954  0000               	dw	0
   211  016956  0000               	dw	0
   212  016958  0000               	dw	0
   213  01695A  0000               	dw	0
   214  01695C  0000               	dw	0
   215  01695E  0000               	dw	0
   216  016960  0000               	dw	0
   217  016962  0000               	dw	0
   218  016964  0000               	dw	0
   219  016966  0000               	dw	0
   220  016968  0000               	dw	0
   221  01696A  0000               	dw	0
   222  01696C  000A               	dw	10
   223  01696E  0000               	dw	0
   224  016970  0E10               	dw	3600
   225  016972  0000               	dw	0
   226  016974  0000               	dw	0
   227  016976  0000               	dw	0
   228                           
   229                           ;initializer for _tftp_last_address
   230  016978  0000               	dw	0
   231  01697A  0002               	dw	2
   232                           
   233                           ;initializer for _ntp
   234  01697C  A8                 	db	low STR_8
   235  01697D  FF                 	db	high STR_8
   236                           
   237                           ;initializer for _tcpMss
   238  01697E  0218               	dw	536
   239                           
   240                           ;initializer for _xor_mask
   241  016980  41                 	db	65
   242                           
   243                           	psect	idataBANK3
   244  0169F2                     __pidataBANK3:
   245                           	opt stack 0
   246                           
   247                           ;initializer for DHCP_Handler@F840
   248  0169F2  0000               	dw	0
   249  0169F4  0000               	dw	0
   250  0169F6  0000               	dw	0
   251  0169F8  0000               	dw	0
   252  0169FA  0000               	dw	0
   253  0169FC  0000               	dw	0
   254  0169FE  0000               	dw	0
   255  016A00  0000               	dw	0
   256  016A02  0000               	dw	0
   257  016A04  0000               	dw	0
   258  016A06  0000               	dw	0
   259  016A08  0000               	dw	0
   260  016A0A  0000               	dw	0
   261  016A0C  0000               	dw	0
   262  016A0E  0000               	dw	0
   263  016A10  0000               	dw	0
   264  016A12  0000               	dw	0
   265  016A14  0000               	dw	0
   266  016A16  0E10               	dw	3600
   267  016A18  0000               	dw	0
   268  016A1A  0E10               	dw	3600
   269  016A1C  0000               	dw	0
   270  016A1E  0000               	dw	0
   271  016A20  0000               	dw	0
   272                           
   273                           ;initializer for _tftp_modes
   274  016A22  E1                 	db	low STR_9
   275  016A23  FF                 	db	high STR_9
   276  016A24  F1                 	db	low STR_10
   277  016A25  FF                 	db	high STR_10
   278  016A26  F7                 	db	low STR_11
   279  016A27  FF                 	db	high STR_11
   280                           
   281                           	psect	mediumconst
   282  00FE7C                     __pmediumconst:
   283                           	opt stack 0
   284  00FE7C  00                 	db	0
   285  00FE7D                     _TFTP_callBackTable:
   286                           	opt stack 0
   287  00FE7D                     __end_of_TFTP_callBackTable:
   288                           	opt stack 0
   289  00FE7D                     _dpowers:
   290                           	opt stack 0
   291  00FE7D  0001               	dw	1
   292  00FE7F  0000               	dw	0
   293  00FE81  000A               	dw	10
   294  00FE83  0000               	dw	0
   295  00FE85  0064               	dw	100
   296  00FE87  0000               	dw	0
   297  00FE89  03E8               	dw	1000
   298  00FE8B  0000               	dw	0
   299  00FE8D  2710               	dw	10000
   300  00FE8F  0000               	dw	0
   301  00FE91  86A0               	dw	34464
   302  00FE93  0001               	dw	1
   303  00FE95  4240               	dw	16960
   304  00FE97  000F               	dw	15
   305  00FE99  9680               	dw	38528
   306  00FE9B  0098               	dw	152
   307  00FE9D  E100               	dw	57600
   308  00FE9F  05F5               	dw	1525
   309  00FEA1  CA00               	dw	51712
   310  00FEA3  3B9A               	dw	15258
   311  00FEA5                     __end_of_dpowers:
   312                           	opt stack 0
   313  00FEA5                     _hexpowers:
   314                           	opt stack 0
   315  00FEA5  0001               	dw	1
   316  00FEA7  0000               	dw	0
   317  00FEA9  0010               	dw	16
   318  00FEAB  0000               	dw	0
   319  00FEAD  0100               	dw	256
   320  00FEAF  0000               	dw	0
   321  00FEB1  1000               	dw	4096
   322  00FEB3  0000               	dw	0
   323  00FEB5  0000               	dw	0
   324  00FEB7  0001               	dw	1
   325  00FEB9  0000               	dw	0
   326  00FEBB  0010               	dw	16
   327  00FEBD  0000               	dw	0
   328  00FEBF  0100               	dw	256
   329  00FEC1  0000               	dw	0
   330  00FEC3  1000               	dw	4096
   331  00FEC5                     __end_of_hexpowers:
   332                           	opt stack 0
   333  00FEC5                     _xorSequences:
   334                           	opt stack 0
   335  00FEC5  41                 	db	65
   336  00FEC6  44                 	db	68
   337  00FEC7  47                 	db	71
   338  00FEC8  48                 	db	72
   339  00FEC9  4E                 	db	78
   340  00FECA  53                 	db	83
   341  00FECB  55                 	db	85
   342  00FECC  5C                 	db	92
   343  00FECD  5F                 	db	95
   344  00FECE  60                 	db	96
   345  00FECF  65                 	db	101
   346  00FED0  69                 	db	105
   347  00FED1  6A                 	db	106
   348  00FED2  72                 	db	114
   349  00FED3  77                 	db	119
   350  00FED4  78                 	db	120
   351  00FED5  7B                 	db	123
   352  00FED6  7E                 	db	126
   353  00FED7                     __end_of_xorSequences:
   354                           	opt stack 0
   355  00FED7                     _dnsXidValue:
   356                           	opt stack 0
   357  00FED7  1234               	dw	4660
   358  00FED9                     __end_of_dnsXidValue:
   359                           	opt stack 0
   360  00FED9                     _UDP_CallBackTable:
   361                           	opt stack 0
   362  00FED9  0035               	dw	53
   363  00FEDB  D0                 	db	low _DNS_Handler
   364  00FEDC  37                 	db	high _DNS_Handler
   365  00FEDD  01                 	db	low (_DNS_Handler shr (0+16))
   366  00FEDE  0044               	dw	68
   367  00FEE0  A4                 	db	low _DHCP_Handler
   368  00FEE1  2B                 	db	high _DHCP_Handler
   369  00FEE2  01                 	db	low (_DHCP_Handler shr (0+16))
   370  00FEE3  007B               	dw	123
   371  00FEE5  36                 	db	low _NTP_Handler
   372  00FEE6  61                 	db	high _NTP_Handler
   373  00FEE7  01                 	db	low (_NTP_Handler shr (0+16))
   374  00FEE8  FFFB               	dw	65531
   375  00FEEA  1C                 	db	low _TFTP_Handler
   376  00FEEB  3D                 	db	high _TFTP_Handler
   377  00FEEC  01                 	db	low (_TFTP_Handler shr (0+16))
   378  00FEED                     __end_of_UDP_CallBackTable:
   379                           	opt stack 0
   380  00FEED                     _dhcpName:
   381                           	opt stack 0
   382  00FEED  54                 	db	84
   383  00FEEE  69                 	db	105
   384  00FEEF  74                 	db	116
   385  00FEF0  61                 	db	97
   386  00FEF1  6E                 	db	110
   387  00FEF2  20                 	db	32
   388  00FEF3  42                 	db	66
   389  00FEF4  6F                 	db	111
   390  00FEF5  69                 	db	105
   391  00FEF6  6C                 	db	108
   392  00FEF7  65                 	db	101
   393  00FEF8  72                 	db	114
   394  00FEF9  00                 	db	0
   395  00FEFA                     __end_of_dhcpName:
   396                           	opt stack 0
   397  00FEFA                     _tftp_option:
   398                           	opt stack 0
   399  00FEFA  62                 	db	98
   400  00FEFB  6C                 	db	108
   401  00FEFC  6B                 	db	107
   402  00FEFD  73                 	db	115
   403  00FEFE  69                 	db	105
   404  00FEFF  7A                 	db	122
   405  00FF00  65                 	db	101
   406  00FF01  00                 	db	0
   407  00FF02                     __end_of_tftp_option:
   408                           	opt stack 0
   409  00FF02                     _macAddress:
   410                           	opt stack 0
   411  00FF02  00                 	db	0
   412  00FF03  55                 	db	85
   413  00FF04  58                 	db	88
   414  00FF05  00                 	db	0
   415  00FF06  10                 	db	16
   416  00FF07  22                 	db	34
   417  00FF08                     __end_of_macAddress:
   418                           	opt stack 0
   419  00FF08                     _broadcastMAC:
   420                           	opt stack 0
   421  00FF08  FF                 	db	255
   422  00FF09  FF                 	db	255
   423  00FF0A  FF                 	db	255
   424  00FF0B  FF                 	db	255
   425  00FF0C  FF                 	db	255
   426  00FF0D  FF                 	db	255
   427  00FF0E                     __end_of_broadcastMAC:
   428                           	opt stack 0
   429  00FF0E                     STR_1:
   430  00FF0E  4D                 	db	77	;'M'
   431  00FF0F  41                 	db	65	;'A'
   432  00FF10  43                 	db	67	;'C'
   433  00FF11  20                 	db	32
   434  00FF12  41                 	db	65	;'A'
   435  00FF13  64                 	db	100	;'d'
   436  00FF14  64                 	db	100	;'d'
   437  00FF15  72                 	db	114	;'r'
   438  00FF16  65                 	db	101	;'e'
   439  00FF17  73                 	db	115	;'s'
   440  00FF18  73                 	db	115	;'s'
   441  00FF19  20                 	db	32
   442  00FF1A  66                 	db	102	;'f'
   443  00FF1B  72                 	db	114	;'r'
   444  00FF1C  6F                 	db	111	;'o'
   445  00FF1D  6D                 	db	109	;'m'
   446  00FF1E  20                 	db	32
   447  00FF1F  45                 	db	69	;'E'
   448  00FF20  45                 	db	69	;'E'
   449  00FF21  50                 	db	80	;'P'
   450  00FF22  52                 	db	82	;'R'
   451  00FF23  4F                 	db	79	;'O'
   452  00FF24  4D                 	db	77	;'M'
   453  00FF25  3A                 	db	58	;':'
   454  00FF26  20                 	db	32
   455  00FF27  25                 	db	37
   456  00FF28  2E                 	db	46
   457  00FF29  32                 	db	50	;'2'
   458  00FF2A  58                 	db	88	;'X'
   459  00FF2B  3A                 	db	58	;':'
   460  00FF2C  25                 	db	37
   461  00FF2D  2E                 	db	46
   462  00FF2E  32                 	db	50	;'2'
   463  00FF2F  58                 	db	88	;'X'
   464  00FF30  3A                 	db	58	;':'
   465  00FF31  25                 	db	37
   466  00FF32  2E                 	db	46
   467  00FF33  32                 	db	50	;'2'
   468  00FF34  58                 	db	88	;'X'
   469  00FF35  3A                 	db	58	;':'
   470  00FF36  25                 	db	37
   471  00FF37  2E                 	db	46
   472  00FF38  32                 	db	50	;'2'
   473  00FF39  58                 	db	88	;'X'
   474  00FF3A  3A                 	db	58	;':'
   475  00FF3B  25                 	db	37
   476  00FF3C  2E                 	db	46
   477  00FF3D  32                 	db	50	;'2'
   478  00FF3E  58                 	db	88	;'X'
   479  00FF3F  3A                 	db	58	;':'
   480  00FF40  25                 	db	37
   481  00FF41  2E                 	db	46
   482  00FF42  32                 	db	50	;'2'
   483  00FF43  58                 	db	88	;'X'
   484  00FF44  20                 	db	32
   485  00FF45  0D                 	db	13
   486  00FF46  0A                 	db	10
   487  00FF47  00                 	db	0
   488  00FF48  0D                 	db	13
   489  00FF49  0A                 	db	10
   490  00FF4A  0D                 	db	13
   491  00FF4B  0A                 	db	10
   492  00FF4C  53                 	db	83	;'S'
   493  00FF4D  74                 	db	116	;'t'
   494  00FF4E  61                 	db	97	;'a'
   495  00FF4F  72                 	db	114	;'r'
   496  00FF50  74                 	db	116	;'t'
   497  00FF51  69                 	db	105	;'i'
   498  00FF52  6E                 	db	110	;'n'
   499  00FF53  67                 	db	103	;'g'
   500  00FF54  20                 	db	32
   501  00FF55  53                 	db	83	;'S'
   502  00FF56  79                 	db	121	;'y'
   503  00FF57  73                 	db	115	;'s'
   504  00FF58  6C                 	db	108	;'l'
   505  00FF59  6F                 	db	111	;'o'
   506  00FF5A  67                 	db	103	;'g'
   507  00FF5B  20                 	db	32
   508  00FF5C  61                 	db	97	;'a'
   509  00FF5D  74                 	db	116	;'t'
   510  00FF5E  20                 	db	32
   511  00FF5F  25                 	db	37
   512  00FF60  6C                 	db	108	;'l'
   513  00FF61  75                 	db	117	;'u'
   514  00FF62  0D                 	db	13
   515  00FF63  0A                 	db	10
   516  00FF64  00                 	db	0
   517  00FF65  44                 	db	68	;'D'
   518  00FF66  4E                 	db	78	;'N'
   519  00FF67  53                 	db	83	;'S'
   520  00FF68  20                 	db	32
   521  00FF69  46                 	db	70	;'F'
   522  00FF6A  6F                 	db	111	;'o'
   523  00FF6B  75                 	db	117	;'u'
   524  00FF6C  6E                 	db	110	;'n'
   525  00FF6D  64                 	db	100	;'d'
   526  00FF6E  20                 	db	32
   527  00FF6F  25                 	db	37
   528  00FF70  73                 	db	115	;'s'
   529  00FF71  20                 	db	32
   530  00FF72  69                 	db	105	;'i'
   531  00FF73  6E                 	db	110	;'n'
   532  00FF74  20                 	db	32
   533  00FF75  63                 	db	99	;'c'
   534  00FF76  61                 	db	97	;'a'
   535  00FF77  63                 	db	99	;'c'
   536  00FF78  68                 	db	104	;'h'
   537  00FF79  65                 	db	101	;'e'
   538  00FF7A  20                 	db	32
   539  00FF7B  25                 	db	37
   540  00FF7C  75                 	db	117	;'u'
   541  00FF7D  6C                 	db	108	;'l'
   542  00FF7E  00                 	db	0
   543  00FF7F  46                 	db	70	;'F'
   544  00FF80  61                 	db	97	;'a'
   545  00FF81  69                 	db	105	;'i'
   546  00FF82  6C                 	db	108	;'l'
   547  00FF83  65                 	db	101	;'e'
   548  00FF84  64                 	db	100	;'d'
   549  00FF85  20                 	db	32
   550  00FF86  4F                 	db	79	;'O'
   551  00FF87  70                 	db	112	;'p'
   552  00FF88  63                 	db	99	;'c'
   553  00FF89  6F                 	db	111	;'o'
   554  00FF8A  64                 	db	100	;'d'
   555  00FF8B  65                 	db	101	;'e'
   556  00FF8C  20                 	db	32
   557  00FF8D  3D                 	db	61	;'='
   558  00FF8E  20                 	db	32
   559  00FF8F  25                 	db	37
   560  00FF90  64                 	db	100	;'d'
   561  00FF91  20                 	db	32
   562  00FF92  0D                 	db	13
   563  00FF93  0A                 	db	10
   564  00FF94  00                 	db	0
   565  00FF95  55                 	db	85	;'U'
   566  00FF96  44                 	db	68	;'D'
   567  00FF97  50                 	db	80	;'P'
   568  00FF98  5F                 	db	95	;'_'
   569  00FF99  53                 	db	83	;'S'
   570  00FF9A  74                 	db	116	;'t'
   571  00FF9B  61                 	db	97	;'a'
   572  00FF9C  72                 	db	114	;'r'
   573  00FF9D  74                 	db	116	;'t'
   574  00FF9E  20                 	db	32
   575  00FF9F  46                 	db	70	;'F'
   576  00FFA0  61                 	db	97	;'a'
   577  00FFA1  69                 	db	105	;'i'
   578  00FFA2  6C                 	db	108	;'l'
   579  00FFA3  65                 	db	101	;'e'
   580  00FFA4  64                 	db	100	;'d'
   581  00FFA5  0D                 	db	13
   582  00FFA6  0A                 	db	10
   583  00FFA7  00                 	db	0
   584  00FFA8                     STR_8:
   585  00FFA8  6E                 	db	110	;'n'
   586  00FFA9  74                 	db	116	;'t'
   587  00FFAA  70                 	db	112	;'p'
   588  00FFAB  2E                 	db	46
   589  00FFAC  6D                 	db	109	;'m'
   590  00FFAD  69                 	db	105	;'i'
   591  00FFAE  63                 	db	99	;'c'
   592  00FFAF  72                 	db	114	;'r'
   593  00FFB0  6F                 	db	111	;'o'
   594  00FFB1  63                 	db	99	;'c'
   595  00FFB2  68                 	db	104	;'h'
   596  00FFB3  69                 	db	105	;'i'
   597  00FFB4  70                 	db	112	;'p'
   598  00FFB5  2E                 	db	46
   599  00FFB6  63                 	db	99	;'c'
   600  00FFB7  6F                 	db	111	;'o'
   601  00FFB8  6D                 	db	109	;'m'
   602  00FFB9  00                 	db	0
   603  00FFBA                     STR_15:
   604  00FFBA  30                 	db	48	;'0'
   605  00FFBB  31                 	db	49	;'1'
   606  00FFBC  32                 	db	50	;'2'
   607  00FFBD  33                 	db	51	;'3'
   608  00FFBE  34                 	db	52	;'4'
   609  00FFBF  35                 	db	53	;'5'
   610  00FFC0  36                 	db	54	;'6'
   611  00FFC1  37                 	db	55	;'7'
   612  00FFC2  38                 	db	56	;'8'
   613  00FFC3  39                 	db	57	;'9'
   614  00FFC4  41                 	db	65	;'A'
   615  00FFC5  42                 	db	66	;'B'
   616  00FFC6  43                 	db	67	;'C'
   617  00FFC7  44                 	db	68	;'D'
   618  00FFC8  45                 	db	69	;'E'
   619  00FFC9  46                 	db	70	;'F'
   620  00FFCA  00                 	db	0
   621  00FFCB  25                 	db	37
   622  00FFCC  64                 	db	100	;'d'
   623  00FFCD  2E                 	db	46
   624  00FFCE  25                 	db	37
   625  00FFCF  64                 	db	100	;'d'
   626  00FFD0  2E                 	db	46
   627  00FFD1  25                 	db	37
   628  00FFD2  64                 	db	100	;'d'
   629  00FFD3  2E                 	db	46
   630  00FFD4  25                 	db	37
   631  00FFD5  64                 	db	100	;'d'
   632  00FFD6  00                 	db	0
   633  00FFD7  25                 	db	37
   634  00FFD8  75                 	db	117	;'u'
   635  00FFD9  20                 	db	32
   636  00FFDA  3A                 	db	58	;':'
   637  00FFDB  20                 	db	32
   638  00FFDC  25                 	db	37
   639  00FFDD  73                 	db	115	;'s'
   640  00FFDE  0D                 	db	13
   641  00FFDF  0A                 	db	10
   642  00FFE0  00                 	db	0
   643  00FFE1                     STR_9:
   644  00FFE1  6E                 	db	110	;'n'
   645  00FFE2  65                 	db	101	;'e'
   646  00FFE3  74                 	db	116	;'t'
   647  00FFE4  61                 	db	97	;'a'
   648  00FFE5  73                 	db	115	;'s'
   649  00FFE6  63                 	db	99	;'c'
   650  00FFE7  69                 	db	105	;'i'
   651  00FFE8  69                 	db	105	;'i'
   652  00FFE9  00                 	db	0
   653  00FFEA                     STR_14:
   654  00FFEA  28                 	db	40
   655  00FFEB  6E                 	db	110	;'n'
   656  00FFEC  75                 	db	117	;'u'
   657  00FFED  6C                 	db	108	;'l'
   658  00FFEE  6C                 	db	108	;'l'
   659  00FFEF  29                 	db	41
   660  00FFF0  00                 	db	0
   661  00FFF1                     STR_10:
   662  00FFF1  6F                 	db	111	;'o'
   663  00FFF2  63                 	db	99	;'c'
   664  00FFF3  74                 	db	116	;'t'
   665  00FFF4  65                 	db	101	;'e'
   666  00FFF5  74                 	db	116	;'t'
   667  00FFF6  00                 	db	0
   668  00FFF7                     STR_11:
   669  00FFF7  6D                 	db	109	;'m'
   670  00FFF8  61                 	db	97	;'a'
   671  00FFF9  69                 	db	105	;'i'
   672  00FFFA  6C                 	db	108	;'l'
   673  00FFFB  00                 	db	0
   674  00FFFC                     STR_2:
   675  00FFFC  2E                 	db	46
   676  00FFFD  00                 	db	0
   677  0000                     
   678                           ; #config settings
   679  00FFFE  00                 	db	0	; dummy byte at the end
   680  0000                     
   681                           	psect	nvCOMRAM
   682  000049                     __pnvCOMRAM:
   683                           	opt stack 0
   684  000049                     _timer0ReloadVal:
   685                           	opt stack 0
   686  000049                     	ds	2
   687  00004B                     _timer1ReloadVal:
   688                           	opt stack 0
   689  00004B                     	ds	2
   690                           
   691                           	psect	nvBANK2
   692  0002FA                     __pnvBANK2:
   693                           	opt stack 0
   694  0002FA                     _TMR1_InterruptHandler:
   695                           	opt stack 0
   696  0002FA                     	ds	3
   697                           
   698                           	psect	nvBANK3
   699  0003F0                     __pnvBANK3:
   700                           	opt stack 0
   701  0003F0                     _TMR0_InterruptHandler:
   702                           	opt stack 0
   703  0003F0                     	ds	3
   704  0000                     _EDMAND	set	3826
   705  0000                     _EDMAST	set	3824
   706  0000                     _EDMADST	set	3828
   707  0000                     _MIRD	set	3768
   708  0000                     _MIWR	set	3766
   709  0000                     _MAMXFL	set	3754
   710  0000                     _ERXRDPT	set	3820
   711  0000                     _EWRPT	set	3810
   712  0000                     _ERXND	set	3818
   713  0000                     _ERXST	set	3816
   714  0000                     _ETXND	set	3814
   715  0000                     _ETXST	set	3812
   716  0000                     _MAIPG	set	3750
   717  0000                     _MICMDbits	set	3762
   718  0000                     _MICMD	set	3762
   719  0000                     _MIREGADR	set	3764
   720  0000                     _MISTATbits	set	3722
   721  0000                     _EIEbits	set	3835
   722  0000                     _EIE	set	3835
   723  0000                     _ERXFCON	set	3800
   724  0000                     _MAADR6	set	3713
   725  0000                     _MAADR5	set	3712
   726  0000                     _MAADR4	set	3715
   727  0000                     _MAADR3	set	3714
   728  0000                     _MAADR2	set	3717
   729  0000                     _MAADR1	set	3716
   730  0000                     _EFLOCON	set	3735
   731  0000                     _MABBIPG	set	3748
   732  0000                     _MACON4	set	3747
   733  0000                     _MACON3	set	3746
   734  0000                     _MACON1	set	3744
   735  0000                     _ECON2	set	3838
   736  0000                     _ESTATbits	set	3837
   737  0000                     _ERDPT	set	3962
   738  0000                     _TMR1	set	4046
   739  0000                     _SSP1STATbits	set	4039
   740  0000                     _SSP1BUF	set	4041
   741  0000                     _SSP1CON1bits	set	4038
   742  0000                     _SSP1ADD	set	4040
   743  0000                     _SSP1CON1	set	4038
   744  0000                     _SSP1STAT	set	4039
   745  0000                     _INTCON	set	4082
   746  0000                     _PIR2bits	set	4001
   747  0000                     _EIRbits	set	3936
   748  0000                     _ECON1bits	set	4050
   749  0000                     _ECON1	set	4050
   750  0000                     _CCPR1H	set	4031
   751  0000                     _CCPR1L	set	4030
   752  0000                     _ECCP1AS	set	4022
   753  0000                     _ECCP1DEL	set	3961
   754  0000                     _CCP1CON	set	4029
   755  0000                     _T0CONbits	set	4053
   756  0000                     _T0CON	set	4053
   757  0000                     _TMR0L	set	4054
   758  0000                     _TMR0H	set	4055
   759  0000                     _ADCON0bits	set	4034
   760  0000                     _ADRESH	set	4036
   761  0000                     _ADRESL	set	4035
   762  0000                     _ADCON2	set	4032
   763  0000                     _ADCON1	set	4033
   764  0000                     _ADCON0	set	4034
   765  0000                     _ADCON1bits	set	4033
   766  0000                     _TRISD	set	3989
   767  0000                     _TRISC	set	3988
   768  0000                     _TRISB	set	3987
   769  0000                     _TRISG	set	3992
   770  0000                     _TRISA	set	3986
   771  0000                     _TRISF	set	3991
   772  0000                     _TRISE	set	3990
   773  0000                     _LATC	set	3979
   774  0000                     _LATG	set	3983
   775  0000                     _LATB	set	3978
   776  0000                     _LATF	set	3982
   777  0000                     _LATA	set	3977
   778  0000                     _LATD	set	3980
   779  0000                     _LATE	set	3981
   780  0000                     _T2CONbits	set	4042
   781  0000                     _T2CON	set	4042
   782  0000                     _TMR2	set	4044
   783  0000                     _PR2	set	4043
   784  0000                     _OSCTUNE	set	3995
   785  0000                     _OSCCON	set	4051
   786  0000                     _T1CONbits	set	4045
   787  0000                     _T1CON	set	4045
   788  0000                     _TMR1L	set	4046
   789  0000                     _TMR1H	set	4047
   790  0000                     _PIR1bits	set	3998
   791  0000                     _PIE1bits	set	3997
   792  0000                     _INTCONbits	set	4082
   793  0000                     _RCONbits	set	4048
   794  0000                     _GIE	set	32663
   795  0000                     _RXRST	set	32406
   796                           
   797                           	psect	cinit
   798  015DFA                     __pcinit:
   799                           	opt stack 0
   800  015DFA                     start_initialization:
   801                           	opt stack 0
   802  015DFA                     __initialization:
   803                           	opt stack 0
   804                           
   805                           ; Initialize objects allocated to BANK3 (54 bytes)
   806                           ; load TBLPTR registers with __pidataBANK3
   807  015DFA  0EF2               	movlw	low __pidataBANK3
   808  015DFC  6EF6               	movwf	tblptrl,c
   809  015DFE  0E69               	movlw	high __pidataBANK3
   810  015E00  6EF7               	movwf	tblptrh,c
   811  015E02  0E01               	movlw	low (__pidataBANK3 shr (0+16))
   812  015E04  6EF8               	movwf	tblptru,c
   813  015E06  EE03  F0B6         	lfsr	0,__pdataBANK3
   814  015E0A  EE10 F036          	lfsr	1,54
   815  015E0E                     copy_data0:
   816  015E0E  0009               	tblrd		*+
   817  015E10  CFF5 FFEE          	movff	tablat,postinc0
   818  015E14  50E5               	movf	postdec1,w,c
   819  015E16  50E1               	movf	fsr1l,w,c
   820  015E18  E1FA               	bnz	copy_data0
   821                           
   822                           ; Initialize objects allocated to BANK2 (57 bytes)
   823                           ; load TBLPTR registers with __pidataBANK2
   824  015E1A  0E48               	movlw	low __pidataBANK2
   825  015E1C  6EF6               	movwf	tblptrl,c
   826  015E1E  0E69               	movlw	high __pidataBANK2
   827  015E20  6EF7               	movwf	tblptrh,c
   828  015E22  0E01               	movlw	low (__pidataBANK2 shr (0+16))
   829  015E24  6EF8               	movwf	tblptru,c
   830  015E26  EE02  F08D         	lfsr	0,__pdataBANK2
   831  015E2A  EE10 F039          	lfsr	1,57
   832  015E2E                     copy_data1:
   833  015E2E  0009               	tblrd		*+
   834  015E30  CFF5 FFEE          	movff	tablat,postinc0
   835  015E34  50E5               	movf	postdec1,w,c
   836  015E36  50E1               	movf	fsr1l,w,c
   837  015E38  E1FA               	bnz	copy_data1
   838                           
   839                           ; Initialize objects allocated to BANK1 (1 bytes)
   840                           ; load TBLPTR registers with __pidataBANK1
   841  015E3A  0E46               	movlw	low __pidataBANK1
   842  015E3C  6EF6               	movwf	tblptrl,c
   843  015E3E  0E6F               	movlw	high __pidataBANK1
   844  015E40  6EF7               	movwf	tblptrh,c
   845  015E42  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   846  015E44  6EF8               	movwf	tblptru,c
   847  015E46  0009               	tblrd		*+	;fetch initializer
   848  015E48  CFF5 F1FF          	movff	tablat,__pdataBANK1
   849                           
   850                           ; Clear objects allocated to BANK5 (128 bytes)
   851  015E4C  EE05  F000         	lfsr	0,__pbssBANK5
   852  015E50  0E80               	movlw	128
   853  015E52                     clear_0:
   854  015E52  6AEE               	clrf	postinc0,c
   855  015E54  06E8               	decf	wreg,f,c
   856  015E56  E1FD               	bnz	clear_0
   857                           
   858                           ; Clear objects allocated to BANK4 (200 bytes)
   859  015E58  EE04  F000         	lfsr	0,__pbssBANK4
   860  015E5C  0EC8               	movlw	200
   861  015E5E                     clear_1:
   862  015E5E  6AEE               	clrf	postinc0,c
   863  015E60  06E8               	decf	wreg,f,c
   864  015E62  E1FD               	bnz	clear_1
   865                           
   866                           ; Clear objects allocated to BANK3 (182 bytes)
   867  015E64  EE03  F000         	lfsr	0,__pbssBANK3
   868  015E68  0EB6               	movlw	182
   869  015E6A                     clear_2:
   870  015E6A  6AEE               	clrf	postinc0,c
   871  015E6C  06E8               	decf	wreg,f,c
   872  015E6E  E1FD               	bnz	clear_2
   873                           
   874                           ; Clear objects allocated to BANK2 (141 bytes)
   875  015E70  EE02  F000         	lfsr	0,__pbssBANK2
   876  015E74  0E8D               	movlw	141
   877  015E76                     clear_3:
   878  015E76  6AEE               	clrf	postinc0,c
   879  015E78  06E8               	decf	wreg,f,c
   880  015E7A  E1FD               	bnz	clear_3
   881                           
   882                           ; Clear objects allocated to COMRAM (14 bytes)
   883  015E7C  EE00  F03B         	lfsr	0,__pbssCOMRAM
   884  015E80  0E0E               	movlw	14
   885  015E82                     clear_4:
   886  015E82  6AEE               	clrf	postinc0,c
   887  015E84  06E8               	decf	wreg,f,c
   888  015E86  E1FD               	bnz	clear_4
   889  015E88                     end_of_initialization:
   890                           	opt stack 0
   891  015E88                     __end_of__initialization:
   892                           	opt stack 0
   893  015E88  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   894  015E8A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   895  015E8C  0100               	movlb	0
   896  015E8E  EF25  F0B7         	goto	_main	;jump to C main() function
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           postinc0	equ	0xFEE
   902                           wreg	equ	0xFE8
   903                           postdec1	equ	0xFE5
   904                           fsr1l	equ	0xFE1
   905                           
   906                           	psect	bssCOMRAM
   907  00003B                     __pbssCOMRAM:
   908                           	opt stack 0
   909  00003B                     _current_block:
   910                           	opt stack 0
   911  00003B                     	ds	2
   912  00003D                     _currentTCB:
   913                           	opt stack 0
   914  00003D                     	ds	2
   915  00003F                     _tcbList:
   916                           	opt stack 0
   917  00003F                     	ds	2
   918  000041                     _nextPacketPointer:
   919                           	opt stack 0
   920  000041                     	ds	2
   921  000043                     _pTail:
   922                           	opt stack 0
   923  000043                     	ds	2
   924  000045                     _pHead:
   925                           	opt stack 0
   926  000045                     	ds	2
   927  000047                     _tcbListSize:
   928                           	opt stack 0
   929  000047                     	ds	1
   930  000048                     _ethListSize:
   931                           	opt stack 0
   932  000048                     	ds	1
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           postinc0	equ	0xFEE
   938                           wreg	equ	0xFE8
   939                           postdec1	equ	0xFE5
   940                           fsr1l	equ	0xFE1
   941                           
   942                           	psect	dataBANK1
   943  0001FF                     __pdataBANK1:
   944                           	opt stack 0
   945  0001FF                     _lfsr_value:
   946                           	opt stack 0
   947  0001FF                     	ds	1
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           postinc0	equ	0xFEE
   953                           wreg	equ	0xFE8
   954                           postdec1	equ	0xFE5
   955                           fsr1l	equ	0xFE1
   956                           
   957                           	psect	bssBANK2
   958  000200                     __pbssBANK2:
   959                           	opt stack 0
   960  000200                     _ip_database_info:
   961                           	opt stack 0
   962  000200                     	ds	36
   963  000224                     _ethData:
   964                           	opt stack 0
   965  000224                     	ds	6
   966  00022A                     _receivedRemoteAddress:
   967                           	opt stack 0
   968  00022A                     	ds	4
   969  00022E                     _device_time:
   970                           	opt stack 0
   971  00022E                     	ds	4
   972  000232                     _remoteIpv4Address:
   973                           	opt stack 0
   974  000232                     	ds	4
   975  000236                     _rxPacketStatusVector:
   976                           	opt stack 0
   977  000236                     	ds	4
   978  00023A                     strtok@sp:
   979                           	opt stack 0
   980  00023A                     	ds	2
   981  00023C                     _flash_checksum_new:
   982                           	opt stack 0
   983  00023C                     	ds	2
   984  00023E                     _flash_checksum_current:
   985                           	opt stack 0
   986  00023E                     	ds	2
   987  000240                     _checksum_eeprm:
   988                           	opt stack 0
   989  000240                     	ds	2
   990  000242                     _next_block:
   991                           	opt stack 0
   992  000242                     	ds	2
   993  000244                     _prev_block:
   994                           	opt stack 0
   995  000244                     	ds	2
   996  000246                     _store_type:
   997                           	opt stack 0
   998  000246                     	ds	2
   999  000248                     _rcvPayloadLen:
  1000                           	opt stack 0
  1001  000248                     	ds	2
  1002  00024A                     _nextAvailablePort:
  1003                           	opt stack 0
  1004  00024A                     	ds	2
  1005  00024C                     _dhcpState:
  1006                           	opt stack 0
  1007  00024C                     	ds	2
  1008  00024E                     _destPort:
  1009                           	opt stack 0
  1010  00024E                     	ds	2
  1011  000250                     _portUnreachable:
  1012                           	opt stack 0
  1013  000250                     	ds	2
  1014  000252                     _ipv4StartPosition:
  1015                           	opt stack 0
  1016  000252                     	ds	2
  1017  000254                     TMR1_ISR@CountCallBack:
  1018                           	opt stack 0
  1019  000254                     	ds	2
  1020  000256                     _last_block:
  1021                           	opt stack 0
  1022  000256                     	ds	1
  1023  000257                     _sequenceIndex:
  1024                           	opt stack 0
  1025  000257                     	ds	1
  1026  000258                     _Control_Byte:
  1027                           	opt stack 0
  1028  000258                     	ds	1
  1029  000259                     _tcpHeader:
  1030                           	opt stack 0
  1031  000259                     	ds	20
  1032  00026D                     _ipv4Header:
  1033                           	opt stack 0
  1034  00026D                     	ds	20
  1035  000281                     _udpHeader:
  1036                           	opt stack 0
  1037  000281                     	ds	8
  1038  000289                     _arpTimer:
  1039                           	opt stack 0
  1040  000289                     	ds	4
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           tblptrl	equ	0xFF6
  1044                           tablat	equ	0xFF5
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postdec1	equ	0xFE5
  1048                           fsr1l	equ	0xFE1
  1049                           
  1050                           	psect	dataBANK2
  1051  00028D                     __pdataBANK2:
  1052                           	opt stack 0
  1053  00028D                     _dhcpData:
  1054                           	opt stack 0
  1055  00028D                     	ds	48
  1056  0002BD                     _tftp_last_address:
  1057                           	opt stack 0
  1058  0002BD                     	ds	4
  1059  0002C1                     _ntp:
  1060                           	opt stack 0
  1061  0002C1                     	ds	2
  1062  0002C3                     _tcpMss:
  1063                           	opt stack 0
  1064  0002C3                     	ds	2
  1065  0002C5                     _xor_mask:
  1066                           	opt stack 0
  1067  0002C5                     	ds	1
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           
  1077                           	psect	bssBANK3
  1078  000300                     __pbssBANK3:
  1079                           	opt stack 0
  1080  000300                     	ds	4
  1081  000304                     _nextSequenceNumber:
  1082                           	opt stack 0
  1083  000304                     	ds	4
  1084  000308                     DHCP_Manage@managementTimer:
  1085                           	opt stack 0
  1086  000308                     	ds	4
  1087  00030C                     Network_Manage@nowPv:
  1088                           	opt stack 0
  1089  00030C                     	ds	4
  1090  000310                     _arpMap:
  1091                           	opt stack 0
  1092  000310                     	ds	104
  1093  000378                     _tftp_msg:
  1094                           	opt stack 0
  1095  000378                     	ds	41
  1096  0003A1                     makeIpv4AddresstoStr@ip_str:
  1097                           	opt stack 0
  1098  0003A1                     	ds	15
  1099  0003B0                     _hostMacAddress:
  1100                           	opt stack 0
  1101  0003B0                     	ds	6
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111                           	psect	dataBANK3
  1112  0003B6                     __pdataBANK3:
  1113                           	opt stack 0
  1114  0003B6                     DHCP_Handler@F840:
  1115                           	opt stack 0
  1116  0003B6                     	ds	48
  1117  0003E6                     _tftp_modes:
  1118                           	opt stack 0
  1119  0003E6                     	ds	6
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           
  1129                           	psect	bssBANK4
  1130  000400                     __pbssBANK4:
  1131                           	opt stack 0
  1132  000400                     _txData:
  1133                           	opt stack 0
  1134  000400                     	ds	200
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           postinc0	equ	0xFEE
  1140                           wreg	equ	0xFE8
  1141                           postdec1	equ	0xFE5
  1142                           fsr1l	equ	0xFE1
  1143                           
  1144                           	psect	bssBANK5
  1145  000500                     __pbssBANK5:
  1146                           	opt stack 0
  1147  000500                     _dnsCache:
  1148                           	opt stack 0
  1149  000500                     	ds	128
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postdec1	equ	0xFE5
  1157                           fsr1l	equ	0xFE1
  1158                           
  1159                           	psect	cstackBANK3
  1160  0003EC                     __pcstackBANK3:
  1161                           	opt stack 0
  1162  0003EC                     Network_Manage@now:
  1163                           	opt stack 0
  1164                           
  1165                           ; 4 bytes @ 0x0
  1166  0003EC                     	ds	4
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           postdec1	equ	0xFE5
  1174                           fsr1l	equ	0xFE1
  1175                           
  1176                           	psect	cstackBANK2
  1177  0002C6                     __pcstackBANK2:
  1178                           	opt stack 0
  1179  0002C6                     ??_IPV4_Packet:
  1180                           
  1181                           ; 1 bytes @ 0x0
  1182  0002C6                     	ds	28
  1183  0002E2                     IPV4_Packet@hdrLen:
  1184                           	opt stack 0
  1185                           
  1186                           ; 1 bytes @ 0x1C
  1187  0002E2                     	ds	1
  1188  0002E3                     IPV4_Packet@length:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x1D
  1192  0002E3                     	ds	2
  1193  0002E5                     IPV4_Packet@cksm:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x1F
  1197  0002E5                     	ds	2
  1198  0002E7                     ??_Network_Read:
  1199                           
  1200                           ; 1 bytes @ 0x21
  1201  0002E7                     	ds	4
  1202  0002EB                     Network_Read@header:
  1203                           	opt stack 0
  1204                           
  1205                           ; 14 bytes @ 0x25
  1206  0002EB                     	ds	14
  1207  0002F9                     ??_Network_Manage:
  1208                           
  1209                           ; 1 bytes @ 0x33
  1210  0002F9                     	ds	1
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec1	equ	0xFE5
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220                           	psect	cstackBANK1
  1221  000100                     __pcstackBANK1:
  1222                           	opt stack 0
  1223  000100                     TCP_FiniteStateMachine@ret:
  1224                           	opt stack 0
  1225  000100                     DHCP_Handler@chaddr:
  1226                           	opt stack 0
  1227  000100                     TFTP_Handler@recv_buffer:
  1228                           	opt stack 0
  1229  000100                     DNS_Handler@dnsR:
  1230                           	opt stack 0
  1231                           
  1232                           ; 255 bytes @ 0x0
  1233  000100                     	ds	1
  1234  000101                     TCP_FiniteStateMachine@notAckBytes:
  1235                           	opt stack 0
  1236                           
  1237                           ; 2 bytes @ 0x1
  1238  000101                     	ds	2
  1239  000103                     TCP_FiniteStateMachine@event:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x3
  1243  000103                     	ds	1
  1244  000104                     TCP_FiniteStateMachine@nextState:
  1245                           	opt stack 0
  1246                           
  1247                           ; 1 bytes @ 0x4
  1248  000104                     	ds	1
  1249  000105                     TCP_Update@count:
  1250                           	opt stack 0
  1251  000105                     TCP_Recv@remoteAddress:
  1252                           	opt stack 0
  1253                           
  1254                           ; 4 bytes @ 0x5
  1255  000105                     	ds	2
  1256  000107                     TCP_Update@tcbPtr:
  1257                           	opt stack 0
  1258                           
  1259                           ; 2 bytes @ 0x7
  1260  000107                     	ds	2
  1261  000109                     TCP_Recv@length:
  1262                           	opt stack 0
  1263                           
  1264                           ; 2 bytes @ 0x9
  1265  000109                     	ds	2
  1266  00010B                     ??_TCP_Recv:
  1267                           
  1268                           ; 1 bytes @ 0xB
  1269  00010B                     	ds	5
  1270  000110                     DHCP_Handler@a:
  1271                           	opt stack 0
  1272                           
  1273                           ; 4 bytes @ 0x10
  1274  000110                     	ds	4
  1275  000114                     DHCP_Handler@a_3189:
  1276                           	opt stack 0
  1277                           
  1278                           ; 4 bytes @ 0x14
  1279  000114                     	ds	4
  1280  000118                     DHCP_Handler@messageType:
  1281                           	opt stack 0
  1282                           
  1283                           ; 1 bytes @ 0x18
  1284  000118                     	ds	1
  1285  000119                     DHCP_Handler@option:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x19
  1289  000119                     	ds	1
  1290  00011A                     DHCP_Handler@siaddr:
  1291                           	opt stack 0
  1292                           
  1293                           ; 4 bytes @ 0x1A
  1294  00011A                     	ds	4
  1295  00011E                     DHCP_Handler@declineOffers:
  1296                           	opt stack 0
  1297                           
  1298                           ; 1 bytes @ 0x1E
  1299  00011E                     	ds	1
  1300  00011F                     DHCP_Handler@count:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x1F
  1304  00011F                     	ds	1
  1305  000120                     DHCP_Handler@count_3188:
  1306                           	opt stack 0
  1307                           
  1308                           ; 1 bytes @ 0x20
  1309  000120                     	ds	1
  1310  000121                     DHCP_Handler@acceptOffers:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x21
  1314  000121                     	ds	1
  1315  000122                     DHCP_Handler@acceptNACK:
  1316                           	opt stack 0
  1317                           
  1318                           ; 1 bytes @ 0x22
  1319  000122                     	ds	1
  1320  000123                     DHCP_Handler@acceptACK:
  1321                           	opt stack 0
  1322                           
  1323                           ; 1 bytes @ 0x23
  1324  000123                     	ds	1
  1325  000124                     DHCP_Handler@optionLength:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x24
  1329  000124                     	ds	1
  1330  000125                     DHCP_Handler@localData:
  1331                           	opt stack 0
  1332                           
  1333                           ; 48 bytes @ 0x25
  1334  000125                     	ds	63
  1335  000164                     TFTP_Handler@data:
  1336                           	opt stack 0
  1337                           
  1338                           ; 100 bytes @ 0x64
  1339  000164                     	ds	100
  1340  0001C8                     TFTP_Handler@block_size:
  1341                           	opt stack 0
  1342                           
  1343                           ; 2 bytes @ 0xC8
  1344  0001C8                     	ds	2
  1345  0001CA                     TFTP_Handler@opcode:
  1346                           	opt stack 0
  1347                           
  1348                           ; 1 bytes @ 0xCA
  1349  0001CA                     	ds	1
  1350  0001CB                     TFTP_Handler@v:
  1351                           	opt stack 0
  1352                           
  1353                           ; 2 bytes @ 0xCB
  1354  0001CB                     	ds	52
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           fsr1l	equ	0xFE1
  1363                           
  1364                           	psect	cstackBANK0
  1365  000060                     __pcstackBANK0:
  1366                           	opt stack 0
  1367  000060                     ??_ARPV4_Packet:
  1368  000060                     ??_ARPV4_Request:
  1369  000060                     __doprnt@idx:
  1370                           	opt stack 0
  1371  000060                     ETH_TxComputeChecksum@rxptr:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x0
  1375  000060                     	ds	1
  1376  000061                     __doprnt@len:
  1377                           	opt stack 0
  1378                           
  1379                           ; 2 bytes @ 0x1
  1380  000061                     	ds	1
  1381  000062                     ETH_TxComputeChecksum@cksm:
  1382                           	opt stack 0
  1383                           
  1384                           ; 4 bytes @ 0x2
  1385  000062                     	ds	1
  1386  000063                     __doprnt@cp:
  1387                           	opt stack 0
  1388                           
  1389                           ; 2 bytes @ 0x3
  1390  000063                     	ds	2
  1391  000065                     __doprnt@flag:
  1392                           	opt stack 0
  1393                           
  1394                           ; 1 bytes @ 0x5
  1395  000065                     	ds	1
  1396  000066                     ??_IPV4_Send:
  1397  000066                     __doprnt@val:
  1398                           	opt stack 0
  1399                           
  1400                           ; 4 bytes @ 0x6
  1401  000066                     	ds	4
  1402  00006A                     IPV4_Send@ret:
  1403                           	opt stack 0
  1404  00006A                     __doprnt@prec:
  1405                           	opt stack 0
  1406                           
  1407                           ; 2 bytes @ 0xA
  1408  00006A                     	ds	1
  1409  00006B                     IPV4_Send@cksm:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0xB
  1413  00006B                     	ds	1
  1414  00006C                     __doprnt@c:
  1415                           	opt stack 0
  1416                           
  1417                           ; 1 bytes @ 0xC
  1418  00006C                     	ds	1
  1419  00006D                     ?_printf:
  1420                           	opt stack 0
  1421  00006D                     IPV4_Send@totalLength:
  1422                           	opt stack 0
  1423  00006D                     printf@f:
  1424                           	opt stack 0
  1425                           
  1426                           ; 2 bytes @ 0xD
  1427  00006D                     	ds	2
  1428  00006F                     ??_UDP_Send:
  1429                           
  1430                           ; 1 bytes @ 0xF
  1431  00006F                     	ds	4
  1432  000073                     UDP_Send@ret:
  1433                           	opt stack 0
  1434                           
  1435                           ; 1 bytes @ 0x13
  1436  000073                     	ds	1
  1437  000074                     UDP_Send@cksm:
  1438                           	opt stack 0
  1439                           
  1440                           ; 2 bytes @ 0x14
  1441  000074                     	ds	2
  1442  000076                     UDP_Send@udpLength:
  1443                           	opt stack 0
  1444                           
  1445                           ; 2 bytes @ 0x16
  1446  000076                     	ds	5
  1447  00007B                     ??_ETH_Init:
  1448                           
  1449                           ; 1 bytes @ 0x1B
  1450  00007B                     	ds	1
  1451  00007C                     ARPV4_Request@ret:
  1452                           	opt stack 0
  1453                           
  1454                           ; 1 bytes @ 0x1C
  1455  00007C                     	ds	1
  1456  00007D                     ARPV4_Request@header:
  1457                           	opt stack 0
  1458                           
  1459                           ; 28 bytes @ 0x1D
  1460  00007D                     	ds	3
  1461  000080                     ARPV4_Packet@length:
  1462                           	opt stack 0
  1463                           
  1464                           ; 2 bytes @ 0x20
  1465  000080                     	ds	2
  1466  000082                     ARPV4_Packet@mergeFlag:
  1467                           	opt stack 0
  1468                           
  1469                           ; 1 bytes @ 0x22
  1470  000082                     	ds	1
  1471  000083                     ARPV4_Packet@ret:
  1472                           	opt stack 0
  1473                           
  1474                           ; 1 bytes @ 0x23
  1475  000083                     	ds	1
  1476  000084                     ARPV4_Packet@arpPtr:
  1477                           	opt stack 0
  1478                           
  1479                           ; 2 bytes @ 0x24
  1480  000084                     	ds	1
  1481  000085                     ETH_Init@phycon1_value:
  1482                           	opt stack 0
  1483                           
  1484                           ; 2 bytes @ 0x25
  1485  000085                     	ds	1
  1486  000086                     ARPV4_Packet@x:
  1487                           	opt stack 0
  1488                           
  1489                           ; 1 bytes @ 0x26
  1490  000086                     	ds	1
  1491  000087                     ARPV4_Packet@x_939:
  1492                           	opt stack 0
  1493  000087                     ETH_Init@mac:
  1494                           	opt stack 0
  1495                           
  1496                           ; 2 bytes @ 0x27
  1497  000087                     	ds	1
  1498  000088                     ARPV4_Packet@entryPointer:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x28
  1502  000088                     	ds	2
  1503  00008A                     ARPV4_Packet@header:
  1504                           	opt stack 0
  1505                           
  1506                           ; 28 bytes @ 0x2A
  1507  00008A                     	ds	15
  1508  000099                     ??_IPv4_Start:
  1509                           
  1510                           ; 1 bytes @ 0x39
  1511  000099                     	ds	8
  1512  0000A1                     IPv4_Start@targetAddress:
  1513                           	opt stack 0
  1514                           
  1515                           ; 4 bytes @ 0x41
  1516  0000A1                     	ds	4
  1517  0000A5                     IPv4_Start@macAddress:
  1518                           	opt stack 0
  1519                           
  1520                           ; 2 bytes @ 0x45
  1521  0000A5                     	ds	2
  1522  0000A7                     IPv4_Start@ret:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0x47
  1526  0000A7                     	ds	1
  1527  0000A8                     ICMP_EchoReply@ipv4Hdr:
  1528                           	opt stack 0
  1529  0000A8                     TCP_Snd@tcbPtr:
  1530                           	opt stack 0
  1531  0000A8                     ICMP_PortUnreachable@srcIPAddress:
  1532                           	opt stack 0
  1533  0000A8                     UDP_Start@destIP:
  1534                           	opt stack 0
  1535                           
  1536                           ; 4 bytes @ 0x48
  1537  0000A8                     	ds	2
  1538  0000AA                     ??_ICMP_EchoReply:
  1539  0000AA                     ??_TCP_Snd:
  1540                           
  1541                           ; 1 bytes @ 0x4A
  1542  0000AA                     	ds	2
  1543  0000AC                     UDP_Start@srcPort:
  1544                           	opt stack 0
  1545  0000AC                     ICMP_PortUnreachable@destIPAddress:
  1546                           	opt stack 0
  1547                           
  1548                           ; 4 bytes @ 0x4C
  1549  0000AC                     	ds	2
  1550  0000AE                     ICMP_EchoReply@identifier:
  1551                           	opt stack 0
  1552  0000AE                     UDP_Start@dstPort:
  1553                           	opt stack 0
  1554                           
  1555                           ; 2 bytes @ 0x4E
  1556  0000AE                     	ds	2
  1557  0000B0                     ??_sendDHCPDISCOVER:
  1558  0000B0                     ICMP_EchoReply@sequence:
  1559                           	opt stack 0
  1560  0000B0                     ICMP_PortUnreachable@length:
  1561                           	opt stack 0
  1562  0000B0                     TFTP_Ack@tftp_server_address:
  1563                           	opt stack 0
  1564                           
  1565                           ; 4 bytes @ 0x50
  1566  0000B0                     	ds	1
  1567  0000B1                     ??_DHCP_Manage:
  1568                           
  1569                           ; 1 bytes @ 0x51
  1570  0000B1                     	ds	1
  1571  0000B2                     ICMP_EchoReply@icmp_cksm_start:
  1572                           	opt stack 0
  1573  0000B2                     ICMP_PortUnreachable@cksm:
  1574                           	opt stack 0
  1575  0000B2                     DHCP_Manage@now:
  1576                           	opt stack 0
  1577                           
  1578                           ; 4 bytes @ 0x52
  1579  0000B2                     	ds	2
  1580  0000B4                     ICMP_PortUnreachable@ret:
  1581                           	opt stack 0
  1582  0000B4                     ICMP_EchoReply@cksm:
  1583                           	opt stack 0
  1584  0000B4                     TFTP_Ack@dest_port:
  1585                           	opt stack 0
  1586                           
  1587                           ; 2 bytes @ 0x54
  1588  0000B4                     	ds	2
  1589  0000B6                     TFTP_Ack@started:
  1590                           	opt stack 0
  1591  0000B6                     ICMP_EchoReply@ipv4PayloadLength:
  1592                           	opt stack 0
  1593                           
  1594                           ; 2 bytes @ 0x56
  1595  0000B6                     	ds	1
  1596  0000B7                     TFTP_Ack@opcode:
  1597                           	opt stack 0
  1598                           
  1599                           ; 1 bytes @ 0x57
  1600  0000B7                     	ds	1
  1601  0000B8                     ICMP_EchoReply@ret:
  1602                           	opt stack 0
  1603  0000B8                     DHCP_Handler@length:
  1604                           	opt stack 0
  1605  0000B8                     DNS_Handler@length:
  1606                           	opt stack 0
  1607  0000B8                     TFTP_Handler@length:
  1608                           	opt stack 0
  1609                           
  1610                           ; 2 bytes @ 0x58
  1611  0000B8                     	ds	1
  1612  0000B9                     ICMP_Receive@ipv4Hdr:
  1613                           	opt stack 0
  1614                           
  1615                           ; 2 bytes @ 0x59
  1616  0000B9                     	ds	1
  1617  0000BA                     ??_DNS_Handler:
  1618  0000BA                     ??_DHCP_Handler:
  1619  0000BA                     ??_TFTP_Handler:
  1620  0000BA                     NTP_Handler@timeFractionalPart:
  1621                           	opt stack 0
  1622                           
  1623                           ; 4 bytes @ 0x5A
  1624  0000BA                     	ds	1
  1625  0000BB                     ??_ICMP_Receive:
  1626                           
  1627                           ; 1 bytes @ 0x5B
  1628  0000BB                     	ds	3
  1629  0000BE                     NTP_Handler@timeIntegralPart:
  1630                           	opt stack 0
  1631                           
  1632                           ; 4 bytes @ 0x5E
  1633  0000BE                     	ds	1
  1634  0000BF                     ICMP_Receive@ret:
  1635                           	opt stack 0
  1636                           
  1637                           ; 1 bytes @ 0x5F
  1638  0000BF                     	ds	1
  1639  0000C0                     ICMP_Receive@icmpHdr:
  1640                           	opt stack 0
  1641                           
  1642                           ; 4 bytes @ 0x60
  1643  0000C0                     	ds	3
  1644  0000C3                     DNS_Handler@authorityRR:
  1645                           	opt stack 0
  1646                           
  1647                           ; 2 bytes @ 0x63
  1648  0000C3                     	ds	2
  1649  0000C5                     DNS_Handler@ipAddress:
  1650                           	opt stack 0
  1651                           
  1652                           ; 4 bytes @ 0x65
  1653  0000C5                     	ds	4
  1654  0000C9                     DNS_Handler@ttl:
  1655                           	opt stack 0
  1656                           
  1657                           ; 4 bytes @ 0x69
  1658  0000C9                     	ds	1
  1659  0000CA                     TCP_Snd@data:
  1660                           	opt stack 0
  1661                           
  1662                           ; 2 bytes @ 0x6A
  1663  0000CA                     	ds	2
  1664  0000CC                     TCP_Snd@cksm:
  1665                           	opt stack 0
  1666                           
  1667                           ; 2 bytes @ 0x6C
  1668  0000CC                     	ds	1
  1669  0000CD                     DNS_Handler@v:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x6D
  1673  0000CD                     	ds	1
  1674  0000CE                     TCP_Snd@payloadLength:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x6E
  1678  0000CE                     	ds	1
  1679  0000CF                     DNS_Handler@type:
  1680                           	opt stack 0
  1681                           
  1682                           ; 2 bytes @ 0x6F
  1683  0000CF                     	ds	1
  1684  0000D0                     TCP_Snd@ret:
  1685                           	opt stack 0
  1686                           
  1687                           ; 1 bytes @ 0x70
  1688  0000D0                     	ds	1
  1689  0000D1                     DNS_Handler@nameLen:
  1690                           	opt stack 0
  1691  0000D1                     TCP_Snd@tcpDataLength:
  1692                           	opt stack 0
  1693                           
  1694                           ; 2 bytes @ 0x71
  1695  0000D1                     	ds	1
  1696  0000D2                     DNS_Handler@answer:
  1697                           	opt stack 0
  1698                           
  1699                           ; 2 bytes @ 0x72
  1700  0000D2                     	ds	1
  1701  0000D3                     TCP_Snd@txHeader:
  1702                           	opt stack 0
  1703                           
  1704                           ; 20 bytes @ 0x73
  1705  0000D3                     	ds	1
  1706  0000D4                     DNS_Handler@dataLength:
  1707                           	opt stack 0
  1708                           
  1709                           ; 2 bytes @ 0x74
  1710  0000D4                     	ds	2
  1711  0000D6                     DNS_Handler@dnsPtr:
  1712                           	opt stack 0
  1713                           
  1714                           ; 2 bytes @ 0x76
  1715  0000D6                     	ds	2
  1716  0000D8                     DNS_Handler@i:
  1717                           	opt stack 0
  1718                           
  1719                           ; 1 bytes @ 0x78
  1720  0000D8                     	ds	1
  1721  0000D9                     DNS_Handler@x:
  1722                           	opt stack 0
  1723                           
  1724                           ; 1 bytes @ 0x79
  1725  0000D9                     	ds	1
  1726  0000DA                     DNS_Handler@lock:
  1727                           	opt stack 0
  1728                           
  1729                           ; 1 bytes @ 0x7A
  1730  0000DA                     	ds	1
  1731  0000DB                     DNS_Handler@entryPointer:
  1732                           	opt stack 0
  1733                           
  1734                           ; 2 bytes @ 0x7B
  1735  0000DB                     	ds	2
  1736  0000DD                     UDP_Receive@udpcksm:
  1737                           	opt stack 0
  1738                           
  1739                           ; 2 bytes @ 0x7D
  1740  0000DD                     	ds	2
  1741  0000DF                     ??_UDP_Receive:
  1742                           
  1743                           ; 1 bytes @ 0x7F
  1744  0000DF                     	ds	4
  1745  0000E3                     UDP_Receive@ret:
  1746                           	opt stack 0
  1747                           
  1748                           ; 1 bytes @ 0x83
  1749  0000E3                     	ds	1
  1750  0000E4                     UDP_Receive@hptr:
  1751                           	opt stack 0
  1752                           
  1753                           ; 2 bytes @ 0x84
  1754  0000E4                     	ds	3
  1755  0000E7                     TCP_PayloadSave@len:
  1756                           	opt stack 0
  1757                           
  1758                           ; 2 bytes @ 0x87
  1759  0000E7                     	ds	2
  1760  0000E9                     ??_TCP_PayloadSave:
  1761                           
  1762                           ; 1 bytes @ 0x89
  1763  0000E9                     	ds	8
  1764  0000F1                     TCP_PayloadSave@ret:
  1765                           	opt stack 0
  1766                           
  1767                           ; 1 bytes @ 0x91
  1768  0000F1                     	ds	1
  1769  0000F2                     TCP_PayloadSave@buffer_size:
  1770                           	opt stack 0
  1771                           
  1772                           ; 2 bytes @ 0x92
  1773  0000F2                     	ds	2
  1774  0000F4                     ??_TCP_FiniteStateMachine:
  1775                           
  1776                           ; 1 bytes @ 0x94
  1777  0000F4                     	ds	8
  1778  0000FC                     ??_TCP_Update:
  1779  0000FC                     TCP_Recv@count:
  1780                           	opt stack 0
  1781                           
  1782                           ; 1 bytes @ 0x9C
  1783  0000FC                     	ds	1
  1784  0000FD                     TCP_Recv@tcbPtr:
  1785                           	opt stack 0
  1786                           
  1787                           ; 2 bytes @ 0x9D
  1788  0000FD                     	ds	3
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           postdec1	equ	0xFE5
  1796                           fsr1l	equ	0xFE1
  1797                           
  1798                           	psect	cstackCOMRAM
  1799  000001                     __pcstackCOMRAM:
  1800                           	opt stack 0
  1801  000001                     ??_INTERRUPT_InterruptManager:
  1802  000001                     
  1803                           ; 1 bytes @ 0x0
  1804  000001                     	ds	18
  1805  000013                     ??_ETH_Flush:
  1806  000013                     ??_ETH_SendQueued:
  1807  000013                     ??_isdigit:
  1808  000013                     ?_ETH_ReadBlock:
  1809                           	opt stack 0
  1810  000013                     ?_ARPV4_Lookup:
  1811                           	opt stack 0
  1812  000013                     ?_MAC_getAddress:
  1813                           	opt stack 0
  1814  000013                     ?_ETH_NewPacket:
  1815                           	opt stack 0
  1816  000013                     ?_udp_table_getIterator:
  1817                           	opt stack 0
  1818  000013                     ?_strlen:
  1819                           	opt stack 0
  1820  000013                     ?_memcmp:
  1821                           	opt stack 0
  1822  000013                     ?_strcmp:
  1823                           	opt stack 0
  1824  000013                     ?_ETH_Read16:
  1825                           	opt stack 0
  1826  000013                     ?_ETH_ComputeChecksum:
  1827                           	opt stack 0
  1828  000013                     ?_ETH_GetReadPtr:
  1829                           	opt stack 0
  1830  000013                     ?_ETH_GetByteCount:
  1831                           	opt stack 0
  1832  000013                     ?_IPV4_PseudoHeaderChecksum:
  1833                           	opt stack 0
  1834  000013                     ?_IPV4_GetStartPosition:
  1835                           	opt stack 0
  1836  000013                     ?_IPV4_GetDatagramLength:
  1837                           	opt stack 0
  1838  000013                     ?___wmul:
  1839                           	opt stack 0
  1840  000013                     ?_time:
  1841                           	opt stack 0
  1842  000013                     ?_ETH_Read32:
  1843                           	opt stack 0
  1844  000013                     ?___lldiv:
  1845                           	opt stack 0
  1846  000013                     PHY_WaitForBusy@ret:
  1847                           	opt stack 0
  1848  000013                     ETH_Read8@ret:
  1849                           	opt stack 0
  1850  000013                     ETH_Write8@data:
  1851                           	opt stack 0
  1852  000013                     ipdb_init@x:
  1853                           	opt stack 0
  1854  000013                     lfsr@lsb:
  1855                           	opt stack 0
  1856  000013                     ARPV4_Update@entryPointer:
  1857                           	opt stack 0
  1858  000013                     ETH_ReadBlock@buffer:
  1859                           	opt stack 0
  1860  000013                     ETH_Write16@data:
  1861                           	opt stack 0
  1862  000013                     ETH_WriteString@string:
  1863                           	opt stack 0
  1864  000013                     ETH_WriteBlock@buffer:
  1865                           	opt stack 0
  1866  000013                     ETH_Insert@data:
  1867                           	opt stack 0
  1868  000013                     ETH_Dump@length:
  1869                           	opt stack 0
  1870  000013                     ETH_ComputeChecksum@len:
  1871                           	opt stack 0
  1872  000013                     ETH_GetMAC@mac:
  1873                           	opt stack 0
  1874  000013                     ETH_PacketListReset@ptr:
  1875                           	opt stack 0
  1876  000013                     ETH_RemovePacket@packetHandle:
  1877                           	opt stack 0
  1878  000013                     IPV4_PseudoHeaderChecksum@payloadLen:
  1879                           	opt stack 0
  1880  000013                     rtcc_set@t:
  1881                           	opt stack 0
  1882  000013                     time@t:
  1883                           	opt stack 0
  1884  000013                     isPortUnreachable@port:
  1885                           	opt stack 0
  1886  000013                     TCB_Reset@tcbPtr:
  1887                           	opt stack 0
  1888  000013                     ___wmul@multiplier:
  1889                           	opt stack 0
  1890  000013                     memcmp@s1:
  1891                           	opt stack 0
  1892  000013                     memcpy@d1:
  1893                           	opt stack 0
  1894  000013                     memset@p1:
  1895                           	opt stack 0
  1896  000013                     strcmp@s1:
  1897                           	opt stack 0
  1898  000013                     strlen@s:
  1899                           	opt stack 0
  1900  000013                     TMR1_SetInterruptHandler@InterruptHandler:
  1901                           	opt stack 0
  1902  000013                     TMR0_SetInterruptHandler@InterruptHandler:
  1903                           	opt stack 0
  1904  000013                     ARPV4_Lookup@ip_address:
  1905                           	opt stack 0
  1906  000013                     ETH_Write32@data:
  1907                           	opt stack 0
  1908  000013                     Process_TFTP_Data@address:
  1909                           	opt stack 0
  1910  000013                     ___lldiv@dividend:
  1911                           	opt stack 0
  1912                           
  1913                           ; 4 bytes @ 0x12
  1914  000013                     	ds	1
  1915  000014                     PHY_WaitForBusy@timeout:
  1916                           	opt stack 0
  1917  000014                     ipdb_init@x_2014:
  1918                           	opt stack 0
  1919  000014                     _isdigit$4939:
  1920                           	opt stack 0
  1921  000014                     DHCP_WriteZeros@length:
  1922                           	opt stack 0
  1923                           
  1924                           ; 2 bytes @ 0x13
  1925  000014                     	ds	1
  1926  000015                     ??_ETH_NewPacket:
  1927  000015                     ??_strlen:
  1928  000015                     ??_ETH_GetByteCount:
  1929  000015                     ??_IPV4_PseudoHeaderChecksum:
  1930  000015                     ?_udp_table_nextEntry:
  1931                           	opt stack 0
  1932  000015                     ?_PHY_Read:
  1933                           	opt stack 0
  1934  000015                     ARPV4_Init@x:
  1935                           	opt stack 0
  1936  000015                     ARPV4_Update@x:
  1937                           	opt stack 0
  1938  000015                     rtcc_set@gie_val:
  1939                           	opt stack 0
  1940  000015                     isdigit@c:
  1941                           	opt stack 0
  1942  000015                     PHY_Write@data:
  1943                           	opt stack 0
  1944  000015                     ETH_Read16@ret:
  1945                           	opt stack 0
  1946  000015                     ETH_ReadBlock@length:
  1947                           	opt stack 0
  1948  000015                     ETH_WriteString@length:
  1949                           	opt stack 0
  1950  000015                     ETH_WriteBlock@length:
  1951                           	opt stack 0
  1952  000015                     ETH_Insert@len:
  1953                           	opt stack 0
  1954  000015                     ETH_ComputeChecksum@seed:
  1955                           	opt stack 0
  1956  000015                     ETH_SetReadPtr@rdptr:
  1957                           	opt stack 0
  1958  000015                     ETH_PacketListReset@index:
  1959                           	opt stack 0
  1960  000015                     udp_table_nextEntry@i:
  1961                           	opt stack 0
  1962  000015                     ___wmul@multiplicand:
  1963                           	opt stack 0
  1964  000015                     memcmp@s2:
  1965                           	opt stack 0
  1966  000015                     memcpy@s1:
  1967                           	opt stack 0
  1968  000015                     memset@c:
  1969                           	opt stack 0
  1970  000015                     strcmp@s2:
  1971                           	opt stack 0
  1972                           
  1973                           ; 2 bytes @ 0x14
  1974  000015                     	ds	1
  1975  000016                     ??_TMR0_Initialize:
  1976  000016                     
  1977                           ; 1 bytes @ 0x15
  1978  000016                     	ds	1
  1979  000017                     ??_ETH_Send:
  1980  000017                     ??_strcmp:
  1981  000017                     ??_ETH_ComputeChecksum:
  1982  000017                     ??_TCP_ParseTCPOptions:
  1983  000017                     PHY_Write@reg:
  1984                           	opt stack 0
  1985  000017                     ETH_NewPacket@index:
  1986                           	opt stack 0
  1987  000017                     time@gie_val:
  1988                           	opt stack 0
  1989  000017                     ETH_ReadBlock@len:
  1990                           	opt stack 0
  1991  000017                     ETH_WriteBlock@p:
  1992                           	opt stack 0
  1993  000017                     ETH_Insert@offset:
  1994                           	opt stack 0
  1995  000017                     ETH_RemovePacket@pPacket:
  1996                           	opt stack 0
  1997  000017                     udp_table_nextEntry@j:
  1998                           	opt stack 0
  1999  000017                     Process_TFTP_Data@data:
  2000                           	opt stack 0
  2001  000017                     ___wmul@product:
  2002                           	opt stack 0
  2003  000017                     memcmp@n:
  2004                           	opt stack 0
  2005  000017                     memcpy@n:
  2006                           	opt stack 0
  2007  000017                     memset@n:
  2008                           	opt stack 0
  2009  000017                     strlen@cp:
  2010                           	opt stack 0
  2011  000017                     ETH_Read32@ret:
  2012                           	opt stack 0
  2013  000017                     ___lldiv@divisor:
  2014                           	opt stack 0
  2015                           
  2016                           ; 4 bytes @ 0x16
  2017  000017                     	ds	1
  2018  000018                     PHY_Write@GIESave:
  2019                           	opt stack 0
  2020  000018                     strcmp@r:
  2021                           	opt stack 0
  2022  000018                     time@the_time:
  2023                           	opt stack 0
  2024                           
  2025                           ; 4 bytes @ 0x17
  2026  000018                     	ds	1
  2027  000019                     ??_ETH_Shift_Tx_Packets:
  2028  000019                     ??_memcmp:
  2029  000019                     ??_ETH_Insert:
  2030  000019                     ?_atoi:
  2031                           	opt stack 0
  2032  000019                     PHY_Read@reg:
  2033                           	opt stack 0
  2034  000019                     TCP_ParseTCPOptions@ret:
  2035                           	opt stack 0
  2036  000019                     memcpy@tmp:
  2037                           	opt stack 0
  2038  000019                     ETH_ReadBlock@p:
  2039                           	opt stack 0
  2040  000019                     ETH_Copy@len:
  2041                           	opt stack 0
  2042  000019                     Process_TFTP_Data@length:
  2043                           	opt stack 0
  2044  000019                     atoi@s:
  2045                           	opt stack 0
  2046  000019                     memset@p:
  2047                           	opt stack 0
  2048                           
  2049                           ; 2 bytes @ 0x18
  2050  000019                     	ds	1
  2051  00001A                     TCP_ParseTCPOptions@opt:
  2052                           	opt stack 0
  2053  00001A                     memcpy@d:
  2054                           	opt stack 0
  2055  00001A                     PHY_Read@ret:
  2056                           	opt stack 0
  2057                           
  2058                           ; 4 bytes @ 0x19
  2059  00001A                     	ds	1
  2060  00001B                     ??_atoi:
  2061  00001B                     Process_TFTP_Data@i:
  2062                           	opt stack 0
  2063  00001B                     ARPV4_Lookup@entry_pointer:
  2064                           	opt stack 0
  2065  00001B                     ETH_Send@packetEnd:
  2066                           	opt stack 0
  2067  00001B                     ETH_Insert@current_tx_ptr:
  2068                           	opt stack 0
  2069  00001B                     ETH_Copy@timer:
  2070                           	opt stack 0
  2071  00001B                     TCP_ParseTCPOptions@tcpOptionsSize:
  2072                           	opt stack 0
  2073  00001B                     ___lldiv@quotient:
  2074                           	opt stack 0
  2075                           
  2076                           ; 4 bytes @ 0x1A
  2077  00001B                     	ds	1
  2078  00001C                     Process_TFTP_Data@hptr:
  2079                           	opt stack 0
  2080  00001C                     memcpy@s:
  2081                           	opt stack 0
  2082                           
  2083                           ; 2 bytes @ 0x1B
  2084  00001C                     	ds	1
  2085  00001D                     ARPV4_Lookup@x:
  2086                           	opt stack 0
  2087  00001D                     atoi@sign:
  2088                           	opt stack 0
  2089  00001D                     ETH_Copy@tmp_len:
  2090                           	opt stack 0
  2091  00001D                     ETH_Shift_Tx_Packets@shiftOffset:
  2092                           	opt stack 0
  2093  00001D                     IPV4_PseudoHeaderChecksum@v:
  2094                           	opt stack 0
  2095                           
  2096                           ; 2 bytes @ 0x1C
  2097  00001D                     	ds	1
  2098  00001E                     atoi@a:
  2099                           	opt stack 0
  2100  00001E                     ETH_CheckLinkUp@value:
  2101                           	opt stack 0
  2102                           
  2103                           ; 4 bytes @ 0x1D
  2104  00001E                     	ds	1
  2105  00001F                     IPV4_PseudoHeaderChecksum@len:
  2106                           	opt stack 0
  2107  00001F                     ___lldiv@counter:
  2108                           	opt stack 0
  2109  00001F                     ETH_Shift_Tx_Packets@timer:
  2110                           	opt stack 0
  2111  00001F                     ETH_ComputeChecksum@cksm:
  2112                           	opt stack 0
  2113                           
  2114                           ; 4 bytes @ 0x1E
  2115  00001F                     	ds	1
  2116  000020                     ?___llmod:
  2117                           	opt stack 0
  2118  000020                     IPV4_PseudoHeaderChecksum@cksm:
  2119                           	opt stack 0
  2120  000020                     ___llmod@dividend:
  2121                           	opt stack 0
  2122                           
  2123                           ; 4 bytes @ 0x1F
  2124  000020                     	ds	1
  2125  000021                     ETH_Shift_Tx_Packets@len:
  2126                           	opt stack 0
  2127                           
  2128                           ; 2 bytes @ 0x20
  2129  000021                     	ds	1
  2130  000022                     
  2131                           ; 1 bytes @ 0x21
  2132  000022                     	ds	1
  2133  000023                     ETH_Shift_Tx_Packets@pElem:
  2134                           	opt stack 0
  2135  000023                     ETH_ComputeChecksum@v:
  2136                           	opt stack 0
  2137                           
  2138                           ; 2 bytes @ 0x22
  2139  000023                     	ds	1
  2140  000024                     ___llmod@divisor:
  2141                           	opt stack 0
  2142  000024                     IPV4_PseudoHeaderChecksum@tmp:
  2143                           	opt stack 0
  2144                           
  2145                           ; 12 bytes @ 0x23
  2146  000024                     	ds	1
  2147  000025                     ?_ETH_TxComputeChecksum:
  2148                           	opt stack 0
  2149  000025                     ?_ETH_RxComputeChecksum:
  2150                           	opt stack 0
  2151  000025                     ETH_WriteStart@dest_mac:
  2152                           	opt stack 0
  2153  000025                     ETH_TxComputeChecksum@position:
  2154                           	opt stack 0
  2155  000025                     ETH_RxComputeChecksum@len:
  2156                           	opt stack 0
  2157                           
  2158                           ; 2 bytes @ 0x24
  2159  000025                     	ds	2
  2160  000027                     ETH_WriteStart@type:
  2161                           	opt stack 0
  2162  000027                     ETH_TxComputeChecksum@len:
  2163                           	opt stack 0
  2164  000027                     ETH_RxComputeChecksum@seed:
  2165                           	opt stack 0
  2166                           
  2167                           ; 2 bytes @ 0x26
  2168  000027                     	ds	1
  2169  000028                     ___llmod@counter:
  2170                           	opt stack 0
  2171                           
  2172                           ; 1 bytes @ 0x27
  2173  000028                     	ds	1
  2174  000029                     ??_ETH_WriteStart:
  2175  000029                     ??_ETH_RxComputeChecksum:
  2176  000029                     ?__doprnt:
  2177                           	opt stack 0
  2178  000029                     ETH_TxComputeChecksum@seed:
  2179                           	opt stack 0
  2180  000029                     __doprnt@pb:
  2181                           	opt stack 0
  2182                           
  2183                           ; 2 bytes @ 0x28
  2184  000029                     	ds	2
  2185  00002B                     ??_ETH_TxComputeChecksum:
  2186  00002B                     ETH_WriteStart@ethPacket:
  2187                           	opt stack 0
  2188  00002B                     __doprnt@f:
  2189                           	opt stack 0
  2190                           
  2191                           ; 2 bytes @ 0x2A
  2192  00002B                     	ds	2
  2193  00002D                     ETH_RxComputeChecksum@rxptr:
  2194                           	opt stack 0
  2195  00002D                     __doprnt@ap:
  2196                           	opt stack 0
  2197  00002D                     ARPV4_Request@destAddress:
  2198                           	opt stack 0
  2199                           
  2200                           ; 4 bytes @ 0x2C
  2201  00002D                     	ds	2
  2202  00002F                     ??__doprnt:
  2203  00002F                     ETH_RxComputeChecksum@cksm:
  2204                           	opt stack 0
  2205                           
  2206                           ; 4 bytes @ 0x2E
  2207  00002F                     	ds	2
  2208  000031                     IPv4_Start@destAddress:
  2209                           	opt stack 0
  2210                           
  2211                           ; 4 bytes @ 0x30
  2212  000031                     	ds	2
  2213  000033                     printf@ap:
  2214                           	opt stack 0
  2215                           
  2216                           ; 2 bytes @ 0x32
  2217  000033                     	ds	2
  2218  000035                     IPv4_Start@protocol:
  2219                           	opt stack 0
  2220  000035                     printf@pb:
  2221                           	opt stack 0
  2222                           
  2223                           ; 5 bytes @ 0x34
  2224  000035                     	ds	1
  2225  000036                     UDP_Start@ret:
  2226                           	opt stack 0
  2227                           
  2228                           ; 1 bytes @ 0x35
  2229  000036                     	ds	1
  2230  000037                     IPV4_Send@payloadLength:
  2231                           	opt stack 0
  2232                           
  2233                           ; 2 bytes @ 0x36
  2234  000037                     	ds	2
  2235  000039                     sendRequest@started:
  2236                           	opt stack 0
  2237                           
  2238                           ; 1 bytes @ 0x38
  2239  000039                     	ds	1
  2240  00003A                     sendRequest@type:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0x39
  2244  00003A                     	ds	1
  2245  00003B                     tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1l	equ	0xFE1
  2253                           
  2254                           ; 1 bytes @ 0x3A
  2255 ;;
  2256 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2257 ;;
  2258 ;; *************** function _main *****************
  2259 ;; Defined at:
  2260 ;;		line 51 in file "main.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels required when called:   17
  2280 ;; This function calls:
  2281 ;;		_Network_Manage
  2282 ;;		_SYSTEM_Initialize
  2283 ;; This function is called by:
  2284 ;;		Startup code after reset
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text0
  2289  016E4A                     __ptext0:
  2290                           	opt stack 0
  2291  016E4A                     _main:
  2292                           	opt stack 14
  2293                           
  2294                           ;main.c: 54: SYSTEM_Initialize();
  2295                           
  2296                           ;incstack = 0
  2297  016E4A  ECCF  F0B5         	call	_SYSTEM_Initialize	;wreg free
  2298                           
  2299                           ;main.c: 73: (INTCONbits.GIE = 1);
  2300  016E4E  8EF2               	bsf	intcon,7,c	;volatile
  2301                           
  2302                           ;main.c: 79: (INTCONbits.PEIE = 1);
  2303  016E50  8CF2               	bsf	intcon,6,c	;volatile
  2304  016E52                     
  2305                           ;main.c: 84: {
  2306                           ;main.c: 85: Network_Manage();
  2307  016E52  EC94  F0AF         	call	_Network_Manage	;wreg free
  2308                           
  2309                           ;main.c: 87: }
  2310  016E56  D7FD               	goto	l2034
  2311  016E58                     __end_of_main:
  2312                           	opt stack 0
  2313                           tblptru	equ	0xFF8
  2314                           tblptrh	equ	0xFF7
  2315                           tblptrl	equ	0xFF6
  2316                           tablat	equ	0xFF5
  2317                           intcon	equ	0xFF2
  2318                           postinc0	equ	0xFEE
  2319                           wreg	equ	0xFE8
  2320                           postdec1	equ	0xFE5
  2321                           fsr1l	equ	0xFE1
  2322                           
  2323 ;; *************** function _SYSTEM_Initialize *****************
  2324 ;; Defined at:
  2325 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    9
  2346 ;; This function calls:
  2347 ;;		_ADC_Initialize
  2348 ;;		_ECCP1_Initialize
  2349 ;;		_INTERRUPT_Initialize
  2350 ;;		_Network_Init
  2351 ;;		_OSCILLATOR_Initialize
  2352 ;;		_PIN_MANAGER_Initialize
  2353 ;;		_SPI1_Initialize
  2354 ;;		_TMR0_Initialize
  2355 ;;		_TMR1_Initialize
  2356 ;;		_TMR2_Initialize
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text1
  2363  016B9E                     __ptext1:
  2364                           	opt stack 0
  2365  016B9E                     _SYSTEM_Initialize:
  2366                           	opt stack 21
  2367                           
  2368                           ;mcc.c: 74: INTERRUPT_Initialize();
  2369                           
  2370                           ;incstack = 0
  2371  016B9E  EC9D  F0B7         	call	_INTERRUPT_Initialize	;wreg free
  2372                           
  2373                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  2374  016BA2  EC29  F0B4         	call	_PIN_MANAGER_Initialize	;wreg free
  2375                           
  2376                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2377  016BA6  EC62  F0B7         	call	_OSCILLATOR_Initialize	;wreg free
  2378                           
  2379                           ;mcc.c: 77: SPI1_Initialize();
  2380  016BAA  EC33  F0B7         	call	_SPI1_Initialize	;wreg free
  2381                           
  2382                           ;mcc.c: 78: ECCP1_Initialize();
  2383  016BAE  ECF7  F0B6         	call	_ECCP1_Initialize	;wreg free
  2384                           
  2385                           ;mcc.c: 79: ADC_Initialize();
  2386  016BB2  EC02  F0B7         	call	_ADC_Initialize	;wreg free
  2387                           
  2388                           ;mcc.c: 80: TMR2_Initialize();
  2389  016BB6  EC0D  F0B7         	call	_TMR2_Initialize	;wreg free
  2390                           
  2391                           ;mcc.c: 81: TMR1_Initialize();
  2392  016BBA  ECE4  F0B5         	call	_TMR1_Initialize	;wreg free
  2393                           
  2394                           ;mcc.c: 82: TMR0_Initialize();
  2395  016BBE  ECC1  F0B4         	call	_TMR0_Initialize	;wreg free
  2396                           
  2397                           ;mcc.c: 83: Network_Init();
  2398  016BC2  EC93  F0B6         	call	_Network_Init	;wreg free
  2399  016BC6  0012               	return		;funcret
  2400  016BC8                     __end_of_SYSTEM_Initialize:
  2401                           	opt stack 0
  2402                           tblptru	equ	0xFF8
  2403                           tblptrh	equ	0xFF7
  2404                           tblptrl	equ	0xFF6
  2405                           tablat	equ	0xFF5
  2406                           intcon	equ	0xFF2
  2407                           postinc0	equ	0xFEE
  2408                           wreg	equ	0xFE8
  2409                           postdec1	equ	0xFE5
  2410                           fsr1l	equ	0xFE1
  2411                           
  2412 ;; *************** function _TMR2_Initialize *****************
  2413 ;; Defined at:
  2414 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    4
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_SYSTEM_Initialize
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text2
  2443  016E1A                     __ptext2:
  2444                           	opt stack 0
  2445  016E1A                     _TMR2_Initialize:
  2446                           	opt stack 25
  2447                           
  2448                           ;tmr2.c: 66: PR2 = 0x67;
  2449                           
  2450                           ;incstack = 0
  2451  016E1A  0E67               	movlw	103
  2452  016E1C  6ECB               	movwf	4043,c	;volatile
  2453                           
  2454                           ;tmr2.c: 69: TMR2 = 0x00;
  2455  016E1E  0E00               	movlw	0
  2456  016E20  6ECC               	movwf	4044,c	;volatile
  2457                           
  2458                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  2459  016E22  929E               	bcf	3998,1,c	;volatile
  2460                           
  2461                           ;tmr2.c: 75: T2CON = 0x05;
  2462  016E24  0E05               	movlw	5
  2463  016E26  6ECA               	movwf	4042,c	;volatile
  2464  016E28  0012               	return		;funcret
  2465  016E2A                     __end_of_TMR2_Initialize:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           intcon	equ	0xFF2
  2472                           postinc0	equ	0xFEE
  2473                           wreg	equ	0xFE8
  2474                           postdec1	equ	0xFE5
  2475                           fsr1l	equ	0xFE1
  2476                           
  2477 ;; *************** function _TMR1_Initialize *****************
  2478 ;; Defined at:
  2479 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    5
  2500 ;; This function calls:
  2501 ;;		_TMR1_SetInterruptHandler
  2502 ;; This function is called by:
  2503 ;;		_SYSTEM_Initialize
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text3
  2508  016BC8                     __ptext3:
  2509                           	opt stack 0
  2510  016BC8                     _TMR1_Initialize:
  2511                           	opt stack 24
  2512                           
  2513                           ;tmr1.c: 68: TMR1H = 0x01;
  2514                           
  2515                           ;incstack = 0
  2516  016BC8  0E01               	movlw	1
  2517  016BCA  6ECF               	movwf	4047,c	;volatile
  2518                           
  2519                           ;tmr1.c: 71: TMR1L = 0xB0;
  2520  016BCC  0EB0               	movlw	176
  2521  016BCE  6ECE               	movwf	4046,c	;volatile
  2522                           
  2523                           ;tmr1.c: 74: timer1ReloadVal=TMR1;
  2524  016BD0  CFCE F04B          	movff	4046,_timer1ReloadVal	;volatile
  2525  016BD4  CFCF F04C          	movff	4047,_timer1ReloadVal+1	;volatile
  2526                           
  2527                           ;tmr1.c: 77: PIR1bits.TMR1IF = 0;
  2528  016BD8  909E               	bcf	3998,0,c	;volatile
  2529                           
  2530                           ;tmr1.c: 80: PIE1bits.TMR1IE = 1;
  2531  016BDA  809D               	bsf	3997,0,c	;volatile
  2532                           
  2533                           ;tmr1.c: 83: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2534  016BDC  0E42               	movlw	low _TMR1_DefaultInterruptHandler
  2535  016BDE  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2536  016BE0  0E6F               	movlw	high _TMR1_DefaultInterruptHandler
  2537  016BE2  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2538  016BE4  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
  2539  016BE6  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler+2,c
  2540  016BE8  EC3A  F0B7         	call	_TMR1_SetInterruptHandler	;wreg free
  2541                           
  2542                           ;tmr1.c: 86: T1CON = 0x31;
  2543  016BEC  0E31               	movlw	49
  2544  016BEE  6ECD               	movwf	4045,c	;volatile
  2545  016BF0  0012               	return		;funcret
  2546  016BF2                     __end_of_TMR1_Initialize:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           intcon	equ	0xFF2
  2553                           postinc0	equ	0xFEE
  2554                           wreg	equ	0xFE8
  2555                           postdec1	equ	0xFE5
  2556                           fsr1l	equ	0xFE1
  2557                           
  2558 ;; *************** function _TMR0_Initialize *****************
  2559 ;; Defined at:
  2560 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;Total ram usage:        2 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:    5
  2581 ;; This function calls:
  2582 ;;		_TMR0_SetInterruptHandler
  2583 ;; This function is called by:
  2584 ;;		_SYSTEM_Initialize
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text4
  2589  016982                     __ptext4:
  2590                           	opt stack 0
  2591  016982                     _TMR0_Initialize:
  2592                           	opt stack 24
  2593                           
  2594                           ;tmr0.c: 71: TMR0H = 0xD7;
  2595                           
  2596                           ;incstack = 0
  2597  016982  0ED7               	movlw	215
  2598  016984  6ED7               	movwf	4055,c	;volatile
  2599                           
  2600                           ;tmr0.c: 74: TMR0L = 0x4E;
  2601  016986  0E4E               	movlw	78
  2602  016988  6ED6               	movwf	4054,c	;volatile
  2603                           
  2604                           ;tmr0.c: 78: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  2605  01698A  50D6               	movf	4054,w,c	;volatile
  2606  01698C  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  2607  016990  6A17               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2608  016992  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2609  016996  6A16               	clrf	??_TMR0_Initialize,c
  2610  016998  1016               	iorwf	??_TMR0_Initialize,w,c
  2611  01699A  6E49               	movwf	_timer0ReloadVal,c	;volatile
  2612  01699C  5017               	movf	??_TMR0_Initialize+1,w,c
  2613  01699E  6E4A               	movwf	_timer0ReloadVal+1,c	;volatile
  2614                           
  2615                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  2616  0169A0  94F2               	bcf	intcon,2,c	;volatile
  2617                           
  2618                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  2619  0169A2  8AF2               	bsf	intcon,5,c	;volatile
  2620                           
  2621                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2622  0169A4  0E44               	movlw	low _TMR0_DefaultInterruptHandler
  2623  0169A6  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  2624  0169A8  0E6F               	movlw	high _TMR0_DefaultInterruptHandler
  2625  0169AA  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  2626  0169AC  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  2627  0169AE  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler+2,c
  2628  0169B0  EC2C  F0B7         	call	_TMR0_SetInterruptHandler	;wreg free
  2629                           
  2630                           ;tmr0.c: 90: T0CON = 0x9F;
  2631  0169B4  0E9F               	movlw	159
  2632  0169B6  6ED5               	movwf	4053,c	;volatile
  2633  0169B8  0012               	return		;funcret
  2634  0169BA                     __end_of_TMR0_Initialize:
  2635                           	opt stack 0
  2636                           tblptru	equ	0xFF8
  2637                           tblptrh	equ	0xFF7
  2638                           tblptrl	equ	0xFF6
  2639                           tablat	equ	0xFF5
  2640                           intcon	equ	0xFF2
  2641                           postinc0	equ	0xFEE
  2642                           wreg	equ	0xFE8
  2643                           postdec1	equ	0xFE5
  2644                           fsr1l	equ	0xFE1
  2645                           
  2646 ;; *************** function _TMR0_SetInterruptHandler *****************
  2647 ;; Defined at:
  2648 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  InterruptHan    3   18[COMRAM] PTR FTN()void 
  2651 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2663 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;Total ram usage:        3 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    4
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_TMR0_Initialize
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text5
  2678  016E58                     __ptext5:
  2679                           	opt stack 0
  2680  016E58                     _TMR0_SetInterruptHandler:
  2681                           	opt stack 24
  2682                           
  2683                           ;tmr0.c: 153: TMR0_InterruptHandler = InterruptHandler;
  2684                           
  2685                           ;incstack = 0
  2686  016E58  C013  F3F0         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2687  016E5C  C014  F3F1         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2688  016E60  C015  F3F2         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  2689  016E64  0012               	return		;funcret
  2690  016E66                     __end_of_TMR0_SetInterruptHandler:
  2691                           	opt stack 0
  2692                           tblptru	equ	0xFF8
  2693                           tblptrh	equ	0xFF7
  2694                           tblptrl	equ	0xFF6
  2695                           tablat	equ	0xFF5
  2696                           intcon	equ	0xFF2
  2697                           postinc0	equ	0xFEE
  2698                           wreg	equ	0xFE8
  2699                           postdec1	equ	0xFE5
  2700                           fsr1l	equ	0xFE1
  2701                           
  2702 ;; *************** function _SPI1_Initialize *****************
  2703 ;; Defined at:
  2704 ;;		line 63 in file "mcc_generated_files/spi1.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    4
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_SYSTEM_Initialize
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text6
  2733  016E66                     __ptext6:
  2734                           	opt stack 0
  2735  016E66                     _SPI1_Initialize:
  2736                           	opt stack 25
  2737                           
  2738                           ;spi1.c: 68: SSP1STAT = 0x80;
  2739                           
  2740                           ;incstack = 0
  2741  016E66  0E80               	movlw	128
  2742  016E68  6EC7               	movwf	4039,c	;volatile
  2743                           
  2744                           ;spi1.c: 71: SSP1CON1 = 0x21;
  2745  016E6A  0E21               	movlw	33
  2746  016E6C  6EC6               	movwf	4038,c	;volatile
  2747                           
  2748                           ;spi1.c: 74: SSP1ADD = 0x00;
  2749  016E6E  0E00               	movlw	0
  2750  016E70  6EC8               	movwf	4040,c	;volatile
  2751  016E72  0012               	return		;funcret
  2752  016E74                     __end_of_SPI1_Initialize:
  2753                           	opt stack 0
  2754                           tblptru	equ	0xFF8
  2755                           tblptrh	equ	0xFF7
  2756                           tblptrl	equ	0xFF6
  2757                           tablat	equ	0xFF5
  2758                           intcon	equ	0xFF2
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1l	equ	0xFE1
  2763                           
  2764 ;; *************** function _PIN_MANAGER_Initialize *****************
  2765 ;; Defined at:
  2766 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    4
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_SYSTEM_Initialize
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text7
  2795  016852                     __ptext7:
  2796                           	opt stack 0
  2797  016852                     _PIN_MANAGER_Initialize:
  2798                           	opt stack 25
  2799                           
  2800                           ;pin_manager.c: 56: LATE = 0x18;
  2801                           
  2802                           ;incstack = 0
  2803  016852  0E18               	movlw	24
  2804  016854  6E8D               	movwf	3981,c	;volatile
  2805                           
  2806                           ;pin_manager.c: 57: LATD = 0x00;
  2807  016856  0E00               	movlw	0
  2808  016858  6E8C               	movwf	3980,c	;volatile
  2809                           
  2810                           ;pin_manager.c: 58: LATA = 0x00;
  2811  01685A  0E00               	movlw	0
  2812  01685C  6E89               	movwf	3977,c	;volatile
  2813                           
  2814                           ;pin_manager.c: 59: LATF = 0x00;
  2815  01685E  0E00               	movlw	0
  2816  016860  6E8E               	movwf	3982,c	;volatile
  2817                           
  2818                           ;pin_manager.c: 60: LATB = 0x00;
  2819  016862  0E00               	movlw	0
  2820  016864  6E8A               	movwf	3978,c	;volatile
  2821                           
  2822                           ;pin_manager.c: 61: LATG = 0x00;
  2823  016866  0E00               	movlw	0
  2824  016868  6E8F               	movwf	3983,c	;volatile
  2825                           
  2826                           ;pin_manager.c: 62: LATC = 0x01;
  2827  01686A  0E01               	movlw	1
  2828  01686C  6E8B               	movwf	3979,c	;volatile
  2829                           
  2830                           ;pin_manager.c: 67: TRISE = 0x00;
  2831  01686E  0E00               	movlw	0
  2832  016870  6E96               	movwf	3990,c	;volatile
  2833                           
  2834                           ;pin_manager.c: 68: TRISF = 0x7E;
  2835  016872  0E7E               	movlw	126
  2836  016874  6E97               	movwf	3991,c	;volatile
  2837                           
  2838                           ;pin_manager.c: 69: TRISA = 0x2C;
  2839  016876  0E2C               	movlw	44
  2840  016878  6E92               	movwf	3986,c	;volatile
  2841                           
  2842                           ;pin_manager.c: 70: TRISG = 0x00;
  2843  01687A  0E00               	movlw	0
  2844  01687C  6E98               	movwf	3992,c	;volatile
  2845                           
  2846                           ;pin_manager.c: 71: TRISB = 0xDF;
  2847  01687E  0EDF               	movlw	223
  2848  016880  6E93               	movwf	3987,c	;volatile
  2849                           
  2850                           ;pin_manager.c: 72: TRISC = 0x90;
  2851  016882  0E90               	movlw	144
  2852  016884  6E94               	movwf	3988,c	;volatile
  2853                           
  2854                           ;pin_manager.c: 73: TRISD = 0x00;
  2855  016886  0E00               	movlw	0
  2856  016888  6E95               	movwf	3989,c	;volatile
  2857                           
  2858                           ;pin_manager.c: 78: ADCON1bits.PCFG = 0x03;
  2859  01688A  50C1               	movf	4033,w,c	;volatile
  2860  01688C  0BF0               	andlw	-16
  2861  01688E  0903               	iorlw	3
  2862  016890  6EC1               	movwf	4033,c	;volatile
  2863  016892  0012               	return		;funcret
  2864  016894                     __end_of_PIN_MANAGER_Initialize:
  2865                           	opt stack 0
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           intcon	equ	0xFF2
  2871                           postinc0	equ	0xFEE
  2872                           wreg	equ	0xFE8
  2873                           postdec1	equ	0xFE5
  2874                           fsr1l	equ	0xFE1
  2875                           
  2876 ;; *************** function _OSCILLATOR_Initialize *****************
  2877 ;; Defined at:
  2878 ;;		line 86 in file "mcc_generated_files/mcc.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    4
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_SYSTEM_Initialize
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text8
  2907  016EC4                     __ptext8:
  2908                           	opt stack 0
  2909  016EC4                     _OSCILLATOR_Initialize:
  2910                           	opt stack 25
  2911                           
  2912                           ;mcc.c: 89: OSCCON = 0x02;
  2913                           
  2914                           ;incstack = 0
  2915  016EC4  0E02               	movlw	2
  2916  016EC6  6ED3               	movwf	4051,c	;volatile
  2917                           
  2918                           ;mcc.c: 91: OSCTUNE = 0x40;
  2919  016EC8  0E40               	movlw	64
  2920  016ECA  6E9B               	movwf	3995,c	;volatile
  2921  016ECC  0012               	return		;funcret
  2922  016ECE                     __end_of_OSCILLATOR_Initialize:
  2923                           	opt stack 0
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           intcon	equ	0xFF2
  2929                           postinc0	equ	0xFEE
  2930                           wreg	equ	0xFE8
  2931                           postdec1	equ	0xFE5
  2932                           fsr1l	equ	0xFE1
  2933                           
  2934 ;; *************** function _Network_Init *****************
  2935 ;; Defined at:
  2936 ;;		line 55 in file "mcc_generated_files/TCPIPLibrary/network.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    8
  2957 ;; This function calls:
  2958 ;;		_ARPV4_Init
  2959 ;;		_DHCP_init
  2960 ;;		_ETH_Init
  2961 ;;		_IPV4_Init
  2962 ;;		_Network_WaitForLink
  2963 ;;		_TCP_Init
  2964 ;;		_rtcc_init
  2965 ;;		_timersInit
  2966 ;; This function is called by:
  2967 ;;		_SYSTEM_Initialize
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text9
  2972  016D26                     __ptext9:
  2973                           	opt stack 0
  2974  016D26                     _Network_Init:
  2975                           	opt stack 21
  2976                           
  2977                           ;network.c: 57: ETH_Init();
  2978                           
  2979                           ;incstack = 0
  2980  016D26  EC3C  F09D         	call	_ETH_Init	;wreg free
  2981                           
  2982                           ;network.c: 58: ARPV4_Init();
  2983  016D2A  EC14  F0B5         	call	_ARPV4_Init	;wreg free
  2984                           
  2985                           ;network.c: 59: IPV4_Init();
  2986  016D2E  EC97  F0B7         	call	_IPV4_Init	;wreg free
  2987                           
  2988                           ;network.c: 60: DHCP_init();
  2989  016D32  EC9F  F0B7         	call	_DHCP_init	;wreg free
  2990                           
  2991                           ;network.c: 61: TCP_Init();
  2992  016D36  ECF9  F0B5         	call	_TCP_Init	;wreg free
  2993                           
  2994                           ;network.c: 62: rtcc_init();
  2995  016D3A  EC5D  F0B6         	call	_rtcc_init	;wreg free
  2996                           
  2997                           ;network.c: 63: Network_WaitForLink();
  2998  016D3E  EC56  F0B7         	call	_Network_WaitForLink	;wreg free
  2999                           
  3000                           ;network.c: 64: timersInit();
  3001  016D42  ECC3  F0B6         	call	_timersInit	;wreg free
  3002  016D46  0012               	return		;funcret
  3003  016D48                     __end_of_Network_Init:
  3004                           	opt stack 0
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           intcon	equ	0xFF2
  3010                           postinc0	equ	0xFEE
  3011                           wreg	equ	0xFE8
  3012                           postdec1	equ	0xFE5
  3013                           fsr1l	equ	0xFE1
  3014                           
  3015 ;; *************** function _timersInit *****************
  3016 ;; Defined at:
  3017 ;;		line 67 in file "mcc_generated_files/TCPIPLibrary/network.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;Total ram usage:        0 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    5
  3038 ;; This function calls:
  3039 ;;		_time
  3040 ;; This function is called by:
  3041 ;;		_Network_Init
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text10
  3046  016D86                     __ptext10:
  3047                           	opt stack 0
  3048  016D86                     _timersInit:
  3049                           	opt stack 23
  3050                           
  3051                           ;network.c: 69: time(&arpTimer);
  3052                           
  3053                           ;incstack = 0
  3054  016D86  0E89               	movlw	low _arpTimer
  3055  016D88  6E13               	movwf	time@t,c
  3056  016D8A  0E02               	movlw	high _arpTimer
  3057  016D8C  6E14               	movwf	time@t+1,c
  3058  016D8E  ECCA  F0B2         	call	_time	;wreg free
  3059                           
  3060                           ;network.c: 70: arpTimer += 10;
  3061  016D92  0E0A               	movlw	10
  3062  016D94  0102               	movlb	2	; () banked
  3063  016D96  2789               	addwf	_arpTimer& (0+255),f,b
  3064  016D98  0E00               	movlw	0
  3065  016D9A  238A               	addwfc	(_arpTimer+1)& (0+255),f,b
  3066  016D9C  238B               	addwfc	(_arpTimer+2)& (0+255),f,b
  3067  016D9E  238C               	addwfc	(_arpTimer+3)& (0+255),f,b
  3068                           
  3069                           ; BSR set to: 2
  3070  016DA0  0012               	return		;funcret
  3071  016DA2                     __end_of_timersInit:
  3072                           	opt stack 0
  3073                           tblptru	equ	0xFF8
  3074                           tblptrh	equ	0xFF7
  3075                           tblptrl	equ	0xFF6
  3076                           tablat	equ	0xFF5
  3077                           intcon	equ	0xFF2
  3078                           postinc0	equ	0xFEE
  3079                           wreg	equ	0xFE8
  3080                           postdec1	equ	0xFE5
  3081                           fsr1l	equ	0xFE1
  3082                           
  3083 ;; *************** function _rtcc_init *****************
  3084 ;; Defined at:
  3085 ;;		line 62 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    5
  3106 ;; This function calls:
  3107 ;;		_TMR1_SetInterruptHandler
  3108 ;; This function is called by:
  3109 ;;		_Network_Init
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text11
  3114  016CBA                     __ptext11:
  3115                           	opt stack 0
  3116  016CBA                     _rtcc_init:
  3117                           	opt stack 23
  3118                           
  3119                           ;rtcc.c: 64: device_time = 1293861600;
  3120                           
  3121                           ; BSR set to: 2
  3122                           ;incstack = 0
  3123  016CBA  0EE0               	movlw	224
  3124  016CBC  0102               	movlb	2	; () banked
  3125  016CBE  6F2E               	movwf	_device_time& (0+255),b	;volatile
  3126  016CC0  0EC2               	movlw	194
  3127  016CC2  6F2F               	movwf	(_device_time+1)& (0+255),b	;volatile
  3128  016CC4  0E1E               	movlw	30
  3129  016CC6  6F30               	movwf	(_device_time+2)& (0+255),b	;volatile
  3130  016CC8  0E4D               	movlw	77
  3131  016CCA  6F31               	movwf	(_device_time+3)& (0+255),b	;volatile
  3132                           
  3133                           ; BSR set to: 2
  3134                           ;rtcc.c: 65: TMR1_SetInterruptHandler(rtcc_handler);
  3135  016CCC  0E3A               	movlw	low _rtcc_handler
  3136  016CCE  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  3137  016CD0  0E6E               	movlw	high _rtcc_handler
  3138  016CD2  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  3139  016CD4  0E01               	movlw	low (_rtcc_handler shr (0+16))
  3140  016CD6  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler+2,c
  3141  016CD8  EC3A  F0B7         	call	_TMR1_SetInterruptHandler	;wreg free
  3142  016CDC  0012               	return		;funcret
  3143  016CDE                     __end_of_rtcc_init:
  3144                           	opt stack 0
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           intcon	equ	0xFF2
  3150                           postinc0	equ	0xFEE
  3151                           wreg	equ	0xFE8
  3152                           postdec1	equ	0xFE5
  3153                           fsr1l	equ	0xFE1
  3154                           
  3155 ;; *************** function _TMR1_SetInterruptHandler *****************
  3156 ;; Defined at:
  3157 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  InterruptHan    3   18[COMRAM] PTR FTN()void 
  3160 ;;		 -> rtcc_handler(1), TMR1_DefaultInterruptHandler(1), 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;Total ram usage:        3 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    4
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_TMR1_Initialize
  3183 ;;		_rtcc_init
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text12
  3188  016E74                     __ptext12:
  3189                           	opt stack 0
  3190  016E74                     _TMR1_SetInterruptHandler:
  3191                           	opt stack 24
  3192                           
  3193                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  3194                           
  3195                           ;incstack = 0
  3196  016E74  C013  F2FA         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3197  016E78  C014  F2FB         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3198  016E7C  C015  F2FC         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
  3199  016E80  0012               	return		;funcret
  3200  016E82                     __end_of_TMR1_SetInterruptHandler:
  3201                           	opt stack 0
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           postdec1	equ	0xFE5
  3210                           fsr1l	equ	0xFE1
  3211                           
  3212 ;; *************** function _TCP_Init *****************
  3213 ;; Defined at:
  3214 ;;		line 1149 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    4
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_Network_Init
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text13
  3243  016BF2                     __ptext13:
  3244                           	opt stack 0
  3245  016BF2                     _TCP_Init:
  3246                           	opt stack 24
  3247                           
  3248                           ;tcpv4.c: 1151: tcbList = (0);
  3249                           
  3250                           ;incstack = 0
  3251  016BF2  0E00               	movlw	0
  3252  016BF4  6E3F               	movwf	_tcbList,c
  3253  016BF6  0E00               	movlw	0
  3254  016BF8  6E40               	movwf	_tcbList+1,c
  3255                           
  3256                           ;tcpv4.c: 1152: tcbListSize = 0;
  3257  016BFA  0E00               	movlw	0
  3258  016BFC  6E47               	movwf	_tcbListSize,c
  3259                           
  3260                           ;tcpv4.c: 1153: nextAvailablePort = (1024u);
  3261  016BFE  0E04               	movlw	4
  3262  016C00  0102               	movlb	2	; () banked
  3263  016C02  6F4B               	movwf	(_nextAvailablePort+1)& (0+255),b
  3264  016C04  0E00               	movlw	0
  3265  016C06  6F4A               	movwf	_nextAvailablePort& (0+255),b
  3266                           
  3267                           ; BSR set to: 2
  3268                           ;tcpv4.c: 1154: nextSequenceNumber = 0;
  3269  016C08  0E00               	movlw	0
  3270  016C0A  0103               	movlb	3	; () banked
  3271  016C0C  6F04               	movwf	_nextSequenceNumber& (0+255),b
  3272  016C0E  0E00               	movlw	0
  3273  016C10  6F05               	movwf	(_nextSequenceNumber+1)& (0+255),b
  3274  016C12  0E00               	movlw	0
  3275  016C14  6F06               	movwf	(_nextSequenceNumber+2)& (0+255),b
  3276  016C16  0E00               	movlw	0
  3277  016C18  6F07               	movwf	(_nextSequenceNumber+3)& (0+255),b
  3278                           
  3279                           ; BSR set to: 3
  3280  016C1A  0012               	return		;funcret
  3281  016C1C                     __end_of_TCP_Init:
  3282                           	opt stack 0
  3283                           tblptru	equ	0xFF8
  3284                           tblptrh	equ	0xFF7
  3285                           tblptrl	equ	0xFF6
  3286                           tablat	equ	0xFF5
  3287                           intcon	equ	0xFF2
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           postdec1	equ	0xFE5
  3291                           fsr1l	equ	0xFE1
  3292                           
  3293 ;; *************** function _Network_WaitForLink *****************
  3294 ;; Defined at:
  3295 ;;		line 73 in file "mcc_generated_files/TCPIPLibrary/network.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    7
  3316 ;; This function calls:
  3317 ;;		_ETH_CheckLinkUp
  3318 ;; This function is called by:
  3319 ;;		_Network_Init
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text14
  3324  016EAC                     __ptext14:
  3325                           	opt stack 0
  3326  016EAC                     _Network_WaitForLink:
  3327                           	opt stack 21
  3328                           
  3329                           ;network.c: 75: while(!ETH_CheckLinkUp());
  3330                           
  3331                           ; BSR set to: 3
  3332                           ;incstack = 0
  3333  016EAC  EC0E  F0B6         	call	_ETH_CheckLinkUp	;wreg free
  3334  016EB0  0900               	iorlw	0
  3335  016EB2  A4D8               	btfss	status,2,c
  3336  016EB4  0012               	return	
  3337  016EB6  D7FA               	goto	_Network_WaitForLink
  3338  016EB8                     __end_of_Network_WaitForLink:
  3339                           	opt stack 0
  3340                           tblptru	equ	0xFF8
  3341                           tblptrh	equ	0xFF7
  3342                           tblptrl	equ	0xFF6
  3343                           tablat	equ	0xFF5
  3344                           intcon	equ	0xFF2
  3345                           postinc0	equ	0xFEE
  3346                           wreg	equ	0xFE8
  3347                           postdec1	equ	0xFE5
  3348                           fsr1l	equ	0xFE1
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _IPV4_Init *****************
  3352 ;; Defined at:
  3353 ;;		line 65 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    5
  3374 ;; This function calls:
  3375 ;;		_ipdb_init
  3376 ;; This function is called by:
  3377 ;;		_Network_Init
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text15
  3382  016F2E                     __ptext15:
  3383                           	opt stack 0
  3384  016F2E                     _IPV4_Init:
  3385                           	opt stack 23
  3386                           
  3387                           ;ipv4.c: 67: ipdb_init();
  3388                           
  3389                           ;incstack = 0
  3390  016F2E  EC49  F0AF         	call	_ipdb_init	;wreg free
  3391  016F32  0012               	return		;funcret
  3392  016F34                     __end_of_IPV4_Init:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           intcon	equ	0xFF2
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           postdec1	equ	0xFE5
  3402                           fsr1l	equ	0xFE1
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _ipdb_init *****************
  3406 ;; Defined at:
  3407 ;;		line 31 in file "mcc_generated_files/TCPIPLibrary/ip_database.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  x               1   19[COMRAM] unsigned char 
  3412 ;;  x               1   18[COMRAM] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;Total ram usage:        2 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    4
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_IPV4_Init
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text16
  3437  015E92                     __ptext16:
  3438                           	opt stack 0
  3439  015E92                     _ipdb_init:
  3440                           	opt stack 23
  3441                           
  3442                           ;ip_database.c: 33: ip_database_info.ipv4_myAddress = 0;
  3443                           
  3444                           ;incstack = 0
  3445  015E92  0E00               	movlw	0
  3446  015E94  0102               	movlb	2	; () banked
  3447  015E96  6F00               	movwf	_ip_database_info& (0+255),b
  3448  015E98  0E00               	movlw	0
  3449  015E9A  6F01               	movwf	(_ip_database_info+1)& (0+255),b
  3450  015E9C  0E00               	movlw	0
  3451  015E9E  6F02               	movwf	(_ip_database_info+2)& (0+255),b
  3452  015EA0  0E00               	movlw	0
  3453  015EA2  6F03               	movwf	(_ip_database_info+3)& (0+255),b
  3454                           
  3455                           ;ip_database.c: 34: ip_database_info.ipv4_subnetMask = 0;
  3456  015EA4  0E00               	movlw	0
  3457  015EA6  6F0C               	movwf	(_ip_database_info+12)& (0+255),b
  3458  015EA8  0E00               	movlw	0
  3459  015EAA  6F0D               	movwf	(_ip_database_info+13)& (0+255),b
  3460  015EAC  0E00               	movlw	0
  3461  015EAE  6F0E               	movwf	(_ip_database_info+14)& (0+255),b
  3462  015EB0  0E00               	movlw	0
  3463  015EB2  6F0F               	movwf	(_ip_database_info+15)& (0+255),b
  3464                           
  3465                           ;ip_database.c: 35: ip_database_info.ipv4_router = 0;
  3466  015EB4  0E00               	movlw	0
  3467  015EB6  6F10               	movwf	(_ip_database_info+16)& (0+255),b
  3468  015EB8  0E00               	movlw	0
  3469  015EBA  6F11               	movwf	(_ip_database_info+17)& (0+255),b
  3470  015EBC  0E00               	movlw	0
  3471  015EBE  6F12               	movwf	(_ip_database_info+18)& (0+255),b
  3472  015EC0  0E00               	movlw	0
  3473  015EC2  6F13               	movwf	(_ip_database_info+19)& (0+255),b
  3474                           
  3475                           ;ip_database.c: 36: for(uint8_t x=0; x < 2; x ++)
  3476  015EC4  0E00               	movlw	0
  3477  015EC6  6E13               	movwf	ipdb_init@x,c
  3478  015EC8                     l8646:
  3479                           
  3480                           ; BSR set to: 2
  3481  015EC8  0E01               	movlw	1
  3482  015ECA  6413               	cpfsgt	ipdb_init@x,c
  3483  015ECC  D001               	goto	l913
  3484  015ECE  D00E               	goto	u7520
  3485  015ED0                     l913:
  3486                           
  3487                           ;ip_database.c: 37: ip_database_info.ipv4_dns[x] = 0;
  3488                           
  3489                           ; BSR set to: 2
  3490  015ED0  5013               	movf	ipdb_init@x,w,c
  3491  015ED2  0D04               	mullw	4
  3492  015ED4  0E04               	movlw	low (_ip_database_info+4)
  3493  015ED6  24F3               	addwf	prodl,w,c
  3494  015ED8  6ED9               	movwf	fsr2l,c
  3495  015EDA  0E02               	movlw	high (_ip_database_info+4)
  3496  015EDC  20F4               	addwfc	prodh,w,c
  3497  015EDE  6EDA               	movwf	fsr2h,c
  3498  015EE0  6ADE               	clrf	postinc2,c
  3499  015EE2  6ADE               	clrf	postinc2,c
  3500  015EE4  6ADE               	clrf	postinc2,c
  3501  015EE6  6ADD               	clrf	postdec2,c
  3502  015EE8  2A13               	incf	ipdb_init@x,f,c
  3503  015EEA  D7EE               	goto	l8646
  3504  015EEC                     u7520:
  3505                           
  3506                           ;ip_database.c: 38: for(uint8_t x=0; x < 2; x++)
  3507  015EEC  0E00               	movlw	0
  3508  015EEE  6E14               	movwf	ipdb_init@x_2014,c
  3509  015EF0                     l8658:
  3510  015EF0  0E01               	movlw	1
  3511  015EF2  6414               	cpfsgt	ipdb_init@x_2014,c
  3512  015EF4  D001               	goto	l915
  3513  015EF6  D00E               	goto	u7540
  3514  015EF8                     l915:
  3515                           
  3516                           ;ip_database.c: 39: ip_database_info.ipv4_ntpAddress[x] = 0;
  3517  015EF8  5014               	movf	ipdb_init@x_2014,w,c
  3518  015EFA  0D04               	mullw	4
  3519  015EFC  0E18               	movlw	low (_ip_database_info+24)
  3520  015EFE  24F3               	addwf	prodl,w,c
  3521  015F00  6ED9               	movwf	fsr2l,c
  3522  015F02  0E02               	movlw	high (_ip_database_info+24)
  3523  015F04  20F4               	addwfc	prodh,w,c
  3524  015F06  6EDA               	movwf	fsr2h,c
  3525  015F08  6ADE               	clrf	postinc2,c
  3526  015F0A  6ADE               	clrf	postinc2,c
  3527  015F0C  6ADE               	clrf	postinc2,c
  3528  015F0E  6ADD               	clrf	postdec2,c
  3529  015F10  2A14               	incf	ipdb_init@x_2014,f,c
  3530  015F12  D7EE               	goto	l8658
  3531  015F14                     u7540:
  3532                           
  3533                           ;ip_database.c: 40: ip_database_info.ipv4_tftpAddress = 0;
  3534  015F14  0E00               	movlw	0
  3535  015F16  0102               	movlb	2	; () banked
  3536  015F18  6F20               	movwf	(_ip_database_info+32)& (0+255),b
  3537  015F1A  0E00               	movlw	0
  3538  015F1C  6F21               	movwf	(_ip_database_info+33)& (0+255),b
  3539  015F1E  0E00               	movlw	0
  3540  015F20  6F22               	movwf	(_ip_database_info+34)& (0+255),b
  3541  015F22  0E00               	movlw	0
  3542  015F24  6F23               	movwf	(_ip_database_info+35)& (0+255),b
  3543                           
  3544                           ; BSR set to: 2
  3545  015F26  0012               	return		;funcret
  3546  015F28                     __end_of_ipdb_init:
  3547                           	opt stack 0
  3548                           tblptru	equ	0xFF8
  3549                           tblptrh	equ	0xFF7
  3550                           tblptrl	equ	0xFF6
  3551                           tablat	equ	0xFF5
  3552                           prodh	equ	0xFF4
  3553                           prodl	equ	0xFF3
  3554                           intcon	equ	0xFF2
  3555                           postinc0	equ	0xFEE
  3556                           wreg	equ	0xFE8
  3557                           postdec1	equ	0xFE5
  3558                           fsr1l	equ	0xFE1
  3559                           postinc2	equ	0xFDE
  3560                           postdec2	equ	0xFDD
  3561                           fsr2h	equ	0xFDA
  3562                           fsr2l	equ	0xFD9
  3563                           status	equ	0xFD8
  3564                           
  3565 ;; *************** function _ETH_Init *****************
  3566 ;; Defined at:
  3567 ;;		line 132 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  mac             2   39[BANK0 ] PTR const struct .
  3572 ;;		 -> macAddress(6), 
  3573 ;;  phycon1_valu    2   37[BANK0 ] unsigned int 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;Total ram usage:       14 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    7
  3590 ;; This function calls:
  3591 ;;		_ETH_CheckLinkUp
  3592 ;;		_ETH_Flush
  3593 ;;		_ETH_PacketListReset
  3594 ;;		_MAC_getAddress
  3595 ;;		_PHY_Write
  3596 ;;		_printf
  3597 ;; This function is called by:
  3598 ;;		_Network_Init
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text17
  3603  013A78                     __ptext17:
  3604                           	opt stack 0
  3605  013A78                     _ETH_Init:
  3606                           	opt stack 21
  3607                           
  3608                           ;ETHxxJ6x_driver.c: 134: const mac48Address_t *mac;
  3609                           ;ETHxxJ6x_driver.c: 135: uint16_t phycon1_value;
  3610                           ;ETHxxJ6x_driver.c: 138: ethData.error = 0;
  3611                           
  3612                           ; BSR set to: 2
  3613                           ;incstack = 0
  3614  013A78  0102               	movlb	2	; () banked
  3615  013A7A  9124               	bcf	_ethData& (0+255),0,b	;volatile
  3616                           
  3617                           ;ETHxxJ6x_driver.c: 139: ethData.up = 0;
  3618  013A7C  9524               	bcf	_ethData& (0+255),2,b	;volatile
  3619                           
  3620                           ;ETHxxJ6x_driver.c: 140: ethData.linkChange = 0;
  3621  013A7E  9924               	bcf	_ethData& (0+255),4,b	;volatile
  3622                           
  3623                           ; BSR set to: 2
  3624                           ;ETHxxJ6x_driver.c: 142: ETH_PacketListReset();
  3625  013A80  EC9A  F0B3         	call	_ETH_PacketListReset	;wreg free
  3626                           
  3627                           ;ETHxxJ6x_driver.c: 144: ethData.saveRDPT = 0;
  3628  013A84  0E00               	movlw	0
  3629  013A86  0102               	movlb	2	; () banked
  3630  013A88  6F27               	movwf	(_ethData+3)& (0+255),b	;volatile
  3631  013A8A  0E00               	movlw	0
  3632  013A8C  6F26               	movwf	(_ethData+2)& (0+255),b	;volatile
  3633                           
  3634                           ; BSR set to: 2
  3635                           ;ETHxxJ6x_driver.c: 146: nextPacketPointer = (0);
  3636  013A8E  0E00               	movlw	0
  3637  013A90  6E42               	movwf	_nextPacketPointer+1,c
  3638  013A92  0E00               	movlw	0
  3639  013A94  6E41               	movwf	_nextPacketPointer,c
  3640                           
  3641                           ; BSR set to: 2
  3642                           ;ETHxxJ6x_driver.c: 148: ECON1 = 0x00;
  3643  013A96  0E00               	movlw	0
  3644  013A98  6ED2               	movwf	4050,c	;volatile
  3645  013A9A                     
  3646                           ; BSR set to: 2
  3647  013A9A  010E               	movlb	14	; () banked
  3648  013A9C  B5FD               	btfsc	253,2,b	;volatile
  3649  013A9E  D7FD               	goto	l492
  3650  013AA0                     u12630:
  3651                           
  3652                           ; BSR set to: 14
  3653                           
  3654                           ; BSR set to: 14
  3655                           ;ETHxxJ6x_driver.c: 150: while(ECON1bits.TXRTS);
  3656  013AA0  A6D2               	btfss	4050,3,c	;volatile
  3657  013AA2  D005               	goto	l497
  3658  013AA4  D7FD               	goto	u12630
  3659  013AA6                     l498:
  3660                           
  3661                           ;ETHxxJ6x_driver.c: 152: {
  3662                           ;ETHxxJ6x_driver.c: 153: ethData.pktReady = 0;
  3663  013AA6  0102               	movlb	2	; () banked
  3664  013AA8  9324               	bcf	_ethData& (0+255),1,b	;volatile
  3665                           
  3666                           ; BSR set to: 2
  3667                           ;ETHxxJ6x_driver.c: 154: ETH_Flush();
  3668  013AAA  EC4D  F0B1         	call	_ETH_Flush	;wreg free
  3669  013AAE                     l497:
  3670  013AAE  BC60               	btfsc	3936,6,c	;volatile
  3671  013AB0  D7FA               	goto	l498
  3672                           
  3673                           ;ETHxxJ6x_driver.c: 155: }
  3674                           ;ETHxxJ6x_driver.c: 157: ECON2 = 0x00;
  3675  013AB2  0E00               	movlw	0
  3676  013AB4  010E               	movlb	14	; () banked
  3677  013AB6  6FFE               	movwf	254,b	;volatile
  3678                           
  3679                           ; BSR set to: 14
  3680                           ;ETHxxJ6x_driver.c: 159: __nop();
  3681  013AB8  F000               	nop	
  3682                           
  3683                           ;ETHxxJ6x_driver.c: 160: __nop();
  3684  013ABA  F000               	nop	
  3685                           
  3686                           ;ETHxxJ6x_driver.c: 161: __nop();
  3687  013ABC  F000               	nop	
  3688                           
  3689                           ;ETHxxJ6x_driver.c: 164: ECON2 = 0xA0;
  3690  013ABE  0EA0               	movlw	160
  3691  013AC0  010E               	movlb	14	; () banked
  3692  013AC2  6FFE               	movwf	254,b	;volatile
  3693  013AC4                     
  3694                           ; BSR set to: 14
  3695                           
  3696                           ; BSR set to: 14
  3697  013AC4  A1FD               	btfss	253,0,b	;volatile
  3698  013AC6  D7FE               	goto	l501
  3699                           
  3700                           ; BSR set to: 14
  3701                           ;ETHxxJ6x_driver.c: 180: MACON1 = 0x01; __nop();
  3702                           
  3703                           ; BSR set to: 14
  3704  013AC8  0E01               	movlw	1
  3705  013ACA  6FA0               	movwf	160,b	;volatile
  3706                           
  3707                           ; BSR set to: 14
  3708  013ACC  F000               	nop	
  3709                           
  3710                           ;ETHxxJ6x_driver.c: 181: MACON3 = 0b10110010; __nop();
  3711  013ACE  0EB2               	movlw	178
  3712  013AD0  010E               	movlb	14	; () banked
  3713  013AD2  6FA2               	movwf	162,b	;volatile
  3714                           
  3715                           ; BSR set to: 14
  3716  013AD4  F000               	nop	
  3717                           
  3718                           ;ETHxxJ6x_driver.c: 182: MACON4 = 0b01000000; __nop();
  3719  013AD6  0E40               	movlw	64
  3720  013AD8  010E               	movlb	14	; () banked
  3721  013ADA  6FA3               	movwf	163,b	;volatile
  3722                           
  3723                           ; BSR set to: 14
  3724  013ADC  F000               	nop	
  3725                           
  3726                           ;ETHxxJ6x_driver.c: 183: MABBIPG = 0x12; __nop();
  3727  013ADE  0E12               	movlw	18
  3728  013AE0  010E               	movlb	14	; () banked
  3729  013AE2  6FA4               	movwf	164,b	;volatile
  3730                           
  3731                           ; BSR set to: 14
  3732  013AE4  F000               	nop	
  3733                           
  3734                           ;ETHxxJ6x_driver.c: 184: MAIPG = 0x0C12; __nop();
  3735  013AE6  0E0C               	movlw	12
  3736  013AE8  010E               	movlb	14	; () banked
  3737  013AEA  6FA7               	movwf	167,b	;volatile
  3738  013AEC  0E12               	movlw	18
  3739  013AEE  6FA6               	movwf	166,b	;volatile
  3740                           
  3741                           ; BSR set to: 14
  3742  013AF0  F000               	nop	
  3743                           
  3744                           ;ETHxxJ6x_driver.c: 185: EFLOCON = 0x00;
  3745  013AF2  0E00               	movlw	0
  3746  013AF4  010E               	movlb	14	; () banked
  3747  013AF6  6F97               	movwf	151,b	;volatile
  3748                           
  3749                           ;ETHxxJ6x_driver.c: 186: phycon1_value = 0x0000;
  3750  013AF8  0E00               	movlw	0
  3751  013AFA  0100               	movlb	0	; () banked
  3752  013AFC  6F86               	movwf	(ETH_Init@phycon1_value+1)& (0+255),b
  3753  013AFE  0E00               	movlw	0
  3754  013B00  6F85               	movwf	ETH_Init@phycon1_value& (0+255),b
  3755                           
  3756                           ;ETHxxJ6x_driver.c: 191: ETXST = ((8192) - (((1518) + (7)) << 1));
  3757  013B02  0E14               	movlw	20
  3758  013B04  010E               	movlb	14	; () banked
  3759  013B06  6FE5               	movwf	229,b	;volatile
  3760  013B08  0E16               	movlw	22
  3761  013B0A  6FE4               	movwf	228,b	;volatile
  3762                           
  3763                           ;ETHxxJ6x_driver.c: 192: ETXND = ((8192)-1);
  3764  013B0C  0E1F               	movlw	31
  3765  013B0E  6FE7               	movwf	231,b	;volatile
  3766  013B10  69E6               	setf	230,b	;volatile
  3767                           
  3768                           ;ETHxxJ6x_driver.c: 193: ERXST = (0);
  3769  013B12  0E00               	movlw	0
  3770  013B14  6FE9               	movwf	233,b	;volatile
  3771  013B16  0E00               	movlw	0
  3772  013B18  6FE8               	movwf	232,b	;volatile
  3773                           
  3774                           ;ETHxxJ6x_driver.c: 194: ERXND = (((8192) - (((1518) + (7)) << 1)) - 1);
  3775  013B1A  0E14               	movlw	20
  3776  013B1C  6FEB               	movwf	235,b	;volatile
  3777  013B1E  0E15               	movlw	21
  3778  013B20  6FEA               	movwf	234,b	;volatile
  3779                           
  3780                           ;ETHxxJ6x_driver.c: 197: ERDPT = (0);
  3781  013B22  0E00               	movlw	0
  3782  013B24  6E7B               	movwf	3963,c	;volatile
  3783  013B26  0E00               	movlw	0
  3784  013B28  6E7A               	movwf	3962,c	;volatile
  3785                           
  3786                           ;ETHxxJ6x_driver.c: 198: EWRPT = ((8192) - (((1518) + (7)) << 1));
  3787  013B2A  0E14               	movlw	20
  3788  013B2C  6FE3               	movwf	227,b	;volatile
  3789  013B2E  0E16               	movlw	22
  3790  013B30  6FE2               	movwf	226,b	;volatile
  3791                           
  3792                           ;ETHxxJ6x_driver.c: 201: ERXRDPT = (((8192) - (((1518) + (7)) << 1)) - 1);
  3793  013B32  0E14               	movlw	20
  3794  013B34  6FED               	movwf	237,b	;volatile
  3795  013B36  0E15               	movlw	21
  3796  013B38  6FEC               	movwf	236,b	;volatile
  3797                           
  3798                           ;ETHxxJ6x_driver.c: 205: MAMXFL = (1518);
  3799  013B3A  0E05               	movlw	5
  3800  013B3C  6FAB               	movwf	171,b	;volatile
  3801  013B3E  0EEE               	movlw	238
  3802  013B40  6FAA               	movwf	170,b	;volatile
  3803                           
  3804                           ; BSR set to: 14
  3805                           ;ETHxxJ6x_driver.c: 208: mac = MAC_getAddress();
  3806  013B42  EC67  F0B7         	call	_MAC_getAddress	;wreg free
  3807  013B46  C013  F087         	movff	?_MAC_getAddress,ETH_Init@mac
  3808  013B4A  C014  F088         	movff	?_MAC_getAddress+1,ETH_Init@mac+1
  3809                           
  3810                           ;ETHxxJ6x_driver.c: 210: printf("MAC Address from EEPROM: %.2X:%.2X:%.2X:%.2X:%.2X:%.2X 
      +                          \r\n", mac->s.byte1, mac->s.byte2,mac->s.byte3,mac->s.byte4,mac->s.byte5,mac->s.byte6);
  3811  013B4E  0E0E               	movlw	low STR_1
  3812  013B50  0100               	movlb	0	; () banked
  3813  013B52  6F6D               	movwf	printf@f& (0+255),b
  3814  013B54  0EFF               	movlw	high STR_1
  3815  013B56  6F6E               	movwf	(printf@f+1)& (0+255),b
  3816  013B58  C087  FFF6         	movff	ETH_Init@mac,tblptrl
  3817  013B5C  C088  FFF7         	movff	ETH_Init@mac+1,tblptrh
  3818  013B60                     	if	0	;tblptru may be non-zero
  3819  013B60                     	endif
  3820  013B60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3821  013B60  0E00               	movlw	low (__mediumconst shr (0+16))
  3822  013B62  6EF8               	movwf	tblptru,c
  3823  013B64                     	endif
  3824  013B64  0008               	tblrd		*
  3825  013B66  50F5               	movf	tablat,w,c
  3826  013B68  6F6F               	movwf	(?_printf+2)& (0+255),b
  3827  013B6A  6B70               	clrf	(?_printf+3)& (0+255),b
  3828  013B6C  0E01               	movlw	1
  3829  013B6E  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3830  013B70  6F7B               	movwf	??_ETH_Init& (0+255),b
  3831  013B72  0E00               	movlw	0
  3832  013B74  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3833  013B76  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3834  013B78  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3835  013B7C  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3836  013B80                     	if	0	;tblptru may be non-zero
  3837  013B80                     	endif
  3838  013B80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3839  013B80  0E00               	movlw	low (__mediumconst shr (0+16))
  3840  013B82  6EF8               	movwf	tblptru,c
  3841  013B84                     	endif
  3842  013B84  0008               	tblrd		*
  3843  013B86  50F5               	movf	tablat,w,c
  3844  013B88  6F71               	movwf	(?_printf+4)& (0+255),b
  3845  013B8A  6B72               	clrf	(?_printf+5)& (0+255),b
  3846  013B8C  0E02               	movlw	2
  3847  013B8E  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3848  013B90  6F7D               	movwf	(??_ETH_Init+2)& (0+255),b
  3849  013B92  0E00               	movlw	0
  3850  013B94  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3851  013B96  6F7E               	movwf	(??_ETH_Init+3)& (0+255),b
  3852  013B98  C07D  FFF6         	movff	??_ETH_Init+2,tblptrl
  3853  013B9C  C07E  FFF7         	movff	??_ETH_Init+3,tblptrh
  3854  013BA0                     	if	0	;tblptru may be non-zero
  3855  013BA0                     	endif
  3856  013BA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3857  013BA0  0E00               	movlw	low (__mediumconst shr (0+16))
  3858  013BA2  6EF8               	movwf	tblptru,c
  3859  013BA4                     	endif
  3860  013BA4  0008               	tblrd		*
  3861  013BA6  50F5               	movf	tablat,w,c
  3862  013BA8  6F73               	movwf	(?_printf+6)& (0+255),b
  3863  013BAA  6B74               	clrf	(?_printf+7)& (0+255),b
  3864  013BAC  0E03               	movlw	3
  3865  013BAE  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3866  013BB0  6F7F               	movwf	(??_ETH_Init+4)& (0+255),b
  3867  013BB2  0E00               	movlw	0
  3868  013BB4  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3869  013BB6  6F80               	movwf	(??_ETH_Init+5)& (0+255),b
  3870  013BB8  C07F  FFF6         	movff	??_ETH_Init+4,tblptrl
  3871  013BBC  C080  FFF7         	movff	??_ETH_Init+5,tblptrh
  3872  013BC0                     	if	0	;tblptru may be non-zero
  3873  013BC0                     	endif
  3874  013BC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3875  013BC0  0E00               	movlw	low (__mediumconst shr (0+16))
  3876  013BC2  6EF8               	movwf	tblptru,c
  3877  013BC4                     	endif
  3878  013BC4  0008               	tblrd		*
  3879  013BC6  50F5               	movf	tablat,w,c
  3880  013BC8  6F75               	movwf	(?_printf+8)& (0+255),b
  3881  013BCA  6B76               	clrf	(?_printf+9)& (0+255),b
  3882  013BCC  0E04               	movlw	4
  3883  013BCE  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3884  013BD0  6F81               	movwf	(??_ETH_Init+6)& (0+255),b
  3885  013BD2  0E00               	movlw	0
  3886  013BD4  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3887  013BD6  6F82               	movwf	(??_ETH_Init+7)& (0+255),b
  3888  013BD8  C081  FFF6         	movff	??_ETH_Init+6,tblptrl
  3889  013BDC  C082  FFF7         	movff	??_ETH_Init+7,tblptrh
  3890  013BE0                     	if	0	;tblptru may be non-zero
  3891  013BE0                     	endif
  3892  013BE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3893  013BE0  0E00               	movlw	low (__mediumconst shr (0+16))
  3894  013BE2  6EF8               	movwf	tblptru,c
  3895  013BE4                     	endif
  3896  013BE4  0008               	tblrd		*
  3897  013BE6  50F5               	movf	tablat,w,c
  3898  013BE8  6F77               	movwf	(?_printf+10)& (0+255),b
  3899  013BEA  6B78               	clrf	(?_printf+11)& (0+255),b
  3900  013BEC  0E05               	movlw	5
  3901  013BEE  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3902  013BF0  6F83               	movwf	(??_ETH_Init+8)& (0+255),b
  3903  013BF2  0E00               	movlw	0
  3904  013BF4  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3905  013BF6  6F84               	movwf	(??_ETH_Init+9)& (0+255),b
  3906  013BF8  C083  FFF6         	movff	??_ETH_Init+8,tblptrl
  3907  013BFC  C084  FFF7         	movff	??_ETH_Init+9,tblptrh
  3908  013C00                     	if	0	;tblptru may be non-zero
  3909  013C00                     	endif
  3910  013C00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3911  013C00  0E00               	movlw	low (__mediumconst shr (0+16))
  3912  013C02  6EF8               	movwf	tblptru,c
  3913  013C04                     	endif
  3914  013C04  0008               	tblrd		*
  3915  013C06  50F5               	movf	tablat,w,c
  3916  013C08  6F79               	movwf	(?_printf+12)& (0+255),b
  3917  013C0A  6B7A               	clrf	(?_printf+13)& (0+255),b
  3918  013C0C  EC87  F0B4         	call	_printf	;wreg free
  3919                           
  3920                           ;ETHxxJ6x_driver.c: 213: MAADR1 = mac->mac_array[0];__nop();
  3921  013C10  C087  FFF6         	movff	ETH_Init@mac,tblptrl
  3922  013C14  C088  FFF7         	movff	ETH_Init@mac+1,tblptrh
  3923  013C18                     	if	0	;tblptru may be non-zero
  3924  013C18                     	endif
  3925  013C18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3926  013C18  0E00               	movlw	low (__mediumconst shr (0+16))
  3927  013C1A  6EF8               	movwf	tblptru,c
  3928  013C1C                     	endif
  3929  013C1C  0008               	tblrd		*
  3930  013C1E  CFF5 FE84          	movff	tablat,3716	;volatile
  3931  013C22  F000               	nop	
  3932                           
  3933                           ;ETHxxJ6x_driver.c: 214: MAADR2 = mac->mac_array[1];__nop();
  3934  013C24  0E01               	movlw	1
  3935  013C26  0100               	movlb	0	; () banked
  3936  013C28  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3937  013C2A  6F7B               	movwf	??_ETH_Init& (0+255),b
  3938  013C2C  0E00               	movlw	0
  3939  013C2E  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3940  013C30  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3941  013C32  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3942  013C36  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3943  013C3A                     	if	0	;tblptru may be non-zero
  3944  013C3A                     	endif
  3945  013C3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3946  013C3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3947  013C3C  6EF8               	movwf	tblptru,c
  3948  013C3E                     	endif
  3949  013C3E  0008               	tblrd		*
  3950  013C40  CFF5 FE85          	movff	tablat,3717	;volatile
  3951                           
  3952                           ; BSR set to: 0
  3953  013C44  F000               	nop	
  3954                           
  3955                           ;ETHxxJ6x_driver.c: 215: MAADR3 = mac->mac_array[2];__nop();
  3956  013C46  0E02               	movlw	2
  3957  013C48  0100               	movlb	0	; () banked
  3958  013C4A  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3959  013C4C  6F7B               	movwf	??_ETH_Init& (0+255),b
  3960  013C4E  0E00               	movlw	0
  3961  013C50  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3962  013C52  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3963  013C54  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3964  013C58  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3965  013C5C                     	if	0	;tblptru may be non-zero
  3966  013C5C                     	endif
  3967  013C5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3968  013C5C  0E00               	movlw	low (__mediumconst shr (0+16))
  3969  013C5E  6EF8               	movwf	tblptru,c
  3970  013C60                     	endif
  3971  013C60  0008               	tblrd		*
  3972  013C62  CFF5 FE82          	movff	tablat,3714	;volatile
  3973                           
  3974                           ; BSR set to: 0
  3975  013C66  F000               	nop	
  3976                           
  3977                           ;ETHxxJ6x_driver.c: 216: MAADR4 = mac->mac_array[3];__nop();
  3978  013C68  0E03               	movlw	3
  3979  013C6A  0100               	movlb	0	; () banked
  3980  013C6C  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3981  013C6E  6F7B               	movwf	??_ETH_Init& (0+255),b
  3982  013C70  0E00               	movlw	0
  3983  013C72  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3984  013C74  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3985  013C76  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3986  013C7A  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3987  013C7E                     	if	0	;tblptru may be non-zero
  3988  013C7E                     	endif
  3989  013C7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3990  013C7E  0E00               	movlw	low (__mediumconst shr (0+16))
  3991  013C80  6EF8               	movwf	tblptru,c
  3992  013C82                     	endif
  3993  013C82  0008               	tblrd		*
  3994  013C84  CFF5 FE83          	movff	tablat,3715	;volatile
  3995                           
  3996                           ; BSR set to: 0
  3997  013C88  F000               	nop	
  3998                           
  3999                           ;ETHxxJ6x_driver.c: 217: MAADR5 = mac->mac_array[4];__nop();
  4000  013C8A  0E04               	movlw	4
  4001  013C8C  0100               	movlb	0	; () banked
  4002  013C8E  2587               	addwf	ETH_Init@mac& (0+255),w,b
  4003  013C90  6F7B               	movwf	??_ETH_Init& (0+255),b
  4004  013C92  0E00               	movlw	0
  4005  013C94  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  4006  013C96  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  4007  013C98  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  4008  013C9C  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  4009  013CA0                     	if	0	;tblptru may be non-zero
  4010  013CA0                     	endif
  4011  013CA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4012  013CA0  0E00               	movlw	low (__mediumconst shr (0+16))
  4013  013CA2  6EF8               	movwf	tblptru,c
  4014  013CA4                     	endif
  4015  013CA4  0008               	tblrd		*
  4016  013CA6  CFF5 FE80          	movff	tablat,3712	;volatile
  4017                           
  4018                           ; BSR set to: 0
  4019  013CAA  F000               	nop	
  4020                           
  4021                           ;ETHxxJ6x_driver.c: 218: MAADR6 = mac->mac_array[5];__nop();
  4022  013CAC  0E05               	movlw	5
  4023  013CAE  0100               	movlb	0	; () banked
  4024  013CB0  2587               	addwf	ETH_Init@mac& (0+255),w,b
  4025  013CB2  6F7B               	movwf	??_ETH_Init& (0+255),b
  4026  013CB4  0E00               	movlw	0
  4027  013CB6  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  4028  013CB8  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  4029  013CBA  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  4030  013CBE  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  4031  013CC2                     	if	0	;tblptru may be non-zero
  4032  013CC2                     	endif
  4033  013CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4034  013CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  4035  013CC4  6EF8               	movwf	tblptru,c
  4036  013CC6                     	endif
  4037  013CC6  0008               	tblrd		*
  4038  013CC8  CFF5 FE81          	movff	tablat,3713	;volatile
  4039                           
  4040                           ; BSR set to: 0
  4041  013CCC  F000               	nop	
  4042                           
  4043                           ;ETHxxJ6x_driver.c: 224: ERXFCON = 0b10101011;
  4044  013CCE  0EAB               	movlw	171
  4045  013CD0  010E               	movlb	14	; () banked
  4046  013CD2  6FD8               	movwf	216,b	;volatile
  4047                           
  4048                           ; BSR set to: 14
  4049                           ;ETHxxJ6x_driver.c: 227: ECON1=0x04;
  4050  013CD4  0E04               	movlw	4
  4051  013CD6  6ED2               	movwf	4050,c	;volatile
  4052                           
  4053                           ; BSR set to: 14
  4054                           ;ETHxxJ6x_driver.c: 230: PHY_Write(PHCON1, phycon1_value);
  4055  013CD8  C085  F015         	movff	ETH_Init@phycon1_value,PHY_Write@data
  4056  013CDC  C086  F016         	movff	ETH_Init@phycon1_value+1,PHY_Write@data+1
  4057  013CE0  0E00               	movlw	0
  4058  013CE2  EC23  F0B6         	call	_PHY_Write
  4059                           
  4060                           ;ETHxxJ6x_driver.c: 231: PHY_Write(PHCON2, 0x0110);
  4061  013CE6  0E01               	movlw	1
  4062  013CE8  6E16               	movwf	PHY_Write@data+1,c
  4063  013CEA  0E10               	movlw	16
  4064  013CEC  6E15               	movwf	PHY_Write@data,c
  4065  013CEE  0E10               	movlw	16
  4066  013CF0  EC23  F0B6         	call	_PHY_Write
  4067                           
  4068                           ;ETHxxJ6x_driver.c: 232: PHY_Write(PHLCON, 0b01110101001010);
  4069  013CF4  0E1D               	movlw	29
  4070  013CF6  6E16               	movwf	PHY_Write@data+1,c
  4071  013CF8  0E4A               	movlw	74
  4072  013CFA  6E15               	movwf	PHY_Write@data,c
  4073  013CFC  0E14               	movlw	20
  4074  013CFE  EC23  F0B6         	call	_PHY_Write
  4075                           
  4076                           ;ETHxxJ6x_driver.c: 235: ETH_CheckLinkUp();
  4077  013D02  EC0E  F0B6         	call	_ETH_CheckLinkUp	;wreg free
  4078                           
  4079                           ;ETHxxJ6x_driver.c: 238: EIE = 0b01011001;
  4080  013D06  0E59               	movlw	89
  4081  013D08  010E               	movlb	14	; () banked
  4082  013D0A  6FFB               	movwf	251,b	;volatile
  4083                           
  4084                           ; BSR set to: 14
  4085                           ;ETHxxJ6x_driver.c: 239: PHY_Write(PHIE,0x0012);
  4086  013D0C  0E00               	movlw	0
  4087  013D0E  6E16               	movwf	PHY_Write@data+1,c
  4088  013D10  0E12               	movlw	18
  4089  013D12  6E15               	movwf	PHY_Write@data,c
  4090  013D14  0E12               	movlw	18
  4091  013D16  EC23  F0B6         	call	_PHY_Write
  4092  013D1A  0012               	return		;funcret
  4093  013D1C                     __end_of_ETH_Init:
  4094                           	opt stack 0
  4095                           tblptru	equ	0xFF8
  4096                           tblptrh	equ	0xFF7
  4097                           tblptrl	equ	0xFF6
  4098                           tablat	equ	0xFF5
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           intcon	equ	0xFF2
  4102                           postinc0	equ	0xFEE
  4103                           wreg	equ	0xFE8
  4104                           postdec1	equ	0xFE5
  4105                           fsr1l	equ	0xFE1
  4106                           postinc2	equ	0xFDE
  4107                           postdec2	equ	0xFDD
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function _printf *****************
  4113 ;; Defined at:
  4114 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\printf.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  4117 ;;		 -> STR_13(22), STR_12(19), STR_6(10), STR_5(29), 
  4118 ;;		 -> STR_1(58), 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  pb              5   52[COMRAM] struct __prbuf
  4121 ;;  ap              2   50[COMRAM] PTR void [1]
  4122 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2   13[BANK0 ] int 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4132 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Totals:         7      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;Total ram usage:       21 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    6
  4139 ;; This function calls:
  4140 ;;		__doprnt
  4141 ;; This function is called by:
  4142 ;;		_ETH_Init
  4143 ;;		_SYSLOG_Init
  4144 ;;		_SYSLOG_Write
  4145 ;;		_TFTP_Read_Write_Request
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text18
  4150  01690E                     __ptext18:
  4151                           	opt stack 0
  4152  01690E                     _printf:
  4153                           	opt stack 21
  4154                           
  4155                           ;incstack = 0
  4156  01690E  0E00               	movlw	0
  4157  016910  6E35               	movwf	printf@pb,c
  4158  016912  0E00               	movlw	0
  4159  016914  6E36               	movwf	printf@pb+1,c
  4160  016916  0E40               	movlw	low _putch
  4161  016918  6E37               	movwf	printf@pb+2,c
  4162  01691A  0E6F               	movlw	high _putch
  4163  01691C  6E38               	movwf	printf@pb+3,c
  4164  01691E  0E01               	movlw	low (_putch shr (0+16))
  4165  016920  6E39               	movwf	printf@pb+4,c
  4166  016922  0E6F               	movlw	low (?_printf+2)
  4167  016924  6E33               	movwf	printf@ap,c
  4168  016926  0E00               	movlw	high (?_printf+2)
  4169  016928  6E34               	movwf	printf@ap+1,c
  4170                           
  4171                           ;	Return value of _printf is never used
  4172  01692A  0E35               	movlw	low printf@pb
  4173  01692C  6E29               	movwf	__doprnt@pb,c
  4174  01692E  0E00               	movlw	high printf@pb
  4175  016930  6E2A               	movwf	__doprnt@pb+1,c
  4176  016932  C06D  F02B         	movff	printf@f,__doprnt@f
  4177  016936  C06E  F02C         	movff	printf@f+1,__doprnt@f+1
  4178  01693A  0E33               	movlw	low printf@ap
  4179  01693C  6E2D               	movwf	__doprnt@ap,c
  4180  01693E  0E00               	movlw	high printf@ap
  4181  016940  6E2E               	movwf	__doprnt@ap+1,c
  4182  016942  EC04  F08A         	call	__doprnt	;wreg free
  4183  016946  0012               	return	
  4184  016948                     __end_of_printf:
  4185                           	opt stack 0
  4186                           tblptru	equ	0xFF8
  4187                           tblptrh	equ	0xFF7
  4188                           tblptrl	equ	0xFF6
  4189                           tablat	equ	0xFF5
  4190                           prodh	equ	0xFF4
  4191                           prodl	equ	0xFF3
  4192                           intcon	equ	0xFF2
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           postdec1	equ	0xFE5
  4196                           fsr1l	equ	0xFE1
  4197                           postinc2	equ	0xFDE
  4198                           postdec2	equ	0xFDD
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function __doprnt *****************
  4204 ;; Defined at:
  4205 ;;		line 458 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\doprnt.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  pb              2   40[COMRAM] PTR struct __prbuf
  4208 ;;		 -> sprintf@pb(5), printf@pb(5), 
  4209 ;;  f               2   42[COMRAM] PTR const unsigned char 
  4210 ;;		 -> STR_13(22), STR_12(19), STR_7(26), STR_6(10), 
  4211 ;;		 -> STR_5(29), STR_4(12), STR_1(58), 
  4212 ;;  ap              2   44[COMRAM] PTR PTR void 
  4213 ;;		 -> sprintf@ap(2), printf@ap(2), 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  idx             1    0[BANK0 ] unsigned char 
  4216 ;;  val             4    6[BANK0 ] unsigned long 
  4217 ;;  tmpval          4    0        struct .
  4218 ;;  prec            2   10[BANK0 ] int 
  4219 ;;  cp              2    3[BANK0 ] PTR const unsigned char 
  4220 ;;		 -> ?_sprintf(2), ?_printf(2), STR_14(7), DNS_Lookup@str(80), 
  4221 ;;		 -> makeIpv4AddresstoStr@ip_str(15), NULL(0), 
  4222 ;;  len             2    1[BANK0 ] unsigned int 
  4223 ;;  c               1   12[BANK0 ] char 
  4224 ;;  flag            1    5[BANK0 ] unsigned char 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  2   40[COMRAM] int 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4234 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;Total ram usage:       23 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    5
  4241 ;; This function calls:
  4242 ;;		Absolute function
  4243 ;;		___lldiv
  4244 ;;		___llmod
  4245 ;;		___wmul
  4246 ;;		_isdigit
  4247 ;;		_putch
  4248 ;; This function is called by:
  4249 ;;		_printf
  4250 ;;		_sprintf
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text19
  4255  011408                     __ptext19:
  4256                           	opt stack 0
  4257  011408                     __doprnt:
  4258                           	opt stack 21
  4259                           
  4260                           ;doprnt.c: 499: signed char c;
  4261                           ;doprnt.c: 504: int prec;
  4262                           ;doprnt.c: 508: unsigned char flag;
  4263                           ;doprnt.c: 523: union {
  4264                           ;doprnt.c: 524: unsigned long vd;
  4265                           ;doprnt.c: 525: double integ;
  4266                           ;doprnt.c: 526: } tmpval;
  4267                           ;doprnt.c: 528: unsigned long val;
  4268                           ;doprnt.c: 529: unsigned len;
  4269                           ;doprnt.c: 530: const char * cp;
  4270                           ;doprnt.c: 536: while(c = *f++) {
  4271                           
  4272                           ;incstack = 0
  4273  011408  D348               	goto	u12080
  4274  01140A                     
  4275                           ;doprnt.c: 538: if(c != '%')
  4276  01140A  0E25               	movlw	37
  4277  01140C  0100               	movlb	0	; () banked
  4278  01140E  196C               	xorwf	__doprnt@c& (0+255),w,b
  4279  011410  B4D8               	btfsc	status,2,c
  4280  011412  D034               	goto	l2049
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;doprnt.c: 540: {
  4284                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4285  011414  EE20 F002          	lfsr	2,2
  4286  011418  5029               	movf	__doprnt@pb,w,c
  4287  01141A  26D9               	addwf	fsr2l,f,c
  4288  01141C  502A               	movf	__doprnt@pb+1,w,c
  4289  01141E  22DA               	addwfc	fsr2h,f,c
  4290  011420  50DE               	movf	postinc2,w,c
  4291  011422  10DE               	iorwf	postinc2,w,c
  4292  011424  10DE               	iorwf	postinc2,w,c
  4293  011426  B4D8               	btfsc	status,2,c
  4294  011428  D013               	goto	l2050
  4295                           
  4296                           ; BSR set to: 0
  4297  01142A  EE20 F002          	lfsr	2,2
  4298  01142E  5029               	movf	__doprnt@pb,w,c
  4299  011430  26D9               	addwf	fsr2l,f,c
  4300  011432  502A               	movf	__doprnt@pb+1,w,c
  4301  011434  22DA               	addwfc	fsr2h,f,c
  4302  011436  D801               	call	u11768
  4303  011438  D330               	goto	u12080
  4304  01143A                     u11768:
  4305  01143A  0005               	push	
  4306  01143C  6EFA               	movwf	pclath,c
  4307  01143E  50DE               	movf	postinc2,w,c
  4308  011440  6EFD               	movwf	tosl,c
  4309  011442  50DE               	movf	postinc2,w,c
  4310  011444  6EFE               	movwf	tosh,c
  4311  011446  50DE               	movf	postinc2,w,c
  4312  011448  6EFF               	movwf	tosu,c
  4313  01144A  50FA               	movf	pclath,w,c
  4314  01144C  516C               	movf	__doprnt@c& (0+255),w,b
  4315  01144E  0012               	return		;indir
  4316  011450                     l2050:
  4317  011450  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4318  011454  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4319  011458  CFDE F02F          	movff	postinc2,??__doprnt
  4320  01145C  CFDD F030          	movff	postdec2,??__doprnt+1
  4321  011460  C02F  FFD9         	movff	??__doprnt,fsr2l
  4322  011464  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4323  011468  C06C  FFDF         	movff	__doprnt@c,indf2
  4324  01146C  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4325  011470  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4326  011474  2ADE               	incf	postinc2,f,c
  4327  011476  0E00               	movlw	0
  4328  011478  22DD               	addwfc	postdec2,f,c
  4329                           
  4330                           ;doprnt.c: 542: continue;
  4331  01147A  D30F               	goto	u12080
  4332  01147C                     l2049:
  4333                           
  4334                           ;doprnt.c: 543: }
  4335                           ;doprnt.c: 548: flag = 0;
  4336  01147C  0E00               	movlw	0
  4337  01147E  0100               	movlb	0	; () banked
  4338  011480  6F65               	movwf	__doprnt@flag& (0+255),b
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;doprnt.c: 611: if(*f == '.') {
  4342  011482  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4343  011486  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4344  01148A                     	if	0	;tblptru may be non-zero
  4345  01148A                     	endif
  4346  01148A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4347  01148A  0E00               	movlw	low (__mediumconst shr (0+16))
  4348  01148C  6EF8               	movwf	tblptru,c
  4349  01148E                     	endif
  4350  01148E  0008               	tblrd		*
  4351  011490  50F5               	movf	tablat,w,c
  4352  011492  0A2E               	xorlw	46
  4353  011494  A4D8               	btfss	status,2,c
  4354  011496  D032               	goto	l2052
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;doprnt.c: 613: f++;
  4358  011498  4A2B               	infsnz	__doprnt@f,f,c
  4359  01149A  2A2C               	incf	__doprnt@f+1,f,c
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;doprnt.c: 620: {
  4363                           ;doprnt.c: 621: prec = 0;
  4364  01149C  0E00               	movlw	0
  4365  01149E  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  4366  0114A0  0E00               	movlw	0
  4367  0114A2  6F6A               	movwf	__doprnt@prec& (0+255),b
  4368                           
  4369                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4370  0114A4  D01E               	goto	l2053
  4371  0114A6                     
  4372                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4373                           
  4374                           ; BSR set to: 0
  4375  0114A6  C06A  F013         	movff	__doprnt@prec,___wmul@multiplier
  4376  0114AA  C06B  F014         	movff	__doprnt@prec+1,___wmul@multiplier+1
  4377  0114AE  0E00               	movlw	0
  4378  0114B0  6E16               	movwf	___wmul@multiplicand+1,c
  4379  0114B2  0E0A               	movlw	10
  4380  0114B4  6E15               	movwf	___wmul@multiplicand,c
  4381  0114B6  EC4A  F0B6         	call	___wmul
  4382  0114BA  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4383  0114BE  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4384  0114C2                     	if	0	;tblptru may be non-zero
  4385  0114C2                     	endif
  4386  0114C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4387  0114C2  0E00               	movlw	low (__mediumconst shr (0+16))
  4388  0114C4  6EF8               	movwf	tblptru,c
  4389  0114C6                     	endif
  4390  0114C6  0008               	tblrd		*
  4391  0114C8  50F5               	movf	tablat,w,c
  4392  0114CA  2613               	addwf	?___wmul,f,c
  4393  0114CC  0E00               	movlw	0
  4394  0114CE  2214               	addwfc	?___wmul+1,f,c
  4395  0114D0  0ED0               	movlw	208
  4396  0114D2  2413               	addwf	?___wmul,w,c
  4397  0114D4  0100               	movlb	0	; () banked
  4398  0114D6  6F6A               	movwf	__doprnt@prec& (0+255),b
  4399  0114D8  0EFF               	movlw	255
  4400  0114DA  2014               	addwfc	?___wmul+1,w,c
  4401  0114DC  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  4402                           
  4403                           ; BSR set to: 0
  4404  0114DE  4A2B               	infsnz	__doprnt@f,f,c
  4405  0114E0  2A2C               	incf	__doprnt@f+1,f,c
  4406  0114E2                     l2053:
  4407                           
  4408                           ; BSR set to: 0
  4409                           
  4410                           ; BSR set to: 0
  4411  0114E2  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4412  0114E6  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4413  0114EA                     	if	0	;tblptru may be non-zero
  4414  0114EA                     	endif
  4415  0114EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4416  0114EA  0E00               	movlw	low (__mediumconst shr (0+16))
  4417  0114EC  6EF8               	movwf	tblptru,c
  4418  0114EE                     	endif
  4419  0114EE  0008               	tblrd		*
  4420  0114F0  50F5               	movf	tablat,w,c
  4421  0114F2  ECB4  F0B6         	call	_isdigit
  4422  0114F6  A0D8               	btfss	status,0,c
  4423  0114F8  D0BF               	goto	l2058
  4424  0114FA  D7D5               	goto	l2054
  4425  0114FC                     l2052:
  4426                           
  4427                           ;doprnt.c: 626: prec = 0;
  4428  0114FC  0E00               	movlw	0
  4429  0114FE  0100               	movlb	0	; () banked
  4430  011500  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  4431  011502  0E00               	movlw	0
  4432  011504  6F6A               	movwf	__doprnt@prec& (0+255),b
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;doprnt.c: 635: switch(c = *f++) {
  4436                           
  4437                           ;doprnt.c: 630: }
  4438                           ;doprnt.c: 633: loop:
  4439                           
  4440                           ; BSR set to: 0
  4441  011506  D0B8               	goto	l2058
  4442  011508                     
  4443                           ; BSR set to: 0
  4444                           ;doprnt.c: 643: flag |= 0x10;
  4445                           
  4446                           ; BSR set to: 0
  4447  011508  8965               	bsf	__doprnt@flag& (0+255),4,b
  4448                           
  4449                           ;doprnt.c: 644: goto loop;
  4450  01150A  D0B6               	goto	l2058
  4451  01150C                     
  4452                           ; BSR set to: 0
  4453                           ;doprnt.c: 718: case 'x':
  4454                           ;doprnt.c: 721: flag |= 0x80;
  4455                           
  4456                           ; BSR set to: 0
  4457                           
  4458                           ; BSR set to: 0
  4459  01150C  8F65               	bsf	__doprnt@flag& (0+255),7,b
  4460                           
  4461                           ;doprnt.c: 723: break;
  4462  01150E  D0DA               	goto	l2064
  4463  011510                     
  4464                           ; BSR set to: 0
  4465                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4466                           
  4467                           ; BSR set to: 0
  4468  011510  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4469  011514  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4470  011518  CFDF F02F          	movff	indf2,??__doprnt
  4471  01151C  0E02               	movlw	2
  4472  01151E  26DE               	addwf	postinc2,f,c
  4473  011520  CFDF F030          	movff	indf2,??__doprnt+1
  4474  011524  0E00               	movlw	0
  4475  011526  22DD               	addwfc	postdec2,f,c
  4476  011528  C02F  FFD9         	movff	??__doprnt,fsr2l
  4477  01152C  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4478  011530  CFDE F063          	movff	postinc2,__doprnt@cp
  4479  011534  CFDD F064          	movff	postdec2,__doprnt@cp+1
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;doprnt.c: 740: if(!cp)
  4483  011538  5163               	movf	__doprnt@cp& (0+255),w,b
  4484  01153A  1164               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  4485  01153C  A4D8               	btfss	status,2,c
  4486  01153E  D004               	goto	l2068
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;doprnt.c: 741: cp = "(null)";
  4490  011540  0EEA               	movlw	low STR_14
  4491  011542  6F63               	movwf	__doprnt@cp& (0+255),b
  4492  011544  0EFF               	movlw	high STR_14
  4493  011546  6F64               	movwf	(__doprnt@cp+1)& (0+255),b
  4494  011548                     l2068:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;doprnt.c: 745: len = 0;
  4498                           
  4499                           ; BSR set to: 0
  4500  011548  0E00               	movlw	0
  4501  01154A  6F62               	movwf	(__doprnt@len+1)& (0+255),b
  4502  01154C  0E00               	movlw	0
  4503  01154E  6F61               	movwf	__doprnt@len& (0+255),b
  4504                           
  4505                           ;doprnt.c: 746: while(cp[len])
  4506  011550  D003               	goto	l2069
  4507  011552                     
  4508                           ;doprnt.c: 747: len++;
  4509                           
  4510                           ; BSR set to: 0
  4511  011552  0100               	movlb	0	; () banked
  4512  011554  4B61               	infsnz	__doprnt@len& (0+255),f,b
  4513  011556  2B62               	incf	(__doprnt@len+1)& (0+255),f,b
  4514  011558                     l2069:
  4515                           
  4516                           ; BSR set to: 0
  4517                           
  4518                           ; BSR set to: 0
  4519  011558  5161               	movf	__doprnt@len& (0+255),w,b
  4520  01155A  2563               	addwf	__doprnt@cp& (0+255),w,b
  4521  01155C  6E2F               	movwf	??__doprnt& (0+255),c
  4522  01155E  5162               	movf	(__doprnt@len+1)& (0+255),w,b
  4523  011560  2164               	addwfc	(__doprnt@cp+1)& (0+255),w,b
  4524  011562  6E30               	movwf	(??__doprnt+1)& (0+255),c
  4525  011564  C02F  FFF6         	movff	??__doprnt,tblptrl
  4526  011568  C030  FFF7         	movff	??__doprnt+1,tblptrh
  4527  01156C  0E00               	movlw	low (__mediumconst shr (0+16))
  4528  01156E  6EF8               	movwf	tblptru,c
  4529  011570  0E0F               	movlw	(high __ramtop+-1)
  4530  011572  64F7               	cpfsgt	tblptrh,c
  4531  011574  D003               	bra	u11807
  4532  011576  0008               	tblrd		*
  4533  011578  50F5               	movf	tablat,w,c
  4534  01157A  D005               	bra	u11800
  4535  01157C                     u11807:
  4536  01157C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4537  011580  CFF7 FFEA          	movff	tblptrh,fsr0h
  4538  011584  50EF               	movf	indf0,w,c
  4539  011586                     u11800:
  4540  011586  0900               	iorlw	0
  4541  011588  A4D8               	btfss	status,2,c
  4542  01158A  D7E3               	goto	l2070
  4543                           
  4544                           ;doprnt.c: 753: if(prec && prec < len)
  4545  01158C  0100               	movlb	0	; () banked
  4546  01158E  516A               	movf	__doprnt@prec& (0+255),w,b
  4547  011590  116B               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  4548  011592  B4D8               	btfsc	status,2,c
  4549  011594  D065               	goto	l2076
  4550                           
  4551                           ; BSR set to: 0
  4552  011596  5161               	movf	__doprnt@len& (0+255),w,b
  4553  011598  5D6A               	subwf	__doprnt@prec& (0+255),w,b
  4554  01159A  5162               	movf	(__doprnt@len+1)& (0+255),w,b
  4555  01159C  596B               	subwfb	(__doprnt@prec+1)& (0+255),w,b
  4556  01159E  B0D8               	btfsc	status,0,c
  4557  0115A0  D05F               	goto	l2076
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;doprnt.c: 754: len = prec;
  4561  0115A2  C06A  F061         	movff	__doprnt@prec,__doprnt@len
  4562  0115A6  C06B  F062         	movff	__doprnt@prec+1,__doprnt@len+1
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;doprnt.c: 767: while(len--)
  4566  0115AA  D05A               	goto	l2076
  4567  0115AC                     l11960:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4571  0115AC  EE20 F002          	lfsr	2,2
  4572  0115B0  5029               	movf	__doprnt@pb,w,c
  4573  0115B2  26D9               	addwf	fsr2l,f,c
  4574  0115B4  502A               	movf	__doprnt@pb+1,w,c
  4575  0115B6  22DA               	addwfc	fsr2h,f,c
  4576  0115B8  50DE               	movf	postinc2,w,c
  4577  0115BA  10DE               	iorwf	postinc2,w,c
  4578  0115BC  10DE               	iorwf	postinc2,w,c
  4579  0115BE  B4D8               	btfsc	status,2,c
  4580  0115C0  D027               	goto	l2075
  4581                           
  4582                           ; BSR set to: 0
  4583  0115C2  EE20 F002          	lfsr	2,2
  4584  0115C6  5029               	movf	__doprnt@pb,w,c
  4585  0115C8  26D9               	addwf	fsr2l,f,c
  4586  0115CA  502A               	movf	__doprnt@pb+1,w,c
  4587  0115CC  22DA               	addwfc	fsr2h,f,c
  4588  0115CE  D801               	call	u11858
  4589  0115D0  D01B               	goto	u11859
  4590  0115D2                     u11858:
  4591  0115D2  0005               	push	
  4592  0115D4  6EFA               	movwf	pclath,c
  4593  0115D6  50DE               	movf	postinc2,w,c
  4594  0115D8  6EFD               	movwf	tosl,c
  4595  0115DA  50DE               	movf	postinc2,w,c
  4596  0115DC  6EFE               	movwf	tosh,c
  4597  0115DE  50DE               	movf	postinc2,w,c
  4598  0115E0  6EFF               	movwf	tosu,c
  4599  0115E2  50FA               	movf	pclath,w,c
  4600  0115E4  C063  FFF6         	movff	__doprnt@cp,tblptrl
  4601  0115E8  C064  FFF7         	movff	__doprnt@cp+1,tblptrh
  4602  0115EC  0E00               	movlw	low (__mediumconst shr (0+16))
  4603  0115EE  6EF8               	movwf	tblptru,c
  4604  0115F0  0E0F               	movlw	(high __ramtop+-1)
  4605  0115F2  64F7               	cpfsgt	tblptrh,c
  4606  0115F4  D003               	bra	u11867
  4607  0115F6  0008               	tblrd		*
  4608  0115F8  50F5               	movf	tablat,w,c
  4609  0115FA  D005               	bra	u11860
  4610  0115FC                     u11867:
  4611  0115FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  4612  011600  CFF7 FFEA          	movff	tblptrh,fsr0h
  4613  011604  50EF               	movf	indf0,w,c
  4614  011606                     u11860:
  4615  011606  0012               	return		;indir
  4616  011608                     u11859:
  4617  011608  0100               	movlb	0	; () banked
  4618  01160A  4B63               	infsnz	__doprnt@cp& (0+255),f,b
  4619  01160C  2B64               	incf	(__doprnt@cp+1)& (0+255),f,b
  4620  01160E  D028               	goto	l2076
  4621  011610                     l2075:
  4622                           
  4623                           ; BSR set to: 0
  4624                           
  4625                           ; BSR set to: 0
  4626  011610  C063  FFF6         	movff	__doprnt@cp,tblptrl
  4627  011614  C064  FFF7         	movff	__doprnt@cp+1,tblptrh
  4628  011618  0E00               	movlw	low (__mediumconst shr (0+16))
  4629  01161A  6EF8               	movwf	tblptru,c
  4630  01161C  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4631  011620  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4632  011624  CFDE F02F          	movff	postinc2,??__doprnt
  4633  011628  CFDD F030          	movff	postdec2,??__doprnt+1
  4634  01162C  C02F  FFD9         	movff	??__doprnt,fsr2l
  4635  011630  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4636  011634  0E0F               	movlw	(high __ramtop+-1)
  4637  011636  64F7               	cpfsgt	tblptrh,c
  4638  011638  D003               	bra	u11877
  4639  01163A  0008               	tblrd		*
  4640  01163C  50F5               	movf	tablat,w,c
  4641  01163E  D005               	bra	u11870
  4642  011640                     u11877:
  4643  011640  CFF6 FFE9          	movff	tblptrl,fsr0l
  4644  011644  CFF7 FFEA          	movff	tblptrh,fsr0h
  4645  011648  50EF               	movf	indf0,w,c
  4646  01164A                     u11870:
  4647  01164A  6EDF               	movwf	indf2,c
  4648  01164C  0100               	movlb	0	; () banked
  4649  01164E  4B63               	infsnz	__doprnt@cp& (0+255),f,b
  4650  011650  2B64               	incf	(__doprnt@cp+1)& (0+255),f,b
  4651                           
  4652                           ; BSR set to: 0
  4653  011652  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4654  011656  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4655  01165A  2ADE               	incf	postinc2,f,c
  4656  01165C  0E00               	movlw	0
  4657  01165E  22DD               	addwfc	postdec2,f,c
  4658  011660                     l2076:
  4659                           
  4660                           ; BSR set to: 0
  4661                           
  4662                           ; BSR set to: 0
  4663                           
  4664                           ; BSR set to: 0
  4665  011660  0761               	decf	__doprnt@len& (0+255),f,b
  4666  011662  A0D8               	btfss	status,0,c
  4667  011664  0762               	decf	(__doprnt@len+1)& (0+255),f,b
  4668  011666  2961               	incf	__doprnt@len& (0+255),w,b
  4669  011668  E1A1               	bnz	l11960
  4670  01166A  2962               	incf	(__doprnt@len+1)& (0+255),w,b
  4671  01166C  B4D8               	btfsc	status,2,c
  4672  01166E  D215               	goto	u12080
  4673  011670  D79D               	goto	l2074
  4674  011672                     
  4675                           ; BSR set to: 0
  4676                           ;doprnt.c: 818: flag |= 0xC0;
  4677                           
  4678                           ; BSR set to: 0
  4679  011672  0EC0               	movlw	192
  4680  011674  1365               	iorwf	__doprnt@flag& (0+255),f,b
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;doprnt.c: 822: }
  4684                           
  4685                           ;doprnt.c: 819: break;
  4686  011676  D026               	goto	l2064
  4687  011678                     l2058:
  4688                           
  4689                           ; BSR set to: 0
  4690  011678  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4691  01167C  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4692  011680  4A2B               	infsnz	__doprnt@f,f,c
  4693  011682  2A2C               	incf	__doprnt@f+1,f,c
  4694  011684                     	if	0	;tblptru may be non-zero
  4695  011684                     	endif
  4696  011684                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4697  011684  0E00               	movlw	low (__mediumconst shr (0+16))
  4698  011686  6EF8               	movwf	tblptru,c
  4699  011688                     	endif
  4700  011688  0008               	tblrd		*
  4701  01168A  CFF5 F06C          	movff	tablat,__doprnt@c
  4702  01168E  0100               	movlb	0	; () banked
  4703  011690  516C               	movf	__doprnt@c& (0+255),w,b
  4704                           
  4705                           ; Switch size 1, requested type "space"
  4706                           ; Number of cases is 8, Range of values is 0 to 120
  4707                           ; switch strategies available:
  4708                           ; Name         Instructions Cycles
  4709                           ; simple_byte           25    13 (average)
  4710                           ;	Chosen strategy is simple_byte
  4711  011692  0A00               	xorlw	0	; case 0
  4712  011694  B4D8               	btfsc	status,2,c
  4713  011696  D210               	goto	u12090
  4714  011698  0A58               	xorlw	88	; case 88
  4715  01169A  B4D8               	btfsc	status,2,c
  4716  01169C  D737               	goto	l2065
  4717  01169E  0A3C               	xorlw	60	; case 100
  4718  0116A0  B4D8               	btfsc	status,2,c
  4719  0116A2  D010               	goto	l2064
  4720  0116A4  0A0D               	xorlw	13	; case 105
  4721  0116A6  B4D8               	btfsc	status,2,c
  4722  0116A8  D00D               	goto	l2064
  4723  0116AA  0A05               	xorlw	5	; case 108
  4724  0116AC  B4D8               	btfsc	status,2,c
  4725  0116AE  D72C               	goto	l2061
  4726  0116B0  0A1F               	xorlw	31	; case 115
  4727  0116B2  B4D8               	btfsc	status,2,c
  4728  0116B4  D72D               	goto	l2067
  4729  0116B6  0A06               	xorlw	6	; case 117
  4730  0116B8  B4D8               	btfsc	status,2,c
  4731  0116BA  D7DB               	goto	l2079
  4732  0116BC  0A0D               	xorlw	13	; case 120
  4733  0116BE  B4D8               	btfsc	status,2,c
  4734  0116C0  D725               	goto	l2065
  4735  0116C2  D1EB               	goto	u12080
  4736  0116C4                     l2064:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  4740                           
  4741                           ; BSR set to: 0
  4742  0116C4  C065  F02F         	movff	__doprnt@flag,??__doprnt
  4743  0116C8  0EC0               	movlw	192
  4744  0116CA  162F               	andwf	??__doprnt,f,c
  4745  0116CC  A4D8               	btfss	status,2,c
  4746  0116CE  D041               	goto	l2080
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;doprnt.c: 1253: {
  4750                           ;doprnt.c: 1255: if(flag & 0x10)
  4751  0116D0  A965               	btfss	__doprnt@flag& (0+255),4,b
  4752  0116D2  D019               	goto	l2081
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  4756  0116D4  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4757  0116D8  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4758  0116DC  CFDF F02F          	movff	indf2,??__doprnt
  4759  0116E0  0E04               	movlw	4
  4760  0116E2  26DE               	addwf	postinc2,f,c
  4761  0116E4  CFDF F030          	movff	indf2,??__doprnt+1
  4762  0116E8  0E00               	movlw	0
  4763  0116EA  22DD               	addwfc	postdec2,f,c
  4764  0116EC  C02F  FFD9         	movff	??__doprnt,fsr2l
  4765  0116F0  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4766  0116F4  CFDE F066          	movff	postinc2,__doprnt@val
  4767  0116F8  CFDE F067          	movff	postinc2,__doprnt@val+1
  4768  0116FC  CFDE F068          	movff	postinc2,__doprnt@val+2
  4769  011700  CFDE F069          	movff	postinc2,__doprnt@val+3
  4770  011704  D019               	goto	l2082
  4771  011706                     l2081:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;doprnt.c: 1257: else
  4775                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4776                           
  4777                           ; BSR set to: 0
  4778  011706  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4779  01170A  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4780  01170E  CFDF F02F          	movff	indf2,??__doprnt
  4781  011712  0E02               	movlw	2
  4782  011714  26DE               	addwf	postinc2,f,c
  4783  011716  CFDF F030          	movff	indf2,??__doprnt+1
  4784  01171A  0E00               	movlw	0
  4785  01171C  22DD               	addwfc	postdec2,f,c
  4786  01171E  C02F  FFD9         	movff	??__doprnt,fsr2l
  4787  011722  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4788  011726  CFDE F066          	movff	postinc2,__doprnt@val
  4789  01172A  CFDD F067          	movff	postdec2,__doprnt@val+1
  4790  01172E  0E00               	movlw	0
  4791  011730  BF67               	btfsc	(__doprnt@val+1)& (0+255),7,b
  4792  011732  0EFF               	movlw	-1
  4793  011734  6F68               	movwf	(__doprnt@val+2)& (0+255),b
  4794  011736  6F69               	movwf	(__doprnt@val+3)& (0+255),b
  4795  011738                     l2082:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;doprnt.c: 1261: if((long)val < 0) {
  4799                           
  4800                           ; BSR set to: 0
  4801  011738  AF69               	btfss	(__doprnt@val+3)& (0+255),7,b
  4802  01173A  D040               	goto	l2086
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;doprnt.c: 1262: flag |= 0x03;
  4806  01173C  0E03               	movlw	3
  4807  01173E  1365               	iorwf	__doprnt@flag& (0+255),f,b
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;doprnt.c: 1263: val = -val;
  4811  011740  1F69               	comf	(__doprnt@val+3)& (0+255),f,b
  4812  011742  1F68               	comf	(__doprnt@val+2)& (0+255),f,b
  4813  011744  1F67               	comf	(__doprnt@val+1)& (0+255),f,b
  4814  011746  6D66               	negf	__doprnt@val& (0+255),b
  4815  011748  0E00               	movlw	0
  4816  01174A  2367               	addwfc	(__doprnt@val+1)& (0+255),f,b
  4817  01174C  2368               	addwfc	(__doprnt@val+2)& (0+255),f,b
  4818  01174E  2369               	addwfc	(__doprnt@val+3)& (0+255),f,b
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;doprnt.c: 1264: }
  4822                           ;doprnt.c: 1266: }
  4823  011750  D035               	goto	l2086
  4824  011752                     l2080:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;doprnt.c: 1268: else
  4828                           ;doprnt.c: 1273: {
  4829                           ;doprnt.c: 1281: if(flag & 0x10)
  4830  011752  A965               	btfss	__doprnt@flag& (0+255),4,b
  4831  011754  D019               	goto	l2085
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4835  011756  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4836  01175A  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4837  01175E  CFDF F02F          	movff	indf2,??__doprnt
  4838  011762  0E04               	movlw	4
  4839  011764  26DE               	addwf	postinc2,f,c
  4840  011766  CFDF F030          	movff	indf2,??__doprnt+1
  4841  01176A  0E00               	movlw	0
  4842  01176C  22DD               	addwfc	postdec2,f,c
  4843  01176E  C02F  FFD9         	movff	??__doprnt,fsr2l
  4844  011772  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4845  011776  CFDE F066          	movff	postinc2,__doprnt@val
  4846  01177A  CFDE F067          	movff	postinc2,__doprnt@val+1
  4847  01177E  CFDE F068          	movff	postinc2,__doprnt@val+2
  4848  011782  CFDE F069          	movff	postinc2,__doprnt@val+3
  4849  011786  D01A               	goto	l2086
  4850  011788                     l2085:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;doprnt.c: 1283: else
  4854                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4855                           
  4856                           ; BSR set to: 0
  4857  011788  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4858  01178C  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4859  011790  CFDF F02F          	movff	indf2,??__doprnt
  4860  011794  0E02               	movlw	2
  4861  011796  26DE               	addwf	postinc2,f,c
  4862  011798  CFDF F030          	movff	indf2,??__doprnt+1
  4863  01179C  0E00               	movlw	0
  4864  01179E  22DD               	addwfc	postdec2,f,c
  4865  0117A0  C02F  FFD9         	movff	??__doprnt,fsr2l
  4866  0117A4  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4867  0117A8  CFDE F031          	movff	postinc2,??__doprnt+2
  4868  0117AC  CFDD F032          	movff	postdec2,??__doprnt+3
  4869  0117B0  C031  F066         	movff	??__doprnt+2,__doprnt@val
  4870  0117B4  C032  F067         	movff	??__doprnt+3,__doprnt@val+1
  4871  0117B8  6B68               	clrf	(__doprnt@val+2)& (0+255),b
  4872  0117BA  6B69               	clrf	(__doprnt@val+3)& (0+255),b
  4873  0117BC                     l2086:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;doprnt.c: 1287: }
  4877                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4878                           
  4879                           ; BSR set to: 0
  4880                           
  4881                           ; BSR set to: 0
  4882  0117BC  516A               	movf	__doprnt@prec& (0+255),w,b
  4883  0117BE  116B               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  4884  0117C0  A4D8               	btfss	status,2,c
  4885  0117C2  D04B               	goto	l2088
  4886                           
  4887                           ; BSR set to: 0
  4888  0117C4  5166               	movf	__doprnt@val& (0+255),w,b
  4889  0117C6  1167               	iorwf	(__doprnt@val+1)& (0+255),w,b
  4890  0117C8  1168               	iorwf	(__doprnt@val+2)& (0+255),w,b
  4891  0117CA  1169               	iorwf	(__doprnt@val+3)& (0+255),w,b
  4892  0117CC  A4D8               	btfss	status,2,c
  4893  0117CE  D045               	goto	l2088
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;doprnt.c: 1291: prec++;
  4897  0117D0  4B6A               	infsnz	__doprnt@prec& (0+255),f,b
  4898  0117D2  2B6B               	incf	(__doprnt@prec+1)& (0+255),f,b
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  4902  0117D4  D042               	goto	l2088
  4903  0117D6                     
  4904                           ; BSR set to: 0
  4905                           ;doprnt.c: 1302: case 0xC0:
  4906                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4907                           
  4908                           ; BSR set to: 0
  4909                           
  4910                           ; BSR set to: 0
  4911  0117D6  0E01               	movlw	1
  4912  0117D8  6F6C               	movwf	__doprnt@c& (0+255),b
  4913  0117DA                     l12006:
  4914                           
  4915                           ; BSR set to: 0
  4916  0117DA  0E0A               	movlw	10
  4917  0117DC  196C               	xorwf	__doprnt@c& (0+255),w,b
  4918  0117DE  B4D8               	btfsc	status,2,c
  4919  0117E0  D047               	goto	l2094
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;doprnt.c: 1306: if(val < dpowers[c])
  4923                           
  4924                           ; BSR set to: 0
  4925                           
  4926                           ; BSR set to: 0
  4927  0117E2  516C               	movf	__doprnt@c& (0+255),w,b
  4928  0117E4  0D04               	mullw	4
  4929  0117E6  0E7D               	movlw	low _dpowers
  4930  0117E8  24F3               	addwf	prodl,w,c
  4931  0117EA  6EF6               	movwf	tblptrl,c
  4932  0117EC  0EFE               	movlw	high _dpowers
  4933  0117EE  20F4               	addwfc	prodh,w,c
  4934  0117F0  6EF7               	movwf	tblptrh,c
  4935  0117F2                     	if	1	;There are 3 active tblptr bytes
  4936  0117F2  6AF8               	clrf	tblptru,c
  4937  0117F4  0E00               	movlw	low (__mediumconst shr (0+16))
  4938  0117F6  22F8               	addwfc	tblptru,f,c
  4939  0117F8                     	endif
  4940  0117F8  0009               	tblrd		*+
  4941  0117FA  50F5               	movf	tablat,w,c
  4942  0117FC  5D66               	subwf	__doprnt@val& (0+255),w,b
  4943  0117FE  0009               	tblrd		*+
  4944  011800  50F5               	movf	tablat,w,c
  4945  011802  5967               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4946  011804  0009               	tblrd		*+
  4947  011806  50F5               	movf	tablat,w,c
  4948  011808  5968               	subwfb	(__doprnt@val+2)& (0+255),w,b
  4949  01180A  0009               	tblrd		*+
  4950  01180C  50F5               	movf	tablat,w,c
  4951  01180E  5969               	subwfb	(__doprnt@val+3)& (0+255),w,b
  4952  011810  A0D8               	btfss	status,0,c
  4953  011812  D02E               	goto	l2094
  4954                           
  4955                           ; BSR set to: 0
  4956                           
  4957                           ; BSR set to: 0
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;doprnt.c: 1307: break;
  4961  011814  2B6C               	incf	__doprnt@c& (0+255),f,b
  4962  011816  D7E1               	goto	l12006
  4963  011818                     
  4964                           ; BSR set to: 0
  4965                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4966                           
  4967                           ; BSR set to: 0
  4968  011818  0E01               	movlw	1
  4969  01181A  6F6C               	movwf	__doprnt@c& (0+255),b
  4970  01181C                     l12020:
  4971                           
  4972                           ; BSR set to: 0
  4973  01181C  0E08               	movlw	8
  4974  01181E  196C               	xorwf	__doprnt@c& (0+255),w,b
  4975  011820  B4D8               	btfsc	status,2,c
  4976  011822  D026               	goto	l2094
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4980                           
  4981                           ; BSR set to: 0
  4982                           
  4983                           ; BSR set to: 0
  4984  011824  516C               	movf	__doprnt@c& (0+255),w,b
  4985  011826  0D04               	mullw	4
  4986  011828  0EA5               	movlw	low _hexpowers
  4987  01182A  24F3               	addwf	prodl,w,c
  4988  01182C  6EF6               	movwf	tblptrl,c
  4989  01182E  0EFE               	movlw	high _hexpowers
  4990  011830  20F4               	addwfc	prodh,w,c
  4991  011832  6EF7               	movwf	tblptrh,c
  4992  011834                     	if	1	;There are 3 active tblptr bytes
  4993  011834  6AF8               	clrf	tblptru,c
  4994  011836  0E00               	movlw	low (__mediumconst shr (0+16))
  4995  011838  22F8               	addwfc	tblptru,f,c
  4996  01183A                     	endif
  4997  01183A  0009               	tblrd		*+
  4998  01183C  50F5               	movf	tablat,w,c
  4999  01183E  5D66               	subwf	__doprnt@val& (0+255),w,b
  5000  011840  0009               	tblrd		*+
  5001  011842  50F5               	movf	tablat,w,c
  5002  011844  5967               	subwfb	(__doprnt@val+1)& (0+255),w,b
  5003  011846  0009               	tblrd		*+
  5004  011848  50F5               	movf	tablat,w,c
  5005  01184A  5968               	subwfb	(__doprnt@val+2)& (0+255),w,b
  5006  01184C  0009               	tblrd		*+
  5007  01184E  50F5               	movf	tablat,w,c
  5008  011850  5969               	subwfb	(__doprnt@val+3)& (0+255),w,b
  5009  011852  A0D8               	btfss	status,0,c
  5010  011854  D00D               	goto	l2094
  5011                           
  5012                           ; BSR set to: 0
  5013                           
  5014                           ; BSR set to: 0
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;doprnt.c: 1318: break;
  5018  011856  2B6C               	incf	__doprnt@c& (0+255),f,b
  5019  011858  D7E1               	goto	l12020
  5020  01185A                     l2088:
  5021                           
  5022                           ; BSR set to: 0
  5023                           
  5024                           ; BSR set to: 0
  5025  01185A  5165               	movf	__doprnt@flag& (0+255),w,b
  5026  01185C  0BC0               	andlw	192
  5027                           
  5028                           ; Switch size 1, requested type "space"
  5029                           ; Number of cases is 3, Range of values is 0 to 192
  5030                           ; switch strategies available:
  5031                           ; Name         Instructions Cycles
  5032                           ; simple_byte           10     6 (average)
  5033                           ;	Chosen strategy is simple_byte
  5034  01185E  0A00               	xorlw	0	; case 0
  5035  011860  B4D8               	btfsc	status,2,c
  5036  011862  D7B9               	goto	l2089
  5037  011864  0A80               	xorlw	128	; case 128
  5038  011866  B4D8               	btfsc	status,2,c
  5039  011868  D7D7               	goto	l2095
  5040  01186A  0A40               	xorlw	64	; case 192
  5041  01186C  B4D8               	btfsc	status,2,c
  5042  01186E  D7B3               	goto	l2089
  5043  011870                     l2094:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;doprnt.c: 1339: if(c < prec)
  5047                           
  5048                           ; BSR set to: 0
  5049  011870  0E80               	movlw	128
  5050  011872  BF6C               	btfsc	__doprnt@c& (0+255),7,b
  5051  011874  0E7F               	movlw	127
  5052  011876  6E2F               	movwf	??__doprnt& (0+255),c
  5053  011878  516A               	movf	__doprnt@prec& (0+255),w,b
  5054  01187A  5D6C               	subwf	__doprnt@c& (0+255),w,b
  5055  01187C  516B               	movf	(__doprnt@prec+1)& (0+255),w,b
  5056  01187E  0A80               	xorlw	128
  5057  011880  582F               	subwfb	??__doprnt& (0+255),w,c
  5058  011882  B0D8               	btfsc	status,0,c
  5059  011884  D003               	goto	l2099
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;doprnt.c: 1340: c = prec;
  5063  011886  C06A  F06C         	movff	__doprnt@prec,__doprnt@c
  5064  01188A  D010               	goto	l2101
  5065  01188C                     l2099:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;doprnt.c: 1341: else if(prec < c)
  5069                           
  5070                           ; BSR set to: 0
  5071  01188C  516B               	movf	(__doprnt@prec+1)& (0+255),w,b
  5072  01188E  0A80               	xorlw	128
  5073  011890  6E2F               	movwf	??__doprnt& (0+255),c
  5074  011892  516C               	movf	__doprnt@c& (0+255),w,b
  5075  011894  5D6A               	subwf	__doprnt@prec& (0+255),w,b
  5076  011896  0E80               	movlw	128
  5077  011898  BF6C               	btfsc	__doprnt@c& (0+255),7,b
  5078  01189A  0E7F               	movlw	127
  5079  01189C  582F               	subwfb	??__doprnt& (0+255),w,c
  5080  01189E  B0D8               	btfsc	status,0,c
  5081  0118A0  D005               	goto	l2101
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;doprnt.c: 1342: prec = c;
  5085  0118A2  516C               	movf	__doprnt@c& (0+255),w,b
  5086  0118A4  6F6A               	movwf	__doprnt@prec& (0+255),b
  5087  0118A6  6B6B               	clrf	(__doprnt@prec+1)& (0+255),b
  5088  0118A8  BF6A               	btfsc	__doprnt@prec& (0+255),7,b
  5089  0118AA  076B               	decf	(__doprnt@prec+1)& (0+255),f,b
  5090  0118AC                     l2101:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;doprnt.c: 1422: {
  5094                           ;doprnt.c: 1438: if(flag & 0x03)
  5095                           
  5096                           ; BSR set to: 0
  5097                           
  5098                           ; BSR set to: 0
  5099  0118AC  C065  F02F         	movff	__doprnt@flag,??__doprnt
  5100  0118B0  0E03               	movlw	3
  5101  0118B2  162F               	andwf	??__doprnt,f,c
  5102  0118B4  B4D8               	btfsc	status,2,c
  5103  0118B6  D0E8               	goto	l2113
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  5107  0118B8  EE20 F002          	lfsr	2,2
  5108  0118BC  5029               	movf	__doprnt@pb,w,c
  5109  0118BE  26D9               	addwf	fsr2l,f,c
  5110  0118C0  502A               	movf	__doprnt@pb+1,w,c
  5111  0118C2  22DA               	addwfc	fsr2h,f,c
  5112  0118C4  50DE               	movf	postinc2,w,c
  5113  0118C6  10DE               	iorwf	postinc2,w,c
  5114  0118C8  10DE               	iorwf	postinc2,w,c
  5115  0118CA  B4D8               	btfsc	status,2,c
  5116  0118CC  D013               	goto	l2103
  5117                           
  5118                           ; BSR set to: 0
  5119  0118CE  EE20 F002          	lfsr	2,2
  5120  0118D2  5029               	movf	__doprnt@pb,w,c
  5121  0118D4  26D9               	addwf	fsr2l,f,c
  5122  0118D6  502A               	movf	__doprnt@pb+1,w,c
  5123  0118D8  22DA               	addwfc	fsr2h,f,c
  5124  0118DA  D801               	call	u12058
  5125  0118DC  D0D5               	goto	l2113
  5126  0118DE                     u12058:
  5127  0118DE  0005               	push	
  5128  0118E0  6EFA               	movwf	pclath,c
  5129  0118E2  50DE               	movf	postinc2,w,c
  5130  0118E4  6EFD               	movwf	tosl,c
  5131  0118E6  50DE               	movf	postinc2,w,c
  5132  0118E8  6EFE               	movwf	tosh,c
  5133  0118EA  50DE               	movf	postinc2,w,c
  5134  0118EC  6EFF               	movwf	tosu,c
  5135  0118EE  50FA               	movf	pclath,w,c
  5136  0118F0  0E2D               	movlw	45
  5137  0118F2  0012               	return		;indir
  5138  0118F4                     l2103:
  5139  0118F4  C029  FFD9         	movff	__doprnt@pb,fsr2l
  5140  0118F8  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  5141  0118FC  CFDE F02F          	movff	postinc2,??__doprnt
  5142  011900  CFDD F030          	movff	postdec2,??__doprnt+1
  5143  011904  C02F  FFD9         	movff	??__doprnt,fsr2l
  5144  011908  C030  FFDA         	movff	??__doprnt+1,fsr2h
  5145  01190C  0E2D               	movlw	45
  5146  01190E  6EDF               	movwf	indf2,c
  5147  011910  D0B4               	goto	l12070
  5148  011912                     
  5149                           ;doprnt.c: 1486: case 0xC0:
  5150                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5151  011912  C06A  F02F         	movff	__doprnt@prec,??__doprnt
  5152  011916  C06B  F030         	movff	__doprnt@prec+1,??__doprnt+1
  5153  01191A  90D8               	bcf	status,0,c
  5154  01191C  362F               	rlcf	??__doprnt,f,c
  5155  01191E  3630               	rlcf	??__doprnt+1,f,c
  5156  011920  90D8               	bcf	status,0,c
  5157  011922  362F               	rlcf	??__doprnt,f,c
  5158  011924  3630               	rlcf	??__doprnt+1,f,c
  5159  011926  0E7D               	movlw	low _dpowers
  5160  011928  242F               	addwf	??__doprnt,w,c
  5161  01192A  6EF6               	movwf	tblptrl,c
  5162  01192C  0EFE               	movlw	high _dpowers
  5163  01192E  2030               	addwfc	??__doprnt+1,w,c
  5164  011930  6EF7               	movwf	tblptrh,c
  5165  011932                     	if	1	;There are 3 active tblptr bytes
  5166  011932  6AF8               	clrf	tblptru,c
  5167  011934  0E00               	movlw	low (__mediumconst shr (0+16))
  5168  011936  22F8               	addwfc	tblptru,f,c
  5169  011938                     	endif
  5170  011938  0009               	tblrd		*+
  5171  01193A  CFF5 F017          	movff	tablat,___lldiv@divisor
  5172  01193E  0009               	tblrd		*+
  5173  011940  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  5174  011944  0009               	tblrd		*+
  5175  011946  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  5176  01194A  000A               	tblrd		*-
  5177  01194C  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  5178  011950  C066  F013         	movff	__doprnt@val,___lldiv@dividend
  5179  011954  C067  F014         	movff	__doprnt@val+1,___lldiv@dividend+1
  5180  011958  C068  F015         	movff	__doprnt@val+2,___lldiv@dividend+2
  5181  01195C  C069  F016         	movff	__doprnt@val+3,___lldiv@dividend+3
  5182  011960  ECDA  F0AF         	call	___lldiv
  5183  011964  C013  F020         	movff	?___lldiv,___llmod@dividend
  5184  011968  C014  F021         	movff	?___lldiv+1,___llmod@dividend+1
  5185  01196C  C015  F022         	movff	?___lldiv+2,___llmod@dividend+2
  5186  011970  C016  F023         	movff	?___lldiv+3,___llmod@dividend+3
  5187  011974  0E0A               	movlw	10
  5188  011976  6E24               	movwf	___llmod@divisor,c
  5189  011978  0E00               	movlw	0
  5190  01197A  6E25               	movwf	___llmod@divisor+1,c
  5191  01197C  0E00               	movlw	0
  5192  01197E  6E26               	movwf	___llmod@divisor+2,c
  5193  011980  0E00               	movlw	0
  5194  011982  6E27               	movwf	___llmod@divisor+3,c
  5195  011984  EC84  F0B1         	call	___llmod	;wreg free
  5196  011988  5020               	movf	?___llmod,w,c
  5197  01198A  0F30               	addlw	48
  5198  01198C  0100               	movlb	0	; () banked
  5199  01198E  6F6C               	movwf	__doprnt@c& (0+255),b
  5200                           
  5201                           ;doprnt.c: 1491: break;
  5202  011990  D048               	goto	l2110
  5203  011992                     
  5204                           ; BSR set to: 0
  5205                           ;doprnt.c: 1499: {
  5206                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5207                           
  5208                           ; BSR set to: 0
  5209  011992  C066  F013         	movff	__doprnt@val,___lldiv@dividend
  5210  011996  C067  F014         	movff	__doprnt@val+1,___lldiv@dividend+1
  5211  01199A  C068  F015         	movff	__doprnt@val+2,___lldiv@dividend+2
  5212  01199E  C069  F016         	movff	__doprnt@val+3,___lldiv@dividend+3
  5213  0119A2  C06A  F02F         	movff	__doprnt@prec,??__doprnt
  5214  0119A6  C06B  F030         	movff	__doprnt@prec+1,??__doprnt+1
  5215  0119AA  90D8               	bcf	status,0,c
  5216  0119AC  362F               	rlcf	??__doprnt,f,c
  5217  0119AE  3630               	rlcf	??__doprnt+1,f,c
  5218  0119B0  90D8               	bcf	status,0,c
  5219  0119B2  362F               	rlcf	??__doprnt,f,c
  5220  0119B4  3630               	rlcf	??__doprnt+1,f,c
  5221  0119B6  0EA5               	movlw	low _hexpowers
  5222  0119B8  242F               	addwf	??__doprnt,w,c
  5223  0119BA  6EF6               	movwf	tblptrl,c
  5224  0119BC  0EFE               	movlw	high _hexpowers
  5225  0119BE  2030               	addwfc	??__doprnt+1,w,c
  5226  0119C0  6EF7               	movwf	tblptrh,c
  5227  0119C2                     	if	1	;There are 3 active tblptr bytes
  5228  0119C2  6AF8               	clrf	tblptru,c
  5229  0119C4  0E00               	movlw	low (__mediumconst shr (0+16))
  5230  0119C6  22F8               	addwfc	tblptru,f,c
  5231  0119C8                     	endif
  5232  0119C8  0009               	tblrd		*+
  5233  0119CA  CFF5 F017          	movff	tablat,___lldiv@divisor
  5234  0119CE  0009               	tblrd		*+
  5235  0119D0  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  5236  0119D4  0009               	tblrd		*+
  5237  0119D6  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  5238  0119DA  000A               	tblrd		*-
  5239  0119DC  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  5240  0119E0  ECDA  F0AF         	call	___lldiv	;wreg free
  5241  0119E4  5013               	movf	?___lldiv,w,c
  5242  0119E6  0B0F               	andlw	15
  5243  0119E8  0100               	movlb	0	; () banked
  5244  0119EA  6F60               	movwf	__doprnt@idx& (0+255),b
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  5248  0119EC  5160               	movf	__doprnt@idx& (0+255),w,b
  5249  0119EE  0D01               	mullw	1
  5250  0119F0  0EBA               	movlw	low STR_15
  5251  0119F2  24F3               	addwf	prodl,w,c
  5252  0119F4  6EF6               	movwf	tblptrl,c
  5253  0119F6  0EFF               	movlw	high STR_15
  5254  0119F8  20F4               	addwfc	prodh,w,c
  5255  0119FA  6EF7               	movwf	tblptrh,c
  5256  0119FC                     	if	1	;There are 3 active tblptr bytes
  5257  0119FC  6AF8               	clrf	tblptru,c
  5258  0119FE  0E00               	movlw	low (__mediumconst shr (0+16))
  5259  011A00  22F8               	addwfc	tblptru,f,c
  5260  011A02                     	endif
  5261  011A02  0008               	tblrd		*
  5262  011A04  CFF5 F06C          	movff	tablat,__doprnt@c
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;doprnt.c: 1523: }
  5266                           
  5267                           ;doprnt.c: 1508: }
  5268                           ;doprnt.c: 1510: break;
  5269  011A08  D00C               	goto	l2110
  5270  011A0A                     l12062:
  5271  011A0A  0100               	movlb	0	; () banked
  5272  011A0C  5165               	movf	__doprnt@flag& (0+255),w,b
  5273  011A0E  0BC0               	andlw	192
  5274                           
  5275                           ; Switch size 1, requested type "space"
  5276                           ; Number of cases is 3, Range of values is 0 to 192
  5277                           ; switch strategies available:
  5278                           ; Name         Instructions Cycles
  5279                           ; simple_byte           10     6 (average)
  5280                           ;	Chosen strategy is simple_byte
  5281  011A10  0A00               	xorlw	0	; case 0
  5282  011A12  B4D8               	btfsc	status,2,c
  5283  011A14  D77E               	goto	l2108
  5284  011A16  0A80               	xorlw	128	; case 128
  5285  011A18  B4D8               	btfsc	status,2,c
  5286  011A1A  D7BB               	goto	l2111
  5287  011A1C  0A40               	xorlw	64	; case 192
  5288  011A1E  B4D8               	btfsc	status,2,c
  5289  011A20  D778               	goto	l2108
  5290  011A22                     l2110:
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  5294                           
  5295                           ; BSR set to: 0
  5296  011A22  EE20 F002          	lfsr	2,2
  5297  011A26  5029               	movf	__doprnt@pb,w,c
  5298  011A28  26D9               	addwf	fsr2l,f,c
  5299  011A2A  502A               	movf	__doprnt@pb+1,w,c
  5300  011A2C  22DA               	addwfc	fsr2h,f,c
  5301  011A2E  50DE               	movf	postinc2,w,c
  5302  011A30  10DE               	iorwf	postinc2,w,c
  5303  011A32  10DE               	iorwf	postinc2,w,c
  5304  011A34  B4D8               	btfsc	status,2,c
  5305  011A36  D013               	goto	l2112
  5306                           
  5307                           ; BSR set to: 0
  5308  011A38  EE20 F002          	lfsr	2,2
  5309  011A3C  5029               	movf	__doprnt@pb,w,c
  5310  011A3E  26D9               	addwf	fsr2l,f,c
  5311  011A40  502A               	movf	__doprnt@pb+1,w,c
  5312  011A42  22DA               	addwfc	fsr2h,f,c
  5313  011A44  D801               	call	u12078
  5314  011A46  D020               	goto	l2113
  5315  011A48                     u12078:
  5316  011A48  0005               	push	
  5317  011A4A  6EFA               	movwf	pclath,c
  5318  011A4C  50DE               	movf	postinc2,w,c
  5319  011A4E  6EFD               	movwf	tosl,c
  5320  011A50  50DE               	movf	postinc2,w,c
  5321  011A52  6EFE               	movwf	tosh,c
  5322  011A54  50DE               	movf	postinc2,w,c
  5323  011A56  6EFF               	movwf	tosu,c
  5324  011A58  50FA               	movf	pclath,w,c
  5325  011A5A  516C               	movf	__doprnt@c& (0+255),w,b
  5326  011A5C  0012               	return		;indir
  5327  011A5E                     l2112:
  5328  011A5E  C029  FFD9         	movff	__doprnt@pb,fsr2l
  5329  011A62  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  5330  011A66  CFDE F02F          	movff	postinc2,??__doprnt
  5331  011A6A  CFDD F030          	movff	postdec2,??__doprnt+1
  5332  011A6E  C02F  FFD9         	movff	??__doprnt,fsr2l
  5333  011A72  C030  FFDA         	movff	??__doprnt+1,fsr2h
  5334  011A76  C06C  FFDF         	movff	__doprnt@c,indf2
  5335  011A7A                     l12070:
  5336  011A7A  C029  FFD9         	movff	__doprnt@pb,fsr2l
  5337  011A7E  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  5338  011A82  2ADE               	incf	postinc2,f,c
  5339  011A84  0E00               	movlw	0
  5340  011A86  22DD               	addwfc	postdec2,f,c
  5341  011A88                     l2113:
  5342  011A88  0100               	movlb	0	; () banked
  5343  011A8A  076A               	decf	__doprnt@prec& (0+255),f,b
  5344  011A8C  A0D8               	btfss	status,0,c
  5345  011A8E  076B               	decf	(__doprnt@prec+1)& (0+255),f,b
  5346  011A90  296A               	incf	__doprnt@prec& (0+255),w,b
  5347  011A92  E1BB               	bnz	l12062
  5348  011A94  296B               	incf	(__doprnt@prec+1)& (0+255),w,b
  5349  011A96  A4D8               	btfss	status,2,c
  5350  011A98  D7B8               	goto	l2107
  5351  011A9A                     u12080:
  5352                           
  5353                           ; BSR set to: 0
  5354                           
  5355                           ; BSR set to: 0
  5356  011A9A  C02B  FFF6         	movff	__doprnt@f,tblptrl
  5357  011A9E  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  5358  011AA2  4A2B               	infsnz	__doprnt@f,f,c
  5359  011AA4  2A2C               	incf	__doprnt@f+1,f,c
  5360  011AA6                     	if	0	;tblptru may be non-zero
  5361  011AA6                     	endif
  5362  011AA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5363  011AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  5364  011AA8  6EF8               	movwf	tblptru,c
  5365  011AAA                     	endif
  5366  011AAA  0008               	tblrd		*
  5367  011AAC  CFF5 F06C          	movff	tablat,__doprnt@c
  5368  011AB0  0100               	movlb	0	; () banked
  5369  011AB2  516C               	movf	__doprnt@c& (0+255),w,b
  5370  011AB4  A4D8               	btfss	status,2,c
  5371  011AB6  D4A9               	goto	l2048
  5372  011AB8                     u12090:
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;doprnt.c: 1540: return 0;
  5376                           
  5377                           ; BSR set to: 0
  5378                           
  5379                           ;doprnt.c: 1525: }
  5380                           ;doprnt.c: 1533: }
  5381                           ;doprnt.c: 1535: alldone:
  5382                           
  5383                           ; BSR set to: 0
  5384  011AB8  0E00               	movlw	0
  5385  011ABA  6E2A               	movwf	?__doprnt+1,c
  5386  011ABC  0E00               	movlw	0
  5387  011ABE  6E29               	movwf	?__doprnt,c
  5388  011AC0  0012               	return	
  5389  011AC2                     __end_of__doprnt:
  5390                           	opt stack 0
  5391                           tosu	equ	0xFFF
  5392                           tosh	equ	0xFFE
  5393                           tosl	equ	0xFFD
  5394                           pclath	equ	0xFFA
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           prodh	equ	0xFF4
  5400                           prodl	equ	0xFF3
  5401                           intcon	equ	0xFF2
  5402                           indf0	equ	0xFEF
  5403                           postinc0	equ	0xFEE
  5404                           fsr0h	equ	0xFEA
  5405                           fsr0l	equ	0xFE9
  5406                           wreg	equ	0xFE8
  5407                           postdec1	equ	0xFE5
  5408                           fsr1l	equ	0xFE1
  5409                           indf2	equ	0xFDF
  5410                           postinc2	equ	0xFDE
  5411                           postdec2	equ	0xFDD
  5412                           fsr2h	equ	0xFDA
  5413                           fsr2l	equ	0xFD9
  5414                           status	equ	0xFD8
  5415                           
  5416 ;; *************** function ___llmod *****************
  5417 ;; Defined at:
  5418 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\llmod.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  dividend        4   31[COMRAM] unsigned long 
  5421 ;;  divisor         4   35[COMRAM] unsigned long 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  counter         1   39[COMRAM] unsigned char 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  4   31[COMRAM] unsigned long 
  5426 ;; Registers used:
  5427 ;;		wreg, status,2, status,0
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5433 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;Total ram usage:        9 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:    4
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		__doprnt
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text20
  5448  016308                     __ptext20:
  5449                           	opt stack 0
  5450  016308                     ___llmod:
  5451                           	opt stack 21
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;incstack = 0
  5455  016308  5024               	movf	___llmod@divisor,w,c
  5456  01630A  1025               	iorwf	___llmod@divisor+1,w,c
  5457  01630C  1026               	iorwf	___llmod@divisor+2,w,c
  5458  01630E  1027               	iorwf	___llmod@divisor+3,w,c
  5459  016310  B4D8               	btfsc	status,2,c
  5460  016312  D024               	goto	l2502
  5461  016314  0E01               	movlw	1
  5462  016316  6E28               	movwf	___llmod@counter,c
  5463  016318  D006               	goto	l2497
  5464  01631A  90D8               	bcf	status,0,c
  5465  01631C  3624               	rlcf	___llmod@divisor,f,c
  5466  01631E  3625               	rlcf	___llmod@divisor+1,f,c
  5467  016320  3626               	rlcf	___llmod@divisor+2,f,c
  5468  016322  3627               	rlcf	___llmod@divisor+3,f,c
  5469  016324  2A28               	incf	___llmod@counter,f,c
  5470  016326                     l2497:
  5471  016326  AE27               	btfss	___llmod@divisor+3,7,c
  5472  016328  D7F8               	goto	l2498
  5473  01632A                     u10600:
  5474  01632A  5024               	movf	___llmod@divisor,w,c
  5475  01632C  5C20               	subwf	___llmod@dividend,w,c
  5476  01632E  5025               	movf	___llmod@divisor+1,w,c
  5477  016330  5821               	subwfb	___llmod@dividend+1,w,c
  5478  016332  5026               	movf	___llmod@divisor+2,w,c
  5479  016334  5822               	subwfb	___llmod@dividend+2,w,c
  5480  016336  5027               	movf	___llmod@divisor+3,w,c
  5481  016338  5823               	subwfb	___llmod@dividend+3,w,c
  5482  01633A  A0D8               	btfss	status,0,c
  5483  01633C  D008               	goto	l2501
  5484  01633E  5024               	movf	___llmod@divisor,w,c
  5485  016340  5E20               	subwf	___llmod@dividend,f,c
  5486  016342  5025               	movf	___llmod@divisor+1,w,c
  5487  016344  5A21               	subwfb	___llmod@dividend+1,f,c
  5488  016346  5026               	movf	___llmod@divisor+2,w,c
  5489  016348  5A22               	subwfb	___llmod@dividend+2,f,c
  5490  01634A  5027               	movf	___llmod@divisor+3,w,c
  5491  01634C  5A23               	subwfb	___llmod@dividend+3,f,c
  5492  01634E                     l2501:
  5493  01634E  90D8               	bcf	status,0,c
  5494  016350  3227               	rrcf	___llmod@divisor+3,f,c
  5495  016352  3226               	rrcf	___llmod@divisor+2,f,c
  5496  016354  3225               	rrcf	___llmod@divisor+1,f,c
  5497  016356  3224               	rrcf	___llmod@divisor,f,c
  5498  016358  2E28               	decfsz	___llmod@counter,f,c
  5499  01635A  D7E7               	goto	u10600
  5500  01635C                     l2502:
  5501  01635C  C020  F020         	movff	___llmod@dividend,?___llmod
  5502  016360  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  5503  016364  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  5504  016368  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  5505  01636C  0012               	return		;funcret
  5506  01636E                     __end_of___llmod:
  5507                           	opt stack 0
  5508                           tosu	equ	0xFFF
  5509                           tosh	equ	0xFFE
  5510                           tosl	equ	0xFFD
  5511                           pclath	equ	0xFFA
  5512                           tblptru	equ	0xFF8
  5513                           tblptrh	equ	0xFF7
  5514                           tblptrl	equ	0xFF6
  5515                           tablat	equ	0xFF5
  5516                           prodh	equ	0xFF4
  5517                           prodl	equ	0xFF3
  5518                           intcon	equ	0xFF2
  5519                           indf0	equ	0xFEF
  5520                           postinc0	equ	0xFEE
  5521                           fsr0h	equ	0xFEA
  5522                           fsr0l	equ	0xFE9
  5523                           wreg	equ	0xFE8
  5524                           postdec1	equ	0xFE5
  5525                           fsr1l	equ	0xFE1
  5526                           indf2	equ	0xFDF
  5527                           postinc2	equ	0xFDE
  5528                           postdec2	equ	0xFDD
  5529                           fsr2h	equ	0xFDA
  5530                           fsr2l	equ	0xFD9
  5531                           status	equ	0xFD8
  5532                           
  5533 ;; *************** function ___lldiv *****************
  5534 ;; Defined at:
  5535 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\lldiv.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  dividend        4   18[COMRAM] unsigned long 
  5538 ;;  divisor         4   22[COMRAM] unsigned long 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  quotient        4   26[COMRAM] unsigned long 
  5541 ;;  counter         1   30[COMRAM] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  4   18[COMRAM] unsigned long 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5551 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;Total ram usage:       13 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    4
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		__doprnt
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text21
  5566  015FB4                     __ptext21:
  5567                           	opt stack 0
  5568  015FB4                     ___lldiv:
  5569                           	opt stack 21
  5570                           
  5571                           ;incstack = 0
  5572  015FB4  0E00               	movlw	0
  5573  015FB6  6E1B               	movwf	___lldiv@quotient,c
  5574  015FB8  0E00               	movlw	0
  5575  015FBA  6E1C               	movwf	___lldiv@quotient+1,c
  5576  015FBC  0E00               	movlw	0
  5577  015FBE  6E1D               	movwf	___lldiv@quotient+2,c
  5578  015FC0  0E00               	movlw	0
  5579  015FC2  6E1E               	movwf	___lldiv@quotient+3,c
  5580  015FC4  5017               	movf	___lldiv@divisor,w,c
  5581  015FC6  1018               	iorwf	___lldiv@divisor+1,w,c
  5582  015FC8  1019               	iorwf	___lldiv@divisor+2,w,c
  5583  015FCA  101A               	iorwf	___lldiv@divisor+3,w,c
  5584  015FCC  B4D8               	btfsc	status,2,c
  5585  015FCE  D02A               	goto	l2492
  5586  015FD0  0E01               	movlw	1
  5587  015FD2  6E1F               	movwf	___lldiv@counter,c
  5588  015FD4  D006               	goto	l2487
  5589  015FD6  90D8               	bcf	status,0,c
  5590  015FD8  3617               	rlcf	___lldiv@divisor,f,c
  5591  015FDA  3618               	rlcf	___lldiv@divisor+1,f,c
  5592  015FDC  3619               	rlcf	___lldiv@divisor+2,f,c
  5593  015FDE  361A               	rlcf	___lldiv@divisor+3,f,c
  5594  015FE0  2A1F               	incf	___lldiv@counter,f,c
  5595  015FE2                     l2487:
  5596  015FE2  AE1A               	btfss	___lldiv@divisor+3,7,c
  5597  015FE4  D7F8               	goto	l2488
  5598  015FE6                     u10570:
  5599  015FE6  90D8               	bcf	status,0,c
  5600  015FE8  361B               	rlcf	___lldiv@quotient,f,c
  5601  015FEA  361C               	rlcf	___lldiv@quotient+1,f,c
  5602  015FEC  361D               	rlcf	___lldiv@quotient+2,f,c
  5603  015FEE  361E               	rlcf	___lldiv@quotient+3,f,c
  5604  015FF0  5017               	movf	___lldiv@divisor,w,c
  5605  015FF2  5C13               	subwf	___lldiv@dividend,w,c
  5606  015FF4  5018               	movf	___lldiv@divisor+1,w,c
  5607  015FF6  5814               	subwfb	___lldiv@dividend+1,w,c
  5608  015FF8  5019               	movf	___lldiv@divisor+2,w,c
  5609  015FFA  5815               	subwfb	___lldiv@dividend+2,w,c
  5610  015FFC  501A               	movf	___lldiv@divisor+3,w,c
  5611  015FFE  5816               	subwfb	___lldiv@dividend+3,w,c
  5612  016000  A0D8               	btfss	status,0,c
  5613  016002  D009               	goto	l2491
  5614  016004  5017               	movf	___lldiv@divisor,w,c
  5615  016006  5E13               	subwf	___lldiv@dividend,f,c
  5616  016008  5018               	movf	___lldiv@divisor+1,w,c
  5617  01600A  5A14               	subwfb	___lldiv@dividend+1,f,c
  5618  01600C  5019               	movf	___lldiv@divisor+2,w,c
  5619  01600E  5A15               	subwfb	___lldiv@dividend+2,f,c
  5620  016010  501A               	movf	___lldiv@divisor+3,w,c
  5621  016012  5A16               	subwfb	___lldiv@dividend+3,f,c
  5622  016014  801B               	bsf	___lldiv@quotient,0,c
  5623  016016                     l2491:
  5624  016016  90D8               	bcf	status,0,c
  5625  016018  321A               	rrcf	___lldiv@divisor+3,f,c
  5626  01601A  3219               	rrcf	___lldiv@divisor+2,f,c
  5627  01601C  3218               	rrcf	___lldiv@divisor+1,f,c
  5628  01601E  3217               	rrcf	___lldiv@divisor,f,c
  5629  016020  2E1F               	decfsz	___lldiv@counter,f,c
  5630  016022  D7E1               	goto	u10570
  5631  016024                     l2492:
  5632  016024  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5633  016028  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5634  01602C  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5635  016030  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5636  016034  0012               	return		;funcret
  5637  016036                     __end_of___lldiv:
  5638                           	opt stack 0
  5639                           tosu	equ	0xFFF
  5640                           tosh	equ	0xFFE
  5641                           tosl	equ	0xFFD
  5642                           pclath	equ	0xFFA
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           prodh	equ	0xFF4
  5648                           prodl	equ	0xFF3
  5649                           intcon	equ	0xFF2
  5650                           indf0	equ	0xFEF
  5651                           postinc0	equ	0xFEE
  5652                           fsr0h	equ	0xFEA
  5653                           fsr0l	equ	0xFE9
  5654                           wreg	equ	0xFE8
  5655                           postdec1	equ	0xFE5
  5656                           fsr1l	equ	0xFE1
  5657                           indf2	equ	0xFDF
  5658                           postinc2	equ	0xFDE
  5659                           postdec2	equ	0xFDD
  5660                           fsr2h	equ	0xFDA
  5661                           fsr2l	equ	0xFD9
  5662                           status	equ	0xFD8
  5663                           
  5664 ;; *************** function _PHY_Write *****************
  5665 ;; Defined at:
  5666 ;;		line 370 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  reg             1    wreg     enum E5175
  5669 ;;  data            2   20[COMRAM] unsigned int 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  reg             1   22[COMRAM] enum E5175
  5672 ;;  GIESave         1   23[COMRAM] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      enum E5184
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0, cstack
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;Total ram usage:        4 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    5
  5689 ;; This function calls:
  5690 ;;		_PHY_WaitForBusy
  5691 ;; This function is called by:
  5692 ;;		_ETH_Init
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text22
  5697  016C46                     __ptext22:
  5698                           	opt stack 0
  5699  016C46                     _PHY_Write:
  5700                           	opt stack 22
  5701                           
  5702                           ;incstack = 0
  5703                           ;PHY_Write@reg stored from wreg
  5704  016C46  6E17               	movwf	PHY_Write@reg,c
  5705                           
  5706                           ;ETHxxJ6x_driver.c: 372: uint8_t GIESave;
  5707                           ;ETHxxJ6x_driver.c: 374: MIREGADR = reg;
  5708  016C48  C017  FEB4         	movff	PHY_Write@reg,3764	;volatile
  5709                           
  5710                           ;ETHxxJ6x_driver.c: 386: errataTemp = data;
  5711  016C4C  C015  FE7E         	movff	PHY_Write@data,3710
  5712  016C50  C016  FE7F         	movff	PHY_Write@data+1,3711
  5713                           
  5714                           ;ETHxxJ6x_driver.c: 387: GIESave = INTCON;
  5715  016C54  CFF2 F018          	movff	intcon,PHY_Write@GIESave	;volatile
  5716                           
  5717                           ;ETHxxJ6x_driver.c: 388: INTCON = 0;
  5718  016C58  0E00               	movlw	0
  5719  016C5A  6EF2               	movwf	intcon,c	;volatile
  5720                           
  5721                           ;ETHxxJ6x_driver.c: 389: MIWR = errataTemp;
  5722  016C5C  CE7E FEB6          	movff	3710,3766	;volatile
  5723  016C60  CE7F FEB7          	movff	3711,3767	;volatile
  5724                           
  5725                           ;ETHxxJ6x_driver.c: 390: INTCON = GIESave;
  5726  016C64  C018  FFF2         	movff	PHY_Write@GIESave,intcon	;volatile
  5727                           
  5728                           ;ETHxxJ6x_driver.c: 394: return PHY_WaitForBusy();
  5729                           ;	Return value of _PHY_Write is never used
  5730  016C68  EC2D  F0B5         	call	_PHY_WaitForBusy
  5731  016C6C  0012               	return	
  5732  016C6E                     __end_of_PHY_Write:
  5733                           	opt stack 0
  5734                           tosu	equ	0xFFF
  5735                           tosh	equ	0xFFE
  5736                           tosl	equ	0xFFD
  5737                           pclath	equ	0xFFA
  5738                           tblptru	equ	0xFF8
  5739                           tblptrh	equ	0xFF7
  5740                           tblptrl	equ	0xFF6
  5741                           tablat	equ	0xFF5
  5742                           prodh	equ	0xFF4
  5743                           prodl	equ	0xFF3
  5744                           intcon	equ	0xFF2
  5745                           indf0	equ	0xFEF
  5746                           postinc0	equ	0xFEE
  5747                           fsr0h	equ	0xFEA
  5748                           fsr0l	equ	0xFE9
  5749                           wreg	equ	0xFE8
  5750                           postdec1	equ	0xFE5
  5751                           fsr1l	equ	0xFE1
  5752                           indf2	equ	0xFDF
  5753                           postinc2	equ	0xFDE
  5754                           postdec2	equ	0xFDD
  5755                           fsr2h	equ	0xFDA
  5756                           fsr2l	equ	0xFD9
  5757                           status	equ	0xFD8
  5758                           
  5759 ;; *************** function _MAC_getAddress *****************
  5760 ;; Defined at:
  5761 ;;		line 46 in file "mcc_generated_files/TCPIPLibrary/mac_address.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  2   18[COMRAM] PTR const struct .
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;Total ram usage:        2 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    4
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_ETH_Init
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text23
  5790  016ECE                     __ptext23:
  5791                           	opt stack 0
  5792  016ECE                     _MAC_getAddress:
  5793                           	opt stack 23
  5794                           
  5795                           ;mac_address.c: 48: return &macAddress;
  5796                           
  5797                           ;incstack = 0
  5798  016ECE  0E02               	movlw	low _macAddress
  5799  016ED0  6E13               	movwf	?_MAC_getAddress,c
  5800  016ED2  0EFF               	movlw	high _macAddress
  5801  016ED4  6E14               	movwf	?_MAC_getAddress+1,c
  5802  016ED6  0012               	return	
  5803  016ED8                     __end_of_MAC_getAddress:
  5804                           	opt stack 0
  5805                           tosu	equ	0xFFF
  5806                           tosh	equ	0xFFE
  5807                           tosl	equ	0xFFD
  5808                           pclath	equ	0xFFA
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           prodh	equ	0xFF4
  5814                           prodl	equ	0xFF3
  5815                           intcon	equ	0xFF2
  5816                           indf0	equ	0xFEF
  5817                           postinc0	equ	0xFEE
  5818                           fsr0h	equ	0xFEA
  5819                           fsr0l	equ	0xFE9
  5820                           wreg	equ	0xFE8
  5821                           postdec1	equ	0xFE5
  5822                           fsr1l	equ	0xFE1
  5823                           indf2	equ	0xFDF
  5824                           postinc2	equ	0xFDE
  5825                           postdec2	equ	0xFDD
  5826                           fsr2h	equ	0xFDA
  5827                           fsr2l	equ	0xFD9
  5828                           status	equ	0xFD8
  5829                           
  5830 ;; *************** function _ETH_PacketListReset *****************
  5831 ;; Defined at:
  5832 ;;		line 1156 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  index           2   20[COMRAM] unsigned int 
  5837 ;;  ptr             2   18[COMRAM] PTR unsigned char 
  5838 ;;		 -> txData(200), 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;Total ram usage:        4 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    4
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_ETH_Init
  5859 ;;		_ETH_TxReset
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text24
  5864  016734                     __ptext24:
  5865                           	opt stack 0
  5866  016734                     _ETH_PacketListReset:
  5867                           	opt stack 23
  5868                           
  5869                           ;ETHxxJ6x_driver.c: 1158: uint16_t index = 0;
  5870                           
  5871                           ;incstack = 0
  5872  016734  0E00               	movlw	0
  5873  016736  6E16               	movwf	ETH_PacketListReset@index+1,c
  5874  016738  0E00               	movlw	0
  5875  01673A  6E15               	movwf	ETH_PacketListReset@index,c
  5876                           
  5877                           ;ETHxxJ6x_driver.c: 1159: uint8_t* ptr = (uint8_t*)txData;
  5878  01673C  0E00               	movlw	low _txData
  5879  01673E  6E13               	movwf	ETH_PacketListReset@ptr,c
  5880  016740  0E04               	movlw	high _txData
  5881  016742  6E14               	movwf	ETH_PacketListReset@ptr+1,c
  5882                           
  5883                           ;ETHxxJ6x_driver.c: 1160: ethListSize = 0;
  5884  016744  0E00               	movlw	0
  5885  016746  6E48               	movwf	_ethListSize,c
  5886                           
  5887                           ;ETHxxJ6x_driver.c: 1162: pHead = (0);
  5888  016748  0E00               	movlw	0
  5889  01674A  6E45               	movwf	_pHead,c
  5890  01674C  0E00               	movlw	0
  5891  01674E  6E46               	movwf	_pHead+1,c
  5892                           
  5893                           ;ETHxxJ6x_driver.c: 1163: pTail = (0);
  5894  016750  0E00               	movlw	0
  5895  016752  6E43               	movwf	_pTail,c
  5896  016754  0E00               	movlw	0
  5897  016756  6E44               	movwf	_pTail+1,c
  5898                           
  5899                           ;ETHxxJ6x_driver.c: 1165: while( index < ((20) * sizeof(txPacket_t)) )
  5900  016758  D00A               	goto	l765
  5901  01675A                     
  5902                           ;ETHxxJ6x_driver.c: 1166: {
  5903                           ;ETHxxJ6x_driver.c: 1167: ptr[index] = 0;
  5904  01675A  5015               	movf	ETH_PacketListReset@index,w,c
  5905  01675C  2413               	addwf	ETH_PacketListReset@ptr,w,c
  5906  01675E  6ED9               	movwf	fsr2l,c
  5907  016760  5016               	movf	ETH_PacketListReset@index+1,w,c
  5908  016762  2014               	addwfc	ETH_PacketListReset@ptr+1,w,c
  5909  016764  6EDA               	movwf	fsr2h,c
  5910  016766  0E00               	movlw	0
  5911  016768  6EDF               	movwf	indf2,c
  5912                           
  5913                           ;ETHxxJ6x_driver.c: 1168: index++;
  5914  01676A  4A15               	infsnz	ETH_PacketListReset@index,f,c
  5915  01676C  2A16               	incf	ETH_PacketListReset@index+1,f,c
  5916  01676E                     l765:
  5917  01676E  5016               	movf	ETH_PacketListReset@index+1,w,c
  5918  016770  E105               	bnz	l768
  5919  016772  0EC8               	movlw	200
  5920  016774  5C15               	subwf	ETH_PacketListReset@index,w,c
  5921  016776  B0D8               	btfsc	status,0,c
  5922  016778  0012               	return	
  5923  01677A  D7EF               	goto	l766
  5924  01677C                     l768:
  5925  01677C  0012               	return		;funcret
  5926  01677E                     __end_of_ETH_PacketListReset:
  5927                           	opt stack 0
  5928                           tosu	equ	0xFFF
  5929                           tosh	equ	0xFFE
  5930                           tosl	equ	0xFFD
  5931                           pclath	equ	0xFFA
  5932                           tblptru	equ	0xFF8
  5933                           tblptrh	equ	0xFF7
  5934                           tblptrl	equ	0xFF6
  5935                           tablat	equ	0xFF5
  5936                           prodh	equ	0xFF4
  5937                           prodl	equ	0xFF3
  5938                           intcon	equ	0xFF2
  5939                           indf0	equ	0xFEF
  5940                           postinc0	equ	0xFEE
  5941                           fsr0h	equ	0xFEA
  5942                           fsr0l	equ	0xFE9
  5943                           wreg	equ	0xFE8
  5944                           postdec1	equ	0xFE5
  5945                           fsr1l	equ	0xFE1
  5946                           indf2	equ	0xFDF
  5947                           postinc2	equ	0xFDE
  5948                           postdec2	equ	0xFDD
  5949                           fsr2h	equ	0xFDA
  5950                           fsr2l	equ	0xFD9
  5951                           status	equ	0xFD8
  5952                           
  5953 ;; *************** function _DHCP_init *****************
  5954 ;; Defined at:
  5955 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;		None
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;		None
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		None
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;Total ram usage:        0 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    4
  5976 ;; This function calls:
  5977 ;;		Nothing
  5978 ;; This function is called by:
  5979 ;;		_Network_Init
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text25
  5984  016F3E                     __ptext25:
  5985                           	opt stack 0
  5986  016F3E                     _DHCP_init:
  5987                           	opt stack 24
  5988                           
  5989                           ;incstack = 0
  5990  016F3E  0012               	return		;funcret
  5991  016F40                     __end_of_DHCP_init:
  5992                           	opt stack 0
  5993                           tosu	equ	0xFFF
  5994                           tosh	equ	0xFFE
  5995                           tosl	equ	0xFFD
  5996                           pclath	equ	0xFFA
  5997                           tblptru	equ	0xFF8
  5998                           tblptrh	equ	0xFF7
  5999                           tblptrl	equ	0xFF6
  6000                           tablat	equ	0xFF5
  6001                           prodh	equ	0xFF4
  6002                           prodl	equ	0xFF3
  6003                           intcon	equ	0xFF2
  6004                           indf0	equ	0xFEF
  6005                           postinc0	equ	0xFEE
  6006                           fsr0h	equ	0xFEA
  6007                           fsr0l	equ	0xFE9
  6008                           wreg	equ	0xFE8
  6009                           postdec1	equ	0xFE5
  6010                           fsr1l	equ	0xFE1
  6011                           indf2	equ	0xFDF
  6012                           postinc2	equ	0xFDE
  6013                           postdec2	equ	0xFDD
  6014                           fsr2h	equ	0xFDA
  6015                           fsr2l	equ	0xFD9
  6016                           status	equ	0xFD8
  6017                           
  6018 ;; *************** function _ARPV4_Init *****************
  6019 ;; Defined at:
  6020 ;;		line 87 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;		None
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  x               1   20[COMRAM] unsigned char 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      void 
  6027 ;; Registers used:
  6028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;Total ram usage:        1 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; Hardware stack levels required when called:    5
  6041 ;; This function calls:
  6042 ;;		_ETH_GetMAC
  6043 ;; This function is called by:
  6044 ;;		_Network_Init
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text26
  6049  016A28                     __ptext26:
  6050                           	opt stack 0
  6051  016A28                     _ARPV4_Init:
  6052                           	opt stack 23
  6053                           
  6054                           ;arpv4.c: 89: for(uint8_t x= 0 ; x < 8; x++)
  6055                           
  6056                           ;incstack = 0
  6057  016A28  0E00               	movlw	0
  6058  016A2A  6E15               	movwf	ARPV4_Init@x,c
  6059  016A2C                     l8852:
  6060  016A2C  0E07               	movlw	7
  6061  016A2E  6415               	cpfsgt	ARPV4_Init@x,c
  6062  016A30  D001               	goto	l312
  6063  016A32  D00C               	goto	u7860
  6064  016A34                     l312:
  6065                           
  6066                           ;arpv4.c: 90: {
  6067                           ;arpv4.c: 91: ((char *)arpMap)[x] = 0;
  6068  016A34  5015               	movf	ARPV4_Init@x,w,c
  6069  016A36  0D01               	mullw	1
  6070  016A38  0E10               	movlw	low _arpMap
  6071  016A3A  24F3               	addwf	prodl,w,c
  6072  016A3C  6ED9               	movwf	fsr2l,c
  6073  016A3E  0E03               	movlw	high _arpMap
  6074  016A40  20F4               	addwfc	prodh,w,c
  6075  016A42  6EDA               	movwf	fsr2h,c
  6076  016A44  0E00               	movlw	0
  6077  016A46  6EDF               	movwf	indf2,c
  6078  016A48  2A15               	incf	ARPV4_Init@x,f,c
  6079  016A4A  D7F0               	goto	l8852
  6080  016A4C                     u7860:
  6081                           
  6082                           ;arpv4.c: 92: }
  6083                           ;arpv4.c: 93: ETH_GetMAC((char*)&hostMacAddress);
  6084  016A4C  0EB0               	movlw	low _hostMacAddress
  6085  016A4E  6E13               	movwf	ETH_GetMAC@mac,c
  6086  016A50  0E03               	movlw	high _hostMacAddress
  6087  016A52  6E14               	movwf	ETH_GetMAC@mac+1,c
  6088  016A54  ECE7  F0B1         	call	_ETH_GetMAC	;wreg free
  6089  016A58  0012               	return		;funcret
  6090  016A5A                     __end_of_ARPV4_Init:
  6091                           	opt stack 0
  6092                           tosu	equ	0xFFF
  6093                           tosh	equ	0xFFE
  6094                           tosl	equ	0xFFD
  6095                           pclath	equ	0xFFA
  6096                           tblptru	equ	0xFF8
  6097                           tblptrh	equ	0xFF7
  6098                           tblptrl	equ	0xFF6
  6099                           tablat	equ	0xFF5
  6100                           prodh	equ	0xFF4
  6101                           prodl	equ	0xFF3
  6102                           intcon	equ	0xFF2
  6103                           indf0	equ	0xFEF
  6104                           postinc0	equ	0xFEE
  6105                           fsr0h	equ	0xFEA
  6106                           fsr0l	equ	0xFE9
  6107                           wreg	equ	0xFE8
  6108                           postdec1	equ	0xFE5
  6109                           fsr1l	equ	0xFE1
  6110                           indf2	equ	0xFDF
  6111                           postinc2	equ	0xFDE
  6112                           postdec2	equ	0xFDD
  6113                           fsr2h	equ	0xFDA
  6114                           fsr2l	equ	0xFD9
  6115                           status	equ	0xFD8
  6116                           
  6117 ;; *************** function _ETH_GetMAC *****************
  6118 ;; Defined at:
  6119 ;;		line 1047 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  mac             2   18[COMRAM] PTR unsigned char 
  6122 ;;		 -> hostMacAddress(6), 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;		None
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      void 
  6127 ;; Registers used:
  6128 ;;		fsr2l, fsr2h, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;Total ram usage:        2 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    4
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_ARPV4_Init
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text27
  6149  0163CE                     __ptext27:
  6150                           	opt stack 0
  6151  0163CE                     _ETH_GetMAC:
  6152                           	opt stack 23
  6153                           
  6154                           ;ETHxxJ6x_driver.c: 1050: *mac++ = MAADR1;
  6155                           
  6156                           ;incstack = 0
  6157  0163CE  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6158  0163D2  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6159  0163D6  CE84 FFDF          	movff	3716,indf2	;volatile
  6160  0163DA  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6161  0163DC  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6162                           
  6163                           ;ETHxxJ6x_driver.c: 1051: *mac++ = MAADR2;
  6164  0163DE  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6165  0163E2  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6166  0163E6  CE85 FFDF          	movff	3717,indf2	;volatile
  6167  0163EA  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6168  0163EC  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6169                           
  6170                           ;ETHxxJ6x_driver.c: 1052: *mac++ = MAADR3;
  6171  0163EE  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6172  0163F2  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6173  0163F6  CE82 FFDF          	movff	3714,indf2	;volatile
  6174  0163FA  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6175  0163FC  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6176                           
  6177                           ;ETHxxJ6x_driver.c: 1053: *mac++ = MAADR4;
  6178  0163FE  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6179  016402  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6180  016406  CE83 FFDF          	movff	3715,indf2	;volatile
  6181  01640A  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6182  01640C  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6183                           
  6184                           ;ETHxxJ6x_driver.c: 1054: *mac++ = MAADR5;
  6185  01640E  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6186  016412  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6187  016416  CE80 FFDF          	movff	3712,indf2	;volatile
  6188  01641A  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6189  01641C  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6190                           
  6191                           ;ETHxxJ6x_driver.c: 1055: *mac = MAADR6;
  6192  01641E  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6193  016422  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6194  016426  CE81 FFDF          	movff	3713,indf2	;volatile
  6195  01642A  0012               	return		;funcret
  6196  01642C                     __end_of_ETH_GetMAC:
  6197                           	opt stack 0
  6198                           tosu	equ	0xFFF
  6199                           tosh	equ	0xFFE
  6200                           tosl	equ	0xFFD
  6201                           pclath	equ	0xFFA
  6202                           tblptru	equ	0xFF8
  6203                           tblptrh	equ	0xFF7
  6204                           tblptrl	equ	0xFF6
  6205                           tablat	equ	0xFF5
  6206                           prodh	equ	0xFF4
  6207                           prodl	equ	0xFF3
  6208                           intcon	equ	0xFF2
  6209                           indf0	equ	0xFEF
  6210                           postinc0	equ	0xFEE
  6211                           fsr0h	equ	0xFEA
  6212                           fsr0l	equ	0xFE9
  6213                           wreg	equ	0xFE8
  6214                           postdec1	equ	0xFE5
  6215                           fsr1l	equ	0xFE1
  6216                           indf2	equ	0xFDF
  6217                           postinc2	equ	0xFDE
  6218                           postdec2	equ	0xFDD
  6219                           fsr2h	equ	0xFDA
  6220                           fsr2l	equ	0xFD9
  6221                           status	equ	0xFD8
  6222                           
  6223 ;; *************** function _INTERRUPT_Initialize *****************
  6224 ;; Defined at:
  6225 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;		None
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		None
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;Total ram usage:        0 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:    4
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_SYSTEM_Initialize
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text28
  6254  016F3A                     __ptext28:
  6255                           	opt stack 0
  6256  016F3A                     _INTERRUPT_Initialize:
  6257                           	opt stack 25
  6258                           
  6259                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  6260                           
  6261                           ;incstack = 0
  6262  016F3A  9ED0               	bcf	4048,7,c	;volatile
  6263  016F3C  0012               	return		;funcret
  6264  016F3E                     __end_of_INTERRUPT_Initialize:
  6265                           	opt stack 0
  6266                           tosu	equ	0xFFF
  6267                           tosh	equ	0xFFE
  6268                           tosl	equ	0xFFD
  6269                           pclath	equ	0xFFA
  6270                           tblptru	equ	0xFF8
  6271                           tblptrh	equ	0xFF7
  6272                           tblptrl	equ	0xFF6
  6273                           tablat	equ	0xFF5
  6274                           prodh	equ	0xFF4
  6275                           prodl	equ	0xFF3
  6276                           intcon	equ	0xFF2
  6277                           indf0	equ	0xFEF
  6278                           postinc0	equ	0xFEE
  6279                           fsr0h	equ	0xFEA
  6280                           fsr0l	equ	0xFE9
  6281                           wreg	equ	0xFE8
  6282                           postdec1	equ	0xFE5
  6283                           fsr1l	equ	0xFE1
  6284                           indf2	equ	0xFDF
  6285                           postinc2	equ	0xFDE
  6286                           postdec2	equ	0xFDD
  6287                           fsr2h	equ	0xFDA
  6288                           fsr2l	equ	0xFD9
  6289                           status	equ	0xFD8
  6290                           
  6291 ;; *************** function _ECCP1_Initialize *****************
  6292 ;; Defined at:
  6293 ;;		line 57 in file "mcc_generated_files/eccp1.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      void 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;Total ram usage:        0 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    4
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_SYSTEM_Initialize
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text29
  6322  016DEE                     __ptext29:
  6323                           	opt stack 0
  6324  016DEE                     _ECCP1_Initialize:
  6325                           	opt stack 25
  6326                           
  6327                           ;eccp1.c: 60: CCP1CON = 0x00;
  6328                           
  6329                           ;incstack = 0
  6330  016DEE  0E00               	movlw	0
  6331  016DF0  6EBD               	movwf	4029,c	;volatile
  6332                           
  6333                           ;eccp1.c: 62: ECCP1DEL = 0x00;
  6334  016DF2  0E00               	movlw	0
  6335  016DF4  6E79               	movwf	3961,c	;volatile
  6336                           
  6337                           ;eccp1.c: 64: ECCP1AS = 0x00;
  6338  016DF6  0E00               	movlw	0
  6339  016DF8  6EB6               	movwf	4022,c	;volatile
  6340                           
  6341                           ;eccp1.c: 66: CCPR1L = 0x00;
  6342  016DFA  0E00               	movlw	0
  6343  016DFC  6EBE               	movwf	4030,c	;volatile
  6344                           
  6345                           ;eccp1.c: 68: CCPR1H = 0x00;
  6346  016DFE  0E00               	movlw	0
  6347  016E00  6EBF               	movwf	4031,c	;volatile
  6348  016E02  0012               	return		;funcret
  6349  016E04                     __end_of_ECCP1_Initialize:
  6350                           	opt stack 0
  6351                           tosu	equ	0xFFF
  6352                           tosh	equ	0xFFE
  6353                           tosl	equ	0xFFD
  6354                           pclath	equ	0xFFA
  6355                           tblptru	equ	0xFF8
  6356                           tblptrh	equ	0xFF7
  6357                           tblptrl	equ	0xFF6
  6358                           tablat	equ	0xFF5
  6359                           prodh	equ	0xFF4
  6360                           prodl	equ	0xFF3
  6361                           intcon	equ	0xFF2
  6362                           indf0	equ	0xFEF
  6363                           postinc0	equ	0xFEE
  6364                           fsr0h	equ	0xFEA
  6365                           fsr0l	equ	0xFE9
  6366                           wreg	equ	0xFE8
  6367                           postdec1	equ	0xFE5
  6368                           fsr1l	equ	0xFE1
  6369                           indf2	equ	0xFDF
  6370                           postinc2	equ	0xFDE
  6371                           postdec2	equ	0xFDD
  6372                           fsr2h	equ	0xFDA
  6373                           fsr2l	equ	0xFD9
  6374                           status	equ	0xFD8
  6375                           
  6376 ;; *************** function _ADC_Initialize *****************
  6377 ;; Defined at:
  6378 ;;		line 58 in file "mcc_generated_files/adc.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    4
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_SYSTEM_Initialize
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text30
  6407  016E04                     __ptext30:
  6408                           	opt stack 0
  6409  016E04                     _ADC_Initialize:
  6410                           	opt stack 25
  6411                           
  6412                           ;adc.c: 63: ADCON0 = 0x01;
  6413                           
  6414                           ;incstack = 0
  6415  016E04  0E01               	movlw	1
  6416  016E06  6EC2               	movwf	4034,c	;volatile
  6417                           
  6418                           ;adc.c: 66: ADCON1 = 0x10;
  6419  016E08  0E10               	movlw	16
  6420  016E0A  6EC1               	movwf	4033,c	;volatile
  6421                           
  6422                           ;adc.c: 69: ADCON2 = 0x86;
  6423  016E0C  0E86               	movlw	134
  6424  016E0E  6EC0               	movwf	4032,c	;volatile
  6425                           
  6426                           ;adc.c: 72: ADRESL = 0x00;
  6427  016E10  0E00               	movlw	0
  6428  016E12  6EC3               	movwf	4035,c	;volatile
  6429                           
  6430                           ;adc.c: 75: ADRESH = 0x00;
  6431  016E14  0E00               	movlw	0
  6432  016E16  6EC4               	movwf	4036,c	;volatile
  6433  016E18  0012               	return		;funcret
  6434  016E1A                     __end_of_ADC_Initialize:
  6435                           	opt stack 0
  6436                           tosu	equ	0xFFF
  6437                           tosh	equ	0xFFE
  6438                           tosl	equ	0xFFD
  6439                           pclath	equ	0xFFA
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           prodh	equ	0xFF4
  6445                           prodl	equ	0xFF3
  6446                           intcon	equ	0xFF2
  6447                           indf0	equ	0xFEF
  6448                           postinc0	equ	0xFEE
  6449                           fsr0h	equ	0xFEA
  6450                           fsr0l	equ	0xFE9
  6451                           wreg	equ	0xFE8
  6452                           postdec1	equ	0xFE5
  6453                           fsr1l	equ	0xFE1
  6454                           indf2	equ	0xFDF
  6455                           postinc2	equ	0xFDE
  6456                           postdec2	equ	0xFDD
  6457                           fsr2h	equ	0xFDA
  6458                           fsr2l	equ	0xFD9
  6459                           status	equ	0xFD8
  6460                           
  6461 ;; *************** function _Network_Manage *****************
  6462 ;; Defined at:
  6463 ;;		line 78 in file "mcc_generated_files/TCPIPLibrary/network.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  now             4    0[BANK3 ] long 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      void 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;      Totals:         0       0       0       1       4       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;Total ram usage:        5 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:   16
  6484 ;; This function calls:
  6485 ;;		_ARPV4_Update
  6486 ;;		_DHCP_Manage
  6487 ;;		_ETH_EventHandler
  6488 ;;		_Network_Read
  6489 ;;		_TCP_Update
  6490 ;;		_time
  6491 ;; This function is called by:
  6492 ;;		_main
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text31
  6497  015F28                     __ptext31:
  6498                           	opt stack 0
  6499  015F28                     _Network_Manage:
  6500                           	opt stack 14
  6501                           
  6502                           ;network.c: 80: time_t now;
  6503                           ;network.c: 81: static time_t nowPv = 0;
  6504                           ;network.c: 83: ETH_EventHandler();
  6505                           
  6506                           ;incstack = 0
  6507  015F28  EC44  F0B2         	call	_ETH_EventHandler	;wreg free
  6508                           
  6509                           ;network.c: 84: Network_Read();
  6510  015F2C  EC5F  F0AE         	call	_Network_Read	;wreg free
  6511                           
  6512                           ;network.c: 85: DHCP_Manage();
  6513  015F30  ECD0  F0A7         	call	_DHCP_Manage	;wreg free
  6514                           
  6515                           ;network.c: 88: time(&now);
  6516  015F34  0EEC               	movlw	low Network_Manage@now
  6517  015F36  6E13               	movwf	time@t,c
  6518  015F38  0E03               	movlw	high Network_Manage@now
  6519  015F3A  6E14               	movwf	time@t+1,c
  6520  015F3C  ECCA  F0B2         	call	_time	;wreg free
  6521                           
  6522                           ;network.c: 89: if(now >= arpTimer)
  6523  015F40  0102               	movlb	2	; () banked
  6524  015F42  5189               	movf	_arpTimer& (0+255),w,b
  6525  015F44  0103               	movlb	3	; () banked
  6526  015F46  5DEC               	subwf	Network_Manage@now& (0+255),w,b
  6527  015F48  0102               	movlb	2	; () banked
  6528  015F4A  518A               	movf	(_arpTimer+1)& (0+255),w,b
  6529  015F4C  0103               	movlb	3	; () banked
  6530  015F4E  59ED               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  6531  015F50  0102               	movlb	2	; () banked
  6532  015F52  518B               	movf	(_arpTimer+2)& (0+255),w,b
  6533  015F54  0103               	movlb	3	; () banked
  6534  015F56  59EE               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  6535  015F58  51EF               	movf	(Network_Manage@now+3)& (0+255),w,b
  6536  015F5A  0A80               	xorlw	128
  6537  015F5C  0102               	movlb	2	; () banked
  6538  015F5E  6FF9               	movwf	??_Network_Manage& (0+255),b
  6539  015F60  518C               	movf	(_arpTimer+3)& (0+255),w,b
  6540  015F62  0A80               	xorlw	128
  6541  015F64  59F9               	subwfb	??_Network_Manage& (0+255),w,b
  6542  015F66  A0D8               	btfss	status,0,c
  6543  015F68  D009               	goto	l993
  6544                           
  6545                           ; BSR set to: 2
  6546                           ;network.c: 90: {
  6547                           ;network.c: 91: ARPV4_Update();
  6548  015F6A  EC75  F0B5         	call	_ARPV4_Update	;wreg free
  6549                           
  6550                           ;network.c: 92: arpTimer += 10;
  6551  015F6E  0E0A               	movlw	10
  6552  015F70  0102               	movlb	2	; () banked
  6553  015F72  2789               	addwf	_arpTimer& (0+255),f,b
  6554  015F74  0E00               	movlw	0
  6555  015F76  238A               	addwfc	(_arpTimer+1)& (0+255),f,b
  6556  015F78  238B               	addwfc	(_arpTimer+2)& (0+255),f,b
  6557  015F7A  238C               	addwfc	(_arpTimer+3)& (0+255),f,b
  6558  015F7C                     l993:
  6559                           
  6560                           ; BSR set to: 2
  6561                           ;network.c: 93: }
  6562                           ;network.c: 94: if(now > nowPv)
  6563                           
  6564                           ; BSR set to: 2
  6565  015F7C  0103               	movlb	3	; () banked
  6566  015F7E  51EC               	movf	Network_Manage@now& (0+255),w,b
  6567  015F80  5D0C               	subwf	Network_Manage@nowPv& (0+255),w,b
  6568  015F82  51ED               	movf	(Network_Manage@now+1)& (0+255),w,b
  6569  015F84  590D               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  6570  015F86  51EE               	movf	(Network_Manage@now+2)& (0+255),w,b
  6571  015F88  590E               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  6572  015F8A  510F               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  6573  015F8C  0A80               	xorlw	128
  6574  015F8E  0102               	movlb	2	; () banked
  6575  015F90  6FF9               	movwf	??_Network_Manage& (0+255),b
  6576  015F92  0103               	movlb	3	; () banked
  6577  015F94  51EF               	movf	(Network_Manage@now+3)& (0+255),w,b
  6578  015F96  0A80               	xorlw	128
  6579  015F98  0102               	movlb	2	; () banked
  6580  015F9A  59F9               	subwfb	??_Network_Manage& (0+255),w,b
  6581  015F9C  A0D8               	btfss	status,0,c
  6582                           
  6583                           ; BSR set to: 2
  6584                           ;network.c: 95: {
  6585                           ;network.c: 97: TCP_Update();
  6586  015F9E  EC9A  F0A5         	call	_TCP_Update	;wreg free
  6587                           
  6588                           ;network.c: 99: }
  6589                           ;network.c: 100: nowPv = now;
  6590  015FA2  C3EC  F30C         	movff	Network_Manage@now,Network_Manage@nowPv
  6591  015FA6  C3ED  F30D         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  6592  015FAA  C3EE  F30E         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  6593  015FAE  C3EF  F30F         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  6594  015FB2  0012               	return		;funcret
  6595  015FB4                     __end_of_Network_Manage:
  6596                           	opt stack 0
  6597                           tosu	equ	0xFFF
  6598                           tosh	equ	0xFFE
  6599                           tosl	equ	0xFFD
  6600                           pclath	equ	0xFFA
  6601                           tblptru	equ	0xFF8
  6602                           tblptrh	equ	0xFF7
  6603                           tblptrl	equ	0xFF6
  6604                           tablat	equ	0xFF5
  6605                           prodh	equ	0xFF4
  6606                           prodl	equ	0xFF3
  6607                           intcon	equ	0xFF2
  6608                           indf0	equ	0xFEF
  6609                           postinc0	equ	0xFEE
  6610                           fsr0h	equ	0xFEA
  6611                           fsr0l	equ	0xFE9
  6612                           wreg	equ	0xFE8
  6613                           postdec1	equ	0xFE5
  6614                           fsr1l	equ	0xFE1
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           postdec2	equ	0xFDD
  6618                           fsr2h	equ	0xFDA
  6619                           fsr2l	equ	0xFD9
  6620                           status	equ	0xFD8
  6621                           
  6622 ;; *************** function _TCP_Update *****************
  6623 ;; Defined at:
  6624 ;;		line 1392 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  tcbPtr          2    7[BANK1 ] PTR struct .
  6629 ;;		 -> NULL(0), 
  6630 ;;  count           2    5[BANK1 ] int 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;Total ram usage:        8 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:   12
  6647 ;; This function calls:
  6648 ;;		_TCP_FiniteStateMachine
  6649 ;; This function is called by:
  6650 ;;		_Network_Manage
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text32
  6655  014B34                     __ptext32:
  6656                           	opt stack 0
  6657  014B34                     _TCP_Update:
  6658                           	opt stack 17
  6659                           
  6660                           ;tcpv4.c: 1394: tcpTCB_t *tcbPtr;
  6661                           ;tcpv4.c: 1395: tcbPtr = (0);
  6662                           
  6663                           ;incstack = 0
  6664  014B34  0E00               	movlw	0
  6665  014B36  0101               	movlb	1	; () banked
  6666  014B38  6F07               	movwf	TCP_Update@tcbPtr& (0+255),b
  6667  014B3A  0E00               	movlw	0
  6668  014B3C  6F08               	movwf	(TCP_Update@tcbPtr+1)& (0+255),b
  6669                           
  6670                           ; BSR set to: 1
  6671                           ;tcpv4.c: 1396: int count = 0;
  6672  014B3E  0E00               	movlw	0
  6673  014B40  6F06               	movwf	(TCP_Update@count+1)& (0+255),b
  6674  014B42  0E00               	movlw	0
  6675  014B44  6F05               	movwf	TCP_Update@count& (0+255),b
  6676                           
  6677                           ; BSR set to: 1
  6678                           ;tcpv4.c: 1400: nextSequenceNumber++;
  6679  014B46  0E01               	movlw	1
  6680  014B48  0103               	movlb	3	; () banked
  6681  014B4A  2704               	addwf	_nextSequenceNumber& (0+255),f,b
  6682  014B4C  0E00               	movlw	0
  6683  014B4E  2305               	addwfc	(_nextSequenceNumber+1)& (0+255),f,b
  6684  014B50  2306               	addwfc	(_nextSequenceNumber+2)& (0+255),f,b
  6685  014B52  2307               	addwfc	(_nextSequenceNumber+3)& (0+255),f,b
  6686                           
  6687                           ; BSR set to: 3
  6688                           ;tcpv4.c: 1403: nextAvailablePort = nextAvailablePort + 1;
  6689  014B54  0E01               	movlw	1
  6690  014B56  0102               	movlb	2	; () banked
  6691  014B58  254A               	addwf	_nextAvailablePort& (0+255),w,b
  6692  014B5A  6F4A               	movwf	_nextAvailablePort& (0+255),b
  6693  014B5C  0E00               	movlw	0
  6694  014B5E  214B               	addwfc	(_nextAvailablePort+1)& (0+255),w,b
  6695  014B60  6F4B               	movwf	(_nextAvailablePort+1)& (0+255),b
  6696                           
  6697                           ; BSR set to: 2
  6698                           ;tcpv4.c: 1404: if (nextAvailablePort < (1024u))
  6699  014B62  0E04               	movlw	4
  6700  014B64  5D4B               	subwf	(_nextAvailablePort+1)& (0+255),w,b
  6701  014B66  B0D8               	btfsc	status,0,c
  6702  014B68  D004               	goto	l1871
  6703                           
  6704                           ; BSR set to: 2
  6705                           ;tcpv4.c: 1405: {
  6706                           ;tcpv4.c: 1406: nextAvailablePort = (1024u);
  6707  014B6A  0E04               	movlw	4
  6708  014B6C  6F4B               	movwf	(_nextAvailablePort+1)& (0+255),b
  6709  014B6E  0E00               	movlw	0
  6710  014B70  6F4A               	movwf	_nextAvailablePort& (0+255),b
  6711  014B72                     l1871:
  6712                           
  6713                           ; BSR set to: 2
  6714                           ;tcpv4.c: 1407: }
  6715                           ;tcpv4.c: 1410: tcbPtr = tcbList;
  6716                           
  6717                           ; BSR set to: 2
  6718  014B72  C03F  F107         	movff	_tcbList,TCP_Update@tcbPtr
  6719  014B76  C040  F108         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  6720                           
  6721                           ;tcpv4.c: 1411: while((tcbPtr != (0)) && (count < tcbListSize))
  6722  014B7A  D085               	goto	l1872
  6723  014B7C                     
  6724                           ;tcpv4.c: 1412: {
  6725                           ;tcpv4.c: 1413: if (tcbPtr->timeout > 0)
  6726                           
  6727                           ; BSR set to: 2
  6728  014B7C  0101               	movlb	1	; () banked
  6729  014B7E  EE20 F033          	lfsr	2,51
  6730  014B82  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6731  014B84  26D9               	addwf	fsr2l,f,c
  6732  014B86  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6733  014B88  22DA               	addwfc	fsr2h,f,c
  6734  014B8A  50DE               	movf	postinc2,w,c
  6735  014B8C  10DE               	iorwf	postinc2,w,c
  6736  014B8E  B4D8               	btfsc	status,2,c
  6737  014B90  D06D               	goto	l1877
  6738                           
  6739                           ; BSR set to: 1
  6740                           ;tcpv4.c: 1414: {
  6741                           ;tcpv4.c: 1415: tcbPtr->timeout = tcbPtr->timeout - 1;
  6742  014B92  0EFF               	movlw	255
  6743  014B94  0100               	movlb	0	; () banked
  6744  014B96  6FFC               	movwf	??_TCP_Update& (0+255),b
  6745  014B98  0EFF               	movlw	255
  6746  014B9A  6FFD               	movwf	(??_TCP_Update+1)& (0+255),b
  6747  014B9C  0101               	movlb	1	; () banked
  6748  014B9E  EE20 F033          	lfsr	2,51
  6749  014BA2  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6750  014BA4  26D9               	addwf	fsr2l,f,c
  6751  014BA6  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6752  014BA8  22DA               	addwfc	fsr2h,f,c
  6753  014BAA  CFDE F0FE          	movff	postinc2,??_TCP_Update+2
  6754  014BAE  CFDD F0FF          	movff	postdec2,??_TCP_Update+3
  6755  014BB2  0100               	movlb	0	; () banked
  6756  014BB4  51FC               	movf	??_TCP_Update& (0+255),w,b
  6757  014BB6  27FE               	addwf	(??_TCP_Update+2)& (0+255),f,b
  6758  014BB8  51FD               	movf	(??_TCP_Update+1)& (0+255),w,b
  6759  014BBA  23FF               	addwfc	(??_TCP_Update+3)& (0+255),f,b
  6760  014BBC  0101               	movlb	1	; () banked
  6761  014BBE  EE20 F033          	lfsr	2,51
  6762  014BC2  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6763  014BC4  26D9               	addwf	fsr2l,f,c
  6764  014BC6  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6765  014BC8  22DA               	addwfc	fsr2h,f,c
  6766  014BCA  C0FE  FFDE         	movff	??_TCP_Update+2,postinc2
  6767  014BCE  C0FF  FFDD         	movff	??_TCP_Update+3,postdec2
  6768                           
  6769                           ;tcpv4.c: 1418: {
  6770                           ;tcpv4.c: 1422: if (tcbPtr->timeoutsCount >= 0)
  6771  014BD2  EE20 F033          	lfsr	2,51
  6772  014BD6  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6773  014BD8  26D9               	addwf	fsr2l,f,c
  6774  014BDA  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6775  014BDC  22DA               	addwfc	fsr2h,f,c
  6776  014BDE  50DE               	movf	postinc2,w,c
  6777  014BE0  10DE               	iorwf	postinc2,w,c
  6778  014BE2  A4D8               	btfss	status,2,c
  6779  014BE4  D043               	goto	l1877
  6780                           
  6781                           ; BSR set to: 1
  6782                           ;tcpv4.c: 1423: {
  6783                           ;tcpv4.c: 1425: if (tcbPtr->connectionEvent == NOP)
  6784  014BE6  EE20 F02E          	lfsr	2,46
  6785  014BEA  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6786  014BEC  26D9               	addwf	fsr2l,f,c
  6787  014BEE  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6788  014BF0  22DA               	addwfc	fsr2h,f,c
  6789  014BF2  0E0D               	movlw	13
  6790  014BF4  18DE               	xorwf	postinc2,w,c
  6791  014BF6  A4D8               	btfss	status,2,c
  6792  014BF8  D039               	goto	l1877
  6793                           
  6794                           ; BSR set to: 1
  6795                           ;tcpv4.c: 1426: {
  6796                           ;tcpv4.c: 1427: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  6797  014BFA  EE20 F035          	lfsr	2,53
  6798  014BFE  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6799  014C00  26D9               	addwf	fsr2l,f,c
  6800  014C02  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6801  014C04  22DA               	addwfc	fsr2h,f,c
  6802  014C06  EE10 F033          	lfsr	1,51
  6803  014C0A  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6804  014C0C  26E1               	addwf	fsr1l,f,c
  6805  014C0E  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6806  014C10  22E2               	addwfc	fsr1h,f,c
  6807  014C12  CFDE FFE6          	movff	postinc2,postinc1
  6808  014C16  CFDD FFE5          	movff	postdec2,postdec1
  6809                           
  6810                           ; BSR set to: 1
  6811                           ;tcpv4.c: 1429: if (tcbPtr->timeoutsCount != 0)
  6812  014C1A  EE20 F037          	lfsr	2,55
  6813  014C1E  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6814  014C20  26D9               	addwf	fsr2l,f,c
  6815  014C22  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6816  014C24  22DA               	addwfc	fsr2h,f,c
  6817  014C26  50DF               	movf	indf2,w,c
  6818  014C28  B4D8               	btfsc	status,2,c
  6819  014C2A  D011               	goto	l1878
  6820                           
  6821                           ; BSR set to: 1
  6822                           ;tcpv4.c: 1430: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  6823  014C2C  EE20 F037          	lfsr	2,55
  6824  014C30  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6825  014C32  26D9               	addwf	fsr2l,f,c
  6826  014C34  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6827  014C36  22DA               	addwfc	fsr2h,f,c
  6828  014C38  EE10 F037          	lfsr	1,55
  6829  014C3C  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6830  014C3E  26E1               	addwf	fsr1l,f,c
  6831  014C40  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6832  014C42  22E2               	addwfc	fsr1h,f,c
  6833  014C44  50E7               	movf	indf1,w,c
  6834  014C46  0100               	movlb	0	; () banked
  6835  014C48  6FFC               	movwf	??_TCP_Update& (0+255),b
  6836  014C4A  05FC               	decf	??_TCP_Update& (0+255),w,b
  6837  014C4C  6EDF               	movwf	indf2,c
  6838  014C4E                     l1878:
  6839                           
  6840                           ;tcpv4.c: 1431: tcbPtr->connectionEvent = TIMEOUT;
  6841                           
  6842                           ; BSR set to: 0
  6843  014C4E  0101               	movlb	1	; () banked
  6844  014C50  EE20 F02E          	lfsr	2,46
  6845  014C54  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6846  014C56  26D9               	addwf	fsr2l,f,c
  6847  014C58  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6848  014C5A  22DA               	addwfc	fsr2h,f,c
  6849  014C5C  0E0C               	movlw	12
  6850  014C5E  6EDF               	movwf	indf2,c
  6851                           
  6852                           ; BSR set to: 1
  6853                           ;tcpv4.c: 1432: currentTCB = tcbPtr;
  6854  014C60  C107  F03D         	movff	TCP_Update@tcbPtr,_currentTCB
  6855  014C64  C108  F03E         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  6856                           
  6857                           ; BSR set to: 1
  6858                           ;tcpv4.c: 1433: TCP_FiniteStateMachine();
  6859  014C68  EC00  F080         	call	_TCP_FiniteStateMachine	;wreg free
  6860  014C6C                     l1877:
  6861                           
  6862                           ;tcpv4.c: 1434: }
  6863                           ;tcpv4.c: 1435: }
  6864                           ;tcpv4.c: 1436: }
  6865                           ;tcpv4.c: 1437: }
  6866                           ;tcpv4.c: 1438: tcbPtr = tcbPtr->nextTCB;
  6867  014C6C  0101               	movlb	1	; () banked
  6868  014C6E  EE20 F02F          	lfsr	2,47
  6869  014C72  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6870  014C74  26D9               	addwf	fsr2l,f,c
  6871  014C76  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6872  014C78  22DA               	addwfc	fsr2h,f,c
  6873  014C7A  CFDE F107          	movff	postinc2,TCP_Update@tcbPtr
  6874  014C7E  CFDD F108          	movff	postdec2,TCP_Update@tcbPtr+1
  6875                           
  6876                           ; BSR set to: 1
  6877                           ;tcpv4.c: 1439: count ++;
  6878  014C82  4B05               	infsnz	TCP_Update@count& (0+255),f,b
  6879  014C84  2B06               	incf	(TCP_Update@count+1)& (0+255),f,b
  6880  014C86                     l1872:
  6881                           
  6882                           ; BSR set to: 1
  6883  014C86  0101               	movlb	1	; () banked
  6884  014C88  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6885  014C8A  1108               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6886  014C8C  B4D8               	btfsc	status,2,c
  6887  014C8E  0012               	return	
  6888                           
  6889                           ; BSR set to: 1
  6890  014C90  C047  F0FC         	movff	_tcbListSize,??_TCP_Update
  6891  014C94  0100               	movlb	0	; () banked
  6892  014C96  6BFD               	clrf	(??_TCP_Update+1)& (0+255),b
  6893  014C98  BFFC               	btfsc	??_TCP_Update& (0+255),7,b
  6894  014C9A  07FD               	decf	(??_TCP_Update+1)& (0+255),f,b
  6895  014C9C  51FC               	movf	??_TCP_Update& (0+255),w,b
  6896  014C9E  0101               	movlb	1	; () banked
  6897  014CA0  5D05               	subwf	TCP_Update@count& (0+255),w,b
  6898  014CA2  5106               	movf	(TCP_Update@count+1)& (0+255),w,b
  6899  014CA4  0A80               	xorlw	128
  6900  014CA6  0100               	movlb	0	; () banked
  6901  014CA8  6FFE               	movwf	(??_TCP_Update+2)& (0+255),b
  6902  014CAA  51FD               	movf	(??_TCP_Update+1)& (0+255),w,b
  6903  014CAC  0A80               	xorlw	128
  6904  014CAE  59FE               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  6905  014CB0  B0D8               	btfsc	status,0,c
  6906  014CB2  0012               	return	
  6907  014CB4  D763               	goto	l1873
  6908  014CB6                     __end_of_TCP_Update:
  6909                           	opt stack 0
  6910                           tosu	equ	0xFFF
  6911                           tosh	equ	0xFFE
  6912                           tosl	equ	0xFFD
  6913                           pclath	equ	0xFFA
  6914                           tblptru	equ	0xFF8
  6915                           tblptrh	equ	0xFF7
  6916                           tblptrl	equ	0xFF6
  6917                           tablat	equ	0xFF5
  6918                           prodh	equ	0xFF4
  6919                           prodl	equ	0xFF3
  6920                           intcon	equ	0xFF2
  6921                           indf0	equ	0xFEF
  6922                           postinc0	equ	0xFEE
  6923                           fsr0h	equ	0xFEA
  6924                           fsr0l	equ	0xFE9
  6925                           wreg	equ	0xFE8
  6926                           indf1	equ	0xFE7
  6927                           postinc1	equ	0xFE6
  6928                           postdec1	equ	0xFE5
  6929                           fsr1h	equ	0xFE2
  6930                           fsr1l	equ	0xFE1
  6931                           indf2	equ	0xFDF
  6932                           postinc2	equ	0xFDE
  6933                           postdec2	equ	0xFDD
  6934                           fsr2h	equ	0xFDA
  6935                           fsr2l	equ	0xFD9
  6936                           status	equ	0xFD8
  6937                           
  6938 ;; *************** function _Network_Read *****************
  6939 ;; Defined at:
  6940 ;;		line 103 in file "mcc_generated_files/TCPIPLibrary/network.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;		None
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;  debug_str      80    0        unsigned char [80]
  6945 ;;  header         14   37[BANK2 ] struct .
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      void 
  6948 ;; Registers used:
  6949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;Total ram usage:       18 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:   15
  6962 ;; This function calls:
  6963 ;;		_ARPV4_Packet
  6964 ;;		_ETH_Flush
  6965 ;;		_ETH_NextPacketUpdate
  6966 ;;		_ETH_ReadBlock
  6967 ;;		_IPV4_Packet
  6968 ;; This function is called by:
  6969 ;;		_Network_Manage
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text33
  6974  015CBE                     __ptext33:
  6975                           	opt stack 0
  6976  015CBE                     _Network_Read:
  6977                           	opt stack 14
  6978                           
  6979                           ;network.c: 105: ethernetFrame_t header;
  6980                           ;network.c: 106: char debug_str[80];
  6981                           ;network.c: 108: if(ethData.pktReady)
  6982                           
  6983                           ;incstack = 0
  6984  015CBE  0102               	movlb	2	; () banked
  6985  015CC0  A324               	btfss	_ethData& (0+255),1,b	;volatile
  6986  015CC2  0012               	return	
  6987                           
  6988                           ; BSR set to: 2
  6989                           ;network.c: 109: {
  6990                           ;network.c: 110: ETH_NextPacketUpdate();
  6991  015CC4  EC4A  F0B4         	call	_ETH_NextPacketUpdate	;wreg free
  6992                           
  6993                           ;network.c: 111: ETH_ReadBlock((char *)&header, sizeof(header));
  6994  015CC8  0EEB               	movlw	low Network_Read@header
  6995  015CCA  6E13               	movwf	ETH_ReadBlock@buffer,c
  6996  015CCC  0E02               	movlw	high Network_Read@header
  6997  015CCE  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  6998  015CD0  0E00               	movlw	0
  6999  015CD2  6E16               	movwf	ETH_ReadBlock@length+1,c
  7000  015CD4  0E0E               	movlw	14
  7001  015CD6  6E15               	movwf	ETH_ReadBlock@length,c
  7002  015CD8  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
  7003                           
  7004                           ;network.c: 112: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  7005  015CDC  0102               	movlb	2	; () banked
  7006  015CDE  51F7               	movf	(Network_Read@header+12)& (0+255),w,b
  7007  015CE0  6FE8               	movwf	(??_Network_Read+1)& (0+255),b
  7008  015CE2  6BE7               	clrf	??_Network_Read& (0+255),b
  7009  015CE4  EE22  F0F7         	lfsr	2,Network_Read@header+12
  7010  015CE8  CFDE F2E9          	movff	postinc2,??_Network_Read+2
  7011  015CEC  CFDD F2EA          	movff	postdec2,??_Network_Read+3
  7012  015CF0  C2EA  F2E9         	movff	??_Network_Read+3,??_Network_Read+2
  7013  015CF4  6BEA               	clrf	(??_Network_Read+3)& (0+255),b
  7014  015CF6  0EFF               	movlw	255
  7015  015CF8  17E9               	andwf	(??_Network_Read+2)& (0+255),f,b
  7016  015CFA  0E00               	movlw	0
  7017  015CFC  17EA               	andwf	(??_Network_Read+3)& (0+255),f,b
  7018  015CFE  51E7               	movf	??_Network_Read& (0+255),w,b
  7019  015D00  11E9               	iorwf	(??_Network_Read+2)& (0+255),w,b
  7020  015D02  6FF7               	movwf	(Network_Read@header+12)& (0+255),b
  7021  015D04  51E8               	movf	(??_Network_Read+1)& (0+255),w,b
  7022  015D06  11EA               	iorwf	(??_Network_Read+3)& (0+255),w,b
  7023  015D08  6FF8               	movwf	(Network_Read@header+13)& (0+255),b
  7024                           
  7025                           ;network.c: 113: switch (header.id.type)
  7026  015D0A  D006               	goto	l999
  7027  015D0C                     
  7028                           ; BSR set to: 2
  7029                           ;network.c: 118: ARPV4_Packet();
  7030                           
  7031                           ; BSR set to: 2
  7032  015D0C  EC31  F093         	call	_ARPV4_Packet	;wreg free
  7033                           
  7034                           ;network.c: 119: break;
  7035  015D10  D022               	goto	l1001
  7036  015D12                     
  7037                           ;network.c: 121: IPV4_Packet();
  7038  015D12  EC90  F090         	call	_IPV4_Packet	;wreg free
  7039                           
  7040                           ;network.c: 127: }
  7041                           
  7042                           ;network.c: 126: break;
  7043                           
  7044                           ;network.c: 125: default:
  7045                           
  7046                           ;network.c: 124: break;
  7047                           
  7048                           ;network.c: 123: case 0x86DD:
  7049                           
  7050                           ;network.c: 122: break;
  7051  015D16  D01F               	goto	l1001
  7052  015D18                     l999:
  7053  015D18  EE22  F0F7         	lfsr	2,Network_Read@header+12
  7054  015D1C  CFDE F2E7          	movff	postinc2,??_Network_Read
  7055  015D20  CFDD F2E8          	movff	postdec2,??_Network_Read+1
  7056                           
  7057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  7058                           ; Switch size 1, requested type "space"
  7059                           ; Number of cases is 3, Range of values is 8 to 134
  7060                           ; switch strategies available:
  7061                           ; Name         Instructions Cycles
  7062                           ; simple_byte           10     6 (average)
  7063                           ;	Chosen strategy is simple_byte
  7064  015D24  0102               	movlb	2	; () banked
  7065  015D26  51E8               	movf	(??_Network_Read+1)& (0+255),w,b
  7066  015D28  0A08               	xorlw	8	; case 8
  7067  015D2A  B4D8               	btfsc	status,2,c
  7068  015D2C  D007               	goto	l13262
  7069  015D2E  0A89               	xorlw	137	; case 129
  7070  015D30  B4D8               	btfsc	status,2,c
  7071  015D32  D00C               	goto	l13264
  7072  015D34  0A07               	xorlw	7	; case 134
  7073  015D36  B4D8               	btfsc	status,2,c
  7074  015D38  D00C               	goto	l13266
  7075  015D3A  D00D               	goto	l1001
  7076  015D3C                     l13262:
  7077                           
  7078                           ; BSR set to: 2
  7079                           ; Switch size 1, requested type "space"
  7080                           ; Number of cases is 2, Range of values is 0 to 6
  7081                           ; switch strategies available:
  7082                           ; Name         Instructions Cycles
  7083                           ; simple_byte            7     4 (average)
  7084                           ;	Chosen strategy is simple_byte
  7085  015D3C  51E7               	movf	??_Network_Read& (0+255),w,b
  7086  015D3E  0A00               	xorlw	0	; case 0
  7087  015D40  B4D8               	btfsc	status,2,c
  7088  015D42  D7E7               	goto	l1003
  7089  015D44  0A06               	xorlw	6	; case 6
  7090  015D46  B4D8               	btfsc	status,2,c
  7091  015D48  D7E1               	goto	l1002
  7092  015D4A  D005               	goto	l1001
  7093  015D4C                     l13264:
  7094                           
  7095                           ; BSR set to: 2
  7096                           ; Switch size 1, requested type "space"
  7097                           ; Number of cases is 1, Range of values is 0 to 0
  7098                           ; switch strategies available:
  7099                           ; Name         Instructions Cycles
  7100                           ; simple_byte            4     3 (average)
  7101                           ;	Chosen strategy is simple_byte
  7102  015D4C  51E7               	movf	??_Network_Read& (0+255),w,b
  7103  015D4E  0A00               	xorlw	0	; case 0
  7104  015D50  D002               	goto	l1001
  7105  015D52                     l13266:
  7106                           
  7107                           ; BSR set to: 2
  7108                           ; Switch size 1, requested type "space"
  7109                           ; Number of cases is 1, Range of values is 221 to 221
  7110                           ; switch strategies available:
  7111                           ; Name         Instructions Cycles
  7112                           ; simple_byte            4     3 (average)
  7113                           ;	Chosen strategy is simple_byte
  7114  015D52  51E7               	movf	??_Network_Read& (0+255),w,b
  7115  015D54  0ADD               	xorlw	221	; case 221
  7116  015D56                     l1001:
  7117                           
  7118                           ;network.c: 128: ETH_Flush();
  7119                           
  7120                           ; BSR set to: 2
  7121  015D56  EC4D  F0B1         	call	_ETH_Flush	;wreg free
  7122  015D5A  0012               	return	
  7123  015D5C                     __end_of_Network_Read:
  7124                           	opt stack 0
  7125                           tosu	equ	0xFFF
  7126                           tosh	equ	0xFFE
  7127                           tosl	equ	0xFFD
  7128                           pclath	equ	0xFFA
  7129                           tblptru	equ	0xFF8
  7130                           tblptrh	equ	0xFF7
  7131                           tblptrl	equ	0xFF6
  7132                           tablat	equ	0xFF5
  7133                           prodh	equ	0xFF4
  7134                           prodl	equ	0xFF3
  7135                           intcon	equ	0xFF2
  7136                           indf0	equ	0xFEF
  7137                           postinc0	equ	0xFEE
  7138                           fsr0h	equ	0xFEA
  7139                           fsr0l	equ	0xFE9
  7140                           wreg	equ	0xFE8
  7141                           indf1	equ	0xFE7
  7142                           postinc1	equ	0xFE6
  7143                           postdec1	equ	0xFE5
  7144                           fsr1h	equ	0xFE2
  7145                           fsr1l	equ	0xFE1
  7146                           indf2	equ	0xFDF
  7147                           postinc2	equ	0xFDE
  7148                           postdec2	equ	0xFDD
  7149                           fsr2h	equ	0xFDA
  7150                           fsr2l	equ	0xFD9
  7151                           status	equ	0xFD8
  7152                           
  7153 ;; *************** function _IPV4_Packet *****************
  7154 ;; Defined at:
  7155 ;;		line 102 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;		None
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  msg            40    0        unsigned char [40]
  7160 ;;  cksm            2   31[BANK2 ] unsigned int 
  7161 ;;  length          2   29[BANK2 ] unsigned int 
  7162 ;;  hdrLen          1   28[BANK2 ] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      enum E392
  7165 ;; Registers used:
  7166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Temps:          0       0       0      28       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Totals:         0       0       0      33       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;Total ram usage:       33 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:   14
  7179 ;; This function calls:
  7180 ;;		_ETH_Dump
  7181 ;;		_ETH_ReadBlock
  7182 ;;		_ETH_RxComputeChecksum
  7183 ;;		_ICMP_Receive
  7184 ;;		_IPV4_PseudoHeaderChecksum
  7185 ;;		_IPV4_SaveStartPosition
  7186 ;;		_TCP_Recv
  7187 ;;		_UDP_Receive
  7188 ;; This function is called by:
  7189 ;;		_Network_Read
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text34
  7194  012120                     __ptext34:
  7195                           	opt stack 0
  7196  012120                     _IPV4_Packet:
  7197                           	opt stack 14
  7198                           
  7199                           ;ipv4.c: 104: uint16_t cksm = 0;
  7200                           
  7201                           ;incstack = 0
  7202  012120  0E00               	movlw	0
  7203  012122  0102               	movlb	2	; () banked
  7204  012124  6FE6               	movwf	(IPV4_Packet@cksm+1)& (0+255),b
  7205  012126  0E00               	movlw	0
  7206  012128  6FE5               	movwf	IPV4_Packet@cksm& (0+255),b
  7207                           
  7208                           ;ipv4.c: 105: uint16_t length = 0;
  7209  01212A  0E00               	movlw	0
  7210  01212C  6FE4               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7211  01212E  0E00               	movlw	0
  7212  012130  6FE3               	movwf	IPV4_Packet@length& (0+255),b
  7213                           
  7214                           ; BSR set to: 2
  7215                           ;ipv4.c: 106: char msg[40];
  7216                           ;ipv4.c: 107: uint8_t hdrLen;
  7217                           ;ipv4.c: 110: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  7218  012132  0E00               	movlw	0
  7219  012134  6E26               	movwf	ETH_RxComputeChecksum@len+1,c
  7220  012136  0E14               	movlw	20
  7221  012138  6E25               	movwf	ETH_RxComputeChecksum@len,c
  7222  01213A  0E00               	movlw	0
  7223  01213C  6E28               	movwf	ETH_RxComputeChecksum@seed+1,c
  7224  01213E  0E00               	movlw	0
  7225  012140  6E27               	movwf	ETH_RxComputeChecksum@seed,c
  7226  012142  EC72  F0B3         	call	_ETH_RxComputeChecksum	;wreg free
  7227  012146  C025  F2E5         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7228  01214A  C026  F2E6         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7229                           
  7230                           ;ipv4.c: 111: if (cksm != 0)
  7231  01214E  0102               	movlb	2	; () banked
  7232  012150  51E5               	movf	IPV4_Packet@cksm& (0+255),w,b
  7233  012152  11E6               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  7234  012154  A4D8               	btfss	status,2,c
  7235  012156  0012               	return	
  7236                           
  7237                           ; BSR set to: 2
  7238                           ;ipv4.c: 114: }
  7239                           ;ipv4.c: 116: IPV4_SaveStartPosition();
  7240                           
  7241                           ; BSR set to: 2
  7242                           
  7243                           ; BSR set to: 2
  7244                           ;ipv4.c: 112: {
  7245                           ;ipv4.c: 113: return IPV4_CHECKSUM_FAILS;
  7246                           ;	Return value of _IPV4_Packet is never used
  7247  012158  EC48  F0B7         	call	_IPV4_SaveStartPosition	;wreg free
  7248                           
  7249                           ;ipv4.c: 117: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  7250  01215C  0E6D               	movlw	low _ipv4Header
  7251  01215E  6E13               	movwf	ETH_ReadBlock@buffer,c
  7252  012160  0E02               	movlw	high _ipv4Header
  7253  012162  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  7254  012164  0E00               	movlw	0
  7255  012166  6E16               	movwf	ETH_ReadBlock@length+1,c
  7256  012168  0E14               	movlw	20
  7257  01216A  6E15               	movwf	ETH_ReadBlock@length,c
  7258  01216C  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
  7259                           
  7260                           ;ipv4.c: 118: if(ipv4Header.version != 4)
  7261  012170  0102               	movlb	2	; () banked
  7262  012172  396D               	swapf	_ipv4Header& (0+255),w,b
  7263  012174  0B0F               	andlw	15
  7264  012176  0A04               	xorlw	4
  7265  012178  A4D8               	btfss	status,2,c
  7266  01217A  0012               	return	
  7267                           
  7268                           ; BSR set to: 2
  7269                           ;ipv4.c: 121: }
  7270                           ;ipv4.c: 123: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  7271                           
  7272                           ; BSR set to: 2
  7273                           
  7274                           ; BSR set to: 2
  7275                           ;ipv4.c: 119: {
  7276                           ;ipv4.c: 120: return IP_WRONG_VERSION;
  7277                           ;	Return value of _IPV4_Packet is never used
  7278  01217C  0EFF               	movlw	255
  7279  01217E  157D               	andwf	(_ipv4Header+16)& (0+255),w,b
  7280  012180  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7281  012182  0E00               	movlw	0
  7282  012184  157E               	andwf	(_ipv4Header+17)& (0+255),w,b
  7283  012186  6FC7               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7284  012188  0E00               	movlw	0
  7285  01218A  157F               	andwf	(_ipv4Header+18)& (0+255),w,b
  7286  01218C  6FC8               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7287  01218E  0E00               	movlw	0
  7288  012190  1580               	andwf	(_ipv4Header+19)& (0+255),w,b
  7289  012192  6FC9               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7290  012194  C2C6  F2C9         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  7291  012198  6BC8               	clrf	(??_IPV4_Packet+2)& (0+255),b
  7292  01219A  6BC7               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7293  01219C  6BC6               	clrf	??_IPV4_Packet& (0+255),b
  7294  01219E  EE22  F07D         	lfsr	2,_ipv4Header+16
  7295  0121A2  0E00               	movlw	0
  7296  0121A4  14DE               	andwf	postinc2,w,c
  7297  0121A6  6FCA               	movwf	(??_IPV4_Packet+4)& (0+255),b
  7298  0121A8  0EFF               	movlw	255
  7299  0121AA  14DE               	andwf	postinc2,w,c
  7300  0121AC  6FCB               	movwf	(??_IPV4_Packet+5)& (0+255),b
  7301  0121AE  0E00               	movlw	0
  7302  0121B0  14DE               	andwf	postinc2,w,c
  7303  0121B2  6FCC               	movwf	(??_IPV4_Packet+6)& (0+255),b
  7304  0121B4  0E00               	movlw	0
  7305  0121B6  14DE               	andwf	postinc2,w,c
  7306  0121B8  6FCD               	movwf	(??_IPV4_Packet+7)& (0+255),b
  7307  0121BA  C2CC  F2CD         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  7308  0121BE  C2CB  F2CC         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  7309  0121C2  C2CA  F2CB         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  7310  0121C6  6BCA               	clrf	(??_IPV4_Packet+4)& (0+255),b
  7311  0121C8  C27D  F2CE         	movff	_ipv4Header+16,??_IPV4_Packet+8
  7312  0121CC  C27E  F2CF         	movff	_ipv4Header+17,??_IPV4_Packet+9
  7313  0121D0  C27F  F2D0         	movff	_ipv4Header+18,??_IPV4_Packet+10
  7314  0121D4  C280  F2D1         	movff	_ipv4Header+19,??_IPV4_Packet+11
  7315  0121D8  C2CF  F2CE         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  7316  0121DC  C2D0  F2CF         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  7317  0121E0  C2D1  F2D0         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  7318  0121E4  6BD1               	clrf	(??_IPV4_Packet+11)& (0+255),b
  7319  0121E6  0E00               	movlw	0
  7320  0121E8  15CE               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
  7321  0121EA  6FD2               	movwf	(??_IPV4_Packet+12)& (0+255),b
  7322  0121EC  0EFF               	movlw	255
  7323  0121EE  15CF               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
  7324  0121F0  6FD3               	movwf	(??_IPV4_Packet+13)& (0+255),b
  7325  0121F2  0E00               	movlw	0
  7326  0121F4  15D0               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
  7327  0121F6  6FD4               	movwf	(??_IPV4_Packet+14)& (0+255),b
  7328  0121F8  0E00               	movlw	0
  7329  0121FA  15D1               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
  7330  0121FC  6FD5               	movwf	(??_IPV4_Packet+15)& (0+255),b
  7331  0121FE  EE22  F07D         	lfsr	2,_ipv4Header+16
  7332  012202  0E00               	movlw	0
  7333  012204  14DE               	andwf	postinc2,w,c
  7334  012206  6FD6               	movwf	(??_IPV4_Packet+16)& (0+255),b
  7335  012208  0E00               	movlw	0
  7336  01220A  14DE               	andwf	postinc2,w,c
  7337  01220C  6FD7               	movwf	(??_IPV4_Packet+17)& (0+255),b
  7338  01220E  0E00               	movlw	0
  7339  012210  14DE               	andwf	postinc2,w,c
  7340  012212  6FD8               	movwf	(??_IPV4_Packet+18)& (0+255),b
  7341  012214  0EFF               	movlw	255
  7342  012216  14DE               	andwf	postinc2,w,c
  7343  012218  6FD9               	movwf	(??_IPV4_Packet+19)& (0+255),b
  7344  01221A  0E19               	movlw	25
  7345  01221C  D005               	goto	u12750
  7346  01221E                     u12755:
  7347  01221E  90D8               	bcf	status,0,c
  7348  012220  33D9               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  7349  012222  33D8               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  7350  012224  33D7               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  7351  012226  33D6               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  7352  012228                     u12750:
  7353  012228  2EE8               	decfsz	wreg,f,c
  7354  01222A  D7F9               	goto	u12755
  7355  01222C  51D2               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  7356  01222E  11D6               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  7357  012230  6FDA               	movwf	(??_IPV4_Packet+20)& (0+255),b
  7358  012232  51D3               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  7359  012234  11D7               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  7360  012236  6FDB               	movwf	(??_IPV4_Packet+21)& (0+255),b
  7361  012238  51D4               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  7362  01223A  11D8               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  7363  01223C  6FDC               	movwf	(??_IPV4_Packet+22)& (0+255),b
  7364  01223E  51D5               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  7365  012240  11D9               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  7366  012242  6FDD               	movwf	(??_IPV4_Packet+23)& (0+255),b
  7367  012244  51CA               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  7368  012246  11DA               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  7369  012248  6FDE               	movwf	(??_IPV4_Packet+24)& (0+255),b
  7370  01224A  51CB               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  7371  01224C  11DB               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  7372  01224E  6FDF               	movwf	(??_IPV4_Packet+25)& (0+255),b
  7373  012250  51CC               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  7374  012252  11DC               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  7375  012254  6FE0               	movwf	(??_IPV4_Packet+26)& (0+255),b
  7376  012256  51CD               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  7377  012258  11DD               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  7378  01225A  6FE1               	movwf	(??_IPV4_Packet+27)& (0+255),b
  7379  01225C  51C6               	movf	??_IPV4_Packet& (0+255),w,b
  7380  01225E  11DE               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  7381  012260  6F7D               	movwf	(_ipv4Header+16)& (0+255),b
  7382  012262  51C7               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  7383  012264  11DF               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  7384  012266  6F7E               	movwf	(_ipv4Header+17)& (0+255),b
  7385  012268  51C8               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  7386  01226A  11E0               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  7387  01226C  6F7F               	movwf	(_ipv4Header+18)& (0+255),b
  7388  01226E  51C9               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  7389  012270  11E1               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  7390  012272  6F80               	movwf	(_ipv4Header+19)& (0+255),b
  7391                           
  7392                           ;ipv4.c: 124: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  7393  012274  0EFF               	movlw	255
  7394  012276  1579               	andwf	(_ipv4Header+12)& (0+255),w,b
  7395  012278  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7396  01227A  0E00               	movlw	0
  7397  01227C  157A               	andwf	(_ipv4Header+13)& (0+255),w,b
  7398  01227E  6FC7               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7399  012280  0E00               	movlw	0
  7400  012282  157B               	andwf	(_ipv4Header+14)& (0+255),w,b
  7401  012284  6FC8               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7402  012286  0E00               	movlw	0
  7403  012288  157C               	andwf	(_ipv4Header+15)& (0+255),w,b
  7404  01228A  6FC9               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7405  01228C  C2C6  F2C9         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  7406  012290  6BC8               	clrf	(??_IPV4_Packet+2)& (0+255),b
  7407  012292  6BC7               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7408  012294  6BC6               	clrf	??_IPV4_Packet& (0+255),b
  7409  012296  EE22  F079         	lfsr	2,_ipv4Header+12
  7410  01229A  0E00               	movlw	0
  7411  01229C  14DE               	andwf	postinc2,w,c
  7412  01229E  6FCA               	movwf	(??_IPV4_Packet+4)& (0+255),b
  7413  0122A0  0EFF               	movlw	255
  7414  0122A2  14DE               	andwf	postinc2,w,c
  7415  0122A4  6FCB               	movwf	(??_IPV4_Packet+5)& (0+255),b
  7416  0122A6  0E00               	movlw	0
  7417  0122A8  14DE               	andwf	postinc2,w,c
  7418  0122AA  6FCC               	movwf	(??_IPV4_Packet+6)& (0+255),b
  7419  0122AC  0E00               	movlw	0
  7420  0122AE  14DE               	andwf	postinc2,w,c
  7421  0122B0  6FCD               	movwf	(??_IPV4_Packet+7)& (0+255),b
  7422  0122B2  C2CC  F2CD         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  7423  0122B6  C2CB  F2CC         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  7424  0122BA  C2CA  F2CB         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  7425  0122BE  6BCA               	clrf	(??_IPV4_Packet+4)& (0+255),b
  7426  0122C0  C279  F2CE         	movff	_ipv4Header+12,??_IPV4_Packet+8
  7427  0122C4  C27A  F2CF         	movff	_ipv4Header+13,??_IPV4_Packet+9
  7428  0122C8  C27B  F2D0         	movff	_ipv4Header+14,??_IPV4_Packet+10
  7429  0122CC  C27C  F2D1         	movff	_ipv4Header+15,??_IPV4_Packet+11
  7430  0122D0  C2CF  F2CE         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  7431  0122D4  C2D0  F2CF         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  7432  0122D8  C2D1  F2D0         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  7433  0122DC  6BD1               	clrf	(??_IPV4_Packet+11)& (0+255),b
  7434  0122DE  0E00               	movlw	0
  7435  0122E0  15CE               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
  7436  0122E2  6FD2               	movwf	(??_IPV4_Packet+12)& (0+255),b
  7437  0122E4  0EFF               	movlw	255
  7438  0122E6  15CF               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
  7439  0122E8  6FD3               	movwf	(??_IPV4_Packet+13)& (0+255),b
  7440  0122EA  0E00               	movlw	0
  7441  0122EC  15D0               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
  7442  0122EE  6FD4               	movwf	(??_IPV4_Packet+14)& (0+255),b
  7443  0122F0  0E00               	movlw	0
  7444  0122F2  15D1               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
  7445  0122F4  6FD5               	movwf	(??_IPV4_Packet+15)& (0+255),b
  7446  0122F6  EE22  F079         	lfsr	2,_ipv4Header+12
  7447  0122FA  0E00               	movlw	0
  7448  0122FC  14DE               	andwf	postinc2,w,c
  7449  0122FE  6FD6               	movwf	(??_IPV4_Packet+16)& (0+255),b
  7450  012300  0E00               	movlw	0
  7451  012302  14DE               	andwf	postinc2,w,c
  7452  012304  6FD7               	movwf	(??_IPV4_Packet+17)& (0+255),b
  7453  012306  0E00               	movlw	0
  7454  012308  14DE               	andwf	postinc2,w,c
  7455  01230A  6FD8               	movwf	(??_IPV4_Packet+18)& (0+255),b
  7456  01230C  0EFF               	movlw	255
  7457  01230E  14DE               	andwf	postinc2,w,c
  7458  012310  6FD9               	movwf	(??_IPV4_Packet+19)& (0+255),b
  7459  012312  0E19               	movlw	25
  7460  012314  D005               	goto	u12760
  7461  012316                     u12765:
  7462  012316  90D8               	bcf	status,0,c
  7463  012318  33D9               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  7464  01231A  33D8               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  7465  01231C  33D7               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  7466  01231E  33D6               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  7467  012320                     u12760:
  7468  012320  2EE8               	decfsz	wreg,f,c
  7469  012322  D7F9               	goto	u12765
  7470  012324  51D2               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  7471  012326  11D6               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  7472  012328  6FDA               	movwf	(??_IPV4_Packet+20)& (0+255),b
  7473  01232A  51D3               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  7474  01232C  11D7               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  7475  01232E  6FDB               	movwf	(??_IPV4_Packet+21)& (0+255),b
  7476  012330  51D4               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  7477  012332  11D8               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  7478  012334  6FDC               	movwf	(??_IPV4_Packet+22)& (0+255),b
  7479  012336  51D5               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  7480  012338  11D9               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  7481  01233A  6FDD               	movwf	(??_IPV4_Packet+23)& (0+255),b
  7482  01233C  51CA               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  7483  01233E  11DA               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  7484  012340  6FDE               	movwf	(??_IPV4_Packet+24)& (0+255),b
  7485  012342  51CB               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  7486  012344  11DB               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  7487  012346  6FDF               	movwf	(??_IPV4_Packet+25)& (0+255),b
  7488  012348  51CC               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  7489  01234A  11DC               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  7490  01234C  6FE0               	movwf	(??_IPV4_Packet+26)& (0+255),b
  7491  01234E  51CD               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  7492  012350  11DD               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  7493  012352  6FE1               	movwf	(??_IPV4_Packet+27)& (0+255),b
  7494  012354  51C6               	movf	??_IPV4_Packet& (0+255),w,b
  7495  012356  11DE               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  7496  012358  6F79               	movwf	(_ipv4Header+12)& (0+255),b
  7497  01235A  51C7               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  7498  01235C  11DF               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  7499  01235E  6F7A               	movwf	(_ipv4Header+13)& (0+255),b
  7500  012360  51C8               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  7501  012362  11E0               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  7502  012364  6F7B               	movwf	(_ipv4Header+14)& (0+255),b
  7503  012366  51C9               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  7504  012368  11E1               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  7505  01236A  6F7C               	movwf	(_ipv4Header+15)& (0+255),b
  7506                           
  7507                           ; BSR set to: 2
  7508                           ;ipv4.c: 126: if(ipv4Header.srcIpAddress == 0xFFFFFFFF)
  7509  01236C  2979               	incf	(_ipv4Header+12)& (0+255),w,b
  7510  01236E  E107               	bnz	l12552
  7511  012370  297A               	incf	(_ipv4Header+13)& (0+255),w,b
  7512  012372  E105               	bnz	l12552
  7513  012374  297B               	incf	(_ipv4Header+14)& (0+255),w,b
  7514  012376  E103               	bnz	l12552
  7515  012378  297C               	incf	(_ipv4Header+15)& (0+255),w,b
  7516  01237A  B4D8               	btfsc	status,2,c
  7517  01237C  0012               	return	
  7518  01237E                     l12552:
  7519                           
  7520                           ; BSR set to: 2
  7521                           ;ipv4.c: 130: if(ipv4Header.dstIpAddress == (ip_database_info.ipv4_myAddress) || (ipv4He
      +                          ader.dstIpAddress == 0)||
  7522                           ;ipv4.c: 131: ((ipv4Header.dstIpAddress == 0xFFFFFFFF)
  7523                           ;ipv4.c: 132: ||((ipv4Header.dstIpAddress|0XFF000000 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0x00FFFFFF)== ipv4Header.dstIpAddress)))
  7524                           ;ipv4.c: 133: ||((ipv4Header.dstIpAddress|0xFFFF0000 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0x0000FFFF)== ipv4Header.dstIpAddress)))
  7525                           ;ipv4.c: 134: ||((ipv4Header.dstIpAddress|0xFFFFFF00 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0X000000FF)== ipv4Header.dstIpAddress))))
  7526  01237E  5100               	movf	_ip_database_info& (0+255),w,b
  7527  012380  197D               	xorwf	(_ipv4Header+16)& (0+255),w,b
  7528  012382  E10A               	bnz	u12780
  7529  012384  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  7530  012386  197E               	xorwf	(_ipv4Header+17)& (0+255),w,b
  7531  012388  E107               	bnz	u12780
  7532  01238A  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  7533  01238C  197F               	xorwf	(_ipv4Header+18)& (0+255),w,b
  7534  01238E  E104               	bnz	u12780
  7535  012390  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  7536  012392  1980               	xorwf	(_ipv4Header+19)& (0+255),w,b
  7537  012394  B4D8               	btfsc	status,2,c
  7538  012396  D071               	goto	u12870
  7539  012398                     u12780:
  7540                           
  7541                           ; BSR set to: 2
  7542  012398  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7543  01239A  117E               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7544  01239C  117F               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7545  01239E  1180               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7546  0123A0  B4D8               	btfsc	status,2,c
  7547  0123A2  D06B               	goto	u12870
  7548                           
  7549                           ; BSR set to: 2
  7550  0123A4  297D               	incf	(_ipv4Header+16)& (0+255),w,b
  7551  0123A6  E107               	bnz	u12800
  7552  0123A8  297E               	incf	(_ipv4Header+17)& (0+255),w,b
  7553  0123AA  E105               	bnz	u12800
  7554  0123AC  297F               	incf	(_ipv4Header+18)& (0+255),w,b
  7555  0123AE  E103               	bnz	u12800
  7556  0123B0  2980               	incf	(_ipv4Header+19)& (0+255),w,b
  7557  0123B2  B4D8               	btfsc	status,2,c
  7558  0123B4  D062               	goto	u12870
  7559  0123B6                     u12800:
  7560                           
  7561                           ; BSR set to: 2
  7562  0123B6  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7563  0123B8  117E               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7564  0123BA  117F               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7565  0123BC  1180               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7566  0123BE  B4D8               	btfsc	status,2,c
  7567  0123C0  D019               	goto	u12820
  7568                           
  7569                           ; BSR set to: 2
  7570  0123C2  0EFF               	movlw	255
  7571  0123C4  1100               	iorwf	_ip_database_info& (0+255),w,b
  7572  0123C6  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7573  0123C8  0EFF               	movlw	255
  7574  0123CA  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  7575  0123CC  6FC7               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7576  0123CE  0EFF               	movlw	255
  7577  0123D0  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  7578  0123D2  6FC8               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7579  0123D4  0E00               	movlw	0
  7580  0123D6  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  7581  0123D8  6FC9               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7582  0123DA  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7583  0123DC  19C6               	xorwf	??_IPV4_Packet& (0+255),w,b
  7584  0123DE  E10A               	bnz	l12562
  7585  0123E0  517E               	movf	(_ipv4Header+17)& (0+255),w,b
  7586  0123E2  19C7               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  7587  0123E4  E107               	bnz	l12562
  7588  0123E6  517F               	movf	(_ipv4Header+18)& (0+255),w,b
  7589  0123E8  19C8               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7590  0123EA  E104               	bnz	l12562
  7591  0123EC  5180               	movf	(_ipv4Header+19)& (0+255),w,b
  7592  0123EE  19C9               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7593  0123F0  B4D8               	btfsc	status,2,c
  7594  0123F2  D043               	goto	u12870
  7595  0123F4                     u12820:
  7596  0123F4                     l12562:
  7597                           
  7598                           ; BSR set to: 2
  7599  0123F4  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7600  0123F6  117E               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7601  0123F8  117F               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7602  0123FA  1180               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7603  0123FC  B4D8               	btfsc	status,2,c
  7604  0123FE  D019               	goto	u12840
  7605                           
  7606                           ; BSR set to: 2
  7607  012400  0EFF               	movlw	255
  7608  012402  1100               	iorwf	_ip_database_info& (0+255),w,b
  7609  012404  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7610  012406  0EFF               	movlw	255
  7611  012408  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  7612  01240A  6FC7               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7613  01240C  0E00               	movlw	0
  7614  01240E  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  7615  012410  6FC8               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7616  012412  0E00               	movlw	0
  7617  012414  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  7618  012416  6FC9               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7619  012418  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7620  01241A  19C6               	xorwf	??_IPV4_Packet& (0+255),w,b
  7621  01241C  E10A               	bnz	l12566
  7622  01241E  517E               	movf	(_ipv4Header+17)& (0+255),w,b
  7623  012420  19C7               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  7624  012422  E107               	bnz	l12566
  7625  012424  517F               	movf	(_ipv4Header+18)& (0+255),w,b
  7626  012426  19C8               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7627  012428  E104               	bnz	l12566
  7628  01242A  5180               	movf	(_ipv4Header+19)& (0+255),w,b
  7629  01242C  19C9               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7630  01242E  B4D8               	btfsc	status,2,c
  7631  012430  D024               	goto	u12870
  7632  012432                     u12840:
  7633  012432                     l12566:
  7634                           
  7635                           ; BSR set to: 2
  7636  012432  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7637  012434  117E               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7638  012436  117F               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7639  012438  1180               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7640  01243A  B4D8               	btfsc	status,2,c
  7641  01243C  D016               	goto	u12860
  7642                           
  7643                           ; BSR set to: 2
  7644  01243E  0EFF               	movlw	255
  7645  012440  1100               	iorwf	_ip_database_info& (0+255),w,b
  7646  012442  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7647  012444  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  7648  012446  6FC7               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7649  012448  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  7650  01244A  6FC8               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7651  01244C  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  7652  01244E  6FC9               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7653  012450  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7654  012452  19C6               	xorwf	??_IPV4_Packet& (0+255),w,b
  7655  012454  E10A               	bnz	l12570
  7656  012456  517E               	movf	(_ipv4Header+17)& (0+255),w,b
  7657  012458  19C7               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  7658  01245A  E107               	bnz	l12570
  7659  01245C  517F               	movf	(_ipv4Header+18)& (0+255),w,b
  7660  01245E  19C8               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7661  012460  E104               	bnz	l12570
  7662  012462  5180               	movf	(_ipv4Header+19)& (0+255),w,b
  7663  012464  19C9               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7664  012466  B4D8               	btfsc	status,2,c
  7665  012468  D008               	goto	u12870
  7666  01246A                     u12860:
  7667  01246A                     l12570:
  7668                           
  7669                           ; BSR set to: 2
  7670  01246A  057D               	decf	(_ipv4Header+16)& (0+255),w,b
  7671  01246C  E105               	bnz	u12871
  7672  01246E  0EE0               	movlw	224
  7673  012470  1980               	xorwf	(_ipv4Header+19)& (0+255),w,b
  7674  012472  117E               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7675  012474  117F               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7676  012476  A4D8               	btfss	status,2,c
  7677  012478                     u12871:
  7678  012478  0012               	return	
  7679  01247A                     u12870:
  7680                           
  7681                           ; BSR set to: 2
  7682                           ;ipv4.c: 136: {
  7683                           ;ipv4.c: 137: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  7684                           
  7685                           ; BSR set to: 2
  7686  01247A  516F               	movf	(_ipv4Header+2)& (0+255),w,b
  7687  01247C  6FC7               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7688  01247E  6BC6               	clrf	??_IPV4_Packet& (0+255),b
  7689  012480  EE22  F06F         	lfsr	2,_ipv4Header+2
  7690  012484  CFDE F2C8          	movff	postinc2,??_IPV4_Packet+2
  7691  012488  CFDD F2C9          	movff	postdec2,??_IPV4_Packet+3
  7692  01248C  C2C9  F2C8         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  7693  012490  6BC9               	clrf	(??_IPV4_Packet+3)& (0+255),b
  7694  012492  0EFF               	movlw	255
  7695  012494  17C8               	andwf	(??_IPV4_Packet+2)& (0+255),f,b
  7696  012496  0E00               	movlw	0
  7697  012498  17C9               	andwf	(??_IPV4_Packet+3)& (0+255),f,b
  7698  01249A  51C6               	movf	??_IPV4_Packet& (0+255),w,b
  7699  01249C  11C8               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7700  01249E  6F6F               	movwf	(_ipv4Header+2)& (0+255),b
  7701  0124A0  51C7               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  7702  0124A2  11C9               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7703  0124A4  6F70               	movwf	(_ipv4Header+3)& (0+255),b
  7704                           
  7705                           ; BSR set to: 2
  7706                           ;ipv4.c: 139: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  7707  0124A6  516D               	movf	_ipv4Header& (0+255),w,b
  7708  0124A8  0B0F               	andlw	15
  7709  0124AA  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7710  0124AC  90D8               	bcf	status,0,c
  7711  0124AE  37C6               	rlcf	??_IPV4_Packet& (0+255),f,b
  7712  0124B0  90D8               	bcf	status,0,c
  7713  0124B2  35C6               	rlcf	??_IPV4_Packet& (0+255),w,b
  7714  0124B4  6FE2               	movwf	IPV4_Packet@hdrLen& (0+255),b
  7715                           
  7716                           ; BSR set to: 2
  7717                           ;ipv4.c: 141: if(ipv4Header.ihl < 5)
  7718  0124B6  516D               	movf	_ipv4Header& (0+255),w,b
  7719  0124B8  0B0F               	andlw	15
  7720  0124BA  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7721  0124BC  0E05               	movlw	5
  7722  0124BE  61C6               	cpfslt	??_IPV4_Packet& (0+255),b
  7723  0124C0  D001               	goto	l866
  7724  0124C2  0012               	return	
  7725  0124C4                     l866:
  7726                           
  7727                           ; BSR set to: 2
  7728                           ;ipv4.c: 144: if (ipv4Header.ihl > 5)
  7729                           
  7730                           ; BSR set to: 2
  7731  0124C4  516D               	movf	_ipv4Header& (0+255),w,b
  7732  0124C6  0B0F               	andlw	15
  7733  0124C8  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7734  0124CA  0E05               	movlw	5
  7735  0124CC  65C6               	cpfsgt	??_IPV4_Packet& (0+255),b
  7736  0124CE  D0BD               	goto	l868
  7737                           
  7738                           ; BSR set to: 2
  7739                           ;ipv4.c: 145: {
  7740                           ;ipv4.c: 147: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  7741  0124D0  0EEC               	movlw	236
  7742  0124D2  25E2               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  7743  0124D4  6E13               	movwf	ETH_Dump@length,c
  7744  0124D6  6A14               	clrf	ETH_Dump@length+1,c
  7745  0124D8  0EFF               	movlw	255
  7746  0124DA  2214               	addwfc	ETH_Dump@length+1,f,c
  7747  0124DC  EC46  F0B5         	call	_ETH_Dump	;wreg free
  7748                           
  7749                           ;ipv4.c: 148: return IPV4_NO_OPTIONS;
  7750                           ;	Return value of _IPV4_Packet is never used
  7751  0124E0  0012               	return	
  7752  0124E2                     
  7753                           ;ipv4.c: 154: {
  7754                           ;ipv4.c: 156: if((ipv4Header.dstIpAddress == 0))
  7755  0124E2  0102               	movlb	2	; () banked
  7756  0124E4  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7757  0124E6  117E               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7758  0124E8  117F               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7759  0124EA  1180               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7760  0124EC  B4D8               	btfsc	status,2,c
  7761  0124EE  0012               	return	
  7762                           
  7763                           ; BSR set to: 2
  7764                           ;ipv4.c: 159: }
  7765                           ;ipv4.c: 160: length = ipv4Header.length - hdrLen;
  7766                           
  7767                           ; BSR set to: 2
  7768                           
  7769                           ; BSR set to: 2
  7770                           ;ipv4.c: 157: {
  7771                           ;ipv4.c: 158: return DEST_IP_NOT_MATCHED;
  7772                           ;	Return value of _IPV4_Packet is never used
  7773  0124F0  51E2               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7774  0124F2  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7775  0124F4  6BC7               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7776  0124F6  1FC6               	comf	??_IPV4_Packet& (0+255),f,b
  7777  0124F8  1FC7               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  7778  0124FA  4BC6               	infsnz	??_IPV4_Packet& (0+255),f,b
  7779  0124FC  2BC7               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  7780  0124FE  516F               	movf	(_ipv4Header+2)& (0+255),w,b
  7781  012500  25C6               	addwf	??_IPV4_Packet& (0+255),w,b
  7782  012502  6FE3               	movwf	IPV4_Packet@length& (0+255),b
  7783  012504  5170               	movf	(_ipv4Header+3)& (0+255),w,b
  7784  012506  21C7               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  7785  012508  6FE4               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7786                           
  7787                           ; BSR set to: 2
  7788                           ;ipv4.c: 161: cksm = ETH_RxComputeChecksum(length, 0);
  7789  01250A  C2E3  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7790  01250E  C2E4  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7791  012512  0E00               	movlw	0
  7792  012514  6E28               	movwf	ETH_RxComputeChecksum@seed+1,c
  7793  012516  0E00               	movlw	0
  7794  012518  6E27               	movwf	ETH_RxComputeChecksum@seed,c
  7795  01251A  EC72  F0B3         	call	_ETH_RxComputeChecksum	;wreg free
  7796  01251E  C025  F2E5         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7797  012522  C026  F2E6         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7798                           
  7799                           ;ipv4.c: 163: if (cksm == 0)
  7800  012526  0102               	movlb	2	; () banked
  7801  012528  51E5               	movf	IPV4_Packet@cksm& (0+255),w,b
  7802  01252A  11E6               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  7803  01252C  A4D8               	btfss	status,2,c
  7804  01252E  0012               	return	
  7805                           
  7806                           ; BSR set to: 2
  7807                           ;ipv4.c: 164: {
  7808                           ;ipv4.c: 165: ICMP_Receive(&ipv4Header);
  7809  012530  0E6D               	movlw	low _ipv4Header
  7810  012532  0100               	movlb	0	; () banked
  7811  012534  6FB9               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
  7812  012536  0E02               	movlw	high _ipv4Header
  7813  012538  6FBA               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
  7814  01253A  EC3D  F0AB         	call	_ICMP_Receive	;wreg free
  7815                           
  7816                           ;ipv4.c: 170: }
  7817                           ;ipv4.c: 171: }
  7818                           ;ipv4.c: 172: break;
  7819                           
  7820                           ;ipv4.c: 167: else
  7821                           ;ipv4.c: 168: {
  7822                           ;ipv4.c: 169: return ICMP_CHECKSUM_FAILS;
  7823                           ;	Return value of _IPV4_Packet is never used
  7824                           
  7825                           ;ipv4.c: 166: }
  7826  01253E  0012               	return	
  7827  012540                     
  7828                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  7829  012540  0102               	movlb	2	; () banked
  7830  012542  51E2               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7831  012544  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7832  012546  6BC7               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7833  012548  1FC6               	comf	??_IPV4_Packet& (0+255),f,b
  7834  01254A  1FC7               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  7835  01254C  4BC6               	infsnz	??_IPV4_Packet& (0+255),f,b
  7836  01254E  2BC7               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  7837  012550  516F               	movf	(_ipv4Header+2)& (0+255),w,b
  7838  012552  25C6               	addwf	??_IPV4_Packet& (0+255),w,b
  7839  012554  6FE3               	movwf	IPV4_Packet@length& (0+255),b
  7840  012556  5170               	movf	(_ipv4Header+3)& (0+255),w,b
  7841  012558  21C7               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  7842  01255A  6FE4               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7843                           
  7844                           ; BSR set to: 2
  7845                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  7846  01255C  C2E3  F013         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  7847  012560  C2E4  F014         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  7848  012564  EC21  F0AC         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  7849  012568  C013  F2E5         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  7850  01256C  C014  F2E6         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  7851                           
  7852                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  7853  012570  C2E3  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7854  012574  C2E4  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7855  012578  C2E5  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  7856  01257C  C2E6  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  7857  012580  EC72  F0B3         	call	_ETH_RxComputeChecksum	;wreg free
  7858  012584  C025  F2E5         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7859  012588  C026  F2E6         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7860                           
  7861                           ;ipv4.c: 178: UDP_Receive(cksm);
  7862  01258C  C2E5  F0DD         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  7863  012590  C2E6  F0DE         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  7864  012594  ECE9  F0A3         	call	_UDP_Receive	;wreg free
  7865                           
  7866                           ;ipv4.c: 179: break;
  7867  012598  0012               	return	
  7868  01259A                     
  7869                           ;ipv4.c: 183: length = ipv4Header.length - hdrLen;
  7870  01259A  0102               	movlb	2	; () banked
  7871  01259C  51E2               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7872  01259E  6FC6               	movwf	??_IPV4_Packet& (0+255),b
  7873  0125A0  6BC7               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7874  0125A2  1FC6               	comf	??_IPV4_Packet& (0+255),f,b
  7875  0125A4  1FC7               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  7876  0125A6  4BC6               	infsnz	??_IPV4_Packet& (0+255),f,b
  7877  0125A8  2BC7               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  7878  0125AA  516F               	movf	(_ipv4Header+2)& (0+255),w,b
  7879  0125AC  25C6               	addwf	??_IPV4_Packet& (0+255),w,b
  7880  0125AE  6FE3               	movwf	IPV4_Packet@length& (0+255),b
  7881  0125B0  5170               	movf	(_ipv4Header+3)& (0+255),w,b
  7882  0125B2  21C7               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  7883  0125B4  6FE4               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7884                           
  7885                           ; BSR set to: 2
  7886                           ;ipv4.c: 184: cksm = IPV4_PseudoHeaderChecksum(length);
  7887  0125B6  C2E3  F013         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  7888  0125BA  C2E4  F014         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  7889  0125BE  EC21  F0AC         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  7890  0125C2  C013  F2E5         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  7891  0125C6  C014  F2E6         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  7892                           
  7893                           ;ipv4.c: 185: cksm = ETH_RxComputeChecksum(length, cksm);
  7894  0125CA  C2E3  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7895  0125CE  C2E4  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7896  0125D2  C2E5  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  7897  0125D6  C2E6  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  7898  0125DA  EC72  F0B3         	call	_ETH_RxComputeChecksum	;wreg free
  7899  0125DE  C025  F2E5         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7900  0125E2  C026  F2E6         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7901                           
  7902                           ;ipv4.c: 188: if (cksm == 0 && (ipv4Header.dstIpAddress != 0xFFFFFFFF) && (ipv4Header.ds
      +                          tIpAddress != 0))
  7903  0125E6  0102               	movlb	2	; () banked
  7904  0125E8  51E5               	movf	IPV4_Packet@cksm& (0+255),w,b
  7905  0125EA  11E6               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  7906  0125EC  A4D8               	btfss	status,2,c
  7907  0125EE  0012               	return	
  7908                           
  7909                           ; BSR set to: 2
  7910  0125F0  297D               	incf	(_ipv4Header+16)& (0+255),w,b
  7911  0125F2  E107               	bnz	u12930
  7912  0125F4  297E               	incf	(_ipv4Header+17)& (0+255),w,b
  7913  0125F6  E105               	bnz	u12930
  7914  0125F8  297F               	incf	(_ipv4Header+18)& (0+255),w,b
  7915  0125FA  E103               	bnz	u12930
  7916  0125FC  2980               	incf	(_ipv4Header+19)& (0+255),w,b
  7917  0125FE  B4D8               	btfsc	status,2,c
  7918  012600  0012               	return	
  7919  012602                     u12930:
  7920                           
  7921                           ; BSR set to: 2
  7922  012602  517D               	movf	(_ipv4Header+16)& (0+255),w,b
  7923  012604  117E               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7924  012606  117F               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7925  012608  1180               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7926  01260A  B4D8               	btfsc	status,2,c
  7927  01260C  0012               	return	
  7928                           
  7929                           ; BSR set to: 2
  7930                           ;ipv4.c: 189: {
  7931                           ;ipv4.c: 190: remoteIpv4Address = ipv4Header.srcIpAddress;
  7932  01260E  C279  F232         	movff	_ipv4Header+12,_remoteIpv4Address
  7933  012612  C27A  F233         	movff	_ipv4Header+13,_remoteIpv4Address+1
  7934  012616  C27B  F234         	movff	_ipv4Header+14,_remoteIpv4Address+2
  7935  01261A  C27C  F235         	movff	_ipv4Header+15,_remoteIpv4Address+3
  7936                           
  7937                           ; BSR set to: 2
  7938                           ;ipv4.c: 191: TCP_Recv(remoteIpv4Address, length);
  7939  01261E  C232  F105         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  7940  012622  C233  F106         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  7941  012626  C234  F107         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  7942  01262A  C235  F108         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  7943  01262E  C2E3  F109         	movff	IPV4_Packet@length,TCP_Recv@length
  7944  012632  C2E4  F10A         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  7945  012636  EC61  F098         	call	_TCP_Recv	;wreg free
  7946                           
  7947                           ;ipv4.c: 192: }
  7948                           ;ipv4.c: 193: break;
  7949  01263A  0012               	return	
  7950  01263C                     
  7951                           ;ipv4.c: 195: ETH_Dump(ipv4Header.length);
  7952  01263C  C26F  F013         	movff	_ipv4Header+2,ETH_Dump@length
  7953  012640  C270  F014         	movff	_ipv4Header+3,ETH_Dump@length+1
  7954  012644  EC46  F0B5         	call	_ETH_Dump	;wreg free
  7955                           
  7956                           ;ipv4.c: 197: }
  7957                           
  7958                           ;ipv4.c: 196: break;
  7959  012648  0012               	return	
  7960  01264A                     l868:
  7961  01264A  0102               	movlb	2	; () banked
  7962  01264C  5176               	movf	(_ipv4Header+9)& (0+255),w,b
  7963                           
  7964                           ; Switch size 1, requested type "space"
  7965                           ; Number of cases is 3, Range of values is 1 to 17
  7966                           ; switch strategies available:
  7967                           ; Name         Instructions Cycles
  7968                           ; simple_byte           10     6 (average)
  7969                           ;	Chosen strategy is simple_byte
  7970  01264E  0A01               	xorlw	1	; case 1
  7971  012650  B4D8               	btfsc	status,2,c
  7972  012652  D747               	goto	l869
  7973  012654  0A07               	xorlw	7	; case 6
  7974  012656  B4D8               	btfsc	status,2,c
  7975  012658  D7A0               	goto	l875
  7976  01265A  0A17               	xorlw	23	; case 17
  7977  01265C  B4D8               	btfsc	status,2,c
  7978  01265E  D770               	goto	l874
  7979  012660  D7ED               	goto	l877
  7980  012662                     __end_of_IPV4_Packet:
  7981                           	opt stack 0
  7982                           tosu	equ	0xFFF
  7983                           tosh	equ	0xFFE
  7984                           tosl	equ	0xFFD
  7985                           pclath	equ	0xFFA
  7986                           tblptru	equ	0xFF8
  7987                           tblptrh	equ	0xFF7
  7988                           tblptrl	equ	0xFF6
  7989                           tablat	equ	0xFF5
  7990                           prodh	equ	0xFF4
  7991                           prodl	equ	0xFF3
  7992                           intcon	equ	0xFF2
  7993                           indf0	equ	0xFEF
  7994                           postinc0	equ	0xFEE
  7995                           fsr0h	equ	0xFEA
  7996                           fsr0l	equ	0xFE9
  7997                           wreg	equ	0xFE8
  7998                           indf1	equ	0xFE7
  7999                           postinc1	equ	0xFE6
  8000                           postdec1	equ	0xFE5
  8001                           fsr1h	equ	0xFE2
  8002                           fsr1l	equ	0xFE1
  8003                           indf2	equ	0xFDF
  8004                           postinc2	equ	0xFDE
  8005                           postdec2	equ	0xFDD
  8006                           fsr2h	equ	0xFDA
  8007                           fsr2l	equ	0xFD9
  8008                           status	equ	0xFD8
  8009                           
  8010 ;; *************** function _UDP_Receive *****************
  8011 ;; Defined at:
  8012 ;;		line 121 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  udpcksm         2  125[BANK0 ] unsigned int 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  hptr            2  132[BANK0 ] PTR struct .
  8017 ;;		 -> UDP_CallBackTable(20), NULL(0), 
  8018 ;;  x               2    0        unsigned int 
  8019 ;;  ret             1  131[BANK0 ] enum E393
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  1    wreg      enum E392
  8022 ;; Registers used:
  8023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8030 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8031 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;Total ram usage:        9 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:   13
  8036 ;; This function calls:
  8037 ;;		_DHCP_Handler
  8038 ;;		_DNS_Handler
  8039 ;;		_ETH_ReadBlock
  8040 ;;		_ICMP_PortUnreachable
  8041 ;;		_IPV4_GetDatagramLength
  8042 ;;		_NTP_Handler
  8043 ;;		_TFTP_Handler
  8044 ;;		_udp_table_getIterator
  8045 ;;		_udp_table_nextEntry
  8046 ;; This function is called by:
  8047 ;;		_IPV4_Packet
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text35
  8052  0147D2                     __ptext35:
  8053                           	opt stack 0
  8054  0147D2                     _UDP_Receive:
  8055                           	opt stack 14
  8056                           
  8057                           ;udpv4.c: 123: error_msg ret = ERROR;
  8058                           
  8059                           ;incstack = 0
  8060  0147D2  0E00               	movlw	0
  8061  0147D4  0100               	movlb	0	; () banked
  8062  0147D6  6FE3               	movwf	UDP_Receive@ret& (0+255),b
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;udpv4.c: 124: udp_table_iterator_t hptr;
  8066                           ;udpv4.c: 125: uint16_t x;
  8067                           ;udpv4.c: 127: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  8068  0147D8  0E81               	movlw	low _udpHeader
  8069  0147DA  6E13               	movwf	ETH_ReadBlock@buffer,c
  8070  0147DC  0E02               	movlw	high _udpHeader
  8071  0147DE  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  8072  0147E0  0E00               	movlw	0
  8073  0147E2  6E16               	movwf	ETH_ReadBlock@length+1,c
  8074  0147E4  0E08               	movlw	8
  8075  0147E6  6E15               	movwf	ETH_ReadBlock@length,c
  8076  0147E8  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
  8077                           
  8078                           ;udpv4.c: 129: if((udpHeader.checksum == 0) || (udpcksm == 0))
  8079  0147EC  0102               	movlb	2	; () banked
  8080  0147EE  5187               	movf	(_udpHeader+6)& (0+255),w,b
  8081  0147F0  1188               	iorwf	(_udpHeader+7)& (0+255),w,b
  8082  0147F2  B4D8               	btfsc	status,2,c
  8083  0147F4  D005               	goto	u12190
  8084                           
  8085                           ; BSR set to: 2
  8086  0147F6  0100               	movlb	0	; () banked
  8087  0147F8  51DD               	movf	UDP_Receive@udpcksm& (0+255),w,b
  8088  0147FA  11DE               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  8089  0147FC  A4D8               	btfss	status,2,c
  8090  0147FE  D0C9               	goto	l1237
  8091  014800                     u12190:
  8092                           
  8093                           ;udpv4.c: 130: {
  8094                           ;udpv4.c: 131: udpHeader.dstPort = ((((uint16_t)udpHeader.dstPort & (uint16_t)0xFF00) >>
      +                           8) | (((uint16_t)udpHeader.dstPort & (uint16_t)0x00FF) << 8));
  8095                           
  8096                           ; BSR set to: 0
  8097  014800  0102               	movlb	2	; () banked
  8098  014802  5183               	movf	(_udpHeader+2)& (0+255),w,b
  8099  014804  0100               	movlb	0	; () banked
  8100  014806  6FE0               	movwf	(??_UDP_Receive+1)& (0+255),b
  8101  014808  6BDF               	clrf	??_UDP_Receive& (0+255),b
  8102  01480A  EE22  F083         	lfsr	2,_udpHeader+2
  8103  01480E  CFDE F0E1          	movff	postinc2,??_UDP_Receive+2
  8104  014812  CFDD F0E2          	movff	postdec2,??_UDP_Receive+3
  8105  014816  C0E2  F0E1         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  8106  01481A  6BE2               	clrf	(??_UDP_Receive+3)& (0+255),b
  8107  01481C  0EFF               	movlw	255
  8108  01481E  17E1               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  8109  014820  0E00               	movlw	0
  8110  014822  17E2               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  8111  014824  51DF               	movf	??_UDP_Receive& (0+255),w,b
  8112  014826  11E1               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  8113  014828  0102               	movlb	2	; () banked
  8114  01482A  6F83               	movwf	(_udpHeader+2)& (0+255),b
  8115  01482C  0100               	movlb	0	; () banked
  8116  01482E  51E0               	movf	(??_UDP_Receive+1)& (0+255),w,b
  8117  014830  11E2               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  8118  014832  0102               	movlb	2	; () banked
  8119  014834  6F84               	movwf	(_udpHeader+3)& (0+255),b
  8120                           
  8121                           ; BSR set to: 2
  8122                           ;udpv4.c: 132: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  8123  014836  5181               	movf	_udpHeader& (0+255),w,b
  8124  014838  0100               	movlb	0	; () banked
  8125  01483A  6FE0               	movwf	(??_UDP_Receive+1)& (0+255),b
  8126  01483C  6BDF               	clrf	??_UDP_Receive& (0+255),b
  8127  01483E  C281  F0E1         	movff	_udpHeader,??_UDP_Receive+2
  8128  014842  C282  F0E2         	movff	_udpHeader+1,??_UDP_Receive+3
  8129  014846  C0E2  F0E1         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  8130  01484A  6BE2               	clrf	(??_UDP_Receive+3)& (0+255),b
  8131  01484C  0EFF               	movlw	255
  8132  01484E  17E1               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  8133  014850  0E00               	movlw	0
  8134  014852  17E2               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  8135  014854  51DF               	movf	??_UDP_Receive& (0+255),w,b
  8136  014856  11E1               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  8137  014858  0102               	movlb	2	; () banked
  8138  01485A  6F4E               	movwf	_destPort& (0+255),b
  8139  01485C  0100               	movlb	0	; () banked
  8140  01485E  51E0               	movf	(??_UDP_Receive+1)& (0+255),w,b
  8141  014860  11E2               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  8142  014862  0102               	movlb	2	; () banked
  8143  014864  6F4F               	movwf	(_destPort+1)& (0+255),b
  8144                           
  8145                           ; BSR set to: 2
  8146                           ;udpv4.c: 133: udpHeader.length = ((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8
      +                          ) | (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8));
  8147  014866  5185               	movf	(_udpHeader+4)& (0+255),w,b
  8148  014868  0100               	movlb	0	; () banked
  8149  01486A  6FE0               	movwf	(??_UDP_Receive+1)& (0+255),b
  8150  01486C  6BDF               	clrf	??_UDP_Receive& (0+255),b
  8151  01486E  EE22  F085         	lfsr	2,_udpHeader+4
  8152  014872  CFDE F0E1          	movff	postinc2,??_UDP_Receive+2
  8153  014876  CFDD F0E2          	movff	postdec2,??_UDP_Receive+3
  8154  01487A  C0E2  F0E1         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  8155  01487E  6BE2               	clrf	(??_UDP_Receive+3)& (0+255),b
  8156  014880  0EFF               	movlw	255
  8157  014882  17E1               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  8158  014884  0E00               	movlw	0
  8159  014886  17E2               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  8160  014888  51DF               	movf	??_UDP_Receive& (0+255),w,b
  8161  01488A  11E1               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  8162  01488C  0102               	movlb	2	; () banked
  8163  01488E  6F85               	movwf	(_udpHeader+4)& (0+255),b
  8164  014890  0100               	movlb	0	; () banked
  8165  014892  51E0               	movf	(??_UDP_Receive+1)& (0+255),w,b
  8166  014894  11E2               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  8167  014896  0102               	movlb	2	; () banked
  8168  014898  6F86               	movwf	(_udpHeader+5)& (0+255),b
  8169                           
  8170                           ; BSR set to: 2
  8171                           ;udpv4.c: 134: ret = PORT_NOT_AVAILABLE;
  8172  01489A  0E0D               	movlw	13
  8173  01489C  0100               	movlb	0	; () banked
  8174  01489E  6FE3               	movwf	UDP_Receive@ret& (0+255),b
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;udpv4.c: 137: hptr = udp_table_getIterator();
  8178  0148A0  EC6C  F0B7         	call	_udp_table_getIterator	;wreg free
  8179  0148A4  C013  F0E4         	movff	?_udp_table_getIterator,UDP_Receive@hptr
  8180  0148A8  C014  F0E5         	movff	?_udp_table_getIterator+1,UDP_Receive@hptr+1
  8181                           
  8182                           ;udpv4.c: 139: while(hptr != (0))
  8183  0148AC  D04C               	goto	l1240
  8184  0148AE                     
  8185                           ;udpv4.c: 140: {
  8186                           ;udpv4.c: 141: if(hptr->portNumber == udpHeader.dstPort)
  8187  0148AE  C0E4  FFF6         	movff	UDP_Receive@hptr,tblptrl
  8188  0148B2  C0E5  FFF7         	movff	UDP_Receive@hptr+1,tblptrh
  8189  0148B6                     	if	0	;tblptru may be non-zero
  8190  0148B6                     	endif
  8191  0148B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8192  0148B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8193  0148B8  6EF8               	movwf	tblptru,c
  8194  0148BA                     	endif
  8195  0148BA  0102               	movlb	2	; () banked
  8196  0148BC  5183               	movf	(_udpHeader+2)& (0+255),w,b
  8197  0148BE  0009               	tblrd		*+
  8198  0148C0  18F5               	xorwf	tablat,w,c
  8199  0148C2  E137               	bnz	l12240
  8200  0148C4  5184               	movf	(_udpHeader+3)& (0+255),w,b
  8201  0148C6  0009               	tblrd		*+
  8202  0148C8  18F5               	xorwf	tablat,w,c
  8203  0148CA  A4D8               	btfss	status,2,c
  8204  0148CC  D032               	goto	l1242
  8205                           
  8206                           ; BSR set to: 2
  8207                           ;udpv4.c: 142: {
  8208                           ;udpv4.c: 143: if(udpHeader.length == IPV4_GetDatagramLength())
  8209  0148CE  EC15  F0B7         	call	_IPV4_GetDatagramLength	;wreg free
  8210  0148D2  0102               	movlb	2	; () banked
  8211  0148D4  5185               	movf	(_udpHeader+4)& (0+255),w,b
  8212  0148D6  1813               	xorwf	?_IPV4_GetDatagramLength,w,c
  8213  0148D8  E128               	bnz	l12238
  8214  0148DA  5186               	movf	(_udpHeader+5)& (0+255),w,b
  8215  0148DC  1814               	xorwf	?_IPV4_GetDatagramLength+1,w,c
  8216  0148DE  A4D8               	btfss	status,2,c
  8217  0148E0  D024               	goto	u12229
  8218                           
  8219                           ; BSR set to: 2
  8220                           ;udpv4.c: 144: {
  8221                           ;udpv4.c: 145: hptr->callBack(udpHeader.length - sizeof(udpHeader));
  8222  0148E2  0EF8               	movlw	248
  8223  0148E4  2585               	addwf	(_udpHeader+4)& (0+255),w,b
  8224  0148E6  0100               	movlb	0	; () banked
  8225  0148E8  6FB8               	movwf	TFTP_Handler@length& (0+255),b
  8226  0148EA  0EFF               	movlw	255
  8227  0148EC  0102               	movlb	2	; () banked
  8228  0148EE  2186               	addwfc	(_udpHeader+5)& (0+255),w,b
  8229  0148F0  0100               	movlb	0	; () banked
  8230  0148F2  6FB9               	movwf	(TFTP_Handler@length+1)& (0+255),b
  8231  0148F4  0E02               	movlw	2
  8232  0148F6  25E4               	addwf	UDP_Receive@hptr& (0+255),w,b
  8233  0148F8  6FDF               	movwf	??_UDP_Receive& (0+255),b
  8234  0148FA  0E00               	movlw	0
  8235  0148FC  21E5               	addwfc	(UDP_Receive@hptr+1)& (0+255),w,b
  8236  0148FE  6FE0               	movwf	(??_UDP_Receive+1)& (0+255),b
  8237  014900  C0DF  FFF6         	movff	??_UDP_Receive,tblptrl
  8238  014904  C0E0  FFF7         	movff	??_UDP_Receive+1,tblptrh
  8239  014908                     	if	0	;tblptru may be non-zero
  8240  014908                     	endif
  8241  014908                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8242  014908  0E00               	movlw	low (__mediumconst shr (0+16))
  8243  01490A  6EF8               	movwf	tblptru,c
  8244  01490C                     	endif
  8245  01490C  D801               	call	u12228
  8246  01490E  D00D               	goto	u12229
  8247  014910                     u12228:
  8248  014910  0005               	push	
  8249  014912  6EFA               	movwf	pclath,c
  8250  014914  0009               	tblrd		*+
  8251  014916  50F5               	movf	tablat,w,c
  8252  014918  6EFD               	movwf	tosl,c
  8253  01491A  0009               	tblrd		*+
  8254  01491C  50F5               	movf	tablat,w,c
  8255  01491E  6EFE               	movwf	tosh,c
  8256  014920  0009               	tblrd		*+
  8257  014922  50F5               	movf	tablat,w,c
  8258  014924  6EFF               	movwf	tosu,c
  8259  014926  50FA               	movf	pclath,w,c
  8260  014928  0012               	return		;indir
  8261  01492A                     u12229:
  8262  01492A                     l12238:
  8263                           
  8264                           ;udpv4.c: 146: }
  8265                           ;udpv4.c: 147: ret = SUCCESS;
  8266  01492A  0E01               	movlw	1
  8267  01492C  0100               	movlb	0	; () banked
  8268  01492E  6FE3               	movwf	UDP_Receive@ret& (0+255),b
  8269                           
  8270                           ;udpv4.c: 148: break;
  8271  014930  D00F               	goto	u12230
  8272  014932                     l1242:
  8273  014932                     l12240:
  8274                           
  8275                           ;udpv4.c: 149: }
  8276                           ;udpv4.c: 150: hptr = udp_table_nextEntry(hptr);
  8277  014932  C0E4  F015         	movff	UDP_Receive@hptr,udp_table_nextEntry@i
  8278  014936  C0E5  F016         	movff	UDP_Receive@hptr+1,udp_table_nextEntry@i+1
  8279  01493A  ECDD  F0B4         	call	_udp_table_nextEntry	;wreg free
  8280  01493E  C015  F0E4         	movff	?_udp_table_nextEntry,UDP_Receive@hptr
  8281  014942  C016  F0E5         	movff	?_udp_table_nextEntry+1,UDP_Receive@hptr+1
  8282  014946                     l1240:
  8283  014946  0100               	movlb	0	; () banked
  8284  014948  51E4               	movf	UDP_Receive@hptr& (0+255),w,b
  8285  01494A  11E5               	iorwf	(UDP_Receive@hptr+1)& (0+255),w,b
  8286  01494C  A4D8               	btfss	status,2,c
  8287  01494E  D7AF               	goto	l1241
  8288  014950                     u12230:
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;udpv4.c: 151: }
  8292                           ;udpv4.c: 152: if(ret== PORT_NOT_AVAILABLE)
  8293                           
  8294                           ; BSR set to: 0
  8295  014950  0E0D               	movlw	13
  8296  014952  19E3               	xorwf	UDP_Receive@ret& (0+255),w,b
  8297  014954  A4D8               	btfss	status,2,c
  8298  014956  0012               	return	
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;udpv4.c: 153: {
  8302                           ;udpv4.c: 156: ICMP_PortUnreachable((ipv4Header.dstIpAddress), (ipv4Header.srcIpAddress)
      +                          ,(sizeof(udp_handler_t) + (udpHeader.length)));
  8303  014958  C27D  F0A8         	movff	_ipv4Header+16,ICMP_PortUnreachable@srcIPAddress
  8304  01495C  C27E  F0A9         	movff	_ipv4Header+17,ICMP_PortUnreachable@srcIPAddress+1
  8305  014960  C27F  F0AA         	movff	_ipv4Header+18,ICMP_PortUnreachable@srcIPAddress+2
  8306  014964  C280  F0AB         	movff	_ipv4Header+19,ICMP_PortUnreachable@srcIPAddress+3
  8307  014968  C279  F0AC         	movff	_ipv4Header+12,ICMP_PortUnreachable@destIPAddress
  8308  01496C  C27A  F0AD         	movff	_ipv4Header+13,ICMP_PortUnreachable@destIPAddress+1
  8309  014970  C27B  F0AE         	movff	_ipv4Header+14,ICMP_PortUnreachable@destIPAddress+2
  8310  014974  C27C  F0AF         	movff	_ipv4Header+15,ICMP_PortUnreachable@destIPAddress+3
  8311  014978  0E05               	movlw	5
  8312  01497A  0102               	movlb	2	; () banked
  8313  01497C  2585               	addwf	(_udpHeader+4)& (0+255),w,b
  8314  01497E  0100               	movlb	0	; () banked
  8315  014980  6FB0               	movwf	ICMP_PortUnreachable@length& (0+255),b
  8316  014982  0E00               	movlw	0
  8317  014984  0102               	movlb	2	; () banked
  8318  014986  2186               	addwfc	(_udpHeader+5)& (0+255),w,b
  8319  014988  0100               	movlb	0	; () banked
  8320  01498A  6FB1               	movwf	(ICMP_PortUnreachable@length+1)& (0+255),b
  8321  01498C  EC41  F0AA         	call	_ICMP_PortUnreachable	;wreg free
  8322                           
  8323                           ;udpv4.c: 157: }
  8324                           ;udpv4.c: 158: }
  8325  014990  0012               	return	
  8326  014992                     l1237:
  8327                           
  8328                           ;udpv4.c: 159: else
  8329                           ;udpv4.c: 160: {
  8330                           ;udpv4.c: 161: ret = UDP_CHECKSUM_FAILS;
  8331  014992  0E0A               	movlw	10
  8332  014994  0100               	movlb	0	; () banked
  8333  014996  6FE3               	movwf	UDP_Receive@ret& (0+255),b
  8334                           
  8335                           ; BSR set to: 0
  8336  014998  0012               	return	
  8337  01499A                     __end_of_UDP_Receive:
  8338                           	opt stack 0
  8339                           tosu	equ	0xFFF
  8340                           tosh	equ	0xFFE
  8341                           tosl	equ	0xFFD
  8342                           pclath	equ	0xFFA
  8343                           tblptru	equ	0xFF8
  8344                           tblptrh	equ	0xFF7
  8345                           tblptrl	equ	0xFF6
  8346                           tablat	equ	0xFF5
  8347                           prodh	equ	0xFF4
  8348                           prodl	equ	0xFF3
  8349                           intcon	equ	0xFF2
  8350                           indf0	equ	0xFEF
  8351                           postinc0	equ	0xFEE
  8352                           fsr0h	equ	0xFEA
  8353                           fsr0l	equ	0xFE9
  8354                           wreg	equ	0xFE8
  8355                           indf1	equ	0xFE7
  8356                           postinc1	equ	0xFE6
  8357                           postdec1	equ	0xFE5
  8358                           fsr1h	equ	0xFE2
  8359                           fsr1l	equ	0xFE1
  8360                           indf2	equ	0xFDF
  8361                           postinc2	equ	0xFDE
  8362                           postdec2	equ	0xFDD
  8363                           fsr2h	equ	0xFDA
  8364                           fsr2l	equ	0xFD9
  8365                           status	equ	0xFD8
  8366                           
  8367 ;; *************** function _udp_table_nextEntry *****************
  8368 ;; Defined at:
  8369 ;;		line 67 in file "mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  i               2   20[COMRAM] PTR struct .
  8372 ;;		 -> UDP_CallBackTable(20), NULL(0), 
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;  j               2   22[COMRAM] PTR struct .
  8375 ;;		 -> UDP_CallBackTable(20), 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2   20[COMRAM] PTR struct .
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;Total ram usage:        4 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    5
  8392 ;; This function calls:
  8393 ;;		_udp_table_getIterator
  8394 ;; This function is called by:
  8395 ;;		_UDP_Receive
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text36
  8400  0169BA                     __ptext36:
  8401                           	opt stack 0
  8402  0169BA                     _udp_table_nextEntry:
  8403                           	opt stack 21
  8404                           
  8405                           ;udpv4_port_handler_table.c: 69: udp_table_iterator_t j;
  8406                           ;udpv4_port_handler_table.c: 71: j = udp_table_getIterator() +sizeof(UDP_CallBackTable);
  8407                           
  8408                           ;incstack = 0
  8409  0169BA  EC6C  F0B7         	call	_udp_table_getIterator	;wreg free
  8410  0169BE  0E64               	movlw	100
  8411  0169C0  2413               	addwf	?_udp_table_getIterator,w,c
  8412  0169C2  6E17               	movwf	udp_table_nextEntry@j,c
  8413  0169C4  0E00               	movlw	0
  8414  0169C6  2014               	addwfc	?_udp_table_getIterator+1,w,c
  8415  0169C8  6E18               	movwf	udp_table_nextEntry@j+1,c
  8416                           
  8417                           ;udpv4_port_handler_table.c: 73: i ++;
  8418  0169CA  0E05               	movlw	5
  8419  0169CC  2615               	addwf	udp_table_nextEntry@i,f,c
  8420  0169CE  0E00               	movlw	0
  8421  0169D0  2216               	addwfc	udp_table_nextEntry@i+1,f,c
  8422                           
  8423                           ;udpv4_port_handler_table.c: 74: if(i < j )
  8424  0169D2  5017               	movf	udp_table_nextEntry@j,w,c
  8425  0169D4  5C15               	subwf	udp_table_nextEntry@i,w,c
  8426  0169D6  5018               	movf	udp_table_nextEntry@j+1,w,c
  8427  0169D8  5816               	subwfb	udp_table_nextEntry@i+1,w,c
  8428  0169DA  B0D8               	btfsc	status,0,c
  8429  0169DC  D005               	goto	l1188
  8430                           
  8431                           ;udpv4_port_handler_table.c: 75: {
  8432                           ;udpv4_port_handler_table.c: 76: return (udp_table_iterator_t) i;
  8433  0169DE  C015  F015         	movff	udp_table_nextEntry@i,?_udp_table_nextEntry
  8434  0169E2  C016  F016         	movff	udp_table_nextEntry@i+1,?_udp_table_nextEntry+1
  8435                           
  8436                           ;udpv4_port_handler_table.c: 77: }
  8437  0169E6  0012               	return	
  8438  0169E8                     l1188:
  8439                           
  8440                           ;udpv4_port_handler_table.c: 78: else
  8441                           ;udpv4_port_handler_table.c: 79: return (udp_table_iterator_t) (0);
  8442  0169E8  0E00               	movlw	0
  8443  0169EA  6E15               	movwf	?_udp_table_nextEntry,c
  8444  0169EC  0E00               	movlw	0
  8445  0169EE  6E16               	movwf	?_udp_table_nextEntry+1,c
  8446  0169F0  0012               	return	
  8447  0169F2                     __end_of_udp_table_nextEntry:
  8448                           	opt stack 0
  8449                           tosu	equ	0xFFF
  8450                           tosh	equ	0xFFE
  8451                           tosl	equ	0xFFD
  8452                           pclath	equ	0xFFA
  8453                           tblptru	equ	0xFF8
  8454                           tblptrh	equ	0xFF7
  8455                           tblptrl	equ	0xFF6
  8456                           tablat	equ	0xFF5
  8457                           prodh	equ	0xFF4
  8458                           prodl	equ	0xFF3
  8459                           intcon	equ	0xFF2
  8460                           indf0	equ	0xFEF
  8461                           postinc0	equ	0xFEE
  8462                           fsr0h	equ	0xFEA
  8463                           fsr0l	equ	0xFE9
  8464                           wreg	equ	0xFE8
  8465                           indf1	equ	0xFE7
  8466                           postinc1	equ	0xFE6
  8467                           postdec1	equ	0xFE5
  8468                           fsr1h	equ	0xFE2
  8469                           fsr1l	equ	0xFE1
  8470                           indf2	equ	0xFDF
  8471                           postinc2	equ	0xFDE
  8472                           postdec2	equ	0xFDD
  8473                           fsr2h	equ	0xFDA
  8474                           fsr2l	equ	0xFD9
  8475                           status	equ	0xFD8
  8476                           
  8477 ;; *************** function _udp_table_getIterator *****************
  8478 ;; Defined at:
  8479 ;;		line 62 in file "mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;		None
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  2   18[COMRAM] PTR struct .
  8486 ;; Registers used:
  8487 ;;		wreg, status,2, status,0
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;Total ram usage:        2 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:    4
  8500 ;; This function calls:
  8501 ;;		Nothing
  8502 ;; This function is called by:
  8503 ;;		_udp_table_nextEntry
  8504 ;;		_UDP_Receive
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text37
  8509  016ED8                     __ptext37:
  8510                           	opt stack 0
  8511  016ED8                     _udp_table_getIterator:
  8512                           	opt stack 21
  8513                           
  8514                           ;udpv4_port_handler_table.c: 64: return (udp_table_iterator_t) UDP_CallBackTable;
  8515                           
  8516                           ;incstack = 0
  8517  016ED8  0ED9               	movlw	low _UDP_CallBackTable
  8518  016EDA  6E13               	movwf	?_udp_table_getIterator,c
  8519  016EDC  0EFE               	movlw	high _UDP_CallBackTable
  8520  016EDE  6E14               	movwf	?_udp_table_getIterator+1,c
  8521  016EE0  0012               	return	
  8522  016EE2                     __end_of_udp_table_getIterator:
  8523                           	opt stack 0
  8524                           tosu	equ	0xFFF
  8525                           tosh	equ	0xFFE
  8526                           tosl	equ	0xFFD
  8527                           pclath	equ	0xFFA
  8528                           tblptru	equ	0xFF8
  8529                           tblptrh	equ	0xFF7
  8530                           tblptrl	equ	0xFF6
  8531                           tablat	equ	0xFF5
  8532                           prodh	equ	0xFF4
  8533                           prodl	equ	0xFF3
  8534                           intcon	equ	0xFF2
  8535                           indf0	equ	0xFEF
  8536                           postinc0	equ	0xFEE
  8537                           fsr0h	equ	0xFEA
  8538                           fsr0l	equ	0xFE9
  8539                           wreg	equ	0xFE8
  8540                           indf1	equ	0xFE7
  8541                           postinc1	equ	0xFE6
  8542                           postdec1	equ	0xFE5
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           indf2	equ	0xFDF
  8546                           postinc2	equ	0xFDE
  8547                           postdec2	equ	0xFDD
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552 ;; *************** function _NTP_Handler *****************
  8553 ;; Defined at:
  8554 ;;		line 96 in file "mcc_generated_files/TCPIPLibrary/ntp.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  length          2   88[BANK0 ] int 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  timeIntegral    4   94[BANK0 ] unsigned long 
  8559 ;;  timeFraction    4   90[BANK0 ] unsigned long 
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8570 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8572 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;Total ram usage:       10 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    6
  8576 ;; This function calls:
  8577 ;;		_ETH_Read32
  8578 ;;		_ETH_Read8
  8579 ;;		_rtcc_set
  8580 ;; This function is called by:
  8581 ;;		_UDP_Receive
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           	psect	text38
  8586  016136                     __ptext38:
  8587                           	opt stack 0
  8588  016136                     _NTP_Handler:
  8589                           	opt stack 20
  8590                           
  8591                           ;ntp.c: 98: uint32_t timeIntegralPart,timeFractionalPart;
  8592                           ;ntp.c: 100: ETH_Read8();
  8593                           
  8594                           ;incstack = 0
  8595  016136  EC37  F0B6         	call	_ETH_Read8	;wreg free
  8596                           
  8597                           ;ntp.c: 101: ETH_Read8();
  8598  01613A  EC37  F0B6         	call	_ETH_Read8	;wreg free
  8599                           
  8600                           ;ntp.c: 102: ETH_Read8();
  8601  01613E  EC37  F0B6         	call	_ETH_Read8	;wreg free
  8602                           
  8603                           ;ntp.c: 103: ETH_Read8();
  8604  016142  EC37  F0B6         	call	_ETH_Read8	;wreg free
  8605                           
  8606                           ;ntp.c: 104: ETH_Read32();
  8607  016146  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8608                           
  8609                           ;ntp.c: 105: ETH_Read32();
  8610  01614A  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8611                           
  8612                           ;ntp.c: 106: ETH_Read32();
  8613  01614E  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8614                           
  8615                           ;ntp.c: 109: ETH_Read32();
  8616  016152  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8617                           
  8618                           ;ntp.c: 110: ETH_Read32();
  8619  016156  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8620                           
  8621                           ;ntp.c: 113: ETH_Read32();
  8622  01615A  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8623                           
  8624                           ;ntp.c: 114: ETH_Read32();
  8625  01615E  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8626                           
  8627                           ;ntp.c: 117: timeIntegralPart = ETH_Read32();
  8628  016162  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8629  016166  C013  F0BE         	movff	?_ETH_Read32,NTP_Handler@timeIntegralPart
  8630  01616A  C014  F0BF         	movff	?_ETH_Read32+1,NTP_Handler@timeIntegralPart+1
  8631  01616E  C015  F0C0         	movff	?_ETH_Read32+2,NTP_Handler@timeIntegralPart+2
  8632  016172  C016  F0C1         	movff	?_ETH_Read32+3,NTP_Handler@timeIntegralPart+3
  8633                           
  8634                           ;ntp.c: 118: timeFractionalPart = ETH_Read32();
  8635  016176  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8636  01617A  C013  F0BA         	movff	?_ETH_Read32,NTP_Handler@timeFractionalPart
  8637  01617E  C014  F0BB         	movff	?_ETH_Read32+1,NTP_Handler@timeFractionalPart+1
  8638  016182  C015  F0BC         	movff	?_ETH_Read32+2,NTP_Handler@timeFractionalPart+2
  8639  016186  C016  F0BD         	movff	?_ETH_Read32+3,NTP_Handler@timeFractionalPart+3
  8640                           
  8641                           ;ntp.c: 121: ETH_Read32();
  8642  01618A  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8643                           
  8644                           ;ntp.c: 122: ETH_Read32();
  8645  01618E  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8646                           
  8647                           ;ntp.c: 124: timeIntegralPart -= 2208988800;
  8648  016192  0E80               	movlw	128
  8649  016194  0100               	movlb	0	; () banked
  8650  016196  5FBE               	subwf	NTP_Handler@timeIntegralPart& (0+255),f,b
  8651  016198  0E7E               	movlw	126
  8652  01619A  5BBF               	subwfb	(NTP_Handler@timeIntegralPart+1)& (0+255),f,b
  8653  01619C  0EAA               	movlw	170
  8654  01619E  5BC0               	subwfb	(NTP_Handler@timeIntegralPart+2)& (0+255),f,b
  8655  0161A0  0E83               	movlw	131
  8656  0161A2  5BC1               	subwfb	(NTP_Handler@timeIntegralPart+3)& (0+255),f,b
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;ntp.c: 126: rtcc_set(timeIntegralPart);
  8660  0161A4  C0BE  F013         	movff	NTP_Handler@timeIntegralPart,rtcc_set@t
  8661  0161A8  C0BF  F014         	movff	NTP_Handler@timeIntegralPart+1,rtcc_set@t+1
  8662  0161AC  EC5E  F0B5         	call	_rtcc_set	;wreg free
  8663  0161B0  0012               	return		;funcret
  8664  0161B2                     __end_of_NTP_Handler:
  8665                           	opt stack 0
  8666                           tosu	equ	0xFFF
  8667                           tosh	equ	0xFFE
  8668                           tosl	equ	0xFFD
  8669                           pclath	equ	0xFFA
  8670                           tblptru	equ	0xFF8
  8671                           tblptrh	equ	0xFF7
  8672                           tblptrl	equ	0xFF6
  8673                           tablat	equ	0xFF5
  8674                           prodh	equ	0xFF4
  8675                           prodl	equ	0xFF3
  8676                           intcon	equ	0xFF2
  8677                           indf0	equ	0xFEF
  8678                           postinc0	equ	0xFEE
  8679                           fsr0h	equ	0xFEA
  8680                           fsr0l	equ	0xFE9
  8681                           wreg	equ	0xFE8
  8682                           indf1	equ	0xFE7
  8683                           postinc1	equ	0xFE6
  8684                           postdec1	equ	0xFE5
  8685                           fsr1h	equ	0xFE2
  8686                           fsr1l	equ	0xFE1
  8687                           indf2	equ	0xFDF
  8688                           postinc2	equ	0xFDE
  8689                           postdec2	equ	0xFDD
  8690                           fsr2h	equ	0xFDA
  8691                           fsr2l	equ	0xFD9
  8692                           status	equ	0xFD8
  8693                           
  8694 ;; *************** function _DHCP_Handler *****************
  8695 ;; Defined at:
  8696 ;;		line 255 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  length          2   88[BANK0 ] int 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  a               4   20[BANK1 ] unsigned long 
  8701 ;;  a               4   16[BANK1 ] unsigned long 
  8702 ;;  count           1   32[BANK1 ] unsigned char 
  8703 ;;  count           1   31[BANK1 ] unsigned char 
  8704 ;;  optionLength    1   36[BANK1 ] unsigned char 
  8705 ;;  option          1   25[BANK1 ] unsigned char 
  8706 ;;  localData      48   37[BANK1 ] struct .
  8707 ;;  chaddr         16    0[BANK1 ] unsigned char [16]
  8708 ;;  siaddr          4   26[BANK1 ] unsigned long 
  8709 ;;  acceptACK       1   35[BANK1 ] unsigned char 
  8710 ;;  acceptNACK      1   34[BANK1 ] unsigned char 
  8711 ;;  acceptOffers    1   33[BANK1 ] unsigned char 
  8712 ;;  declineOffer    1   30[BANK1 ] unsigned char 
  8713 ;;  messageType     1   24[BANK1 ] unsigned char 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;      Locals:         0       0      85       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8725 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;      Totals:         0       6      85       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8727 ;;Total ram usage:       91 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:   12
  8730 ;; This function calls:
  8731 ;;		_ETH_Dump
  8732 ;;		_ETH_Read16
  8733 ;;		_ETH_Read32
  8734 ;;		_ETH_Read8
  8735 ;;		_ETH_ReadBlock
  8736 ;;		_memcmp
  8737 ;;		_sendDHCPDECLINE
  8738 ;;		_sendDHCPREQUEST
  8739 ;;		_strlen
  8740 ;; This function is called by:
  8741 ;;		_UDP_Receive
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text39
  8746  012BA4                     __ptext39:
  8747                           	opt stack 0
  8748  012BA4                     _DHCP_Handler:
  8749                           	opt stack 14
  8750                           
  8751                           ;dhcp_client.c: 258: uint8_t chaddr[16];
  8752                           ;dhcp_client.c: 259: uint8_t messageType;
  8753                           ;dhcp_client.c: 261: bool acceptOffers;
  8754                           ;dhcp_client.c: 262: bool declineOffers;
  8755                           ;dhcp_client.c: 263: bool acceptNACK;
  8756                           ;dhcp_client.c: 264: bool acceptACK;
  8757                           ;dhcp_client.c: 266: uint32_t siaddr;
  8758                           ;dhcp_client.c: 270: switch(dhcpState.rxClientState)
  8759                           
  8760                           ;incstack = 0
  8761  012BA4  D01C               	goto	l1346
  8762  012BA6                     
  8763                           ;dhcp_client.c: 274: acceptOffers = 1;
  8764                           
  8765                           ;dhcp_client.c: 273: case SELECTING:
  8766  012BA6  0E01               	movlw	1
  8767  012BA8  0101               	movlb	1	; () banked
  8768  012BAA  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8769                           
  8770                           ;dhcp_client.c: 275: declineOffers = 0;
  8771  012BAC  0E00               	movlw	0
  8772  012BAE  6F1E               	movwf	DHCP_Handler@declineOffers& (0+255),b
  8773  012BB0  D012               	goto	L3
  8774  012BB2                     
  8775                           ;dhcp_client.c: 280: acceptOffers = 0;
  8776                           
  8777                           ; BSR set to: 1
  8778  012BB2  0E00               	movlw	0
  8779  012BB4  0101               	movlb	1	; () banked
  8780  012BB6  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8781                           
  8782                           ;dhcp_client.c: 281: declineOffers = 1;
  8783  012BB8  0E01               	movlw	1
  8784  012BBA  6F1E               	movwf	DHCP_Handler@declineOffers& (0+255),b
  8785  012BBC  D005               	goto	L2
  8786  012BBE                     L1:
  8787  012BBE  6F23               	movwf	DHCP_Handler@acceptACK& (0+255),b
  8788                           
  8789                           ;dhcp_client.c: 284: break;
  8790  012BC0  D01D               	goto	l1349
  8791  012BC2                     
  8792                           ;dhcp_client.c: 286: acceptOffers = 0;
  8793                           
  8794                           ; BSR set to: 1
  8795  012BC2  0E00               	movlw	0
  8796  012BC4  0101               	movlb	1	; () banked
  8797  012BC6  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8798  012BC8                     L2:
  8799                           
  8800                           ;dhcp_client.c: 287: acceptNACK = 1;
  8801  012BC8  0E01               	movlw	1
  8802  012BCA  6F22               	movwf	DHCP_Handler@acceptNACK& (0+255),b
  8803                           
  8804                           ;dhcp_client.c: 288: acceptACK = 1;
  8805  012BCC  0E01               	movlw	1
  8806  012BCE  D7F7               	goto	L1
  8807  012BD0                     
  8808                           ;dhcp_client.c: 291: acceptOffers = 0;
  8809                           
  8810                           ; BSR set to: 1
  8811  012BD0  0E00               	movlw	0
  8812  012BD2  0101               	movlb	1	; () banked
  8813  012BD4  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8814  012BD6                     L3:
  8815                           
  8816                           ;dhcp_client.c: 292: acceptNACK = 0;
  8817  012BD6  0E00               	movlw	0
  8818  012BD8  6F22               	movwf	DHCP_Handler@acceptNACK& (0+255),b
  8819                           
  8820                           ;dhcp_client.c: 293: acceptACK = 0;
  8821  012BDA  0E00               	movlw	0
  8822  012BDC  D7F0               	goto	L1
  8823  012BDE                     l1346:
  8824                           
  8825                           ; BSR set to: 1
  8826  012BDE  0102               	movlb	2	; () banked
  8827  012BE0  514C               	movf	_dhcpState& (0+255),w,b
  8828                           
  8829                           ; Switch size 1, requested type "space"
  8830                           ; Number of cases is 4, Range of values is 0 to 3
  8831                           ; switch strategies available:
  8832                           ; Name         Instructions Cycles
  8833                           ; simple_byte           13     7 (average)
  8834                           ;	Chosen strategy is simple_byte
  8835  012BE2  0A00               	xorlw	0	; case 0
  8836  012BE4  B4D8               	btfsc	status,2,c
  8837  012BE6  D7DF               	goto	l1347
  8838  012BE8  0A01               	xorlw	1	; case 1
  8839  012BEA  B4D8               	btfsc	status,2,c
  8840  012BEC  D7E2               	goto	l1350
  8841  012BEE  0A03               	xorlw	3	; case 2
  8842  012BF0  B4D8               	btfsc	status,2,c
  8843  012BF2  D7E7               	goto	l1351
  8844  012BF4  0A01               	xorlw	1	; case 3
  8845  012BF6  B4D8               	btfsc	status,2,c
  8846  012BF8  D7EB               	goto	l1352
  8847  012BFA  D7D5               	goto	l1347
  8848  012BFC                     l1349:
  8849                           
  8850                           ;dhcp_client.c: 297: if(acceptOffers || declineOffers || acceptNACK || acceptACK)
  8851                           
  8852                           ; BSR set to: 2
  8853  012BFC  0101               	movlb	1	; () banked
  8854  012BFE  5121               	movf	DHCP_Handler@acceptOffers& (0+255),w,b
  8855  012C00  A4D8               	btfss	status,2,c
  8856  012C02  D009               	goto	u10720
  8857                           
  8858                           ; BSR set to: 1
  8859  012C04  511E               	movf	DHCP_Handler@declineOffers& (0+255),w,b
  8860  012C06  A4D8               	btfss	status,2,c
  8861  012C08  D006               	goto	u10720
  8862                           
  8863                           ; BSR set to: 1
  8864  012C0A  5122               	movf	DHCP_Handler@acceptNACK& (0+255),w,b
  8865  012C0C  A4D8               	btfss	status,2,c
  8866  012C0E  D003               	goto	u10720
  8867                           
  8868                           ; BSR set to: 1
  8869  012C10  5123               	movf	DHCP_Handler@acceptACK& (0+255),w,b
  8870  012C12  B4D8               	btfsc	status,2,c
  8871  012C14  0012               	return	
  8872  012C16                     u10720:
  8873                           
  8874                           ; BSR set to: 1
  8875                           ;dhcp_client.c: 298: {
  8876                           ;dhcp_client.c: 299: dhcp_data_t localData = {0,0,0,0,0,0,0,0,0,3600,3600,0};
  8877                           
  8878                           ; BSR set to: 1
  8879  012C16  EE23  F0B6         	lfsr	2,DHCP_Handler@F840
  8880  012C1A  EE11  F025         	lfsr	1,DHCP_Handler@localData
  8881  012C1E  0E2F               	movlw	47
  8882  012C20                     u10731:
  8883  012C20  CFDB FFE3          	movff	plusw2,plusw1
  8884  012C24  06E8               	decf	wreg,f,c
  8885  012C26  E2FC               	bc	u10731
  8886                           
  8887                           ; BSR set to: 1
  8888                           ;dhcp_client.c: 300: localData.xidValue = dhcpData.xidValue;
  8889  012C28  C2AD  F145         	movff	_dhcpData+32,DHCP_Handler@localData+32
  8890  012C2C  C2AE  F146         	movff	_dhcpData+33,DHCP_Handler@localData+33
  8891  012C30  C2AF  F147         	movff	_dhcpData+34,DHCP_Handler@localData+34
  8892  012C34  C2B0  F148         	movff	_dhcpData+35,DHCP_Handler@localData+35
  8893                           
  8894                           ; BSR set to: 1
  8895                           ;dhcp_client.c: 302: if(length > 240)
  8896  012C38  0100               	movlb	0	; () banked
  8897  012C3A  BFB9               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  8898  012C3C  D236               	goto	l1398
  8899  012C3E  51B9               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  8900  012C40  E104               	bnz	u10740
  8901  012C42  0EF1               	movlw	241
  8902  012C44  5DB8               	subwf	DHCP_Handler@length& (0+255),w,b
  8903  012C46  A0D8               	btfss	status,0,c
  8904  012C48  D230               	goto	l1398
  8905  012C4A                     u10740:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;dhcp_client.c: 303: {
  8909                           ;dhcp_client.c: 304: if(0x0201 == ETH_Read16())
  8910  012C4A  EC69  F0B4         	call	_ETH_Read16	;wreg free
  8911  012C4E  0413               	decf	?_ETH_Read16,w,c
  8912  012C50  E103               	bnz	u10751
  8913  012C52  0E02               	movlw	2
  8914  012C54  1814               	xorwf	?_ETH_Read16+1,w,c
  8915  012C56  A4D8               	btfss	status,2,c
  8916  012C58                     u10751:
  8917  012C58  D228               	goto	l1398
  8918                           
  8919                           ;dhcp_client.c: 305: {
  8920                           ;dhcp_client.c: 306: if(0x06 == ETH_Read8())
  8921  012C5A  EC37  F0B6         	call	_ETH_Read8	;wreg free
  8922  012C5E  0A06               	xorlw	6
  8923  012C60  A4D8               	btfss	status,2,c
  8924  012C62  D223               	goto	l1398
  8925                           
  8926                           ;dhcp_client.c: 307: {
  8927                           ;dhcp_client.c: 308: ETH_Read8();
  8928  012C64  EC37  F0B6         	call	_ETH_Read8	;wreg free
  8929                           
  8930                           ;dhcp_client.c: 309: if(dhcpData.xidValue == ETH_Read32())
  8931  012C68  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8932  012C6C  0102               	movlb	2	; () banked
  8933  012C6E  51AD               	movf	(_dhcpData+32)& (0+255),w,b
  8934  012C70  1813               	xorwf	?_ETH_Read32,w,c
  8935  012C72  E109               	bnz	u10771
  8936  012C74  51AE               	movf	(_dhcpData+33)& (0+255),w,b
  8937  012C76  1814               	xorwf	?_ETH_Read32+1,w,c
  8938  012C78  E106               	bnz	u10771
  8939  012C7A  51AF               	movf	(_dhcpData+34)& (0+255),w,b
  8940  012C7C  1815               	xorwf	?_ETH_Read32+2,w,c
  8941  012C7E  E103               	bnz	u10771
  8942  012C80  51B0               	movf	(_dhcpData+35)& (0+255),w,b
  8943  012C82  1816               	xorwf	?_ETH_Read32+3,w,c
  8944  012C84  A4D8               	btfss	status,2,c
  8945  012C86                     u10771:
  8946  012C86  D211               	goto	l1398
  8947                           
  8948                           ; BSR set to: 2
  8949                           ;dhcp_client.c: 310: {
  8950                           ;dhcp_client.c: 311: ETH_Read16();
  8951  012C88  EC69  F0B4         	call	_ETH_Read16	;wreg free
  8952                           
  8953                           ;dhcp_client.c: 312: ETH_Read16();
  8954  012C8C  EC69  F0B4         	call	_ETH_Read16	;wreg free
  8955                           
  8956                           ;dhcp_client.c: 313: ETH_Read32();
  8957  012C90  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8958                           
  8959                           ;dhcp_client.c: 314: localData.dhcpIPAddress = ETH_Read32();
  8960  012C94  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8961  012C98  C013  F125         	movff	?_ETH_Read32,DHCP_Handler@localData
  8962  012C9C  C014  F126         	movff	?_ETH_Read32+1,DHCP_Handler@localData+1
  8963  012CA0  C015  F127         	movff	?_ETH_Read32+2,DHCP_Handler@localData+2
  8964  012CA4  C016  F128         	movff	?_ETH_Read32+3,DHCP_Handler@localData+3
  8965                           
  8966                           ;dhcp_client.c: 315: if((localData.dhcpIPAddress != 0xFFFFFFFF) && (localData.dhcpIPAddr
      +                          ess != 0x7F000001))
  8967  012CA8  0101               	movlb	1	; () banked
  8968  012CAA  2925               	incf	DHCP_Handler@localData& (0+255),w,b
  8969  012CAC  E107               	bnz	u10780
  8970  012CAE  2926               	incf	(DHCP_Handler@localData+1)& (0+255),w,b
  8971  012CB0  E105               	bnz	u10780
  8972  012CB2  2927               	incf	(DHCP_Handler@localData+2)& (0+255),w,b
  8973  012CB4  E103               	bnz	u10780
  8974  012CB6  2928               	incf	(DHCP_Handler@localData+3)& (0+255),w,b
  8975  012CB8  B4D8               	btfsc	status,2,c
  8976  012CBA  D1F7               	goto	l1398
  8977  012CBC                     u10780:
  8978                           
  8979                           ; BSR set to: 1
  8980  012CBC  0525               	decf	DHCP_Handler@localData& (0+255),w,b
  8981  012CBE  E106               	bnz	u10790
  8982  012CC0  0E7F               	movlw	127
  8983  012CC2  1928               	xorwf	(DHCP_Handler@localData+3)& (0+255),w,b
  8984  012CC4  1126               	iorwf	(DHCP_Handler@localData+1)& (0+255),w,b
  8985  012CC6  1127               	iorwf	(DHCP_Handler@localData+2)& (0+255),w,b
  8986  012CC8  B4D8               	btfsc	status,2,c
  8987  012CCA  D1EF               	goto	l1398
  8988  012CCC                     u10790:
  8989                           
  8990                           ; BSR set to: 1
  8991                           ;dhcp_client.c: 316: {
  8992                           ;dhcp_client.c: 317: siaddr = ETH_Read32();
  8993  012CCC  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  8994  012CD0  C013  F11A         	movff	?_ETH_Read32,DHCP_Handler@siaddr
  8995  012CD4  C014  F11B         	movff	?_ETH_Read32+1,DHCP_Handler@siaddr+1
  8996  012CD8  C015  F11C         	movff	?_ETH_Read32+2,DHCP_Handler@siaddr+2
  8997  012CDC  C016  F11D         	movff	?_ETH_Read32+3,DHCP_Handler@siaddr+3
  8998                           
  8999                           ;dhcp_client.c: 318: if((siaddr != 0xFFFFFFFF) && (siaddr != 0x7F000001))
  9000  012CE0  0101               	movlb	1	; () banked
  9001  012CE2  291A               	incf	DHCP_Handler@siaddr& (0+255),w,b
  9002  012CE4  E107               	bnz	u10800
  9003  012CE6  291B               	incf	(DHCP_Handler@siaddr+1)& (0+255),w,b
  9004  012CE8  E105               	bnz	u10800
  9005  012CEA  291C               	incf	(DHCP_Handler@siaddr+2)& (0+255),w,b
  9006  012CEC  E103               	bnz	u10800
  9007  012CEE  291D               	incf	(DHCP_Handler@siaddr+3)& (0+255),w,b
  9008  012CF0  B4D8               	btfsc	status,2,c
  9009  012CF2  D1DB               	goto	l1398
  9010  012CF4                     u10800:
  9011                           
  9012                           ; BSR set to: 1
  9013  012CF4  051A               	decf	DHCP_Handler@siaddr& (0+255),w,b
  9014  012CF6  E106               	bnz	u10810
  9015  012CF8  0E7F               	movlw	127
  9016  012CFA  191D               	xorwf	(DHCP_Handler@siaddr+3)& (0+255),w,b
  9017  012CFC  111B               	iorwf	(DHCP_Handler@siaddr+1)& (0+255),w,b
  9018  012CFE  111C               	iorwf	(DHCP_Handler@siaddr+2)& (0+255),w,b
  9019  012D00  B4D8               	btfsc	status,2,c
  9020  012D02  D1D3               	goto	l1398
  9021  012D04                     u10810:
  9022                           
  9023                           ; BSR set to: 1
  9024                           ;dhcp_client.c: 319: {
  9025                           ;dhcp_client.c: 320: ETH_Read32();
  9026  012D04  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9027                           
  9028                           ;dhcp_client.c: 321: ETH_ReadBlock(chaddr,sizeof(chaddr));
  9029  012D08  0E00               	movlw	low DHCP_Handler@chaddr
  9030  012D0A  6E13               	movwf	ETH_ReadBlock@buffer,c
  9031  012D0C  0E01               	movlw	high DHCP_Handler@chaddr
  9032  012D0E  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  9033  012D10  0E00               	movlw	0
  9034  012D12  6E16               	movwf	ETH_ReadBlock@length+1,c
  9035  012D14  0E10               	movlw	16
  9036  012D16  6E15               	movwf	ETH_ReadBlock@length,c
  9037  012D18  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
  9038                           
  9039                           ;dhcp_client.c: 322: if(memcmp(chaddr, &hostMacAddress.s, 6)== 0 || memcmp(chaddr, &broa
      +                          dcastMAC.s, 6)== 0 || (strlen(chaddr)== 0))
  9040  012D1C  0E00               	movlw	low DHCP_Handler@chaddr
  9041  012D1E  6E13               	movwf	memcmp@s1,c
  9042  012D20  0E01               	movlw	high DHCP_Handler@chaddr
  9043  012D22  6E14               	movwf	memcmp@s1+1,c
  9044  012D24  0EB0               	movlw	low _hostMacAddress
  9045  012D26  6E15               	movwf	memcmp@s2,c
  9046  012D28  0E03               	movlw	high _hostMacAddress
  9047  012D2A  6E16               	movwf	memcmp@s2+1,c
  9048  012D2C  0E00               	movlw	0
  9049  012D2E  6E18               	movwf	memcmp@n+1,c
  9050  012D30  0E06               	movlw	6
  9051  012D32  6E17               	movwf	memcmp@n,c
  9052  012D34  EC0F  F0AE         	call	_memcmp	;wreg free
  9053  012D38  5013               	movf	?_memcmp,w,c
  9054  012D3A  1014               	iorwf	?_memcmp+1,w,c
  9055  012D3C  B4D8               	btfsc	status,2,c
  9056  012D3E  D01C               	goto	u10840
  9057  012D40  0E00               	movlw	low DHCP_Handler@chaddr
  9058  012D42  6E13               	movwf	memcmp@s1,c
  9059  012D44  0E01               	movlw	high DHCP_Handler@chaddr
  9060  012D46  6E14               	movwf	memcmp@s1+1,c
  9061  012D48  0E08               	movlw	low _broadcastMAC
  9062  012D4A  6E15               	movwf	memcmp@s2,c
  9063  012D4C  0EFF               	movlw	high _broadcastMAC
  9064  012D4E  6E16               	movwf	memcmp@s2+1,c
  9065  012D50  0E00               	movlw	0
  9066  012D52  6E18               	movwf	memcmp@n+1,c
  9067  012D54  0E06               	movlw	6
  9068  012D56  6E17               	movwf	memcmp@n,c
  9069  012D58  EC0F  F0AE         	call	_memcmp	;wreg free
  9070  012D5C  5013               	movf	?_memcmp,w,c
  9071  012D5E  1014               	iorwf	?_memcmp+1,w,c
  9072  012D60  B4D8               	btfsc	status,2,c
  9073  012D62  D00A               	goto	u10840
  9074  012D64  0E00               	movlw	low DHCP_Handler@chaddr
  9075  012D66  6E13               	movwf	strlen@s,c
  9076  012D68  0E01               	movlw	high DHCP_Handler@chaddr
  9077  012D6A  6E14               	movwf	strlen@s+1,c
  9078  012D6C  EC1F  F0B3         	call	_strlen	;wreg free
  9079  012D70  5013               	movf	?_strlen,w,c
  9080  012D72  1014               	iorwf	?_strlen+1,w,c
  9081  012D74  A4D8               	btfss	status,2,c
  9082  012D76  D199               	goto	l1398
  9083  012D78                     u10840:
  9084                           
  9085                           ;dhcp_client.c: 323: {
  9086                           ;dhcp_client.c: 324: ETH_Dump(64);
  9087  012D78  0E00               	movlw	0
  9088  012D7A  6E14               	movwf	ETH_Dump@length+1,c
  9089  012D7C  0E40               	movlw	64
  9090  012D7E  6E13               	movwf	ETH_Dump@length,c
  9091  012D80  EC46  F0B5         	call	_ETH_Dump	;wreg free
  9092                           
  9093                           ;dhcp_client.c: 325: ETH_Dump(128);
  9094  012D84  0E00               	movlw	0
  9095  012D86  6E14               	movwf	ETH_Dump@length+1,c
  9096  012D88  0E80               	movlw	128
  9097  012D8A  6E13               	movwf	ETH_Dump@length,c
  9098  012D8C  EC46  F0B5         	call	_ETH_Dump	;wreg free
  9099                           
  9100                           ;dhcp_client.c: 326: if(ETH_Read32() == 0x63825363)
  9101  012D90  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9102  012D94  0E63               	movlw	99
  9103  012D96  1813               	xorwf	?_ETH_Read32,w,c
  9104  012D98  E109               	bnz	u10851
  9105  012D9A  0E53               	movlw	83
  9106  012D9C  1814               	xorwf	?_ETH_Read32+1,w,c
  9107  012D9E  E106               	bnz	u10851
  9108  012DA0  0E82               	movlw	130
  9109  012DA2  1815               	xorwf	?_ETH_Read32+2,w,c
  9110  012DA4  E103               	bnz	u10851
  9111  012DA6  0E63               	movlw	99
  9112  012DA8  1816               	xorwf	?_ETH_Read32+3,w,c
  9113  012DAA  A4D8               	btfss	status,2,c
  9114  012DAC                     u10851:
  9115  012DAC  D17E               	goto	l1398
  9116                           
  9117                           ;dhcp_client.c: 327: {
  9118                           ;dhcp_client.c: 328: length -= 240;
  9119  012DAE  0100               	movlb	0	; () banked
  9120  012DB0  0E10               	movlw	16
  9121  012DB2  27B8               	addwf	DHCP_Handler@length& (0+255),f,b
  9122  012DB4  0EFF               	movlw	255
  9123  012DB6  23B9               	addwfc	(DHCP_Handler@length+1)& (0+255),f,b
  9124                           
  9125                           ;dhcp_client.c: 329: while(length>0)
  9126  012DB8  D0DA               	goto	l1372
  9127  012DBA                     
  9128                           ; BSR set to: 0
  9129                           ;dhcp_client.c: 330: {
  9130                           ;dhcp_client.c: 332: uint8_t option, optionLength;
  9131                           ;dhcp_client.c: 333: option = ETH_Read8();
  9132                           
  9133                           ; BSR set to: 0
  9134  012DBA  EC37  F0B6         	call	_ETH_Read8	;wreg free
  9135  012DBE  0101               	movlb	1	; () banked
  9136  012DC0  6F19               	movwf	DHCP_Handler@option& (0+255),b
  9137                           
  9138                           ;dhcp_client.c: 334: optionLength = ETH_Read8();
  9139  012DC2  EC37  F0B6         	call	_ETH_Read8	;wreg free
  9140  012DC6  0101               	movlb	1	; () banked
  9141  012DC8  6F24               	movwf	DHCP_Handler@optionLength& (0+255),b
  9142                           
  9143                           ; BSR set to: 1
  9144                           ;dhcp_client.c: 335: length -= 2 + optionLength;
  9145  012DCA  5124               	movf	DHCP_Handler@optionLength& (0+255),w,b
  9146  012DCC  0100               	movlb	0	; () banked
  9147  012DCE  6FBA               	movwf	??_DHCP_Handler& (0+255),b
  9148  012DD0  6BBB               	clrf	(??_DHCP_Handler+1)& (0+255),b
  9149  012DD2  0E02               	movlw	2
  9150  012DD4  27BA               	addwf	??_DHCP_Handler& (0+255),f,b
  9151  012DD6  0E00               	movlw	0
  9152  012DD8  23BB               	addwfc	(??_DHCP_Handler+1)& (0+255),f,b
  9153  012DDA  51BA               	movf	??_DHCP_Handler& (0+255),w,b
  9154  012DDC  5FB8               	subwf	DHCP_Handler@length& (0+255),f,b
  9155  012DDE  51BB               	movf	(??_DHCP_Handler+1)& (0+255),w,b
  9156  012DE0  5BB9               	subwfb	(DHCP_Handler@length+1)& (0+255),f,b
  9157                           
  9158                           ;dhcp_client.c: 336: switch(option)
  9159  012DE2  D0AD               	goto	l1370
  9160  012DE4                     
  9161                           ;dhcp_client.c: 339: localData.subnetMask = ETH_Read32();
  9162                           
  9163                           ; BSR set to: 0
  9164  012DE4  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9165  012DE8  C013  F129         	movff	?_ETH_Read32,DHCP_Handler@localData+4
  9166  012DEC  C014  F12A         	movff	?_ETH_Read32+1,DHCP_Handler@localData+5
  9167  012DF0  C015  F12B         	movff	?_ETH_Read32+2,DHCP_Handler@localData+6
  9168  012DF4  C016  F12C         	movff	?_ETH_Read32+3,DHCP_Handler@localData+7
  9169                           
  9170                           ;dhcp_client.c: 340: break;
  9171  012DF8  D0BA               	goto	l1372
  9172  012DFA                     
  9173                           ;dhcp_client.c: 342: localData.routerAddress = ETH_Read32();
  9174  012DFA  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9175  012DFE  C013  F12D         	movff	?_ETH_Read32,DHCP_Handler@localData+8
  9176  012E02  C014  F12E         	movff	?_ETH_Read32+1,DHCP_Handler@localData+9
  9177  012E06  C015  F12F         	movff	?_ETH_Read32+2,DHCP_Handler@localData+10
  9178  012E0A  C016  F130         	movff	?_ETH_Read32+3,DHCP_Handler@localData+11
  9179                           
  9180                           ;dhcp_client.c: 343: break;
  9181  012E0E  D0AF               	goto	l1372
  9182  012E10                     
  9183                           ;dhcp_client.c: 345: {
  9184                           ;dhcp_client.c: 346: uint8_t count=0;
  9185  012E10  0E00               	movlw	0
  9186  012E12  0101               	movlb	1	; () banked
  9187  012E14  6F1F               	movwf	DHCP_Handler@count& (0+255),b
  9188                           
  9189                           ;dhcp_client.c: 347: while(optionLength >= 4)
  9190  012E16  D025               	goto	l1375
  9191  012E18                     
  9192                           ; BSR set to: 1
  9193                           ;dhcp_client.c: 348: {
  9194                           ;dhcp_client.c: 349: uint32_t a = ETH_Read32();
  9195                           
  9196                           ; BSR set to: 1
  9197  012E18  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9198  012E1C  C013  F110         	movff	?_ETH_Read32,DHCP_Handler@a
  9199  012E20  C014  F111         	movff	?_ETH_Read32+1,DHCP_Handler@a+1
  9200  012E24  C015  F112         	movff	?_ETH_Read32+2,DHCP_Handler@a+2
  9201  012E28  C016  F113         	movff	?_ETH_Read32+3,DHCP_Handler@a+3
  9202                           
  9203                           ;dhcp_client.c: 350: if(count < 2)
  9204  012E2C  0E02               	movlw	2
  9205  012E2E  0101               	movlb	1	; () banked
  9206  012E30  611F               	cpfslt	DHCP_Handler@count& (0+255),b
  9207  012E32  D015               	goto	l1377
  9208                           
  9209                           ; BSR set to: 1
  9210                           ;dhcp_client.c: 351: localData.dnsAddress[count++] = a;
  9211  012E34  511F               	movf	DHCP_Handler@count& (0+255),w,b
  9212  012E36  0D04               	mullw	4
  9213  012E38  0E0C               	movlw	12
  9214  012E3A  26F3               	addwf	prodl,f,c
  9215  012E3C  0E00               	movlw	0
  9216  012E3E  22F4               	addwfc	prodh,f,c
  9217  012E40  0E25               	movlw	low DHCP_Handler@localData
  9218  012E42  24F3               	addwf	prodl,w,c
  9219  012E44  6ED9               	movwf	fsr2l,c
  9220  012E46  0E01               	movlw	high DHCP_Handler@localData
  9221  012E48  20F4               	addwfc	prodh,w,c
  9222  012E4A  6EDA               	movwf	fsr2h,c
  9223  012E4C  C110  FFDE         	movff	DHCP_Handler@a,postinc2
  9224  012E50  C111  FFDE         	movff	DHCP_Handler@a+1,postinc2
  9225  012E54  C112  FFDE         	movff	DHCP_Handler@a+2,postinc2
  9226  012E58  C113  FFDE         	movff	DHCP_Handler@a+3,postinc2
  9227                           
  9228                           ; BSR set to: 1
  9229  012E5C  2B1F               	incf	DHCP_Handler@count& (0+255),f,b
  9230  012E5E                     l1377:
  9231                           
  9232                           ; BSR set to: 1
  9233                           ;dhcp_client.c: 353: optionLength -= 4;
  9234                           
  9235                           ; BSR set to: 1
  9236  012E5E  0E04               	movlw	4
  9237  012E60  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  9238  012E62                     l1375:
  9239                           
  9240                           ; BSR set to: 1
  9241                           
  9242                           ; BSR set to: 1
  9243  012E62  0E04               	movlw	4
  9244  012E64  6124               	cpfslt	DHCP_Handler@optionLength& (0+255),b
  9245  012E66  D7D8               	goto	l1376
  9246  012E68  D082               	goto	l1372
  9247  012E6A                     
  9248                           ; BSR set to: 1
  9249                           ;dhcp_client.c: 358: {
  9250                           ;dhcp_client.c: 359: uint8_t count=0;
  9251                           
  9252                           ; BSR set to: 1
  9253  012E6A  0E00               	movlw	0
  9254  012E6C  6F20               	movwf	DHCP_Handler@count_3188& (0+255),b
  9255                           
  9256                           ;dhcp_client.c: 360: while(optionLength >= 4)
  9257  012E6E  D025               	goto	l1380
  9258  012E70                     
  9259                           ; BSR set to: 1
  9260                           ;dhcp_client.c: 361: {
  9261                           ;dhcp_client.c: 362: uint32_t a = ETH_Read32();
  9262                           
  9263                           ; BSR set to: 1
  9264  012E70  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9265  012E74  C013  F114         	movff	?_ETH_Read32,DHCP_Handler@a_3189
  9266  012E78  C014  F115         	movff	?_ETH_Read32+1,DHCP_Handler@a_3189+1
  9267  012E7C  C015  F116         	movff	?_ETH_Read32+2,DHCP_Handler@a_3189+2
  9268  012E80  C016  F117         	movff	?_ETH_Read32+3,DHCP_Handler@a_3189+3
  9269                           
  9270                           ;dhcp_client.c: 363: if(count < 2)
  9271  012E84  0E02               	movlw	2
  9272  012E86  0101               	movlb	1	; () banked
  9273  012E88  6120               	cpfslt	DHCP_Handler@count_3188& (0+255),b
  9274  012E8A  D015               	goto	l1382
  9275                           
  9276                           ; BSR set to: 1
  9277                           ;dhcp_client.c: 364: localData.ntpAddress[count++] = a;
  9278  012E8C  5120               	movf	DHCP_Handler@count_3188& (0+255),w,b
  9279  012E8E  0D04               	mullw	4
  9280  012E90  0E14               	movlw	20
  9281  012E92  26F3               	addwf	prodl,f,c
  9282  012E94  0E00               	movlw	0
  9283  012E96  22F4               	addwfc	prodh,f,c
  9284  012E98  0E25               	movlw	low DHCP_Handler@localData
  9285  012E9A  24F3               	addwf	prodl,w,c
  9286  012E9C  6ED9               	movwf	fsr2l,c
  9287  012E9E  0E01               	movlw	high DHCP_Handler@localData
  9288  012EA0  20F4               	addwfc	prodh,w,c
  9289  012EA2  6EDA               	movwf	fsr2h,c
  9290  012EA4  C114  FFDE         	movff	DHCP_Handler@a_3189,postinc2
  9291  012EA8  C115  FFDE         	movff	DHCP_Handler@a_3189+1,postinc2
  9292  012EAC  C116  FFDE         	movff	DHCP_Handler@a_3189+2,postinc2
  9293  012EB0  C117  FFDE         	movff	DHCP_Handler@a_3189+3,postinc2
  9294                           
  9295                           ; BSR set to: 1
  9296  012EB4  2B20               	incf	DHCP_Handler@count_3188& (0+255),f,b
  9297  012EB6                     l1382:
  9298                           
  9299                           ; BSR set to: 1
  9300                           ;dhcp_client.c: 366: optionLength -= 4;
  9301                           
  9302                           ; BSR set to: 1
  9303  012EB6  0E04               	movlw	4
  9304  012EB8  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  9305  012EBA                     l1380:
  9306                           
  9307                           ; BSR set to: 1
  9308                           
  9309                           ; BSR set to: 1
  9310  012EBA  0E04               	movlw	4
  9311  012EBC  6124               	cpfslt	DHCP_Handler@optionLength& (0+255),b
  9312  012EBE  D7D8               	goto	l1381
  9313  012EC0  D056               	goto	l1372
  9314  012EC2                     
  9315                           ; BSR set to: 1
  9316                           ;dhcp_client.c: 371: if(optionLength >= 4)
  9317                           
  9318                           ; BSR set to: 1
  9319  012EC2  0E03               	movlw	3
  9320  012EC4  6524               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  9321  012EC6  D053               	goto	l1372
  9322                           
  9323                           ; BSR set to: 1
  9324                           ;dhcp_client.c: 372: {
  9325                           ;dhcp_client.c: 373: localData.t1 = ETH_Read32();
  9326  012EC8  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9327  012ECC  C013  F149         	movff	?_ETH_Read32,DHCP_Handler@localData+36
  9328  012ED0  C014  F14A         	movff	?_ETH_Read32+1,DHCP_Handler@localData+37
  9329  012ED4  C015  F14B         	movff	?_ETH_Read32+2,DHCP_Handler@localData+38
  9330  012ED8  C016  F14C         	movff	?_ETH_Read32+3,DHCP_Handler@localData+39
  9331                           
  9332                           ;dhcp_client.c: 374: localData.t2 = localData.t1 >> 1;
  9333  012EDC  C149  F0BA         	movff	DHCP_Handler@localData+36,??_DHCP_Handler
  9334  012EE0  C14A  F0BB         	movff	DHCP_Handler@localData+37,??_DHCP_Handler+1
  9335  012EE4  C14B  F0BC         	movff	DHCP_Handler@localData+38,??_DHCP_Handler+2
  9336  012EE8  C14C  F0BD         	movff	DHCP_Handler@localData+39,??_DHCP_Handler+3
  9337  012EEC  0100               	movlb	0	; () banked
  9338  012EEE  90D8               	bcf	status,0,c
  9339  012EF0  33BD               	rrcf	(??_DHCP_Handler+3)& (0+255),f,b
  9340  012EF2  33BC               	rrcf	(??_DHCP_Handler+2)& (0+255),f,b
  9341  012EF4  33BB               	rrcf	(??_DHCP_Handler+1)& (0+255),f,b
  9342  012EF6  33BA               	rrcf	??_DHCP_Handler& (0+255),f,b
  9343  012EF8  C0BA  F14D         	movff	??_DHCP_Handler,DHCP_Handler@localData+40
  9344  012EFC  C0BB  F14E         	movff	??_DHCP_Handler+1,DHCP_Handler@localData+41
  9345  012F00  C0BC  F14F         	movff	??_DHCP_Handler+2,DHCP_Handler@localData+42
  9346  012F04  C0BD  F150         	movff	??_DHCP_Handler+3,DHCP_Handler@localData+43
  9347  012F08  D00A               	goto	l11234
  9348  012F0A                     
  9349                           ; BSR set to: 1
  9350                           ;dhcp_client.c: 379: localData.leasee_ip = ETH_Read32();
  9351                           
  9352                           ; BSR set to: 1
  9353  012F0A  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9354  012F0E  C013  F151         	movff	?_ETH_Read32,DHCP_Handler@localData+44
  9355  012F12  C014  F152         	movff	?_ETH_Read32+1,DHCP_Handler@localData+45
  9356  012F16  C015  F153         	movff	?_ETH_Read32+2,DHCP_Handler@localData+46
  9357  012F1A  C016  F154         	movff	?_ETH_Read32+3,DHCP_Handler@localData+47
  9358  012F1E                     l11234:
  9359                           
  9360                           ;dhcp_client.c: 380: optionLength -= 4;
  9361  012F1E  0E04               	movlw	4
  9362  012F20  0101               	movlb	1	; () banked
  9363  012F22  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  9364                           
  9365                           ;dhcp_client.c: 381: break;
  9366  012F24  D024               	goto	l1372
  9367  012F26                     
  9368                           ; BSR set to: 1
  9369                           ;dhcp_client.c: 383: messageType=ETH_Read8();
  9370                           
  9371                           ; BSR set to: 1
  9372  012F26  EC37  F0B6         	call	_ETH_Read8	;wreg free
  9373  012F2A  0101               	movlb	1	; () banked
  9374  012F2C  6F18               	movwf	DHCP_Handler@messageType& (0+255),b
  9375                           
  9376                           ; BSR set to: 1
  9377                           ;dhcp_client.c: 384: optionLength -=1;
  9378  012F2E  0724               	decf	DHCP_Handler@optionLength& (0+255),f,b
  9379                           
  9380                           ;dhcp_client.c: 385: break;
  9381  012F30  D01E               	goto	l1372
  9382  012F32                     
  9383                           ; BSR set to: 1
  9384                           ;dhcp_client.c: 387: ETH_Dump(optionLength);
  9385                           
  9386                           ; BSR set to: 1
  9387  012F32  C124  F013         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  9388  012F36  6A14               	clrf	ETH_Dump@length+1,c
  9389  012F38  EC46  F0B5         	call	_ETH_Dump	;wreg free
  9390                           
  9391                           ;dhcp_client.c: 389: }
  9392                           
  9393                           ;dhcp_client.c: 388: break;
  9394  012F3C  D018               	goto	l1372
  9395  012F3E                     l1370:
  9396  012F3E  0101               	movlb	1	; () banked
  9397  012F40  5119               	movf	DHCP_Handler@option& (0+255),w,b
  9398                           
  9399                           ; Switch size 1, requested type "space"
  9400                           ; Number of cases is 7, Range of values is 1 to 54
  9401                           ; switch strategies available:
  9402                           ; Name         Instructions Cycles
  9403                           ; simple_byte           22    12 (average)
  9404                           ;	Chosen strategy is simple_byte
  9405  012F42  0A01               	xorlw	1	; case 1
  9406  012F44  B4D8               	btfsc	status,2,c
  9407  012F46  D74E               	goto	l1371
  9408  012F48  0A02               	xorlw	2	; case 3
  9409  012F4A  B4D8               	btfsc	status,2,c
  9410  012F4C  D756               	goto	l1373
  9411  012F4E  0A05               	xorlw	5	; case 6
  9412  012F50  B4D8               	btfsc	status,2,c
  9413  012F52  D75E               	goto	l1374
  9414  012F54  0A2C               	xorlw	44	; case 42
  9415  012F56  B4D8               	btfsc	status,2,c
  9416  012F58  D788               	goto	l1379
  9417  012F5A  0A19               	xorlw	25	; case 51
  9418  012F5C  B4D8               	btfsc	status,2,c
  9419  012F5E  D7B1               	goto	l1384
  9420  012F60  0A06               	xorlw	6	; case 53
  9421  012F62  B4D8               	btfsc	status,2,c
  9422  012F64  D7E0               	goto	l1387
  9423  012F66  0A03               	xorlw	3	; case 54
  9424  012F68  B4D8               	btfsc	status,2,c
  9425  012F6A  D7CF               	goto	l1386
  9426  012F6C  D7E2               	goto	l1388
  9427  012F6E                     l1372:
  9428                           
  9429                           ; BSR set to: 1
  9430                           
  9431                           ; BSR set to: 1
  9432  012F6E  0100               	movlb	0	; () banked
  9433  012F70  BFB9               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  9434  012F72  D09B               	goto	l1398
  9435  012F74  51B9               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  9436  012F76  E103               	bnz	u10911
  9437  012F78  05B8               	decf	DHCP_Handler@length& (0+255),w,b
  9438  012F7A  A0D8               	btfss	status,0,c
  9439  012F7C  D096               	goto	l1398
  9440  012F7E                     u10911:
  9441  012F7E  D71D               	goto	l1369
  9442  012F80                     
  9443                           ;dhcp_client.c: 434: if(acceptOffers)
  9444                           
  9445                           ; BSR set to: 0
  9446  012F80  0101               	movlb	1	; () banked
  9447  012F82  5121               	movf	DHCP_Handler@acceptOffers& (0+255),w,b
  9448  012F84  B4D8               	btfsc	status,2,c
  9449  012F86  D00E               	goto	l1400
  9450                           
  9451                           ; BSR set to: 1
  9452                           ;dhcp_client.c: 435: {
  9453                           ;dhcp_client.c: 436: dhcpData = localData;
  9454  012F88  EE21  F025         	lfsr	2,DHCP_Handler@localData
  9455  012F8C  EE12  F08D         	lfsr	1,_dhcpData
  9456  012F90  0E2F               	movlw	47
  9457  012F92                     u10931:
  9458  012F92  CFDB FFE3          	movff	plusw2,plusw1
  9459  012F96  06E8               	decf	wreg,f,c
  9460  012F98  E2FC               	bc	u10931
  9461                           
  9462                           ; BSR set to: 1
  9463                           ;dhcp_client.c: 437: sendDHCPREQUEST();
  9464  012F9A  EC93  F0B7         	call	_sendDHCPREQUEST	;wreg free
  9465                           
  9466                           ;dhcp_client.c: 438: dhcpState.rxClientState = REQUESTING;
  9467  012F9E  0E01               	movlw	1
  9468  012FA0  0102               	movlb	2	; () banked
  9469  012FA2  6F4C               	movwf	_dhcpState& (0+255),b
  9470  012FA4                     l1400:
  9471                           
  9472                           ;dhcp_client.c: 439: }
  9473                           ;dhcp_client.c: 440: if(declineOffers)
  9474                           
  9475                           ; BSR set to: 2
  9476  012FA4  0101               	movlb	1	; () banked
  9477  012FA6  511E               	movf	DHCP_Handler@declineOffers& (0+255),w,b
  9478  012FA8  B4D8               	btfsc	status,2,c
  9479  012FAA  0012               	return	
  9480                           
  9481                           ; BSR set to: 1
  9482                           ;dhcp_client.c: 441: {
  9483                           ;dhcp_client.c: 442: sendDHCPDECLINE();
  9484  012FAC  EC8F  F0B7         	call	_sendDHCPDECLINE	;wreg free
  9485                           
  9486                           ;dhcp_client.c: 443: }
  9487                           ;dhcp_client.c: 444: break;
  9488  012FB0  0012               	return	
  9489  012FB2                     
  9490                           ;dhcp_client.c: 446: if(acceptACK)
  9491  012FB2  0101               	movlb	1	; () banked
  9492  012FB4  5123               	movf	DHCP_Handler@acceptACK& (0+255),w,b
  9493  012FB6  B4D8               	btfsc	status,2,c
  9494  012FB8  0012               	return	
  9495                           
  9496                           ; BSR set to: 1
  9497                           ;dhcp_client.c: 447: {
  9498                           ;dhcp_client.c: 448: dhcpData.t1 = localData.t1;
  9499  012FBA  C149  F2B1         	movff	DHCP_Handler@localData+36,_dhcpData+36
  9500  012FBE  C14A  F2B2         	movff	DHCP_Handler@localData+37,_dhcpData+37
  9501  012FC2  C14B  F2B3         	movff	DHCP_Handler@localData+38,_dhcpData+38
  9502  012FC6  C14C  F2B4         	movff	DHCP_Handler@localData+39,_dhcpData+39
  9503                           
  9504                           ;dhcp_client.c: 449: dhcpData.t2 = localData.t2;
  9505  012FCA  C14D  F2B5         	movff	DHCP_Handler@localData+40,_dhcpData+40
  9506  012FCE  C14E  F2B6         	movff	DHCP_Handler@localData+41,_dhcpData+41
  9507  012FD2  C14F  F2B7         	movff	DHCP_Handler@localData+42,_dhcpData+42
  9508  012FD6  C150  F2B8         	movff	DHCP_Handler@localData+43,_dhcpData+43
  9509                           
  9510                           ; BSR set to: 1
  9511                           
  9512                           ;dhcp_client.c: 450: do{ ip_database_info.ipv4_myAddress = dhcpData.dhcpIPAddress; } whi
      +                          le(0);
  9513  012FDA  C28D  F200         	movff	_dhcpData,_ip_database_info
  9514  012FDE  C28E  F201         	movff	_dhcpData+1,_ip_database_info+1
  9515  012FE2  C28F  F202         	movff	_dhcpData+2,_ip_database_info+2
  9516  012FE6  C290  F203         	movff	_dhcpData+3,_ip_database_info+3
  9517                           
  9518                           ; BSR set to: 1
  9519                           
  9520                           ; BSR set to: 1
  9521                           ;dhcp_client.c: 451: do{ if(0 < 2) ip_database_info.ipv4_dns[0] = dhcpData.dnsAddress[0]
      +                          ; } while(0);
  9522  012FEA  C299  F204         	movff	_dhcpData+12,_ip_database_info+4
  9523  012FEE  C29A  F205         	movff	_dhcpData+13,_ip_database_info+5
  9524  012FF2  C29B  F206         	movff	_dhcpData+14,_ip_database_info+6
  9525  012FF6  C29C  F207         	movff	_dhcpData+15,_ip_database_info+7
  9526                           
  9527                           ; BSR set to: 1
  9528                           
  9529                           ; BSR set to: 1
  9530                           ;dhcp_client.c: 452: do{ if(1 < 2) ip_database_info.ipv4_dns[1] = dhcpData.dnsAddress[1]
      +                          ; } while(0);
  9531                           
  9532                           ; BSR set to: 1
  9533  012FFA  C29D  F208         	movff	_dhcpData+16,_ip_database_info+8
  9534  012FFE  C29E  F209         	movff	_dhcpData+17,_ip_database_info+9
  9535  013002  C29F  F20A         	movff	_dhcpData+18,_ip_database_info+10
  9536  013006  C2A0  F20B         	movff	_dhcpData+19,_ip_database_info+11
  9537                           
  9538                           ; BSR set to: 1
  9539                           
  9540                           ; BSR set to: 1
  9541                           ;dhcp_client.c: 453: do{ ip_database_info.ipv4_router = dhcpData.routerAddress; } while(
      +                          0);
  9542                           
  9543                           ; BSR set to: 1
  9544  01300A  C295  F210         	movff	_dhcpData+8,_ip_database_info+16
  9545  01300E  C296  F211         	movff	_dhcpData+9,_ip_database_info+17
  9546  013012  C297  F212         	movff	_dhcpData+10,_ip_database_info+18
  9547  013016  C298  F213         	movff	_dhcpData+11,_ip_database_info+19
  9548                           
  9549                           ; BSR set to: 1
  9550                           
  9551                           ; BSR set to: 1
  9552                           ;dhcp_client.c: 454: do{ ip_database_info.ipv4_gateway = dhcpData.gatewayAddress; } whil
      +                          e(0);
  9553  01301A  C2A9  F214         	movff	_dhcpData+28,_ip_database_info+20
  9554  01301E  C2AA  F215         	movff	_dhcpData+29,_ip_database_info+21
  9555  013022  C2AB  F216         	movff	_dhcpData+30,_ip_database_info+22
  9556  013026  C2AC  F217         	movff	_dhcpData+31,_ip_database_info+23
  9557                           
  9558                           ; BSR set to: 1
  9559                           
  9560                           ; BSR set to: 1
  9561                           ;dhcp_client.c: 455: do{ ip_database_info.ipv4_subnetMask = dhcpData.subnetMask; } while
      +                          (0);
  9562  01302A  C291  F20C         	movff	_dhcpData+4,_ip_database_info+12
  9563  01302E  C292  F20D         	movff	_dhcpData+5,_ip_database_info+13
  9564  013032  C293  F20E         	movff	_dhcpData+6,_ip_database_info+14
  9565  013036  C294  F20F         	movff	_dhcpData+7,_ip_database_info+15
  9566                           
  9567                           ; BSR set to: 1
  9568                           ;dhcp_client.c: 456: if(dhcpData.ntpAddress[0])
  9569                           
  9570                           ; BSR set to: 1
  9571  01303A  0102               	movlb	2	; () banked
  9572  01303C  51A1               	movf	(_dhcpData+20)& (0+255),w,b
  9573  01303E  11A2               	iorwf	(_dhcpData+21)& (0+255),w,b
  9574  013040  11A3               	iorwf	(_dhcpData+22)& (0+255),w,b
  9575  013042  11A4               	iorwf	(_dhcpData+23)& (0+255),w,b
  9576  013044  B4D8               	btfsc	status,2,c
  9577  013046  D016               	goto	l1425
  9578                           
  9579                           ; BSR set to: 2
  9580                           
  9581                           ;dhcp_client.c: 457: {
  9582                           ;dhcp_client.c: 458: do{ if(0 < 2) ip_database_info.ipv4_ntpAddress[0] = dhcpData.ntpAdd
      +                          ress[0]; } while(0);
  9583  013048  C2A1  F218         	movff	_dhcpData+20,_ip_database_info+24
  9584  01304C  C2A2  F219         	movff	_dhcpData+21,_ip_database_info+25
  9585  013050  C2A3  F21A         	movff	_dhcpData+22,_ip_database_info+26
  9586  013054  C2A4  F21B         	movff	_dhcpData+23,_ip_database_info+27
  9587                           
  9588                           ; BSR set to: 2
  9589                           ;dhcp_client.c: 459: if(dhcpData.ntpAddress[1])
  9590                           
  9591                           ; BSR set to: 2
  9592                           
  9593                           ; BSR set to: 2
  9594  013058  51A5               	movf	(_dhcpData+24)& (0+255),w,b
  9595  01305A  11A6               	iorwf	(_dhcpData+25)& (0+255),w,b
  9596  01305C  11A7               	iorwf	(_dhcpData+26)& (0+255),w,b
  9597  01305E  11A8               	iorwf	(_dhcpData+27)& (0+255),w,b
  9598  013060  B4D8               	btfsc	status,2,c
  9599  013062  D008               	goto	l1425
  9600                           
  9601                           ; BSR set to: 2
  9602                           
  9603                           ;dhcp_client.c: 460: do{ if(1 < 2) ip_database_info.ipv4_ntpAddress[1] = dhcpData.ntpAdd
      +                          ress[1]; } while(0);
  9604  013064  C2A5  F21C         	movff	_dhcpData+24,_ip_database_info+28
  9605  013068  C2A6  F21D         	movff	_dhcpData+25,_ip_database_info+29
  9606  01306C  C2A7  F21E         	movff	_dhcpData+26,_ip_database_info+30
  9607  013070  C2A8  F21F         	movff	_dhcpData+27,_ip_database_info+31
  9608  013074                     l1425:
  9609                           
  9610                           ; BSR set to: 2
  9611                           ;dhcp_client.c: 461: }
  9612                           ;dhcp_client.c: 462: dhcpState.rxClientState = BOUND;
  9613                           
  9614                           ; BSR set to: 2
  9615                           
  9616                           ; BSR set to: 2
  9617                           
  9618                           ; BSR set to: 2
  9619                           
  9620                           ; BSR set to: 2
  9621  013074  0E03               	movlw	3
  9622  013076  6F4C               	movwf	_dhcpState& (0+255),b
  9623                           
  9624                           ; BSR set to: 2
  9625                           ;dhcp_client.c: 463: }
  9626                           ;dhcp_client.c: 464: break;
  9627  013078  0012               	return	
  9628  01307A                     
  9629                           ;dhcp_client.c: 466: if(acceptNACK)
  9630                           
  9631                           ; BSR set to: 2
  9632  01307A  0101               	movlb	1	; () banked
  9633  01307C  5122               	movf	DHCP_Handler@acceptNACK& (0+255),w,b
  9634  01307E  B4D8               	btfsc	status,2,c
  9635  013080  0012               	return	
  9636                           
  9637                           ; BSR set to: 1
  9638                           ;dhcp_client.c: 467: {
  9639                           ;dhcp_client.c: 468: dhcpData.t1 = 0;
  9640  013082  0E00               	movlw	0
  9641  013084  0102               	movlb	2	; () banked
  9642  013086  6FB1               	movwf	(_dhcpData+36)& (0+255),b
  9643  013088  0E00               	movlw	0
  9644  01308A  6FB2               	movwf	(_dhcpData+37)& (0+255),b
  9645  01308C  0E00               	movlw	0
  9646  01308E  6FB3               	movwf	(_dhcpData+38)& (0+255),b
  9647  013090  0E00               	movlw	0
  9648  013092  6FB4               	movwf	(_dhcpData+39)& (0+255),b
  9649                           
  9650                           ;dhcp_client.c: 469: dhcpData.t2 = 0;
  9651  013094  0E00               	movlw	0
  9652  013096  6FB5               	movwf	(_dhcpData+40)& (0+255),b
  9653  013098  0E00               	movlw	0
  9654  01309A  6FB6               	movwf	(_dhcpData+41)& (0+255),b
  9655  01309C  0E00               	movlw	0
  9656  01309E  6FB7               	movwf	(_dhcpData+42)& (0+255),b
  9657  0130A0  0E00               	movlw	0
  9658  0130A2  6FB8               	movwf	(_dhcpData+43)& (0+255),b
  9659                           
  9660                           ;dhcp_client.c: 470: dhcpState.rxClientState = SELECTING;
  9661  0130A4  0E00               	movlw	0
  9662  0130A6  6F4C               	movwf	_dhcpState& (0+255),b
  9663                           
  9664                           ; BSR set to: 2
  9665                           ;dhcp_client.c: 475: }
  9666                           
  9667                           ; BSR set to: 2
  9668                           ;dhcp_client.c: 474: break;
  9669                           
  9670                           ;dhcp_client.c: 473: default:
  9671                           
  9672                           ; BSR set to: 2
  9673                           ;dhcp_client.c: 471: }
  9674                           ;dhcp_client.c: 472: break;
  9675  0130A8  0012               	return	
  9676  0130AA                     l1398:
  9677                           
  9678                           ; BSR set to: 2
  9679  0130AA  0101               	movlb	1	; () banked
  9680  0130AC  5118               	movf	DHCP_Handler@messageType& (0+255),w,b
  9681                           
  9682                           ; Switch size 1, requested type "space"
  9683                           ; Number of cases is 3, Range of values is 2 to 6
  9684                           ; switch strategies available:
  9685                           ; Name         Instructions Cycles
  9686                           ; simple_byte           10     6 (average)
  9687                           ;	Chosen strategy is simple_byte
  9688  0130AE  0A02               	xorlw	2	; case 2
  9689  0130B0  B4D8               	btfsc	status,2,c
  9690  0130B2  D766               	goto	l1399
  9691  0130B4  0A07               	xorlw	7	; case 5
  9692  0130B6  B4D8               	btfsc	status,2,c
  9693  0130B8  D77C               	goto	l1403
  9694  0130BA  0A03               	xorlw	3	; case 6
  9695  0130BC  A4D8               	btfss	status,2,c
  9696                           
  9697                           ; BSR set to: 1
  9698                           
  9699                           ; BSR set to: 1
  9700                           ;dhcp_client.c: 476: }
  9701  0130BE  0012               	return	
  9702  0130C0  D7DC               	goto	l1427
  9703  0130C2                     __end_of_DHCP_Handler:
  9704                           	opt stack 0
  9705                           tosu	equ	0xFFF
  9706                           tosh	equ	0xFFE
  9707                           tosl	equ	0xFFD
  9708                           pclath	equ	0xFFA
  9709                           tblptru	equ	0xFF8
  9710                           tblptrh	equ	0xFF7
  9711                           tblptrl	equ	0xFF6
  9712                           tablat	equ	0xFF5
  9713                           prodh	equ	0xFF4
  9714                           prodl	equ	0xFF3
  9715                           intcon	equ	0xFF2
  9716                           indf0	equ	0xFEF
  9717                           postinc0	equ	0xFEE
  9718                           fsr0h	equ	0xFEA
  9719                           fsr0l	equ	0xFE9
  9720                           wreg	equ	0xFE8
  9721                           indf1	equ	0xFE7
  9722                           postinc1	equ	0xFE6
  9723                           postdec1	equ	0xFE5
  9724                           plusw1	equ	0xFE3
  9725                           fsr1h	equ	0xFE2
  9726                           fsr1l	equ	0xFE1
  9727                           indf2	equ	0xFDF
  9728                           postinc2	equ	0xFDE
  9729                           postdec2	equ	0xFDD
  9730                           plusw2	equ	0xFDB
  9731                           fsr2h	equ	0xFDA
  9732                           fsr2l	equ	0xFD9
  9733                           status	equ	0xFD8
  9734                           
  9735 ;; *************** function _DNS_Handler *****************
  9736 ;; Defined at:
  9737 ;;		line 142 in file "mcc_generated_files/TCPIPLibrary/dns_client.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  length          2   88[BANK0 ] int 
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;  x               1  121[BANK0 ] unsigned char 
  9742 ;;  dnsPtr          2  118[BANK0 ] PTR struct .
  9743 ;;		 -> dnsCache(128), 
  9744 ;;  dnsR          255    0[BANK1 ] unsigned char [255]
  9745 ;;  ttl             4  105[BANK0 ] unsigned long 
  9746 ;;  ipAddress       4  101[BANK0 ] unsigned long 
  9747 ;;  entryPointer    2  123[BANK0 ] PTR struct .
  9748 ;;		 -> dnsCache(128), 
  9749 ;;  dataLength      2  116[BANK0 ] unsigned int 
  9750 ;;  answer          2  114[BANK0 ] unsigned int 
  9751 ;;  type            2  111[BANK0 ] unsigned int 
  9752 ;;  v               2  109[BANK0 ] unsigned int 
  9753 ;;  authorityRR     2   99[BANK0 ] unsigned int 
  9754 ;;  lock            1  122[BANK0 ] unsigned char 
  9755 ;;  i               1  120[BANK0 ] unsigned char 
  9756 ;;  nameLen         1  113[BANK0 ] unsigned char 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  1    wreg      void 
  9759 ;; Registers used:
  9760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9767 ;;      Locals:         0      26     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Totals:         0      37     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;Total ram usage:      292 bytes
  9771 ;; Hardware stack levels used:    1
  9772 ;; Hardware stack levels required when called:    6
  9773 ;; This function calls:
  9774 ;;		_ETH_Read16
  9775 ;;		_ETH_Read32
  9776 ;;		_ETH_Read8
  9777 ;;		_strcmp
  9778 ;;		_time
  9779 ;; This function is called by:
  9780 ;;		_UDP_Receive
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           	psect	text40
  9785  0137D0                     __ptext40:
  9786                           	opt stack 0
  9787  0137D0                     _DNS_Handler:
  9788                           	opt stack 20
  9789                           
  9790                           ;dns_client.c: 144: uint16_t v;
  9791                           ;dns_client.c: 145: unsigned char dnsR[255];
  9792                           ;dns_client.c: 146: uint16_t answer, authorityRR;
  9793                           ;dns_client.c: 147: uint32_t ipAddress;
  9794                           ;dns_client.c: 148: uint32_t ttl;
  9795                           ;dns_client.c: 149: uint16_t type, dataLength;
  9796                           ;dns_client.c: 151: dns_map_t *entryPointer;
  9797                           ;dns_client.c: 152: uint8_t i, nameLen,lock =0;
  9798                           
  9799                           ;incstack = 0
  9800  0137D0  0E00               	movlw	0
  9801  0137D2  0100               	movlb	0	; () banked
  9802  0137D4  6FDA               	movwf	DNS_Handler@lock& (0+255),b
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;dns_client.c: 154: entryPointer = dnsCache;
  9806  0137D6  0E00               	movlw	low _dnsCache
  9807  0137D8  6FDB               	movwf	DNS_Handler@entryPointer& (0+255),b
  9808  0137DA  0E05               	movlw	high _dnsCache
  9809  0137DC  6FDC               	movwf	(DNS_Handler@entryPointer+1)& (0+255),b
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;dns_client.c: 156: if(length > 12)
  9813  0137DE  BFB9               	btfsc	(DNS_Handler@length+1)& (0+255),7,b
  9814  0137E0  0012               	return	
  9815  0137E2  51B9               	movf	(DNS_Handler@length+1)& (0+255),w,b
  9816  0137E4  E104               	bnz	u10990
  9817  0137E6  0E0D               	movlw	13
  9818  0137E8  5DB8               	subwf	DNS_Handler@length& (0+255),w,b
  9819  0137EA  A0D8               	btfss	status,0,c
  9820  0137EC  0012               	return	
  9821  0137EE                     u10990:
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;dns_client.c: 157: {
  9825                           ;dns_client.c: 158: v = ETH_Read16();
  9826  0137EE  EC69  F0B4         	call	_ETH_Read16	;wreg free
  9827  0137F2  C013  F0CD         	movff	?_ETH_Read16,DNS_Handler@v
  9828  0137F6  C014  F0CE         	movff	?_ETH_Read16+1,DNS_Handler@v+1
  9829                           
  9830                           ;dns_client.c: 159: if(v == dnsXidValue)
  9831  0137FA  0ED7               	movlw	low _dnsXidValue
  9832  0137FC  6EF6               	movwf	tblptrl,c
  9833  0137FE                     	if	1	;There is more than 1 active tblptr byte
  9834  0137FE  0EFE               	movlw	high _dnsXidValue
  9835  013800  6EF7               	movwf	tblptrh,c
  9836  013802                     	endif
  9837  013802                     	if	1	;There are 3 active tblptr bytes
  9838  013802  0E00               	movlw	low (_dnsXidValue shr (0+16))
  9839  013804  6EF8               	movwf	tblptru,c
  9840  013806                     	endif
  9841  013806  0009               	tblrd		*+
  9842  013808  50F5               	movf	tablat,w,c
  9843  01380A  0100               	movlb	0	; () banked
  9844  01380C  19CD               	xorwf	DNS_Handler@v& (0+255),w,b
  9845  01380E  E104               	bnz	u11001
  9846  013810  0009               	tblrd		*+
  9847  013812  50F5               	movf	tablat,w,c
  9848  013814  19CE               	xorwf	(DNS_Handler@v+1)& (0+255),w,b
  9849  013816  A4D8               	btfss	status,2,c
  9850  013818                     u11001:
  9851  013818  D0A9               	goto	u11060
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;dns_client.c: 160: {
  9855                           ;dns_client.c: 161: ETH_Read32();
  9856  01381A  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9857                           
  9858                           ;dns_client.c: 162: answer = ETH_Read16();
  9859  01381E  EC69  F0B4         	call	_ETH_Read16	;wreg free
  9860  013822  C013  F0D2         	movff	?_ETH_Read16,DNS_Handler@answer
  9861  013826  C014  F0D3         	movff	?_ETH_Read16+1,DNS_Handler@answer+1
  9862                           
  9863                           ;dns_client.c: 163: authorityRR = ETH_Read16();
  9864  01382A  EC69  F0B4         	call	_ETH_Read16	;wreg free
  9865  01382E  C013  F0C3         	movff	?_ETH_Read16,DNS_Handler@authorityRR
  9866  013832  C014  F0C4         	movff	?_ETH_Read16+1,DNS_Handler@authorityRR+1
  9867                           
  9868                           ;dns_client.c: 164: ETH_Read16();
  9869  013836  EC69  F0B4         	call	_ETH_Read16	;wreg free
  9870                           
  9871                           ;dns_client.c: 165: length -= 12;
  9872  01383A  0100               	movlb	0	; () banked
  9873  01383C  0EF4               	movlw	244
  9874  01383E  27B8               	addwf	DNS_Handler@length& (0+255),f,b
  9875  013840  0EFF               	movlw	255
  9876  013842  23B9               	addwfc	(DNS_Handler@length+1)& (0+255),f,b
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;dns_client.c: 167: if(length > 0)
  9880  013844  BFB9               	btfsc	(DNS_Handler@length+1)& (0+255),7,b
  9881  013846  D092               	goto	u11060
  9882  013848  51B9               	movf	(DNS_Handler@length+1)& (0+255),w,b
  9883  01384A  E120               	bnz	l11306
  9884  01384C  05B8               	decf	DNS_Handler@length& (0+255),w,b
  9885  01384E  B0D8               	btfsc	status,0,c
  9886  013850  D01D               	goto	l1494
  9887  013852  D08C               	goto	u11060
  9888  013854                     
  9889                           ; BSR set to: 0
  9890                           ;dns_client.c: 172: {
  9891                           ;dns_client.c: 173: dnsR[lock] = ETH_Read8();
  9892                           
  9893                           ; BSR set to: 0
  9894  013854  51DA               	movf	DNS_Handler@lock& (0+255),w,b
  9895  013856  0D01               	mullw	1
  9896  013858  0E00               	movlw	low DNS_Handler@dnsR
  9897  01385A  24F3               	addwf	prodl,w,c
  9898  01385C  6ED9               	movwf	fsr2l,c
  9899  01385E  0E01               	movlw	high DNS_Handler@dnsR
  9900  013860  20F4               	addwfc	prodh,w,c
  9901  013862  6EDA               	movwf	fsr2h,c
  9902  013864  EC37  F0B6         	call	_ETH_Read8	;wreg free
  9903  013868  6EDF               	movwf	indf2,c
  9904                           
  9905                           ;dns_client.c: 174: lock++;
  9906  01386A  0100               	movlb	0	; () banked
  9907  01386C  2BDA               	incf	DNS_Handler@lock& (0+255),f,b
  9908  01386E                     
  9909                           ; BSR set to: 0
  9910                           
  9911                           ; BSR set to: 0
  9912  01386E  07D1               	decf	DNS_Handler@nameLen& (0+255),f,b
  9913  013870  29D1               	incf	DNS_Handler@nameLen& (0+255),w,b
  9914  013872  A4D8               	btfss	status,2,c
  9915  013874  D7EF               	goto	l1497
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;dns_client.c: 175: }
  9919                           ;dns_client.c: 176: dnsR[lock] = '.';
  9920                           
  9921                           ; BSR set to: 0
  9922  013876  51DA               	movf	DNS_Handler@lock& (0+255),w,b
  9923  013878  0D01               	mullw	1
  9924  01387A  0E00               	movlw	low DNS_Handler@dnsR
  9925  01387C  24F3               	addwf	prodl,w,c
  9926  01387E  6ED9               	movwf	fsr2l,c
  9927  013880  0E01               	movlw	high DNS_Handler@dnsR
  9928  013882  20F4               	addwfc	prodh,w,c
  9929  013884  6EDA               	movwf	fsr2h,c
  9930  013886  0E2E               	movlw	46
  9931  013888  6EDF               	movwf	indf2,c
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;dns_client.c: 177: lock++;
  9935  01388A  2BDA               	incf	DNS_Handler@lock& (0+255),f,b
  9936  01388C                     l1494:
  9937  01388C                     l11306:
  9938                           
  9939                           ; BSR set to: 0
  9940  01388C  EC37  F0B6         	call	_ETH_Read8	;wreg free
  9941  013890  0100               	movlb	0	; () banked
  9942  013892  6FD1               	movwf	DNS_Handler@nameLen& (0+255),b
  9943  013894  51D1               	movf	DNS_Handler@nameLen& (0+255),w,b
  9944  013896  A4D8               	btfss	status,2,c
  9945  013898  D7EA               	goto	l1496
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;dns_client.c: 178: }
  9949                           ;dns_client.c: 179: dnsR[lock-1] ='\0';
  9950                           
  9951                           ; BSR set to: 0
  9952  01389A  0EFF               	movlw	255
  9953  01389C  6FBA               	movwf	??_DNS_Handler& (0+255),b
  9954  01389E  0EFF               	movlw	255
  9955  0138A0  6FBB               	movwf	(??_DNS_Handler+1)& (0+255),b
  9956  0138A2  51DA               	movf	DNS_Handler@lock& (0+255),w,b
  9957  0138A4  6FBC               	movwf	(??_DNS_Handler+2)& (0+255),b
  9958  0138A6  6BBD               	clrf	(??_DNS_Handler+3)& (0+255),b
  9959  0138A8  51BA               	movf	??_DNS_Handler& (0+255),w,b
  9960  0138AA  27BC               	addwf	(??_DNS_Handler+2)& (0+255),f,b
  9961  0138AC  51BB               	movf	(??_DNS_Handler+1)& (0+255),w,b
  9962  0138AE  23BD               	addwfc	(??_DNS_Handler+3)& (0+255),f,b
  9963  0138B0  0E00               	movlw	low DNS_Handler@dnsR
  9964  0138B2  25BC               	addwf	(??_DNS_Handler+2)& (0+255),w,b
  9965  0138B4  6ED9               	movwf	fsr2l,c
  9966  0138B6  0E01               	movlw	high DNS_Handler@dnsR
  9967  0138B8  21BD               	addwfc	(??_DNS_Handler+3)& (0+255),w,b
  9968  0138BA  6EDA               	movwf	fsr2h,c
  9969  0138BC  0E00               	movlw	0
  9970  0138BE  6EDF               	movwf	indf2,c
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;dns_client.c: 181: ETH_Read32();
  9974  0138C0  EC9E  F0B2         	call	_ETH_Read32	;wreg free
  9975                           
  9976                           ;dns_client.c: 182: length -= lock + 5;
  9977  0138C4  0100               	movlb	0	; () banked
  9978  0138C6  51DA               	movf	DNS_Handler@lock& (0+255),w,b
  9979  0138C8  6FBA               	movwf	??_DNS_Handler& (0+255),b
  9980  0138CA  6BBB               	clrf	(??_DNS_Handler+1)& (0+255),b
  9981  0138CC  0E05               	movlw	5
  9982  0138CE  27BA               	addwf	??_DNS_Handler& (0+255),f,b
  9983  0138D0  0E00               	movlw	0
  9984  0138D2  23BB               	addwfc	(??_DNS_Handler+1)& (0+255),f,b
  9985  0138D4  51BA               	movf	??_DNS_Handler& (0+255),w,b
  9986  0138D6  5FB8               	subwf	DNS_Handler@length& (0+255),f,b
  9987  0138D8  51BB               	movf	(??_DNS_Handler+1)& (0+255),w,b
  9988  0138DA  5BB9               	subwfb	(DNS_Handler@length+1)& (0+255),f,b
  9989                           
  9990                           ;dns_client.c: 184: while(answer)
  9991  0138DC  D043               	goto	l1500
  9992  0138DE                     
  9993                           ; BSR set to: 0
  9994                           ;dns_client.c: 185: {
  9995                           ;dns_client.c: 186: ETH_Read16();
  9996                           
  9997                           ; BSR set to: 0
  9998  0138DE  EC69  F0B4         	call	_ETH_Read16	;wreg free
  9999                           
 10000                           ;dns_client.c: 187: type = ETH_Read16();
 10001  0138E2  EC69  F0B4         	call	_ETH_Read16	;wreg free
 10002  0138E6  C013  F0CF         	movff	?_ETH_Read16,DNS_Handler@type
 10003  0138EA  C014  F0D0         	movff	?_ETH_Read16+1,DNS_Handler@type+1
 10004                           
 10005                           ;dns_client.c: 188: ETH_Read16();
 10006  0138EE  EC69  F0B4         	call	_ETH_Read16	;wreg free
 10007                           
 10008                           ;dns_client.c: 189: ttl = ETH_Read32();
 10009  0138F2  EC9E  F0B2         	call	_ETH_Read32	;wreg free
 10010  0138F6  C013  F0C9         	movff	?_ETH_Read32,DNS_Handler@ttl
 10011  0138FA  C014  F0CA         	movff	?_ETH_Read32+1,DNS_Handler@ttl+1
 10012  0138FE  C015  F0CB         	movff	?_ETH_Read32+2,DNS_Handler@ttl+2
 10013  013902  C016  F0CC         	movff	?_ETH_Read32+3,DNS_Handler@ttl+3
 10014                           
 10015                           ;dns_client.c: 190: dataLength = ETH_Read16();
 10016  013906  EC69  F0B4         	call	_ETH_Read16	;wreg free
 10017  01390A  C013  F0D4         	movff	?_ETH_Read16,DNS_Handler@dataLength
 10018  01390E  C014  F0D5         	movff	?_ETH_Read16+1,DNS_Handler@dataLength+1
 10019                           
 10020                           ;dns_client.c: 191: if(type == 0x0001)
 10021  013912  0100               	movlb	0	; () banked
 10022  013914  05CF               	decf	DNS_Handler@type& (0+255),w,b
 10023  013916  11D0               	iorwf	(DNS_Handler@type+1)& (0+255),w,b
 10024  013918  A4D8               	btfss	status,2,c
 10025  01391A  D00D               	goto	l1504
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;dns_client.c: 192: {
 10029                           ;dns_client.c: 193: ipAddress = ETH_Read32();
 10030  01391C  EC9E  F0B2         	call	_ETH_Read32	;wreg free
 10031  013920  C013  F0C5         	movff	?_ETH_Read32,DNS_Handler@ipAddress
 10032  013924  C014  F0C6         	movff	?_ETH_Read32+1,DNS_Handler@ipAddress+1
 10033  013928  C015  F0C7         	movff	?_ETH_Read32+2,DNS_Handler@ipAddress+2
 10034  01392C  C016  F0C8         	movff	?_ETH_Read32+3,DNS_Handler@ipAddress+3
 10035                           
 10036                           ;dns_client.c: 194: }
 10037  013930  D015               	goto	l1503
 10038  013932                     l11320:
 10039  013932  EC37  F0B6         	call	_ETH_Read8	;wreg free
 10040  013936                     l1504:
 10041  013936  0100               	movlb	0	; () banked
 10042  013938  07D4               	decf	DNS_Handler@dataLength& (0+255),f,b
 10043  01393A  A0D8               	btfss	status,0,c
 10044  01393C  07D5               	decf	(DNS_Handler@dataLength+1)& (0+255),f,b
 10045  01393E  29D4               	incf	DNS_Handler@dataLength& (0+255),w,b
 10046  013940  E1F8               	bnz	l11320
 10047  013942  29D5               	incf	(DNS_Handler@dataLength+1)& (0+255),w,b
 10048  013944  A4D8               	btfss	status,2,c
 10049  013946  D7F5               	goto	l1505
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;dns_client.c: 198: length -=14+dataLength;
 10053                           
 10054                           ; BSR set to: 0
 10055  013948  0E0E               	movlw	14
 10056  01394A  25D4               	addwf	DNS_Handler@dataLength& (0+255),w,b
 10057  01394C  6FBA               	movwf	??_DNS_Handler& (0+255),b
 10058  01394E  0E00               	movlw	0
 10059  013950  21D5               	addwfc	(DNS_Handler@dataLength+1)& (0+255),w,b
 10060  013952  6FBB               	movwf	(??_DNS_Handler+1)& (0+255),b
 10061  013954  51BA               	movf	??_DNS_Handler& (0+255),w,b
 10062  013956  5FB8               	subwf	DNS_Handler@length& (0+255),f,b
 10063  013958  51BB               	movf	(??_DNS_Handler+1)& (0+255),w,b
 10064  01395A  5BB9               	subwfb	(DNS_Handler@length+1)& (0+255),f,b
 10065  01395C                     l1503:
 10066                           
 10067                           ;dns_client.c: 199: }
 10068                           ;dns_client.c: 205: answer--;
 10069                           
 10070                           ; BSR set to: 0
 10071  01395C  0100               	movlb	0	; () banked
 10072  01395E  07D2               	decf	DNS_Handler@answer& (0+255),f,b
 10073  013960  A0D8               	btfss	status,0,c
 10074  013962  07D3               	decf	(DNS_Handler@answer+1)& (0+255),f,b
 10075  013964                     l1500:
 10076                           
 10077                           ; BSR set to: 0
 10078                           
 10079                           ; BSR set to: 0
 10080  013964  51D2               	movf	DNS_Handler@answer& (0+255),w,b
 10081  013966  11D3               	iorwf	(DNS_Handler@answer+1)& (0+255),w,b
 10082  013968  A4D8               	btfss	status,2,c
 10083  01396A  D7B9               	goto	l1501
 10084  01396C                     u11060:
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;dns_client.c: 206: }
 10088                           ;dns_client.c: 207: }
 10089                           ;dns_client.c: 208: }
 10090                           ;dns_client.c: 210: dns_map_t *dnsPtr = dnsCache;
 10091                           
 10092                           ; BSR set to: 0
 10093                           
 10094                           ; BSR set to: 0
 10095                           
 10096                           ; BSR set to: 0
 10097  01396C  0E00               	movlw	low _dnsCache
 10098  01396E  6FD6               	movwf	DNS_Handler@dnsPtr& (0+255),b
 10099  013970  0E05               	movlw	high _dnsCache
 10100  013972  6FD7               	movwf	(DNS_Handler@dnsPtr+1)& (0+255),b
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;dns_client.c: 211: for(uint8_t x=8; x !=0; x--)
 10104  013974  0E08               	movlw	8
 10105  013976  6FD9               	movwf	DNS_Handler@x& (0+255),b
 10106  013978                     l11334:
 10107                           
 10108                           ; BSR set to: 0
 10109  013978  51D9               	movf	DNS_Handler@x& (0+255),w,b
 10110  01397A  B4D8               	btfsc	status,2,c
 10111  01397C  D024               	goto	u11090
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;dns_client.c: 212: {
 10115                           ;dns_client.c: 213: if(entryPointer->birthSecond < dnsPtr->birthSecond)
 10116                           
 10117                           ; BSR set to: 0
 10118                           
 10119                           ; BSR set to: 0
 10120  01397E  EE20 F00C          	lfsr	2,12
 10121  013982  51D6               	movf	DNS_Handler@dnsPtr& (0+255),w,b
 10122  013984  26D9               	addwf	fsr2l,f,c
 10123  013986  51D7               	movf	(DNS_Handler@dnsPtr+1)& (0+255),w,b
 10124  013988  22DA               	addwfc	fsr2h,f,c
 10125  01398A  EE10 F00C          	lfsr	1,12
 10126  01398E  51DB               	movf	DNS_Handler@entryPointer& (0+255),w,b
 10127  013990  26E1               	addwf	fsr1l,f,c
 10128  013992  51DC               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
 10129  013994  22E2               	addwfc	fsr1h,f,c
 10130  013996  50DE               	movf	postinc2,w,c
 10131  013998  5CE6               	subwf	postinc1,w,c
 10132  01399A  50DE               	movf	postinc2,w,c
 10133  01399C  58E6               	subwfb	postinc1,w,c
 10134  01399E  50DE               	movf	postinc2,w,c
 10135  0139A0  58E6               	subwfb	postinc1,w,c
 10136  0139A2  50E6               	movf	postinc1,w,c
 10137  0139A4  0A80               	xorlw	128
 10138  0139A6  6FC2               	movwf	(??_DNS_Handler+8)& (0+255),b
 10139  0139A8  50DE               	movf	postinc2,w,c
 10140  0139AA  0A80               	xorlw	128
 10141  0139AC  59C2               	subwfb	(??_DNS_Handler+8)& (0+255),w,b
 10142  0139AE  B0D8               	btfsc	status,0,c
 10143  0139B0  D004               	goto	l1510
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;dns_client.c: 214: {
 10147                           ;dns_client.c: 215: entryPointer = dnsPtr;
 10148  0139B2  C0D6  F0DB         	movff	DNS_Handler@dnsPtr,DNS_Handler@entryPointer
 10149  0139B6  C0D7  F0DC         	movff	DNS_Handler@dnsPtr+1,DNS_Handler@entryPointer+1
 10150  0139BA                     l1510:
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;dns_client.c: 216: }
 10154                           ;dns_client.c: 218: dnsPtr++;
 10155  0139BA  0E10               	movlw	16
 10156  0139BC  27D6               	addwf	DNS_Handler@dnsPtr& (0+255),f,b
 10157  0139BE  0E00               	movlw	0
 10158  0139C0  23D7               	addwfc	(DNS_Handler@dnsPtr+1)& (0+255),f,b
 10159                           
 10160                           ; BSR set to: 0
 10161  0139C2  07D9               	decf	DNS_Handler@x& (0+255),f,b
 10162  0139C4  D7D9               	goto	l11334
 10163  0139C6                     u11090:
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;dns_client.c: 219: }
 10167                           ;dns_client.c: 220: for(i = 0; i < (sizeof(dnsCache) / sizeof(*(dnsCache)));i++)
 10168                           
 10169                           ; BSR set to: 0
 10170  0139C6  0E00               	movlw	0
 10171  0139C8  6FD8               	movwf	DNS_Handler@i& (0+255),b
 10172  0139CA                     l11348:
 10173                           
 10174                           ; BSR set to: 0
 10175  0139CA  0E07               	movlw	7
 10176  0139CC  65D8               	cpfsgt	DNS_Handler@i& (0+255),b
 10177  0139CE  D001               	goto	l1511
 10178  0139D0  0012               	return	
 10179  0139D2                     l1511:
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;dns_client.c: 221: {
 10183                           ;dns_client.c: 222: if(strcmp(entryPointer->dnsName, dnsR) == 0)
 10184                           
 10185                           ; BSR set to: 0
 10186  0139D2  C0DB  FFD9         	movff	DNS_Handler@entryPointer,fsr2l
 10187  0139D6  C0DC  FFDA         	movff	DNS_Handler@entryPointer+1,fsr2h
 10188  0139DA  CFDE F013          	movff	postinc2,strcmp@s1
 10189  0139DE  CFDD F014          	movff	postdec2,strcmp@s1+1
 10190  0139E2  0E00               	movlw	low DNS_Handler@dnsR
 10191  0139E4  6E15               	movwf	strcmp@s2,c
 10192  0139E6  0E01               	movlw	high DNS_Handler@dnsR
 10193  0139E8  6E16               	movwf	strcmp@s2+1,c
 10194  0139EA  ECE4  F0B3         	call	_strcmp	;wreg free
 10195  0139EE  5013               	movf	?_strcmp,w,c
 10196  0139F0  1014               	iorwf	?_strcmp+1,w,c
 10197  0139F2  A4D8               	btfss	status,2,c
 10198  0139F4  D03A               	goto	l1513
 10199                           
 10200                           ;dns_client.c: 223: {
 10201                           ;dns_client.c: 226: entryPointer->birthSecond = time(0);
 10202  0139F6  0E00               	movlw	0
 10203  0139F8  6E13               	movwf	time@t,c
 10204  0139FA  0E00               	movlw	0
 10205  0139FC  6E14               	movwf	time@t+1,c
 10206  0139FE  ECCA  F0B2         	call	_time	;wreg free
 10207  013A02  0100               	movlb	0	; () banked
 10208  013A04  EE20 F00C          	lfsr	2,12
 10209  013A08  51DB               	movf	DNS_Handler@entryPointer& (0+255),w,b
 10210  013A0A  26D9               	addwf	fsr2l,f,c
 10211  013A0C  51DC               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
 10212  013A0E  22DA               	addwfc	fsr2h,f,c
 10213  013A10  C013  FFDE         	movff	?_time,postinc2
 10214  013A14  C014  FFDE         	movff	?_time+1,postinc2
 10215  013A18  C015  FFDE         	movff	?_time+2,postinc2
 10216  013A1C  C016  FFDE         	movff	?_time+3,postinc2
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;dns_client.c: 227: entryPointer->ipAddress = ipAddress;
 10220  013A20  EE20 F003          	lfsr	2,3
 10221  013A24  51DB               	movf	DNS_Handler@entryPointer& (0+255),w,b
 10222  013A26  26D9               	addwf	fsr2l,f,c
 10223  013A28  51DC               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
 10224  013A2A  22DA               	addwfc	fsr2h,f,c
 10225  013A2C  C0C5  FFDE         	movff	DNS_Handler@ipAddress,postinc2
 10226  013A30  C0C6  FFDE         	movff	DNS_Handler@ipAddress+1,postinc2
 10227  013A34  C0C7  FFDE         	movff	DNS_Handler@ipAddress+2,postinc2
 10228  013A38  C0C8  FFDE         	movff	DNS_Handler@ipAddress+3,postinc2
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;dns_client.c: 228: entryPointer->ttl = ttl;
 10232  013A3C  EE20 F007          	lfsr	2,7
 10233  013A40  51DB               	movf	DNS_Handler@entryPointer& (0+255),w,b
 10234  013A42  26D9               	addwf	fsr2l,f,c
 10235  013A44  51DC               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
 10236  013A46  22DA               	addwfc	fsr2h,f,c
 10237  013A48  C0C9  FFDE         	movff	DNS_Handler@ttl,postinc2
 10238  013A4C  C0CA  FFDE         	movff	DNS_Handler@ttl+1,postinc2
 10239  013A50  C0CB  FFDE         	movff	DNS_Handler@ttl+2,postinc2
 10240  013A54  C0CC  FFDE         	movff	DNS_Handler@ttl+3,postinc2
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;dns_client.c: 229: entryPointer->isValid = 1;
 10244  013A58  EE20 F00B          	lfsr	2,11
 10245  013A5C  51DB               	movf	DNS_Handler@entryPointer& (0+255),w,b
 10246  013A5E  26D9               	addwf	fsr2l,f,c
 10247  013A60  51DC               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
 10248  013A62  22DA               	addwfc	fsr2h,f,c
 10249  013A64  0E01               	movlw	1
 10250  013A66  6EDF               	movwf	indf2,c
 10251                           
 10252                           ;dns_client.c: 230: break;
 10253  013A68  0012               	return	
 10254  013A6A                     l1513:
 10255                           
 10256                           ;dns_client.c: 231: }
 10257                           ;dns_client.c: 232: entryPointer ++;
 10258                           
 10259                           ; BSR set to: 0
 10260  013A6A  0E10               	movlw	16
 10261  013A6C  0100               	movlb	0	; () banked
 10262  013A6E  27DB               	addwf	DNS_Handler@entryPointer& (0+255),f,b
 10263  013A70  0E00               	movlw	0
 10264  013A72  23DC               	addwfc	(DNS_Handler@entryPointer+1)& (0+255),f,b
 10265                           
 10266                           ; BSR set to: 0
 10267  013A74  2BD8               	incf	DNS_Handler@i& (0+255),f,b
 10268  013A76  D7A9               	goto	l11348
 10269  013A78                     __end_of_DNS_Handler:
 10270                           	opt stack 0
 10271                           tosu	equ	0xFFF
 10272                           tosh	equ	0xFFE
 10273                           tosl	equ	0xFFD
 10274                           pclath	equ	0xFFA
 10275                           tblptru	equ	0xFF8
 10276                           tblptrh	equ	0xFF7
 10277                           tblptrl	equ	0xFF6
 10278                           tablat	equ	0xFF5
 10279                           prodh	equ	0xFF4
 10280                           prodl	equ	0xFF3
 10281                           intcon	equ	0xFF2
 10282                           indf0	equ	0xFEF
 10283                           postinc0	equ	0xFEE
 10284                           fsr0h	equ	0xFEA
 10285                           fsr0l	equ	0xFE9
 10286                           wreg	equ	0xFE8
 10287                           indf1	equ	0xFE7
 10288                           postinc1	equ	0xFE6
 10289                           postdec1	equ	0xFE5
 10290                           plusw1	equ	0xFE3
 10291                           fsr1h	equ	0xFE2
 10292                           fsr1l	equ	0xFE1
 10293                           indf2	equ	0xFDF
 10294                           postinc2	equ	0xFDE
 10295                           postdec2	equ	0xFDD
 10296                           plusw2	equ	0xFDB
 10297                           fsr2h	equ	0xFDA
 10298                           fsr2l	equ	0xFD9
 10299                           status	equ	0xFD8
 10300                           
 10301 ;; *************** function _TFTP_Handler *****************
 10302 ;; Defined at:
 10303 ;;		line 143 in file "mcc_generated_files/TCPIPLibrary/tftp.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  length          2   88[BANK0 ] int 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  data          100  100[BANK1 ] unsigned char [100]
 10308 ;;  recv_buffer   100    0[BANK1 ] unsigned char [100]
 10309 ;;  v               2  203[BANK1 ] int 
 10310 ;;  block_size      2  200[BANK1 ] unsigned int 
 10311 ;;  opcode          1  202[BANK1 ] unsigned char 
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      void 
 10314 ;; Registers used:
 10315 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Locals:         0       0     205       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Totals:         0       6     205       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;Total ram usage:      211 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:   11
 10328 ;; This function calls:
 10329 ;;		_ETH_Read16
 10330 ;;		_ETH_ReadBlock
 10331 ;;		_Process_TFTP_Data
 10332 ;;		_TFTP_Ack
 10333 ;;		_atoi
 10334 ;;		_memset
 10335 ;; This function is called by:
 10336 ;;		_UDP_Receive
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text41
 10341  013D1C                     __ptext41:
 10342                           	opt stack 0
 10343  013D1C                     _TFTP_Handler:
 10344                           	opt stack 15
 10345                           
 10346                           ;tftp.c: 145: uint8_t opcode;
 10347                           ;tftp.c: 146: char data[100];
 10348                           ;tftp.c: 147: char recv_buffer[100];
 10349                           ;tftp.c: 148: uint16_t block_size;
 10350                           ;tftp.c: 149: int v;
 10351                           ;tftp.c: 151: block_size = atoi(tftp_msg.tftp_block_size);
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;incstack = 0
 10355  013D1C  0E7C               	movlw	low (_tftp_msg+4)
 10356  013D1E  6E19               	movwf	atoi@s,c
 10357  013D20  0E03               	movlw	high (_tftp_msg+4)
 10358  013D22  6E1A               	movwf	atoi@s+1,c
 10359  013D24  ECFD  F0AC         	call	_atoi	;wreg free
 10360  013D28  C019  F1C8         	movff	?_atoi,TFTP_Handler@block_size
 10361  013D2C  C01A  F1C9         	movff	?_atoi+1,TFTP_Handler@block_size+1
 10362                           
 10363                           ;tftp.c: 152: if(length > (2 + 2))
 10364  013D30  0100               	movlb	0	; () banked
 10365  013D32  BFB9               	btfsc	(TFTP_Handler@length+1)& (0+255),7,b
 10366  013D34  0012               	return	
 10367  013D36  51B9               	movf	(TFTP_Handler@length+1)& (0+255),w,b
 10368  013D38  E104               	bnz	u11650
 10369  013D3A  0E05               	movlw	5
 10370  013D3C  5DB8               	subwf	TFTP_Handler@length& (0+255),w,b
 10371  013D3E  A0D8               	btfss	status,0,c
 10372  013D40  0012               	return	
 10373  013D42                     u11650:
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;tftp.c: 153: {
 10377                           ;tftp.c: 154: opcode = ETH_Read16();
 10378  013D42  EC69  F0B4         	call	_ETH_Read16	;wreg free
 10379  013D46  5013               	movf	?_ETH_Read16,w,c
 10380  013D48  0101               	movlb	1	; () banked
 10381  013D4A  6FCA               	movwf	TFTP_Handler@opcode& (0+255),b
 10382                           
 10383                           ;tftp.c: 155: current_block = ETH_Read16();
 10384  013D4C  EC69  F0B4         	call	_ETH_Read16	;wreg free
 10385  013D50  C013  F03B         	movff	?_ETH_Read16,_current_block
 10386  013D54  C014  F03C         	movff	?_ETH_Read16+1,_current_block+1
 10387                           
 10388                           ;tftp.c: 156: if(opcode == tftp_optack)
 10389  013D58  0E06               	movlw	6
 10390  013D5A  0101               	movlb	1	; () banked
 10391  013D5C  19CA               	xorwf	TFTP_Handler@opcode& (0+255),w,b
 10392  013D5E  A4D8               	btfss	status,2,c
 10393  013D60  D007               	goto	l1993
 10394                           
 10395                           ; BSR set to: 1
 10396                           ;tftp.c: 157: {
 10397                           ;tftp.c: 158: current_block = 0;
 10398  013D62  0E00               	movlw	0
 10399  013D64  6E3C               	movwf	_current_block+1,c
 10400  013D66  0E00               	movlw	0
 10401  013D68  6E3B               	movwf	_current_block,c
 10402                           
 10403                           ; BSR set to: 1
 10404                           ;tftp.c: 159: TFTP_Ack(TFTP_ACK);
 10405  013D6A  0E04               	movlw	4
 10406  013D6C  ECD9  F0B0         	call	_TFTP_Ack
 10407  013D70                     l1993:
 10408                           
 10409                           ;tftp.c: 160: }
 10410                           ;tftp.c: 161: if(current_block == prev_block+1)
 10411  013D70  0E01               	movlw	1
 10412  013D72  0102               	movlb	2	; () banked
 10413  013D74  2544               	addwf	_prev_block& (0+255),w,b
 10414  013D76  0100               	movlb	0	; () banked
 10415  013D78  6FBA               	movwf	??_TFTP_Handler& (0+255),b
 10416  013D7A  0E00               	movlw	0
 10417  013D7C  0102               	movlb	2	; () banked
 10418  013D7E  2145               	addwfc	(_prev_block+1)& (0+255),w,b
 10419  013D80  0100               	movlb	0	; () banked
 10420  013D82  6FBB               	movwf	(??_TFTP_Handler+1)& (0+255),b
 10421  013D84  503B               	movf	_current_block,w,c
 10422  013D86  19BA               	xorwf	??_TFTP_Handler& (0+255),w,b
 10423  013D88  E103               	bnz	u11671
 10424  013D8A  503C               	movf	_current_block+1,w,c
 10425  013D8C  19BB               	xorwf	(??_TFTP_Handler+1)& (0+255),w,b
 10426  013D8E  A4D8               	btfss	status,2,c
 10427  013D90                     u11671:
 10428  013D90  D0C3               	goto	l1994
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;tftp.c: 162: {
 10432                           ;tftp.c: 163: next_block = current_block + 1;
 10433  013D92  0E01               	movlw	1
 10434  013D94  243B               	addwf	_current_block,w,c
 10435  013D96  0102               	movlb	2	; () banked
 10436  013D98  6F42               	movwf	_next_block& (0+255),b
 10437  013D9A  0E00               	movlw	0
 10438  013D9C  203C               	addwfc	_current_block+1,w,c
 10439  013D9E  6F43               	movwf	(_next_block+1)& (0+255),b
 10440                           
 10441                           ;tftp.c: 164: length = length - 4;
 10442  013DA0  0EFC               	movlw	252
 10443  013DA2  0100               	movlb	0	; () banked
 10444  013DA4  25B8               	addwf	TFTP_Handler@length& (0+255),w,b
 10445  013DA6  6FB8               	movwf	TFTP_Handler@length& (0+255),b
 10446  013DA8  0EFF               	movlw	255
 10447  013DAA  21B9               	addwfc	(TFTP_Handler@length+1)& (0+255),w,b
 10448  013DAC  6FB9               	movwf	(TFTP_Handler@length+1)& (0+255),b
 10449                           
 10450                           ;tftp.c: 165: if((length <block_size) && (opcode == TFTP_DATA))
 10451  013DAE  0101               	movlb	1	; () banked
 10452  013DB0  51C8               	movf	TFTP_Handler@block_size& (0+255),w,b
 10453  013DB2  0100               	movlb	0	; () banked
 10454  013DB4  5DB8               	subwf	TFTP_Handler@length& (0+255),w,b
 10455  013DB6  0101               	movlb	1	; () banked
 10456  013DB8  51C9               	movf	(TFTP_Handler@block_size+1)& (0+255),w,b
 10457  013DBA  0100               	movlb	0	; () banked
 10458  013DBC  59B9               	subwfb	(TFTP_Handler@length+1)& (0+255),w,b
 10459  013DBE  B0D8               	btfsc	status,0,c
 10460  013DC0  D099               	goto	l1996
 10461                           
 10462                           ; BSR set to: 0
 10463  013DC2  0E03               	movlw	3
 10464  013DC4  0101               	movlb	1	; () banked
 10465  013DC6  19CA               	xorwf	TFTP_Handler@opcode& (0+255),w,b
 10466  013DC8  A4D8               	btfss	status,2,c
 10467  013DCA  D094               	goto	l1996
 10468                           
 10469                           ; BSR set to: 1
 10470                           ;tftp.c: 166: {
 10471                           ;tftp.c: 167: last_block = 1;
 10472  013DCC  0E01               	movlw	1
 10473  013DCE  0102               	movlb	2	; () banked
 10474  013DD0  6F56               	movwf	_last_block& (0+255),b	;volatile
 10475                           
 10476                           ; BSR set to: 2
 10477                           ;tftp.c: 168: }
 10478                           ;tftp.c: 169: switch(opcode)
 10479  013DD2  D090               	goto	l1996
 10480  013DD4                     
 10481                           ;tftp.c: 174: current_block = 0;
 10482                           
 10483                           ; BSR set to: 2
 10484  013DD4  0E00               	movlw	0
 10485  013DD6  6E3C               	movwf	_current_block+1,c
 10486  013DD8  0E00               	movlw	0
 10487  013DDA  6E3B               	movwf	_current_block,c
 10488                           
 10489                           ;tftp.c: 175: TFTP_Ack(TFTP_ACK);
 10490  013DDC  0E04               	movlw	4
 10491  013DDE  ECD9  F0B0         	call	_TFTP_Ack
 10492                           
 10493                           ;tftp.c: 176: break;
 10494  013DE2  0012               	return	
 10495  013DE4                     l11870:
 10496                           
 10497                           ;tftp.c: 180: {
 10498                           ;tftp.c: 181: v = (length>100)?100:length;
 10499  013DE4  0100               	movlb	0	; () banked
 10500  013DE6  BFB9               	btfsc	(TFTP_Handler@length+1)& (0+255),7,b
 10501  013DE8  D006               	goto	u11700
 10502  013DEA  51B9               	movf	(TFTP_Handler@length+1)& (0+255),w,b
 10503  013DEC  E109               	bnz	l11874
 10504  013DEE  0E65               	movlw	101
 10505  013DF0  5DB8               	subwf	TFTP_Handler@length& (0+255),w,b
 10506  013DF2  B0D8               	btfsc	status,0,c
 10507  013DF4  D005               	goto	l2004
 10508  013DF6                     u11700:
 10509                           
 10510                           ; BSR set to: 0
 10511  013DF6  C0B8  F1CB         	movff	TFTP_Handler@length,TFTP_Handler@v
 10512  013DFA  C0B9  F1CC         	movff	TFTP_Handler@length+1,TFTP_Handler@v+1
 10513  013DFE  D005               	goto	l2006
 10514  013E00                     l2004:
 10515  013E00                     l11874:
 10516                           
 10517                           ; BSR set to: 0
 10518  013E00  0E00               	movlw	0
 10519  013E02  0101               	movlb	1	; () banked
 10520  013E04  6FCC               	movwf	(TFTP_Handler@v+1)& (0+255),b
 10521  013E06  0E64               	movlw	100
 10522  013E08  6FCB               	movwf	TFTP_Handler@v& (0+255),b
 10523  013E0A                     l2006:
 10524                           
 10525                           ;tftp.c: 182: memset(data,0,sizeof(data));
 10526                           
 10527                           ; BSR set to: 1
 10528  013E0A  0E64               	movlw	low TFTP_Handler@data
 10529  013E0C  6E13               	movwf	memset@p1,c
 10530  013E0E  0E01               	movlw	high TFTP_Handler@data
 10531  013E10  6E14               	movwf	memset@p1+1,c
 10532  013E12  0E00               	movlw	0
 10533  013E14  6E16               	movwf	memset@c+1,c
 10534  013E16  0E00               	movlw	0
 10535  013E18  6E15               	movwf	memset@c,c
 10536  013E1A  0E00               	movlw	0
 10537  013E1C  6E18               	movwf	memset@n+1,c
 10538  013E1E  0E64               	movlw	100
 10539  013E20  6E17               	movwf	memset@n,c
 10540  013E22  ECA3  F0B5         	call	_memset	;wreg free
 10541                           
 10542                           ;tftp.c: 183: memset(recv_buffer,0,sizeof(recv_buffer));
 10543  013E26  0E00               	movlw	low TFTP_Handler@recv_buffer
 10544  013E28  6E13               	movwf	memset@p1,c
 10545  013E2A  0E01               	movlw	high TFTP_Handler@recv_buffer
 10546  013E2C  6E14               	movwf	memset@p1+1,c
 10547  013E2E  0E00               	movlw	0
 10548  013E30  6E16               	movwf	memset@c+1,c
 10549  013E32  0E00               	movlw	0
 10550  013E34  6E15               	movwf	memset@c,c
 10551  013E36  0E00               	movlw	0
 10552  013E38  6E18               	movwf	memset@n+1,c
 10553  013E3A  0E64               	movlw	100
 10554  013E3C  6E17               	movwf	memset@n,c
 10555  013E3E  ECA3  F0B5         	call	_memset	;wreg free
 10556                           
 10557                           ;tftp.c: 184: ETH_ReadBlock(data,v);
 10558  013E42  0E64               	movlw	low TFTP_Handler@data
 10559  013E44  6E13               	movwf	ETH_ReadBlock@buffer,c
 10560  013E46  0E01               	movlw	high TFTP_Handler@data
 10561  013E48  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 10562  013E4A  C1CB  F015         	movff	TFTP_Handler@v,ETH_ReadBlock@length
 10563  013E4E  C1CC  F016         	movff	TFTP_Handler@v+1,ETH_ReadBlock@length+1
 10564  013E52  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
 10565                           
 10566                           ;tftp.c: 185: Process_TFTP_Data(tftp_last_address, data, v);
 10567  013E56  C2BD  F013         	movff	_tftp_last_address,Process_TFTP_Data@address
 10568  013E5A  C2BE  F014         	movff	_tftp_last_address+1,Process_TFTP_Data@address+1
 10569  013E5E  C2BF  F015         	movff	_tftp_last_address+2,Process_TFTP_Data@address+2
 10570  013E62  C2C0  F016         	movff	_tftp_last_address+3,Process_TFTP_Data@address+3
 10571  013E66  0E64               	movlw	low TFTP_Handler@data
 10572  013E68  6E17               	movwf	Process_TFTP_Data@data,c
 10573  013E6A  0E01               	movlw	high TFTP_Handler@data
 10574  013E6C  6E18               	movwf	Process_TFTP_Data@data+1,c
 10575  013E6E  C1CB  F019         	movff	TFTP_Handler@v,Process_TFTP_Data@length
 10576  013E72  C1CC  F01A         	movff	TFTP_Handler@v+1,Process_TFTP_Data@length+1
 10577  013E76  EC41  F0B7         	call	_Process_TFTP_Data	;wreg free
 10578                           
 10579                           ;tftp.c: 186: tftp_last_address = tftp_last_address + v;
 10580  013E7A  C1CB  F0BA         	movff	TFTP_Handler@v,??_TFTP_Handler
 10581  013E7E  C1CC  F0BB         	movff	TFTP_Handler@v+1,??_TFTP_Handler+1
 10582  013E82  0E00               	movlw	0
 10583  013E84  0100               	movlb	0	; () banked
 10584  013E86  BFBB               	btfsc	(??_TFTP_Handler+1)& (0+255),7,b
 10585  013E88  0EFF               	movlw	255
 10586  013E8A  6FBC               	movwf	(??_TFTP_Handler+2)& (0+255),b
 10587  013E8C  6FBD               	movwf	(??_TFTP_Handler+3)& (0+255),b
 10588  013E8E  0102               	movlb	2	; () banked
 10589  013E90  51BD               	movf	_tftp_last_address& (0+255),w,b
 10590  013E92  0100               	movlb	0	; () banked
 10591  013E94  25BA               	addwf	??_TFTP_Handler& (0+255),w,b
 10592  013E96  0102               	movlb	2	; () banked
 10593  013E98  6FBD               	movwf	_tftp_last_address& (0+255),b
 10594  013E9A  51BE               	movf	(_tftp_last_address+1)& (0+255),w,b
 10595  013E9C  0100               	movlb	0	; () banked
 10596  013E9E  21BB               	addwfc	(??_TFTP_Handler+1)& (0+255),w,b
 10597  013EA0  0102               	movlb	2	; () banked
 10598  013EA2  6FBE               	movwf	(_tftp_last_address+1)& (0+255),b
 10599  013EA4  51BF               	movf	(_tftp_last_address+2)& (0+255),w,b
 10600  013EA6  0100               	movlb	0	; () banked
 10601  013EA8  21BC               	addwfc	(??_TFTP_Handler+2)& (0+255),w,b
 10602  013EAA  0102               	movlb	2	; () banked
 10603  013EAC  6FBF               	movwf	(_tftp_last_address+2)& (0+255),b
 10604  013EAE  51C0               	movf	(_tftp_last_address+3)& (0+255),w,b
 10605  013EB0  0100               	movlb	0	; () banked
 10606  013EB2  21BD               	addwfc	(??_TFTP_Handler+3)& (0+255),w,b
 10607  013EB4  0102               	movlb	2	; () banked
 10608  013EB6  6FC0               	movwf	(_tftp_last_address+3)& (0+255),b
 10609                           
 10610                           ; BSR set to: 2
 10611                           ;tftp.c: 187: length -= v;
 10612  013EB8  0101               	movlb	1	; () banked
 10613  013EBA  51CB               	movf	TFTP_Handler@v& (0+255),w,b
 10614  013EBC  0100               	movlb	0	; () banked
 10615  013EBE  5FB8               	subwf	TFTP_Handler@length& (0+255),f,b
 10616  013EC0  0101               	movlb	1	; () banked
 10617  013EC2  51CC               	movf	(TFTP_Handler@v+1)& (0+255),w,b
 10618  013EC4  0100               	movlb	0	; () banked
 10619  013EC6  5BB9               	subwfb	(TFTP_Handler@length+1)& (0+255),f,b
 10620  013EC8                     
 10621                           ; BSR set to: 0
 10622  013EC8  0100               	movlb	0	; () banked
 10623  013ECA  BFB9               	btfsc	(TFTP_Handler@length+1)& (0+255),7,b
 10624  013ECC  D005               	goto	u11710
 10625  013ECE  51B9               	movf	(TFTP_Handler@length+1)& (0+255),w,b
 10626  013ED0  E189               	bnz	l11870
 10627  013ED2  05B8               	decf	TFTP_Handler@length& (0+255),w,b
 10628  013ED4  B0D8               	btfsc	status,0,c
 10629  013ED6  D786               	goto	l2002
 10630  013ED8                     u11710:
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;tftp.c: 188: }
 10634                           ;tftp.c: 189: TFTP_Ack(TFTP_ACK);
 10635                           
 10636                           ; BSR set to: 0
 10637  013ED8  0E04               	movlw	4
 10638  013EDA  ECD9  F0B0         	call	_TFTP_Ack
 10639                           
 10640                           ;tftp.c: 190: prev_block = current_block;
 10641  013EDE  C03B  F244         	movff	_current_block,_prev_block
 10642  013EE2  C03C  F245         	movff	_current_block+1,_prev_block+1
 10643                           
 10644                           ;tftp.c: 193: break;
 10645                           
 10646                           ;tftp.c: 192: case tftp_ack:
 10647                           
 10648                           ;tftp.c: 191: break;
 10649  013EE6  0012               	return	
 10650  013EE8                     
 10651                           ;tftp.c: 195: length = 0;
 10652  013EE8  0E00               	movlw	0
 10653  013EEA  0100               	movlb	0	; () banked
 10654  013EEC  6FB9               	movwf	(TFTP_Handler@length+1)& (0+255),b
 10655  013EEE  0E00               	movlw	0
 10656  013EF0  6FB8               	movwf	TFTP_Handler@length& (0+255),b
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;tftp.c: 198: }
 10660                           
 10661                           ;tftp.c: 196: break;
 10662  013EF2  0012               	return	
 10663  013EF4                     l1996:
 10664                           
 10665                           ; BSR set to: 0
 10666  013EF4  0101               	movlb	1	; () banked
 10667  013EF6  51CA               	movf	TFTP_Handler@opcode& (0+255),w,b
 10668                           
 10669                           ; Switch size 1, requested type "space"
 10670                           ; Number of cases is 5, Range of values is 1 to 5
 10671                           ; switch strategies available:
 10672                           ; Name         Instructions Cycles
 10673                           ; simple_byte           16     9 (average)
 10674                           ;	Chosen strategy is simple_byte
 10675  013EF8  0A01               	xorlw	1	; case 1
 10676  013EFA  B4D8               	btfsc	status,2,c
 10677  013EFC  0012               	return	
 10678  013EFE  0A03               	xorlw	3	; case 2
 10679  013F00  B4D8               	btfsc	status,2,c
 10680  013F02  D768               	goto	l1999
 10681  013F04  0A01               	xorlw	1	; case 3
 10682  013F06  B4D8               	btfsc	status,2,c
 10683  013F08  D7DF               	goto	l2001
 10684  013F0A  0A07               	xorlw	7	; case 4
 10685  013F0C  B4D8               	btfsc	status,2,c
 10686  013F0E  0012               	return	
 10687  013F10  0A01               	xorlw	1	; case 5
 10688  013F12  A4D8               	btfss	status,2,c
 10689                           
 10690                           ; BSR set to: 1
 10691                           ;tftp.c: 199: }
 10692  013F14  0012               	return	
 10693  013F16  D7E8               	goto	l2009
 10694  013F18                     l1994:
 10695                           
 10696                           ;tftp.c: 200: else if(current_block < prev_block)
 10697                           
 10698                           ; BSR set to: 1
 10699  013F18  0102               	movlb	2	; () banked
 10700  013F1A  5144               	movf	_prev_block& (0+255),w,b
 10701  013F1C  5C3B               	subwf	_current_block,w,c
 10702  013F1E  5145               	movf	(_prev_block+1)& (0+255),w,b
 10703  013F20  583C               	subwfb	_current_block+1,w,c
 10704  013F22  B0D8               	btfsc	status,0,c
 10705  013F24  D009               	goto	l2011
 10706                           
 10707                           ; BSR set to: 2
 10708                           ;tftp.c: 201: {
 10709                           ;tftp.c: 202: TFTP_Ack(TFTP_ACK);
 10710  013F26  0E04               	movlw	4
 10711  013F28  ECD9  F0B0         	call	_TFTP_Ack
 10712                           
 10713                           ;tftp.c: 203: length=0;
 10714  013F2C  0E00               	movlw	0
 10715  013F2E  0100               	movlb	0	; () banked
 10716  013F30  6FB9               	movwf	(TFTP_Handler@length+1)& (0+255),b
 10717  013F32  0E00               	movlw	0
 10718  013F34  6FB8               	movwf	TFTP_Handler@length& (0+255),b
 10719                           
 10720                           ;tftp.c: 205: }
 10721  013F36  0012               	return	
 10722  013F38                     l2011:
 10723                           
 10724                           ;tftp.c: 206: else if(current_block > prev_block+1)
 10725                           
 10726                           ; BSR set to: 0
 10727  013F38  0E01               	movlw	1
 10728  013F3A  0102               	movlb	2	; () banked
 10729  013F3C  2544               	addwf	_prev_block& (0+255),w,b
 10730  013F3E  0100               	movlb	0	; () banked
 10731  013F40  6FBA               	movwf	??_TFTP_Handler& (0+255),b
 10732  013F42  0E00               	movlw	0
 10733  013F44  0102               	movlb	2	; () banked
 10734  013F46  2145               	addwfc	(_prev_block+1)& (0+255),w,b
 10735  013F48  0100               	movlb	0	; () banked
 10736  013F4A  6FBB               	movwf	(??_TFTP_Handler+1)& (0+255),b
 10737  013F4C  503B               	movf	_current_block,w,c
 10738  013F4E  5DBA               	subwf	??_TFTP_Handler& (0+255),w,b
 10739  013F50  503C               	movf	_current_block+1,w,c
 10740  013F52  59BB               	subwfb	(??_TFTP_Handler+1)& (0+255),w,b
 10741  013F54  B0D8               	btfsc	status,0,c
 10742  013F56  0012               	return	
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;tftp.c: 207: {
 10746                           ;tftp.c: 208: length=0;
 10747  013F58  0E00               	movlw	0
 10748  013F5A  6FB9               	movwf	(TFTP_Handler@length+1)& (0+255),b
 10749  013F5C  0E00               	movlw	0
 10750  013F5E  6FB8               	movwf	TFTP_Handler@length& (0+255),b
 10751                           
 10752                           ; BSR set to: 0
 10753                           
 10754                           ; BSR set to: 0
 10755                           
 10756                           ; BSR set to: 0
 10757  013F60  0012               	return	
 10758  013F62                     __end_of_TFTP_Handler:
 10759                           	opt stack 0
 10760                           tosu	equ	0xFFF
 10761                           tosh	equ	0xFFE
 10762                           tosl	equ	0xFFD
 10763                           pclath	equ	0xFFA
 10764                           tblptru	equ	0xFF8
 10765                           tblptrh	equ	0xFF7
 10766                           tblptrl	equ	0xFF6
 10767                           tablat	equ	0xFF5
 10768                           prodh	equ	0xFF4
 10769                           prodl	equ	0xFF3
 10770                           intcon	equ	0xFF2
 10771                           indf0	equ	0xFEF
 10772                           postinc0	equ	0xFEE
 10773                           fsr0h	equ	0xFEA
 10774                           fsr0l	equ	0xFE9
 10775                           wreg	equ	0xFE8
 10776                           indf1	equ	0xFE7
 10777                           postinc1	equ	0xFE6
 10778                           postdec1	equ	0xFE5
 10779                           plusw1	equ	0xFE3
 10780                           fsr1h	equ	0xFE2
 10781                           fsr1l	equ	0xFE1
 10782                           indf2	equ	0xFDF
 10783                           postinc2	equ	0xFDE
 10784                           postdec2	equ	0xFDD
 10785                           plusw2	equ	0xFDB
 10786                           fsr2h	equ	0xFDA
 10787                           fsr2l	equ	0xFD9
 10788                           status	equ	0xFD8
 10789                           
 10790 ;; *************** function _memset *****************
 10791 ;; Defined at:
 10792 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\memset.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;  p1              2   18[COMRAM] PTR void 
 10795 ;;		 -> TFTP_Handler@recv_buffer(100), TFTP_Handler@data(100), dnsCache(128), 
 10796 ;;  c               2   20[COMRAM] int 
 10797 ;;  n               2   22[COMRAM] unsigned int 
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;  p               2   24[COMRAM] PTR unsigned char 
 10800 ;;		 -> TFTP_Handler@recv_buffer(100), TFTP_Handler@data(100), dnsCache(128), 
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  2   18[COMRAM] PTR void 
 10803 ;; Registers used:
 10804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10810 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10814 ;;Total ram usage:        8 bytes
 10815 ;; Hardware stack levels used:    1
 10816 ;; Hardware stack levels required when called:    4
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_TFTP_Handler
 10821 ;;		_DNS_Init
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text42
 10826  016B46                     __ptext42:
 10827                           	opt stack 0
 10828  016B46                     _memset:
 10829                           	opt stack 21
 10830                           
 10831                           ;incstack = 0
 10832  016B46  C013  F019         	movff	memset@p1,memset@p
 10833  016B4A  C014  F01A         	movff	memset@p1+1,memset@p+1
 10834  016B4E  D008               	goto	l2577
 10835  016B50                     l10898:
 10836  016B50  C019  FFD9         	movff	memset@p,fsr2l
 10837  016B54  C01A  FFDA         	movff	memset@p+1,fsr2h
 10838  016B58  C015  FFDF         	movff	memset@c,indf2
 10839  016B5C  4A19               	infsnz	memset@p,f,c
 10840  016B5E  2A1A               	incf	memset@p+1,f,c
 10841  016B60                     l2577:
 10842  016B60  0617               	decf	memset@n,f,c
 10843  016B62  A0D8               	btfss	status,0,c
 10844  016B64  0618               	decf	memset@n+1,f,c
 10845  016B66  2817               	incf	memset@n,w,c
 10846  016B68  E1F3               	bnz	l10898
 10847  016B6A  2818               	incf	memset@n+1,w,c
 10848  016B6C  B4D8               	btfsc	status,2,c
 10849  016B6E  0012               	return	
 10850  016B70  D7EF               	goto	l2578
 10851  016B72                     __end_of_memset:
 10852                           	opt stack 0
 10853                           tosu	equ	0xFFF
 10854                           tosh	equ	0xFFE
 10855                           tosl	equ	0xFFD
 10856                           pclath	equ	0xFFA
 10857                           tblptru	equ	0xFF8
 10858                           tblptrh	equ	0xFF7
 10859                           tblptrl	equ	0xFF6
 10860                           tablat	equ	0xFF5
 10861                           prodh	equ	0xFF4
 10862                           prodl	equ	0xFF3
 10863                           intcon	equ	0xFF2
 10864                           indf0	equ	0xFEF
 10865                           postinc0	equ	0xFEE
 10866                           fsr0h	equ	0xFEA
 10867                           fsr0l	equ	0xFE9
 10868                           wreg	equ	0xFE8
 10869                           indf1	equ	0xFE7
 10870                           postinc1	equ	0xFE6
 10871                           postdec1	equ	0xFE5
 10872                           plusw1	equ	0xFE3
 10873                           fsr1h	equ	0xFE2
 10874                           fsr1l	equ	0xFE1
 10875                           indf2	equ	0xFDF
 10876                           postinc2	equ	0xFDE
 10877                           postdec2	equ	0xFDD
 10878                           plusw2	equ	0xFDB
 10879                           fsr2h	equ	0xFDA
 10880                           fsr2l	equ	0xFD9
 10881                           status	equ	0xFD8
 10882                           
 10883 ;; *************** function _atoi *****************
 10884 ;; Defined at:
 10885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\atoi.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  s               2   24[COMRAM] PTR const unsigned char 
 10888 ;;		 -> tftp_msg.tftp_block_size(5), tftp_msg(41), NULL(0), 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  a               2   29[COMRAM] int 
 10891 ;;  sign            1   28[COMRAM] unsigned char 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  2   24[COMRAM] int 
 10894 ;; Registers used:
 10895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;Total ram usage:        7 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    5
 10908 ;; This function calls:
 10909 ;;		___wmul
 10910 ;;		_isdigit
 10911 ;; This function is called by:
 10912 ;;		_TFTP_Handler
 10913 ;;		_makeStrToIpv4Address
 10914 ;; This function uses a non-reentrant model
 10915 ;;
 10916                           
 10917                           	psect	text43
 10918  0159FA                     __ptext43:
 10919                           	opt stack 0
 10920  0159FA                     _atoi:
 10921                           	opt stack 20
 10922                           
 10923                           ;incstack = 0
 10924  0159FA  D002               	goto	l2280
 10925  0159FC  4A19               	infsnz	atoi@s,f,c
 10926  0159FE  2A1A               	incf	atoi@s+1,f,c
 10927  015A00                     l2280:
 10928  015A00  C019  FFD9         	movff	atoi@s,fsr2l
 10929  015A04  C01A  FFDA         	movff	atoi@s+1,fsr2h
 10930  015A08  0E20               	movlw	32
 10931  015A0A  18DE               	xorwf	postinc2,w,c
 10932  015A0C  B4D8               	btfsc	status,2,c
 10933  015A0E  D7F6               	goto	l2281
 10934  015A10  C019  FFD9         	movff	atoi@s,fsr2l
 10935  015A14  C01A  FFDA         	movff	atoi@s+1,fsr2h
 10936  015A18  0E09               	movlw	9
 10937  015A1A  18DE               	xorwf	postinc2,w,c
 10938  015A1C  B4D8               	btfsc	status,2,c
 10939  015A1E  D7EE               	goto	l2281
 10940  015A20  0E00               	movlw	0
 10941  015A22  6E1F               	movwf	atoi@a+1,c
 10942  015A24  0E00               	movlw	0
 10943  015A26  6E1E               	movwf	atoi@a,c
 10944  015A28  0E00               	movlw	0
 10945  015A2A  6E1D               	movwf	atoi@sign,c
 10946  015A2C  C019  FFD9         	movff	atoi@s,fsr2l
 10947  015A30  C01A  FFDA         	movff	atoi@s+1,fsr2h
 10948  015A34  0E2D               	movlw	45
 10949  015A36  18DE               	xorwf	postinc2,w,c
 10950  015A38  A4D8               	btfss	status,2,c
 10951  015A3A  D002               	goto	l2283
 10952  015A3C  2A1D               	incf	atoi@sign,f,c
 10953  015A3E  D024               	goto	l10822
 10954  015A40                     l2283:
 10955  015A40  C019  FFD9         	movff	atoi@s,fsr2l
 10956  015A44  C01A  FFDA         	movff	atoi@s+1,fsr2h
 10957  015A48  0E2B               	movlw	43
 10958  015A4A  18DE               	xorwf	postinc2,w,c
 10959  015A4C  A4D8               	btfss	status,2,c
 10960  015A4E  D01E               	goto	l2286
 10961  015A50  D01B               	goto	l10822
 10962  015A52  C01E  F013         	movff	atoi@a,___wmul@multiplier
 10963  015A56  C01F  F014         	movff	atoi@a+1,___wmul@multiplier+1
 10964  015A5A  0E00               	movlw	0
 10965  015A5C  6E16               	movwf	___wmul@multiplicand+1,c
 10966  015A5E  0E0A               	movlw	10
 10967  015A60  6E15               	movwf	___wmul@multiplicand,c
 10968  015A62  EC4A  F0B6         	call	___wmul	;wreg free
 10969  015A66  C019  FFD9         	movff	atoi@s,fsr2l
 10970  015A6A  C01A  FFDA         	movff	atoi@s+1,fsr2h
 10971  015A6E  50DF               	movf	indf2,w,c
 10972  015A70  6E1B               	movwf	??_atoi& (0+255),c
 10973  015A72  6A1C               	clrf	(??_atoi+1)& (0+255),c
 10974  015A74  5013               	movf	?___wmul,w,c
 10975  015A76  261B               	addwf	??_atoi,f,c
 10976  015A78  5014               	movf	?___wmul+1,w,c
 10977  015A7A  221C               	addwfc	??_atoi+1,f,c
 10978  015A7C  0ED0               	movlw	208
 10979  015A7E  241B               	addwf	??_atoi,w,c
 10980  015A80  6E1E               	movwf	atoi@a,c
 10981  015A82  0EFF               	movlw	255
 10982  015A84  201C               	addwfc	??_atoi+1,w,c
 10983  015A86  6E1F               	movwf	atoi@a+1,c
 10984  015A88                     l10822:
 10985  015A88  4A19               	infsnz	atoi@s,f,c
 10986  015A8A  2A1A               	incf	atoi@s+1,f,c
 10987  015A8C                     l2286:
 10988  015A8C  C019  FFD9         	movff	atoi@s,fsr2l
 10989  015A90  C01A  FFDA         	movff	atoi@s+1,fsr2h
 10990  015A94  50DF               	movf	indf2,w,c
 10991  015A96  ECB4  F0B6         	call	_isdigit
 10992  015A9A  B0D8               	btfsc	status,0,c
 10993  015A9C  D7DA               	goto	l2287
 10994  015A9E  501D               	movf	atoi@sign,w,c
 10995  015AA0  B4D8               	btfsc	status,2,c
 10996  015AA2  D00D               	goto	l2289
 10997  015AA4  C01E  F01B         	movff	atoi@a,??_atoi
 10998  015AA8  C01F  F01C         	movff	atoi@a+1,??_atoi+1
 10999  015AAC  1E1B               	comf	??_atoi,f,c
 11000  015AAE  1E1C               	comf	??_atoi+1,f,c
 11001  015AB0  4A1B               	infsnz	??_atoi,f,c
 11002  015AB2  2A1C               	incf	??_atoi+1,f,c
 11003  015AB4  C01B  F019         	movff	??_atoi,?_atoi
 11004  015AB8  C01C  F01A         	movff	??_atoi+1,?_atoi+1
 11005  015ABC  0012               	return	
 11006  015ABE                     l2289:
 11007  015ABE  C01E  F019         	movff	atoi@a,?_atoi
 11008  015AC2  C01F  F01A         	movff	atoi@a+1,?_atoi+1
 11009  015AC6  0012               	return		;funcret
 11010  015AC8                     __end_of_atoi:
 11011                           	opt stack 0
 11012                           tosu	equ	0xFFF
 11013                           tosh	equ	0xFFE
 11014                           tosl	equ	0xFFD
 11015                           pclath	equ	0xFFA
 11016                           tblptru	equ	0xFF8
 11017                           tblptrh	equ	0xFF7
 11018                           tblptrl	equ	0xFF6
 11019                           tablat	equ	0xFF5
 11020                           prodh	equ	0xFF4
 11021                           prodl	equ	0xFF3
 11022                           intcon	equ	0xFF2
 11023                           indf0	equ	0xFEF
 11024                           postinc0	equ	0xFEE
 11025                           fsr0h	equ	0xFEA
 11026                           fsr0l	equ	0xFE9
 11027                           wreg	equ	0xFE8
 11028                           indf1	equ	0xFE7
 11029                           postinc1	equ	0xFE6
 11030                           postdec1	equ	0xFE5
 11031                           plusw1	equ	0xFE3
 11032                           fsr1h	equ	0xFE2
 11033                           fsr1l	equ	0xFE1
 11034                           indf2	equ	0xFDF
 11035                           postinc2	equ	0xFDE
 11036                           postdec2	equ	0xFDD
 11037                           plusw2	equ	0xFDB
 11038                           fsr2h	equ	0xFDA
 11039                           fsr2l	equ	0xFD9
 11040                           status	equ	0xFD8
 11041                           
 11042 ;; *************** function _isdigit *****************
 11043 ;; Defined at:
 11044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\isdigit.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  c               1    wreg     unsigned char 
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;  c               1   20[COMRAM] unsigned char 
 11049 ;; Return value:  Size  Location     Type
 11050 ;;		None               void
 11051 ;; Registers used:
 11052 ;;		wreg, status,2, status,0
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11062 ;;Total ram usage:        3 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:    4
 11065 ;; This function calls:
 11066 ;;		Nothing
 11067 ;; This function is called by:
 11068 ;;		__doprnt
 11069 ;;		_atoi
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           	psect	text44
 11074  016D68                     __ptext44:
 11075                           	opt stack 0
 11076  016D68                     _isdigit:
 11077                           	opt stack 21
 11078                           
 11079                           ;incstack = 0
 11080                           ;isdigit@c stored from wreg
 11081  016D68  6E15               	movwf	isdigit@c,c
 11082  016D6A  0E00               	movlw	0
 11083  016D6C  6E14               	movwf	_isdigit$4939,c
 11084  016D6E  0E3A               	movlw	58
 11085  016D70  6015               	cpfslt	isdigit@c,c
 11086  016D72  D005               	goto	l2461
 11087  016D74  0E2F               	movlw	47
 11088  016D76  6415               	cpfsgt	isdigit@c,c
 11089  016D78  D002               	goto	l2461
 11090  016D7A  0E01               	movlw	1
 11091  016D7C  6E14               	movwf	_isdigit$4939,c
 11092  016D7E                     l2461:
 11093  016D7E  C014  F013         	movff	_isdigit$4939,??_isdigit
 11094  016D82  3013               	rrcf	??_isdigit,w,c
 11095  016D84  0012               	return	
 11096  016D86                     __end_of_isdigit:
 11097                           	opt stack 0
 11098                           tosu	equ	0xFFF
 11099                           tosh	equ	0xFFE
 11100                           tosl	equ	0xFFD
 11101                           pclath	equ	0xFFA
 11102                           tblptru	equ	0xFF8
 11103                           tblptrh	equ	0xFF7
 11104                           tblptrl	equ	0xFF6
 11105                           tablat	equ	0xFF5
 11106                           prodh	equ	0xFF4
 11107                           prodl	equ	0xFF3
 11108                           intcon	equ	0xFF2
 11109                           indf0	equ	0xFEF
 11110                           postinc0	equ	0xFEE
 11111                           fsr0h	equ	0xFEA
 11112                           fsr0l	equ	0xFE9
 11113                           wreg	equ	0xFE8
 11114                           indf1	equ	0xFE7
 11115                           postinc1	equ	0xFE6
 11116                           postdec1	equ	0xFE5
 11117                           plusw1	equ	0xFE3
 11118                           fsr1h	equ	0xFE2
 11119                           fsr1l	equ	0xFE1
 11120                           indf2	equ	0xFDF
 11121                           postinc2	equ	0xFDE
 11122                           postdec2	equ	0xFDD
 11123                           plusw2	equ	0xFDB
 11124                           fsr2h	equ	0xFDA
 11125                           fsr2l	equ	0xFD9
 11126                           status	equ	0xFD8
 11127                           
 11128 ;; *************** function _TFTP_Ack *****************
 11129 ;; Defined at:
 11130 ;;		line 123 in file "mcc_generated_files/TCPIPLibrary/tftp.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;  opcode          1    wreg     unsigned char 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  opcode          1   87[BANK0 ] unsigned char 
 11135 ;;  tftp_server_    4   80[BANK0 ] unsigned long 
 11136 ;;  dest_port       2   84[BANK0 ] unsigned int 
 11137 ;;  started         1   86[BANK0 ] unsigned char 
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      void 
 11140 ;; Registers used:
 11141 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;Total ram usage:        8 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:   10
 11154 ;; This function calls:
 11155 ;;		_ETH_Write16
 11156 ;;		_UDP_Send
 11157 ;;		_UDP_Start
 11158 ;; This function is called by:
 11159 ;;		_TFTP_Handler
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text45
 11164  0161B2                     __ptext45:
 11165                           	opt stack 0
 11166  0161B2                     _TFTP_Ack:
 11167                           	opt stack 15
 11168                           
 11169                           ;incstack = 0
 11170                           ;TFTP_Ack@opcode stored from wreg
 11171  0161B2  0100               	movlb	0	; () banked
 11172  0161B4  6FB7               	movwf	TFTP_Ack@opcode& (0+255),b
 11173                           
 11174                           ;tftp.c: 125: bool started = 0;
 11175  0161B6  0E00               	movlw	0
 11176  0161B8  0100               	movlb	0	; () banked
 11177  0161BA  6FB6               	movwf	TFTP_Ack@started& (0+255),b
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;tftp.c: 126: uint16_t dest_port;
 11181                           ;tftp.c: 127: uint32_t tftp_server_address = tftp_msg.tftp_server_address;
 11182  0161BC  C378  F0B0         	movff	_tftp_msg,TFTP_Ack@tftp_server_address
 11183  0161C0  C379  F0B1         	movff	_tftp_msg+1,TFTP_Ack@tftp_server_address+1
 11184  0161C4  C37A  F0B2         	movff	_tftp_msg+2,TFTP_Ack@tftp_server_address+2
 11185  0161C8  C37B  F0B3         	movff	_tftp_msg+3,TFTP_Ack@tftp_server_address+3
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;tftp.c: 129: if(opcode == TFTP_ACK)
 11189  0161CC  0E04               	movlw	4
 11190  0161CE  19B7               	xorwf	TFTP_Ack@opcode& (0+255),w,b
 11191  0161D0  A4D8               	btfss	status,2,c
 11192  0161D2  0012               	return	
 11193                           
 11194                           ; BSR set to: 0
 11195                           ;tftp.c: 130: {
 11196                           ;tftp.c: 131: dest_port = (destPort);
 11197  0161D4  C24E  F0B4         	movff	_destPort,TFTP_Ack@dest_port
 11198  0161D8  C24F  F0B5         	movff	_destPort+1,TFTP_Ack@dest_port+1
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;tftp.c: 132: started = UDP_Start(tftp_server_address,65531,dest_port);
 11202  0161DC  C0B0  F0A8         	movff	TFTP_Ack@tftp_server_address,UDP_Start@destIP
 11203  0161E0  C0B1  F0A9         	movff	TFTP_Ack@tftp_server_address+1,UDP_Start@destIP+1
 11204  0161E4  C0B2  F0AA         	movff	TFTP_Ack@tftp_server_address+2,UDP_Start@destIP+2
 11205  0161E8  C0B3  F0AB         	movff	TFTP_Ack@tftp_server_address+3,UDP_Start@destIP+3
 11206  0161EC  0EFF               	movlw	255
 11207  0161EE  6FAD               	movwf	(UDP_Start@srcPort+1)& (0+255),b
 11208  0161F0  0EFB               	movlw	251
 11209  0161F2  6FAC               	movwf	UDP_Start@srcPort& (0+255),b
 11210  0161F4  C0B4  F0AE         	movff	TFTP_Ack@dest_port,UDP_Start@dstPort
 11211  0161F8  C0B5  F0AF         	movff	TFTP_Ack@dest_port+1,UDP_Start@dstPort+1
 11212  0161FC  EC16  F0B2         	call	_UDP_Start	;wreg free
 11213  016200  0100               	movlb	0	; () banked
 11214  016202  6FB6               	movwf	TFTP_Ack@started& (0+255),b
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;tftp.c: 133: if(started)
 11218  016204  51B6               	movf	TFTP_Ack@started& (0+255),w,b
 11219  016206  B4D8               	btfsc	status,2,c
 11220  016208  0012               	return	
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;tftp.c: 134: {
 11224                           ;tftp.c: 135: ETH_Write16(opcode);
 11225  01620A  C0B7  F013         	movff	TFTP_Ack@opcode,ETH_Write16@data
 11226  01620E  6A14               	clrf	ETH_Write16@data+1,c
 11227  016210  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 11228                           
 11229                           ;tftp.c: 136: ETH_Write16(current_block);
 11230  016214  C03B  F013         	movff	_current_block,ETH_Write16@data
 11231  016218  C03C  F014         	movff	_current_block+1,ETH_Write16@data+1
 11232  01621C  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 11233                           
 11234                           ;tftp.c: 138: UDP_Send();
 11235  016220  ECC4  F0AA         	call	_UDP_Send	;wreg free
 11236  016224  0012               	return	
 11237  016226                     __end_of_TFTP_Ack:
 11238                           	opt stack 0
 11239                           tosu	equ	0xFFF
 11240                           tosh	equ	0xFFE
 11241                           tosl	equ	0xFFD
 11242                           pclath	equ	0xFFA
 11243                           tblptru	equ	0xFF8
 11244                           tblptrh	equ	0xFF7
 11245                           tblptrl	equ	0xFF6
 11246                           tablat	equ	0xFF5
 11247                           prodh	equ	0xFF4
 11248                           prodl	equ	0xFF3
 11249                           intcon	equ	0xFF2
 11250                           indf0	equ	0xFEF
 11251                           postinc0	equ	0xFEE
 11252                           fsr0h	equ	0xFEA
 11253                           fsr0l	equ	0xFE9
 11254                           wreg	equ	0xFE8
 11255                           indf1	equ	0xFE7
 11256                           postinc1	equ	0xFE6
 11257                           postdec1	equ	0xFE5
 11258                           plusw1	equ	0xFE3
 11259                           fsr1h	equ	0xFE2
 11260                           fsr1l	equ	0xFE1
 11261                           indf2	equ	0xFDF
 11262                           postinc2	equ	0xFDE
 11263                           postdec2	equ	0xFDD
 11264                           plusw2	equ	0xFDB
 11265                           fsr2h	equ	0xFDA
 11266                           fsr2l	equ	0xFD9
 11267                           status	equ	0xFD8
 11268                           
 11269 ;; *************** function _Process_TFTP_Data *****************
 11270 ;; Defined at:
 11271 ;;		line 228 in file "mcc_generated_files/TCPIPLibrary/tftp.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;  address         4   18[COMRAM] unsigned long 
 11274 ;;  data            2   22[COMRAM] PTR unsigned char 
 11275 ;;		 -> TFTP_Handler@data(100), 
 11276 ;;  length          2   24[COMRAM] unsigned int 
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;  i               1   26[COMRAM] unsigned char 
 11279 ;;  hptr            2   27[COMRAM] PTR const struct .
 11280 ;;		 -> TFTP_callBackTable(0), 
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      unsigned char 
 11283 ;; Registers used:
 11284 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11290 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11293 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11294 ;;Total ram usage:       11 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:    4
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_TFTP_Handler
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text46
 11305  016E82                     __ptext46:
 11306                           	opt stack 0
 11307  016E82                     _Process_TFTP_Data:
 11308                           	opt stack 21
 11309                           
 11310                           ;tftp.c: 230: const store_handler_t *hptr;
 11311                           ;tftp.c: 232: hptr = TFTP_callBackTable;
 11312                           
 11313                           ;incstack = 0
 11314  016E82  0E7D               	movlw	low _TFTP_callBackTable
 11315  016E84  6E1C               	movwf	Process_TFTP_Data@hptr,c
 11316  016E86  0EFE               	movlw	high _TFTP_callBackTable
 11317  016E88  6E1D               	movwf	Process_TFTP_Data@hptr+1,c
 11318                           
 11319                           ;tftp.c: 233: for(uint8_t i=0; i<(sizeof(TFTP_callBackTable)/sizeof(*TFTP_callBackTable)
      +                          ); i++)
 11320  016E8A  0E00               	movlw	0
 11321  016E8C  6E1B               	movwf	Process_TFTP_Data@i,c
 11322  016E8E  0012               	return	
 11323  016E90                     __end_of_Process_TFTP_Data:
 11324                           	opt stack 0
 11325                           tosu	equ	0xFFF
 11326                           tosh	equ	0xFFE
 11327                           tosl	equ	0xFFD
 11328                           pclath	equ	0xFFA
 11329                           tblptru	equ	0xFF8
 11330                           tblptrh	equ	0xFF7
 11331                           tblptrl	equ	0xFF6
 11332                           tablat	equ	0xFF5
 11333                           prodh	equ	0xFF4
 11334                           prodl	equ	0xFF3
 11335                           intcon	equ	0xFF2
 11336                           indf0	equ	0xFEF
 11337                           postinc0	equ	0xFEE
 11338                           fsr0h	equ	0xFEA
 11339                           fsr0l	equ	0xFE9
 11340                           wreg	equ	0xFE8
 11341                           indf1	equ	0xFE7
 11342                           postinc1	equ	0xFE6
 11343                           postdec1	equ	0xFE5
 11344                           plusw1	equ	0xFE3
 11345                           fsr1h	equ	0xFE2
 11346                           fsr1l	equ	0xFE1
 11347                           indf2	equ	0xFDF
 11348                           postinc2	equ	0xFDE
 11349                           postdec2	equ	0xFDD
 11350                           plusw2	equ	0xFDB
 11351                           fsr2h	equ	0xFDA
 11352                           fsr2l	equ	0xFD9
 11353                           status	equ	0xFD8
 11354                           
 11355 ;; *************** function _rtcc_set *****************
 11356 ;; Defined at:
 11357 ;;		line 126 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  t               2   18[COMRAM] PTR long 
 11360 ;;		 -> RAM(3935), 
 11361 ;; Auto vars:     Size  Location     Type
 11362 ;;  gie_val         1   20[COMRAM] unsigned char 
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  1    wreg      void 
 11365 ;; Registers used:
 11366 ;;		wreg, fsr2l, fsr2h, status,2
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;Total ram usage:        3 bytes
 11377 ;; Hardware stack levels used:    1
 11378 ;; Hardware stack levels required when called:    4
 11379 ;; This function calls:
 11380 ;;		Nothing
 11381 ;; This function is called by:
 11382 ;;		_NTP_Handler
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386                           	psect	text47
 11387  016ABC                     __ptext47:
 11388                           	opt stack 0
 11389  016ABC                     _rtcc_set:
 11390                           	opt stack 21
 11391                           
 11392                           ;rtcc.c: 128: bool gie_val;
 11393                           ;rtcc.c: 129: gie_val = GIE;
 11394                           
 11395                           ;incstack = 0
 11396  016ABC  0E00               	movlw	0
 11397  016ABE  BEF2               	btfsc	intcon,7,c	;volatile
 11398  016AC0  0E01               	movlw	1
 11399  016AC2  6E15               	movwf	rtcc_set@gie_val,c
 11400                           
 11401                           ;rtcc.c: 130: GIE = 0;
 11402  016AC4  9EF2               	bcf	intcon,7,c	;volatile
 11403                           
 11404                           ;rtcc.c: 131: device_time = *t;
 11405  016AC6  C013  FFD9         	movff	rtcc_set@t,fsr2l
 11406  016ACA  C014  FFDA         	movff	rtcc_set@t+1,fsr2h
 11407  016ACE  CFDE F22E          	movff	postinc2,_device_time	;volatile
 11408  016AD2  CFDE F22F          	movff	postinc2,_device_time+1	;volatile
 11409  016AD6  CFDE F230          	movff	postinc2,_device_time+2	;volatile
 11410  016ADA  CFDE F231          	movff	postinc2,_device_time+3	;volatile
 11411                           
 11412                           ;rtcc.c: 132: GIE = gie_val;
 11413  016ADE  A015               	btfss	rtcc_set@gie_val,0,c
 11414  016AE0  D002               	goto	u10400
 11415  016AE2  8EF2               	bsf	intcon,7,c	;volatile
 11416  016AE4  0012               	return	
 11417  016AE6                     u10400:
 11418  016AE6  9EF2               	bcf	intcon,7,c	;volatile
 11419  016AE8  0012               	return		;funcret
 11420  016AEA                     __end_of_rtcc_set:
 11421                           	opt stack 0
 11422                           tosu	equ	0xFFF
 11423                           tosh	equ	0xFFE
 11424                           tosl	equ	0xFFD
 11425                           pclath	equ	0xFFA
 11426                           tblptru	equ	0xFF8
 11427                           tblptrh	equ	0xFF7
 11428                           tblptrl	equ	0xFF6
 11429                           tablat	equ	0xFF5
 11430                           prodh	equ	0xFF4
 11431                           prodl	equ	0xFF3
 11432                           intcon	equ	0xFF2
 11433                           indf0	equ	0xFEF
 11434                           postinc0	equ	0xFEE
 11435                           fsr0h	equ	0xFEA
 11436                           fsr0l	equ	0xFE9
 11437                           wreg	equ	0xFE8
 11438                           indf1	equ	0xFE7
 11439                           postinc1	equ	0xFE6
 11440                           postdec1	equ	0xFE5
 11441                           plusw1	equ	0xFE3
 11442                           fsr1h	equ	0xFE2
 11443                           fsr1l	equ	0xFE1
 11444                           indf2	equ	0xFDF
 11445                           postinc2	equ	0xFDE
 11446                           postdec2	equ	0xFDD
 11447                           plusw2	equ	0xFDB
 11448                           fsr2h	equ	0xFDA
 11449                           fsr2l	equ	0xFD9
 11450                           status	equ	0xFD8
 11451                           
 11452 ;; *************** function _IPV4_GetDatagramLength *****************
 11453 ;; Defined at:
 11454 ;;		line 293 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;		None
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;		None
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  2   18[COMRAM] unsigned int 
 11461 ;; Registers used:
 11462 ;;		wreg, status,2, status,0
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;Total ram usage:        2 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    4
 11475 ;; This function calls:
 11476 ;;		Nothing
 11477 ;; This function is called by:
 11478 ;;		_UDP_Receive
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482                           	psect	text48
 11483  016E2A                     __ptext48:
 11484                           	opt stack 0
 11485  016E2A                     _IPV4_GetDatagramLength:
 11486                           	opt stack 22
 11487                           
 11488                           ;ipv4.c: 295: return ((ipv4Header.length) - sizeof(ipv4Header_t));
 11489                           
 11490                           ;incstack = 0
 11491  016E2A  0EEC               	movlw	236
 11492  016E2C  0102               	movlb	2	; () banked
 11493  016E2E  256F               	addwf	(_ipv4Header+2)& (0+255),w,b
 11494  016E30  6E13               	movwf	?_IPV4_GetDatagramLength,c
 11495  016E32  0EFF               	movlw	255
 11496  016E34  2170               	addwfc	(_ipv4Header+3)& (0+255),w,b
 11497  016E36  6E14               	movwf	?_IPV4_GetDatagramLength+1,c
 11498  016E38  0012               	return	
 11499  016E3A                     __end_of_IPV4_GetDatagramLength:
 11500                           	opt stack 0
 11501                           tosu	equ	0xFFF
 11502                           tosh	equ	0xFFE
 11503                           tosl	equ	0xFFD
 11504                           pclath	equ	0xFFA
 11505                           tblptru	equ	0xFF8
 11506                           tblptrh	equ	0xFF7
 11507                           tblptrl	equ	0xFF6
 11508                           tablat	equ	0xFF5
 11509                           prodh	equ	0xFF4
 11510                           prodl	equ	0xFF3
 11511                           intcon	equ	0xFF2
 11512                           indf0	equ	0xFEF
 11513                           postinc0	equ	0xFEE
 11514                           fsr0h	equ	0xFEA
 11515                           fsr0l	equ	0xFE9
 11516                           wreg	equ	0xFE8
 11517                           indf1	equ	0xFE7
 11518                           postinc1	equ	0xFE6
 11519                           postdec1	equ	0xFE5
 11520                           plusw1	equ	0xFE3
 11521                           fsr1h	equ	0xFE2
 11522                           fsr1l	equ	0xFE1
 11523                           indf2	equ	0xFDF
 11524                           postinc2	equ	0xFDE
 11525                           postdec2	equ	0xFDD
 11526                           plusw2	equ	0xFDB
 11527                           fsr2h	equ	0xFDA
 11528                           fsr2l	equ	0xFD9
 11529                           status	equ	0xFD8
 11530                           
 11531 ;; *************** function _ICMP_PortUnreachable *****************
 11532 ;; Defined at:
 11533 ;;		line 137 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 11534 ;; Parameters:    Size  Location     Type
 11535 ;;  srcIPAddress    4   72[BANK0 ] unsigned long 
 11536 ;;  destIPAddres    4   76[BANK0 ] unsigned long 
 11537 ;;  length          2   80[BANK0 ] unsigned int 
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;  cksm            2   82[BANK0 ] unsigned int 
 11540 ;;  ret             1   84[BANK0 ] enum E392
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      enum E392
 11543 ;; Registers used:
 11544 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11550 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;Total ram usage:       13 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    9
 11557 ;; This function calls:
 11558 ;;		_ETH_Copy
 11559 ;;		_ETH_Insert
 11560 ;;		_ETH_SetReadPtr
 11561 ;;		_ETH_TxComputeChecksum
 11562 ;;		_ETH_Write16
 11563 ;;		_ETH_Write32
 11564 ;;		_IPV4_GetStartPosition
 11565 ;;		_IPV4_Send
 11566 ;;		_IPv4_Start
 11567 ;; This function is called by:
 11568 ;;		_UDP_Receive
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text49
 11573  015482                     __ptext49:
 11574                           	opt stack 0
 11575  015482                     _ICMP_PortUnreachable:
 11576                           	opt stack 17
 11577                           
 11578                           ;icmp.c: 139: error_msg ret = ERROR;
 11579                           
 11580                           ; BSR set to: 2
 11581                           ;incstack = 0
 11582  015482  0E00               	movlw	0
 11583  015484  0100               	movlb	0	; () banked
 11584  015486  6FB4               	movwf	ICMP_PortUnreachable@ret& (0+255),b
 11585                           
 11586                           ;icmp.c: 140: uint16_t cksm = 0;
 11587  015488  0E00               	movlw	0
 11588  01548A  6FB3               	movwf	(ICMP_PortUnreachable@cksm+1)& (0+255),b
 11589  01548C  0E00               	movlw	0
 11590  01548E  6FB2               	movwf	ICMP_PortUnreachable@cksm& (0+255),b
 11591                           
 11592                           ; BSR set to: 0
 11593                           ;icmp.c: 142: if(srcIPAddress!=(ip_database_info.ipv4_myAddress))
 11594  015490  51A8               	movf	ICMP_PortUnreachable@srcIPAddress& (0+255),w,b
 11595  015492  0102               	movlb	2	; () banked
 11596  015494  1900               	xorwf	_ip_database_info& (0+255),w,b
 11597  015496  E177               	bnz	l1114
 11598  015498  0100               	movlb	0	; () banked
 11599  01549A  51A9               	movf	(ICMP_PortUnreachable@srcIPAddress+1)& (0+255),w,b
 11600  01549C  0102               	movlb	2	; () banked
 11601  01549E  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
 11602  0154A0  E172               	bnz	l1114
 11603  0154A2  0100               	movlb	0	; () banked
 11604  0154A4  51AA               	movf	(ICMP_PortUnreachable@srcIPAddress+2)& (0+255),w,b
 11605  0154A6  0102               	movlb	2	; () banked
 11606  0154A8  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
 11607  0154AA  E16D               	bnz	l1114
 11608  0154AC  0100               	movlb	0	; () banked
 11609  0154AE  51AB               	movf	(ICMP_PortUnreachable@srcIPAddress+3)& (0+255),w,b
 11610  0154B0  0102               	movlb	2	; () banked
 11611  0154B2  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 11612  0154B4  A4D8               	btfss	status,2,c
 11613  0154B6  0012               	return	
 11614                           
 11615                           ; BSR set to: 2
 11616                           ;icmp.c: 145: }
 11617                           ;icmp.c: 147: ret = IPv4_Start(destIPAddress, ICMP_TCPIP);
 11618                           
 11619                           ; BSR set to: 2
 11620                           
 11621                           ; BSR set to: 2
 11622                           ;icmp.c: 143: {
 11623                           ;icmp.c: 144: return DEST_IP_NOT_MATCHED;
 11624                           ;	Return value of _ICMP_PortUnreachable is never used
 11625  0154B8  C0AC  F031         	movff	ICMP_PortUnreachable@destIPAddress,IPv4_Start@destAddress
 11626  0154BC  C0AD  F032         	movff	ICMP_PortUnreachable@destIPAddress+1,IPv4_Start@destAddress+1
 11627  0154C0  C0AE  F033         	movff	ICMP_PortUnreachable@destIPAddress+2,IPv4_Start@destAddress+2
 11628  0154C4  C0AF  F034         	movff	ICMP_PortUnreachable@destIPAddress+3,IPv4_Start@destAddress+3
 11629  0154C8  0E01               	movlw	1
 11630  0154CA  6E35               	movwf	IPv4_Start@protocol,c
 11631  0154CC  ECB1  F09F         	call	_IPv4_Start	;wreg free
 11632  0154D0  0100               	movlb	0	; () banked
 11633  0154D2  6FB4               	movwf	ICMP_PortUnreachable@ret& (0+255),b
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;icmp.c: 148: if(ret == SUCCESS)
 11637  0154D4  05B4               	decf	ICMP_PortUnreachable@ret& (0+255),w,b
 11638  0154D6  A4D8               	btfss	status,2,c
 11639  0154D8  0012               	return	
 11640                           
 11641                           ; BSR set to: 0
 11642                           ;icmp.c: 149: {
 11643                           ;icmp.c: 150: ETH_Write16(DEST_PORT_UNREACHABLE);
 11644  0154DA  0E03               	movlw	3
 11645  0154DC  6E14               	movwf	ETH_Write16@data+1,c
 11646  0154DE  0E03               	movlw	3
 11647  0154E0  6E13               	movwf	ETH_Write16@data,c
 11648  0154E2  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 11649                           
 11650                           ;icmp.c: 151: ETH_Write16(0);
 11651  0154E6  0E00               	movlw	0
 11652  0154E8  6E14               	movwf	ETH_Write16@data+1,c
 11653  0154EA  0E00               	movlw	0
 11654  0154EC  6E13               	movwf	ETH_Write16@data,c
 11655  0154EE  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 11656                           
 11657                           ;icmp.c: 152: ETH_Write32(0);
 11658  0154F2  0E00               	movlw	0
 11659  0154F4  6E13               	movwf	ETH_Write32@data,c
 11660  0154F6  0E00               	movlw	0
 11661  0154F8  6E14               	movwf	ETH_Write32@data+1,c
 11662  0154FA  0E00               	movlw	0
 11663  0154FC  6E15               	movwf	ETH_Write32@data+2,c
 11664  0154FE  0E00               	movlw	0
 11665  015500  6E16               	movwf	ETH_Write32@data+3,c
 11666  015502  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 11667                           
 11668                           ;icmp.c: 153: ETH_SetReadPtr(IPV4_GetStartPosition());
 11669  015506  EC71  F0B7         	call	_IPV4_GetStartPosition	;wreg free
 11670  01550A  C013  F015         	movff	?_IPV4_GetStartPosition,ETH_SetReadPtr@rdptr
 11671  01550E  C014  F016         	movff	?_IPV4_GetStartPosition+1,ETH_SetReadPtr@rdptr+1
 11672  015512  EC76  F0B7         	call	_ETH_SetReadPtr	;wreg free
 11673                           
 11674                           ;icmp.c: 154: ETH_Copy(sizeof(ipv4Header_t) + length);
 11675  015516  0E14               	movlw	20
 11676  015518  0100               	movlb	0	; () banked
 11677  01551A  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 11678  01551C  6E19               	movwf	ETH_Copy@len,c
 11679  01551E  0E00               	movlw	0
 11680  015520  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 11681  015522  6E1A               	movwf	ETH_Copy@len+1,c
 11682  015524  EC64  F0AD         	call	_ETH_Copy	;wreg free
 11683                           
 11684                           ;icmp.c: 155: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_t
      +                          ), sizeof(icmpHeader_t)+ sizeof(ipv4Header_t) + length, 0);
 11685  015528  0E00               	movlw	0
 11686  01552A  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 11687  01552C  0E22               	movlw	34
 11688  01552E  6E25               	movwf	ETH_TxComputeChecksum@position,c
 11689  015530  0E18               	movlw	24
 11690  015532  0100               	movlb	0	; () banked
 11691  015534  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 11692  015536  6E27               	movwf	ETH_TxComputeChecksum@len,c
 11693  015538  0E00               	movlw	0
 11694  01553A  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 11695  01553C  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 11696  01553E  0E00               	movlw	0
 11697  015540  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
 11698  015542  0E00               	movlw	0
 11699  015544  6E29               	movwf	ETH_TxComputeChecksum@seed,c
 11700  015546  EC91  F0AC         	call	_ETH_TxComputeChecksum	;wreg free
 11701  01554A  C025  F0B2         	movff	?_ETH_TxComputeChecksum,ICMP_PortUnreachable@cksm
 11702  01554E  C026  F0B3         	movff	?_ETH_TxComputeChecksum+1,ICMP_PortUnreachable@cksm+1
 11703                           
 11704                           ;icmp.c: 156: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
 11705  015552  0EB2               	movlw	low ICMP_PortUnreachable@cksm
 11706  015554  6E13               	movwf	ETH_Insert@data,c
 11707  015556  0E00               	movlw	high ICMP_PortUnreachable@cksm
 11708  015558  6E14               	movwf	ETH_Insert@data+1,c
 11709  01555A  0E00               	movlw	0
 11710  01555C  6E16               	movwf	ETH_Insert@len+1,c
 11711  01555E  0E02               	movlw	2
 11712  015560  6E15               	movwf	ETH_Insert@len,c
 11713  015562  0E00               	movlw	0
 11714  015564  6E18               	movwf	ETH_Insert@offset+1,c
 11715  015566  0E24               	movlw	36
 11716  015568  6E17               	movwf	ETH_Insert@offset,c
 11717  01556A  ECB7  F0B1         	call	_ETH_Insert	;wreg free
 11718                           
 11719                           ;icmp.c: 157: ret = IPV4_Send(sizeof(icmpHeader_t)+sizeof(ipv4Header_t)+length);
 11720  01556E  0E18               	movlw	24
 11721  015570  0100               	movlb	0	; () banked
 11722  015572  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 11723  015574  6E37               	movwf	IPV4_Send@payloadLength,c
 11724  015576  0E00               	movlw	0
 11725  015578  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 11726  01557A  6E38               	movwf	IPV4_Send@payloadLength+1,c
 11727  01557C  ECAE  F0AE         	call	_IPV4_Send	;wreg free
 11728  015580  0100               	movlb	0	; () banked
 11729  015582  6FB4               	movwf	ICMP_PortUnreachable@ret& (0+255),b
 11730                           
 11731                           ; BSR set to: 0
 11732  015584  0012               	return	
 11733  015586                     l1114:
 11734  015586  0012               	return		;funcret
 11735  015588                     __end_of_ICMP_PortUnreachable:
 11736                           	opt stack 0
 11737                           tosu	equ	0xFFF
 11738                           tosh	equ	0xFFE
 11739                           tosl	equ	0xFFD
 11740                           pclath	equ	0xFFA
 11741                           tblptru	equ	0xFF8
 11742                           tblptrh	equ	0xFF7
 11743                           tblptrl	equ	0xFF6
 11744                           tablat	equ	0xFF5
 11745                           prodh	equ	0xFF4
 11746                           prodl	equ	0xFF3
 11747                           intcon	equ	0xFF2
 11748                           indf0	equ	0xFEF
 11749                           postinc0	equ	0xFEE
 11750                           fsr0h	equ	0xFEA
 11751                           fsr0l	equ	0xFE9
 11752                           wreg	equ	0xFE8
 11753                           indf1	equ	0xFE7
 11754                           postinc1	equ	0xFE6
 11755                           postdec1	equ	0xFE5
 11756                           plusw1	equ	0xFE3
 11757                           fsr1h	equ	0xFE2
 11758                           fsr1l	equ	0xFE1
 11759                           indf2	equ	0xFDF
 11760                           postinc2	equ	0xFDE
 11761                           postdec2	equ	0xFDD
 11762                           plusw2	equ	0xFDB
 11763                           fsr2h	equ	0xFDA
 11764                           fsr2l	equ	0xFD9
 11765                           status	equ	0xFD8
 11766                           
 11767 ;; *************** function _IPV4_GetStartPosition *****************
 11768 ;; Defined at:
 11769 ;;		line 287 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 11770 ;; Parameters:    Size  Location     Type
 11771 ;;		None
 11772 ;; Auto vars:     Size  Location     Type
 11773 ;;		None
 11774 ;; Return value:  Size  Location     Type
 11775 ;;                  2   18[COMRAM] unsigned int 
 11776 ;; Registers used:
 11777 ;;		None
 11778 ;; Tracked objects:
 11779 ;;		On entry : 0/0
 11780 ;;		On exit  : 0/0
 11781 ;;		Unchanged: 0/0
 11782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;Total ram usage:        2 bytes
 11788 ;; Hardware stack levels used:    1
 11789 ;; Hardware stack levels required when called:    4
 11790 ;; This function calls:
 11791 ;;		Nothing
 11792 ;; This function is called by:
 11793 ;;		_ICMP_PortUnreachable
 11794 ;; This function uses a non-reentrant model
 11795 ;;
 11796                           
 11797                           	psect	text50
 11798  016EE2                     __ptext50:
 11799                           	opt stack 0
 11800  016EE2                     _IPV4_GetStartPosition:
 11801                           	opt stack 21
 11802                           
 11803                           ;ipv4.c: 289: return ipv4StartPosition;
 11804                           
 11805                           ;incstack = 0
 11806  016EE2  C252  F013         	movff	_ipv4StartPosition,?_IPV4_GetStartPosition
 11807  016EE6  C253  F014         	movff	_ipv4StartPosition+1,?_IPV4_GetStartPosition+1
 11808  016EEA  0012               	return		;funcret
 11809  016EEC                     __end_of_IPV4_GetStartPosition:
 11810                           	opt stack 0
 11811                           tosu	equ	0xFFF
 11812                           tosh	equ	0xFFE
 11813                           tosl	equ	0xFFD
 11814                           pclath	equ	0xFFA
 11815                           tblptru	equ	0xFF8
 11816                           tblptrh	equ	0xFF7
 11817                           tblptrl	equ	0xFF6
 11818                           tablat	equ	0xFF5
 11819                           prodh	equ	0xFF4
 11820                           prodl	equ	0xFF3
 11821                           intcon	equ	0xFF2
 11822                           indf0	equ	0xFEF
 11823                           postinc0	equ	0xFEE
 11824                           fsr0h	equ	0xFEA
 11825                           fsr0l	equ	0xFE9
 11826                           wreg	equ	0xFE8
 11827                           indf1	equ	0xFE7
 11828                           postinc1	equ	0xFE6
 11829                           postdec1	equ	0xFE5
 11830                           plusw1	equ	0xFE3
 11831                           fsr1h	equ	0xFE2
 11832                           fsr1l	equ	0xFE1
 11833                           indf2	equ	0xFDF
 11834                           postinc2	equ	0xFDE
 11835                           postdec2	equ	0xFDD
 11836                           plusw2	equ	0xFDB
 11837                           fsr2h	equ	0xFDA
 11838                           fsr2l	equ	0xFD9
 11839                           status	equ	0xFD8
 11840                           
 11841 ;; *************** function _ETH_SetReadPtr *****************
 11842 ;; Defined at:
 11843 ;;		line 1085 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;  rdptr           2   20[COMRAM] unsigned int 
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;		None
 11848 ;; Return value:  Size  Location     Type
 11849 ;;                  1    wreg      void 
 11850 ;; Registers used:
 11851 ;;		None
 11852 ;; Tracked objects:
 11853 ;;		On entry : 0/0
 11854 ;;		On exit  : 0/0
 11855 ;;		Unchanged: 0/0
 11856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11861 ;;Total ram usage:        2 bytes
 11862 ;; Hardware stack levels used:    1
 11863 ;; Hardware stack levels required when called:    4
 11864 ;; This function calls:
 11865 ;;		Nothing
 11866 ;; This function is called by:
 11867 ;;		_ICMP_PortUnreachable
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           	psect	text51
 11872  016EEC                     __ptext51:
 11873                           	opt stack 0
 11874  016EEC                     _ETH_SetReadPtr:
 11875                           	opt stack 21
 11876                           
 11877                           ;ETHxxJ6x_driver.c: 1087: ERDPT = rdptr;
 11878                           
 11879                           ;incstack = 0
 11880  016EEC  C015  FF7A         	movff	ETH_SetReadPtr@rdptr,3962	;volatile
 11881  016EF0  C016  FF7B         	movff	ETH_SetReadPtr@rdptr+1,3963	;volatile
 11882  016EF4  0012               	return		;funcret
 11883  016EF6                     __end_of_ETH_SetReadPtr:
 11884                           	opt stack 0
 11885                           tosu	equ	0xFFF
 11886                           tosh	equ	0xFFE
 11887                           tosl	equ	0xFFD
 11888                           pclath	equ	0xFFA
 11889                           tblptru	equ	0xFF8
 11890                           tblptrh	equ	0xFF7
 11891                           tblptrl	equ	0xFF6
 11892                           tablat	equ	0xFF5
 11893                           prodh	equ	0xFF4
 11894                           prodl	equ	0xFF3
 11895                           intcon	equ	0xFF2
 11896                           indf0	equ	0xFEF
 11897                           postinc0	equ	0xFEE
 11898                           fsr0h	equ	0xFEA
 11899                           fsr0l	equ	0xFE9
 11900                           wreg	equ	0xFE8
 11901                           indf1	equ	0xFE7
 11902                           postinc1	equ	0xFE6
 11903                           postdec1	equ	0xFE5
 11904                           plusw1	equ	0xFE3
 11905                           fsr1h	equ	0xFE2
 11906                           fsr1l	equ	0xFE1
 11907                           indf2	equ	0xFDF
 11908                           postinc2	equ	0xFDE
 11909                           postdec2	equ	0xFDD
 11910                           plusw2	equ	0xFDB
 11911                           fsr2h	equ	0xFDA
 11912                           fsr2l	equ	0xFD9
 11913                           status	equ	0xFD8
 11914                           
 11915 ;; *************** function _strcmp *****************
 11916 ;; Defined at:
 11917 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\strcmp.c"
 11918 ;; Parameters:    Size  Location     Type
 11919 ;;  s1              2   18[COMRAM] PTR const unsigned char 
 11920 ;;  s2              2   20[COMRAM] PTR const unsigned char 
 11921 ;;		 -> DNS_Handler@dnsR(255), 
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;  r               1   23[COMRAM] char 
 11924 ;; Return value:  Size  Location     Type
 11925 ;;                  2   18[COMRAM] int 
 11926 ;; Registers used:
 11927 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11928 ;; Tracked objects:
 11929 ;;		On entry : 0/0
 11930 ;;		On exit  : 0/0
 11931 ;;		Unchanged: 0/0
 11932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11937 ;;Total ram usage:        6 bytes
 11938 ;; Hardware stack levels used:    1
 11939 ;; Hardware stack levels required when called:    4
 11940 ;; This function calls:
 11941 ;;		Nothing
 11942 ;; This function is called by:
 11943 ;;		_DNS_Handler
 11944 ;;		_DNS_Lookup
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948                           	psect	text52
 11949  0167C8                     __ptext52:
 11950                           	opt stack 0
 11951  0167C8                     _strcmp:
 11952                           	opt stack 21
 11953                           
 11954                           ;incstack = 0
 11955  0167C8  D004               	goto	l2722
 11956  0167CA  4A13               	infsnz	strcmp@s1,f,c
 11957  0167CC  2A14               	incf	strcmp@s1+1,f,c
 11958  0167CE  4A15               	infsnz	strcmp@s2,f,c
 11959  0167D0  2A16               	incf	strcmp@s2+1,f,c
 11960  0167D2                     l2722:
 11961  0167D2  C013  FFD9         	movff	strcmp@s1,fsr2l
 11962  0167D6  C014  FFDA         	movff	strcmp@s1+1,fsr2h
 11963  0167DA  50DF               	movf	indf2,w,c
 11964  0167DC  6E17               	movwf	??_strcmp& (0+255),c
 11965  0167DE  C015  FFD9         	movff	strcmp@s2,fsr2l
 11966  0167E2  C016  FFDA         	movff	strcmp@s2+1,fsr2h
 11967  0167E6  50DF               	movf	indf2,w,c
 11968  0167E8  0800               	sublw	0
 11969  0167EA  2417               	addwf	??_strcmp,w,c
 11970  0167EC  6E18               	movwf	strcmp@r,c
 11971  0167EE  5018               	movf	strcmp@r,w,c
 11972  0167F0  A4D8               	btfss	status,2,c
 11973  0167F2  D007               	goto	u10490
 11974  0167F4  C013  FFD9         	movff	strcmp@s1,fsr2l
 11975  0167F8  C014  FFDA         	movff	strcmp@s1+1,fsr2h
 11976  0167FC  50DF               	movf	indf2,w,c
 11977  0167FE  A4D8               	btfss	status,2,c
 11978  016800  D7E4               	goto	l2723
 11979  016802                     u10490:
 11980  016802  5018               	movf	strcmp@r,w,c
 11981  016804  6E13               	movwf	?_strcmp,c
 11982  016806  6A14               	clrf	?_strcmp+1,c
 11983  016808  BE13               	btfsc	?_strcmp,7,c
 11984  01680A  0614               	decf	?_strcmp+1,f,c
 11985  01680C  0012               	return	
 11986  01680E                     __end_of_strcmp:
 11987                           	opt stack 0
 11988                           tosu	equ	0xFFF
 11989                           tosh	equ	0xFFE
 11990                           tosl	equ	0xFFD
 11991                           pclath	equ	0xFFA
 11992                           tblptru	equ	0xFF8
 11993                           tblptrh	equ	0xFF7
 11994                           tblptrl	equ	0xFF6
 11995                           tablat	equ	0xFF5
 11996                           prodh	equ	0xFF4
 11997                           prodl	equ	0xFF3
 11998                           intcon	equ	0xFF2
 11999                           indf0	equ	0xFEF
 12000                           postinc0	equ	0xFEE
 12001                           fsr0h	equ	0xFEA
 12002                           fsr0l	equ	0xFE9
 12003                           wreg	equ	0xFE8
 12004                           indf1	equ	0xFE7
 12005                           postinc1	equ	0xFE6
 12006                           postdec1	equ	0xFE5
 12007                           plusw1	equ	0xFE3
 12008                           fsr1h	equ	0xFE2
 12009                           fsr1l	equ	0xFE1
 12010                           indf2	equ	0xFDF
 12011                           postinc2	equ	0xFDE
 12012                           postdec2	equ	0xFDD
 12013                           plusw2	equ	0xFDB
 12014                           fsr2h	equ	0xFDA
 12015                           fsr2l	equ	0xFD9
 12016                           status	equ	0xFD8
 12017                           
 12018 ;; *************** function _sendDHCPDECLINE *****************
 12019 ;; Defined at:
 12020 ;;		line 136 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;		None
 12023 ;; Auto vars:     Size  Location     Type
 12024 ;;		None
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      unsigned char 
 12027 ;; Registers used:
 12028 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;Total ram usage:        0 bytes
 12039 ;; Hardware stack levels used:    1
 12040 ;; Hardware stack levels required when called:   11
 12041 ;; This function calls:
 12042 ;;		_sendRequest
 12043 ;; This function is called by:
 12044 ;;		_DHCP_Handler
 12045 ;; This function uses a non-reentrant model
 12046 ;;
 12047                           
 12048                           	psect	text53
 12049  016F1E                     __ptext53:
 12050                           	opt stack 0
 12051  016F1E                     _sendDHCPDECLINE:
 12052                           	opt stack 14
 12053                           
 12054                           ;dhcp_client.c: 138: return sendRequest(DHCP_DECLINE);
 12055                           ;	Return value of _sendDHCPDECLINE is never used
 12056                           
 12057                           ;incstack = 0
 12058  016F1E  0E04               	movlw	4
 12059  016F20  ECE0  F0A1         	call	_sendRequest
 12060  016F24  0012               	return	
 12061  016F26                     __end_of_sendDHCPDECLINE:
 12062                           	opt stack 0
 12063                           tosu	equ	0xFFF
 12064                           tosh	equ	0xFFE
 12065                           tosl	equ	0xFFD
 12066                           pclath	equ	0xFFA
 12067                           tblptru	equ	0xFF8
 12068                           tblptrh	equ	0xFF7
 12069                           tblptrl	equ	0xFF6
 12070                           tablat	equ	0xFF5
 12071                           prodh	equ	0xFF4
 12072                           prodl	equ	0xFF3
 12073                           intcon	equ	0xFF2
 12074                           indf0	equ	0xFEF
 12075                           postinc0	equ	0xFEE
 12076                           fsr0h	equ	0xFEA
 12077                           fsr0l	equ	0xFE9
 12078                           wreg	equ	0xFE8
 12079                           indf1	equ	0xFE7
 12080                           postinc1	equ	0xFE6
 12081                           postdec1	equ	0xFE5
 12082                           plusw1	equ	0xFE3
 12083                           fsr1h	equ	0xFE2
 12084                           fsr1l	equ	0xFE1
 12085                           indf2	equ	0xFDF
 12086                           postinc2	equ	0xFDE
 12087                           postdec2	equ	0xFDD
 12088                           plusw2	equ	0xFDB
 12089                           fsr2h	equ	0xFDA
 12090                           fsr2l	equ	0xFD9
 12091                           status	equ	0xFD8
 12092                           
 12093 ;; *************** function _memcmp *****************
 12094 ;; Defined at:
 12095 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\memcmp.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;  s1              2   18[COMRAM] PTR const void 
 12098 ;;		 -> DHCP_Handler@chaddr(16), 
 12099 ;;  s2              2   20[COMRAM] PTR const void 
 12100 ;;		 -> broadcastMAC(6), hostMacAddress(6), 
 12101 ;;  n               2   22[COMRAM] unsigned int 
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;		None
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  2   18[COMRAM] int 
 12106 ;; Registers used:
 12107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12113 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;Total ram usage:        9 bytes
 12118 ;; Hardware stack levels used:    1
 12119 ;; Hardware stack levels required when called:    4
 12120 ;; This function calls:
 12121 ;;		Nothing
 12122 ;; This function is called by:
 12123 ;;		_DHCP_Handler
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	text54
 12128  015C1E                     __ptext54:
 12129                           	opt stack 0
 12130  015C1E                     _memcmp:
 12131                           	opt stack 21
 12132                           
 12133                           ;incstack = 0
 12134  015C1E  D042               	goto	l2564
 12135  015C20                     l10882:
 12136  015C20  C013  FFD9         	movff	memcmp@s1,fsr2l
 12137  015C24  C014  FFDA         	movff	memcmp@s1+1,fsr2h
 12138  015C28  50DF               	movf	indf2,w,c
 12139  015C2A  6E19               	movwf	??_memcmp& (0+255),c
 12140  015C2C  C015  FFF6         	movff	memcmp@s2,tblptrl
 12141  015C30  C016  FFF7         	movff	memcmp@s2+1,tblptrh
 12142  015C34  0E00               	movlw	low (__mediumconst shr (0+16))
 12143  015C36  6EF8               	movwf	tblptru,c
 12144  015C38  0E0F               	movlw	(high __ramtop+-1)
 12145  015C3A  64F7               	cpfsgt	tblptrh,c
 12146  015C3C  D003               	bra	u10437
 12147  015C3E  0008               	tblrd		*
 12148  015C40  50F5               	movf	tablat,w,c
 12149  015C42  D005               	bra	u10430
 12150  015C44                     u10437:
 12151  015C44  CFF6 FFE9          	movff	tblptrl,fsr0l
 12152  015C48  CFF7 FFEA          	movff	tblptrh,fsr0h
 12153  015C4C  50EF               	movf	indf0,w,c
 12154  015C4E                     u10430:
 12155  015C4E  1819               	xorwf	??_memcmp,w,c
 12156  015C50  B4D8               	btfsc	status,2,c
 12157  015C52  D024               	goto	l2566
 12158  015C54  C015  FFF6         	movff	memcmp@s2,tblptrl
 12159  015C58  C016  FFF7         	movff	memcmp@s2+1,tblptrh
 12160  015C5C  0E00               	movlw	low (__mediumconst shr (0+16))
 12161  015C5E  6EF8               	movwf	tblptru,c
 12162  015C60  0E0F               	movlw	(high __ramtop+-1)
 12163  015C62  64F7               	cpfsgt	tblptrh,c
 12164  015C64  D003               	bra	u10457
 12165  015C66  0008               	tblrd		*
 12166  015C68  50F5               	movf	tablat,w,c
 12167  015C6A  D005               	bra	u10450
 12168  015C6C                     u10457:
 12169  015C6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 12170  015C70  CFF7 FFEA          	movff	tblptrh,fsr0h
 12171  015C74  50EF               	movf	indf0,w,c
 12172  015C76                     u10450:
 12173  015C76  6E19               	movwf	??_memcmp& (0+255),c
 12174  015C78  6A1A               	clrf	(??_memcmp+1)& (0+255),c
 12175  015C7A  1E19               	comf	??_memcmp,f,c
 12176  015C7C  1E1A               	comf	??_memcmp+1,f,c
 12177  015C7E  4A19               	infsnz	??_memcmp,f,c
 12178  015C80  2A1A               	incf	??_memcmp+1,f,c
 12179  015C82  C013  FFD9         	movff	memcmp@s1,fsr2l
 12180  015C86  C014  FFDA         	movff	memcmp@s1+1,fsr2h
 12181  015C8A  50DF               	movf	indf2,w,c
 12182  015C8C  6E1B               	movwf	(??_memcmp+2)& (0+255),c
 12183  015C8E  501B               	movf	??_memcmp+2,w,c
 12184  015C90  2419               	addwf	??_memcmp,w,c
 12185  015C92  6E13               	movwf	?_memcmp,c
 12186  015C94  0E00               	movlw	0
 12187  015C96  201A               	addwfc	??_memcmp+1,w,c
 12188  015C98  6E14               	movwf	?_memcmp+1,c
 12189  015C9A  0012               	return	
 12190  015C9C                     l2566:
 12191  015C9C  4A13               	infsnz	memcmp@s1,f,c
 12192  015C9E  2A14               	incf	memcmp@s1+1,f,c
 12193  015CA0  4A15               	infsnz	memcmp@s2,f,c
 12194  015CA2  2A16               	incf	memcmp@s2+1,f,c
 12195  015CA4                     l2564:
 12196  015CA4  0617               	decf	memcmp@n,f,c
 12197  015CA6  A0D8               	btfss	status,0,c
 12198  015CA8  0618               	decf	memcmp@n+1,f,c
 12199  015CAA  2817               	incf	memcmp@n,w,c
 12200  015CAC  E1B9               	bnz	l10882
 12201  015CAE  2818               	incf	memcmp@n+1,w,c
 12202  015CB0  A4D8               	btfss	status,2,c
 12203  015CB2  D7B6               	goto	l2565
 12204  015CB4  0E00               	movlw	0
 12205  015CB6  6E14               	movwf	?_memcmp+1,c
 12206  015CB8  0E00               	movlw	0
 12207  015CBA  6E13               	movwf	?_memcmp,c
 12208  015CBC  0012               	return	
 12209  015CBE                     __end_of_memcmp:
 12210                           	opt stack 0
 12211                           tosu	equ	0xFFF
 12212                           tosh	equ	0xFFE
 12213                           tosl	equ	0xFFD
 12214                           pclath	equ	0xFFA
 12215                           tblptru	equ	0xFF8
 12216                           tblptrh	equ	0xFF7
 12217                           tblptrl	equ	0xFF6
 12218                           tablat	equ	0xFF5
 12219                           prodh	equ	0xFF4
 12220                           prodl	equ	0xFF3
 12221                           intcon	equ	0xFF2
 12222                           indf0	equ	0xFEF
 12223                           postinc0	equ	0xFEE
 12224                           fsr0h	equ	0xFEA
 12225                           fsr0l	equ	0xFE9
 12226                           wreg	equ	0xFE8
 12227                           indf1	equ	0xFE7
 12228                           postinc1	equ	0xFE6
 12229                           postdec1	equ	0xFE5
 12230                           plusw1	equ	0xFE3
 12231                           fsr1h	equ	0xFE2
 12232                           fsr1l	equ	0xFE1
 12233                           indf2	equ	0xFDF
 12234                           postinc2	equ	0xFDE
 12235                           postdec2	equ	0xFDD
 12236                           plusw2	equ	0xFDB
 12237                           fsr2h	equ	0xFDA
 12238                           fsr2l	equ	0xFD9
 12239                           status	equ	0xFD8
 12240                           
 12241 ;; *************** function _ETH_Read32 *****************
 12242 ;; Defined at:
 12243 ;;		line 495 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;		None
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;  ret             4   22[COMRAM] unsigned long 
 12248 ;; Return value:  Size  Location     Type
 12249 ;;                  4   18[COMRAM] unsigned long 
 12250 ;; Registers used:
 12251 ;;		wreg, status,2, status,0, cstack
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12260 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;Total ram usage:        8 bytes
 12262 ;; Hardware stack levels used:    1
 12263 ;; Hardware stack levels required when called:    5
 12264 ;; This function calls:
 12265 ;;		_ETH_EdataRead
 12266 ;; This function is called by:
 12267 ;;		_DHCP_Handler
 12268 ;;		_DNS_Handler
 12269 ;;		_NTP_Handler
 12270 ;; This function uses a non-reentrant model
 12271 ;;
 12272                           
 12273                           	psect	text55
 12274  01653C                     __ptext55:
 12275                           	opt stack 0
 12276  01653C                     _ETH_Read32:
 12277                           	opt stack 20
 12278                           
 12279                           ;ETHxxJ6x_driver.c: 497: uint32_t ret = 0;
 12280                           
 12281                           ;incstack = 0
 12282  01653C  0E00               	movlw	0
 12283  01653E  6E17               	movwf	ETH_Read32@ret,c
 12284  016540  0E00               	movlw	0
 12285  016542  6E18               	movwf	ETH_Read32@ret+1,c
 12286  016544  0E00               	movlw	0
 12287  016546  6E19               	movwf	ETH_Read32@ret+2,c
 12288  016548  0E00               	movlw	0
 12289  01654A  6E1A               	movwf	ETH_Read32@ret+3,c
 12290                           
 12291                           ;ETHxxJ6x_driver.c: 498: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 12292  01654C  0102               	movlb	2	; () banked
 12293  01654E  5137               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 12294  016550  E104               	bnz	u10210
 12295  016552  0E04               	movlw	4
 12296  016554  5D36               	subwf	_rxPacketStatusVector& (0+255),w,b
 12297  016556  A0D8               	btfss	status,0,c
 12298  016558  D013               	goto	l567
 12299  01655A                     u10210:
 12300                           
 12301                           ; BSR set to: 2
 12302                           ;ETHxxJ6x_driver.c: 499: {
 12303                           ;ETHxxJ6x_driver.c: 500: ((uint8_t *)&ret)[3] = ETH_EdataRead();
 12304  01655A  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 12305  01655E  6E1A               	movwf	ETH_Read32@ret+3,c
 12306                           
 12307                           ;ETHxxJ6x_driver.c: 501: ((uint8_t *)&ret)[2] = ETH_EdataRead();
 12308  016560  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 12309  016564  6E19               	movwf	ETH_Read32@ret+2,c
 12310                           
 12311                           ;ETHxxJ6x_driver.c: 502: ((uint8_t *)&ret)[1] = ETH_EdataRead();
 12312  016566  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 12313  01656A  6E18               	movwf	ETH_Read32@ret+1,c
 12314                           
 12315                           ;ETHxxJ6x_driver.c: 503: ((uint8_t *)&ret)[0] = ETH_EdataRead();
 12316  01656C  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 12317  016570  6E17               	movwf	ETH_Read32@ret,c
 12318                           
 12319                           ;ETHxxJ6x_driver.c: 504: rxPacketStatusVector.byteCount -= sizeof(ret);
 12320  016572  0E04               	movlw	4
 12321  016574  0102               	movlb	2	; () banked
 12322  016576  5F36               	subwf	_rxPacketStatusVector& (0+255),f,b
 12323  016578  0E00               	movlw	0
 12324  01657A  5B37               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 12325                           
 12326                           ; BSR set to: 2
 12327                           ;ETHxxJ6x_driver.c: 505: ethData.error = 0;
 12328  01657C  9124               	bcf	_ethData& (0+255),0,b	;volatile
 12329                           
 12330                           ;ETHxxJ6x_driver.c: 506: }
 12331  01657E  D001               	goto	l568
 12332  016580                     l567:
 12333                           
 12334                           ; BSR set to: 2
 12335                           ;ETHxxJ6x_driver.c: 507: else
 12336                           ;ETHxxJ6x_driver.c: 508: {
 12337                           ;ETHxxJ6x_driver.c: 509: ethData.error = 1;
 12338  016580  8124               	bsf	_ethData& (0+255),0,b	;volatile
 12339  016582                     l568:
 12340                           
 12341                           ; BSR set to: 2
 12342                           ;ETHxxJ6x_driver.c: 510: }
 12343                           ;ETHxxJ6x_driver.c: 511: return ret;
 12344  016582  C017  F013         	movff	ETH_Read32@ret,?_ETH_Read32
 12345  016586  C018  F014         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
 12346  01658A  C019  F015         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
 12347  01658E  C01A  F016         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
 12348                           
 12349                           ; BSR set to: 2
 12350  016592  0012               	return		;funcret
 12351  016594                     __end_of_ETH_Read32:
 12352                           	opt stack 0
 12353                           tosu	equ	0xFFF
 12354                           tosh	equ	0xFFE
 12355                           tosl	equ	0xFFD
 12356                           pclath	equ	0xFFA
 12357                           tblptru	equ	0xFF8
 12358                           tblptrh	equ	0xFF7
 12359                           tblptrl	equ	0xFF6
 12360                           tablat	equ	0xFF5
 12361                           prodh	equ	0xFF4
 12362                           prodl	equ	0xFF3
 12363                           intcon	equ	0xFF2
 12364                           indf0	equ	0xFEF
 12365                           postinc0	equ	0xFEE
 12366                           fsr0h	equ	0xFEA
 12367                           fsr0l	equ	0xFE9
 12368                           wreg	equ	0xFE8
 12369                           indf1	equ	0xFE7
 12370                           postinc1	equ	0xFE6
 12371                           postdec1	equ	0xFE5
 12372                           plusw1	equ	0xFE3
 12373                           fsr1h	equ	0xFE2
 12374                           fsr1l	equ	0xFE1
 12375                           indf2	equ	0xFDF
 12376                           postinc2	equ	0xFDE
 12377                           postdec2	equ	0xFDD
 12378                           plusw2	equ	0xFDB
 12379                           fsr2h	equ	0xFDA
 12380                           fsr2l	equ	0xFD9
 12381                           status	equ	0xFD8
 12382                           
 12383 ;; *************** function _TCP_Recv *****************
 12384 ;; Defined at:
 12385 ;;		line 486 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  remoteAddres    4    5[BANK1 ] unsigned long 
 12388 ;;  length          2    9[BANK1 ] unsigned int 
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;  tcbPtr          2  157[BANK0 ] PTR struct .
 12391 ;;		 -> NULL(0), 
 12392 ;;  count           1  156[BANK0 ] char 
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  1    wreg      void 
 12395 ;; Registers used:
 12396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/0
 12399 ;;		On exit  : 0/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12402 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12403 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12404 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12405 ;;      Totals:         0       3      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12406 ;;Total ram usage:       37 bytes
 12407 ;; Hardware stack levels used:    1
 12408 ;; Hardware stack levels required when called:   12
 12409 ;; This function calls:
 12410 ;;		_ETH_ReadBlock
 12411 ;;		_TCP_FiniteStateMachine
 12412 ;;		_TCP_ParseTCPOptions
 12413 ;; This function is called by:
 12414 ;;		_IPV4_Packet
 12415 ;; This function uses a non-reentrant model
 12416 ;;
 12417                           
 12418                           	psect	text56
 12419  0130C2                     __ptext56:
 12420                           	opt stack 0
 12421  0130C2                     _TCP_Recv:
 12422                           	opt stack 15
 12423                           
 12424                           ;tcpv4.c: 488: tcpTCB_t *tcbPtr;
 12425                           ;tcpv4.c: 489: socklistsize_t count = 0;
 12426                           
 12427                           ; BSR set to: 2
 12428                           ;incstack = 0
 12429  0130C2  0E00               	movlw	0
 12430  0130C4  0100               	movlb	0	; () banked
 12431  0130C6  6FFC               	movwf	TCP_Recv@count& (0+255),b
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;tcpv4.c: 491: tcbPtr = (0);
 12435  0130C8  0E00               	movlw	0
 12436  0130CA  6FFD               	movwf	TCP_Recv@tcbPtr& (0+255),b
 12437  0130CC  0E00               	movlw	0
 12438  0130CE  6FFE               	movwf	(TCP_Recv@tcbPtr+1)& (0+255),b
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;tcpv4.c: 493: receivedRemoteAddress = 0;
 12442  0130D0  0E00               	movlw	0
 12443  0130D2  0102               	movlb	2	; () banked
 12444  0130D4  6F2A               	movwf	_receivedRemoteAddress& (0+255),b
 12445  0130D6  0E00               	movlw	0
 12446  0130D8  6F2B               	movwf	(_receivedRemoteAddress+1)& (0+255),b
 12447  0130DA  0E00               	movlw	0
 12448  0130DC  6F2C               	movwf	(_receivedRemoteAddress+2)& (0+255),b
 12449  0130DE  0E00               	movlw	0
 12450  0130E0  6F2D               	movwf	(_receivedRemoteAddress+3)& (0+255),b
 12451                           
 12452                           ; BSR set to: 2
 12453                           ;tcpv4.c: 494: rcvPayloadLen = 0;
 12454  0130E2  0E00               	movlw	0
 12455  0130E4  6F49               	movwf	(_rcvPayloadLen+1)& (0+255),b
 12456  0130E6  0E00               	movlw	0
 12457  0130E8  6F48               	movwf	_rcvPayloadLen& (0+255),b
 12458                           
 12459                           ; BSR set to: 2
 12460                           ;tcpv4.c: 496: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
 12461  0130EA  0E59               	movlw	low _tcpHeader
 12462  0130EC  6E13               	movwf	ETH_ReadBlock@buffer,c
 12463  0130EE  0E02               	movlw	high _tcpHeader
 12464  0130F0  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 12465  0130F2  0E00               	movlw	0
 12466  0130F4  6E16               	movwf	ETH_ReadBlock@length+1,c
 12467  0130F6  0E14               	movlw	20
 12468  0130F8  6E15               	movwf	ETH_ReadBlock@length,c
 12469  0130FA  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
 12470                           
 12471                           ;tcpv4.c: 498: currentTCB = (0);
 12472  0130FE  0E00               	movlw	0
 12473  013100  6E3D               	movwf	_currentTCB,c
 12474  013102  0E00               	movlw	0
 12475  013104  6E3E               	movwf	_currentTCB+1,c
 12476                           
 12477                           ;tcpv4.c: 501: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
 12478  013106  0102               	movlb	2	; () banked
 12479  013108  515B               	movf	(_tcpHeader+2)& (0+255),w,b
 12480  01310A  115C               	iorwf	(_tcpHeader+3)& (0+255),w,b
 12481  01310C  B4D8               	btfsc	status,2,c
 12482  01310E  0012               	return	
 12483                           
 12484                           ; BSR set to: 2
 12485  013110  5159               	movf	_tcpHeader& (0+255),w,b
 12486  013112  115A               	iorwf	(_tcpHeader+1)& (0+255),w,b
 12487  013114  B4D8               	btfsc	status,2,c
 12488  013116  0012               	return	
 12489                           
 12490                           ; BSR set to: 2
 12491                           ;tcpv4.c: 502: {
 12492                           ;tcpv4.c: 503: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
 12493  013118  5159               	movf	_tcpHeader& (0+255),w,b
 12494  01311A  0101               	movlb	1	; () banked
 12495  01311C  6F0C               	movwf	(??_TCP_Recv+1)& (0+255),b
 12496  01311E  6B0B               	clrf	??_TCP_Recv& (0+255),b
 12497  013120  C259  F10D         	movff	_tcpHeader,??_TCP_Recv+2
 12498  013124  C25A  F10E         	movff	_tcpHeader+1,??_TCP_Recv+3
 12499  013128  C10E  F10D         	movff	??_TCP_Recv+3,??_TCP_Recv+2
 12500  01312C  6B0E               	clrf	(??_TCP_Recv+3)& (0+255),b
 12501  01312E  0EFF               	movlw	255
 12502  013130  170D               	andwf	(??_TCP_Recv+2)& (0+255),f,b
 12503  013132  0E00               	movlw	0
 12504  013134  170E               	andwf	(??_TCP_Recv+3)& (0+255),f,b
 12505  013136  510B               	movf	??_TCP_Recv& (0+255),w,b
 12506  013138  110D               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
 12507  01313A  0102               	movlb	2	; () banked
 12508  01313C  6F59               	movwf	_tcpHeader& (0+255),b
 12509  01313E  0101               	movlb	1	; () banked
 12510  013140  510C               	movf	(??_TCP_Recv+1)& (0+255),w,b
 12511  013142  110E               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
 12512  013144  0102               	movlb	2	; () banked
 12513  013146  6F5A               	movwf	(_tcpHeader+1)& (0+255),b
 12514                           
 12515                           ; BSR set to: 2
 12516                           ;tcpv4.c: 504: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
 12517  013148  515B               	movf	(_tcpHeader+2)& (0+255),w,b
 12518  01314A  0101               	movlb	1	; () banked
 12519  01314C  6F0C               	movwf	(??_TCP_Recv+1)& (0+255),b
 12520  01314E  6B0B               	clrf	??_TCP_Recv& (0+255),b
 12521  013150  EE22  F05B         	lfsr	2,_tcpHeader+2
 12522  013154  CFDE F10D          	movff	postinc2,??_TCP_Recv+2
 12523  013158  CFDD F10E          	movff	postdec2,??_TCP_Recv+3
 12524  01315C  C10E  F10D         	movff	??_TCP_Recv+3,??_TCP_Recv+2
 12525  013160  6B0E               	clrf	(??_TCP_Recv+3)& (0+255),b
 12526  013162  0EFF               	movlw	255
 12527  013164  170D               	andwf	(??_TCP_Recv+2)& (0+255),f,b
 12528  013166  0E00               	movlw	0
 12529  013168  170E               	andwf	(??_TCP_Recv+3)& (0+255),f,b
 12530  01316A  510B               	movf	??_TCP_Recv& (0+255),w,b
 12531  01316C  110D               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
 12532  01316E  0102               	movlb	2	; () banked
 12533  013170  6F5B               	movwf	(_tcpHeader+2)& (0+255),b
 12534  013172  0101               	movlb	1	; () banked
 12535  013174  510C               	movf	(??_TCP_Recv+1)& (0+255),w,b
 12536  013176  110E               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
 12537  013178  0102               	movlb	2	; () banked
 12538  01317A  6F5C               	movwf	(_tcpHeader+3)& (0+255),b
 12539                           
 12540                           ; BSR set to: 2
 12541                           ;tcpv4.c: 507: tcbPtr = tcbList;
 12542  01317C  C03F  F0FD         	movff	_tcbList,TCP_Recv@tcbPtr
 12543  013180  C040  F0FE         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
 12544                           
 12545                           ;tcpv4.c: 508: while((tcbPtr != (0)) && (count < tcbListSize))
 12546  013184  D01D               	goto	l1655
 12547  013186                     
 12548                           ;tcpv4.c: 509: {
 12549                           ;tcpv4.c: 510: if (tcpHeader.destPort == tcbPtr->localPort)
 12550                           
 12551                           ; BSR set to: 2
 12552  013186  C0FD  FFD9         	movff	TCP_Recv@tcbPtr,fsr2l
 12553  01318A  C0FE  FFDA         	movff	TCP_Recv@tcbPtr+1,fsr2h
 12554  01318E  50DE               	movf	postinc2,w,c
 12555  013190  0102               	movlb	2	; () banked
 12556  013192  195B               	xorwf	(_tcpHeader+2)& (0+255),w,b
 12557  013194  E109               	bnz	l12280
 12558  013196  50DE               	movf	postinc2,w,c
 12559  013198  195C               	xorwf	(_tcpHeader+3)& (0+255),w,b
 12560  01319A  A4D8               	btfss	status,2,c
 12561  01319C  D005               	goto	l1653
 12562                           
 12563                           ; BSR set to: 2
 12564                           ;tcpv4.c: 511: {
 12565                           ;tcpv4.c: 512: currentTCB = tcbPtr;
 12566  01319E  C0FD  F03D         	movff	TCP_Recv@tcbPtr,_currentTCB
 12567  0131A2  C0FE  F03E         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
 12568                           
 12569                           ;tcpv4.c: 513: break;
 12570  0131A6  D01A               	goto	u12290
 12571  0131A8                     l1653:
 12572  0131A8                     l12280:
 12573                           
 12574                           ; BSR set to: 2
 12575                           ;tcpv4.c: 515: else
 12576                           ;tcpv4.c: 516: {
 12577                           ;tcpv4.c: 517: tcbPtr = tcbPtr->nextTCB;
 12578  0131A8  0100               	movlb	0	; () banked
 12579  0131AA  EE20 F02F          	lfsr	2,47
 12580  0131AE  51FD               	movf	TCP_Recv@tcbPtr& (0+255),w,b
 12581  0131B0  26D9               	addwf	fsr2l,f,c
 12582  0131B2  51FE               	movf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
 12583  0131B4  22DA               	addwfc	fsr2h,f,c
 12584  0131B6  CFDE F0FD          	movff	postinc2,TCP_Recv@tcbPtr
 12585  0131BA  CFDD F0FE          	movff	postdec2,TCP_Recv@tcbPtr+1
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;tcpv4.c: 518: count ++;
 12589  0131BE  2BFC               	incf	TCP_Recv@count& (0+255),f,b
 12590  0131C0                     l1655:
 12591                           
 12592                           ; BSR set to: 0
 12593                           
 12594                           ; BSR set to: 0
 12595  0131C0  0100               	movlb	0	; () banked
 12596  0131C2  51FD               	movf	TCP_Recv@tcbPtr& (0+255),w,b
 12597  0131C4  11FE               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
 12598  0131C6  B4D8               	btfsc	status,2,c
 12599  0131C8  D009               	goto	u12290
 12600                           
 12601                           ; BSR set to: 0
 12602  0131CA  51FC               	movf	TCP_Recv@count& (0+255),w,b
 12603  0131CC  0A80               	xorlw	128
 12604  0131CE  0101               	movlb	1	; () banked
 12605  0131D0  6F0B               	movwf	??_TCP_Recv& (0+255),b
 12606  0131D2  5047               	movf	_tcbListSize,w,c
 12607  0131D4  0A80               	xorlw	128
 12608  0131D6  5D0B               	subwf	??_TCP_Recv& (0+255),w,b
 12609  0131D8  A0D8               	btfss	status,0,c
 12610  0131DA  D7D5               	goto	l1652
 12611  0131DC                     u12290:
 12612                           
 12613                           ;tcpv4.c: 519: }
 12614                           ;tcpv4.c: 520: }
 12615                           ;tcpv4.c: 522: if (currentTCB != (0))
 12616                           
 12617                           ; BSR set to: 1
 12618                           
 12619                           ; BSR set to: 1
 12620  0131DC  503D               	movf	_currentTCB,w,c
 12621  0131DE  103E               	iorwf	_currentTCB+1,w,c
 12622  0131E0  B4D8               	btfsc	status,2,c
 12623  0131E2  0012               	return	
 12624                           
 12625                           ;tcpv4.c: 523: {
 12626                           ;tcpv4.c: 524: if((tcpHeader.sourcePort == currentTCB->destPort) ||
 12627                           ;tcpv4.c: 525: (currentTCB->destIP == 0))
 12628  0131E4  EE20 F006          	lfsr	2,6
 12629  0131E8  503D               	movf	_currentTCB,w,c
 12630  0131EA  26D9               	addwf	fsr2l,f,c
 12631  0131EC  503E               	movf	_currentTCB+1,w,c
 12632  0131EE  22DA               	addwfc	fsr2h,f,c
 12633  0131F0  0102               	movlb	2	; () banked
 12634  0131F2  5159               	movf	_tcpHeader& (0+255),w,b
 12635  0131F4  18DE               	xorwf	postinc2,w,c
 12636  0131F6  E104               	bnz	u12310
 12637  0131F8  515A               	movf	(_tcpHeader+1)& (0+255),w,b
 12638  0131FA  18DE               	xorwf	postinc2,w,c
 12639  0131FC  B4D8               	btfsc	status,2,c
 12640  0131FE  D00C               	goto	u12320
 12641  013200                     u12310:
 12642                           
 12643                           ; BSR set to: 2
 12644  013200  EE20 F002          	lfsr	2,2
 12645  013204  503D               	movf	_currentTCB,w,c
 12646  013206  26D9               	addwf	fsr2l,f,c
 12647  013208  503E               	movf	_currentTCB+1,w,c
 12648  01320A  22DA               	addwfc	fsr2h,f,c
 12649  01320C  50DE               	movf	postinc2,w,c
 12650  01320E  10DE               	iorwf	postinc2,w,c
 12651  013210  10DE               	iorwf	postinc2,w,c
 12652  013212  10DE               	iorwf	postinc2,w,c
 12653  013214  A4D8               	btfss	status,2,c
 12654  013216  0012               	return	
 12655  013218                     u12320:
 12656                           
 12657                           ; BSR set to: 2
 12658                           ;tcpv4.c: 526: {
 12659                           ;tcpv4.c: 529: receivedRemoteAddress = remoteAddress;
 12660  013218  C105  F22A         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
 12661  01321C  C106  F22B         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
 12662  013220  C107  F22C         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
 12663  013224  C108  F22D         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
 12664                           
 12665                           ; BSR set to: 2
 12666                           ;tcpv4.c: 530: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
 12667  013228  3965               	swapf	(_tcpHeader+12)& (0+255),w,b
 12668  01322A  0B0F               	andlw	15
 12669  01322C  0101               	movlb	1	; () banked
 12670  01322E  6F0B               	movwf	??_TCP_Recv& (0+255),b
 12671  013230  6B0C               	clrf	(??_TCP_Recv+1)& (0+255),b
 12672  013232  90D8               	bcf	status,0,c
 12673  013234  370B               	rlcf	??_TCP_Recv& (0+255),f,b
 12674  013236  370C               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
 12675  013238  90D8               	bcf	status,0,c
 12676  01323A  370B               	rlcf	??_TCP_Recv& (0+255),f,b
 12677  01323C  370C               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
 12678  01323E  1F0B               	comf	??_TCP_Recv& (0+255),f,b
 12679  013240  1F0C               	comf	(??_TCP_Recv+1)& (0+255),f,b
 12680  013242  4B0B               	infsnz	??_TCP_Recv& (0+255),f,b
 12681  013244  2B0C               	incf	(??_TCP_Recv+1)& (0+255),f,b
 12682  013246  5109               	movf	TCP_Recv@length& (0+255),w,b
 12683  013248  250B               	addwf	??_TCP_Recv& (0+255),w,b
 12684  01324A  0102               	movlb	2	; () banked
 12685  01324C  6F48               	movwf	_rcvPayloadLen& (0+255),b
 12686  01324E  0101               	movlb	1	; () banked
 12687  013250  510A               	movf	(TCP_Recv@length+1)& (0+255),w,b
 12688  013252  210C               	addwfc	(??_TCP_Recv+1)& (0+255),w,b
 12689  013254  0102               	movlb	2	; () banked
 12690  013256  6F49               	movwf	(_rcvPayloadLen+1)& (0+255),b
 12691                           
 12692                           ; BSR set to: 2
 12693                           ;tcpv4.c: 533: if (TCP_ParseTCPOptions() == 1)
 12694  013258  EC7D  F0A8         	call	_TCP_ParseTCPOptions	;wreg free
 12695  01325C  06E8               	decf	wreg,f,c
 12696  01325E  A4D8               	btfss	status,2,c
 12697  013260  0012               	return	
 12698                           
 12699                           ;tcpv4.c: 534: {
 12700                           ;tcpv4.c: 537: if(tcpHeader.syn)
 12701  013262  0102               	movlb	2	; () banked
 12702  013264  A366               	btfss	(_tcpHeader+13)& (0+255),1,b
 12703  013266  D012               	goto	l1663
 12704                           
 12705                           ; BSR set to: 2
 12706                           ;tcpv4.c: 538: {
 12707                           ;tcpv4.c: 539: if(tcpHeader.ack)
 12708  013268  A966               	btfss	(_tcpHeader+13)& (0+255),4,b
 12709  01326A  D008               	goto	l1664
 12710                           
 12711                           ; BSR set to: 2
 12712                           ;tcpv4.c: 540: {
 12713                           ;tcpv4.c: 541: currentTCB->connectionEvent = RCV_SYNACK;
 12714  01326C  EE20 F02E          	lfsr	2,46
 12715  013270  503D               	movf	_currentTCB,w,c
 12716  013272  26D9               	addwf	fsr2l,f,c
 12717  013274  503E               	movf	_currentTCB+1,w,c
 12718  013276  22DA               	addwfc	fsr2h,f,c
 12719  013278  0E05               	movlw	5
 12720  01327A  D039               	goto	L9
 12721  01327C                     l1664:
 12722                           
 12723                           ; BSR set to: 2
 12724                           ;tcpv4.c: 543: {
 12725                           ;tcpv4.c: 544: currentTCB->connectionEvent = RCV_SYN;
 12726                           
 12727                           ; BSR set to: 2
 12728  01327C  EE20 F02E          	lfsr	2,46
 12729  013280  503D               	movf	_currentTCB,w,c
 12730  013282  26D9               	addwf	fsr2l,f,c
 12731  013284  503E               	movf	_currentTCB+1,w,c
 12732  013286  22DA               	addwfc	fsr2h,f,c
 12733  013288  0E03               	movlw	3
 12734  01328A  D031               	goto	L9
 12735  01328C                     l1663:
 12736                           
 12737                           ; BSR set to: 2
 12738  01328C  A166               	btfss	(_tcpHeader+13)& (0+255),0,b
 12739  01328E  D012               	goto	l1667
 12740                           
 12741                           ; BSR set to: 2
 12742                           ;tcpv4.c: 547: {
 12743                           ;tcpv4.c: 548: if(tcpHeader.ack)
 12744  013290  A966               	btfss	(_tcpHeader+13)& (0+255),4,b
 12745  013292  D008               	goto	l1668
 12746                           
 12747                           ; BSR set to: 2
 12748                           ;tcpv4.c: 549: {
 12749                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
 12750  013294  EE20 F02E          	lfsr	2,46
 12751  013298  503D               	movf	_currentTCB,w,c
 12752  01329A  26D9               	addwf	fsr2l,f,c
 12753  01329C  503E               	movf	_currentTCB+1,w,c
 12754  01329E  22DA               	addwfc	fsr2h,f,c
 12755  0132A0  0E07               	movlw	7
 12756  0132A2  D025               	goto	L9
 12757  0132A4                     l1668:
 12758                           
 12759                           ; BSR set to: 2
 12760                           ;tcpv4.c: 552: {
 12761                           ;tcpv4.c: 553: currentTCB->connectionEvent = RCV_FIN;
 12762                           
 12763                           ; BSR set to: 2
 12764  0132A4  EE20 F02E          	lfsr	2,46
 12765  0132A8  503D               	movf	_currentTCB,w,c
 12766  0132AA  26D9               	addwf	fsr2l,f,c
 12767  0132AC  503E               	movf	_currentTCB+1,w,c
 12768  0132AE  22DA               	addwfc	fsr2h,f,c
 12769  0132B0  0E06               	movlw	6
 12770  0132B2  D01D               	goto	L9
 12771  0132B4                     l1667:
 12772                           
 12773                           ; BSR set to: 2
 12774  0132B4  A566               	btfss	(_tcpHeader+13)& (0+255),2,b
 12775  0132B6  D012               	goto	l1671
 12776                           
 12777                           ; BSR set to: 2
 12778                           ;tcpv4.c: 556: {
 12779                           ;tcpv4.c: 557: if(tcpHeader.ack)
 12780  0132B8  A966               	btfss	(_tcpHeader+13)& (0+255),4,b
 12781  0132BA  D008               	goto	l1672
 12782                           
 12783                           ; BSR set to: 2
 12784                           ;tcpv4.c: 558: {
 12785                           ;tcpv4.c: 559: currentTCB->connectionEvent = RCV_RSTACK;
 12786  0132BC  EE20 F02E          	lfsr	2,46
 12787  0132C0  503D               	movf	_currentTCB,w,c
 12788  0132C2  26D9               	addwf	fsr2l,f,c
 12789  0132C4  503E               	movf	_currentTCB+1,w,c
 12790  0132C6  22DA               	addwfc	fsr2h,f,c
 12791  0132C8  0E0A               	movlw	10
 12792  0132CA  D011               	goto	L9
 12793  0132CC                     l1672:
 12794                           
 12795                           ; BSR set to: 2
 12796                           ;tcpv4.c: 561: {
 12797                           ;tcpv4.c: 562: currentTCB->connectionEvent = RCV_RST;
 12798                           
 12799                           ; BSR set to: 2
 12800  0132CC  EE20 F02E          	lfsr	2,46
 12801  0132D0  503D               	movf	_currentTCB,w,c
 12802  0132D2  26D9               	addwf	fsr2l,f,c
 12803  0132D4  503E               	movf	_currentTCB+1,w,c
 12804  0132D6  22DA               	addwfc	fsr2h,f,c
 12805  0132D8  0E09               	movlw	9
 12806  0132DA  D009               	goto	L9
 12807  0132DC                     l1671:
 12808                           
 12809                           ; BSR set to: 2
 12810  0132DC  A966               	btfss	(_tcpHeader+13)& (0+255),4,b
 12811  0132DE  D008               	goto	l1675
 12812                           
 12813                           ; BSR set to: 2
 12814                           ;tcpv4.c: 565: {
 12815                           ;tcpv4.c: 566: currentTCB->connectionEvent = RCV_ACK;
 12816  0132E0  EE20 F02E          	lfsr	2,46
 12817  0132E4  503D               	movf	_currentTCB,w,c
 12818  0132E6  26D9               	addwf	fsr2l,f,c
 12819  0132E8  503E               	movf	_currentTCB+1,w,c
 12820  0132EA  22DA               	addwfc	fsr2h,f,c
 12821  0132EC  0E04               	movlw	4
 12822  0132EE                     L9:
 12823  0132EE  6EDF               	movwf	indf2,c
 12824  0132F0                     l1675:
 12825                           
 12826                           ; BSR set to: 2
 12827                           ;tcpv4.c: 570: }
 12828                           ;tcpv4.c: 572: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
 12829                           
 12830                           ; BSR set to: 2
 12831                           
 12832                           ; BSR set to: 2
 12833                           
 12834                           ; BSR set to: 2
 12835                           
 12836                           ; BSR set to: 2
 12837                           
 12838                           ;tcpv4.c: 568: else
 12839                           ;tcpv4.c: 569: {
 12840                           
 12841                           ; BSR set to: 2
 12842  0132F0  0EFF               	movlw	255
 12843  0132F2  1561               	andwf	(_tcpHeader+8)& (0+255),w,b
 12844  0132F4  0101               	movlb	1	; () banked
 12845  0132F6  6F0B               	movwf	??_TCP_Recv& (0+255),b
 12846  0132F8  0E00               	movlw	0
 12847  0132FA  0102               	movlb	2	; () banked
 12848  0132FC  1562               	andwf	(_tcpHeader+9)& (0+255),w,b
 12849  0132FE  0101               	movlb	1	; () banked
 12850  013300  6F0C               	movwf	(??_TCP_Recv+1)& (0+255),b
 12851  013302  0E00               	movlw	0
 12852  013304  0102               	movlb	2	; () banked
 12853  013306  1563               	andwf	(_tcpHeader+10)& (0+255),w,b
 12854  013308  0101               	movlb	1	; () banked
 12855  01330A  6F0D               	movwf	(??_TCP_Recv+2)& (0+255),b
 12856  01330C  0E00               	movlw	0
 12857  01330E  0102               	movlb	2	; () banked
 12858  013310  1564               	andwf	(_tcpHeader+11)& (0+255),w,b
 12859  013312  0101               	movlb	1	; () banked
 12860  013314  6F0E               	movwf	(??_TCP_Recv+3)& (0+255),b
 12861  013316  C10B  F10E         	movff	??_TCP_Recv,??_TCP_Recv+3
 12862  01331A  6B0D               	clrf	(??_TCP_Recv+2)& (0+255),b
 12863  01331C  6B0C               	clrf	(??_TCP_Recv+1)& (0+255),b
 12864  01331E  6B0B               	clrf	??_TCP_Recv& (0+255),b
 12865  013320  EE22  F061         	lfsr	2,_tcpHeader+8
 12866  013324  0E00               	movlw	0
 12867  013326  14DE               	andwf	postinc2,w,c
 12868  013328  6F0F               	movwf	(??_TCP_Recv+4)& (0+255),b
 12869  01332A  0EFF               	movlw	255
 12870  01332C  14DE               	andwf	postinc2,w,c
 12871  01332E  6F10               	movwf	(??_TCP_Recv+5)& (0+255),b
 12872  013330  0E00               	movlw	0
 12873  013332  14DE               	andwf	postinc2,w,c
 12874  013334  6F11               	movwf	(??_TCP_Recv+6)& (0+255),b
 12875  013336  0E00               	movlw	0
 12876  013338  14DE               	andwf	postinc2,w,c
 12877  01333A  6F12               	movwf	(??_TCP_Recv+7)& (0+255),b
 12878  01333C  C111  F112         	movff	??_TCP_Recv+6,??_TCP_Recv+7
 12879  013340  C110  F111         	movff	??_TCP_Recv+5,??_TCP_Recv+6
 12880  013344  C10F  F110         	movff	??_TCP_Recv+4,??_TCP_Recv+5
 12881  013348  6B0F               	clrf	(??_TCP_Recv+4)& (0+255),b
 12882  01334A  C261  F113         	movff	_tcpHeader+8,??_TCP_Recv+8
 12883  01334E  C262  F114         	movff	_tcpHeader+9,??_TCP_Recv+9
 12884  013352  C263  F115         	movff	_tcpHeader+10,??_TCP_Recv+10
 12885  013356  C264  F116         	movff	_tcpHeader+11,??_TCP_Recv+11
 12886  01335A  C114  F113         	movff	??_TCP_Recv+9,??_TCP_Recv+8
 12887  01335E  C115  F114         	movff	??_TCP_Recv+10,??_TCP_Recv+9
 12888  013362  C116  F115         	movff	??_TCP_Recv+11,??_TCP_Recv+10
 12889  013366  6B16               	clrf	(??_TCP_Recv+11)& (0+255),b
 12890  013368  0E00               	movlw	0
 12891  01336A  1513               	andwf	(??_TCP_Recv+8)& (0+255),w,b
 12892  01336C  6F17               	movwf	(??_TCP_Recv+12)& (0+255),b
 12893  01336E  0EFF               	movlw	255
 12894  013370  1514               	andwf	(??_TCP_Recv+9)& (0+255),w,b
 12895  013372  6F18               	movwf	(??_TCP_Recv+13)& (0+255),b
 12896  013374  0E00               	movlw	0
 12897  013376  1515               	andwf	(??_TCP_Recv+10)& (0+255),w,b
 12898  013378  6F19               	movwf	(??_TCP_Recv+14)& (0+255),b
 12899  01337A  0E00               	movlw	0
 12900  01337C  1516               	andwf	(??_TCP_Recv+11)& (0+255),w,b
 12901  01337E  6F1A               	movwf	(??_TCP_Recv+15)& (0+255),b
 12902  013380  EE22  F061         	lfsr	2,_tcpHeader+8
 12903  013384  0E00               	movlw	0
 12904  013386  14DE               	andwf	postinc2,w,c
 12905  013388  6F1B               	movwf	(??_TCP_Recv+16)& (0+255),b
 12906  01338A  0E00               	movlw	0
 12907  01338C  14DE               	andwf	postinc2,w,c
 12908  01338E  6F1C               	movwf	(??_TCP_Recv+17)& (0+255),b
 12909  013390  0E00               	movlw	0
 12910  013392  14DE               	andwf	postinc2,w,c
 12911  013394  6F1D               	movwf	(??_TCP_Recv+18)& (0+255),b
 12912  013396  0EFF               	movlw	255
 12913  013398  14DE               	andwf	postinc2,w,c
 12914  01339A  6F1E               	movwf	(??_TCP_Recv+19)& (0+255),b
 12915  01339C  0E19               	movlw	25
 12916  01339E  D005               	goto	u12410
 12917  0133A0                     u12415:
 12918  0133A0  90D8               	bcf	status,0,c
 12919  0133A2  331E               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
 12920  0133A4  331D               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
 12921  0133A6  331C               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
 12922  0133A8  331B               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
 12923  0133AA                     u12410:
 12924  0133AA  2EE8               	decfsz	wreg,f,c
 12925  0133AC  D7F9               	goto	u12415
 12926  0133AE  5117               	movf	(??_TCP_Recv+12)& (0+255),w,b
 12927  0133B0  111B               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
 12928  0133B2  6F1F               	movwf	(??_TCP_Recv+20)& (0+255),b
 12929  0133B4  5118               	movf	(??_TCP_Recv+13)& (0+255),w,b
 12930  0133B6  111C               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
 12931  0133B8  6F20               	movwf	(??_TCP_Recv+21)& (0+255),b
 12932  0133BA  5119               	movf	(??_TCP_Recv+14)& (0+255),w,b
 12933  0133BC  111D               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
 12934  0133BE  6F21               	movwf	(??_TCP_Recv+22)& (0+255),b
 12935  0133C0  511A               	movf	(??_TCP_Recv+15)& (0+255),w,b
 12936  0133C2  111E               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
 12937  0133C4  6F22               	movwf	(??_TCP_Recv+23)& (0+255),b
 12938  0133C6  510F               	movf	(??_TCP_Recv+4)& (0+255),w,b
 12939  0133C8  111F               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
 12940  0133CA  6F23               	movwf	(??_TCP_Recv+24)& (0+255),b
 12941  0133CC  5110               	movf	(??_TCP_Recv+5)& (0+255),w,b
 12942  0133CE  1120               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
 12943  0133D0  6F24               	movwf	(??_TCP_Recv+25)& (0+255),b
 12944  0133D2  5111               	movf	(??_TCP_Recv+6)& (0+255),w,b
 12945  0133D4  1121               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
 12946  0133D6  6F25               	movwf	(??_TCP_Recv+26)& (0+255),b
 12947  0133D8  5112               	movf	(??_TCP_Recv+7)& (0+255),w,b
 12948  0133DA  1122               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
 12949  0133DC  6F26               	movwf	(??_TCP_Recv+27)& (0+255),b
 12950  0133DE  510B               	movf	??_TCP_Recv& (0+255),w,b
 12951  0133E0  1123               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
 12952  0133E2  0102               	movlb	2	; () banked
 12953  0133E4  6F61               	movwf	(_tcpHeader+8)& (0+255),b
 12954  0133E6  0101               	movlb	1	; () banked
 12955  0133E8  510C               	movf	(??_TCP_Recv+1)& (0+255),w,b
 12956  0133EA  1124               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
 12957  0133EC  0102               	movlb	2	; () banked
 12958  0133EE  6F62               	movwf	(_tcpHeader+9)& (0+255),b
 12959  0133F0  0101               	movlb	1	; () banked
 12960  0133F2  510D               	movf	(??_TCP_Recv+2)& (0+255),w,b
 12961  0133F4  1125               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
 12962  0133F6  0102               	movlb	2	; () banked
 12963  0133F8  6F63               	movwf	(_tcpHeader+10)& (0+255),b
 12964  0133FA  0101               	movlb	1	; () banked
 12965  0133FC  510E               	movf	(??_TCP_Recv+3)& (0+255),w,b
 12966  0133FE  1126               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
 12967  013400  0102               	movlb	2	; () banked
 12968  013402  6F64               	movwf	(_tcpHeader+11)& (0+255),b
 12969                           
 12970                           ;tcpv4.c: 573: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
 12971  013404  0EFF               	movlw	255
 12972  013406  155D               	andwf	(_tcpHeader+4)& (0+255),w,b
 12973  013408  0101               	movlb	1	; () banked
 12974  01340A  6F0B               	movwf	??_TCP_Recv& (0+255),b
 12975  01340C  0E00               	movlw	0
 12976  01340E  0102               	movlb	2	; () banked
 12977  013410  155E               	andwf	(_tcpHeader+5)& (0+255),w,b
 12978  013412  0101               	movlb	1	; () banked
 12979  013414  6F0C               	movwf	(??_TCP_Recv+1)& (0+255),b
 12980  013416  0E00               	movlw	0
 12981  013418  0102               	movlb	2	; () banked
 12982  01341A  155F               	andwf	(_tcpHeader+6)& (0+255),w,b
 12983  01341C  0101               	movlb	1	; () banked
 12984  01341E  6F0D               	movwf	(??_TCP_Recv+2)& (0+255),b
 12985  013420  0E00               	movlw	0
 12986  013422  0102               	movlb	2	; () banked
 12987  013424  1560               	andwf	(_tcpHeader+7)& (0+255),w,b
 12988  013426  0101               	movlb	1	; () banked
 12989  013428  6F0E               	movwf	(??_TCP_Recv+3)& (0+255),b
 12990  01342A  C10B  F10E         	movff	??_TCP_Recv,??_TCP_Recv+3
 12991  01342E  6B0D               	clrf	(??_TCP_Recv+2)& (0+255),b
 12992  013430  6B0C               	clrf	(??_TCP_Recv+1)& (0+255),b
 12993  013432  6B0B               	clrf	??_TCP_Recv& (0+255),b
 12994  013434  EE22  F05D         	lfsr	2,_tcpHeader+4
 12995  013438  0E00               	movlw	0
 12996  01343A  14DE               	andwf	postinc2,w,c
 12997  01343C  6F0F               	movwf	(??_TCP_Recv+4)& (0+255),b
 12998  01343E  0EFF               	movlw	255
 12999  013440  14DE               	andwf	postinc2,w,c
 13000  013442  6F10               	movwf	(??_TCP_Recv+5)& (0+255),b
 13001  013444  0E00               	movlw	0
 13002  013446  14DE               	andwf	postinc2,w,c
 13003  013448  6F11               	movwf	(??_TCP_Recv+6)& (0+255),b
 13004  01344A  0E00               	movlw	0
 13005  01344C  14DE               	andwf	postinc2,w,c
 13006  01344E  6F12               	movwf	(??_TCP_Recv+7)& (0+255),b
 13007  013450  C111  F112         	movff	??_TCP_Recv+6,??_TCP_Recv+7
 13008  013454  C110  F111         	movff	??_TCP_Recv+5,??_TCP_Recv+6
 13009  013458  C10F  F110         	movff	??_TCP_Recv+4,??_TCP_Recv+5
 13010  01345C  6B0F               	clrf	(??_TCP_Recv+4)& (0+255),b
 13011  01345E  C25D  F113         	movff	_tcpHeader+4,??_TCP_Recv+8
 13012  013462  C25E  F114         	movff	_tcpHeader+5,??_TCP_Recv+9
 13013  013466  C25F  F115         	movff	_tcpHeader+6,??_TCP_Recv+10
 13014  01346A  C260  F116         	movff	_tcpHeader+7,??_TCP_Recv+11
 13015  01346E  C114  F113         	movff	??_TCP_Recv+9,??_TCP_Recv+8
 13016  013472  C115  F114         	movff	??_TCP_Recv+10,??_TCP_Recv+9
 13017  013476  C116  F115         	movff	??_TCP_Recv+11,??_TCP_Recv+10
 13018  01347A  6B16               	clrf	(??_TCP_Recv+11)& (0+255),b
 13019  01347C  0E00               	movlw	0
 13020  01347E  1513               	andwf	(??_TCP_Recv+8)& (0+255),w,b
 13021  013480  6F17               	movwf	(??_TCP_Recv+12)& (0+255),b
 13022  013482  0EFF               	movlw	255
 13023  013484  1514               	andwf	(??_TCP_Recv+9)& (0+255),w,b
 13024  013486  6F18               	movwf	(??_TCP_Recv+13)& (0+255),b
 13025  013488  0E00               	movlw	0
 13026  01348A  1515               	andwf	(??_TCP_Recv+10)& (0+255),w,b
 13027  01348C  6F19               	movwf	(??_TCP_Recv+14)& (0+255),b
 13028  01348E  0E00               	movlw	0
 13029  013490  1516               	andwf	(??_TCP_Recv+11)& (0+255),w,b
 13030  013492  6F1A               	movwf	(??_TCP_Recv+15)& (0+255),b
 13031  013494  EE22  F05D         	lfsr	2,_tcpHeader+4
 13032  013498  0E00               	movlw	0
 13033  01349A  14DE               	andwf	postinc2,w,c
 13034  01349C  6F1B               	movwf	(??_TCP_Recv+16)& (0+255),b
 13035  01349E  0E00               	movlw	0
 13036  0134A0  14DE               	andwf	postinc2,w,c
 13037  0134A2  6F1C               	movwf	(??_TCP_Recv+17)& (0+255),b
 13038  0134A4  0E00               	movlw	0
 13039  0134A6  14DE               	andwf	postinc2,w,c
 13040  0134A8  6F1D               	movwf	(??_TCP_Recv+18)& (0+255),b
 13041  0134AA  0EFF               	movlw	255
 13042  0134AC  14DE               	andwf	postinc2,w,c
 13043  0134AE  6F1E               	movwf	(??_TCP_Recv+19)& (0+255),b
 13044  0134B0  0E19               	movlw	25
 13045  0134B2  D005               	goto	u12420
 13046  0134B4                     u12425:
 13047  0134B4  90D8               	bcf	status,0,c
 13048  0134B6  331E               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
 13049  0134B8  331D               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
 13050  0134BA  331C               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
 13051  0134BC  331B               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
 13052  0134BE                     u12420:
 13053  0134BE  2EE8               	decfsz	wreg,f,c
 13054  0134C0  D7F9               	goto	u12425
 13055  0134C2  5117               	movf	(??_TCP_Recv+12)& (0+255),w,b
 13056  0134C4  111B               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
 13057  0134C6  6F1F               	movwf	(??_TCP_Recv+20)& (0+255),b
 13058  0134C8  5118               	movf	(??_TCP_Recv+13)& (0+255),w,b
 13059  0134CA  111C               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
 13060  0134CC  6F20               	movwf	(??_TCP_Recv+21)& (0+255),b
 13061  0134CE  5119               	movf	(??_TCP_Recv+14)& (0+255),w,b
 13062  0134D0  111D               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
 13063  0134D2  6F21               	movwf	(??_TCP_Recv+22)& (0+255),b
 13064  0134D4  511A               	movf	(??_TCP_Recv+15)& (0+255),w,b
 13065  0134D6  111E               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
 13066  0134D8  6F22               	movwf	(??_TCP_Recv+23)& (0+255),b
 13067  0134DA  510F               	movf	(??_TCP_Recv+4)& (0+255),w,b
 13068  0134DC  111F               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
 13069  0134DE  6F23               	movwf	(??_TCP_Recv+24)& (0+255),b
 13070  0134E0  5110               	movf	(??_TCP_Recv+5)& (0+255),w,b
 13071  0134E2  1120               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
 13072  0134E4  6F24               	movwf	(??_TCP_Recv+25)& (0+255),b
 13073  0134E6  5111               	movf	(??_TCP_Recv+6)& (0+255),w,b
 13074  0134E8  1121               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
 13075  0134EA  6F25               	movwf	(??_TCP_Recv+26)& (0+255),b
 13076  0134EC  5112               	movf	(??_TCP_Recv+7)& (0+255),w,b
 13077  0134EE  1122               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
 13078  0134F0  6F26               	movwf	(??_TCP_Recv+27)& (0+255),b
 13079  0134F2  510B               	movf	??_TCP_Recv& (0+255),w,b
 13080  0134F4  1123               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
 13081  0134F6  0102               	movlb	2	; () banked
 13082  0134F8  6F5D               	movwf	(_tcpHeader+4)& (0+255),b
 13083  0134FA  0101               	movlb	1	; () banked
 13084  0134FC  510C               	movf	(??_TCP_Recv+1)& (0+255),w,b
 13085  0134FE  1124               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
 13086  013500  0102               	movlb	2	; () banked
 13087  013502  6F5E               	movwf	(_tcpHeader+5)& (0+255),b
 13088  013504  0101               	movlb	1	; () banked
 13089  013506  510D               	movf	(??_TCP_Recv+2)& (0+255),w,b
 13090  013508  1125               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
 13091  01350A  0102               	movlb	2	; () banked
 13092  01350C  6F5F               	movwf	(_tcpHeader+6)& (0+255),b
 13093  01350E  0101               	movlb	1	; () banked
 13094  013510  510E               	movf	(??_TCP_Recv+3)& (0+255),w,b
 13095  013512  1126               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
 13096  013514  0102               	movlb	2	; () banked
 13097  013516  6F60               	movwf	(_tcpHeader+7)& (0+255),b
 13098                           
 13099                           ; BSR set to: 2
 13100                           ;tcpv4.c: 575: TCP_FiniteStateMachine();
 13101  013518  EC00  F080         	call	_TCP_FiniteStateMachine	;wreg free
 13102                           
 13103                           ;tcpv4.c: 577: {
 13104                           
 13105                           ;tcpv4.c: 576: }else
 13106  01351C  0012               	return	
 13107  01351E                     __end_of_TCP_Recv:
 13108                           	opt stack 0
 13109                           tosu	equ	0xFFF
 13110                           tosh	equ	0xFFE
 13111                           tosl	equ	0xFFD
 13112                           pclath	equ	0xFFA
 13113                           tblptru	equ	0xFF8
 13114                           tblptrh	equ	0xFF7
 13115                           tblptrl	equ	0xFF6
 13116                           tablat	equ	0xFF5
 13117                           prodh	equ	0xFF4
 13118                           prodl	equ	0xFF3
 13119                           intcon	equ	0xFF2
 13120                           indf0	equ	0xFEF
 13121                           postinc0	equ	0xFEE
 13122                           fsr0h	equ	0xFEA
 13123                           fsr0l	equ	0xFE9
 13124                           wreg	equ	0xFE8
 13125                           indf1	equ	0xFE7
 13126                           postinc1	equ	0xFE6
 13127                           postdec1	equ	0xFE5
 13128                           plusw1	equ	0xFE3
 13129                           fsr1h	equ	0xFE2
 13130                           fsr1l	equ	0xFE1
 13131                           indf2	equ	0xFDF
 13132                           postinc2	equ	0xFDE
 13133                           postdec2	equ	0xFDD
 13134                           plusw2	equ	0xFDB
 13135                           fsr2h	equ	0xFDA
 13136                           fsr2l	equ	0xFD9
 13137                           status	equ	0xFD8
 13138                           
 13139 ;; *************** function _TCP_ParseTCPOptions *****************
 13140 ;; Defined at:
 13141 ;;		line 362 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;		None
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;  tcpOptionsSi    2   26[COMRAM] unsigned int 
 13146 ;;  opt             1   25[COMRAM] unsigned char 
 13147 ;;  ret             1   24[COMRAM] unsigned char 
 13148 ;; Return value:  Size  Location     Type
 13149 ;;                  1    wreg      unsigned char 
 13150 ;; Registers used:
 13151 ;;		wreg, status,2, status,0, cstack
 13152 ;; Tracked objects:
 13153 ;;		On entry : 0/0
 13154 ;;		On exit  : 0/0
 13155 ;;		Unchanged: 0/0
 13156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13158 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;Total ram usage:        6 bytes
 13162 ;; Hardware stack levels used:    1
 13163 ;; Hardware stack levels required when called:    6
 13164 ;; This function calls:
 13165 ;;		_ETH_Dump
 13166 ;;		_ETH_Read16
 13167 ;;		_ETH_Read8
 13168 ;; This function is called by:
 13169 ;;		_TCP_Recv
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text57
 13174  0150FA                     __ptext57:
 13175                           	opt stack 0
 13176  0150FA                     _TCP_ParseTCPOptions:
 13177                           	opt stack 20
 13178                           
 13179                           ;tcpv4.c: 364: uint8_t opt;
 13180                           ;tcpv4.c: 365: uint16_t tcpOptionsSize;
 13181                           ;tcpv4.c: 366: bool ret;
 13182                           ;tcpv4.c: 368: ret = 0;
 13183                           
 13184                           ;incstack = 0
 13185  0150FA  0E00               	movlw	0
 13186  0150FC  6E19               	movwf	TCP_ParseTCPOptions@ret,c
 13187                           
 13188                           ;tcpv4.c: 370: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
 13189  0150FE  0102               	movlb	2	; () banked
 13190  015100  3965               	swapf	(_tcpHeader+12)& (0+255),w,b
 13191  015102  0B0F               	andlw	15
 13192  015104  6E17               	movwf	??_TCP_ParseTCPOptions& (0+255),c
 13193  015106  6A18               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
 13194  015108  90D8               	bcf	status,0,c
 13195  01510A  3617               	rlcf	??_TCP_ParseTCPOptions,f,c
 13196  01510C  3618               	rlcf	??_TCP_ParseTCPOptions+1,f,c
 13197  01510E  90D8               	bcf	status,0,c
 13198  015110  3617               	rlcf	??_TCP_ParseTCPOptions,f,c
 13199  015112  3618               	rlcf	??_TCP_ParseTCPOptions+1,f,c
 13200  015114  0EEC               	movlw	236
 13201  015116  2417               	addwf	??_TCP_ParseTCPOptions,w,c
 13202  015118  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 13203  01511A  0EFF               	movlw	255
 13204  01511C  2018               	addwfc	??_TCP_ParseTCPOptions+1,w,c
 13205  01511E  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 13206                           
 13207                           ; BSR set to: 2
 13208                           ;tcpv4.c: 372: if (tcpOptionsSize > 0)
 13209  015120  501B               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 13210  015122  101C               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 13211  015124  B4D8               	btfsc	status,2,c
 13212  015126  D08A               	goto	l1624
 13213                           
 13214                           ; BSR set to: 2
 13215                           ;tcpv4.c: 373: {
 13216                           ;tcpv4.c: 376: tcpMss = 536;
 13217  015128  0E02               	movlw	2
 13218  01512A  6FC4               	movwf	(_tcpMss+1)& (0+255),b
 13219  01512C  0E18               	movlw	24
 13220  01512E  6FC3               	movwf	_tcpMss& (0+255),b
 13221                           
 13222                           ; BSR set to: 2
 13223                           ;tcpv4.c: 378: if(tcpHeader.syn)
 13224  015130  B366               	btfsc	(_tcpHeader+13)& (0+255),1,b
 13225  015132  D075               	goto	l1631
 13226  015134  D07D               	goto	l1625
 13227  015136                     
 13228                           ;tcpv4.c: 382: {
 13229                           ;tcpv4.c: 383: opt = ETH_Read8();
 13230                           
 13231                           ; BSR set to: 2
 13232  015136  EC37  F0B6         	call	_ETH_Read8	;wreg free
 13233  01513A  6E1A               	movwf	TCP_ParseTCPOptions@opt,c
 13234                           
 13235                           ;tcpv4.c: 384: switch (opt)
 13236  01513C  D065               	goto	l1628
 13237  01513E                     
 13238                           ;tcpv4.c: 388: if (tcpOptionsSize)
 13239  01513E  501B               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 13240  015140  101C               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 13241  015142  B4D8               	btfsc	status,2,c
 13242  015144  D059               	goto	l11420
 13243                           
 13244                           ;tcpv4.c: 389: {
 13245                           ;tcpv4.c: 391: ETH_Dump(tcpOptionsSize);
 13246  015146  C01B  F013         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
 13247  01514A  C01C  F014         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
 13248  01514E  EC46  F0B5         	call	_ETH_Dump	;wreg free
 13249                           
 13250                           ;tcpv4.c: 392: tcpOptionsSize = 0;
 13251  015152  0E00               	movlw	0
 13252  015154  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 13253  015156  0E00               	movlw	0
 13254  015158  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 13255  01515A  D04E               	goto	l11420
 13256  01515C                     
 13257                           ;tcpv4.c: 400: if (tcpOptionsSize >= 3)
 13258  01515C  501C               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 13259  01515E  E104               	bnz	u11160
 13260  015160  0E03               	movlw	3
 13261  015162  5C1B               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 13262  015164  A0D8               	btfss	status,0,c
 13263  015166  D04A               	goto	l1640
 13264  015168                     u11160:
 13265                           
 13266                           ;tcpv4.c: 401: {
 13267                           ;tcpv4.c: 402: opt = ETH_Read8();
 13268  015168  EC37  F0B6         	call	_ETH_Read8	;wreg free
 13269  01516C  6E1A               	movwf	TCP_ParseTCPOptions@opt,c
 13270                           
 13271                           ;tcpv4.c: 403: if (opt == 0x04)
 13272  01516E  0E04               	movlw	4
 13273  015170  181A               	xorwf	TCP_ParseTCPOptions@opt,w,c
 13274  015172  A4D8               	btfss	status,2,c
 13275  015174  D043               	goto	l1640
 13276                           
 13277                           ;tcpv4.c: 404: {
 13278                           ;tcpv4.c: 406: tcpMss = ETH_Read16();
 13279  015176  EC69  F0B4         	call	_ETH_Read16	;wreg free
 13280  01517A  C013  F2C3         	movff	?_ETH_Read16,_tcpMss
 13281  01517E  C014  F2C4         	movff	?_ETH_Read16+1,_tcpMss+1
 13282                           
 13283                           ;tcpv4.c: 408: tcpOptionsSize = tcpOptionsSize - 3;
 13284  015182  0EFD               	movlw	253
 13285  015184  241B               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 13286  015186  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 13287  015188  0EFF               	movlw	255
 13288  01518A  201C               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 13289  01518C  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 13290                           
 13291                           ;tcpv4.c: 411: if (tcpMss > 1460u)
 13292  01518E  0EB5               	movlw	181
 13293  015190  0102               	movlb	2	; () banked
 13294  015192  5DC3               	subwf	_tcpMss& (0+255),w,b
 13295  015194  0E05               	movlw	5
 13296  015196  59C4               	subwfb	(_tcpMss+1)& (0+255),w,b
 13297  015198  A0D8               	btfss	status,0,c
 13298  01519A  D02E               	goto	l11420
 13299                           
 13300                           ; BSR set to: 2
 13301                           ;tcpv4.c: 412: {
 13302                           ;tcpv4.c: 413: tcpMss = 1460u;
 13303  01519C  0E05               	movlw	5
 13304  01519E  6FC4               	movwf	(_tcpMss+1)& (0+255),b
 13305  0151A0  0EB4               	movlw	180
 13306  0151A2  6FC3               	movwf	_tcpMss& (0+255),b
 13307  0151A4  D029               	goto	l11420
 13308  0151A6                     L10:
 13309  0151A6  6E19               	movwf	TCP_ParseTCPOptions@ret,c
 13310                           
 13311                           ;tcpv4.c: 423: }
 13312                           ;tcpv4.c: 424: }else
 13313  0151A8  D03A               	goto	l1631
 13314  0151AA                     
 13315                           ;tcpv4.c: 432: opt = ETH_Read8();
 13316  0151AA  EC37  F0B6         	call	_ETH_Read8	;wreg free
 13317  0151AE  6E1A               	movwf	TCP_ParseTCPOptions@opt,c
 13318                           
 13319                           ;tcpv4.c: 433: tcpOptionsSize--;
 13320  0151B0  061B               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
 13321  0151B2  A0D8               	btfss	status,0,c
 13322  0151B4  061C               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
 13323                           
 13324                           ;tcpv4.c: 435: if (opt > 1)
 13325  0151B6  0E01               	movlw	1
 13326  0151B8  641A               	cpfsgt	TCP_ParseTCPOptions@opt,c
 13327  0151BA  D020               	goto	l1640
 13328                           
 13329                           ;tcpv4.c: 436: {
 13330                           ;tcpv4.c: 438: opt = opt - 2;
 13331  0151BC  501A               	movf	TCP_ParseTCPOptions@opt,w,c
 13332  0151BE  0FFE               	addlw	254
 13333  0151C0  6E1A               	movwf	TCP_ParseTCPOptions@opt,c
 13334                           
 13335                           ;tcpv4.c: 439: if (opt <= tcpOptionsSize)
 13336  0151C2  501A               	movf	TCP_ParseTCPOptions@opt,w,c
 13337  0151C4  6E17               	movwf	??_TCP_ParseTCPOptions& (0+255),c
 13338  0151C6  6A18               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
 13339  0151C8  5017               	movf	??_TCP_ParseTCPOptions,w,c
 13340  0151CA  5C1B               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 13341  0151CC  5018               	movf	??_TCP_ParseTCPOptions+1,w,c
 13342  0151CE  581C               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 13343  0151D0  A0D8               	btfss	status,0,c
 13344  0151D2  D014               	goto	l1640
 13345                           
 13346                           ;tcpv4.c: 440: {
 13347                           ;tcpv4.c: 442: ETH_Dump(opt);
 13348  0151D4  C01A  F013         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
 13349  0151D8  6A14               	clrf	ETH_Dump@length+1,c
 13350  0151DA  EC46  F0B5         	call	_ETH_Dump	;wreg free
 13351                           
 13352                           ;tcpv4.c: 443: tcpOptionsSize = tcpOptionsSize - opt;
 13353  0151DE  501A               	movf	TCP_ParseTCPOptions@opt,w,c
 13354  0151E0  6E17               	movwf	??_TCP_ParseTCPOptions& (0+255),c
 13355  0151E2  6A18               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
 13356  0151E4  1E17               	comf	??_TCP_ParseTCPOptions,f,c
 13357  0151E6  1E18               	comf	??_TCP_ParseTCPOptions+1,f,c
 13358  0151E8  4A17               	infsnz	??_TCP_ParseTCPOptions,f,c
 13359  0151EA  2A18               	incf	??_TCP_ParseTCPOptions+1,f,c
 13360  0151EC  501B               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 13361  0151EE  2417               	addwf	??_TCP_ParseTCPOptions,w,c
 13362  0151F0  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 13363  0151F2  501C               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 13364  0151F4  2018               	addwfc	??_TCP_ParseTCPOptions+1,w,c
 13365  0151F6  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 13366  0151F8                     l11420:
 13367                           
 13368                           ;tcpv4.c: 444: ret = 1;
 13369  0151F8  0E01               	movlw	1
 13370  0151FA  D7D5               	goto	L10
 13371  0151FC                     l1640:
 13372                           
 13373                           ;tcpv4.c: 452: {
 13374                           ;tcpv4.c: 455: tcpOptionsSize = 0;
 13375  0151FC  0E00               	movlw	0
 13376  0151FE  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 13377  015200  0E00               	movlw	0
 13378  015202  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 13379                           
 13380                           ;tcpv4.c: 456: ret = 0;
 13381  015204  0E00               	movlw	0
 13382  015206  D7CF               	goto	L10
 13383  015208                     l1628:
 13384  015208  501A               	movf	TCP_ParseTCPOptions@opt,w,c
 13385                           
 13386                           ; Switch size 1, requested type "space"
 13387                           ; Number of cases is 3, Range of values is 0 to 2
 13388                           ; switch strategies available:
 13389                           ; Name         Instructions Cycles
 13390                           ; simple_byte           10     6 (average)
 13391                           ;	Chosen strategy is simple_byte
 13392  01520A  0A00               	xorlw	0	; case 0
 13393  01520C  B4D8               	btfsc	status,2,c
 13394  01520E  D797               	goto	l1629
 13395  015210  0A01               	xorlw	1	; case 1
 13396  015212  B4D8               	btfsc	status,2,c
 13397  015214  D004               	goto	l1631
 13398  015216  0A03               	xorlw	3	; case 2
 13399  015218  B4D8               	btfsc	status,2,c
 13400  01521A  D7A0               	goto	l1633
 13401  01521C  D7C6               	goto	l1639
 13402  01521E                     l1631:
 13403  01521E  061B               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
 13404  015220  A0D8               	btfss	status,0,c
 13405  015222  061C               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
 13406  015224  281B               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 13407  015226  E187               	bnz	l1627
 13408  015228  281C               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 13409  01522A  B4D8               	btfsc	status,2,c
 13410  01522C  D009               	goto	l1646
 13411  01522E  D783               	goto	l1627
 13412  015230                     l1625:
 13413                           
 13414                           ;tcpv4.c: 462: {
 13415                           ;tcpv4.c: 463: ETH_Dump(tcpOptionsSize);
 13416  015230  C01B  F013         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
 13417  015234  C01C  F014         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
 13418  015238  EC46  F0B5         	call	_ETH_Dump	;wreg free
 13419  01523C                     l1624:
 13420                           
 13421                           ;tcpv4.c: 467: {
 13422                           ;tcpv4.c: 468: ret = 1;
 13423  01523C  0E01               	movlw	1
 13424  01523E  6E19               	movwf	TCP_ParseTCPOptions@ret,c
 13425  015240                     l1646:
 13426                           
 13427                           ;tcpv4.c: 469: }
 13428                           ;tcpv4.c: 471: return ret;
 13429  015240  5019               	movf	TCP_ParseTCPOptions@ret,w,c
 13430  015242  0012               	return	
 13431  015244                     __end_of_TCP_ParseTCPOptions:
 13432                           	opt stack 0
 13433                           tosu	equ	0xFFF
 13434                           tosh	equ	0xFFE
 13435                           tosl	equ	0xFFD
 13436                           pclath	equ	0xFFA
 13437                           tblptru	equ	0xFF8
 13438                           tblptrh	equ	0xFF7
 13439                           tblptrl	equ	0xFF6
 13440                           tablat	equ	0xFF5
 13441                           prodh	equ	0xFF4
 13442                           prodl	equ	0xFF3
 13443                           intcon	equ	0xFF2
 13444                           indf0	equ	0xFEF
 13445                           postinc0	equ	0xFEE
 13446                           fsr0h	equ	0xFEA
 13447                           fsr0l	equ	0xFE9
 13448                           wreg	equ	0xFE8
 13449                           indf1	equ	0xFE7
 13450                           postinc1	equ	0xFE6
 13451                           postdec1	equ	0xFE5
 13452                           plusw1	equ	0xFE3
 13453                           fsr1h	equ	0xFE2
 13454                           fsr1l	equ	0xFE1
 13455                           indf2	equ	0xFDF
 13456                           postinc2	equ	0xFDE
 13457                           postdec2	equ	0xFDD
 13458                           plusw2	equ	0xFDB
 13459                           fsr2h	equ	0xFDA
 13460                           fsr2l	equ	0xFD9
 13461                           status	equ	0xFD8
 13462                           
 13463 ;; *************** function _ETH_Read8 *****************
 13464 ;; Defined at:
 13465 ;;		line 433 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;		None
 13468 ;; Auto vars:     Size  Location     Type
 13469 ;;  ret             1   18[COMRAM] unsigned char 
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  1    wreg      unsigned char 
 13472 ;; Registers used:
 13473 ;;		wreg, status,2, status,0, cstack
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13483 ;;Total ram usage:        1 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:    5
 13486 ;; This function calls:
 13487 ;;		_ETH_EdataRead
 13488 ;; This function is called by:
 13489 ;;		_DHCP_Handler
 13490 ;;		_DNS_Handler
 13491 ;;		_TCP_ParseTCPOptions
 13492 ;;		_NTP_Handler
 13493 ;;		_udp_test
 13494 ;; This function uses a non-reentrant model
 13495 ;;
 13496                           
 13497                           	psect	text58
 13498  016C6E                     __ptext58:
 13499                           	opt stack 0
 13500  016C6E                     _ETH_Read8:
 13501                           	opt stack 20
 13502                           
 13503                           ;ETHxxJ6x_driver.c: 435: uint8_t ret = 0;
 13504                           
 13505                           ;incstack = 0
 13506  016C6E  0E00               	movlw	0
 13507  016C70  6E13               	movwf	ETH_Read8@ret,c
 13508                           
 13509                           ;ETHxxJ6x_driver.c: 436: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 13510  016C72  0102               	movlb	2	; () banked
 13511  016C74  5136               	movf	_rxPacketStatusVector& (0+255),w,b
 13512  016C76  1137               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 13513  016C78  B4D8               	btfsc	status,2,c
 13514  016C7A  D009               	goto	l552
 13515                           
 13516                           ; BSR set to: 2
 13517                           ;ETHxxJ6x_driver.c: 437: {
 13518                           ;ETHxxJ6x_driver.c: 438: ret = ETH_EdataRead();
 13519  016C7C  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 13520  016C80  6E13               	movwf	ETH_Read8@ret,c
 13521                           
 13522                           ;ETHxxJ6x_driver.c: 439: rxPacketStatusVector.byteCount -= sizeof(ret);
 13523  016C82  0102               	movlb	2	; () banked
 13524  016C84  0736               	decf	_rxPacketStatusVector& (0+255),f,b
 13525  016C86  A0D8               	btfss	status,0,c
 13526  016C88  0737               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
 13527                           
 13528                           ; BSR set to: 2
 13529                           ;ETHxxJ6x_driver.c: 440: ethData.error = 0;
 13530  016C8A  9124               	bcf	_ethData& (0+255),0,b	;volatile
 13531                           
 13532                           ;ETHxxJ6x_driver.c: 441: }
 13533  016C8C  D001               	goto	l553
 13534  016C8E                     l552:
 13535                           
 13536                           ; BSR set to: 2
 13537                           ;ETHxxJ6x_driver.c: 442: else
 13538                           ;ETHxxJ6x_driver.c: 443: {
 13539                           ;ETHxxJ6x_driver.c: 444: ethData.error = 1;
 13540  016C8E  8124               	bsf	_ethData& (0+255),0,b	;volatile
 13541  016C90                     l553:
 13542                           
 13543                           ; BSR set to: 2
 13544                           ;ETHxxJ6x_driver.c: 445: }
 13545                           ;ETHxxJ6x_driver.c: 446: return ret;
 13546                           
 13547                           ; BSR set to: 2
 13548  016C90  5013               	movf	ETH_Read8@ret,w,c
 13549  016C92  0012               	return	
 13550  016C94                     __end_of_ETH_Read8:
 13551                           	opt stack 0
 13552                           tosu	equ	0xFFF
 13553                           tosh	equ	0xFFE
 13554                           tosl	equ	0xFFD
 13555                           pclath	equ	0xFFA
 13556                           tblptru	equ	0xFF8
 13557                           tblptrh	equ	0xFF7
 13558                           tblptrl	equ	0xFF6
 13559                           tablat	equ	0xFF5
 13560                           prodh	equ	0xFF4
 13561                           prodl	equ	0xFF3
 13562                           intcon	equ	0xFF2
 13563                           indf0	equ	0xFEF
 13564                           postinc0	equ	0xFEE
 13565                           fsr0h	equ	0xFEA
 13566                           fsr0l	equ	0xFE9
 13567                           wreg	equ	0xFE8
 13568                           indf1	equ	0xFE7
 13569                           postinc1	equ	0xFE6
 13570                           postdec1	equ	0xFE5
 13571                           plusw1	equ	0xFE3
 13572                           fsr1h	equ	0xFE2
 13573                           fsr1l	equ	0xFE1
 13574                           indf2	equ	0xFDF
 13575                           postinc2	equ	0xFDE
 13576                           postdec2	equ	0xFDD
 13577                           plusw2	equ	0xFDB
 13578                           fsr2h	equ	0xFDA
 13579                           fsr2l	equ	0xFD9
 13580                           status	equ	0xFD8
 13581                           
 13582 ;; *************** function _TCP_FiniteStateMachine *****************
 13583 ;; Defined at:
 13584 ;;		line 596 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;		None
 13587 ;; Auto vars:     Size  Location     Type
 13588 ;;  notAckBytes     2    1[BANK1 ] unsigned int 
 13589 ;;  nextState       1    4[BANK1 ] enum E663
 13590 ;;  event           1    3[BANK1 ] enum E676
 13591 ;;  ret             1    0[BANK1 ] unsigned char 
 13592 ;; Return value:  Size  Location     Type
 13593 ;;                  1    wreg      unsigned char 
 13594 ;; Registers used:
 13595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13596 ;; Tracked objects:
 13597 ;;		On entry : 0/0
 13598 ;;		On exit  : 0/0
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13602 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13603 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13604 ;;      Totals:         0       8       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13605 ;;Total ram usage:       13 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:   11
 13608 ;; This function calls:
 13609 ;;		_TCB_Reset
 13610 ;;		_TCP_PayloadSave
 13611 ;;		_TCP_Snd
 13612 ;;		_isPortUnreachable
 13613 ;;		_resetPortUnreachable
 13614 ;; This function is called by:
 13615 ;;		_TCP_Recv
 13616 ;;		_TCP_Update
 13617 ;;		_TCP_Listen
 13618 ;;		_TCP_Connect
 13619 ;;		_TCP_Close
 13620 ;; This function uses a non-reentrant model
 13621 ;;
 13622                           
 13623                           	psect	text59
 13624  010000                     __ptext59:
 13625                           	opt stack 0
 13626  010000                     _TCP_FiniteStateMachine:
 13627                           	opt stack 17
 13628                           
 13629                           ;tcpv4.c: 598: uint16_t notAckBytes;
 13630                           ;tcpv4.c: 599: bool ret = 0;
 13631                           
 13632                           ; BSR set to: 2
 13633                           ;incstack = 0
 13634  010000  0E00               	movlw	0
 13635  010002  0101               	movlb	1	; () banked
 13636  010004  6F00               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;tcpv4.c: 601: tcp_fsm_states_t nextState = currentTCB->fsmState;
 13640  010006  EE20 F02D          	lfsr	2,45
 13641  01000A  503D               	movf	_currentTCB,w,c
 13642  01000C  26D9               	addwf	fsr2l,f,c
 13643  01000E  503E               	movf	_currentTCB+1,w,c
 13644  010010  22DA               	addwfc	fsr2h,f,c
 13645  010012  50DF               	movf	indf2,w,c
 13646  010014  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13647                           
 13648                           ; BSR set to: 1
 13649                           ;tcpv4.c: 602: tcpEvent_t event = currentTCB->connectionEvent;
 13650  010016  EE20 F02E          	lfsr	2,46
 13651  01001A  503D               	movf	_currentTCB,w,c
 13652  01001C  26D9               	addwf	fsr2l,f,c
 13653  01001E  503E               	movf	_currentTCB+1,w,c
 13654  010020  22DA               	addwfc	fsr2h,f,c
 13655  010022  50DF               	movf	indf2,w,c
 13656  010024  6F03               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 13657                           
 13658                           ; BSR set to: 1
 13659                           ;tcpv4.c: 603: if(isPortUnreachable(currentTCB->localPort))
 13660  010026  C03D  FFD9         	movff	_currentTCB,fsr2l
 13661  01002A  C03E  FFDA         	movff	_currentTCB+1,fsr2h
 13662  01002E  CFDE F013          	movff	postinc2,isPortUnreachable@port
 13663  010032  CFDD F014          	movff	postdec2,isPortUnreachable@port+1
 13664  010036  ECEB  F0B6         	call	_isPortUnreachable	;wreg free
 13665  01003A  0900               	iorlw	0
 13666  01003C  B4D8               	btfsc	status,2,c
 13667  01003E  EFC7  F089         	goto	l1682
 13668                           
 13669                           ;tcpv4.c: 604: {
 13670                           ;tcpv4.c: 605: event = RCV_RST;
 13671  010042  0E09               	movlw	9
 13672  010044  0101               	movlb	1	; () banked
 13673  010046  6F03               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 13674                           
 13675                           ; BSR set to: 1
 13676                           ;tcpv4.c: 606: resetPortUnreachable();
 13677  010048  EC5C  F0B7         	call	_resetPortUnreachable	;wreg free
 13678                           
 13679                           ;tcpv4.c: 607: }
 13680                           ;tcpv4.c: 608: switch (currentTCB->fsmState)
 13681  01004C  EFC7  F089         	goto	l1682
 13682  010050                     
 13683                           ;tcpv4.c: 616: currentTCB->destIP = receivedRemoteAddress;
 13684  010050  EE20 F002          	lfsr	2,2
 13685  010054  503D               	movf	_currentTCB,w,c
 13686  010056  26D9               	addwf	fsr2l,f,c
 13687  010058  503E               	movf	_currentTCB+1,w,c
 13688  01005A  22DA               	addwfc	fsr2h,f,c
 13689  01005C  C22A  FFDE         	movff	_receivedRemoteAddress,postinc2
 13690  010060  C22B  FFDE         	movff	_receivedRemoteAddress+1,postinc2
 13691  010064  C22C  FFDE         	movff	_receivedRemoteAddress+2,postinc2
 13692  010068  C22D  FFDE         	movff	_receivedRemoteAddress+3,postinc2
 13693                           
 13694                           ;tcpv4.c: 617: currentTCB->destPort = tcpHeader.sourcePort;
 13695  01006C  EE20 F006          	lfsr	2,6
 13696  010070  503D               	movf	_currentTCB,w,c
 13697  010072  26D9               	addwf	fsr2l,f,c
 13698  010074  503E               	movf	_currentTCB+1,w,c
 13699  010076  22DA               	addwfc	fsr2h,f,c
 13700  010078  C259  FFDE         	movff	_tcpHeader,postinc2
 13701  01007C  C25A  FFDD         	movff	_tcpHeader+1,postdec2
 13702                           
 13703                           ;tcpv4.c: 620: currentTCB->localLastAck = 0;
 13704  010080  EE20 F014          	lfsr	2,20
 13705  010084  503D               	movf	_currentTCB,w,c
 13706  010086  26D9               	addwf	fsr2l,f,c
 13707  010088  503E               	movf	_currentTCB+1,w,c
 13708  01008A  22DA               	addwfc	fsr2h,f,c
 13709  01008C  6ADE               	clrf	postinc2,c
 13710  01008E  6ADE               	clrf	postinc2,c
 13711  010090  6ADE               	clrf	postinc2,c
 13712  010092  6ADD               	clrf	postdec2,c
 13713                           
 13714                           ;tcpv4.c: 622: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 13715  010094  EE22  F05D         	lfsr	2,_tcpHeader+4
 13716  010098  EE10 F008          	lfsr	1,8
 13717  01009C  503D               	movf	_currentTCB,w,c
 13718  01009E  26E1               	addwf	fsr1l,f,c
 13719  0100A0  503E               	movf	_currentTCB+1,w,c
 13720  0100A2  22E2               	addwfc	fsr1h,f,c
 13721  0100A4  CFDE FFE6          	movff	postinc2,postinc1
 13722  0100A8  CFDE FFE6          	movff	postinc2,postinc1
 13723  0100AC  CFDE FFE6          	movff	postinc2,postinc1
 13724  0100B0  CFDE FFE6          	movff	postinc2,postinc1
 13725                           
 13726                           ;tcpv4.c: 623: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 13727  0100B4  EE20 F008          	lfsr	2,8
 13728  0100B8  503D               	movf	_currentTCB,w,c
 13729  0100BA  26D9               	addwf	fsr2l,f,c
 13730  0100BC  503E               	movf	_currentTCB+1,w,c
 13731  0100BE  22DA               	addwfc	fsr2h,f,c
 13732  0100C0  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 13733  0100C4  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 13734  0100C8  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13735  0100CC  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 13736  0100D0  0E01               	movlw	1
 13737  0100D2  0100               	movlb	0	; () banked
 13738  0100D4  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 13739  0100D6  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 13740  0100D8  0E00               	movlw	0
 13741  0100DA  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13742  0100DC  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 13743  0100DE  0E00               	movlw	0
 13744  0100E0  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 13745  0100E2  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 13746  0100E4  0E00               	movlw	0
 13747  0100E6  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 13748  0100E8  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 13749  0100EA  EE20 F00C          	lfsr	2,12
 13750  0100EE  503D               	movf	_currentTCB,w,c
 13751  0100F0  26D9               	addwf	fsr2l,f,c
 13752  0100F2  503E               	movf	_currentTCB+1,w,c
 13753  0100F4  22DA               	addwfc	fsr2h,f,c
 13754  0100F6  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 13755  0100FA  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 13756  0100FE  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 13757  010102  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;tcpv4.c: 626: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 13761  010106  0102               	movlb	2	; () banked
 13762  010108  5167               	movf	(_tcpHeader+14)& (0+255),w,b
 13763  01010A  0100               	movlb	0	; () banked
 13764  01010C  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 13765  01010E  6BF4               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 13766  010110  EE22  F067         	lfsr	2,_tcpHeader+14
 13767  010114  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13768  010118  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 13769  01011C  C0F7  F0F6         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 13770  010120  6BF7               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 13771  010122  0EFF               	movlw	255
 13772  010124  17F6               	andwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 13773  010126  0E00               	movlw	0
 13774  010128  17F7               	andwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 13775  01012A  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 13776  01012C  13F6               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 13777  01012E  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13778  010130  13F7               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 13779  010132  EE20 F018          	lfsr	2,24
 13780  010136  503D               	movf	_currentTCB,w,c
 13781  010138  26D9               	addwf	fsr2l,f,c
 13782  01013A  503E               	movf	_currentTCB+1,w,c
 13783  01013C  22DA               	addwfc	fsr2h,f,c
 13784  01013E  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 13785  010142  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;tcpv4.c: 627: currentTCB->mss = tcpMss;
 13789  010146  EE20 F01C          	lfsr	2,28
 13790  01014A  503D               	movf	_currentTCB,w,c
 13791  01014C  26D9               	addwf	fsr2l,f,c
 13792  01014E  503E               	movf	_currentTCB+1,w,c
 13793  010150  22DA               	addwfc	fsr2h,f,c
 13794  010152  C2C3  FFDE         	movff	_tcpMss,postinc2
 13795  010156  C2C4  FFDD         	movff	_tcpMss+1,postdec2
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;tcpv4.c: 630: currentTCB->flags = 0x02U | 0x10U;
 13799  01015A  EE20 F038          	lfsr	2,56
 13800  01015E  503D               	movf	_currentTCB,w,c
 13801  010160  26D9               	addwf	fsr2l,f,c
 13802  010162  503E               	movf	_currentTCB+1,w,c
 13803  010164  22DA               	addwfc	fsr2h,f,c
 13804  010166  0E12               	movlw	18
 13805  010168  6EDF               	movwf	indf2,c
 13806                           
 13807                           ; BSR set to: 0
 13808                           ;tcpv4.c: 631: currentTCB->timeout = ((unsigned long)1*2);
 13809  01016A  EE20 F033          	lfsr	2,51
 13810  01016E  503D               	movf	_currentTCB,w,c
 13811  010170  26D9               	addwf	fsr2l,f,c
 13812  010172  503E               	movf	_currentTCB+1,w,c
 13813  010174  22DA               	addwfc	fsr2h,f,c
 13814  010176  0E02               	movlw	2
 13815  010178  6EDE               	movwf	postinc2,c
 13816  01017A  0E00               	movlw	0
 13817  01017C  6EDD               	movwf	postdec2,c
 13818                           
 13819                           ; BSR set to: 0
 13820                           ;tcpv4.c: 632: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 13821  01017E  EE20 F035          	lfsr	2,53
 13822  010182  503D               	movf	_currentTCB,w,c
 13823  010184  26D9               	addwf	fsr2l,f,c
 13824  010186  503E               	movf	_currentTCB+1,w,c
 13825  010188  22DA               	addwfc	fsr2h,f,c
 13826  01018A  0E02               	movlw	2
 13827  01018C  6EDE               	movwf	postinc2,c
 13828  01018E  0E00               	movlw	0
 13829  010190  6EDD               	movwf	postdec2,c
 13830                           
 13831                           ; BSR set to: 0
 13832                           ;tcpv4.c: 633: currentTCB->timeoutsCount = (3u);
 13833  010192  EE20 F037          	lfsr	2,55
 13834  010196  503D               	movf	_currentTCB,w,c
 13835  010198  26D9               	addwf	fsr2l,f,c
 13836  01019A  503E               	movf	_currentTCB+1,w,c
 13837  01019C  22DA               	addwfc	fsr2h,f,c
 13838  01019E  0E03               	movlw	3
 13839  0101A0  6EDF               	movwf	indf2,c
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;tcpv4.c: 635: TCP_Snd(currentTCB);
 13843  0101A2  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 13844  0101A6  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 13845  0101AA  EC61  F08D         	call	_TCP_Snd	;wreg free
 13846  0101AE  D09A               	goto	l11500
 13847  0101B0                     
 13848                           ; BSR set to: 1
 13849                           ;tcpv4.c: 639: nextState = CLOSE;
 13850                           
 13851                           ; BSR set to: 1
 13852  0101B0  0E00               	movlw	0
 13853  0101B2  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13854                           
 13855                           ; BSR set to: 1
 13856                           ;tcpv4.c: 640: TCB_Reset(currentTCB);
 13857  0101B4  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 13858  0101B8  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 13859  0101BC  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 13860                           
 13861                           ;tcpv4.c: 645: }
 13862                           
 13863                           ;tcpv4.c: 644: break;
 13864                           
 13865                           ;tcpv4.c: 642: default:
 13866                           
 13867                           ;tcpv4.c: 641: break;
 13868  0101C0  EFF1  F089         	goto	l1689
 13869  0101C4  0101               	movlb	1	; () banked
 13870  0101C6  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 13871                           
 13872                           ; Switch size 1, requested type "space"
 13873                           ; Number of cases is 2, Range of values is 0 to 3
 13874                           ; switch strategies available:
 13875                           ; Name         Instructions Cycles
 13876                           ; simple_byte            7     4 (average)
 13877                           ;	Chosen strategy is simple_byte
 13878  0101C8  0A00               	xorlw	0	; case 0
 13879  0101CA  B4D8               	btfsc	status,2,c
 13880  0101CC  D7F1               	goto	l1687
 13881  0101CE  0A03               	xorlw	3	; case 3
 13882  0101D0  B4D8               	btfsc	status,2,c
 13883  0101D2  D73E               	goto	l1685
 13884                           
 13885                           ; BSR set to: 1
 13886                           ;tcpv4.c: 646: break;
 13887  0101D4  EFF1  F089         	goto	l1689
 13888  0101D8                     
 13889                           ; BSR set to: 1
 13890                           ;tcpv4.c: 652: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 13891                           
 13892                           ; BSR set to: 1
 13893  0101D8  EE22  F05D         	lfsr	2,_tcpHeader+4
 13894  0101DC  EE10 F008          	lfsr	1,8
 13895  0101E0  503D               	movf	_currentTCB,w,c
 13896  0101E2  26E1               	addwf	fsr1l,f,c
 13897  0101E4  503E               	movf	_currentTCB+1,w,c
 13898  0101E6  22E2               	addwfc	fsr1h,f,c
 13899  0101E8  CFDE FFE6          	movff	postinc2,postinc1
 13900  0101EC  CFDE FFE6          	movff	postinc2,postinc1
 13901  0101F0  CFDE FFE6          	movff	postinc2,postinc1
 13902  0101F4  CFDE FFE6          	movff	postinc2,postinc1
 13903                           
 13904                           ; BSR set to: 1
 13905                           ;tcpv4.c: 653: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 13906  0101F8  0E01               	movlw	1
 13907  0101FA  0102               	movlb	2	; () banked
 13908  0101FC  255D               	addwf	(_tcpHeader+4)& (0+255),w,b
 13909  0101FE  0100               	movlb	0	; () banked
 13910  010200  6FF4               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 13911  010202  0E00               	movlw	0
 13912  010204  0102               	movlb	2	; () banked
 13913  010206  215E               	addwfc	(_tcpHeader+5)& (0+255),w,b
 13914  010208  0100               	movlb	0	; () banked
 13915  01020A  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 13916  01020C  0E00               	movlw	0
 13917  01020E  0102               	movlb	2	; () banked
 13918  010210  215F               	addwfc	(_tcpHeader+6)& (0+255),w,b
 13919  010212  0100               	movlb	0	; () banked
 13920  010214  6FF6               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 13921  010216  0E00               	movlw	0
 13922  010218  0102               	movlb	2	; () banked
 13923  01021A  2160               	addwfc	(_tcpHeader+7)& (0+255),w,b
 13924  01021C  0100               	movlb	0	; () banked
 13925  01021E  6FF7               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 13926  010220  EE20 F00C          	lfsr	2,12
 13927  010224  503D               	movf	_currentTCB,w,c
 13928  010226  26D9               	addwf	fsr2l,f,c
 13929  010228  503E               	movf	_currentTCB+1,w,c
 13930  01022A  22DA               	addwfc	fsr2h,f,c
 13931  01022C  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 13932  010230  C0F5  FFDE         	movff	??_TCP_FiniteStateMachine+1,postinc2
 13933  010234  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 13934  010238  C0F7  FFDE         	movff	??_TCP_FiniteStateMachine+3,postinc2
 13935                           
 13936                           ; BSR set to: 0
 13937                           ;tcpv4.c: 656: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 13938  01023C  0102               	movlb	2	; () banked
 13939  01023E  5167               	movf	(_tcpHeader+14)& (0+255),w,b
 13940  010240  0100               	movlb	0	; () banked
 13941  010242  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 13942  010244  6BF4               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 13943  010246  EE22  F067         	lfsr	2,_tcpHeader+14
 13944  01024A  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13945  01024E  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 13946  010252  C0F7  F0F6         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 13947  010256  6BF7               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 13948  010258  0EFF               	movlw	255
 13949  01025A  17F6               	andwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 13950  01025C  0E00               	movlw	0
 13951  01025E  17F7               	andwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 13952  010260  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 13953  010262  13F6               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 13954  010264  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13955  010266  13F7               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 13956  010268  EE20 F018          	lfsr	2,24
 13957  01026C  503D               	movf	_currentTCB,w,c
 13958  01026E  26D9               	addwf	fsr2l,f,c
 13959  010270  503E               	movf	_currentTCB+1,w,c
 13960  010272  22DA               	addwfc	fsr2h,f,c
 13961  010274  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 13962  010278  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;tcpv4.c: 657: currentTCB->mss = tcpMss;
 13966  01027C  EE20 F01C          	lfsr	2,28
 13967  010280  503D               	movf	_currentTCB,w,c
 13968  010282  26D9               	addwf	fsr2l,f,c
 13969  010284  503E               	movf	_currentTCB+1,w,c
 13970  010286  22DA               	addwfc	fsr2h,f,c
 13971  010288  C2C3  FFDE         	movff	_tcpMss,postinc2
 13972  01028C  C2C4  FFDD         	movff	_tcpMss+1,postdec2
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;tcpv4.c: 660: currentTCB->timeout = ((unsigned long)1*2);
 13976  010290  EE20 F033          	lfsr	2,51
 13977  010294  503D               	movf	_currentTCB,w,c
 13978  010296  26D9               	addwf	fsr2l,f,c
 13979  010298  503E               	movf	_currentTCB+1,w,c
 13980  01029A  22DA               	addwfc	fsr2h,f,c
 13981  01029C  0E02               	movlw	2
 13982  01029E  6EDE               	movwf	postinc2,c
 13983  0102A0  0E00               	movlw	0
 13984  0102A2  6EDD               	movwf	postdec2,c
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;tcpv4.c: 661: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 13988  0102A4  EE20 F035          	lfsr	2,53
 13989  0102A8  503D               	movf	_currentTCB,w,c
 13990  0102AA  26D9               	addwf	fsr2l,f,c
 13991  0102AC  503E               	movf	_currentTCB+1,w,c
 13992  0102AE  22DA               	addwfc	fsr2h,f,c
 13993  0102B0  0E02               	movlw	2
 13994  0102B2  6EDE               	movwf	postinc2,c
 13995  0102B4  0E00               	movlw	0
 13996  0102B6  6EDD               	movwf	postdec2,c
 13997                           
 13998                           ; BSR set to: 0
 13999                           ;tcpv4.c: 662: currentTCB->timeoutsCount = (3u);
 14000  0102B8  EE20 F037          	lfsr	2,55
 14001  0102BC  503D               	movf	_currentTCB,w,c
 14002  0102BE  26D9               	addwf	fsr2l,f,c
 14003  0102C0  503E               	movf	_currentTCB+1,w,c
 14004  0102C2  22DA               	addwfc	fsr2h,f,c
 14005  0102C4  0E03               	movlw	3
 14006  0102C6  6EDF               	movwf	indf2,c
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;tcpv4.c: 663: currentTCB->flags = 0x02U | 0x10U;
 14010  0102C8  EE20 F038          	lfsr	2,56
 14011  0102CC  503D               	movf	_currentTCB,w,c
 14012  0102CE  26D9               	addwf	fsr2l,f,c
 14013  0102D0  503E               	movf	_currentTCB+1,w,c
 14014  0102D2  22DA               	addwfc	fsr2h,f,c
 14015  0102D4  0E12               	movlw	18
 14016  0102D6  6EDF               	movwf	indf2,c
 14017                           
 14018                           ; BSR set to: 0
 14019                           ;tcpv4.c: 665: TCP_Snd(currentTCB);
 14020  0102D8  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14021  0102DC  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14022  0102E0  EC61  F08D         	call	_TCP_Snd	;wreg free
 14023  0102E4                     l11500:
 14024                           
 14025                           ;tcpv4.c: 668: nextState = SYN_RECEIVED;
 14026  0102E4  0E03               	movlw	3
 14027  0102E6  EFCC  F088         	goto	L23
 14028  0102EA                     
 14029                           ; BSR set to: 1
 14030                           ;tcpv4.c: 672: currentTCB->timeout = 0;
 14031                           
 14032                           ; BSR set to: 1
 14033  0102EA  EE20 F033          	lfsr	2,51
 14034  0102EE  503D               	movf	_currentTCB,w,c
 14035  0102F0  26D9               	addwf	fsr2l,f,c
 14036  0102F2  503E               	movf	_currentTCB+1,w,c
 14037  0102F4  22DA               	addwfc	fsr2h,f,c
 14038  0102F6  0E00               	movlw	0
 14039  0102F8  6EDE               	movwf	postinc2,c
 14040  0102FA  0E00               	movlw	0
 14041  0102FC  6EDD               	movwf	postdec2,c
 14042                           
 14043                           ;tcpv4.c: 674: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 14044  0102FE  EE20 F010          	lfsr	2,16
 14045  010302  503D               	movf	_currentTCB,w,c
 14046  010304  26D9               	addwf	fsr2l,f,c
 14047  010306  503E               	movf	_currentTCB+1,w,c
 14048  010308  22DA               	addwfc	fsr2h,f,c
 14049  01030A  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14050  01030E  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14051  010312  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14052  010316  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14053  01031A  0E01               	movlw	1
 14054  01031C  0100               	movlb	0	; () banked
 14055  01031E  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14056  010320  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14057  010322  0E00               	movlw	0
 14058  010324  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14059  010326  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14060  010328  0E00               	movlw	0
 14061  01032A  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14062  01032C  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14063  01032E  0E00               	movlw	0
 14064  010330  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14065  010332  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14066  010334  0102               	movlb	2	; () banked
 14067  010336  5161               	movf	(_tcpHeader+8)& (0+255),w,b
 14068  010338  0100               	movlb	0	; () banked
 14069  01033A  19F8               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 14070  01033C  E10F               	bnz	u11231
 14071  01033E  0102               	movlb	2	; () banked
 14072  010340  5162               	movf	(_tcpHeader+9)& (0+255),w,b
 14073  010342  0100               	movlb	0	; () banked
 14074  010344  19F9               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 14075  010346  E10A               	bnz	u11231
 14076  010348  0102               	movlb	2	; () banked
 14077  01034A  5163               	movf	(_tcpHeader+10)& (0+255),w,b
 14078  01034C  0100               	movlb	0	; () banked
 14079  01034E  19FA               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 14080  010350  E105               	bnz	u11231
 14081  010352  0102               	movlb	2	; () banked
 14082  010354  5164               	movf	(_tcpHeader+11)& (0+255),w,b
 14083  010356  0100               	movlb	0	; () banked
 14084  010358  19FB               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 14085  01035A  A4D8               	btfss	status,2,c
 14086  01035C                     u11231:
 14087  01035C  D0A1               	goto	l1695
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;tcpv4.c: 675: {
 14091                           ;tcpv4.c: 677: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 14092  01035E  EE20 F010          	lfsr	2,16
 14093  010362  503D               	movf	_currentTCB,w,c
 14094  010364  26D9               	addwf	fsr2l,f,c
 14095  010366  503E               	movf	_currentTCB+1,w,c
 14096  010368  22DA               	addwfc	fsr2h,f,c
 14097  01036A  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14098  01036E  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14099  010372  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14100  010376  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14101  01037A  0E01               	movlw	1
 14102  01037C  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14103  01037E  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14104  010380  0E00               	movlw	0
 14105  010382  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14106  010384  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14107  010386  0E00               	movlw	0
 14108  010388  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14109  01038A  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14110  01038C  0E00               	movlw	0
 14111  01038E  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14112  010390  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14113  010392  EE20 F010          	lfsr	2,16
 14114  010396  503D               	movf	_currentTCB,w,c
 14115  010398  26D9               	addwf	fsr2l,f,c
 14116  01039A  503E               	movf	_currentTCB+1,w,c
 14117  01039C  22DA               	addwfc	fsr2h,f,c
 14118  01039E  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 14119  0103A2  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 14120  0103A6  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 14121  0103AA  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 14122                           
 14123                           ;tcpv4.c: 678: currentTCB->flags = 0x10U;
 14124  0103AE  EE20 F038          	lfsr	2,56
 14125  0103B2  503D               	movf	_currentTCB,w,c
 14126  0103B4  26D9               	addwf	fsr2l,f,c
 14127  0103B6  503E               	movf	_currentTCB+1,w,c
 14128  0103B8  22DA               	addwfc	fsr2h,f,c
 14129  0103BA  0E10               	movlw	16
 14130  0103BC  6EDF               	movwf	indf2,c
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;tcpv4.c: 681: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 14134  0103BE  EE22  F05D         	lfsr	2,_tcpHeader+4
 14135  0103C2  EE10 F008          	lfsr	1,8
 14136  0103C6  503D               	movf	_currentTCB,w,c
 14137  0103C8  26E1               	addwf	fsr1l,f,c
 14138  0103CA  503E               	movf	_currentTCB+1,w,c
 14139  0103CC  22E2               	addwfc	fsr1h,f,c
 14140  0103CE  CFDE FFE6          	movff	postinc2,postinc1
 14141  0103D2  CFDE FFE6          	movff	postinc2,postinc1
 14142  0103D6  CFDE FFE6          	movff	postinc2,postinc1
 14143  0103DA  CFDE FFE6          	movff	postinc2,postinc1
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;tcpv4.c: 683: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 14147  0103DE  0E01               	movlw	1
 14148  0103E0  0102               	movlb	2	; () banked
 14149  0103E2  255D               	addwf	(_tcpHeader+4)& (0+255),w,b
 14150  0103E4  0100               	movlb	0	; () banked
 14151  0103E6  6FF4               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14152  0103E8  0E00               	movlw	0
 14153  0103EA  0102               	movlb	2	; () banked
 14154  0103EC  215E               	addwfc	(_tcpHeader+5)& (0+255),w,b
 14155  0103EE  0100               	movlb	0	; () banked
 14156  0103F0  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14157  0103F2  0E00               	movlw	0
 14158  0103F4  0102               	movlb	2	; () banked
 14159  0103F6  215F               	addwfc	(_tcpHeader+6)& (0+255),w,b
 14160  0103F8  0100               	movlb	0	; () banked
 14161  0103FA  6FF6               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 14162  0103FC  0E00               	movlw	0
 14163  0103FE  0102               	movlb	2	; () banked
 14164  010400  2160               	addwfc	(_tcpHeader+7)& (0+255),w,b
 14165  010402  0100               	movlb	0	; () banked
 14166  010404  6FF7               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14167  010406  EE20 F00C          	lfsr	2,12
 14168  01040A  503D               	movf	_currentTCB,w,c
 14169  01040C  26D9               	addwf	fsr2l,f,c
 14170  01040E  503E               	movf	_currentTCB+1,w,c
 14171  010410  22DA               	addwfc	fsr2h,f,c
 14172  010412  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 14173  010416  C0F5  FFDE         	movff	??_TCP_FiniteStateMachine+1,postinc2
 14174  01041A  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 14175  01041E  C0F7  FFDE         	movff	??_TCP_FiniteStateMachine+3,postinc2
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;tcpv4.c: 685: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 14179  010422  0102               	movlb	2	; () banked
 14180  010424  5167               	movf	(_tcpHeader+14)& (0+255),w,b
 14181  010426  0100               	movlb	0	; () banked
 14182  010428  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14183  01042A  6BF4               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 14184  01042C  EE22  F067         	lfsr	2,_tcpHeader+14
 14185  010430  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14186  010434  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 14187  010438  C0F7  F0F6         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 14188  01043C  6BF7               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14189  01043E  0EFF               	movlw	255
 14190  010440  17F6               	andwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14191  010442  0E00               	movlw	0
 14192  010444  17F7               	andwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14193  010446  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 14194  010448  13F6               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14195  01044A  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14196  01044C  13F7               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14197  01044E  EE20 F018          	lfsr	2,24
 14198  010452  503D               	movf	_currentTCB,w,c
 14199  010454  26D9               	addwf	fsr2l,f,c
 14200  010456  503E               	movf	_currentTCB+1,w,c
 14201  010458  22DA               	addwfc	fsr2h,f,c
 14202  01045A  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 14203  01045E  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 14204                           
 14205                           ; BSR set to: 0
 14206                           ;tcpv4.c: 686: currentTCB->mss = tcpMss;
 14207  010462  EE20 F01C          	lfsr	2,28
 14208  010466  503D               	movf	_currentTCB,w,c
 14209  010468  26D9               	addwf	fsr2l,f,c
 14210  01046A  503E               	movf	_currentTCB+1,w,c
 14211  01046C  22DA               	addwfc	fsr2h,f,c
 14212  01046E  C2C3  FFDE         	movff	_tcpMss,postinc2
 14213  010472  C2C4  FFDD         	movff	_tcpMss+1,postdec2
 14214                           
 14215                           ; BSR set to: 0
 14216                           ;tcpv4.c: 688: if(TCP_Snd(currentTCB))
 14217  010476  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14218  01047A  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14219  01047E  EC61  F08D         	call	_TCP_Snd	;wreg free
 14220  010482  0900               	iorlw	0
 14221  010484  B4D8               	btfsc	status,2,c
 14222  010486  EFF1  F089         	goto	l1689
 14223  01048A  D2AA               	goto	l11614
 14224  01048C                     l11518:
 14225                           
 14226                           ; BSR set to: 1
 14227                           ;tcpv4.c: 691: currentTCB->socketState = SOCKET_CONNECTED;
 14228  01048C  EE20 F039          	lfsr	2,57
 14229  010490  503D               	movf	_currentTCB,w,c
 14230  010492  26D9               	addwf	fsr2l,f,c
 14231  010494  503E               	movf	_currentTCB+1,w,c
 14232  010496  22DA               	addwfc	fsr2h,f,c
 14233  010498  0E03               	movlw	3
 14234  01049A  6EDF               	movwf	indf2,c
 14235                           
 14236                           ; BSR set to: 1
 14237                           ;tcpv4.c: 692: }
 14238                           ;tcpv4.c: 693: }
 14239  01049C  EFF1  F089         	goto	l1689
 14240  0104A0                     l1695:
 14241                           
 14242                           ;tcpv4.c: 694: else
 14243                           ;tcpv4.c: 695: {
 14244                           ;tcpv4.c: 697: currentTCB->localSeqno = tcpHeader.ackNumber;
 14245                           
 14246                           ; BSR set to: 1
 14247  0104A0  EE22  F061         	lfsr	2,_tcpHeader+8
 14248  0104A4  EE10 F010          	lfsr	1,16
 14249  0104A8  503D               	movf	_currentTCB,w,c
 14250  0104AA  26E1               	addwf	fsr1l,f,c
 14251  0104AC  503E               	movf	_currentTCB+1,w,c
 14252  0104AE  22E2               	addwfc	fsr1h,f,c
 14253  0104B0  CFDE FFE6          	movff	postinc2,postinc1
 14254  0104B4  CFDE FFE6          	movff	postinc2,postinc1
 14255  0104B8  CFDE FFE6          	movff	postinc2,postinc1
 14256  0104BC  CFDE FFE6          	movff	postinc2,postinc1
 14257                           
 14258                           ;tcpv4.c: 698: currentTCB->flags = 0x04U | 0x10U;
 14259  0104C0  EE20 F038          	lfsr	2,56
 14260  0104C4  503D               	movf	_currentTCB,w,c
 14261  0104C6  26D9               	addwf	fsr2l,f,c
 14262  0104C8  503E               	movf	_currentTCB+1,w,c
 14263  0104CA  22DA               	addwfc	fsr2h,f,c
 14264  0104CC  0E14               	movlw	20
 14265  0104CE  6EDF               	movwf	indf2,c
 14266                           
 14267                           ;tcpv4.c: 699: if(TCP_Snd(currentTCB))
 14268  0104D0  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14269  0104D4  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14270  0104D8  EC61  F08D         	call	_TCP_Snd	;wreg free
 14271  0104DC  0900               	iorlw	0
 14272  0104DE  B4D8               	btfsc	status,2,c
 14273  0104E0  EFF1  F089         	goto	l1689
 14274                           
 14275                           ;tcpv4.c: 700: {
 14276                           ;tcpv4.c: 701: nextState = CLOSE;
 14277  0104E4  0E00               	movlw	0
 14278  0104E6  0101               	movlb	1	; () banked
 14279  0104E8  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14280                           
 14281                           ; BSR set to: 1
 14282                           ;tcpv4.c: 702: TCB_Reset(currentTCB);
 14283  0104EA  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14284  0104EE  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14285  0104F2  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 14286                           
 14287                           ;tcpv4.c: 703: }
 14288                           ;tcpv4.c: 704: }
 14289                           ;tcpv4.c: 705: break;
 14290  0104F6  EFF1  F089         	goto	l1689
 14291  0104FA                     
 14292                           ;tcpv4.c: 708: currentTCB->timeout = 0;
 14293  0104FA  EE20 F033          	lfsr	2,51
 14294  0104FE  503D               	movf	_currentTCB,w,c
 14295  010500  26D9               	addwf	fsr2l,f,c
 14296  010502  503E               	movf	_currentTCB+1,w,c
 14297  010504  22DA               	addwfc	fsr2h,f,c
 14298  010506  0E00               	movlw	0
 14299  010508  6EDE               	movwf	postinc2,c
 14300  01050A  0E00               	movlw	0
 14301  01050C  6EDD               	movwf	postdec2,c
 14302                           
 14303                           ;tcpv4.c: 710: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 14304  01050E  EE20 F010          	lfsr	2,16
 14305  010512  503D               	movf	_currentTCB,w,c
 14306  010514  26D9               	addwf	fsr2l,f,c
 14307  010516  503E               	movf	_currentTCB+1,w,c
 14308  010518  22DA               	addwfc	fsr2h,f,c
 14309  01051A  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14310  01051E  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14311  010522  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14312  010526  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14313  01052A  0E01               	movlw	1
 14314  01052C  0100               	movlb	0	; () banked
 14315  01052E  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14316  010530  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14317  010532  0E00               	movlw	0
 14318  010534  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14319  010536  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14320  010538  0E00               	movlw	0
 14321  01053A  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14322  01053C  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14323  01053E  0E00               	movlw	0
 14324  010540  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14325  010542  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14326  010544  0102               	movlb	2	; () banked
 14327  010546  5161               	movf	(_tcpHeader+8)& (0+255),w,b
 14328  010548  0100               	movlb	0	; () banked
 14329  01054A  19F8               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 14330  01054C  E10F               	bnz	u11261
 14331  01054E  0102               	movlb	2	; () banked
 14332  010550  5162               	movf	(_tcpHeader+9)& (0+255),w,b
 14333  010552  0100               	movlb	0	; () banked
 14334  010554  19F9               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 14335  010556  E10A               	bnz	u11261
 14336  010558  0102               	movlb	2	; () banked
 14337  01055A  5163               	movf	(_tcpHeader+10)& (0+255),w,b
 14338  01055C  0100               	movlb	0	; () banked
 14339  01055E  19FA               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 14340  010560  E105               	bnz	u11261
 14341  010562  0102               	movlb	2	; () banked
 14342  010564  5164               	movf	(_tcpHeader+11)& (0+255),w,b
 14343  010566  0100               	movlb	0	; () banked
 14344  010568  19FB               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 14345  01056A  A4D8               	btfss	status,2,c
 14346  01056C                     u11261:
 14347  01056C  D08D               	goto	l1700
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;tcpv4.c: 711: {
 14351                           ;tcpv4.c: 713: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 14352  01056E  EE20 F010          	lfsr	2,16
 14353  010572  503D               	movf	_currentTCB,w,c
 14354  010574  26D9               	addwf	fsr2l,f,c
 14355  010576  503E               	movf	_currentTCB+1,w,c
 14356  010578  22DA               	addwfc	fsr2h,f,c
 14357  01057A  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14358  01057E  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14359  010582  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14360  010586  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14361  01058A  0E01               	movlw	1
 14362  01058C  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14363  01058E  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14364  010590  0E00               	movlw	0
 14365  010592  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14366  010594  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14367  010596  0E00               	movlw	0
 14368  010598  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14369  01059A  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14370  01059C  0E00               	movlw	0
 14371  01059E  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14372  0105A0  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14373  0105A2  EE20 F010          	lfsr	2,16
 14374  0105A6  503D               	movf	_currentTCB,w,c
 14375  0105A8  26D9               	addwf	fsr2l,f,c
 14376  0105AA  503E               	movf	_currentTCB+1,w,c
 14377  0105AC  22DA               	addwfc	fsr2h,f,c
 14378  0105AE  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 14379  0105B2  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 14380  0105B6  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 14381  0105BA  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 14382                           
 14383                           ;tcpv4.c: 714: currentTCB->flags = 0x10U;
 14384  0105BE  EE20 F038          	lfsr	2,56
 14385  0105C2  503D               	movf	_currentTCB,w,c
 14386  0105C4  26D9               	addwf	fsr2l,f,c
 14387  0105C6  503E               	movf	_currentTCB+1,w,c
 14388  0105C8  22DA               	addwfc	fsr2h,f,c
 14389  0105CA  0E10               	movlw	16
 14390  0105CC  6EDF               	movwf	indf2,c
 14391                           
 14392                           ; BSR set to: 0
 14393                           ;tcpv4.c: 717: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 14394  0105CE  EE22  F05D         	lfsr	2,_tcpHeader+4
 14395  0105D2  EE10 F008          	lfsr	1,8
 14396  0105D6  503D               	movf	_currentTCB,w,c
 14397  0105D8  26E1               	addwf	fsr1l,f,c
 14398  0105DA  503E               	movf	_currentTCB+1,w,c
 14399  0105DC  22E2               	addwfc	fsr1h,f,c
 14400  0105DE  CFDE FFE6          	movff	postinc2,postinc1
 14401  0105E2  CFDE FFE6          	movff	postinc2,postinc1
 14402  0105E6  CFDE FFE6          	movff	postinc2,postinc1
 14403  0105EA  CFDE FFE6          	movff	postinc2,postinc1
 14404                           
 14405                           ; BSR set to: 0
 14406                           ;tcpv4.c: 718: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 14407  0105EE  0E01               	movlw	1
 14408  0105F0  0102               	movlb	2	; () banked
 14409  0105F2  255D               	addwf	(_tcpHeader+4)& (0+255),w,b
 14410  0105F4  0100               	movlb	0	; () banked
 14411  0105F6  6FF4               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14412  0105F8  0E00               	movlw	0
 14413  0105FA  0102               	movlb	2	; () banked
 14414  0105FC  215E               	addwfc	(_tcpHeader+5)& (0+255),w,b
 14415  0105FE  0100               	movlb	0	; () banked
 14416  010600  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14417  010602  0E00               	movlw	0
 14418  010604  0102               	movlb	2	; () banked
 14419  010606  215F               	addwfc	(_tcpHeader+6)& (0+255),w,b
 14420  010608  0100               	movlb	0	; () banked
 14421  01060A  6FF6               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 14422  01060C  0E00               	movlw	0
 14423  01060E  0102               	movlb	2	; () banked
 14424  010610  2160               	addwfc	(_tcpHeader+7)& (0+255),w,b
 14425  010612  0100               	movlb	0	; () banked
 14426  010614  6FF7               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14427  010616  EE20 F00C          	lfsr	2,12
 14428  01061A  503D               	movf	_currentTCB,w,c
 14429  01061C  26D9               	addwf	fsr2l,f,c
 14430  01061E  503E               	movf	_currentTCB+1,w,c
 14431  010620  22DA               	addwfc	fsr2h,f,c
 14432  010622  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 14433  010626  C0F5  FFDE         	movff	??_TCP_FiniteStateMachine+1,postinc2
 14434  01062A  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 14435  01062E  C0F7  FFDE         	movff	??_TCP_FiniteStateMachine+3,postinc2
 14436                           
 14437                           ; BSR set to: 0
 14438                           ;tcpv4.c: 720: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 14439  010632  0102               	movlb	2	; () banked
 14440  010634  5167               	movf	(_tcpHeader+14)& (0+255),w,b
 14441  010636  0100               	movlb	0	; () banked
 14442  010638  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14443  01063A  6BF4               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 14444  01063C  EE22  F067         	lfsr	2,_tcpHeader+14
 14445  010640  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14446  010644  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 14447  010648  C0F7  F0F6         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 14448  01064C  6BF7               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14449  01064E  0EFF               	movlw	255
 14450  010650  17F6               	andwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14451  010652  0E00               	movlw	0
 14452  010654  17F7               	andwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14453  010656  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 14454  010658  13F6               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14455  01065A  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14456  01065C  13F7               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14457  01065E  EE20 F018          	lfsr	2,24
 14458  010662  503D               	movf	_currentTCB,w,c
 14459  010664  26D9               	addwf	fsr2l,f,c
 14460  010666  503E               	movf	_currentTCB+1,w,c
 14461  010668  22DA               	addwfc	fsr2h,f,c
 14462  01066A  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 14463  01066E  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;tcpv4.c: 721: currentTCB->mss = tcpMss;
 14467  010672  EE20 F01C          	lfsr	2,28
 14468  010676  503D               	movf	_currentTCB,w,c
 14469  010678  26D9               	addwf	fsr2l,f,c
 14470  01067A  503E               	movf	_currentTCB+1,w,c
 14471  01067C  22DA               	addwfc	fsr2h,f,c
 14472  01067E  C2C3  FFDE         	movff	_tcpMss,postinc2
 14473  010682  C2C4  FFDD         	movff	_tcpMss+1,postdec2
 14474  010686  D1AC               	goto	l11614
 14475  010688                     l1700:
 14476                           
 14477                           ;tcpv4.c: 726: else
 14478                           ;tcpv4.c: 727: {
 14479                           ;tcpv4.c: 729: currentTCB->localSeqno = tcpHeader.ackNumber;
 14480                           
 14481                           ; BSR set to: 1
 14482  010688  EE22  F061         	lfsr	2,_tcpHeader+8
 14483  01068C  EE10 F010          	lfsr	1,16
 14484  010690  503D               	movf	_currentTCB,w,c
 14485  010692  26E1               	addwf	fsr1l,f,c
 14486  010694  503E               	movf	_currentTCB+1,w,c
 14487  010696  22E2               	addwfc	fsr1h,f,c
 14488  010698  CFDE FFE6          	movff	postinc2,postinc1
 14489  01069C  CFDE FFE6          	movff	postinc2,postinc1
 14490  0106A0  CFDE FFE6          	movff	postinc2,postinc1
 14491  0106A4  CFDE FFE6          	movff	postinc2,postinc1
 14492                           
 14493                           ;tcpv4.c: 730: currentTCB->flags = 0x04U;
 14494  0106A8  EE20 F038          	lfsr	2,56
 14495  0106AC  503D               	movf	_currentTCB,w,c
 14496  0106AE  26D9               	addwf	fsr2l,f,c
 14497  0106B0  503E               	movf	_currentTCB+1,w,c
 14498  0106B2  22DA               	addwfc	fsr2h,f,c
 14499  0106B4  0E04               	movlw	4
 14500  0106B6  6EDF               	movwf	indf2,c
 14501                           
 14502                           ;tcpv4.c: 731: if(TCP_Snd(currentTCB))
 14503  0106B8  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14504  0106BC  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14505  0106C0  EC61  F08D         	call	_TCP_Snd	;wreg free
 14506  0106C4  0900               	iorlw	0
 14507  0106C6  B4D8               	btfsc	status,2,c
 14508  0106C8  EFF1  F089         	goto	l1689
 14509                           
 14510                           ;tcpv4.c: 732: {
 14511                           ;tcpv4.c: 733: nextState = CLOSE;
 14512  0106CC  0E00               	movlw	0
 14513  0106CE  0101               	movlb	1	; () banked
 14514  0106D0  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14515                           
 14516                           ; BSR set to: 1
 14517                           ;tcpv4.c: 734: TCB_Reset(currentTCB);
 14518  0106D2  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14519  0106D6  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14520  0106DA  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 14521                           
 14522                           ;tcpv4.c: 735: }
 14523                           ;tcpv4.c: 736: }
 14524                           ;tcpv4.c: 737: break;
 14525  0106DE  EFF1  F089         	goto	l1689
 14526  0106E2                     
 14527                           ;tcpv4.c: 740: nextState = CLOSED;
 14528  0106E2  0E00               	movlw	0
 14529  0106E4  0101               	movlb	1	; () banked
 14530  0106E6  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14531                           
 14532                           ; BSR set to: 1
 14533                           ;tcpv4.c: 741: TCB_Reset(currentTCB);
 14534  0106E8  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14535  0106EC  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14536  0106F0  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 14537                           
 14538                           ;tcpv4.c: 742: break;
 14539  0106F4  EFF1  F089         	goto	l1689
 14540  0106F8                     
 14541                           ;tcpv4.c: 746: if (currentTCB->timeoutsCount)
 14542  0106F8  EE20 F037          	lfsr	2,55
 14543  0106FC  503D               	movf	_currentTCB,w,c
 14544  0106FE  26D9               	addwf	fsr2l,f,c
 14545  010700  503E               	movf	_currentTCB+1,w,c
 14546  010702  22DA               	addwfc	fsr2h,f,c
 14547  010704  50DF               	movf	indf2,w,c
 14548  010706  B4D8               	btfsc	status,2,c
 14549  010708  D027               	goto	l1705
 14550                           
 14551                           ;tcpv4.c: 747: {
 14552                           ;tcpv4.c: 748: if(TCP_Snd(currentTCB))
 14553  01070A  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14554  01070E  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14555  010712  EC61  F08D         	call	_TCP_Snd	;wreg free
 14556  010716  0900               	iorlw	0
 14557  010718  B4D8               	btfsc	status,2,c
 14558  01071A  EFF1  F089         	goto	l1689
 14559                           
 14560                           ;tcpv4.c: 749: {
 14561                           ;tcpv4.c: 750: if (currentTCB->flags & 0x04U)
 14562  01071E  EE20 F038          	lfsr	2,56
 14563  010722  503D               	movf	_currentTCB,w,c
 14564  010724  26D9               	addwf	fsr2l,f,c
 14565  010726  503E               	movf	_currentTCB+1,w,c
 14566  010728  22DA               	addwfc	fsr2h,f,c
 14567  01072A  A4DF               	btfss	indf2,2,c
 14568  01072C  D00B               	goto	l1707
 14569                           
 14570                           ;tcpv4.c: 751: {
 14571                           ;tcpv4.c: 752: nextState = CLOSE;
 14572  01072E  0E00               	movlw	0
 14573  010730  0101               	movlb	1	; () banked
 14574  010732  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14575                           
 14576                           ; BSR set to: 1
 14577                           ;tcpv4.c: 753: TCB_Reset(currentTCB);
 14578  010734  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14579  010738  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14580  01073C  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 14581                           
 14582                           ;tcpv4.c: 754: }else
 14583  010740  EFF1  F089         	goto	l1689
 14584  010744                     l1707:
 14585                           
 14586                           ;tcpv4.c: 755: if(currentTCB->flags & 0x10U)
 14587  010744  EE20 F038          	lfsr	2,56
 14588  010748  503D               	movf	_currentTCB,w,c
 14589  01074A  26D9               	addwf	fsr2l,f,c
 14590  01074C  503E               	movf	_currentTCB+1,w,c
 14591  01074E  22DA               	addwfc	fsr2h,f,c
 14592  010750  A8DF               	btfss	indf2,4,c
 14593  010752  EFF1  F089         	goto	l1689
 14594  010756  D144               	goto	l11614
 14595  010758                     l1705:
 14596                           
 14597                           ;tcpv4.c: 762: {
 14598                           ;tcpv4.c: 764: currentTCB->flags = 0x04U;
 14599                           
 14600                           ; BSR set to: 1
 14601  010758  EE20 F038          	lfsr	2,56
 14602  01075C  503D               	movf	_currentTCB,w,c
 14603  01075E  26D9               	addwf	fsr2l,f,c
 14604  010760  503E               	movf	_currentTCB+1,w,c
 14605  010762  22DA               	addwfc	fsr2h,f,c
 14606  010764  0E04               	movlw	4
 14607  010766  6EDF               	movwf	indf2,c
 14608                           
 14609                           ;tcpv4.c: 765: if(TCP_Snd(currentTCB))
 14610  010768  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14611  01076C  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14612  010770  EC61  F08D         	call	_TCP_Snd	;wreg free
 14613  010774  0900               	iorlw	0
 14614  010776  B4D8               	btfsc	status,2,c
 14615  010778  EFF1  F089         	goto	l1689
 14616                           
 14617                           ;tcpv4.c: 766: {
 14618                           ;tcpv4.c: 767: nextState = CLOSE;
 14619  01077C  0E00               	movlw	0
 14620  01077E  0101               	movlb	1	; () banked
 14621  010780  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14622                           
 14623                           ; BSR set to: 1
 14624                           ;tcpv4.c: 768: TCB_Reset(currentTCB);
 14625  010782  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14626  010786  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14627  01078A  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 14628                           
 14629                           ;tcpv4.c: 769: }
 14630                           ;tcpv4.c: 770: }
 14631                           ;tcpv4.c: 771: break;
 14632  01078E  EFF1  F089         	goto	l1689
 14633  010792                     
 14634                           ;tcpv4.c: 773: case RCV_RSTACK:
 14635                           ;tcpv4.c: 775: nextState = CLOSED;
 14636  010792  0E00               	movlw	0
 14637  010794  0101               	movlb	1	; () banked
 14638  010796  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14639                           
 14640                           ; BSR set to: 1
 14641                           ;tcpv4.c: 776: TCB_Reset(currentTCB);
 14642  010798  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14643  01079C  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14644  0107A0  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 14645                           
 14646                           ;tcpv4.c: 781: }
 14647                           
 14648                           ;tcpv4.c: 780: break;
 14649                           
 14650                           ;tcpv4.c: 778: default:
 14651                           
 14652                           ;tcpv4.c: 777: break;
 14653  0107A4  EFF1  F089         	goto	l1689
 14654  0107A8  0101               	movlb	1	; () banked
 14655  0107AA  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 14656                           
 14657                           ; Switch size 1, requested type "space"
 14658                           ; Number of cases is 7, Range of values is 0 to 12
 14659                           ; switch strategies available:
 14660                           ; Name         Instructions Cycles
 14661                           ; simple_byte           22    12 (average)
 14662                           ;	Chosen strategy is simple_byte
 14663  0107AC  0A00               	xorlw	0	; case 0
 14664  0107AE  B4D8               	btfsc	status,2,c
 14665  0107B0  D798               	goto	l1703
 14666  0107B2  0A03               	xorlw	3	; case 3
 14667  0107B4  B4D8               	btfsc	status,2,c
 14668  0107B6  D510               	goto	l1692
 14669  0107B8  0A07               	xorlw	7	; case 4
 14670  0107BA  B4D8               	btfsc	status,2,c
 14671  0107BC  D69E               	goto	l1699
 14672  0107BE  0A01               	xorlw	1	; case 5
 14673  0107C0  B4D8               	btfsc	status,2,c
 14674  0107C2  D593               	goto	l1694
 14675  0107C4  0A0C               	xorlw	12	; case 9
 14676  0107C6  B4D8               	btfsc	status,2,c
 14677  0107C8  D7E4               	goto	l1712
 14678  0107CA  0A03               	xorlw	3	; case 10
 14679  0107CC  B4D8               	btfsc	status,2,c
 14680  0107CE  D7E1               	goto	l1712
 14681  0107D0  0A06               	xorlw	6	; case 12
 14682  0107D2  B4D8               	btfsc	status,2,c
 14683  0107D4  D791               	goto	l1704
 14684                           
 14685                           ; BSR set to: 1
 14686                           ;tcpv4.c: 782: break;
 14687  0107D6  EFF1  F089         	goto	l1689
 14688  0107DA                     
 14689                           ; BSR set to: 1
 14690                           ;tcpv4.c: 787: if (currentTCB->localPort == tcpHeader.destPort)
 14691                           
 14692                           ; BSR set to: 1
 14693  0107DA  C03D  FFD9         	movff	_currentTCB,fsr2l
 14694  0107DE  C03E  FFDA         	movff	_currentTCB+1,fsr2h
 14695  0107E2  0102               	movlb	2	; () banked
 14696  0107E4  515B               	movf	(_tcpHeader+2)& (0+255),w,b
 14697  0107E6  18DE               	xorwf	postinc2,w,c
 14698  0107E8  E103               	bnz	u11331
 14699  0107EA  515C               	movf	(_tcpHeader+3)& (0+255),w,b
 14700  0107EC  18DE               	xorwf	postinc2,w,c
 14701  0107EE  A4D8               	btfss	status,2,c
 14702  0107F0                     u11331:
 14703  0107F0  EFF1  F089         	goto	l1689
 14704                           
 14705                           ; BSR set to: 2
 14706                           ;tcpv4.c: 788: {
 14707                           ;tcpv4.c: 790: currentTCB->timeout = 0;
 14708  0107F4  EE20 F033          	lfsr	2,51
 14709  0107F8  503D               	movf	_currentTCB,w,c
 14710  0107FA  26D9               	addwf	fsr2l,f,c
 14711  0107FC  503E               	movf	_currentTCB+1,w,c
 14712  0107FE  22DA               	addwfc	fsr2h,f,c
 14713  010800  0E00               	movlw	0
 14714  010802  6EDE               	movwf	postinc2,c
 14715  010804  0E00               	movlw	0
 14716  010806  6EDD               	movwf	postdec2,c
 14717                           
 14718                           ;tcpv4.c: 794: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 14719  010808  EE20 F002          	lfsr	2,2
 14720  01080C  503D               	movf	_currentTCB,w,c
 14721  01080E  26D9               	addwf	fsr2l,f,c
 14722  010810  503E               	movf	_currentTCB+1,w,c
 14723  010812  22DA               	addwfc	fsr2h,f,c
 14724  010814  512A               	movf	_receivedRemoteAddress& (0+255),w,b
 14725  010816  18DE               	xorwf	postinc2,w,c
 14726  010818  E148               	bnz	l11602
 14727  01081A  512B               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 14728  01081C  18DE               	xorwf	postinc2,w,c
 14729  01081E  E145               	bnz	l11602
 14730  010820  512C               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 14731  010822  18DE               	xorwf	postinc2,w,c
 14732  010824  E142               	bnz	l11602
 14733  010826  512D               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 14734  010828  18DE               	xorwf	postinc2,w,c
 14735  01082A  A4D8               	btfss	status,2,c
 14736  01082C  D62F               	goto	l11518
 14737                           
 14738                           ; BSR set to: 2
 14739  01082E  EE20 F006          	lfsr	2,6
 14740  010832  503D               	movf	_currentTCB,w,c
 14741  010834  26D9               	addwf	fsr2l,f,c
 14742  010836  503E               	movf	_currentTCB+1,w,c
 14743  010838  22DA               	addwfc	fsr2h,f,c
 14744  01083A  5159               	movf	_tcpHeader& (0+255),w,b
 14745  01083C  18DE               	xorwf	postinc2,w,c
 14746  01083E  E135               	bnz	l11602
 14747  010840  515A               	movf	(_tcpHeader+1)& (0+255),w,b
 14748  010842  18DE               	xorwf	postinc2,w,c
 14749  010844  A4D8               	btfss	status,2,c
 14750  010846  D622               	goto	l11518
 14751                           
 14752                           ; BSR set to: 2
 14753                           ;tcpv4.c: 795: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 14754  010848  EE20 F010          	lfsr	2,16
 14755  01084C  503D               	movf	_currentTCB,w,c
 14756  01084E  26D9               	addwf	fsr2l,f,c
 14757  010850  503E               	movf	_currentTCB+1,w,c
 14758  010852  22DA               	addwfc	fsr2h,f,c
 14759  010854  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14760  010858  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14761  01085C  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14762  010860  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14763  010864  0E01               	movlw	1
 14764  010866  0100               	movlb	0	; () banked
 14765  010868  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14766  01086A  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14767  01086C  0E00               	movlw	0
 14768  01086E  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14769  010870  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14770  010872  0E00               	movlw	0
 14771  010874  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14772  010876  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14773  010878  0E00               	movlw	0
 14774  01087A  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14775  01087C  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14776  01087E  0102               	movlb	2	; () banked
 14777  010880  5161               	movf	(_tcpHeader+8)& (0+255),w,b
 14778  010882  0100               	movlb	0	; () banked
 14779  010884  19F8               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 14780  010886  E111               	bnz	l11602
 14781  010888  0102               	movlb	2	; () banked
 14782  01088A  5162               	movf	(_tcpHeader+9)& (0+255),w,b
 14783  01088C  0100               	movlb	0	; () banked
 14784  01088E  19F9               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 14785  010890  E10C               	bnz	l11602
 14786  010892  0102               	movlb	2	; () banked
 14787  010894  5163               	movf	(_tcpHeader+10)& (0+255),w,b
 14788  010896  0100               	movlb	0	; () banked
 14789  010898  19FA               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 14790  01089A  E107               	bnz	l11602
 14791  01089C  0102               	movlb	2	; () banked
 14792  01089E  5164               	movf	(_tcpHeader+11)& (0+255),w,b
 14793  0108A0  0100               	movlb	0	; () banked
 14794  0108A2  19FB               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 14795  0108A4  A4D8               	btfss	status,2,c
 14796  0108A6  D5F2               	goto	l11518
 14797  0108A8  D09B               	goto	l11614
 14798  0108AA                     l11602:
 14799  0108AA  D5F0               	goto	l11518
 14800  0108AC                     
 14801                           ;tcpv4.c: 805: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 14802  0108AC  EE20 F002          	lfsr	2,2
 14803  0108B0  503D               	movf	_currentTCB,w,c
 14804  0108B2  26D9               	addwf	fsr2l,f,c
 14805  0108B4  503E               	movf	_currentTCB+1,w,c
 14806  0108B6  22DA               	addwfc	fsr2h,f,c
 14807  0108B8  0102               	movlb	2	; () banked
 14808  0108BA  512A               	movf	_receivedRemoteAddress& (0+255),w,b
 14809  0108BC  18DE               	xorwf	postinc2,w,c
 14810  0108BE  E109               	bnz	u11371
 14811  0108C0  512B               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 14812  0108C2  18DE               	xorwf	postinc2,w,c
 14813  0108C4  E106               	bnz	u11371
 14814  0108C6  512C               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 14815  0108C8  18DE               	xorwf	postinc2,w,c
 14816  0108CA  E103               	bnz	u11371
 14817  0108CC  512D               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 14818  0108CE  18DE               	xorwf	postinc2,w,c
 14819  0108D0  A4D8               	btfss	status,2,c
 14820  0108D2                     u11371:
 14821  0108D2  EFF1  F089         	goto	l1689
 14822                           
 14823                           ; BSR set to: 2
 14824  0108D6  EE20 F006          	lfsr	2,6
 14825  0108DA  503D               	movf	_currentTCB,w,c
 14826  0108DC  26D9               	addwf	fsr2l,f,c
 14827  0108DE  503E               	movf	_currentTCB+1,w,c
 14828  0108E0  22DA               	addwfc	fsr2h,f,c
 14829  0108E2  5159               	movf	_tcpHeader& (0+255),w,b
 14830  0108E4  18DE               	xorwf	postinc2,w,c
 14831  0108E6  E103               	bnz	u11381
 14832  0108E8  515A               	movf	(_tcpHeader+1)& (0+255),w,b
 14833  0108EA  18DE               	xorwf	postinc2,w,c
 14834  0108EC  A4D8               	btfss	status,2,c
 14835  0108EE                     u11381:
 14836  0108EE  EFF1  F089         	goto	l1689
 14837                           
 14838                           ; BSR set to: 2
 14839                           ;tcpv4.c: 806: {
 14840                           ;tcpv4.c: 809: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 14841  0108F2  EE20 F00C          	lfsr	2,12
 14842  0108F6  503D               	movf	_currentTCB,w,c
 14843  0108F8  26D9               	addwf	fsr2l,f,c
 14844  0108FA  503E               	movf	_currentTCB+1,w,c
 14845  0108FC  22DA               	addwfc	fsr2h,f,c
 14846  0108FE  515D               	movf	(_tcpHeader+4)& (0+255),w,b
 14847  010900  18DE               	xorwf	postinc2,w,c
 14848  010902  E109               	bnz	u11391
 14849  010904  515E               	movf	(_tcpHeader+5)& (0+255),w,b
 14850  010906  18DE               	xorwf	postinc2,w,c
 14851  010908  E106               	bnz	u11391
 14852  01090A  515F               	movf	(_tcpHeader+6)& (0+255),w,b
 14853  01090C  18DE               	xorwf	postinc2,w,c
 14854  01090E  E103               	bnz	u11391
 14855  010910  5160               	movf	(_tcpHeader+7)& (0+255),w,b
 14856  010912  18DE               	xorwf	postinc2,w,c
 14857  010914  A4D8               	btfss	status,2,c
 14858  010916                     u11391:
 14859  010916  EFF1  F089         	goto	l1689
 14860                           
 14861                           ; BSR set to: 2
 14862                           ;tcpv4.c: 810: {
 14863                           ;tcpv4.c: 812: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 14864  01091A  EE20 F010          	lfsr	2,16
 14865  01091E  503D               	movf	_currentTCB,w,c
 14866  010920  26D9               	addwf	fsr2l,f,c
 14867  010922  503E               	movf	_currentTCB+1,w,c
 14868  010924  22DA               	addwfc	fsr2h,f,c
 14869  010926  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14870  01092A  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14871  01092E  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14872  010932  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14873  010936  0E01               	movlw	1
 14874  010938  0100               	movlb	0	; () banked
 14875  01093A  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14876  01093C  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14877  01093E  0E00               	movlw	0
 14878  010940  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14879  010942  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14880  010944  0E00               	movlw	0
 14881  010946  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14882  010948  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14883  01094A  0E00               	movlw	0
 14884  01094C  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14885  01094E  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14886  010950  0102               	movlb	2	; () banked
 14887  010952  5161               	movf	(_tcpHeader+8)& (0+255),w,b
 14888  010954  0100               	movlb	0	; () banked
 14889  010956  19F8               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 14890  010958  E10F               	bnz	u11401
 14891  01095A  0102               	movlb	2	; () banked
 14892  01095C  5162               	movf	(_tcpHeader+9)& (0+255),w,b
 14893  01095E  0100               	movlb	0	; () banked
 14894  010960  19F9               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 14895  010962  E10A               	bnz	u11401
 14896  010964  0102               	movlb	2	; () banked
 14897  010966  5163               	movf	(_tcpHeader+10)& (0+255),w,b
 14898  010968  0100               	movlb	0	; () banked
 14899  01096A  19FA               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 14900  01096C  E105               	bnz	u11401
 14901  01096E  0102               	movlb	2	; () banked
 14902  010970  5164               	movf	(_tcpHeader+11)& (0+255),w,b
 14903  010972  0100               	movlb	0	; () banked
 14904  010974  19FB               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 14905  010976  A4D8               	btfss	status,2,c
 14906  010978                     u11401:
 14907  010978  EFF1  F089         	goto	l1689
 14908                           
 14909                           ; BSR set to: 0
 14910                           ;tcpv4.c: 813: {
 14911                           ;tcpv4.c: 814: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 14912  01097C  EE20 F010          	lfsr	2,16
 14913  010980  503D               	movf	_currentTCB,w,c
 14914  010982  26D9               	addwf	fsr2l,f,c
 14915  010984  503E               	movf	_currentTCB+1,w,c
 14916  010986  22DA               	addwfc	fsr2h,f,c
 14917  010988  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14918  01098C  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14919  010990  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14920  010994  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14921  010998  0E01               	movlw	1
 14922  01099A  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14923  01099C  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14924  01099E  0E00               	movlw	0
 14925  0109A0  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14926  0109A2  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14927  0109A4  0E00               	movlw	0
 14928  0109A6  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14929  0109A8  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14930  0109AA  0E00               	movlw	0
 14931  0109AC  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14932  0109AE  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14933  0109B0  EE20 F010          	lfsr	2,16
 14934  0109B4  503D               	movf	_currentTCB,w,c
 14935  0109B6  26D9               	addwf	fsr2l,f,c
 14936  0109B8  503E               	movf	_currentTCB+1,w,c
 14937  0109BA  22DA               	addwfc	fsr2h,f,c
 14938  0109BC  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 14939  0109C0  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 14940  0109C4  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 14941  0109C8  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 14942                           
 14943                           ;tcpv4.c: 816: currentTCB->timeout = 0;
 14944  0109CC  EE20 F033          	lfsr	2,51
 14945  0109D0  503D               	movf	_currentTCB,w,c
 14946  0109D2  26D9               	addwf	fsr2l,f,c
 14947  0109D4  503E               	movf	_currentTCB+1,w,c
 14948  0109D6  22DA               	addwfc	fsr2h,f,c
 14949  0109D8  0E00               	movlw	0
 14950  0109DA  6EDE               	movwf	postinc2,c
 14951  0109DC  0E00               	movlw	0
 14952  0109DE  6EDD               	movwf	postdec2,c
 14953  0109E0                     l11614:
 14954                           
 14955                           ; BSR set to: 0
 14956                           ;tcpv4.c: 818: nextState = ESTABLISHED;
 14957  0109E0  0E04               	movlw	4
 14958  0109E2  0101               	movlb	1	; () banked
 14959  0109E4  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14960  0109E6  D552               	goto	l11518
 14961  0109E8                     
 14962                           ; BSR set to: 1
 14963                           ;tcpv4.c: 826: currentTCB->timeout = 0;
 14964                           
 14965                           ; BSR set to: 1
 14966  0109E8  EE20 F033          	lfsr	2,51
 14967  0109EC  503D               	movf	_currentTCB,w,c
 14968  0109EE  26D9               	addwf	fsr2l,f,c
 14969  0109F0  503E               	movf	_currentTCB+1,w,c
 14970  0109F2  22DA               	addwfc	fsr2h,f,c
 14971  0109F4  0E00               	movlw	0
 14972  0109F6  6EDE               	movwf	postinc2,c
 14973  0109F8  0E00               	movlw	0
 14974  0109FA  6EDD               	movwf	postdec2,c
 14975                           
 14976                           ;tcpv4.c: 828: currentTCB->flags = 0x01U;
 14977  0109FC  EE20 F038          	lfsr	2,56
 14978  010A00  503D               	movf	_currentTCB,w,c
 14979  010A02  26D9               	addwf	fsr2l,f,c
 14980  010A04  503E               	movf	_currentTCB+1,w,c
 14981  010A06  22DA               	addwfc	fsr2h,f,c
 14982  010A08  0E01               	movlw	1
 14983  010A0A  6EDF               	movwf	indf2,c
 14984                           
 14985                           ;tcpv4.c: 829: currentTCB->timeout = ((unsigned long)1*2);
 14986  010A0C  EE20 F033          	lfsr	2,51
 14987  010A10  503D               	movf	_currentTCB,w,c
 14988  010A12  26D9               	addwf	fsr2l,f,c
 14989  010A14  503E               	movf	_currentTCB+1,w,c
 14990  010A16  22DA               	addwfc	fsr2h,f,c
 14991  010A18  0E02               	movlw	2
 14992  010A1A  6EDE               	movwf	postinc2,c
 14993  010A1C  0E00               	movlw	0
 14994  010A1E  6EDD               	movwf	postdec2,c
 14995                           
 14996                           ;tcpv4.c: 830: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 14997  010A20  EE20 F035          	lfsr	2,53
 14998  010A24  503D               	movf	_currentTCB,w,c
 14999  010A26  26D9               	addwf	fsr2l,f,c
 15000  010A28  503E               	movf	_currentTCB+1,w,c
 15001  010A2A  22DA               	addwfc	fsr2h,f,c
 15002  010A2C  0E02               	movlw	2
 15003  010A2E  6EDE               	movwf	postinc2,c
 15004  010A30  0E00               	movlw	0
 15005  010A32  6EDD               	movwf	postdec2,c
 15006                           
 15007                           ;tcpv4.c: 831: currentTCB->timeoutsCount = (5u);
 15008  010A34  EE20 F037          	lfsr	2,55
 15009  010A38  503D               	movf	_currentTCB,w,c
 15010  010A3A  26D9               	addwf	fsr2l,f,c
 15011  010A3C  503E               	movf	_currentTCB+1,w,c
 15012  010A3E  22DA               	addwfc	fsr2h,f,c
 15013  010A40  0E05               	movlw	5
 15014  010A42  6EDF               	movwf	indf2,c
 15015                           
 15016                           ; BSR set to: 1
 15017                           ;tcpv4.c: 833: nextState = FIN_WAIT_1;
 15018  010A44  0E05               	movlw	5
 15019  010A46  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15020                           
 15021                           ; BSR set to: 1
 15022                           ;tcpv4.c: 834: TCP_Snd(currentTCB);
 15023  010A48  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15024  010A4C  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15025  010A50  EC61  F08D         	call	_TCP_Snd	;wreg free
 15026                           
 15027                           ;tcpv4.c: 835: break;
 15028  010A54  EFF1  F089         	goto	l1689
 15029  010A58                     
 15030                           ;tcpv4.c: 837: case RCV_RST:
 15031                           ;tcpv4.c: 840: if (currentTCB->localPort == tcpHeader.destPort)
 15032  010A58  C03D  FFD9         	movff	_currentTCB,fsr2l
 15033  010A5C  C03E  FFDA         	movff	_currentTCB+1,fsr2h
 15034  010A60  0102               	movlb	2	; () banked
 15035  010A62  515B               	movf	(_tcpHeader+2)& (0+255),w,b
 15036  010A64  18DE               	xorwf	postinc2,w,c
 15037  010A66  E103               	bnz	u11411
 15038  010A68  515C               	movf	(_tcpHeader+3)& (0+255),w,b
 15039  010A6A  18DE               	xorwf	postinc2,w,c
 15040  010A6C  A4D8               	btfss	status,2,c
 15041  010A6E                     u11411:
 15042  010A6E  EFF1  F089         	goto	l1689
 15043                           
 15044                           ; BSR set to: 2
 15045                           ;tcpv4.c: 841: {
 15046                           ;tcpv4.c: 842: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 15047  010A72  EE20 F00C          	lfsr	2,12
 15048  010A76  503D               	movf	_currentTCB,w,c
 15049  010A78  26D9               	addwf	fsr2l,f,c
 15050  010A7A  503E               	movf	_currentTCB+1,w,c
 15051  010A7C  22DA               	addwfc	fsr2h,f,c
 15052  010A7E  515D               	movf	(_tcpHeader+4)& (0+255),w,b
 15053  010A80  18DE               	xorwf	postinc2,w,c
 15054  010A82  E109               	bnz	u11421
 15055  010A84  515E               	movf	(_tcpHeader+5)& (0+255),w,b
 15056  010A86  18DE               	xorwf	postinc2,w,c
 15057  010A88  E106               	bnz	u11421
 15058  010A8A  515F               	movf	(_tcpHeader+6)& (0+255),w,b
 15059  010A8C  18DE               	xorwf	postinc2,w,c
 15060  010A8E  E103               	bnz	u11421
 15061  010A90  5160               	movf	(_tcpHeader+7)& (0+255),w,b
 15062  010A92  18DE               	xorwf	postinc2,w,c
 15063  010A94  A4D8               	btfss	status,2,c
 15064  010A96                     u11421:
 15065  010A96  EFF1  F089         	goto	l1689
 15066                           
 15067                           ; BSR set to: 2
 15068                           ;tcpv4.c: 843: {
 15069                           ;tcpv4.c: 844: currentTCB->destIP = 0;
 15070  010A9A  EE20 F002          	lfsr	2,2
 15071  010A9E  503D               	movf	_currentTCB,w,c
 15072  010AA0  26D9               	addwf	fsr2l,f,c
 15073  010AA2  503E               	movf	_currentTCB+1,w,c
 15074  010AA4  22DA               	addwfc	fsr2h,f,c
 15075  010AA6  6ADE               	clrf	postinc2,c
 15076  010AA8  6ADE               	clrf	postinc2,c
 15077  010AAA  6ADE               	clrf	postinc2,c
 15078  010AAC  6ADD               	clrf	postdec2,c
 15079                           
 15080                           ;tcpv4.c: 845: currentTCB->destPort = 0;
 15081  010AAE  EE20 F006          	lfsr	2,6
 15082  010AB2  503D               	movf	_currentTCB,w,c
 15083  010AB4  26D9               	addwf	fsr2l,f,c
 15084  010AB6  503E               	movf	_currentTCB+1,w,c
 15085  010AB8  22DA               	addwfc	fsr2h,f,c
 15086  010ABA  0E00               	movlw	0
 15087  010ABC  6EDE               	movwf	postinc2,c
 15088  010ABE  0E00               	movlw	0
 15089  010AC0  6EDD               	movwf	postdec2,c
 15090                           
 15091                           ;tcpv4.c: 846: currentTCB->localSeqno = 0;
 15092  010AC2  EE20 F010          	lfsr	2,16
 15093  010AC6  503D               	movf	_currentTCB,w,c
 15094  010AC8  26D9               	addwf	fsr2l,f,c
 15095  010ACA  503E               	movf	_currentTCB+1,w,c
 15096  010ACC  22DA               	addwfc	fsr2h,f,c
 15097  010ACE  6ADE               	clrf	postinc2,c
 15098  010AD0  6ADE               	clrf	postinc2,c
 15099  010AD2  6ADE               	clrf	postinc2,c
 15100  010AD4  6ADD               	clrf	postdec2,c
 15101                           
 15102                           ;tcpv4.c: 847: currentTCB->localLastAck = 0;
 15103  010AD6  EE20 F014          	lfsr	2,20
 15104  010ADA  503D               	movf	_currentTCB,w,c
 15105  010ADC  26D9               	addwf	fsr2l,f,c
 15106  010ADE  503E               	movf	_currentTCB+1,w,c
 15107  010AE0  22DA               	addwfc	fsr2h,f,c
 15108  010AE2  6ADE               	clrf	postinc2,c
 15109  010AE4  6ADE               	clrf	postinc2,c
 15110  010AE6  6ADE               	clrf	postinc2,c
 15111  010AE8  6ADD               	clrf	postdec2,c
 15112                           
 15113                           ;tcpv4.c: 848: currentTCB->remoteSeqno = 0;
 15114  010AEA  EE20 F008          	lfsr	2,8
 15115  010AEE  503D               	movf	_currentTCB,w,c
 15116  010AF0  26D9               	addwf	fsr2l,f,c
 15117  010AF2  503E               	movf	_currentTCB+1,w,c
 15118  010AF4  22DA               	addwfc	fsr2h,f,c
 15119  010AF6  6ADE               	clrf	postinc2,c
 15120  010AF8  6ADE               	clrf	postinc2,c
 15121  010AFA  6ADE               	clrf	postinc2,c
 15122  010AFC  6ADD               	clrf	postdec2,c
 15123                           
 15124                           ;tcpv4.c: 849: currentTCB->remoteAck = 0;
 15125  010AFE  EE20 F00C          	lfsr	2,12
 15126  010B02  503D               	movf	_currentTCB,w,c
 15127  010B04  26D9               	addwf	fsr2l,f,c
 15128  010B06  503E               	movf	_currentTCB+1,w,c
 15129  010B08  22DA               	addwfc	fsr2h,f,c
 15130  010B0A  6ADE               	clrf	postinc2,c
 15131  010B0C  6ADE               	clrf	postinc2,c
 15132  010B0E  6ADE               	clrf	postinc2,c
 15133  010B10  6ADD               	clrf	postdec2,c
 15134                           
 15135                           ;tcpv4.c: 850: currentTCB->remoteWnd = 0;
 15136  010B12  EE20 F018          	lfsr	2,24
 15137  010B16  503D               	movf	_currentTCB,w,c
 15138  010B18  26D9               	addwf	fsr2l,f,c
 15139  010B1A  503E               	movf	_currentTCB+1,w,c
 15140  010B1C  22DA               	addwfc	fsr2h,f,c
 15141  010B1E  0E00               	movlw	0
 15142  010B20  6EDE               	movwf	postinc2,c
 15143  010B22  0E00               	movlw	0
 15144  010B24  6EDD               	movwf	postdec2,c
 15145                           
 15146                           ;tcpv4.c: 852: currentTCB->mss = 1460u;
 15147  010B26  EE20 F01C          	lfsr	2,28
 15148  010B2A  503D               	movf	_currentTCB,w,c
 15149  010B2C  26D9               	addwf	fsr2l,f,c
 15150  010B2E  503E               	movf	_currentTCB+1,w,c
 15151  010B30  22DA               	addwfc	fsr2h,f,c
 15152  010B32  0EB4               	movlw	180
 15153  010B34  6EDE               	movwf	postinc2,c
 15154  010B36  0E05               	movlw	5
 15155  010B38  6EDD               	movwf	postdec2,c
 15156                           
 15157                           ; BSR set to: 2
 15158                           ;tcpv4.c: 854: nextState = LISTEN;
 15159  010B3A  0E01               	movlw	1
 15160  010B3C  D32D               	goto	L23
 15161  010B3E                     
 15162                           ; BSR set to: 1
 15163                           ;tcpv4.c: 859: if (currentTCB->timeoutsCount)
 15164                           
 15165                           ; BSR set to: 1
 15166  010B3E  EE20 F037          	lfsr	2,55
 15167  010B42  503D               	movf	_currentTCB,w,c
 15168  010B44  26D9               	addwf	fsr2l,f,c
 15169  010B46  503E               	movf	_currentTCB+1,w,c
 15170  010B48  22DA               	addwfc	fsr2h,f,c
 15171  010B4A  50DF               	movf	indf2,w,c
 15172  010B4C  B4D8               	btfsc	status,2,c
 15173  010B4E  D008               	goto	l1732
 15174                           
 15175                           ; BSR set to: 1
 15176                           ;tcpv4.c: 860: {
 15177                           ;tcpv4.c: 861: TCP_Snd(currentTCB);
 15178  010B50  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15179  010B54  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15180  010B58  EC61  F08D         	call	_TCP_Snd	;wreg free
 15181                           
 15182                           ;tcpv4.c: 862: }
 15183  010B5C  EFF1  F089         	goto	l1689
 15184  010B60                     l1732:
 15185                           
 15186                           ;tcpv4.c: 863: else
 15187                           ;tcpv4.c: 864: {
 15188                           ;tcpv4.c: 866: currentTCB->flags = 0x04U;
 15189  010B60  EE20 F038          	lfsr	2,56
 15190  010B64  503D               	movf	_currentTCB,w,c
 15191  010B66  26D9               	addwf	fsr2l,f,c
 15192  010B68  503E               	movf	_currentTCB+1,w,c
 15193  010B6A  22DA               	addwfc	fsr2h,f,c
 15194  010B6C  0E04               	movlw	4
 15195  010B6E  6EDF               	movwf	indf2,c
 15196                           
 15197                           ;tcpv4.c: 867: if(TCP_Snd(currentTCB))
 15198  010B70  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15199  010B74  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15200  010B78  EC61  F08D         	call	_TCP_Snd	;wreg free
 15201  010B7C  0900               	iorlw	0
 15202  010B7E  B4D8               	btfsc	status,2,c
 15203  010B80  EFF1  F089         	goto	l1689
 15204                           
 15205                           ;tcpv4.c: 868: {
 15206                           ;tcpv4.c: 869: currentTCB->destIP = 0;
 15207  010B84  EE20 F002          	lfsr	2,2
 15208  010B88  503D               	movf	_currentTCB,w,c
 15209  010B8A  26D9               	addwf	fsr2l,f,c
 15210  010B8C  503E               	movf	_currentTCB+1,w,c
 15211  010B8E  22DA               	addwfc	fsr2h,f,c
 15212  010B90  6ADE               	clrf	postinc2,c
 15213  010B92  6ADE               	clrf	postinc2,c
 15214  010B94  6ADE               	clrf	postinc2,c
 15215  010B96  6ADD               	clrf	postdec2,c
 15216                           
 15217                           ;tcpv4.c: 870: currentTCB->destPort = 0;
 15218  010B98  EE20 F006          	lfsr	2,6
 15219  010B9C  503D               	movf	_currentTCB,w,c
 15220  010B9E  26D9               	addwf	fsr2l,f,c
 15221  010BA0  503E               	movf	_currentTCB+1,w,c
 15222  010BA2  22DA               	addwfc	fsr2h,f,c
 15223  010BA4  0E00               	movlw	0
 15224  010BA6  6EDE               	movwf	postinc2,c
 15225  010BA8  0E00               	movlw	0
 15226  010BAA  6EDD               	movwf	postdec2,c
 15227                           
 15228                           ;tcpv4.c: 871: currentTCB->localSeqno = 0;
 15229  010BAC  EE20 F010          	lfsr	2,16
 15230  010BB0  503D               	movf	_currentTCB,w,c
 15231  010BB2  26D9               	addwf	fsr2l,f,c
 15232  010BB4  503E               	movf	_currentTCB+1,w,c
 15233  010BB6  22DA               	addwfc	fsr2h,f,c
 15234  010BB8  6ADE               	clrf	postinc2,c
 15235  010BBA  6ADE               	clrf	postinc2,c
 15236  010BBC  6ADE               	clrf	postinc2,c
 15237  010BBE  6ADD               	clrf	postdec2,c
 15238                           
 15239                           ;tcpv4.c: 872: currentTCB->localLastAck = 0;
 15240  010BC0  EE20 F014          	lfsr	2,20
 15241  010BC4  503D               	movf	_currentTCB,w,c
 15242  010BC6  26D9               	addwf	fsr2l,f,c
 15243  010BC8  503E               	movf	_currentTCB+1,w,c
 15244  010BCA  22DA               	addwfc	fsr2h,f,c
 15245  010BCC  6ADE               	clrf	postinc2,c
 15246  010BCE  6ADE               	clrf	postinc2,c
 15247  010BD0  6ADE               	clrf	postinc2,c
 15248  010BD2  6ADD               	clrf	postdec2,c
 15249                           
 15250                           ;tcpv4.c: 873: currentTCB->remoteSeqno = 0;
 15251  010BD4  EE20 F008          	lfsr	2,8
 15252  010BD8  503D               	movf	_currentTCB,w,c
 15253  010BDA  26D9               	addwf	fsr2l,f,c
 15254  010BDC  503E               	movf	_currentTCB+1,w,c
 15255  010BDE  22DA               	addwfc	fsr2h,f,c
 15256  010BE0  6ADE               	clrf	postinc2,c
 15257  010BE2  6ADE               	clrf	postinc2,c
 15258  010BE4  6ADE               	clrf	postinc2,c
 15259  010BE6  6ADD               	clrf	postdec2,c
 15260                           
 15261                           ;tcpv4.c: 874: currentTCB->remoteAck = 0;
 15262  010BE8  EE20 F00C          	lfsr	2,12
 15263  010BEC  503D               	movf	_currentTCB,w,c
 15264  010BEE  26D9               	addwf	fsr2l,f,c
 15265  010BF0  503E               	movf	_currentTCB+1,w,c
 15266  010BF2  22DA               	addwfc	fsr2h,f,c
 15267  010BF4  6ADE               	clrf	postinc2,c
 15268  010BF6  6ADE               	clrf	postinc2,c
 15269  010BF8  6ADE               	clrf	postinc2,c
 15270  010BFA  6ADD               	clrf	postdec2,c
 15271                           
 15272                           ;tcpv4.c: 875: currentTCB->remoteWnd = 0;
 15273  010BFC  EE20 F018          	lfsr	2,24
 15274  010C00  503D               	movf	_currentTCB,w,c
 15275  010C02  26D9               	addwf	fsr2l,f,c
 15276  010C04  503E               	movf	_currentTCB+1,w,c
 15277  010C06  22DA               	addwfc	fsr2h,f,c
 15278  010C08  0E00               	movlw	0
 15279  010C0A  6EDE               	movwf	postinc2,c
 15280  010C0C  0E00               	movlw	0
 15281  010C0E  6EDD               	movwf	postdec2,c
 15282                           
 15283                           ;tcpv4.c: 877: currentTCB->mss = 1460u;
 15284  010C10  EE20 F01C          	lfsr	2,28
 15285  010C14  503D               	movf	_currentTCB,w,c
 15286  010C16  26D9               	addwf	fsr2l,f,c
 15287  010C18  503E               	movf	_currentTCB+1,w,c
 15288  010C1A  22DA               	addwfc	fsr2h,f,c
 15289  010C1C  0EB4               	movlw	180
 15290  010C1E  6EDE               	movwf	postinc2,c
 15291  010C20  0E05               	movlw	5
 15292  010C22  6EDD               	movwf	postdec2,c
 15293                           
 15294                           ;tcpv4.c: 878: nextState = LISTEN;
 15295  010C24  0E01               	movlw	1
 15296  010C26  D2B8               	goto	L23
 15297  010C28                     
 15298                           ; BSR set to: 1
 15299  010C28  0101               	movlb	1	; () banked
 15300  010C2A  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15301                           
 15302                           ; Switch size 1, requested type "space"
 15303                           ; Number of cases is 6, Range of values is 0 to 12
 15304                           ; switch strategies available:
 15305                           ; Name         Instructions Cycles
 15306                           ; simple_byte           19    10 (average)
 15307                           ;	Chosen strategy is simple_byte
 15308  010C2C  0A00               	xorlw	0	; case 0
 15309  010C2E  B4D8               	btfsc	status,2,c
 15310  010C30  D6DB               	goto	l1726
 15311  010C32  0A04               	xorlw	4	; case 4
 15312  010C34  B4D8               	btfsc	status,2,c
 15313  010C36  D63A               	goto	l1722
 15314  010C38  0A01               	xorlw	1	; case 5
 15315  010C3A  B4D8               	btfsc	status,2,c
 15316  010C3C  D5CE               	goto	l1717
 15317  010C3E  0A0C               	xorlw	12	; case 9
 15318  010C40  B4D8               	btfsc	status,2,c
 15319  010C42  D70A               	goto	l1727
 15320  010C44  0A03               	xorlw	3	; case 10
 15321  010C46  B4D8               	btfsc	status,2,c
 15322  010C48  D707               	goto	l1727
 15323  010C4A  0A06               	xorlw	6	; case 12
 15324  010C4C  B4D8               	btfsc	status,2,c
 15325  010C4E  D777               	goto	l1731
 15326                           
 15327                           ; BSR set to: 1
 15328                           ;tcpv4.c: 886: break;
 15329  010C50  D3C8               	goto	l1689
 15330  010C52                     
 15331                           ; BSR set to: 1
 15332                           ;tcpv4.c: 891: if (currentTCB->destIP == receivedRemoteAddress)
 15333                           
 15334                           ; BSR set to: 1
 15335  010C52  EE20 F002          	lfsr	2,2
 15336  010C56  503D               	movf	_currentTCB,w,c
 15337  010C58  26D9               	addwf	fsr2l,f,c
 15338  010C5A  503E               	movf	_currentTCB+1,w,c
 15339  010C5C  22DA               	addwfc	fsr2h,f,c
 15340  010C5E  0102               	movlb	2	; () banked
 15341  010C60  512A               	movf	_receivedRemoteAddress& (0+255),w,b
 15342  010C62  18DE               	xorwf	postinc2,w,c
 15343  010C64  E109               	bnz	u11451
 15344  010C66  512B               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 15345  010C68  18DE               	xorwf	postinc2,w,c
 15346  010C6A  E106               	bnz	u11451
 15347  010C6C  512C               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 15348  010C6E  18DE               	xorwf	postinc2,w,c
 15349  010C70  E103               	bnz	u11451
 15350  010C72  512D               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 15351  010C74  18DE               	xorwf	postinc2,w,c
 15352  010C76  A4D8               	btfss	status,2,c
 15353  010C78                     u11451:
 15354  010C78  D3B4               	goto	l1689
 15355                           
 15356                           ; BSR set to: 2
 15357                           ;tcpv4.c: 892: {
 15358                           ;tcpv4.c: 896: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 15359  010C7A  EE20 F00C          	lfsr	2,12
 15360  010C7E  503D               	movf	_currentTCB,w,c
 15361  010C80  26D9               	addwf	fsr2l,f,c
 15362  010C82  503E               	movf	_currentTCB+1,w,c
 15363  010C84  22DA               	addwfc	fsr2h,f,c
 15364  010C86  515D               	movf	(_tcpHeader+4)& (0+255),w,b
 15365  010C88  18DE               	xorwf	postinc2,w,c
 15366  010C8A  E109               	bnz	u11461
 15367  010C8C  515E               	movf	(_tcpHeader+5)& (0+255),w,b
 15368  010C8E  18DE               	xorwf	postinc2,w,c
 15369  010C90  E106               	bnz	u11461
 15370  010C92  515F               	movf	(_tcpHeader+6)& (0+255),w,b
 15371  010C94  18DE               	xorwf	postinc2,w,c
 15372  010C96  E103               	bnz	u11461
 15373  010C98  5160               	movf	(_tcpHeader+7)& (0+255),w,b
 15374  010C9A  18DE               	xorwf	postinc2,w,c
 15375  010C9C  A4D8               	btfss	status,2,c
 15376  010C9E                     u11461:
 15377  010C9E  D3A1               	goto	l1689
 15378                           
 15379                           ; BSR set to: 2
 15380                           ;tcpv4.c: 897: {
 15381                           ;tcpv4.c: 901: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 15382  010CA0  EE20 F014          	lfsr	2,20
 15383  010CA4  503D               	movf	_currentTCB,w,c
 15384  010CA6  26D9               	addwf	fsr2l,f,c
 15385  010CA8  503E               	movf	_currentTCB+1,w,c
 15386  010CAA  22DA               	addwfc	fsr2h,f,c
 15387  010CAC  5161               	movf	(_tcpHeader+8)& (0+255),w,b
 15388  010CAE  5CDE               	subwf	postinc2,w,c
 15389  010CB0  5162               	movf	(_tcpHeader+9)& (0+255),w,b
 15390  010CB2  58DE               	subwfb	postinc2,w,c
 15391  010CB4  5163               	movf	(_tcpHeader+10)& (0+255),w,b
 15392  010CB6  58DE               	subwfb	postinc2,w,c
 15393  010CB8  5164               	movf	(_tcpHeader+11)& (0+255),w,b
 15394  010CBA  58DE               	subwfb	postinc2,w,c
 15395  010CBC  B0D8               	btfsc	status,0,c
 15396  010CBE  D391               	goto	l1689
 15397                           
 15398                           ; BSR set to: 2
 15399                           ;tcpv4.c: 902: {
 15400                           ;tcpv4.c: 904: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 15401  010CC0  EE20 F010          	lfsr	2,16
 15402  010CC4  503D               	movf	_currentTCB,w,c
 15403  010CC6  26D9               	addwf	fsr2l,f,c
 15404  010CC8  503E               	movf	_currentTCB+1,w,c
 15405  010CCA  22DA               	addwfc	fsr2h,f,c
 15406  010CCC  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 15407  010CD0  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 15408  010CD4  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 15409  010CD8  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 15410  010CDC  0E01               	movlw	1
 15411  010CDE  0100               	movlb	0	; () banked
 15412  010CE0  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 15413  010CE2  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15414  010CE4  0E00               	movlw	0
 15415  010CE6  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 15416  010CE8  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15417  010CEA  0E00               	movlw	0
 15418  010CEC  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15419  010CEE  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 15420  010CF0  0E00               	movlw	0
 15421  010CF2  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15422  010CF4  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 15423  010CF6  0102               	movlb	2	; () banked
 15424  010CF8  5161               	movf	(_tcpHeader+8)& (0+255),w,b
 15425  010CFA  0100               	movlb	0	; () banked
 15426  010CFC  5DF8               	subwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 15427  010CFE  0102               	movlb	2	; () banked
 15428  010D00  5162               	movf	(_tcpHeader+9)& (0+255),w,b
 15429  010D02  0100               	movlb	0	; () banked
 15430  010D04  59F9               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 15431  010D06  0102               	movlb	2	; () banked
 15432  010D08  5163               	movf	(_tcpHeader+10)& (0+255),w,b
 15433  010D0A  0100               	movlb	0	; () banked
 15434  010D0C  59FA               	subwfb	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 15435  010D0E  0102               	movlb	2	; () banked
 15436  010D10  5164               	movf	(_tcpHeader+11)& (0+255),w,b
 15437  010D12  0100               	movlb	0	; () banked
 15438  010D14  59FB               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 15439  010D16  A0D8               	btfss	status,0,c
 15440  010D18  D364               	goto	l1689
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;tcpv4.c: 905: {
 15444                           ;tcpv4.c: 906: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 15445  010D1A  EE20 F010          	lfsr	2,16
 15446  010D1E  503D               	movf	_currentTCB,w,c
 15447  010D20  26D9               	addwf	fsr2l,f,c
 15448  010D22  503E               	movf	_currentTCB+1,w,c
 15449  010D24  22DA               	addwfc	fsr2h,f,c
 15450  010D26  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 15451  010D2A  CFDD F0F5          	movff	postdec2,??_TCP_FiniteStateMachine+1
 15452  010D2E  EE22  F061         	lfsr	2,_tcpHeader+8
 15453  010D32  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 15454  010D36  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 15455  010D3A  1FF6               	comf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 15456  010D3C  1FF7               	comf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 15457  010D3E  4BF6               	infsnz	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 15458  010D40  2BF7               	incf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 15459  010D42  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 15460  010D44  25F6               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15461  010D46  0101               	movlb	1	; () banked
 15462  010D48  6F01               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 15463  010D4A  0100               	movlb	0	; () banked
 15464  010D4C  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 15465  010D4E  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15466  010D50  0101               	movlb	1	; () banked
 15467  010D52  6F02               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 15468                           
 15469                           ;tcpv4.c: 909: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 15470  010D54  C101  F0F4         	movff	TCP_FiniteStateMachine@notAckBytes,??_TCP_FiniteStateMachine
 15471  010D58  C102  F0F5         	movff	TCP_FiniteStateMachine@notAckBytes+1,??_TCP_FiniteStateMachine+1
 15472  010D5C  0100               	movlb	0	; () banked
 15473  010D5E  1FF4               	comf	??_TCP_FiniteStateMachine& (0+255),f,b
 15474  010D60  1FF5               	comf	(??_TCP_FiniteStateMachine+1)& (0+255),f,b
 15475  010D62  4BF4               	infsnz	??_TCP_FiniteStateMachine& (0+255),f,b
 15476  010D64  2BF5               	incf	(??_TCP_FiniteStateMachine+1)& (0+255),f,b
 15477  010D66  EE20 F025          	lfsr	2,37
 15478  010D6A  503D               	movf	_currentTCB,w,c
 15479  010D6C  26D9               	addwf	fsr2l,f,c
 15480  010D6E  503E               	movf	_currentTCB+1,w,c
 15481  010D70  22DA               	addwfc	fsr2h,f,c
 15482  010D72  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 15483  010D76  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 15484  010D7A  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 15485  010D7C  27F6               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 15486  010D7E  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 15487  010D80  23F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 15488  010D82  EE20 F025          	lfsr	2,37
 15489  010D86  503D               	movf	_currentTCB,w,c
 15490  010D88  26D9               	addwf	fsr2l,f,c
 15491  010D8A  503E               	movf	_currentTCB+1,w,c
 15492  010D8C  22DA               	addwfc	fsr2h,f,c
 15493  010D8E  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 15494  010D92  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 15495                           
 15496                           ;tcpv4.c: 910: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 15497  010D96  EE20 F027          	lfsr	2,39
 15498  010D9A  503D               	movf	_currentTCB,w,c
 15499  010D9C  26D9               	addwf	fsr2l,f,c
 15500  010D9E  503E               	movf	_currentTCB+1,w,c
 15501  010DA0  22DA               	addwfc	fsr2h,f,c
 15502  010DA2  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 15503  010DA6  CFDD F0F5          	movff	postdec2,??_TCP_FiniteStateMachine+1
 15504  010DAA  0101               	movlb	1	; () banked
 15505  010DAC  5101               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 15506  010DAE  0100               	movlb	0	; () banked
 15507  010DB0  27F4               	addwf	??_TCP_FiniteStateMachine& (0+255),f,b
 15508  010DB2  0101               	movlb	1	; () banked
 15509  010DB4  5102               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 15510  010DB6  0100               	movlb	0	; () banked
 15511  010DB8  23F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),f,b
 15512  010DBA  EE20 F027          	lfsr	2,39
 15513  010DBE  503D               	movf	_currentTCB,w,c
 15514  010DC0  26D9               	addwf	fsr2l,f,c
 15515  010DC2  503E               	movf	_currentTCB+1,w,c
 15516  010DC4  22DA               	addwfc	fsr2h,f,c
 15517  010DC6  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 15518  010DCA  C0F5  FFDD         	movff	??_TCP_FiniteStateMachine+1,postdec2
 15519                           
 15520                           ;tcpv4.c: 912: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 15521  010DCE  EE22  F061         	lfsr	2,_tcpHeader+8
 15522  010DD2  0EFF               	movlw	255
 15523  010DD4  24DE               	addwf	postinc2,w,c
 15524  010DD6  6FF4               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15525  010DD8  0EFF               	movlw	255
 15526  010DDA  20DE               	addwfc	postinc2,w,c
 15527  010DDC  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15528  010DDE  0EFF               	movlw	255
 15529  010DE0  20DE               	addwfc	postinc2,w,c
 15530  010DE2  6FF6               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 15531  010DE4  0EFF               	movlw	255
 15532  010DE6  20DE               	addwfc	postinc2,w,c
 15533  010DE8  6FF7               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15534  010DEA  EE20 F014          	lfsr	2,20
 15535  010DEE  503D               	movf	_currentTCB,w,c
 15536  010DF0  26D9               	addwf	fsr2l,f,c
 15537  010DF2  503E               	movf	_currentTCB+1,w,c
 15538  010DF4  22DA               	addwfc	fsr2h,f,c
 15539  010DF6  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 15540  010DFA  C0F5  FFDE         	movff	??_TCP_FiniteStateMachine+1,postinc2
 15541  010DFE  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 15542  010E02  C0F7  FFDE         	movff	??_TCP_FiniteStateMachine+3,postinc2
 15543                           
 15544                           ; BSR set to: 0
 15545                           ;tcpv4.c: 913: currentTCB->localSeqno = tcpHeader.ackNumber;
 15546  010E06  EE22  F061         	lfsr	2,_tcpHeader+8
 15547  010E0A  EE10 F010          	lfsr	1,16
 15548  010E0E  503D               	movf	_currentTCB,w,c
 15549  010E10  26E1               	addwf	fsr1l,f,c
 15550  010E12  503E               	movf	_currentTCB+1,w,c
 15551  010E14  22E2               	addwfc	fsr1h,f,c
 15552  010E16  CFDE FFE6          	movff	postinc2,postinc1
 15553  010E1A  CFDE FFE6          	movff	postinc2,postinc1
 15554  010E1E  CFDE FFE6          	movff	postinc2,postinc1
 15555  010E22  CFDE FFE6          	movff	postinc2,postinc1
 15556                           
 15557                           ; BSR set to: 0
 15558                           ;tcpv4.c: 916: if(currentTCB->bytesToSend == 0)
 15559  010E26  EE20 F027          	lfsr	2,39
 15560  010E2A  503D               	movf	_currentTCB,w,c
 15561  010E2C  26D9               	addwf	fsr2l,f,c
 15562  010E2E  503E               	movf	_currentTCB+1,w,c
 15563  010E30  22DA               	addwfc	fsr2h,f,c
 15564  010E32  50DE               	movf	postinc2,w,c
 15565  010E34  10DE               	iorwf	postinc2,w,c
 15566  010E36  A4D8               	btfss	status,2,c
 15567  010E38  D01D               	goto	l1743
 15568                           
 15569                           ; BSR set to: 0
 15570                           ;tcpv4.c: 917: {
 15571                           ;tcpv4.c: 918: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 15572  010E3A  EE20 F029          	lfsr	2,41
 15573  010E3E  503D               	movf	_currentTCB,w,c
 15574  010E40  26D9               	addwf	fsr2l,f,c
 15575  010E42  503E               	movf	_currentTCB+1,w,c
 15576  010E44  22DA               	addwfc	fsr2h,f,c
 15577  010E46  0E02               	movlw	2
 15578  010E48  18DE               	xorwf	postinc2,w,c
 15579  010E4A  A4D8               	btfss	status,2,c
 15580  010E4C  D029               	goto	l1745
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;tcpv4.c: 919: {
 15584                           ;tcpv4.c: 920: currentTCB->txBufState = NO_BUFF;
 15585  010E4E  EE20 F029          	lfsr	2,41
 15586  010E52  503D               	movf	_currentTCB,w,c
 15587  010E54  26D9               	addwf	fsr2l,f,c
 15588  010E56  503E               	movf	_currentTCB+1,w,c
 15589  010E58  22DA               	addwfc	fsr2h,f,c
 15590  010E5A  0E00               	movlw	0
 15591  010E5C  6EDF               	movwf	indf2,c
 15592                           
 15593                           ;tcpv4.c: 922: currentTCB->timeout = 0;
 15594  010E5E  EE20 F033          	lfsr	2,51
 15595  010E62  503D               	movf	_currentTCB,w,c
 15596  010E64  26D9               	addwf	fsr2l,f,c
 15597  010E66  503E               	movf	_currentTCB+1,w,c
 15598  010E68  22DA               	addwfc	fsr2h,f,c
 15599  010E6A  0E00               	movlw	0
 15600  010E6C  6EDE               	movwf	postinc2,c
 15601  010E6E  0E00               	movlw	0
 15602  010E70  6EDD               	movwf	postdec2,c
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;tcpv4.c: 923: }
 15606                           ;tcpv4.c: 924: }
 15607  010E72  D016               	goto	l1745
 15608  010E74                     l1743:
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;tcpv4.c: 925: else
 15612                           ;tcpv4.c: 926: {
 15613                           ;tcpv4.c: 927: currentTCB->bytesSent = currentTCB->bytesToSend;
 15614                           
 15615                           ; BSR set to: 0
 15616  010E74  EE20 F027          	lfsr	2,39
 15617  010E78  503D               	movf	_currentTCB,w,c
 15618  010E7A  26D9               	addwf	fsr2l,f,c
 15619  010E7C  503E               	movf	_currentTCB+1,w,c
 15620  010E7E  22DA               	addwfc	fsr2h,f,c
 15621  010E80  EE10 F02A          	lfsr	1,42
 15622  010E84  503D               	movf	_currentTCB,w,c
 15623  010E86  26E1               	addwf	fsr1l,f,c
 15624  010E88  503E               	movf	_currentTCB+1,w,c
 15625  010E8A  22E2               	addwfc	fsr1h,f,c
 15626  010E8C  CFDE FFE6          	movff	postinc2,postinc1
 15627  010E90  CFDD FFE5          	movff	postdec2,postdec1
 15628                           
 15629                           ; BSR set to: 0
 15630                           ;tcpv4.c: 928: TCP_Snd(currentTCB);
 15631  010E94  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15632  010E98  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15633  010E9C  EC61  F08D         	call	_TCP_Snd	;wreg free
 15634  010EA0                     l1745:
 15635                           
 15636                           ;tcpv4.c: 929: }
 15637                           ;tcpv4.c: 933: if(rcvPayloadLen > 0)
 15638  010EA0  0102               	movlb	2	; () banked
 15639  010EA2  5148               	movf	_rcvPayloadLen& (0+255),w,b
 15640  010EA4  1149               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 15641  010EA6  B4D8               	btfsc	status,2,c
 15642  010EA8  D29C               	goto	l1689
 15643                           
 15644                           ; BSR set to: 2
 15645                           ;tcpv4.c: 934: {
 15646                           ;tcpv4.c: 935: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15647  010EAA  EE22  F05D         	lfsr	2,_tcpHeader+4
 15648  010EAE  EE10 F008          	lfsr	1,8
 15649  010EB2  503D               	movf	_currentTCB,w,c
 15650  010EB4  26E1               	addwf	fsr1l,f,c
 15651  010EB6  503E               	movf	_currentTCB+1,w,c
 15652  010EB8  22E2               	addwfc	fsr1h,f,c
 15653  010EBA  CFDE FFE6          	movff	postinc2,postinc1
 15654  010EBE  CFDE FFE6          	movff	postinc2,postinc1
 15655  010EC2  CFDE FFE6          	movff	postinc2,postinc1
 15656  010EC6  CFDE FFE6          	movff	postinc2,postinc1
 15657                           
 15658                           ; BSR set to: 2
 15659                           ;tcpv4.c: 938: TCP_PayloadSave(rcvPayloadLen);
 15660  010ECA  C248  F0E7         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 15661  010ECE  C249  F0E8         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 15662  010ED2  EC16  F0A7         	call	_TCP_PayloadSave	;wreg free
 15663                           
 15664                           ;tcpv4.c: 944: }
 15665                           ;tcpv4.c: 945: }
 15666                           ;tcpv4.c: 946: }
 15667                           ;tcpv4.c: 947: }
 15668                           ;tcpv4.c: 948: break;
 15669                           
 15670                           ;tcpv4.c: 941: {
 15671                           
 15672                           ;tcpv4.c: 939: }
 15673                           ;tcpv4.c: 940: }else
 15674  010ED6  D285               	goto	l1689
 15675  010ED8                     
 15676                           ;tcpv4.c: 950: currentTCB->flags = 0x01U;
 15677  010ED8  EE20 F038          	lfsr	2,56
 15678  010EDC  503D               	movf	_currentTCB,w,c
 15679  010EDE  26D9               	addwf	fsr2l,f,c
 15680  010EE0  503E               	movf	_currentTCB+1,w,c
 15681  010EE2  22DA               	addwfc	fsr2h,f,c
 15682  010EE4  0E01               	movlw	1
 15683  010EE6  6EDF               	movwf	indf2,c
 15684                           
 15685                           ;tcpv4.c: 951: nextState = FIN_WAIT_1;
 15686  010EE8  0E05               	movlw	5
 15687  010EEA  0101               	movlb	1	; () banked
 15688  010EEC  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;tcpv4.c: 952: TCP_Snd(currentTCB);
 15692  010EEE  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15693  010EF2  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15694  010EF6  EC61  F08D         	call	_TCP_Snd	;wreg free
 15695                           
 15696                           ;tcpv4.c: 955: break;
 15697                           
 15698                           ;tcpv4.c: 954: case RCV_FIN:
 15699                           
 15700                           ;tcpv4.c: 953: break;
 15701  010EFA  D273               	goto	l1689
 15702  010EFC                     
 15703                           ;tcpv4.c: 957: currentTCB->bytesSent = 0;
 15704  010EFC  EE20 F02A          	lfsr	2,42
 15705  010F00  503D               	movf	_currentTCB,w,c
 15706  010F02  26D9               	addwf	fsr2l,f,c
 15707  010F04  503E               	movf	_currentTCB+1,w,c
 15708  010F06  22DA               	addwfc	fsr2h,f,c
 15709  010F08  0E00               	movlw	0
 15710  010F0A  6EDE               	movwf	postinc2,c
 15711  010F0C  0E00               	movlw	0
 15712  010F0E  6EDD               	movwf	postdec2,c
 15713                           
 15714                           ;tcpv4.c: 960: currentTCB->localSeqno = tcpHeader.ackNumber;
 15715  010F10  EE22  F061         	lfsr	2,_tcpHeader+8
 15716  010F14  EE10 F010          	lfsr	1,16
 15717  010F18  503D               	movf	_currentTCB,w,c
 15718  010F1A  26E1               	addwf	fsr1l,f,c
 15719  010F1C  503E               	movf	_currentTCB+1,w,c
 15720  010F1E  22E2               	addwfc	fsr1h,f,c
 15721  010F20  CFDE FFE6          	movff	postinc2,postinc1
 15722  010F24  CFDE FFE6          	movff	postinc2,postinc1
 15723  010F28  CFDE FFE6          	movff	postinc2,postinc1
 15724  010F2C  CFDE FFE6          	movff	postinc2,postinc1
 15725                           
 15726                           ;tcpv4.c: 961: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 15727  010F30  EE20 F00C          	lfsr	2,12
 15728  010F34  503D               	movf	_currentTCB,w,c
 15729  010F36  26D9               	addwf	fsr2l,f,c
 15730  010F38  503E               	movf	_currentTCB+1,w,c
 15731  010F3A  22DA               	addwfc	fsr2h,f,c
 15732  010F3C  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 15733  010F40  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 15734  010F44  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 15735  010F48  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 15736  010F4C  0E01               	movlw	1
 15737  010F4E  0100               	movlb	0	; () banked
 15738  010F50  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 15739  010F52  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15740  010F54  0E00               	movlw	0
 15741  010F56  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 15742  010F58  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15743  010F5A  0E00               	movlw	0
 15744  010F5C  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15745  010F5E  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 15746  010F60  0E00               	movlw	0
 15747  010F62  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15748  010F64  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 15749  010F66  EE20 F00C          	lfsr	2,12
 15750  010F6A  503D               	movf	_currentTCB,w,c
 15751  010F6C  26D9               	addwf	fsr2l,f,c
 15752  010F6E  503E               	movf	_currentTCB+1,w,c
 15753  010F70  22DA               	addwfc	fsr2h,f,c
 15754  010F72  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 15755  010F76  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 15756  010F7A  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 15757  010F7E  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 15758                           
 15759                           ; BSR set to: 0
 15760                           ;tcpv4.c: 963: currentTCB->socketState = SOCKET_CLOSING;
 15761  010F82  EE20 F039          	lfsr	2,57
 15762  010F86  503D               	movf	_currentTCB,w,c
 15763  010F88  26D9               	addwf	fsr2l,f,c
 15764  010F8A  503E               	movf	_currentTCB+1,w,c
 15765  010F8C  22DA               	addwfc	fsr2h,f,c
 15766  010F8E  0E04               	movlw	4
 15767  010F90  6EDF               	movwf	indf2,c
 15768                           
 15769                           ; BSR set to: 0
 15770                           ;tcpv4.c: 964: currentTCB->timeout = ((unsigned long)1*2);
 15771  010F92  EE20 F033          	lfsr	2,51
 15772  010F96  503D               	movf	_currentTCB,w,c
 15773  010F98  26D9               	addwf	fsr2l,f,c
 15774  010F9A  503E               	movf	_currentTCB+1,w,c
 15775  010F9C  22DA               	addwfc	fsr2h,f,c
 15776  010F9E  0E02               	movlw	2
 15777  010FA0  6EDE               	movwf	postinc2,c
 15778  010FA2  0E00               	movlw	0
 15779  010FA4  6EDD               	movwf	postdec2,c
 15780                           
 15781                           ; BSR set to: 0
 15782                           ;tcpv4.c: 965: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 15783  010FA6  EE20 F035          	lfsr	2,53
 15784  010FAA  503D               	movf	_currentTCB,w,c
 15785  010FAC  26D9               	addwf	fsr2l,f,c
 15786  010FAE  503E               	movf	_currentTCB+1,w,c
 15787  010FB0  22DA               	addwfc	fsr2h,f,c
 15788  010FB2  0E02               	movlw	2
 15789  010FB4  6EDE               	movwf	postinc2,c
 15790  010FB6  0E00               	movlw	0
 15791  010FB8  6EDD               	movwf	postdec2,c
 15792                           
 15793                           ; BSR set to: 0
 15794                           ;tcpv4.c: 966: currentTCB->timeoutsCount = (5u);
 15795  010FBA  EE20 F037          	lfsr	2,55
 15796  010FBE  503D               	movf	_currentTCB,w,c
 15797  010FC0  26D9               	addwf	fsr2l,f,c
 15798  010FC2  503E               	movf	_currentTCB+1,w,c
 15799  010FC4  22DA               	addwfc	fsr2h,f,c
 15800  010FC6  0E05               	movlw	5
 15801  010FC8  6EDF               	movwf	indf2,c
 15802                           
 15803                           ; BSR set to: 0
 15804                           ;tcpv4.c: 968: currentTCB->flags = 0x01U | 0x10U;
 15805  010FCA  EE20 F038          	lfsr	2,56
 15806  010FCE  503D               	movf	_currentTCB,w,c
 15807  010FD0  26D9               	addwf	fsr2l,f,c
 15808  010FD2  503E               	movf	_currentTCB+1,w,c
 15809  010FD4  22DA               	addwfc	fsr2h,f,c
 15810  010FD6  0E11               	movlw	17
 15811  010FD8  6EDF               	movwf	indf2,c
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;tcpv4.c: 970: nextState = LAST_ACK;
 15815  010FDA  0E09               	movlw	9
 15816  010FDC  0101               	movlb	1	; () banked
 15817  010FDE  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15818                           
 15819                           ; BSR set to: 1
 15820                           ;tcpv4.c: 971: TCP_Snd(currentTCB);
 15821  010FE0  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15822  010FE4  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15823  010FE8  EC61  F08D         	call	_TCP_Snd	;wreg free
 15824                           
 15825                           ;tcpv4.c: 972: break;
 15826  010FEC  D1FA               	goto	l1689
 15827  010FEE                     
 15828                           ;tcpv4.c: 974: case RCV_RSTACK:
 15829                           ;tcpv4.c: 975: currentTCB->flags = 0x04U;
 15830  010FEE  EE20 F038          	lfsr	2,56
 15831  010FF2  503D               	movf	_currentTCB,w,c
 15832  010FF4  26D9               	addwf	fsr2l,f,c
 15833  010FF6  503E               	movf	_currentTCB+1,w,c
 15834  010FF8  22DA               	addwfc	fsr2h,f,c
 15835  010FFA  0E04               	movlw	4
 15836  010FFC  6EDF               	movwf	indf2,c
 15837                           
 15838                           ;tcpv4.c: 976: TCP_Snd(currentTCB);
 15839  010FFE  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15840  011002  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15841  011006  EC61  F08D         	call	_TCP_Snd	;wreg free
 15842                           
 15843                           ;tcpv4.c: 977: nextState = CLOSED;
 15844  01100A  0E00               	movlw	0
 15845  01100C  0101               	movlb	1	; () banked
 15846  01100E  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15847                           
 15848                           ; BSR set to: 1
 15849                           ;tcpv4.c: 978: TCB_Reset(currentTCB);
 15850  011010  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 15851  011014  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 15852  011018  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 15853                           
 15854                           ;tcpv4.c: 979: break;
 15855  01101C  D1E2               	goto	l1689
 15856  01101E                     
 15857                           ;tcpv4.c: 981: if (currentTCB->timeoutsCount)
 15858  01101E  EE20 F037          	lfsr	2,55
 15859  011022  503D               	movf	_currentTCB,w,c
 15860  011024  26D9               	addwf	fsr2l,f,c
 15861  011026  503E               	movf	_currentTCB+1,w,c
 15862  011028  22DA               	addwfc	fsr2h,f,c
 15863  01102A  50DF               	movf	indf2,w,c
 15864  01102C  B4D8               	btfsc	status,2,c
 15865  01102E  D007               	goto	l1755
 15866                           
 15867                           ;tcpv4.c: 982: {
 15868                           ;tcpv4.c: 983: TCP_Snd(currentTCB);
 15869  011030  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15870  011034  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15871  011038  EC61  F08D         	call	_TCP_Snd	;wreg free
 15872                           
 15873                           ;tcpv4.c: 984: }else
 15874  01103C  D1D2               	goto	l1689
 15875  01103E                     l1755:
 15876                           
 15877                           ;tcpv4.c: 985: {
 15878                           ;tcpv4.c: 987: currentTCB->flags = 0x04U;
 15879  01103E  EE20 F038          	lfsr	2,56
 15880  011042  503D               	movf	_currentTCB,w,c
 15881  011044  26D9               	addwf	fsr2l,f,c
 15882  011046  503E               	movf	_currentTCB+1,w,c
 15883  011048  22DA               	addwfc	fsr2h,f,c
 15884  01104A  0E04               	movlw	4
 15885  01104C  6EDF               	movwf	indf2,c
 15886                           
 15887                           ;tcpv4.c: 988: if(TCP_Snd(currentTCB))
 15888  01104E  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15889  011052  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15890  011056  EC61  F08D         	call	_TCP_Snd	;wreg free
 15891  01105A  0900               	iorlw	0
 15892  01105C  B4D8               	btfsc	status,2,c
 15893  01105E  D1C1               	goto	l1689
 15894                           
 15895                           ;tcpv4.c: 989: {
 15896                           ;tcpv4.c: 990: nextState = CLOSE;
 15897  011060  0E00               	movlw	0
 15898  011062  0101               	movlb	1	; () banked
 15899  011064  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15900                           
 15901                           ; BSR set to: 1
 15902                           ;tcpv4.c: 991: TCB_Reset(currentTCB);
 15903  011066  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 15904  01106A  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 15905  01106E  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 15906                           
 15907                           ;tcpv4.c: 997: }
 15908                           
 15909                           ;tcpv4.c: 996: break;
 15910                           
 15911                           ;tcpv4.c: 995: default:
 15912                           
 15913                           ;tcpv4.c: 992: }
 15914                           ;tcpv4.c: 993: }
 15915                           ;tcpv4.c: 994: break;
 15916  011072  D1B7               	goto	l1689
 15917  011074  0101               	movlb	1	; () banked
 15918  011076  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15919                           
 15920                           ; Switch size 1, requested type "space"
 15921                           ; Number of cases is 7, Range of values is 0 to 12
 15922                           ; switch strategies available:
 15923                           ; Name         Instructions Cycles
 15924                           ; simple_byte           22    12 (average)
 15925                           ;	Chosen strategy is simple_byte
 15926  011078  0A00               	xorlw	0	; case 0
 15927  01107A  B4D8               	btfsc	status,2,c
 15928  01107C  D72D               	goto	l1749
 15929  01107E  0A04               	xorlw	4	; case 4
 15930  011080  B4D8               	btfsc	status,2,c
 15931  011082  D5E7               	goto	l1738
 15932  011084  0A02               	xorlw	2	; case 6
 15933  011086  B4D8               	btfsc	status,2,c
 15934  011088  D1AC               	goto	l1689
 15935  01108A  0A01               	xorlw	1	; case 7
 15936  01108C  B4D8               	btfsc	status,2,c
 15937  01108E  D736               	goto	l1751
 15938  011090  0A0E               	xorlw	14	; case 9
 15939  011092  B4D8               	btfsc	status,2,c
 15940  011094  D7AC               	goto	l1752
 15941  011096  0A03               	xorlw	3	; case 10
 15942  011098  B4D8               	btfsc	status,2,c
 15943  01109A  D7A9               	goto	l1752
 15944  01109C  0A06               	xorlw	6	; case 12
 15945  01109E  B4D8               	btfsc	status,2,c
 15946  0110A0  D7BE               	goto	l1754
 15947                           
 15948                           ; BSR set to: 1
 15949                           ;tcpv4.c: 998: break;
 15950  0110A2  D19F               	goto	l1689
 15951  0110A4                     
 15952                           ; BSR set to: 1
 15953                           ;tcpv4.c: 1003: currentTCB->flags = 0x10U;
 15954                           
 15955                           ; BSR set to: 1
 15956  0110A4  EE20 F038          	lfsr	2,56
 15957  0110A8  503D               	movf	_currentTCB,w,c
 15958  0110AA  26D9               	addwf	fsr2l,f,c
 15959  0110AC  503E               	movf	_currentTCB+1,w,c
 15960  0110AE  22DA               	addwfc	fsr2h,f,c
 15961  0110B0  0E10               	movlw	16
 15962  0110B2  6EDF               	movwf	indf2,c
 15963                           
 15964                           ; BSR set to: 1
 15965                           ;tcpv4.c: 1004: if(TCP_Snd(currentTCB))
 15966  0110B4  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15967  0110B8  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15968  0110BC  EC61  F08D         	call	_TCP_Snd	;wreg free
 15969  0110C0  0900               	iorlw	0
 15970  0110C2  B4D8               	btfsc	status,2,c
 15971  0110C4  D18E               	goto	l1689
 15972                           
 15973                           ;tcpv4.c: 1005: {
 15974                           ;tcpv4.c: 1006: nextState = CLOSING;
 15975  0110C6  0E08               	movlw	8
 15976  0110C8  D067               	goto	L23
 15977  0110CA                     
 15978                           ; BSR set to: 1
 15979                           ;tcpv4.c: 1011: currentTCB->timeout = ((unsigned long)1*2);
 15980                           
 15981                           ; BSR set to: 1
 15982  0110CA  EE20 F033          	lfsr	2,51
 15983  0110CE  503D               	movf	_currentTCB,w,c
 15984  0110D0  26D9               	addwf	fsr2l,f,c
 15985  0110D2  503E               	movf	_currentTCB+1,w,c
 15986  0110D4  22DA               	addwfc	fsr2h,f,c
 15987  0110D6  0E02               	movlw	2
 15988  0110D8  6EDE               	movwf	postinc2,c
 15989  0110DA  0E00               	movlw	0
 15990  0110DC  6EDD               	movwf	postdec2,c
 15991                           
 15992                           ;tcpv4.c: 1012: currentTCB->timeoutsCount = 1;
 15993  0110DE  EE20 F037          	lfsr	2,55
 15994  0110E2  503D               	movf	_currentTCB,w,c
 15995  0110E4  26D9               	addwf	fsr2l,f,c
 15996  0110E6  503E               	movf	_currentTCB+1,w,c
 15997  0110E8  22DA               	addwfc	fsr2h,f,c
 15998  0110EA  0E01               	movlw	1
 15999  0110EC  6EDF               	movwf	indf2,c
 16000                           
 16001                           ; BSR set to: 1
 16002                           ;tcpv4.c: 1013: nextState = FIN_WAIT_2;
 16003  0110EE  0E06               	movlw	6
 16004  0110F0  D08A               	goto	L15
 16005  0110F2                     
 16006                           ; BSR set to: 1
 16007                           ;tcpv4.c: 1016: currentTCB->flags = 0x10U;
 16008                           
 16009                           ; BSR set to: 1
 16010  0110F2  EE20 F038          	lfsr	2,56
 16011  0110F6  503D               	movf	_currentTCB,w,c
 16012  0110F8  26D9               	addwf	fsr2l,f,c
 16013  0110FA  503E               	movf	_currentTCB+1,w,c
 16014  0110FC  22DA               	addwfc	fsr2h,f,c
 16015  0110FE  0E10               	movlw	16
 16016  011100  6EDF               	movwf	indf2,c
 16017                           
 16018                           ; BSR set to: 1
 16019                           ;tcpv4.c: 1017: if(TCP_Snd(currentTCB))
 16020  011102  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16021  011106  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16022  01110A  EC61  F08D         	call	_TCP_Snd	;wreg free
 16023  01110E  D040               	goto	L17
 16024  011110                     
 16025                           ; BSR set to: 1
 16026                           ;tcpv4.c: 1023: if (currentTCB->timeoutsCount)
 16027                           
 16028                           ; BSR set to: 1
 16029  011110  EE20 F037          	lfsr	2,55
 16030  011114  503D               	movf	_currentTCB,w,c
 16031  011116  26D9               	addwf	fsr2l,f,c
 16032  011118  503E               	movf	_currentTCB+1,w,c
 16033  01111A  22DA               	addwfc	fsr2h,f,c
 16034  01111C  50DF               	movf	indf2,w,c
 16035  01111E  B4D8               	btfsc	status,2,c
 16036  011120  D007               	goto	l1768
 16037                           
 16038                           ; BSR set to: 1
 16039                           ;tcpv4.c: 1024: {
 16040                           ;tcpv4.c: 1025: TCP_Snd(currentTCB);
 16041  011122  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16042  011126  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16043  01112A  EC61  F08D         	call	_TCP_Snd	;wreg free
 16044                           
 16045                           ;tcpv4.c: 1026: }else
 16046  01112E  D159               	goto	l1689
 16047  011130                     l1768:
 16048                           
 16049                           ;tcpv4.c: 1027: {
 16050                           ;tcpv4.c: 1029: currentTCB->flags = 0x04U;
 16051  011130  EE20 F038          	lfsr	2,56
 16052  011134  503D               	movf	_currentTCB,w,c
 16053  011136  26D9               	addwf	fsr2l,f,c
 16054  011138  503E               	movf	_currentTCB+1,w,c
 16055  01113A  22DA               	addwfc	fsr2h,f,c
 16056  01113C  0E04               	movlw	4
 16057  01113E  6EDF               	movwf	indf2,c
 16058                           
 16059                           ;tcpv4.c: 1030: if(TCP_Snd(currentTCB))
 16060  011140  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16061  011144  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16062  011148  EC61  F08D         	call	_TCP_Snd	;wreg free
 16063  01114C  0900               	iorlw	0
 16064  01114E  B4D8               	btfsc	status,2,c
 16065  011150  D148               	goto	l1689
 16066                           
 16067                           ;tcpv4.c: 1031: {
 16068                           ;tcpv4.c: 1032: nextState = CLOSE;
 16069  011152  0E00               	movlw	0
 16070  011154  0101               	movlb	1	; () banked
 16071  011156  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16072                           
 16073                           ; BSR set to: 1
 16074                           ;tcpv4.c: 1033: TCB_Reset(currentTCB);
 16075  011158  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 16076  01115C  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 16077  011160  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 16078                           
 16079                           ;tcpv4.c: 1039: }
 16080                           
 16081                           ;tcpv4.c: 1038: break;
 16082                           
 16083                           ;tcpv4.c: 1037: default:
 16084                           
 16085                           ;tcpv4.c: 1034: }
 16086                           ;tcpv4.c: 1035: }
 16087                           ;tcpv4.c: 1036: break;
 16088  011164  D13E               	goto	l1689
 16089  011166  0101               	movlb	1	; () banked
 16090  011168  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16091                           
 16092                           ; Switch size 1, requested type "space"
 16093                           ; Number of cases is 4, Range of values is 4 to 12
 16094                           ; switch strategies available:
 16095                           ; Name         Instructions Cycles
 16096                           ; simple_byte           13     7 (average)
 16097                           ;	Chosen strategy is simple_byte
 16098  01116A  0A04               	xorlw	4	; case 4
 16099  01116C  B4D8               	btfsc	status,2,c
 16100  01116E  D7AD               	goto	l1764
 16101  011170  0A02               	xorlw	2	; case 6
 16102  011172  B4D8               	btfsc	status,2,c
 16103  011174  D797               	goto	l1761
 16104  011176  0A01               	xorlw	1	; case 7
 16105  011178  B4D8               	btfsc	status,2,c
 16106  01117A  D7BB               	goto	l1765
 16107  01117C  0A0B               	xorlw	11	; case 12
 16108  01117E  B4D8               	btfsc	status,2,c
 16109  011180  D7C7               	goto	l1767
 16110                           
 16111                           ; BSR set to: 1
 16112                           ;tcpv4.c: 1040: break;
 16113  011182  D12F               	goto	l1689
 16114  011184                     
 16115                           ; BSR set to: 1
 16116                           ;tcpv4.c: 1045: if(TCP_Snd(currentTCB))
 16117                           
 16118                           ; BSR set to: 1
 16119  011184  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16120  011188  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16121  01118C  EC61  F08D         	call	_TCP_Snd	;wreg free
 16122  011190                     L17:
 16123  011190  0900               	iorlw	0
 16124  011192  B4D8               	btfsc	status,2,c
 16125  011194  D126               	goto	l1689
 16126                           
 16127                           ;tcpv4.c: 1046: {
 16128                           ;tcpv4.c: 1047: nextState = TIME_WAIT;
 16129  011196  0E0A               	movlw	10
 16130  011198                     L23:
 16131  011198  0101               	movlb	1	; () banked
 16132  01119A  D035               	goto	L15
 16133  01119C                     
 16134                           ; BSR set to: 1
 16135                           ;tcpv4.c: 1051: if (currentTCB->timeoutsCount)
 16136                           
 16137                           ; BSR set to: 1
 16138  01119C  EE20 F037          	lfsr	2,55
 16139  0111A0  503D               	movf	_currentTCB,w,c
 16140  0111A2  26D9               	addwf	fsr2l,f,c
 16141  0111A4  503E               	movf	_currentTCB+1,w,c
 16142  0111A6  22DA               	addwfc	fsr2h,f,c
 16143  0111A8  50DF               	movf	indf2,w,c
 16144  0111AA  B4D8               	btfsc	status,2,c
 16145  0111AC  D007               	goto	l1778
 16146                           
 16147                           ; BSR set to: 1
 16148                           ;tcpv4.c: 1052: {
 16149                           ;tcpv4.c: 1053: TCP_Snd(currentTCB);
 16150  0111AE  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16151  0111B2  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16152  0111B6  EC61  F08D         	call	_TCP_Snd	;wreg free
 16153                           
 16154                           ;tcpv4.c: 1054: }else
 16155  0111BA  D113               	goto	l1689
 16156  0111BC                     l1778:
 16157                           
 16158                           ;tcpv4.c: 1055: {
 16159                           ;tcpv4.c: 1057: currentTCB->flags = 0x04U;
 16160  0111BC  EE20 F038          	lfsr	2,56
 16161  0111C0  503D               	movf	_currentTCB,w,c
 16162  0111C2  26D9               	addwf	fsr2l,f,c
 16163  0111C4  503E               	movf	_currentTCB+1,w,c
 16164  0111C6  22DA               	addwfc	fsr2h,f,c
 16165  0111C8  0E04               	movlw	4
 16166  0111CA  6EDF               	movwf	indf2,c
 16167                           
 16168                           ;tcpv4.c: 1058: if(TCP_Snd(currentTCB))
 16169  0111CC  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16170  0111D0  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16171  0111D4  EC61  F08D         	call	_TCP_Snd	;wreg free
 16172  0111D8  0900               	iorlw	0
 16173  0111DA  B4D8               	btfsc	status,2,c
 16174  0111DC  D102               	goto	l1689
 16175                           
 16176                           ;tcpv4.c: 1059: {
 16177                           ;tcpv4.c: 1060: nextState = CLOSE;
 16178  0111DE  0E00               	movlw	0
 16179  0111E0  0101               	movlb	1	; () banked
 16180  0111E2  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16181                           
 16182                           ; BSR set to: 1
 16183                           ;tcpv4.c: 1061: TCB_Reset(currentTCB);
 16184  0111E4  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 16185  0111E8  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 16186  0111EC  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 16187                           
 16188                           ;tcpv4.c: 1067: }
 16189                           
 16190                           ;tcpv4.c: 1066: break;
 16191                           
 16192                           ;tcpv4.c: 1065: default:
 16193                           
 16194                           ;tcpv4.c: 1062: }
 16195                           ;tcpv4.c: 1063: }
 16196                           ;tcpv4.c: 1064: break;
 16197  0111F0  D0F8               	goto	l1689
 16198  0111F2  0101               	movlb	1	; () banked
 16199  0111F4  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16200                           
 16201                           ; Switch size 1, requested type "space"
 16202                           ; Number of cases is 2, Range of values is 6 to 12
 16203                           ; switch strategies available:
 16204                           ; Name         Instructions Cycles
 16205                           ; simple_byte            7     4 (average)
 16206                           ;	Chosen strategy is simple_byte
 16207  0111F6  0A06               	xorlw	6	; case 6
 16208  0111F8  B4D8               	btfsc	status,2,c
 16209  0111FA  D7C4               	goto	l1774
 16210  0111FC  0A0A               	xorlw	10	; case 12
 16211  0111FE  B4D8               	btfsc	status,2,c
 16212  011200  D7CD               	goto	l1777
 16213                           
 16214                           ; BSR set to: 1
 16215                           ;tcpv4.c: 1071: break;
 16216                           
 16217                           ;tcpv4.c: 1069: case CLOSE_WAIT:
 16218                           
 16219                           ; BSR set to: 1
 16220                           ;tcpv4.c: 1068: break;
 16221  011202  D0EF               	goto	l1689
 16222  011204                     
 16223                           ; BSR set to: 1
 16224                           ;tcpv4.c: 1076: nextState = TIME_WAIT;
 16225                           
 16226                           ; BSR set to: 1
 16227  011204  0E0A               	movlw	10
 16228  011206                     L15:
 16229  011206  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16230                           
 16231                           ; BSR set to: 1
 16232                           ;tcpv4.c: 1080: }
 16233                           
 16234                           ; BSR set to: 1
 16235                           ;tcpv4.c: 1079: break;
 16236                           
 16237                           ;tcpv4.c: 1078: default:
 16238                           
 16239                           ;tcpv4.c: 1077: break;
 16240  011208  D0EC               	goto	l1689
 16241  01120A                     
 16242                           ; BSR set to: 1
 16243  01120A  0101               	movlb	1	; () banked
 16244  01120C  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16245                           
 16246                           ; Switch size 1, requested type "space"
 16247                           ; Number of cases is 1, Range of values is 4 to 4
 16248                           ; switch strategies available:
 16249                           ; Name         Instructions Cycles
 16250                           ; simple_byte            4     3 (average)
 16251                           ;	Chosen strategy is simple_byte
 16252  01120E  0A04               	xorlw	4	; case 4
 16253  011210  B4D8               	btfsc	status,2,c
 16254  011212  D7F8               	goto	l1785
 16255                           
 16256                           ; BSR set to: 1
 16257                           ;tcpv4.c: 1081: break;
 16258  011214  D0E6               	goto	l1689
 16259  011216                     
 16260                           ; BSR set to: 1
 16261                           ;tcpv4.c: 1087: case RCV_ACK:
 16262                           ;tcpv4.c: 1088: if ((currentTCB->destIP == receivedRemoteAddress) &&
 16263                           ;tcpv4.c: 1089: (currentTCB->destPort == tcpHeader.sourcePort))
 16264                           
 16265                           ; BSR set to: 1
 16266                           
 16267                           ; BSR set to: 1
 16268  011216  EE20 F002          	lfsr	2,2
 16269  01121A  503D               	movf	_currentTCB,w,c
 16270  01121C  26D9               	addwf	fsr2l,f,c
 16271  01121E  503E               	movf	_currentTCB+1,w,c
 16272  011220  22DA               	addwfc	fsr2h,f,c
 16273  011222  0102               	movlb	2	; () banked
 16274  011224  512A               	movf	_receivedRemoteAddress& (0+255),w,b
 16275  011226  18DE               	xorwf	postinc2,w,c
 16276  011228  E109               	bnz	u11611
 16277  01122A  512B               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 16278  01122C  18DE               	xorwf	postinc2,w,c
 16279  01122E  E106               	bnz	u11611
 16280  011230  512C               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 16281  011232  18DE               	xorwf	postinc2,w,c
 16282  011234  E103               	bnz	u11611
 16283  011236  512D               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 16284  011238  18DE               	xorwf	postinc2,w,c
 16285  01123A  A4D8               	btfss	status,2,c
 16286  01123C                     u11611:
 16287  01123C  D0D2               	goto	l1689
 16288                           
 16289                           ; BSR set to: 2
 16290  01123E  EE20 F006          	lfsr	2,6
 16291  011242  503D               	movf	_currentTCB,w,c
 16292  011244  26D9               	addwf	fsr2l,f,c
 16293  011246  503E               	movf	_currentTCB+1,w,c
 16294  011248  22DA               	addwfc	fsr2h,f,c
 16295  01124A  5159               	movf	_tcpHeader& (0+255),w,b
 16296  01124C  18DE               	xorwf	postinc2,w,c
 16297  01124E  E103               	bnz	u11621
 16298  011250  515A               	movf	(_tcpHeader+1)& (0+255),w,b
 16299  011252  18DE               	xorwf	postinc2,w,c
 16300  011254  A4D8               	btfss	status,2,c
 16301  011256                     u11621:
 16302  011256  D0C5               	goto	l1689
 16303                           
 16304                           ; BSR set to: 2
 16305                           ;tcpv4.c: 1090: {
 16306                           ;tcpv4.c: 1091: nextState = CLOSED;
 16307  011258  0E00               	movlw	0
 16308  01125A  0101               	movlb	1	; () banked
 16309  01125C  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16310                           
 16311                           ; BSR set to: 1
 16312                           ;tcpv4.c: 1092: TCB_Reset(currentTCB);
 16313  01125E  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 16314  011262  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 16315  011266  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 16316                           
 16317                           ;tcpv4.c: 1093: }
 16318                           ;tcpv4.c: 1094: break;
 16319  01126A  D0BB               	goto	l1689
 16320  01126C                     
 16321                           ;tcpv4.c: 1096: if (currentTCB->timeoutsCount)
 16322  01126C  EE20 F037          	lfsr	2,55
 16323  011270  503D               	movf	_currentTCB,w,c
 16324  011272  26D9               	addwf	fsr2l,f,c
 16325  011274  503E               	movf	_currentTCB+1,w,c
 16326  011276  22DA               	addwfc	fsr2h,f,c
 16327  011278  50DF               	movf	indf2,w,c
 16328  01127A  B4D8               	btfsc	status,2,c
 16329  01127C  D007               	goto	l1795
 16330                           
 16331                           ;tcpv4.c: 1097: {
 16332                           ;tcpv4.c: 1098: TCP_Snd(currentTCB);
 16333  01127E  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16334  011282  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16335  011286  EC61  F08D         	call	_TCP_Snd	;wreg free
 16336                           
 16337                           ;tcpv4.c: 1099: }else
 16338  01128A  D0AB               	goto	l1689
 16339  01128C                     l1795:
 16340                           
 16341                           ;tcpv4.c: 1100: {
 16342                           ;tcpv4.c: 1102: currentTCB->flags = 0x04U;
 16343  01128C  EE20 F038          	lfsr	2,56
 16344  011290  503D               	movf	_currentTCB,w,c
 16345  011292  26D9               	addwf	fsr2l,f,c
 16346  011294  503E               	movf	_currentTCB+1,w,c
 16347  011296  22DA               	addwfc	fsr2h,f,c
 16348  011298  0E04               	movlw	4
 16349  01129A  6EDF               	movwf	indf2,c
 16350                           
 16351                           ;tcpv4.c: 1103: if(TCP_Snd(currentTCB))
 16352  01129C  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16353  0112A0  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16354  0112A4  EC61  F08D         	call	_TCP_Snd	;wreg free
 16355  0112A8  0900               	iorlw	0
 16356  0112AA  B4D8               	btfsc	status,2,c
 16357  0112AC  D09A               	goto	l1689
 16358                           
 16359                           ;tcpv4.c: 1104: {
 16360                           ;tcpv4.c: 1105: nextState = CLOSE;
 16361  0112AE  0E00               	movlw	0
 16362  0112B0  0101               	movlb	1	; () banked
 16363  0112B2  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16364                           
 16365                           ; BSR set to: 1
 16366                           ;tcpv4.c: 1106: TCB_Reset(currentTCB);
 16367  0112B4  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 16368  0112B8  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 16369  0112BC  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 16370                           
 16371                           ;tcpv4.c: 1111: }
 16372                           
 16373                           ;tcpv4.c: 1110: break;
 16374                           
 16375                           ;tcpv4.c: 1107: }
 16376                           ;tcpv4.c: 1108: }
 16377                           ;tcpv4.c: 1109: default:
 16378  0112C0  D090               	goto	l1689
 16379  0112C2  0101               	movlb	1	; () banked
 16380  0112C4  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16381                           
 16382                           ; Switch size 1, requested type "space"
 16383                           ; Number of cases is 3, Range of values is 4 to 12
 16384                           ; switch strategies available:
 16385                           ; Name         Instructions Cycles
 16386                           ; simple_byte           10     6 (average)
 16387                           ;	Chosen strategy is simple_byte
 16388  0112C6  0A04               	xorlw	4	; case 4
 16389  0112C8  B4D8               	btfsc	status,2,c
 16390  0112CA  D7A5               	goto	l1790
 16391  0112CC  0A03               	xorlw	3	; case 7
 16392  0112CE  B4D8               	btfsc	status,2,c
 16393  0112D0  D7A2               	goto	l1790
 16394  0112D2  0A0B               	xorlw	11	; case 12
 16395  0112D4  B4D8               	btfsc	status,2,c
 16396  0112D6  D7CA               	goto	l1794
 16397                           
 16398                           ; BSR set to: 1
 16399                           ;tcpv4.c: 1112: break;
 16400  0112D8  D084               	goto	l1689
 16401  0112DA                     
 16402                           ;tcpv4.c: 1114: nextState = CLOSED;
 16403                           
 16404                           ; BSR set to: 1
 16405  0112DA  0E00               	movlw	0
 16406  0112DC  0101               	movlb	1	; () banked
 16407  0112DE  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16408                           
 16409                           ; BSR set to: 1
 16410                           ;tcpv4.c: 1115: TCB_Reset(currentTCB);
 16411  0112E0  C03D  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 16412  0112E4  C03E  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 16413  0112E8  ECB4  F0A9         	call	_TCB_Reset	;wreg free
 16414                           
 16415                           ;tcpv4.c: 1116: break;
 16416  0112EC  D07A               	goto	l1689
 16417  0112EE                     
 16418                           ;tcpv4.c: 1122: currentTCB->timeout = ((unsigned long)1*2);
 16419  0112EE  EE20 F033          	lfsr	2,51
 16420  0112F2  503D               	movf	_currentTCB,w,c
 16421  0112F4  26D9               	addwf	fsr2l,f,c
 16422  0112F6  503E               	movf	_currentTCB+1,w,c
 16423  0112F8  22DA               	addwfc	fsr2h,f,c
 16424  0112FA  0E02               	movlw	2
 16425  0112FC  6EDE               	movwf	postinc2,c
 16426  0112FE  0E00               	movlw	0
 16427  011300  6EDD               	movwf	postdec2,c
 16428                           
 16429                           ;tcpv4.c: 1123: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 16430  011302  EE20 F035          	lfsr	2,53
 16431  011306  503D               	movf	_currentTCB,w,c
 16432  011308  26D9               	addwf	fsr2l,f,c
 16433  01130A  503E               	movf	_currentTCB+1,w,c
 16434  01130C  22DA               	addwfc	fsr2h,f,c
 16435  01130E  0E02               	movlw	2
 16436  011310  6EDE               	movwf	postinc2,c
 16437  011312  0E00               	movlw	0
 16438  011314  6EDD               	movwf	postdec2,c
 16439                           
 16440                           ;tcpv4.c: 1124: currentTCB->timeoutsCount = (3u);
 16441  011316  EE20 F037          	lfsr	2,55
 16442  01131A  503D               	movf	_currentTCB,w,c
 16443  01131C  26D9               	addwf	fsr2l,f,c
 16444  01131E  503E               	movf	_currentTCB+1,w,c
 16445  011320  22DA               	addwfc	fsr2h,f,c
 16446  011322  0E03               	movlw	3
 16447  011324  6EDF               	movwf	indf2,c
 16448                           
 16449                           ;tcpv4.c: 1125: currentTCB->flags = 0x02U;
 16450  011326  EE20 F038          	lfsr	2,56
 16451  01132A  503D               	movf	_currentTCB,w,c
 16452  01132C  26D9               	addwf	fsr2l,f,c
 16453  01132E  503E               	movf	_currentTCB+1,w,c
 16454  011330  22DA               	addwfc	fsr2h,f,c
 16455  011332  0E02               	movlw	2
 16456  011334  6EDF               	movwf	indf2,c
 16457                           
 16458                           ;tcpv4.c: 1126: TCP_Snd(currentTCB);
 16459  011336  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 16460  01133A  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16461  01133E  EC61  F08D         	call	_TCP_Snd	;wreg free
 16462                           
 16463                           ;tcpv4.c: 1127: nextState = SYN_SENT;
 16464  011342  0E02               	movlw	2
 16465  011344  0101               	movlb	1	; () banked
 16466  011346  D018               	goto	L16
 16467  011348                     l11818:
 16468                           
 16469                           ; BSR set to: 1
 16470                           ;tcpv4.c: 1128: ret = 1;
 16471  011348  0E01               	movlw	1
 16472  01134A  6F00               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 16473                           
 16474                           ;tcpv4.c: 1129: break;
 16475  01134C  D04A               	goto	l1689
 16476  01134E                     
 16477                           ; BSR set to: 1
 16478                           ;tcpv4.c: 1131: currentTCB->destIP = 0;
 16479                           
 16480                           ; BSR set to: 1
 16481  01134E  EE20 F002          	lfsr	2,2
 16482  011352  503D               	movf	_currentTCB,w,c
 16483  011354  26D9               	addwf	fsr2l,f,c
 16484  011356  503E               	movf	_currentTCB+1,w,c
 16485  011358  22DA               	addwfc	fsr2h,f,c
 16486  01135A  6ADE               	clrf	postinc2,c
 16487  01135C  6ADE               	clrf	postinc2,c
 16488  01135E  6ADE               	clrf	postinc2,c
 16489  011360  6ADD               	clrf	postdec2,c
 16490                           
 16491                           ;tcpv4.c: 1132: currentTCB->destPort = 0;
 16492  011362  EE20 F006          	lfsr	2,6
 16493  011366  503D               	movf	_currentTCB,w,c
 16494  011368  26D9               	addwf	fsr2l,f,c
 16495  01136A  503E               	movf	_currentTCB+1,w,c
 16496  01136C  22DA               	addwfc	fsr2h,f,c
 16497  01136E  0E00               	movlw	0
 16498  011370  6EDE               	movwf	postinc2,c
 16499  011372  0E00               	movlw	0
 16500  011374  6EDD               	movwf	postdec2,c
 16501                           
 16502                           ; BSR set to: 1
 16503                           ;tcpv4.c: 1133: nextState = LISTEN;
 16504  011376  0E01               	movlw	1
 16505  011378                     L16:
 16506  011378  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16507  01137A  D7E6               	goto	l11818
 16508  01137C                     
 16509                           ; BSR set to: 1
 16510  01137C  0101               	movlb	1	; () banked
 16511  01137E  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16512                           
 16513                           ; Switch size 1, requested type "space"
 16514                           ; Number of cases is 2, Range of values is 1 to 2
 16515                           ; switch strategies available:
 16516                           ; Name         Instructions Cycles
 16517                           ; simple_byte            7     4 (average)
 16518                           ;	Chosen strategy is simple_byte
 16519  011380  0A01               	xorlw	1	; case 1
 16520  011382  B4D8               	btfsc	status,2,c
 16521  011384  D7B4               	goto	l1802
 16522  011386  0A03               	xorlw	3	; case 2
 16523  011388  B4D8               	btfsc	status,2,c
 16524  01138A  D7E1               	goto	l1804
 16525                           
 16526                           ; BSR set to: 1
 16527                           ;tcpv4.c: 1142: }
 16528                           
 16529                           ; BSR set to: 1
 16530                           ;tcpv4.c: 1141: break;
 16531                           
 16532                           ;tcpv4.c: 1140: default:
 16533                           
 16534                           ; BSR set to: 1
 16535                           ;tcpv4.c: 1139: break;
 16536  01138C  D02A               	goto	l1689
 16537  01138E                     l1682:
 16538                           
 16539                           ; BSR set to: 1
 16540  01138E  EE20 F02D          	lfsr	2,45
 16541  011392  503D               	movf	_currentTCB,w,c
 16542  011394  26D9               	addwf	fsr2l,f,c
 16543  011396  503E               	movf	_currentTCB+1,w,c
 16544  011398  22DA               	addwfc	fsr2h,f,c
 16545  01139A  50DF               	movf	indf2,w,c
 16546                           
 16547                           ; Switch size 1, requested type "space"
 16548                           ; Number of cases is 11, Range of values is 0 to 10
 16549                           ; switch strategies available:
 16550                           ; Name         Instructions Cycles
 16551                           ; simple_byte           34    18 (average)
 16552                           ;	Chosen strategy is simple_byte
 16553  01139C  0A00               	xorlw	0	; case 0
 16554  01139E  B4D8               	btfsc	status,2,c
 16555  0113A0  D7ED               	goto	l1801
 16556  0113A2  0A01               	xorlw	1	; case 1
 16557  0113A4  B4D8               	btfsc	status,2,c
 16558  0113A6  EFE2  F080         	goto	l1684
 16559  0113AA  0A03               	xorlw	3	; case 2
 16560  0113AC  B4D8               	btfsc	status,2,c
 16561  0113AE  EFD4  F083         	goto	l1691
 16562  0113B2  0A01               	xorlw	1	; case 3
 16563  0113B4  B4D8               	btfsc	status,2,c
 16564  0113B6  D438               	goto	l1716
 16565  0113B8  0A07               	xorlw	7	; case 4
 16566  0113BA  B4D8               	btfsc	status,2,c
 16567  0113BC  D65B               	goto	l1737
 16568  0113BE  0A01               	xorlw	1	; case 5
 16569  0113C0  B4D8               	btfsc	status,2,c
 16570  0113C2  D6D1               	goto	l1760
 16571  0113C4  0A03               	xorlw	3	; case 6
 16572  0113C6  B4D8               	btfsc	status,2,c
 16573  0113C8  D714               	goto	l1773
 16574  0113CA  0A01               	xorlw	1	; case 7
 16575  0113CC  B4D8               	btfsc	status,2,c
 16576  0113CE  D009               	goto	l1689
 16577  0113D0  0A0F               	xorlw	15	; case 8
 16578  0113D2  B4D8               	btfsc	status,2,c
 16579  0113D4  D71A               	goto	l1784
 16580  0113D6  0A01               	xorlw	1	; case 9
 16581  0113D8  B4D8               	btfsc	status,2,c
 16582  0113DA  D773               	goto	l1789
 16583  0113DC  0A03               	xorlw	3	; case 10
 16584  0113DE  B4D8               	btfsc	status,2,c
 16585  0113E0  D77C               	goto	l1799
 16586  0113E2                     l1689:
 16587                           
 16588                           ;tcpv4.c: 1143: currentTCB->connectionEvent = NOP;
 16589  0113E2  EE20 F02E          	lfsr	2,46
 16590  0113E6  503D               	movf	_currentTCB,w,c
 16591  0113E8  26D9               	addwf	fsr2l,f,c
 16592  0113EA  503E               	movf	_currentTCB+1,w,c
 16593  0113EC  22DA               	addwfc	fsr2h,f,c
 16594  0113EE  0E0D               	movlw	13
 16595  0113F0  6EDF               	movwf	indf2,c
 16596                           
 16597                           ;tcpv4.c: 1144: currentTCB->fsmState = nextState;
 16598  0113F2  EE20 F02D          	lfsr	2,45
 16599  0113F6  503D               	movf	_currentTCB,w,c
 16600  0113F8  26D9               	addwf	fsr2l,f,c
 16601  0113FA  503E               	movf	_currentTCB+1,w,c
 16602  0113FC  22DA               	addwfc	fsr2h,f,c
 16603  0113FE  C104  FFDF         	movff	TCP_FiniteStateMachine@nextState,indf2
 16604                           
 16605                           ;tcpv4.c: 1145: return ret;
 16606  011402  0101               	movlb	1	; () banked
 16607  011404  5100               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 16608  011406  0012               	return	
 16609  011408                     __end_of_TCP_FiniteStateMachine:
 16610                           	opt stack 0
 16611                           tosu	equ	0xFFF
 16612                           tosh	equ	0xFFE
 16613                           tosl	equ	0xFFD
 16614                           pclath	equ	0xFFA
 16615                           tblptru	equ	0xFF8
 16616                           tblptrh	equ	0xFF7
 16617                           tblptrl	equ	0xFF6
 16618                           tablat	equ	0xFF5
 16619                           prodh	equ	0xFF4
 16620                           prodl	equ	0xFF3
 16621                           intcon	equ	0xFF2
 16622                           indf0	equ	0xFEF
 16623                           postinc0	equ	0xFEE
 16624                           fsr0h	equ	0xFEA
 16625                           fsr0l	equ	0xFE9
 16626                           wreg	equ	0xFE8
 16627                           indf1	equ	0xFE7
 16628                           postinc1	equ	0xFE6
 16629                           postdec1	equ	0xFE5
 16630                           plusw1	equ	0xFE3
 16631                           fsr1h	equ	0xFE2
 16632                           fsr1l	equ	0xFE1
 16633                           indf2	equ	0xFDF
 16634                           postinc2	equ	0xFDE
 16635                           postdec2	equ	0xFDD
 16636                           plusw2	equ	0xFDB
 16637                           fsr2h	equ	0xFDA
 16638                           fsr2l	equ	0xFD9
 16639                           status	equ	0xFD8
 16640                           
 16641 ;; *************** function _resetPortUnreachable *****************
 16642 ;; Defined at:
 16643 ;;		line 171 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 16644 ;; Parameters:    Size  Location     Type
 16645 ;;		None
 16646 ;; Auto vars:     Size  Location     Type
 16647 ;;		None
 16648 ;; Return value:  Size  Location     Type
 16649 ;;                  1    wreg      void 
 16650 ;; Registers used:
 16651 ;;		wreg, status,2
 16652 ;; Tracked objects:
 16653 ;;		On entry : 0/0
 16654 ;;		On exit  : 0/0
 16655 ;;		Unchanged: 0/0
 16656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16661 ;;Total ram usage:        0 bytes
 16662 ;; Hardware stack levels used:    1
 16663 ;; Hardware stack levels required when called:    4
 16664 ;; This function calls:
 16665 ;;		Nothing
 16666 ;; This function is called by:
 16667 ;;		_TCP_FiniteStateMachine
 16668 ;; This function uses a non-reentrant model
 16669 ;;
 16670                           
 16671                           	psect	text60
 16672  016EB8                     __ptext60:
 16673                           	opt stack 0
 16674  016EB8                     _resetPortUnreachable:
 16675                           	opt stack 23
 16676                           
 16677                           ;icmp.c: 173: portUnreachable = 0;
 16678                           
 16679                           ; BSR set to: 1
 16680                           ;incstack = 0
 16681  016EB8  0E00               	movlw	0
 16682  016EBA  0102               	movlb	2	; () banked
 16683  016EBC  6F51               	movwf	(_portUnreachable+1)& (0+255),b
 16684  016EBE  0E00               	movlw	0
 16685  016EC0  6F50               	movwf	_portUnreachable& (0+255),b
 16686                           
 16687                           ; BSR set to: 2
 16688  016EC2  0012               	return		;funcret
 16689  016EC4                     __end_of_resetPortUnreachable:
 16690                           	opt stack 0
 16691                           tosu	equ	0xFFF
 16692                           tosh	equ	0xFFE
 16693                           tosl	equ	0xFFD
 16694                           pclath	equ	0xFFA
 16695                           tblptru	equ	0xFF8
 16696                           tblptrh	equ	0xFF7
 16697                           tblptrl	equ	0xFF6
 16698                           tablat	equ	0xFF5
 16699                           prodh	equ	0xFF4
 16700                           prodl	equ	0xFF3
 16701                           intcon	equ	0xFF2
 16702                           indf0	equ	0xFEF
 16703                           postinc0	equ	0xFEE
 16704                           fsr0h	equ	0xFEA
 16705                           fsr0l	equ	0xFE9
 16706                           wreg	equ	0xFE8
 16707                           indf1	equ	0xFE7
 16708                           postinc1	equ	0xFE6
 16709                           postdec1	equ	0xFE5
 16710                           plusw1	equ	0xFE3
 16711                           fsr1h	equ	0xFE2
 16712                           fsr1l	equ	0xFE1
 16713                           indf2	equ	0xFDF
 16714                           postinc2	equ	0xFDE
 16715                           postdec2	equ	0xFDD
 16716                           plusw2	equ	0xFDB
 16717                           fsr2h	equ	0xFDA
 16718                           fsr2l	equ	0xFD9
 16719                           status	equ	0xFD8
 16720                           
 16721 ;; *************** function _isPortUnreachable *****************
 16722 ;; Defined at:
 16723 ;;		line 163 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;  port            2   18[COMRAM] unsigned int 
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;		None
 16728 ;; Return value:  Size  Location     Type
 16729 ;;                  1    wreg      unsigned char 
 16730 ;; Registers used:
 16731 ;;		wreg, status,2, status,0
 16732 ;; Tracked objects:
 16733 ;;		On entry : 0/0
 16734 ;;		On exit  : 0/0
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16741 ;;Total ram usage:        2 bytes
 16742 ;; Hardware stack levels used:    1
 16743 ;; Hardware stack levels required when called:    4
 16744 ;; This function calls:
 16745 ;;		Nothing
 16746 ;; This function is called by:
 16747 ;;		_TCP_FiniteStateMachine
 16748 ;; This function uses a non-reentrant model
 16749 ;;
 16750                           
 16751                           	psect	text61
 16752  016DD6                     __ptext61:
 16753                           	opt stack 0
 16754  016DD6                     _isPortUnreachable:
 16755                           	opt stack 23
 16756                           
 16757                           ;icmp.c: 165: if(portUnreachable==port)
 16758                           
 16759                           ; BSR set to: 2
 16760                           ;incstack = 0
 16761  016DD6  5013               	movf	isPortUnreachable@port,w,c
 16762  016DD8  0102               	movlb	2	; () banked
 16763  016DDA  1950               	xorwf	_portUnreachable& (0+255),w,b
 16764  016DDC  E106               	bnz	l10862
 16765  016DDE  5014               	movf	isPortUnreachable@port+1,w,c
 16766  016DE0  1951               	xorwf	(_portUnreachable+1)& (0+255),w,b
 16767  016DE2  A4D8               	btfss	status,2,c
 16768  016DE4  D002               	goto	l1118
 16769                           
 16770                           ; BSR set to: 2
 16771                           ;icmp.c: 166: return 1;
 16772  016DE6  0E01               	movlw	1
 16773                           
 16774                           ; BSR set to: 2
 16775                           
 16776                           ; BSR set to: 2
 16777  016DE8  0012               	return	
 16778  016DEA                     l1118:
 16779  016DEA                     l10862:
 16780                           
 16781                           ; BSR set to: 2
 16782                           ;icmp.c: 167: else
 16783                           ;icmp.c: 168: return 0;
 16784  016DEA  0E00               	movlw	0
 16785                           
 16786                           ; BSR set to: 2
 16787  016DEC  0012               	return	
 16788  016DEE                     __end_of_isPortUnreachable:
 16789                           	opt stack 0
 16790                           tosu	equ	0xFFF
 16791                           tosh	equ	0xFFE
 16792                           tosl	equ	0xFFD
 16793                           pclath	equ	0xFFA
 16794                           tblptru	equ	0xFF8
 16795                           tblptrh	equ	0xFF7
 16796                           tblptrl	equ	0xFF6
 16797                           tablat	equ	0xFF5
 16798                           prodh	equ	0xFF4
 16799                           prodl	equ	0xFF3
 16800                           intcon	equ	0xFF2
 16801                           indf0	equ	0xFEF
 16802                           postinc0	equ	0xFEE
 16803                           fsr0h	equ	0xFEA
 16804                           fsr0l	equ	0xFE9
 16805                           wreg	equ	0xFE8
 16806                           indf1	equ	0xFE7
 16807                           postinc1	equ	0xFE6
 16808                           postdec1	equ	0xFE5
 16809                           plusw1	equ	0xFE3
 16810                           fsr1h	equ	0xFE2
 16811                           fsr1l	equ	0xFE1
 16812                           indf2	equ	0xFDF
 16813                           postinc2	equ	0xFDE
 16814                           postdec2	equ	0xFDD
 16815                           plusw2	equ	0xFDB
 16816                           fsr2h	equ	0xFDA
 16817                           fsr2l	equ	0xFD9
 16818                           status	equ	0xFD8
 16819                           
 16820 ;; *************** function _TCP_PayloadSave *****************
 16821 ;; Defined at:
 16822 ;;		line 314 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 16823 ;; Parameters:    Size  Location     Type
 16824 ;;  len             2  135[BANK0 ] unsigned int 
 16825 ;; Auto vars:     Size  Location     Type
 16826 ;;  buffer_size     2  146[BANK0 ] unsigned int 
 16827 ;;  ret             1  145[BANK0 ] unsigned char 
 16828 ;; Return value:  Size  Location     Type
 16829 ;;                  1    wreg      unsigned char 
 16830 ;; Registers used:
 16831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16832 ;; Tracked objects:
 16833 ;;		On entry : 0/0
 16834 ;;		On exit  : 0/0
 16835 ;;		Unchanged: 0/0
 16836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16838 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16839 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16840 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16841 ;;Total ram usage:       13 bytes
 16842 ;; Hardware stack levels used:    1
 16843 ;; Hardware stack levels required when called:   10
 16844 ;; This function calls:
 16845 ;;		_ETH_ReadBlock
 16846 ;;		_TCP_Snd
 16847 ;; This function is called by:
 16848 ;;		_TCP_FiniteStateMachine
 16849 ;; This function uses a non-reentrant model
 16850 ;;
 16851                           
 16852                           	psect	text62
 16853  014E2C                     __ptext62:
 16854                           	opt stack 0
 16855  014E2C                     _TCP_PayloadSave:
 16856                           	opt stack 17
 16857                           
 16858                           ;tcpv4.c: 316: bool ret = 0;
 16859                           
 16860                           ; BSR set to: 2
 16861                           ;incstack = 0
 16862  014E2C  0E00               	movlw	0
 16863  014E2E  0100               	movlb	0	; () banked
 16864  014E30  6FF1               	movwf	TCP_PayloadSave@ret& (0+255),b
 16865                           
 16866                           ; BSR set to: 0
 16867                           ;tcpv4.c: 317: uint16_t buffer_size;
 16868                           ;tcpv4.c: 320: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 16869  014E32  EE20 F022          	lfsr	2,34
 16870  014E36  503D               	movf	_currentTCB,w,c
 16871  014E38  26D9               	addwf	fsr2l,f,c
 16872  014E3A  503E               	movf	_currentTCB+1,w,c
 16873  014E3C  22DA               	addwfc	fsr2h,f,c
 16874  014E3E  04DE               	decf	postinc2,w,c
 16875  014E40  A4D8               	btfss	status,2,c
 16876  014E42  0012               	return	
 16877                           
 16878                           ; BSR set to: 0
 16879                           ;tcpv4.c: 321: {
 16880                           ;tcpv4.c: 323: if (currentTCB->localWnd >= len)
 16881  014E44  EE20 F01A          	lfsr	2,26
 16882  014E48  503D               	movf	_currentTCB,w,c
 16883  014E4A  26D9               	addwf	fsr2l,f,c
 16884  014E4C  503E               	movf	_currentTCB+1,w,c
 16885  014E4E  22DA               	addwfc	fsr2h,f,c
 16886  014E50  51E7               	movf	TCP_PayloadSave@len& (0+255),w,b
 16887  014E52  5CDE               	subwf	postinc2,w,c
 16888  014E54  51E8               	movf	(TCP_PayloadSave@len+1)& (0+255),w,b
 16889  014E56  58DE               	subwfb	postinc2,w,c
 16890  014E58  A0D8               	btfss	status,0,c
 16891  014E5A  D005               	goto	l1619
 16892                           
 16893                           ; BSR set to: 0
 16894                           ;tcpv4.c: 324: {
 16895                           ;tcpv4.c: 325: buffer_size = len;
 16896  014E5C  C0E7  F0F2         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 16897  014E60  C0E8  F0F3         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 16898                           
 16899                           ;tcpv4.c: 326: }else
 16900  014E64  D00A               	goto	l1620
 16901  014E66                     l1619:
 16902                           
 16903                           ; BSR set to: 0
 16904                           ;tcpv4.c: 327: {
 16905                           ;tcpv4.c: 328: buffer_size = currentTCB->localWnd;
 16906                           
 16907                           ; BSR set to: 0
 16908  014E66  EE20 F01A          	lfsr	2,26
 16909  014E6A  503D               	movf	_currentTCB,w,c
 16910  014E6C  26D9               	addwf	fsr2l,f,c
 16911  014E6E  503E               	movf	_currentTCB+1,w,c
 16912  014E70  22DA               	addwfc	fsr2h,f,c
 16913  014E72  CFDE F0F2          	movff	postinc2,TCP_PayloadSave@buffer_size
 16914  014E76  CFDD F0F3          	movff	postdec2,TCP_PayloadSave@buffer_size+1
 16915  014E7A                     l1620:
 16916                           
 16917                           ; BSR set to: 0
 16918                           ;tcpv4.c: 329: }
 16919                           ;tcpv4.c: 331: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 16920                           
 16921                           ; BSR set to: 0
 16922  014E7A  EE20 F020          	lfsr	2,32
 16923  014E7E  503D               	movf	_currentTCB,w,c
 16924  014E80  26D9               	addwf	fsr2l,f,c
 16925  014E82  503E               	movf	_currentTCB+1,w,c
 16926  014E84  22DA               	addwfc	fsr2h,f,c
 16927  014E86  CFDE F013          	movff	postinc2,ETH_ReadBlock@buffer
 16928  014E8A  CFDD F014          	movff	postdec2,ETH_ReadBlock@buffer+1
 16929  014E8E  C0F2  F015         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 16930  014E92  C0F3  F016         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 16931  014E96  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
 16932                           
 16933                           ;tcpv4.c: 332: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 16934  014E9A  EE20 F020          	lfsr	2,32
 16935  014E9E  503D               	movf	_currentTCB,w,c
 16936  014EA0  26D9               	addwf	fsr2l,f,c
 16937  014EA2  503E               	movf	_currentTCB+1,w,c
 16938  014EA4  22DA               	addwfc	fsr2h,f,c
 16939  014EA6  CFDE F0E9          	movff	postinc2,??_TCP_PayloadSave
 16940  014EAA  CFDD F0EA          	movff	postdec2,??_TCP_PayloadSave+1
 16941  014EAE  0100               	movlb	0	; () banked
 16942  014EB0  51F2               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 16943  014EB2  27E9               	addwf	??_TCP_PayloadSave& (0+255),f,b
 16944  014EB4  51F3               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 16945  014EB6  23EA               	addwfc	(??_TCP_PayloadSave+1)& (0+255),f,b
 16946  014EB8  EE20 F020          	lfsr	2,32
 16947  014EBC  503D               	movf	_currentTCB,w,c
 16948  014EBE  26D9               	addwf	fsr2l,f,c
 16949  014EC0  503E               	movf	_currentTCB+1,w,c
 16950  014EC2  22DA               	addwfc	fsr2h,f,c
 16951  014EC4  C0E9  FFDE         	movff	??_TCP_PayloadSave,postinc2
 16952  014EC8  C0EA  FFDD         	movff	??_TCP_PayloadSave+1,postdec2
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;tcpv4.c: 335: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 16956  014ECC  EE20 F01A          	lfsr	2,26
 16957  014ED0  503D               	movf	_currentTCB,w,c
 16958  014ED2  26D9               	addwf	fsr2l,f,c
 16959  014ED4  503E               	movf	_currentTCB+1,w,c
 16960  014ED6  22DA               	addwfc	fsr2h,f,c
 16961  014ED8  CFDE F0E9          	movff	postinc2,??_TCP_PayloadSave
 16962  014EDC  CFDD F0EA          	movff	postdec2,??_TCP_PayloadSave+1
 16963  014EE0  C0F2  F0EB         	movff	TCP_PayloadSave@buffer_size,??_TCP_PayloadSave+2
 16964  014EE4  C0F3  F0EC         	movff	TCP_PayloadSave@buffer_size+1,??_TCP_PayloadSave+3
 16965  014EE8  1FEB               	comf	(??_TCP_PayloadSave+2)& (0+255),f,b
 16966  014EEA  1FEC               	comf	(??_TCP_PayloadSave+3)& (0+255),f,b
 16967  014EEC  4BEB               	infsnz	(??_TCP_PayloadSave+2)& (0+255),f,b
 16968  014EEE  2BEC               	incf	(??_TCP_PayloadSave+3)& (0+255),f,b
 16969  014EF0  51E9               	movf	??_TCP_PayloadSave& (0+255),w,b
 16970  014EF2  27EB               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 16971  014EF4  51EA               	movf	(??_TCP_PayloadSave+1)& (0+255),w,b
 16972  014EF6  23EC               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 16973  014EF8  EE20 F01A          	lfsr	2,26
 16974  014EFC  503D               	movf	_currentTCB,w,c
 16975  014EFE  26D9               	addwf	fsr2l,f,c
 16976  014F00  503E               	movf	_currentTCB+1,w,c
 16977  014F02  22DA               	addwfc	fsr2h,f,c
 16978  014F04  C0EB  FFDE         	movff	??_TCP_PayloadSave+2,postinc2
 16979  014F08  C0EC  FFDD         	movff	??_TCP_PayloadSave+3,postdec2
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;tcpv4.c: 336: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 16983  014F0C  EE20 F008          	lfsr	2,8
 16984  014F10  503D               	movf	_currentTCB,w,c
 16985  014F12  26D9               	addwf	fsr2l,f,c
 16986  014F14  503E               	movf	_currentTCB+1,w,c
 16987  014F16  22DA               	addwfc	fsr2h,f,c
 16988  014F18  CFDE F0E9          	movff	postinc2,??_TCP_PayloadSave
 16989  014F1C  CFDE F0EA          	movff	postinc2,??_TCP_PayloadSave+1
 16990  014F20  CFDE F0EB          	movff	postinc2,??_TCP_PayloadSave+2
 16991  014F24  CFDE F0EC          	movff	postinc2,??_TCP_PayloadSave+3
 16992  014F28  51F2               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 16993  014F2A  25E9               	addwf	??_TCP_PayloadSave& (0+255),w,b
 16994  014F2C  6FED               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 16995  014F2E  51F3               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 16996  014F30  21EA               	addwfc	(??_TCP_PayloadSave+1)& (0+255),w,b
 16997  014F32  6FEE               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 16998  014F34  0E00               	movlw	0
 16999  014F36  21EB               	addwfc	(??_TCP_PayloadSave+2)& (0+255),w,b
 17000  014F38  6FEF               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 17001  014F3A  0E00               	movlw	0
 17002  014F3C  21EC               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 17003  014F3E  6FF0               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 17004  014F40  EE20 F00C          	lfsr	2,12
 17005  014F44  503D               	movf	_currentTCB,w,c
 17006  014F46  26D9               	addwf	fsr2l,f,c
 17007  014F48  503E               	movf	_currentTCB+1,w,c
 17008  014F4A  22DA               	addwfc	fsr2h,f,c
 17009  014F4C  C0ED  FFDE         	movff	??_TCP_PayloadSave+4,postinc2
 17010  014F50  C0EE  FFDE         	movff	??_TCP_PayloadSave+5,postinc2
 17011  014F54  C0EF  FFDE         	movff	??_TCP_PayloadSave+6,postinc2
 17012  014F58  C0F0  FFDE         	movff	??_TCP_PayloadSave+7,postinc2
 17013                           
 17014                           ; BSR set to: 0
 17015                           ;tcpv4.c: 339: currentTCB->flags = 0x10U;
 17016  014F5C  EE20 F038          	lfsr	2,56
 17017  014F60  503D               	movf	_currentTCB,w,c
 17018  014F62  26D9               	addwf	fsr2l,f,c
 17019  014F64  503E               	movf	_currentTCB+1,w,c
 17020  014F66  22DA               	addwfc	fsr2h,f,c
 17021  014F68  0E10               	movlw	16
 17022  014F6A  6EDF               	movwf	indf2,c
 17023                           
 17024                           ; BSR set to: 0
 17025                           ;tcpv4.c: 340: currentTCB->payloadSave = 1;
 17026  014F6C  EE20 F02C          	lfsr	2,44
 17027  014F70  503D               	movf	_currentTCB,w,c
 17028  014F72  26D9               	addwf	fsr2l,f,c
 17029  014F74  503E               	movf	_currentTCB+1,w,c
 17030  014F76  22DA               	addwfc	fsr2h,f,c
 17031  014F78  0E01               	movlw	1
 17032  014F7A  6EDF               	movwf	indf2,c
 17033                           
 17034                           ; BSR set to: 0
 17035                           ;tcpv4.c: 341: TCP_Snd(currentTCB);
 17036  014F7C  C03D  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 17037  014F80  C03E  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 17038  014F84  EC61  F08D         	call	_TCP_Snd	;wreg free
 17039                           
 17040                           ;tcpv4.c: 342: currentTCB->payloadSave = 0;
 17041  014F88  EE20 F02C          	lfsr	2,44
 17042  014F8C  503D               	movf	_currentTCB,w,c
 17043  014F8E  26D9               	addwf	fsr2l,f,c
 17044  014F90  503E               	movf	_currentTCB+1,w,c
 17045  014F92  22DA               	addwfc	fsr2h,f,c
 17046  014F94  0E00               	movlw	0
 17047  014F96  6EDF               	movwf	indf2,c
 17048                           
 17049                           ;tcpv4.c: 343: ret = 1;
 17050  014F98  0E01               	movlw	1
 17051  014F9A  0100               	movlb	0	; () banked
 17052  014F9C  6FF1               	movwf	TCP_PayloadSave@ret& (0+255),b
 17053                           
 17054                           ; BSR set to: 0
 17055  014F9E  0012               	return	
 17056  014FA0                     __end_of_TCP_PayloadSave:
 17057                           	opt stack 0
 17058                           tosu	equ	0xFFF
 17059                           tosh	equ	0xFFE
 17060                           tosl	equ	0xFFD
 17061                           pclath	equ	0xFFA
 17062                           tblptru	equ	0xFF8
 17063                           tblptrh	equ	0xFF7
 17064                           tblptrl	equ	0xFF6
 17065                           tablat	equ	0xFF5
 17066                           prodh	equ	0xFF4
 17067                           prodl	equ	0xFF3
 17068                           intcon	equ	0xFF2
 17069                           indf0	equ	0xFEF
 17070                           postinc0	equ	0xFEE
 17071                           fsr0h	equ	0xFEA
 17072                           fsr0l	equ	0xFE9
 17073                           wreg	equ	0xFE8
 17074                           indf1	equ	0xFE7
 17075                           postinc1	equ	0xFE6
 17076                           postdec1	equ	0xFE5
 17077                           plusw1	equ	0xFE3
 17078                           fsr1h	equ	0xFE2
 17079                           fsr1l	equ	0xFE1
 17080                           indf2	equ	0xFDF
 17081                           postinc2	equ	0xFDE
 17082                           postdec2	equ	0xFDD
 17083                           plusw2	equ	0xFDB
 17084                           fsr2h	equ	0xFDA
 17085                           fsr2l	equ	0xFD9
 17086                           status	equ	0xFD8
 17087                           
 17088 ;; *************** function _TCP_Snd *****************
 17089 ;; Defined at:
 17090 ;;		line 196 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;  tcbPtr          2   72[BANK0 ] PTR struct .
 17093 ;;		 -> NULL(0), 
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;  txHeader       20  115[BANK0 ] struct .
 17096 ;;  tcpDataLengt    2  113[BANK0 ] unsigned int 
 17097 ;;  payloadLengt    2  110[BANK0 ] unsigned int 
 17098 ;;  cksm            2  108[BANK0 ] unsigned int 
 17099 ;;  data            2  106[BANK0 ] PTR unsigned char 
 17100 ;;		 -> NULL(0), 
 17101 ;;  ret             1  112[BANK0 ] unsigned char 
 17102 ;; Return value:  Size  Location     Type
 17103 ;;                  1    wreg      unsigned char 
 17104 ;; Registers used:
 17105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17106 ;; Tracked objects:
 17107 ;;		On entry : 0/0
 17108 ;;		On exit  : 0/0
 17109 ;;		Unchanged: 0/0
 17110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17112 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17113 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17114 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17115 ;;Total ram usage:       63 bytes
 17116 ;; Hardware stack levels used:    1
 17117 ;; Hardware stack levels required when called:    9
 17118 ;; This function calls:
 17119 ;;		_ETH_Insert
 17120 ;;		_ETH_TxComputeChecksum
 17121 ;;		_ETH_WriteBlock
 17122 ;;		_IPV4_Send
 17123 ;;		_IPv4_Start
 17124 ;; This function is called by:
 17125 ;;		_TCP_PayloadSave
 17126 ;;		_TCP_FiniteStateMachine
 17127 ;;		_TCP_Send
 17128 ;; This function uses a non-reentrant model
 17129 ;;
 17130                           
 17131                           	psect	text63
 17132  011AC2                     __ptext63:
 17133                           	opt stack 0
 17134  011AC2                     _TCP_Snd:
 17135                           	opt stack 18
 17136                           
 17137                           ;tcpv4.c: 198: bool ret = 0;
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;incstack = 0
 17141  011AC2  0E00               	movlw	0
 17142  011AC4  0100               	movlb	0	; () banked
 17143  011AC6  6FD0               	movwf	TCP_Snd@ret& (0+255),b
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;tcpv4.c: 199: tcpHeader_t txHeader;
 17147                           ;tcpv4.c: 200: uint16_t payloadLength;
 17148                           ;tcpv4.c: 201: uint16_t cksm;
 17149                           ;tcpv4.c: 202: uint16_t tcpDataLength;
 17150                           ;tcpv4.c: 203: uint8_t *data;
 17151                           ;tcpv4.c: 205: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 17152  011AC8  C0A8  FFD9         	movff	TCP_Snd@tcbPtr,fsr2l
 17153  011ACC  C0A9  FFDA         	movff	TCP_Snd@tcbPtr+1,fsr2h
 17154  011AD0  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 17155  011AD4  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 17156  011AD8  51AA               	movf	??_TCP_Snd& (0+255),w,b
 17157  011ADA  6FAD               	movwf	(??_TCP_Snd+3)& (0+255),b
 17158  011ADC  6BAC               	clrf	(??_TCP_Snd+2)& (0+255),b
 17159  011ADE  C0A8  FFD9         	movff	TCP_Snd@tcbPtr,fsr2l
 17160  011AE2  C0A9  FFDA         	movff	TCP_Snd@tcbPtr+1,fsr2h
 17161  011AE6  CFDE F0AE          	movff	postinc2,??_TCP_Snd+4
 17162  011AEA  CFDD F0AF          	movff	postdec2,??_TCP_Snd+5
 17163  011AEE  C0AF  F0AE         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 17164  011AF2  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 17165  011AF4  0EFF               	movlw	255
 17166  011AF6  17AE               	andwf	(??_TCP_Snd+4)& (0+255),f,b
 17167  011AF8  0E00               	movlw	0
 17168  011AFA  17AF               	andwf	(??_TCP_Snd+5)& (0+255),f,b
 17169  011AFC  51AC               	movf	(??_TCP_Snd+2)& (0+255),w,b
 17170  011AFE  11AE               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 17171  011B00  6FD3               	movwf	TCP_Snd@txHeader& (0+255),b
 17172  011B02  51AD               	movf	(??_TCP_Snd+3)& (0+255),w,b
 17173  011B04  11AF               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 17174  011B06  6FD4               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;tcpv4.c: 206: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 17178  011B08  EE20 F006          	lfsr	2,6
 17179  011B0C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17180  011B0E  26D9               	addwf	fsr2l,f,c
 17181  011B10  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17182  011B12  22DA               	addwfc	fsr2h,f,c
 17183  011B14  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 17184  011B18  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 17185  011B1C  51AA               	movf	??_TCP_Snd& (0+255),w,b
 17186  011B1E  6FAD               	movwf	(??_TCP_Snd+3)& (0+255),b
 17187  011B20  6BAC               	clrf	(??_TCP_Snd+2)& (0+255),b
 17188  011B22  EE20 F006          	lfsr	2,6
 17189  011B26  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17190  011B28  26D9               	addwf	fsr2l,f,c
 17191  011B2A  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17192  011B2C  22DA               	addwfc	fsr2h,f,c
 17193  011B2E  CFDE F0AE          	movff	postinc2,??_TCP_Snd+4
 17194  011B32  CFDD F0AF          	movff	postdec2,??_TCP_Snd+5
 17195  011B36  C0AF  F0AE         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 17196  011B3A  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 17197  011B3C  0EFF               	movlw	255
 17198  011B3E  17AE               	andwf	(??_TCP_Snd+4)& (0+255),f,b
 17199  011B40  0E00               	movlw	0
 17200  011B42  17AF               	andwf	(??_TCP_Snd+5)& (0+255),f,b
 17201  011B44  51AC               	movf	(??_TCP_Snd+2)& (0+255),w,b
 17202  011B46  11AE               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 17203  011B48  6FD5               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 17204  011B4A  51AD               	movf	(??_TCP_Snd+3)& (0+255),w,b
 17205  011B4C  11AF               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 17206  011B4E  6FD6               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;tcpv4.c: 208: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 17210  011B50  EE20 F010          	lfsr	2,16
 17211  011B54  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17212  011B56  26D9               	addwf	fsr2l,f,c
 17213  011B58  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17214  011B5A  22DA               	addwfc	fsr2h,f,c
 17215  011B5C  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 17216  011B60  CFDE F0AB          	movff	postinc2,??_TCP_Snd+1
 17217  011B64  CFDE F0AC          	movff	postinc2,??_TCP_Snd+2
 17218  011B68  CFDE F0AD          	movff	postinc2,??_TCP_Snd+3
 17219  011B6C  0EFF               	movlw	255
 17220  011B6E  15AA               	andwf	??_TCP_Snd& (0+255),w,b
 17221  011B70  6FAE               	movwf	(??_TCP_Snd+4)& (0+255),b
 17222  011B72  0E00               	movlw	0
 17223  011B74  15AB               	andwf	(??_TCP_Snd+1)& (0+255),w,b
 17224  011B76  6FAF               	movwf	(??_TCP_Snd+5)& (0+255),b
 17225  011B78  0E00               	movlw	0
 17226  011B7A  15AC               	andwf	(??_TCP_Snd+2)& (0+255),w,b
 17227  011B7C  6FB0               	movwf	(??_TCP_Snd+6)& (0+255),b
 17228  011B7E  0E00               	movlw	0
 17229  011B80  15AD               	andwf	(??_TCP_Snd+3)& (0+255),w,b
 17230  011B82  6FB1               	movwf	(??_TCP_Snd+7)& (0+255),b
 17231  011B84  C0AE  F0B1         	movff	??_TCP_Snd+4,??_TCP_Snd+7
 17232  011B88  6BB0               	clrf	(??_TCP_Snd+6)& (0+255),b
 17233  011B8A  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 17234  011B8C  6BAE               	clrf	(??_TCP_Snd+4)& (0+255),b
 17235  011B8E  EE20 F010          	lfsr	2,16
 17236  011B92  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17237  011B94  26D9               	addwf	fsr2l,f,c
 17238  011B96  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17239  011B98  22DA               	addwfc	fsr2h,f,c
 17240  011B9A  0E00               	movlw	0
 17241  011B9C  14DE               	andwf	postinc2,w,c
 17242  011B9E  6FB2               	movwf	(??_TCP_Snd+8)& (0+255),b
 17243  011BA0  0EFF               	movlw	255
 17244  011BA2  14DE               	andwf	postinc2,w,c
 17245  011BA4  6FB3               	movwf	(??_TCP_Snd+9)& (0+255),b
 17246  011BA6  0E00               	movlw	0
 17247  011BA8  14DE               	andwf	postinc2,w,c
 17248  011BAA  6FB4               	movwf	(??_TCP_Snd+10)& (0+255),b
 17249  011BAC  0E00               	movlw	0
 17250  011BAE  14DE               	andwf	postinc2,w,c
 17251  011BB0  6FB5               	movwf	(??_TCP_Snd+11)& (0+255),b
 17252  011BB2  C0B4  F0B5         	movff	??_TCP_Snd+10,??_TCP_Snd+11
 17253  011BB6  C0B3  F0B4         	movff	??_TCP_Snd+9,??_TCP_Snd+10
 17254  011BBA  C0B2  F0B3         	movff	??_TCP_Snd+8,??_TCP_Snd+9
 17255  011BBE  6BB2               	clrf	(??_TCP_Snd+8)& (0+255),b
 17256  011BC0  EE20 F010          	lfsr	2,16
 17257  011BC4  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17258  011BC6  26D9               	addwf	fsr2l,f,c
 17259  011BC8  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17260  011BCA  22DA               	addwfc	fsr2h,f,c
 17261  011BCC  CFDE F0B6          	movff	postinc2,??_TCP_Snd+12
 17262  011BD0  CFDE F0B7          	movff	postinc2,??_TCP_Snd+13
 17263  011BD4  CFDE F0B8          	movff	postinc2,??_TCP_Snd+14
 17264  011BD8  CFDE F0B9          	movff	postinc2,??_TCP_Snd+15
 17265  011BDC  C0B7  F0B6         	movff	??_TCP_Snd+13,??_TCP_Snd+12
 17266  011BE0  C0B8  F0B7         	movff	??_TCP_Snd+14,??_TCP_Snd+13
 17267  011BE4  C0B9  F0B8         	movff	??_TCP_Snd+15,??_TCP_Snd+14
 17268  011BE8  6BB9               	clrf	(??_TCP_Snd+15)& (0+255),b
 17269  011BEA  0E00               	movlw	0
 17270  011BEC  15B6               	andwf	(??_TCP_Snd+12)& (0+255),w,b
 17271  011BEE  6FBA               	movwf	(??_TCP_Snd+16)& (0+255),b
 17272  011BF0  0EFF               	movlw	255
 17273  011BF2  15B7               	andwf	(??_TCP_Snd+13)& (0+255),w,b
 17274  011BF4  6FBB               	movwf	(??_TCP_Snd+17)& (0+255),b
 17275  011BF6  0E00               	movlw	0
 17276  011BF8  15B8               	andwf	(??_TCP_Snd+14)& (0+255),w,b
 17277  011BFA  6FBC               	movwf	(??_TCP_Snd+18)& (0+255),b
 17278  011BFC  0E00               	movlw	0
 17279  011BFE  15B9               	andwf	(??_TCP_Snd+15)& (0+255),w,b
 17280  011C00  6FBD               	movwf	(??_TCP_Snd+19)& (0+255),b
 17281  011C02  EE20 F010          	lfsr	2,16
 17282  011C06  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17283  011C08  26D9               	addwf	fsr2l,f,c
 17284  011C0A  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17285  011C0C  22DA               	addwfc	fsr2h,f,c
 17286  011C0E  0E00               	movlw	0
 17287  011C10  14DE               	andwf	postinc2,w,c
 17288  011C12  6FBE               	movwf	(??_TCP_Snd+20)& (0+255),b
 17289  011C14  0E00               	movlw	0
 17290  011C16  14DE               	andwf	postinc2,w,c
 17291  011C18  6FBF               	movwf	(??_TCP_Snd+21)& (0+255),b
 17292  011C1A  0E00               	movlw	0
 17293  011C1C  14DE               	andwf	postinc2,w,c
 17294  011C1E  6FC0               	movwf	(??_TCP_Snd+22)& (0+255),b
 17295  011C20  0EFF               	movlw	255
 17296  011C22  14DE               	andwf	postinc2,w,c
 17297  011C24  6FC1               	movwf	(??_TCP_Snd+23)& (0+255),b
 17298  011C26  0E19               	movlw	25
 17299  011C28  D005               	goto	u10000
 17300  011C2A                     u10005:
 17301  011C2A  90D8               	bcf	status,0,c
 17302  011C2C  33C1               	rrcf	(??_TCP_Snd+23)& (0+255),f,b
 17303  011C2E  33C0               	rrcf	(??_TCP_Snd+22)& (0+255),f,b
 17304  011C30  33BF               	rrcf	(??_TCP_Snd+21)& (0+255),f,b
 17305  011C32  33BE               	rrcf	(??_TCP_Snd+20)& (0+255),f,b
 17306  011C34                     u10000:
 17307  011C34  2EE8               	decfsz	wreg,f,c
 17308  011C36  D7F9               	goto	u10005
 17309  011C38  51BA               	movf	(??_TCP_Snd+16)& (0+255),w,b
 17310  011C3A  11BE               	iorwf	(??_TCP_Snd+20)& (0+255),w,b
 17311  011C3C  6FC2               	movwf	(??_TCP_Snd+24)& (0+255),b
 17312  011C3E  51BB               	movf	(??_TCP_Snd+17)& (0+255),w,b
 17313  011C40  11BF               	iorwf	(??_TCP_Snd+21)& (0+255),w,b
 17314  011C42  6FC3               	movwf	(??_TCP_Snd+25)& (0+255),b
 17315  011C44  51BC               	movf	(??_TCP_Snd+18)& (0+255),w,b
 17316  011C46  11C0               	iorwf	(??_TCP_Snd+22)& (0+255),w,b
 17317  011C48  6FC4               	movwf	(??_TCP_Snd+26)& (0+255),b
 17318  011C4A  51BD               	movf	(??_TCP_Snd+19)& (0+255),w,b
 17319  011C4C  11C1               	iorwf	(??_TCP_Snd+23)& (0+255),w,b
 17320  011C4E  6FC5               	movwf	(??_TCP_Snd+27)& (0+255),b
 17321  011C50  51B2               	movf	(??_TCP_Snd+8)& (0+255),w,b
 17322  011C52  11C2               	iorwf	(??_TCP_Snd+24)& (0+255),w,b
 17323  011C54  6FC6               	movwf	(??_TCP_Snd+28)& (0+255),b
 17324  011C56  51B3               	movf	(??_TCP_Snd+9)& (0+255),w,b
 17325  011C58  11C3               	iorwf	(??_TCP_Snd+25)& (0+255),w,b
 17326  011C5A  6FC7               	movwf	(??_TCP_Snd+29)& (0+255),b
 17327  011C5C  51B4               	movf	(??_TCP_Snd+10)& (0+255),w,b
 17328  011C5E  11C4               	iorwf	(??_TCP_Snd+26)& (0+255),w,b
 17329  011C60  6FC8               	movwf	(??_TCP_Snd+30)& (0+255),b
 17330  011C62  51B5               	movf	(??_TCP_Snd+11)& (0+255),w,b
 17331  011C64  11C5               	iorwf	(??_TCP_Snd+27)& (0+255),w,b
 17332  011C66  6FC9               	movwf	(??_TCP_Snd+31)& (0+255),b
 17333  011C68  51AE               	movf	(??_TCP_Snd+4)& (0+255),w,b
 17334  011C6A  11C6               	iorwf	(??_TCP_Snd+28)& (0+255),w,b
 17335  011C6C  6FD7               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 17336  011C6E  51AF               	movf	(??_TCP_Snd+5)& (0+255),w,b
 17337  011C70  11C7               	iorwf	(??_TCP_Snd+29)& (0+255),w,b
 17338  011C72  6FD8               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 17339  011C74  51B0               	movf	(??_TCP_Snd+6)& (0+255),w,b
 17340  011C76  11C8               	iorwf	(??_TCP_Snd+30)& (0+255),w,b
 17341  011C78  6FD9               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 17342  011C7A  51B1               	movf	(??_TCP_Snd+7)& (0+255),w,b
 17343  011C7C  11C9               	iorwf	(??_TCP_Snd+31)& (0+255),w,b
 17344  011C7E  6FDA               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 17345                           
 17346                           ; BSR set to: 0
 17347                           ;tcpv4.c: 210: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 17348  011C80  EE20 F00C          	lfsr	2,12
 17349  011C84  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17350  011C86  26D9               	addwf	fsr2l,f,c
 17351  011C88  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17352  011C8A  22DA               	addwfc	fsr2h,f,c
 17353  011C8C  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 17354  011C90  CFDE F0AB          	movff	postinc2,??_TCP_Snd+1
 17355  011C94  CFDE F0AC          	movff	postinc2,??_TCP_Snd+2
 17356  011C98  CFDE F0AD          	movff	postinc2,??_TCP_Snd+3
 17357  011C9C  0EFF               	movlw	255
 17358  011C9E  15AA               	andwf	??_TCP_Snd& (0+255),w,b
 17359  011CA0  6FAE               	movwf	(??_TCP_Snd+4)& (0+255),b
 17360  011CA2  0E00               	movlw	0
 17361  011CA4  15AB               	andwf	(??_TCP_Snd+1)& (0+255),w,b
 17362  011CA6  6FAF               	movwf	(??_TCP_Snd+5)& (0+255),b
 17363  011CA8  0E00               	movlw	0
 17364  011CAA  15AC               	andwf	(??_TCP_Snd+2)& (0+255),w,b
 17365  011CAC  6FB0               	movwf	(??_TCP_Snd+6)& (0+255),b
 17366  011CAE  0E00               	movlw	0
 17367  011CB0  15AD               	andwf	(??_TCP_Snd+3)& (0+255),w,b
 17368  011CB2  6FB1               	movwf	(??_TCP_Snd+7)& (0+255),b
 17369  011CB4  C0AE  F0B1         	movff	??_TCP_Snd+4,??_TCP_Snd+7
 17370  011CB8  6BB0               	clrf	(??_TCP_Snd+6)& (0+255),b
 17371  011CBA  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 17372  011CBC  6BAE               	clrf	(??_TCP_Snd+4)& (0+255),b
 17373  011CBE  EE20 F00C          	lfsr	2,12
 17374  011CC2  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17375  011CC4  26D9               	addwf	fsr2l,f,c
 17376  011CC6  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17377  011CC8  22DA               	addwfc	fsr2h,f,c
 17378  011CCA  0E00               	movlw	0
 17379  011CCC  14DE               	andwf	postinc2,w,c
 17380  011CCE  6FB2               	movwf	(??_TCP_Snd+8)& (0+255),b
 17381  011CD0  0EFF               	movlw	255
 17382  011CD2  14DE               	andwf	postinc2,w,c
 17383  011CD4  6FB3               	movwf	(??_TCP_Snd+9)& (0+255),b
 17384  011CD6  0E00               	movlw	0
 17385  011CD8  14DE               	andwf	postinc2,w,c
 17386  011CDA  6FB4               	movwf	(??_TCP_Snd+10)& (0+255),b
 17387  011CDC  0E00               	movlw	0
 17388  011CDE  14DE               	andwf	postinc2,w,c
 17389  011CE0  6FB5               	movwf	(??_TCP_Snd+11)& (0+255),b
 17390  011CE2  C0B4  F0B5         	movff	??_TCP_Snd+10,??_TCP_Snd+11
 17391  011CE6  C0B3  F0B4         	movff	??_TCP_Snd+9,??_TCP_Snd+10
 17392  011CEA  C0B2  F0B3         	movff	??_TCP_Snd+8,??_TCP_Snd+9
 17393  011CEE  6BB2               	clrf	(??_TCP_Snd+8)& (0+255),b
 17394  011CF0  EE20 F00C          	lfsr	2,12
 17395  011CF4  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17396  011CF6  26D9               	addwf	fsr2l,f,c
 17397  011CF8  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17398  011CFA  22DA               	addwfc	fsr2h,f,c
 17399  011CFC  CFDE F0B6          	movff	postinc2,??_TCP_Snd+12
 17400  011D00  CFDE F0B7          	movff	postinc2,??_TCP_Snd+13
 17401  011D04  CFDE F0B8          	movff	postinc2,??_TCP_Snd+14
 17402  011D08  CFDE F0B9          	movff	postinc2,??_TCP_Snd+15
 17403  011D0C  C0B7  F0B6         	movff	??_TCP_Snd+13,??_TCP_Snd+12
 17404  011D10  C0B8  F0B7         	movff	??_TCP_Snd+14,??_TCP_Snd+13
 17405  011D14  C0B9  F0B8         	movff	??_TCP_Snd+15,??_TCP_Snd+14
 17406  011D18  6BB9               	clrf	(??_TCP_Snd+15)& (0+255),b
 17407  011D1A  0E00               	movlw	0
 17408  011D1C  15B6               	andwf	(??_TCP_Snd+12)& (0+255),w,b
 17409  011D1E  6FBA               	movwf	(??_TCP_Snd+16)& (0+255),b
 17410  011D20  0EFF               	movlw	255
 17411  011D22  15B7               	andwf	(??_TCP_Snd+13)& (0+255),w,b
 17412  011D24  6FBB               	movwf	(??_TCP_Snd+17)& (0+255),b
 17413  011D26  0E00               	movlw	0
 17414  011D28  15B8               	andwf	(??_TCP_Snd+14)& (0+255),w,b
 17415  011D2A  6FBC               	movwf	(??_TCP_Snd+18)& (0+255),b
 17416  011D2C  0E00               	movlw	0
 17417  011D2E  15B9               	andwf	(??_TCP_Snd+15)& (0+255),w,b
 17418  011D30  6FBD               	movwf	(??_TCP_Snd+19)& (0+255),b
 17419  011D32  EE20 F00C          	lfsr	2,12
 17420  011D36  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17421  011D38  26D9               	addwf	fsr2l,f,c
 17422  011D3A  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17423  011D3C  22DA               	addwfc	fsr2h,f,c
 17424  011D3E  0E00               	movlw	0
 17425  011D40  14DE               	andwf	postinc2,w,c
 17426  011D42  6FBE               	movwf	(??_TCP_Snd+20)& (0+255),b
 17427  011D44  0E00               	movlw	0
 17428  011D46  14DE               	andwf	postinc2,w,c
 17429  011D48  6FBF               	movwf	(??_TCP_Snd+21)& (0+255),b
 17430  011D4A  0E00               	movlw	0
 17431  011D4C  14DE               	andwf	postinc2,w,c
 17432  011D4E  6FC0               	movwf	(??_TCP_Snd+22)& (0+255),b
 17433  011D50  0EFF               	movlw	255
 17434  011D52  14DE               	andwf	postinc2,w,c
 17435  011D54  6FC1               	movwf	(??_TCP_Snd+23)& (0+255),b
 17436  011D56  0E19               	movlw	25
 17437  011D58  D005               	goto	u10010
 17438  011D5A                     u10015:
 17439  011D5A  90D8               	bcf	status,0,c
 17440  011D5C  33C1               	rrcf	(??_TCP_Snd+23)& (0+255),f,b
 17441  011D5E  33C0               	rrcf	(??_TCP_Snd+22)& (0+255),f,b
 17442  011D60  33BF               	rrcf	(??_TCP_Snd+21)& (0+255),f,b
 17443  011D62  33BE               	rrcf	(??_TCP_Snd+20)& (0+255),f,b
 17444  011D64                     u10010:
 17445  011D64  2EE8               	decfsz	wreg,f,c
 17446  011D66  D7F9               	goto	u10015
 17447  011D68  51BA               	movf	(??_TCP_Snd+16)& (0+255),w,b
 17448  011D6A  11BE               	iorwf	(??_TCP_Snd+20)& (0+255),w,b
 17449  011D6C  6FC2               	movwf	(??_TCP_Snd+24)& (0+255),b
 17450  011D6E  51BB               	movf	(??_TCP_Snd+17)& (0+255),w,b
 17451  011D70  11BF               	iorwf	(??_TCP_Snd+21)& (0+255),w,b
 17452  011D72  6FC3               	movwf	(??_TCP_Snd+25)& (0+255),b
 17453  011D74  51BC               	movf	(??_TCP_Snd+18)& (0+255),w,b
 17454  011D76  11C0               	iorwf	(??_TCP_Snd+22)& (0+255),w,b
 17455  011D78  6FC4               	movwf	(??_TCP_Snd+26)& (0+255),b
 17456  011D7A  51BD               	movf	(??_TCP_Snd+19)& (0+255),w,b
 17457  011D7C  11C1               	iorwf	(??_TCP_Snd+23)& (0+255),w,b
 17458  011D7E  6FC5               	movwf	(??_TCP_Snd+27)& (0+255),b
 17459  011D80  51B2               	movf	(??_TCP_Snd+8)& (0+255),w,b
 17460  011D82  11C2               	iorwf	(??_TCP_Snd+24)& (0+255),w,b
 17461  011D84  6FC6               	movwf	(??_TCP_Snd+28)& (0+255),b
 17462  011D86  51B3               	movf	(??_TCP_Snd+9)& (0+255),w,b
 17463  011D88  11C3               	iorwf	(??_TCP_Snd+25)& (0+255),w,b
 17464  011D8A  6FC7               	movwf	(??_TCP_Snd+29)& (0+255),b
 17465  011D8C  51B4               	movf	(??_TCP_Snd+10)& (0+255),w,b
 17466  011D8E  11C4               	iorwf	(??_TCP_Snd+26)& (0+255),w,b
 17467  011D90  6FC8               	movwf	(??_TCP_Snd+30)& (0+255),b
 17468  011D92  51B5               	movf	(??_TCP_Snd+11)& (0+255),w,b
 17469  011D94  11C5               	iorwf	(??_TCP_Snd+27)& (0+255),w,b
 17470  011D96  6FC9               	movwf	(??_TCP_Snd+31)& (0+255),b
 17471  011D98  51AE               	movf	(??_TCP_Snd+4)& (0+255),w,b
 17472  011D9A  11C6               	iorwf	(??_TCP_Snd+28)& (0+255),w,b
 17473  011D9C  6FDB               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 17474  011D9E  51AF               	movf	(??_TCP_Snd+5)& (0+255),w,b
 17475  011DA0  11C7               	iorwf	(??_TCP_Snd+29)& (0+255),w,b
 17476  011DA2  6FDC               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 17477  011DA4  51B0               	movf	(??_TCP_Snd+6)& (0+255),w,b
 17478  011DA6  11C8               	iorwf	(??_TCP_Snd+30)& (0+255),w,b
 17479  011DA8  6FDD               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 17480  011DAA  51B1               	movf	(??_TCP_Snd+7)& (0+255),w,b
 17481  011DAC  11C9               	iorwf	(??_TCP_Snd+31)& (0+255),w,b
 17482  011DAE  6FDE               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;tcpv4.c: 212: txHeader.ns = 0;
 17486  011DB0  91DF               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 17487                           
 17488                           ; BSR set to: 0
 17489                           ;tcpv4.c: 213: txHeader.reserved = 0;
 17490  011DB2  93DF               	bcf	(TCP_Snd@txHeader+12)& (0+255),1,b
 17491  011DB4  95DF               	bcf	(TCP_Snd@txHeader+12)& (0+255),2,b
 17492  011DB6  97DF               	bcf	(TCP_Snd@txHeader+12)& (0+255),3,b
 17493                           
 17494                           ;tcpv4.c: 214: txHeader.dataOffset = 5;
 17495  011DB8  51DF               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 17496  011DBA  0B0F               	andlw	-241
 17497  011DBC  0950               	iorlw	80
 17498  011DBE  6FDF               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;tcpv4.c: 215: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 17502  011DC0  EE20 F01A          	lfsr	2,26
 17503  011DC4  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17504  011DC6  26D9               	addwf	fsr2l,f,c
 17505  011DC8  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17506  011DCA  22DA               	addwfc	fsr2h,f,c
 17507  011DCC  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 17508  011DD0  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 17509  011DD4  51AA               	movf	??_TCP_Snd& (0+255),w,b
 17510  011DD6  6FAD               	movwf	(??_TCP_Snd+3)& (0+255),b
 17511  011DD8  6BAC               	clrf	(??_TCP_Snd+2)& (0+255),b
 17512  011DDA  EE20 F01A          	lfsr	2,26
 17513  011DDE  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17514  011DE0  26D9               	addwf	fsr2l,f,c
 17515  011DE2  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17516  011DE4  22DA               	addwfc	fsr2h,f,c
 17517  011DE6  CFDE F0AE          	movff	postinc2,??_TCP_Snd+4
 17518  011DEA  CFDD F0AF          	movff	postdec2,??_TCP_Snd+5
 17519  011DEE  C0AF  F0AE         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 17520  011DF2  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 17521  011DF4  0EFF               	movlw	255
 17522  011DF6  17AE               	andwf	(??_TCP_Snd+4)& (0+255),f,b
 17523  011DF8  0E00               	movlw	0
 17524  011DFA  17AF               	andwf	(??_TCP_Snd+5)& (0+255),f,b
 17525  011DFC  51AC               	movf	(??_TCP_Snd+2)& (0+255),w,b
 17526  011DFE  11AE               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 17527  011E00  6FE1               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 17528  011E02  51AD               	movf	(??_TCP_Snd+3)& (0+255),w,b
 17529  011E04  11AF               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 17530  011E06  6FE2               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;tcpv4.c: 216: txHeader.checksum = 0;
 17534  011E08  0E00               	movlw	0
 17535  011E0A  6FE4               	movwf	(TCP_Snd@txHeader+17)& (0+255),b
 17536  011E0C  0E00               	movlw	0
 17537  011E0E  6FE3               	movwf	(TCP_Snd@txHeader+16)& (0+255),b
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;tcpv4.c: 217: txHeader.urgentPtr = 0;
 17541  011E10  0E00               	movlw	0
 17542  011E12  6FE6               	movwf	(TCP_Snd@txHeader+19)& (0+255),b
 17543  011E14  0E00               	movlw	0
 17544  011E16  6FE5               	movwf	(TCP_Snd@txHeader+18)& (0+255),b
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;tcpv4.c: 219: if ((tcbPtr->flags) & (0x02U | 0x04U))
 17548  011E18  EE20 F038          	lfsr	2,56
 17549  011E1C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17550  011E1E  26D9               	addwf	fsr2l,f,c
 17551  011E20  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17552  011E22  22DA               	addwfc	fsr2h,f,c
 17553  011E24  50DF               	movf	indf2,w,c
 17554  011E26  6FAA               	movwf	??_TCP_Snd& (0+255),b
 17555  011E28  0E06               	movlw	6
 17556  011E2A  17AA               	andwf	??_TCP_Snd& (0+255),f,b
 17557  011E2C  A4D8               	btfss	status,2,c
 17558  011E2E  D009               	goto	u10030
 17559                           
 17560                           ; BSR set to: 0
 17561                           ;tcpv4.c: 223: else if(tcbPtr->payloadSave == 1)
 17562                           
 17563                           ; BSR set to: 0
 17564                           
 17565                           ;tcpv4.c: 222: }
 17566                           
 17567                           ; BSR set to: 0
 17568                           ;tcpv4.c: 220: {
 17569                           ;tcpv4.c: 221: tcpDataLength = 0;
 17570  011E30  EE20 F02C          	lfsr	2,44
 17571  011E34  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17572  011E36  26D9               	addwf	fsr2l,f,c
 17573  011E38  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17574  011E3A  22DA               	addwfc	fsr2h,f,c
 17575  011E3C  04DE               	decf	postinc2,w,c
 17576  011E3E  A4D8               	btfss	status,2,c
 17577  011E40  D005               	goto	l1603
 17578  011E42                     u10030:
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;tcpv4.c: 224: {
 17582                           ;tcpv4.c: 225: tcpDataLength = 0;
 17583  011E42  0E00               	movlw	0
 17584  011E44  6FD2               	movwf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 17585  011E46  0E00               	movlw	0
 17586  011E48  6FD1               	movwf	TCP_Snd@tcpDataLength& (0+255),b
 17587                           
 17588                           ;tcpv4.c: 226: }else
 17589  011E4A  D0A9               	goto	l1609
 17590  011E4C                     l1603:
 17591                           
 17592                           ; BSR set to: 0
 17593                           ;tcpv4.c: 227: {
 17594                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesSent;
 17595                           
 17596                           ; BSR set to: 0
 17597  011E4C  EE20 F02A          	lfsr	2,42
 17598  011E50  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17599  011E52  26D9               	addwf	fsr2l,f,c
 17600  011E54  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17601  011E56  22DA               	addwfc	fsr2h,f,c
 17602  011E58  CFDE F0D1          	movff	postinc2,TCP_Snd@tcpDataLength
 17603  011E5C  CFDD F0D2          	movff	postdec2,TCP_Snd@tcpDataLength+1
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 17607  011E60  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 17608  011E62  11D2               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 17609  011E64  B4D8               	btfsc	status,2,c
 17610  011E66  D09B               	goto	l1609
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;tcpv4.c: 231: {
 17614                           ;tcpv4.c: 232: if(tcbPtr->remoteWnd == 0)
 17615  011E68  EE20 F018          	lfsr	2,24
 17616  011E6C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17617  011E6E  26D9               	addwf	fsr2l,f,c
 17618  011E70  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17619  011E72  22DA               	addwfc	fsr2h,f,c
 17620  011E74  50DE               	movf	postinc2,w,c
 17621  011E76  10DE               	iorwf	postinc2,w,c
 17622  011E78  A4D8               	btfss	status,2,c
 17623  011E7A  D00A               	goto	l1606
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;tcpv4.c: 233: {
 17627                           ;tcpv4.c: 234: tcbPtr->remoteWnd = 1;
 17628  011E7C  EE20 F018          	lfsr	2,24
 17629  011E80  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17630  011E82  26D9               	addwf	fsr2l,f,c
 17631  011E84  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17632  011E86  22DA               	addwfc	fsr2h,f,c
 17633  011E88  0E01               	movlw	1
 17634  011E8A  6EDE               	movwf	postinc2,c
 17635  011E8C  0E00               	movlw	0
 17636  011E8E  6EDD               	movwf	postdec2,c
 17637  011E90                     l1606:
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;tcpv4.c: 235: }
 17641                           ;tcpv4.c: 236: if(tcpDataLength > tcbPtr->remoteWnd)
 17642  011E90  EE20 F018          	lfsr	2,24
 17643  011E94  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17644  011E96  26D9               	addwf	fsr2l,f,c
 17645  011E98  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17646  011E9A  22DA               	addwfc	fsr2h,f,c
 17647  011E9C  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 17648  011E9E  5CDE               	subwf	postinc2,w,c
 17649  011EA0  51D2               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 17650  011EA2  58DE               	subwfb	postinc2,w,c
 17651  011EA4  B0D8               	btfsc	status,0,c
 17652  011EA6  D00A               	goto	l1607
 17653                           
 17654                           ; BSR set to: 0
 17655                           ;tcpv4.c: 237: {
 17656                           ;tcpv4.c: 238: tcpDataLength = tcbPtr->remoteWnd;
 17657  011EA8  EE20 F018          	lfsr	2,24
 17658  011EAC  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17659  011EAE  26D9               	addwf	fsr2l,f,c
 17660  011EB0  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17661  011EB2  22DA               	addwfc	fsr2h,f,c
 17662  011EB4  CFDE F0D1          	movff	postinc2,TCP_Snd@tcpDataLength
 17663  011EB8  CFDD F0D2          	movff	postdec2,TCP_Snd@tcpDataLength+1
 17664  011EBC                     l1607:
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;tcpv4.c: 239: }
 17668                           ;tcpv4.c: 241: if(tcpDataLength > tcbPtr->mss)
 17669  011EBC  EE20 F01C          	lfsr	2,28
 17670  011EC0  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17671  011EC2  26D9               	addwf	fsr2l,f,c
 17672  011EC4  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17673  011EC6  22DA               	addwfc	fsr2h,f,c
 17674  011EC8  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 17675  011ECA  5CDE               	subwf	postinc2,w,c
 17676  011ECC  51D2               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 17677  011ECE  58DE               	subwfb	postinc2,w,c
 17678  011ED0  B0D8               	btfsc	status,0,c
 17679  011ED2  D00A               	goto	l1608
 17680                           
 17681                           ; BSR set to: 0
 17682                           ;tcpv4.c: 242: {
 17683                           ;tcpv4.c: 243: tcpDataLength = tcbPtr->mss;
 17684  011ED4  EE20 F01C          	lfsr	2,28
 17685  011ED8  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17686  011EDA  26D9               	addwf	fsr2l,f,c
 17687  011EDC  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17688  011EDE  22DA               	addwfc	fsr2h,f,c
 17689  011EE0  CFDE F0D1          	movff	postinc2,TCP_Snd@tcpDataLength
 17690  011EE4  CFDD F0D2          	movff	postdec2,TCP_Snd@tcpDataLength+1
 17691  011EE8                     l1608:
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;tcpv4.c: 244: }
 17695                           ;tcpv4.c: 245: data = tcbPtr->txBufferPtr;
 17696  011EE8  EE20 F025          	lfsr	2,37
 17697  011EEC  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17698  011EEE  26D9               	addwf	fsr2l,f,c
 17699  011EF0  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17700  011EF2  22DA               	addwfc	fsr2h,f,c
 17701  011EF4  CFDE F0CA          	movff	postinc2,TCP_Snd@data
 17702  011EF8  CFDD F0CB          	movff	postdec2,TCP_Snd@data+1
 17703                           
 17704                           ;tcpv4.c: 248: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 17705  011EFC  EE20 F025          	lfsr	2,37
 17706  011F00  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17707  011F02  26D9               	addwf	fsr2l,f,c
 17708  011F04  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17709  011F06  22DA               	addwfc	fsr2h,f,c
 17710  011F08  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 17711  011F0C  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 17712  011F10  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 17713  011F12  27AA               	addwf	??_TCP_Snd& (0+255),f,b
 17714  011F14  51D2               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 17715  011F16  23AB               	addwfc	(??_TCP_Snd+1)& (0+255),f,b
 17716  011F18  EE20 F025          	lfsr	2,37
 17717  011F1C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17718  011F1E  26D9               	addwf	fsr2l,f,c
 17719  011F20  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17720  011F22  22DA               	addwfc	fsr2h,f,c
 17721  011F24  C0AA  FFDE         	movff	??_TCP_Snd,postinc2
 17722  011F28  C0AB  FFDD         	movff	??_TCP_Snd+1,postdec2
 17723                           
 17724                           ;tcpv4.c: 249: tcbPtr->bytesToSend = tcbPtr->bytesSent - tcpDataLength;
 17725  011F2C  EE20 F02A          	lfsr	2,42
 17726  011F30  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17727  011F32  26D9               	addwf	fsr2l,f,c
 17728  011F34  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17729  011F36  22DA               	addwfc	fsr2h,f,c
 17730  011F38  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 17731  011F3C  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 17732  011F40  C0D1  F0AC         	movff	TCP_Snd@tcpDataLength,??_TCP_Snd+2
 17733  011F44  C0D2  F0AD         	movff	TCP_Snd@tcpDataLength+1,??_TCP_Snd+3
 17734  011F48  1FAC               	comf	(??_TCP_Snd+2)& (0+255),f,b
 17735  011F4A  1FAD               	comf	(??_TCP_Snd+3)& (0+255),f,b
 17736  011F4C  4BAC               	infsnz	(??_TCP_Snd+2)& (0+255),f,b
 17737  011F4E  2BAD               	incf	(??_TCP_Snd+3)& (0+255),f,b
 17738  011F50  51AA               	movf	??_TCP_Snd& (0+255),w,b
 17739  011F52  27AC               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 17740  011F54  51AB               	movf	(??_TCP_Snd+1)& (0+255),w,b
 17741  011F56  23AD               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 17742  011F58  EE20 F027          	lfsr	2,39
 17743  011F5C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17744  011F5E  26D9               	addwf	fsr2l,f,c
 17745  011F60  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17746  011F62  22DA               	addwfc	fsr2h,f,c
 17747  011F64  C0AC  FFDE         	movff	??_TCP_Snd+2,postinc2
 17748  011F68  C0AD  FFDD         	movff	??_TCP_Snd+3,postdec2
 17749                           
 17750                           ;tcpv4.c: 251: if (tcbPtr->bytesToSend == 0)
 17751  011F6C  EE20 F027          	lfsr	2,39
 17752  011F70  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17753  011F72  26D9               	addwf	fsr2l,f,c
 17754  011F74  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17755  011F76  22DA               	addwfc	fsr2h,f,c
 17756  011F78  50DE               	movf	postinc2,w,c
 17757  011F7A  10DE               	iorwf	postinc2,w,c
 17758  011F7C  A4D8               	btfss	status,2,c
 17759  011F7E  D00F               	goto	l1609
 17760                           
 17761                           ; BSR set to: 0
 17762                           ;tcpv4.c: 252: {
 17763                           ;tcpv4.c: 253: tcbPtr->flags = tcbPtr->flags | 0x08U;
 17764  011F80  EE20 F038          	lfsr	2,56
 17765  011F84  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17766  011F86  26D9               	addwf	fsr2l,f,c
 17767  011F88  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17768  011F8A  22DA               	addwfc	fsr2h,f,c
 17769  011F8C  EE10 F038          	lfsr	1,56
 17770  011F90  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17771  011F92  26E1               	addwf	fsr1l,f,c
 17772  011F94  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17773  011F96  22E2               	addwfc	fsr1h,f,c
 17774  011F98  50E7               	movf	indf1,w,c
 17775  011F9A  0908               	iorlw	8
 17776  011F9C  6EDF               	movwf	indf2,c
 17777  011F9E                     l1609:
 17778                           
 17779                           ; BSR set to: 0
 17780                           ;tcpv4.c: 254: }
 17781                           ;tcpv4.c: 255: }
 17782                           ;tcpv4.c: 256: }
 17783                           ;tcpv4.c: 258: txHeader.flags = tcbPtr->flags;
 17784                           
 17785                           ; BSR set to: 0
 17786                           
 17787                           ; BSR set to: 0
 17788                           
 17789                           ; BSR set to: 0
 17790                           
 17791                           ; BSR set to: 0
 17792  011F9E  EE20 F038          	lfsr	2,56
 17793  011FA2  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17794  011FA4  26D9               	addwf	fsr2l,f,c
 17795  011FA6  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17796  011FA8  22DA               	addwfc	fsr2h,f,c
 17797  011FAA  50DF               	movf	indf2,w,c
 17798  011FAC  6FE0               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;tcpv4.c: 259: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 17802  011FAE  0E14               	movlw	20
 17803  011FB0  25D1               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 17804  011FB2  6FCE               	movwf	TCP_Snd@payloadLength& (0+255),b
 17805  011FB4  0E00               	movlw	0
 17806  011FB6  21D2               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 17807  011FB8  6FCF               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 17808                           
 17809                           ; BSR set to: 0
 17810                           ;tcpv4.c: 261: ret = IPv4_Start(tcbPtr->destIP, TCP_TCPIP);
 17811  011FBA  EE20 F002          	lfsr	2,2
 17812  011FBE  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17813  011FC0  26D9               	addwf	fsr2l,f,c
 17814  011FC2  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17815  011FC4  22DA               	addwfc	fsr2h,f,c
 17816  011FC6  CFDE F031          	movff	postinc2,IPv4_Start@destAddress
 17817  011FCA  CFDE F032          	movff	postinc2,IPv4_Start@destAddress+1
 17818  011FCE  CFDE F033          	movff	postinc2,IPv4_Start@destAddress+2
 17819  011FD2  CFDE F034          	movff	postinc2,IPv4_Start@destAddress+3
 17820  011FD6  0E06               	movlw	6
 17821  011FD8  6E35               	movwf	IPv4_Start@protocol,c
 17822  011FDA  ECB1  F09F         	call	_IPv4_Start	;wreg free
 17823  011FDE  0100               	movlb	0	; () banked
 17824  011FE0  6FD0               	movwf	TCP_Snd@ret& (0+255),b
 17825                           
 17826                           ; BSR set to: 0
 17827                           ;tcpv4.c: 262: if (ret == SUCCESS)
 17828  011FE2  05D0               	decf	TCP_Snd@ret& (0+255),w,b
 17829  011FE4  A4D8               	btfss	status,2,c
 17830  011FE6  D04A               	goto	l1610
 17831                           
 17832                           ; BSR set to: 0
 17833                           ;tcpv4.c: 263: {
 17834                           ;tcpv4.c: 264: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 17835  011FE8  0ED3               	movlw	low TCP_Snd@txHeader
 17836  011FEA  6E13               	movwf	ETH_WriteBlock@buffer,c
 17837  011FEC  0E00               	movlw	high TCP_Snd@txHeader
 17838  011FEE  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 17839  011FF0  0E00               	movlw	0
 17840  011FF2  6E16               	movwf	ETH_WriteBlock@length+1,c
 17841  011FF4  0E14               	movlw	20
 17842  011FF6  6E15               	movwf	ETH_WriteBlock@length,c
 17843  011FF8  EC49  F0B3         	call	_ETH_WriteBlock	;wreg free
 17844                           
 17845                           ;tcpv4.c: 266: if (tcpDataLength > 0)
 17846  011FFC  0100               	movlb	0	; () banked
 17847  011FFE  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 17848  012000  11D2               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 17849  012002  B4D8               	btfsc	status,2,c
 17850  012004  D00A               	goto	l1611
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;tcpv4.c: 267: {
 17854                           ;tcpv4.c: 268: ETH_WriteBlock( data, tcpDataLength);
 17855  012006  C0CA  F013         	movff	TCP_Snd@data,ETH_WriteBlock@buffer
 17856  01200A  C0CB  F014         	movff	TCP_Snd@data+1,ETH_WriteBlock@buffer+1
 17857  01200E  C0D1  F015         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@length
 17858  012012  C0D2  F016         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@length+1
 17859  012016  EC49  F0B3         	call	_ETH_WriteBlock	;wreg free
 17860  01201A                     l1611:
 17861                           
 17862                           ;tcpv4.c: 269: }
 17863                           ;tcpv4.c: 271: cksm = payloadLength + TCP_TCPIP;
 17864  01201A  0E06               	movlw	6
 17865  01201C  0100               	movlb	0	; () banked
 17866  01201E  25CE               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 17867  012020  6FCC               	movwf	TCP_Snd@cksm& (0+255),b
 17868  012022  0E00               	movlw	0
 17869  012024  21CF               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 17870  012026  6FCD               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;tcpv4.c: 273: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 17874  012028  0E00               	movlw	0
 17875  01202A  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 17876  01202C  0E1A               	movlw	26
 17877  01202E  6E25               	movwf	ETH_TxComputeChecksum@position,c
 17878  012030  0E08               	movlw	8
 17879  012032  25CE               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 17880  012034  6E27               	movwf	ETH_TxComputeChecksum@len,c
 17881  012036  0E00               	movlw	0
 17882  012038  21CF               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 17883  01203A  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 17884  01203C  C0CC  F029         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 17885  012040  C0CD  F02A         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 17886  012044  EC91  F0AC         	call	_ETH_TxComputeChecksum	;wreg free
 17887  012048  C025  F0CC         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 17888  01204C  C026  F0CD         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 17889                           
 17890                           ;tcpv4.c: 274: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 17891  012050  0ECC               	movlw	low TCP_Snd@cksm
 17892  012052  6E13               	movwf	ETH_Insert@data,c
 17893  012054  0E00               	movlw	high TCP_Snd@cksm
 17894  012056  6E14               	movwf	ETH_Insert@data+1,c
 17895  012058  0E00               	movlw	0
 17896  01205A  6E16               	movwf	ETH_Insert@len+1,c
 17897  01205C  0E02               	movlw	2
 17898  01205E  6E15               	movwf	ETH_Insert@len,c
 17899  012060  0E00               	movlw	0
 17900  012062  6E18               	movwf	ETH_Insert@offset+1,c
 17901  012064  0E32               	movlw	50
 17902  012066  6E17               	movwf	ETH_Insert@offset,c
 17903  012068  ECB7  F0B1         	call	_ETH_Insert	;wreg free
 17904                           
 17905                           ;tcpv4.c: 276: ret = IPV4_Send(payloadLength);
 17906  01206C  C0CE  F037         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 17907  012070  C0CF  F038         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 17908  012074  ECAE  F0AE         	call	_IPV4_Send	;wreg free
 17909  012078  0100               	movlb	0	; () banked
 17910  01207A  6FD0               	movwf	TCP_Snd@ret& (0+255),b
 17911  01207C                     l1610:
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;tcpv4.c: 278: }
 17915                           ;tcpv4.c: 282: if (ret != SUCCESS)
 17916                           
 17917                           ; BSR set to: 0
 17918  01207C  05D0               	decf	TCP_Snd@ret& (0+255),w,b
 17919  01207E  B4D8               	btfsc	status,2,c
 17920  012080  D025               	goto	l1612
 17921                           
 17922                           ; BSR set to: 0
 17923                           ;tcpv4.c: 283: {
 17924                           ;tcpv4.c: 286: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 17925  012082  EE20 F037          	lfsr	2,55
 17926  012086  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17927  012088  26D9               	addwf	fsr2l,f,c
 17928  01208A  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17929  01208C  22DA               	addwfc	fsr2h,f,c
 17930  01208E  EE10 F037          	lfsr	1,55
 17931  012092  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17932  012094  26E1               	addwf	fsr1l,f,c
 17933  012096  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17934  012098  22E2               	addwfc	fsr1h,f,c
 17935  01209A  50E7               	movf	indf1,w,c
 17936  01209C  6FAA               	movwf	??_TCP_Snd& (0+255),b
 17937  01209E  29AA               	incf	??_TCP_Snd& (0+255),w,b
 17938  0120A0  6EDF               	movwf	indf2,c
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;tcpv4.c: 288: if (tcbPtr->timeout == 0)
 17942  0120A2  EE20 F033          	lfsr	2,51
 17943  0120A6  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17944  0120A8  26D9               	addwf	fsr2l,f,c
 17945  0120AA  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17946  0120AC  22DA               	addwfc	fsr2h,f,c
 17947  0120AE  50DE               	movf	postinc2,w,c
 17948  0120B0  10DE               	iorwf	postinc2,w,c
 17949  0120B2  A4D8               	btfss	status,2,c
 17950  0120B4  D033               	goto	l1614
 17951                           
 17952                           ; BSR set to: 0
 17953                           ;tcpv4.c: 289: {
 17954                           ;tcpv4.c: 290: tcbPtr->timeout = ((unsigned long)1*2);
 17955  0120B6  EE20 F033          	lfsr	2,51
 17956  0120BA  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17957  0120BC  26D9               	addwf	fsr2l,f,c
 17958  0120BE  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17959  0120C0  22DA               	addwfc	fsr2h,f,c
 17960  0120C2  0E02               	movlw	2
 17961  0120C4  6EDE               	movwf	postinc2,c
 17962  0120C6  0E00               	movlw	0
 17963  0120C8  6EDD               	movwf	postdec2,c
 17964                           
 17965                           ; BSR set to: 0
 17966                           ;tcpv4.c: 291: }
 17967                           ;tcpv4.c: 292: }
 17968  0120CA  D028               	goto	l1614
 17969  0120CC                     l1612:
 17970                           
 17971                           ; BSR set to: 0
 17972                           ;tcpv4.c: 293: else
 17973                           ;tcpv4.c: 294: {
 17974                           ;tcpv4.c: 296: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 17975                           
 17976                           ; BSR set to: 0
 17977  0120CC  EE20 F010          	lfsr	2,16
 17978  0120D0  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 17979  0120D2  26D9               	addwf	fsr2l,f,c
 17980  0120D4  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 17981  0120D6  22DA               	addwfc	fsr2h,f,c
 17982  0120D8  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 17983  0120DC  CFDE F0AB          	movff	postinc2,??_TCP_Snd+1
 17984  0120E0  CFDE F0AC          	movff	postinc2,??_TCP_Snd+2
 17985  0120E4  CFDE F0AD          	movff	postinc2,??_TCP_Snd+3
 17986  0120E8  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 17987  0120EA  25AA               	addwf	??_TCP_Snd& (0+255),w,b
 17988  0120EC  6FAE               	movwf	(??_TCP_Snd+4)& (0+255),b
 17989  0120EE  51D2               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 17990  0120F0  21AB               	addwfc	(??_TCP_Snd+1)& (0+255),w,b
 17991  0120F2  6FAF               	movwf	(??_TCP_Snd+5)& (0+255),b
 17992  0120F4  0E00               	movlw	0
 17993  0120F6  21AC               	addwfc	(??_TCP_Snd+2)& (0+255),w,b
 17994  0120F8  6FB0               	movwf	(??_TCP_Snd+6)& (0+255),b
 17995  0120FA  0E00               	movlw	0
 17996  0120FC  21AD               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 17997  0120FE  6FB1               	movwf	(??_TCP_Snd+7)& (0+255),b
 17998  012100  EE20 F010          	lfsr	2,16
 17999  012104  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 18000  012106  26D9               	addwf	fsr2l,f,c
 18001  012108  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 18002  01210A  22DA               	addwfc	fsr2h,f,c
 18003  01210C  C0AE  FFDE         	movff	??_TCP_Snd+4,postinc2
 18004  012110  C0AF  FFDE         	movff	??_TCP_Snd+5,postinc2
 18005  012114  C0B0  FFDE         	movff	??_TCP_Snd+6,postinc2
 18006  012118  C0B1  FFDE         	movff	??_TCP_Snd+7,postinc2
 18007  01211C                     l1614:
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;tcpv4.c: 297: }
 18011                           ;tcpv4.c: 299: return ret;
 18012                           
 18013                           ; BSR set to: 0
 18014  01211C  51D0               	movf	TCP_Snd@ret& (0+255),w,b
 18015  01211E  0012               	return	
 18016  012120                     __end_of_TCP_Snd:
 18017                           	opt stack 0
 18018                           tosu	equ	0xFFF
 18019                           tosh	equ	0xFFE
 18020                           tosl	equ	0xFFD
 18021                           pclath	equ	0xFFA
 18022                           tblptru	equ	0xFF8
 18023                           tblptrh	equ	0xFF7
 18024                           tblptrl	equ	0xFF6
 18025                           tablat	equ	0xFF5
 18026                           prodh	equ	0xFF4
 18027                           prodl	equ	0xFF3
 18028                           intcon	equ	0xFF2
 18029                           indf0	equ	0xFEF
 18030                           postinc0	equ	0xFEE
 18031                           fsr0h	equ	0xFEA
 18032                           fsr0l	equ	0xFE9
 18033                           wreg	equ	0xFE8
 18034                           indf1	equ	0xFE7
 18035                           postinc1	equ	0xFE6
 18036                           postdec1	equ	0xFE5
 18037                           plusw1	equ	0xFE3
 18038                           fsr1h	equ	0xFE2
 18039                           fsr1l	equ	0xFE1
 18040                           indf2	equ	0xFDF
 18041                           postinc2	equ	0xFDE
 18042                           postdec2	equ	0xFDD
 18043                           plusw2	equ	0xFDB
 18044                           fsr2h	equ	0xFDA
 18045                           fsr2l	equ	0xFD9
 18046                           status	equ	0xFD8
 18047                           
 18048 ;; *************** function _TCB_Reset *****************
 18049 ;; Defined at:
 18050 ;;		line 128 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 18051 ;; Parameters:    Size  Location     Type
 18052 ;;  tcbPtr          2   18[COMRAM] PTR struct .
 18053 ;;		 -> NULL(0), 
 18054 ;; Auto vars:     Size  Location     Type
 18055 ;;		None
 18056 ;; Return value:  Size  Location     Type
 18057 ;;                  1    wreg      void 
 18058 ;; Registers used:
 18059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18060 ;; Tracked objects:
 18061 ;;		On entry : 0/0
 18062 ;;		On exit  : 0/0
 18063 ;;		Unchanged: 0/0
 18064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18069 ;;Total ram usage:        2 bytes
 18070 ;; Hardware stack levels used:    1
 18071 ;; Hardware stack levels required when called:    4
 18072 ;; This function calls:
 18073 ;;		Nothing
 18074 ;; This function is called by:
 18075 ;;		_TCP_FiniteStateMachine
 18076 ;;		_TCP_SocketInit
 18077 ;; This function uses a non-reentrant model
 18078 ;;
 18079                           
 18080                           	psect	text64
 18081  015368                     __ptext64:
 18082                           	opt stack 0
 18083  015368                     _TCB_Reset:
 18084                           	opt stack 23
 18085                           
 18086                           ;tcpv4.c: 130: tcbPtr->destIP = 0;
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;incstack = 0
 18090  015368  EE20 F002          	lfsr	2,2
 18091  01536C  5013               	movf	TCB_Reset@tcbPtr,w,c
 18092  01536E  26D9               	addwf	fsr2l,f,c
 18093  015370  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18094  015372  22DA               	addwfc	fsr2h,f,c
 18095  015374  6ADE               	clrf	postinc2,c
 18096  015376  6ADE               	clrf	postinc2,c
 18097  015378  6ADE               	clrf	postinc2,c
 18098  01537A  6ADD               	clrf	postdec2,c
 18099                           
 18100                           ;tcpv4.c: 131: tcbPtr->destPort = 0;
 18101  01537C  EE20 F006          	lfsr	2,6
 18102  015380  5013               	movf	TCB_Reset@tcbPtr,w,c
 18103  015382  26D9               	addwf	fsr2l,f,c
 18104  015384  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18105  015386  22DA               	addwfc	fsr2h,f,c
 18106  015388  0E00               	movlw	0
 18107  01538A  6EDE               	movwf	postinc2,c
 18108  01538C  0E00               	movlw	0
 18109  01538E  6EDD               	movwf	postdec2,c
 18110                           
 18111                           ;tcpv4.c: 132: tcbPtr->localSeqno = 0;
 18112  015390  EE20 F010          	lfsr	2,16
 18113  015394  5013               	movf	TCB_Reset@tcbPtr,w,c
 18114  015396  26D9               	addwf	fsr2l,f,c
 18115  015398  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18116  01539A  22DA               	addwfc	fsr2h,f,c
 18117  01539C  6ADE               	clrf	postinc2,c
 18118  01539E  6ADE               	clrf	postinc2,c
 18119  0153A0  6ADE               	clrf	postinc2,c
 18120  0153A2  6ADD               	clrf	postdec2,c
 18121                           
 18122                           ;tcpv4.c: 133: tcbPtr->localLastAck = 0;
 18123  0153A4  EE20 F014          	lfsr	2,20
 18124  0153A8  5013               	movf	TCB_Reset@tcbPtr,w,c
 18125  0153AA  26D9               	addwf	fsr2l,f,c
 18126  0153AC  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18127  0153AE  22DA               	addwfc	fsr2h,f,c
 18128  0153B0  6ADE               	clrf	postinc2,c
 18129  0153B2  6ADE               	clrf	postinc2,c
 18130  0153B4  6ADE               	clrf	postinc2,c
 18131  0153B6  6ADD               	clrf	postdec2,c
 18132                           
 18133                           ;tcpv4.c: 134: tcbPtr->remoteSeqno = 0;
 18134  0153B8  EE20 F008          	lfsr	2,8
 18135  0153BC  5013               	movf	TCB_Reset@tcbPtr,w,c
 18136  0153BE  26D9               	addwf	fsr2l,f,c
 18137  0153C0  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18138  0153C2  22DA               	addwfc	fsr2h,f,c
 18139  0153C4  6ADE               	clrf	postinc2,c
 18140  0153C6  6ADE               	clrf	postinc2,c
 18141  0153C8  6ADE               	clrf	postinc2,c
 18142  0153CA  6ADD               	clrf	postdec2,c
 18143                           
 18144                           ;tcpv4.c: 135: tcbPtr->remoteAck = 0;
 18145  0153CC  EE20 F00C          	lfsr	2,12
 18146  0153D0  5013               	movf	TCB_Reset@tcbPtr,w,c
 18147  0153D2  26D9               	addwf	fsr2l,f,c
 18148  0153D4  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18149  0153D6  22DA               	addwfc	fsr2h,f,c
 18150  0153D8  6ADE               	clrf	postinc2,c
 18151  0153DA  6ADE               	clrf	postinc2,c
 18152  0153DC  6ADE               	clrf	postinc2,c
 18153  0153DE  6ADD               	clrf	postdec2,c
 18154                           
 18155                           ;tcpv4.c: 136: tcbPtr->remoteWnd = 0;
 18156  0153E0  EE20 F018          	lfsr	2,24
 18157  0153E4  5013               	movf	TCB_Reset@tcbPtr,w,c
 18158  0153E6  26D9               	addwf	fsr2l,f,c
 18159  0153E8  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18160  0153EA  22DA               	addwfc	fsr2h,f,c
 18161  0153EC  0E00               	movlw	0
 18162  0153EE  6EDE               	movwf	postinc2,c
 18163  0153F0  0E00               	movlw	0
 18164  0153F2  6EDD               	movwf	postdec2,c
 18165                           
 18166                           ;tcpv4.c: 138: tcbPtr->timeout = 0;
 18167  0153F4  EE20 F033          	lfsr	2,51
 18168  0153F8  5013               	movf	TCB_Reset@tcbPtr,w,c
 18169  0153FA  26D9               	addwf	fsr2l,f,c
 18170  0153FC  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18171  0153FE  22DA               	addwfc	fsr2h,f,c
 18172  015400  0E00               	movlw	0
 18173  015402  6EDE               	movwf	postinc2,c
 18174  015404  0E00               	movlw	0
 18175  015406  6EDD               	movwf	postdec2,c
 18176                           
 18177                           ;tcpv4.c: 139: tcbPtr->timeoutReloadValue = 0;
 18178  015408  EE20 F035          	lfsr	2,53
 18179  01540C  5013               	movf	TCB_Reset@tcbPtr,w,c
 18180  01540E  26D9               	addwf	fsr2l,f,c
 18181  015410  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18182  015412  22DA               	addwfc	fsr2h,f,c
 18183  015414  0E00               	movlw	0
 18184  015416  6EDE               	movwf	postinc2,c
 18185  015418  0E00               	movlw	0
 18186  01541A  6EDD               	movwf	postdec2,c
 18187                           
 18188                           ;tcpv4.c: 140: tcbPtr->timeoutsCount = 0;
 18189  01541C  EE20 F037          	lfsr	2,55
 18190  015420  5013               	movf	TCB_Reset@tcbPtr,w,c
 18191  015422  26D9               	addwf	fsr2l,f,c
 18192  015424  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18193  015426  22DA               	addwfc	fsr2h,f,c
 18194  015428  0E00               	movlw	0
 18195  01542A  6EDF               	movwf	indf2,c
 18196                           
 18197                           ;tcpv4.c: 141: tcbPtr->flags = 0;
 18198  01542C  EE20 F038          	lfsr	2,56
 18199  015430  5013               	movf	TCB_Reset@tcbPtr,w,c
 18200  015432  26D9               	addwf	fsr2l,f,c
 18201  015434  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18202  015436  22DA               	addwfc	fsr2h,f,c
 18203  015438  0E00               	movlw	0
 18204  01543A  6EDF               	movwf	indf2,c
 18205                           
 18206                           ;tcpv4.c: 143: tcbPtr->localPort = 0;
 18207  01543C  C013  FFD9         	movff	TCB_Reset@tcbPtr,fsr2l
 18208  015440  C014  FFDA         	movff	TCB_Reset@tcbPtr+1,fsr2h
 18209  015444  0E00               	movlw	0
 18210  015446  6EDE               	movwf	postinc2,c
 18211  015448  0E00               	movlw	0
 18212  01544A  6EDD               	movwf	postdec2,c
 18213                           
 18214                           ;tcpv4.c: 144: tcbPtr->bytesSent = 0;
 18215  01544C  EE20 F02A          	lfsr	2,42
 18216  015450  5013               	movf	TCB_Reset@tcbPtr,w,c
 18217  015452  26D9               	addwf	fsr2l,f,c
 18218  015454  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18219  015456  22DA               	addwfc	fsr2h,f,c
 18220  015458  0E00               	movlw	0
 18221  01545A  6EDE               	movwf	postinc2,c
 18222  01545C  0E00               	movlw	0
 18223  01545E  6EDD               	movwf	postdec2,c
 18224                           
 18225                           ;tcpv4.c: 145: tcbPtr->payloadSave = 0;
 18226  015460  EE20 F02C          	lfsr	2,44
 18227  015464  5013               	movf	TCB_Reset@tcbPtr,w,c
 18228  015466  26D9               	addwf	fsr2l,f,c
 18229  015468  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18230  01546A  22DA               	addwfc	fsr2h,f,c
 18231  01546C  0E00               	movlw	0
 18232  01546E  6EDF               	movwf	indf2,c
 18233                           
 18234                           ;tcpv4.c: 146: tcbPtr->socketState = SOCKET_CLOSING;
 18235  015470  EE20 F039          	lfsr	2,57
 18236  015474  5013               	movf	TCB_Reset@tcbPtr,w,c
 18237  015476  26D9               	addwf	fsr2l,f,c
 18238  015478  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 18239  01547A  22DA               	addwfc	fsr2h,f,c
 18240  01547C  0E04               	movlw	4
 18241  01547E  6EDF               	movwf	indf2,c
 18242  015480  0012               	return		;funcret
 18243  015482                     __end_of_TCB_Reset:
 18244                           	opt stack 0
 18245                           tosu	equ	0xFFF
 18246                           tosh	equ	0xFFE
 18247                           tosl	equ	0xFFD
 18248                           pclath	equ	0xFFA
 18249                           tblptru	equ	0xFF8
 18250                           tblptrh	equ	0xFF7
 18251                           tblptrl	equ	0xFF6
 18252                           tablat	equ	0xFF5
 18253                           prodh	equ	0xFF4
 18254                           prodl	equ	0xFF3
 18255                           intcon	equ	0xFF2
 18256                           indf0	equ	0xFEF
 18257                           postinc0	equ	0xFEE
 18258                           fsr0h	equ	0xFEA
 18259                           fsr0l	equ	0xFE9
 18260                           wreg	equ	0xFE8
 18261                           indf1	equ	0xFE7
 18262                           postinc1	equ	0xFE6
 18263                           postdec1	equ	0xFE5
 18264                           plusw1	equ	0xFE3
 18265                           fsr1h	equ	0xFE2
 18266                           fsr1l	equ	0xFE1
 18267                           indf2	equ	0xFDF
 18268                           postinc2	equ	0xFDE
 18269                           postdec2	equ	0xFDD
 18270                           plusw2	equ	0xFDB
 18271                           fsr2h	equ	0xFDA
 18272                           fsr2l	equ	0xFD9
 18273                           status	equ	0xFD8
 18274                           
 18275 ;; *************** function _IPV4_SaveStartPosition *****************
 18276 ;; Defined at:
 18277 ;;		line 282 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 18278 ;; Parameters:    Size  Location     Type
 18279 ;;		None
 18280 ;; Auto vars:     Size  Location     Type
 18281 ;;		None
 18282 ;; Return value:  Size  Location     Type
 18283 ;;                  1    wreg      void 
 18284 ;; Registers used:
 18285 ;;		cstack
 18286 ;; Tracked objects:
 18287 ;;		On entry : 0/0
 18288 ;;		On exit  : 0/0
 18289 ;;		Unchanged: 0/0
 18290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18295 ;;Total ram usage:        0 bytes
 18296 ;; Hardware stack levels used:    1
 18297 ;; Hardware stack levels required when called:    5
 18298 ;; This function calls:
 18299 ;;		_ETH_GetReadPtr
 18300 ;; This function is called by:
 18301 ;;		_IPV4_Packet
 18302 ;; This function uses a non-reentrant model
 18303 ;;
 18304                           
 18305                           	psect	text65
 18306  016E90                     __ptext65:
 18307                           	opt stack 0
 18308  016E90                     _IPV4_SaveStartPosition:
 18309                           	opt stack 22
 18310                           
 18311                           ;ipv4.c: 284: ipv4StartPosition = ETH_GetReadPtr();
 18312                           
 18313                           ;incstack = 0
 18314  016E90  EC7B  F0B7         	call	_ETH_GetReadPtr	;wreg free
 18315  016E94  C013  F252         	movff	?_ETH_GetReadPtr,_ipv4StartPosition
 18316  016E98  C014  F253         	movff	?_ETH_GetReadPtr+1,_ipv4StartPosition+1
 18317  016E9C  0012               	return		;funcret
 18318  016E9E                     __end_of_IPV4_SaveStartPosition:
 18319                           	opt stack 0
 18320                           tosu	equ	0xFFF
 18321                           tosh	equ	0xFFE
 18322                           tosl	equ	0xFFD
 18323                           pclath	equ	0xFFA
 18324                           tblptru	equ	0xFF8
 18325                           tblptrh	equ	0xFF7
 18326                           tblptrl	equ	0xFF6
 18327                           tablat	equ	0xFF5
 18328                           prodh	equ	0xFF4
 18329                           prodl	equ	0xFF3
 18330                           intcon	equ	0xFF2
 18331                           indf0	equ	0xFEF
 18332                           postinc0	equ	0xFEE
 18333                           fsr0h	equ	0xFEA
 18334                           fsr0l	equ	0xFE9
 18335                           wreg	equ	0xFE8
 18336                           indf1	equ	0xFE7
 18337                           postinc1	equ	0xFE6
 18338                           postdec1	equ	0xFE5
 18339                           plusw1	equ	0xFE3
 18340                           fsr1h	equ	0xFE2
 18341                           fsr1l	equ	0xFE1
 18342                           indf2	equ	0xFDF
 18343                           postinc2	equ	0xFDE
 18344                           postdec2	equ	0xFDD
 18345                           plusw2	equ	0xFDB
 18346                           fsr2h	equ	0xFDA
 18347                           fsr2l	equ	0xFD9
 18348                           status	equ	0xFD8
 18349                           
 18350 ;; *************** function _ETH_GetReadPtr *****************
 18351 ;; Defined at:
 18352 ;;		line 1080 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18353 ;; Parameters:    Size  Location     Type
 18354 ;;		None
 18355 ;; Auto vars:     Size  Location     Type
 18356 ;;		None
 18357 ;; Return value:  Size  Location     Type
 18358 ;;                  2   18[COMRAM] unsigned int 
 18359 ;; Registers used:
 18360 ;;		None
 18361 ;; Tracked objects:
 18362 ;;		On entry : 0/0
 18363 ;;		On exit  : 0/0
 18364 ;;		Unchanged: 0/0
 18365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18370 ;;Total ram usage:        2 bytes
 18371 ;; Hardware stack levels used:    1
 18372 ;; Hardware stack levels required when called:    4
 18373 ;; This function calls:
 18374 ;;		Nothing
 18375 ;; This function is called by:
 18376 ;;		_IPV4_SaveStartPosition
 18377 ;; This function uses a non-reentrant model
 18378 ;;
 18379                           
 18380                           	psect	text66
 18381  016EF6                     __ptext66:
 18382                           	opt stack 0
 18383  016EF6                     _ETH_GetReadPtr:
 18384                           	opt stack 22
 18385                           
 18386                           ;ETHxxJ6x_driver.c: 1082: return(ERDPT);
 18387                           
 18388                           ;incstack = 0
 18389  016EF6  CF7A F013          	movff	3962,?_ETH_GetReadPtr	;volatile
 18390  016EFA  CF7B F014          	movff	3963,?_ETH_GetReadPtr+1	;volatile
 18391  016EFE  0012               	return		;funcret
 18392  016F00                     __end_of_ETH_GetReadPtr:
 18393                           	opt stack 0
 18394                           tosu	equ	0xFFF
 18395                           tosh	equ	0xFFE
 18396                           tosl	equ	0xFFD
 18397                           pclath	equ	0xFFA
 18398                           tblptru	equ	0xFF8
 18399                           tblptrh	equ	0xFF7
 18400                           tblptrl	equ	0xFF6
 18401                           tablat	equ	0xFF5
 18402                           prodh	equ	0xFF4
 18403                           prodl	equ	0xFF3
 18404                           intcon	equ	0xFF2
 18405                           indf0	equ	0xFEF
 18406                           postinc0	equ	0xFEE
 18407                           fsr0h	equ	0xFEA
 18408                           fsr0l	equ	0xFE9
 18409                           wreg	equ	0xFE8
 18410                           indf1	equ	0xFE7
 18411                           postinc1	equ	0xFE6
 18412                           postdec1	equ	0xFE5
 18413                           plusw1	equ	0xFE3
 18414                           fsr1h	equ	0xFE2
 18415                           fsr1l	equ	0xFE1
 18416                           indf2	equ	0xFDF
 18417                           postinc2	equ	0xFDE
 18418                           postdec2	equ	0xFDD
 18419                           plusw2	equ	0xFDB
 18420                           fsr2h	equ	0xFDA
 18421                           fsr2l	equ	0xFD9
 18422                           status	equ	0xFD8
 18423                           
 18424 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
 18425 ;; Defined at:
 18426 ;;		line 70 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;  payloadLen      2   18[COMRAM] unsigned int 
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  tmp            12   35[COMRAM] struct .
 18431 ;;  cksm            4   31[COMRAM] unsigned long 
 18432 ;;  v               2   28[COMRAM] PTR unsigned int 
 18433 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
 18434 ;;  len             1   30[COMRAM] unsigned char 
 18435 ;; Return value:  Size  Location     Type
 18436 ;;                  2   18[COMRAM] unsigned int 
 18437 ;; Registers used:
 18438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18439 ;; Tracked objects:
 18440 ;;		On entry : 0/0
 18441 ;;		On exit  : 0/0
 18442 ;;		Unchanged: 0/0
 18443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18445 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18446 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18447 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18448 ;;Total ram usage:       29 bytes
 18449 ;; Hardware stack levels used:    1
 18450 ;; Hardware stack levels required when called:    4
 18451 ;; This function calls:
 18452 ;;		Nothing
 18453 ;; This function is called by:
 18454 ;;		_IPV4_Packet
 18455 ;; This function uses a non-reentrant model
 18456 ;;
 18457                           
 18458                           	psect	text67
 18459  015842                     __ptext67:
 18460                           	opt stack 0
 18461  015842                     _IPV4_PseudoHeaderChecksum:
 18462                           	opt stack 23
 18463                           
 18464                           ;ipv4.c: 72: ipv4_pseudo_header_t tmp;
 18465                           ;ipv4.c: 73: uint8_t len;
 18466                           ;ipv4.c: 74: uint32_t cksm = 0;
 18467                           
 18468                           ;incstack = 0
 18469  015842  0E00               	movlw	0
 18470  015844  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
 18471  015846  0E00               	movlw	0
 18472  015848  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
 18473  01584A  0E00               	movlw	0
 18474  01584C  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
 18475  01584E  0E00               	movlw	0
 18476  015850  6E23               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
 18477                           
 18478                           ;ipv4.c: 75: uint16_t *v;
 18479                           ;ipv4.c: 77: tmp.srcIpAddress = ipv4Header.srcIpAddress;
 18480  015852  C279  F024         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
 18481  015856  C27A  F025         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
 18482  01585A  C27B  F026         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
 18483  01585E  C27C  F027         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
 18484                           
 18485                           ;ipv4.c: 78: tmp.dstIpAddress = ipv4Header.dstIpAddress;
 18486  015862  C27D  F028         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
 18487  015866  C27E  F029         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
 18488  01586A  C27F  F02A         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
 18489  01586E  C280  F02B         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
 18490                           
 18491                           ;ipv4.c: 79: tmp.protocol = ipv4Header.protocol;
 18492  015872  C276  F02C         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
 18493                           
 18494                           ;ipv4.c: 80: tmp.z = 0;
 18495  015876  0E00               	movlw	0
 18496  015878  6E2D               	movwf	IPV4_PseudoHeaderChecksum@tmp+9,c
 18497                           
 18498                           ;ipv4.c: 81: tmp.length = payloadLen;
 18499  01587A  C013  F02E         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
 18500  01587E  C014  F02F         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
 18501                           
 18502                           ;ipv4.c: 83: len = sizeof(tmp);
 18503  015882  0E0C               	movlw	12
 18504  015884  6E1F               	movwf	IPV4_PseudoHeaderChecksum@len,c
 18505                           
 18506                           ;ipv4.c: 84: len = len >> 1;
 18507  015886  90D8               	bcf	status,0,c
 18508  015888  301F               	rrcf	IPV4_PseudoHeaderChecksum@len,w,c
 18509  01588A  6E1F               	movwf	IPV4_PseudoHeaderChecksum@len,c
 18510                           
 18511                           ;ipv4.c: 86: v = (uint16_t *) &tmp;
 18512  01588C  0E24               	movlw	low IPV4_PseudoHeaderChecksum@tmp
 18513  01588E  6E1D               	movwf	IPV4_PseudoHeaderChecksum@v,c
 18514  015890  0E00               	movlw	high IPV4_PseudoHeaderChecksum@tmp
 18515  015892  6E1E               	movwf	IPV4_PseudoHeaderChecksum@v+1,c
 18516                           
 18517                           ;ipv4.c: 88: while(len)
 18518  015894  D015               	goto	l847
 18519  015896                     
 18520                           ;ipv4.c: 89: {
 18521                           ;ipv4.c: 90: cksm += *v;
 18522  015896  C01D  FFD9         	movff	IPV4_PseudoHeaderChecksum@v,fsr2l
 18523  01589A  C01E  FFDA         	movff	IPV4_PseudoHeaderChecksum@v+1,fsr2h
 18524  01589E  CFDE F015          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
 18525  0158A2  CFDD F016          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
 18526  0158A6  5015               	movf	??_IPV4_PseudoHeaderChecksum,w,c
 18527  0158A8  2620               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
 18528  0158AA  5016               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
 18529  0158AC  2221               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
 18530  0158AE  0E00               	movlw	0
 18531  0158B0  2222               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
 18532  0158B2  0E00               	movlw	0
 18533  0158B4  2223               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
 18534                           
 18535                           ;ipv4.c: 91: len--;
 18536  0158B6  061F               	decf	IPV4_PseudoHeaderChecksum@len,f,c
 18537                           
 18538                           ;ipv4.c: 92: v++;
 18539  0158B8  0E02               	movlw	2
 18540  0158BA  261D               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
 18541  0158BC  0E00               	movlw	0
 18542  0158BE  221E               	addwfc	IPV4_PseudoHeaderChecksum@v+1,f,c
 18543  0158C0                     l847:
 18544  0158C0  501F               	movf	IPV4_PseudoHeaderChecksum@len,w,c
 18545  0158C2  A4D8               	btfss	status,2,c
 18546  0158C4  D7E8               	goto	l848
 18547                           
 18548                           ;ipv4.c: 93: }
 18549                           ;ipv4.c: 96: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 18550  0158C6  C020  F015         	movff	IPV4_PseudoHeaderChecksum@cksm,??_IPV4_PseudoHeaderChecksum
 18551  0158CA  C021  F016         	movff	IPV4_PseudoHeaderChecksum@cksm+1,??_IPV4_PseudoHeaderChecksum+1
 18552  0158CE  C022  F017         	movff	IPV4_PseudoHeaderChecksum@cksm+2,??_IPV4_PseudoHeaderChecksum+2
 18553  0158D2  C023  F018         	movff	IPV4_PseudoHeaderChecksum@cksm+3,??_IPV4_PseudoHeaderChecksum+3
 18554  0158D6  0E11               	movlw	17
 18555  0158D8  D005               	goto	u12150
 18556  0158DA                     u12155:
 18557  0158DA  90D8               	bcf	status,0,c
 18558  0158DC  3218               	rrcf	??_IPV4_PseudoHeaderChecksum+3,f,c
 18559  0158DE  3217               	rrcf	??_IPV4_PseudoHeaderChecksum+2,f,c
 18560  0158E0  3216               	rrcf	??_IPV4_PseudoHeaderChecksum+1,f,c
 18561  0158E2  3215               	rrcf	??_IPV4_PseudoHeaderChecksum,f,c
 18562  0158E4                     u12150:
 18563  0158E4  2EE8               	decfsz	wreg,f,c
 18564  0158E6  D7F9               	goto	u12155
 18565  0158E8  0EFF               	movlw	255
 18566  0158EA  1420               	andwf	IPV4_PseudoHeaderChecksum@cksm,w,c
 18567  0158EC  6E19               	movwf	(??_IPV4_PseudoHeaderChecksum+4)& (0+255),c
 18568  0158EE  0EFF               	movlw	255
 18569  0158F0  1421               	andwf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
 18570  0158F2  6E1A               	movwf	(??_IPV4_PseudoHeaderChecksum+5)& (0+255),c
 18571  0158F4  0E00               	movlw	0
 18572  0158F6  1422               	andwf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
 18573  0158F8  6E1B               	movwf	(??_IPV4_PseudoHeaderChecksum+6)& (0+255),c
 18574  0158FA  0E00               	movlw	0
 18575  0158FC  1423               	andwf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
 18576  0158FE  6E1C               	movwf	(??_IPV4_PseudoHeaderChecksum+7)& (0+255),c
 18577  015900  5015               	movf	??_IPV4_PseudoHeaderChecksum,w,c
 18578  015902  2419               	addwf	??_IPV4_PseudoHeaderChecksum+4,w,c
 18579  015904  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
 18580  015906  5016               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
 18581  015908  201A               	addwfc	??_IPV4_PseudoHeaderChecksum+5,w,c
 18582  01590A  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
 18583  01590C  5017               	movf	??_IPV4_PseudoHeaderChecksum+2,w,c
 18584  01590E  201B               	addwfc	??_IPV4_PseudoHeaderChecksum+6,w,c
 18585  015910  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
 18586  015912  5018               	movf	??_IPV4_PseudoHeaderChecksum+3,w,c
 18587  015914  201C               	addwfc	??_IPV4_PseudoHeaderChecksum+7,w,c
 18588  015916  6E23               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
 18589                           
 18590                           ;ipv4.c: 99: return cksm;
 18591  015918  C020  F013         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
 18592  01591C  C021  F014         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
 18593  015920  0012               	return	
 18594  015922                     __end_of_IPV4_PseudoHeaderChecksum:
 18595                           	opt stack 0
 18596                           tosu	equ	0xFFF
 18597                           tosh	equ	0xFFE
 18598                           tosl	equ	0xFFD
 18599                           pclath	equ	0xFFA
 18600                           tblptru	equ	0xFF8
 18601                           tblptrh	equ	0xFF7
 18602                           tblptrl	equ	0xFF6
 18603                           tablat	equ	0xFF5
 18604                           prodh	equ	0xFF4
 18605                           prodl	equ	0xFF3
 18606                           intcon	equ	0xFF2
 18607                           indf0	equ	0xFEF
 18608                           postinc0	equ	0xFEE
 18609                           fsr0h	equ	0xFEA
 18610                           fsr0l	equ	0xFE9
 18611                           wreg	equ	0xFE8
 18612                           indf1	equ	0xFE7
 18613                           postinc1	equ	0xFE6
 18614                           postdec1	equ	0xFE5
 18615                           plusw1	equ	0xFE3
 18616                           fsr1h	equ	0xFE2
 18617                           fsr1l	equ	0xFE1
 18618                           indf2	equ	0xFDF
 18619                           postinc2	equ	0xFDE
 18620                           postdec2	equ	0xFDD
 18621                           plusw2	equ	0xFDB
 18622                           fsr2h	equ	0xFDA
 18623                           fsr2l	equ	0xFD9
 18624                           status	equ	0xFD8
 18625                           
 18626 ;; *************** function _ICMP_Receive *****************
 18627 ;; Defined at:
 18628 ;;		line 58 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 18629 ;; Parameters:    Size  Location     Type
 18630 ;;  ipv4Hdr         2   89[BANK0 ] PTR struct .
 18631 ;;		 -> ipv4Header(20), 
 18632 ;; Auto vars:     Size  Location     Type
 18633 ;;  icmpHdr         4   96[BANK0 ] struct .
 18634 ;;  ret             1   95[BANK0 ] enum E392
 18635 ;; Return value:  Size  Location     Type
 18636 ;;                  1    wreg      enum E392
 18637 ;; Registers used:
 18638 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18639 ;; Tracked objects:
 18640 ;;		On entry : 0/0
 18641 ;;		On exit  : 0/0
 18642 ;;		Unchanged: 0/0
 18643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18644 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18645 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18646 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18647 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18648 ;;Total ram usage:       11 bytes
 18649 ;; Hardware stack levels used:    1
 18650 ;; Hardware stack levels required when called:   10
 18651 ;; This function calls:
 18652 ;;		_ETH_Dump
 18653 ;;		_ETH_Read16
 18654 ;;		_ETH_ReadBlock
 18655 ;;		_ICMP_EchoReply
 18656 ;; This function is called by:
 18657 ;;		_IPV4_Packet
 18658 ;; This function uses a non-reentrant model
 18659 ;;
 18660                           
 18661                           	psect	text68
 18662  01567A                     __ptext68:
 18663                           	opt stack 0
 18664  01567A                     _ICMP_Receive:
 18665                           	opt stack 17
 18666                           
 18667                           ;icmp.c: 60: icmpHeader_t icmpHdr;
 18668                           ;icmp.c: 61: error_msg ret = ERROR;
 18669                           
 18670                           ;incstack = 0
 18671  01567A  0E00               	movlw	0
 18672  01567C  0100               	movlb	0	; () banked
 18673  01567E  6FBF               	movwf	ICMP_Receive@ret& (0+255),b
 18674                           
 18675                           ; BSR set to: 0
 18676                           ;icmp.c: 62: ETH_ReadBlock(&icmpHdr, sizeof(icmpHeader_t));
 18677  015680  0EC0               	movlw	low ICMP_Receive@icmpHdr
 18678  015682  6E13               	movwf	ETH_ReadBlock@buffer,c
 18679  015684  0E00               	movlw	high ICMP_Receive@icmpHdr
 18680  015686  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 18681  015688  0E00               	movlw	0
 18682  01568A  6E16               	movwf	ETH_ReadBlock@length+1,c
 18683  01568C  0E04               	movlw	4
 18684  01568E  6E15               	movwf	ETH_ReadBlock@length,c
 18685  015690  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
 18686                           
 18687                           ;icmp.c: 64: if(ipv4Hdr->dstIpAddress == 0xFFFFFFFF)
 18688  015694  0100               	movlb	0	; () banked
 18689  015696  EE20 F010          	lfsr	2,16
 18690  01569A  51B9               	movf	ICMP_Receive@ipv4Hdr& (0+255),w,b
 18691  01569C  26D9               	addwf	fsr2l,f,c
 18692  01569E  51BA               	movf	(ICMP_Receive@ipv4Hdr+1)& (0+255),w,b
 18693  0156A0  22DA               	addwfc	fsr2h,f,c
 18694  0156A2  28DE               	incf	postinc2,w,c
 18695  0156A4  E132               	bnz	l12204
 18696  0156A6  28DE               	incf	postinc2,w,c
 18697  0156A8  E130               	bnz	l12204
 18698  0156AA  28DE               	incf	postinc2,w,c
 18699  0156AC  E12E               	bnz	l12204
 18700  0156AE  28DE               	incf	postinc2,w,c
 18701  0156B0  B4D8               	btfsc	status,2,c
 18702  0156B2  0012               	return	
 18703  0156B4  D02A               	goto	l1098
 18704  0156B6                     
 18705                           ; BSR set to: 0
 18706                           ;icmp.c: 69: case UNASSIGNED_ECHO_TYPE_CODE_REQUEST_1:
 18707                           ;icmp.c: 70: case UNASSIGNED_ECHO_TYPE_CODE_REQUEST_2:
 18708                           ;icmp.c: 71: {
 18709                           ;icmp.c: 72: ret = ICMP_EchoReply(ipv4Hdr);
 18710                           
 18711                           ; BSR set to: 0
 18712                           
 18713                           ; BSR set to: 0
 18714                           
 18715                           ; BSR set to: 0
 18716  0156B6  C0B9  F0A8         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
 18717  0156BA  C0BA  F0A9         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
 18718  0156BE  EC5B  F0A6         	call	_ICMP_EchoReply	;wreg free
 18719  0156C2  0100               	movlb	0	; () banked
 18720  0156C4  6FBF               	movwf	ICMP_Receive@ret& (0+255),b
 18721                           
 18722                           ;icmp.c: 73: }
 18723                           ;icmp.c: 74: break;
 18724  0156C6  0012               	return	
 18725  0156C8                     
 18726                           ; BSR set to: 0
 18727                           ;icmp.c: 76: ETH_Dump(4);
 18728                           
 18729                           ; BSR set to: 0
 18730  0156C8  0E00               	movlw	0
 18731  0156CA  6E14               	movwf	ETH_Dump@length+1,c
 18732  0156CC  0E04               	movlw	4
 18733  0156CE  6E13               	movwf	ETH_Dump@length,c
 18734  0156D0  EC46  F0B5         	call	_ETH_Dump	;wreg free
 18735                           
 18736                           ;icmp.c: 77: ETH_ReadBlock(ipv4Hdr,sizeof(ipv4Header_t));
 18737  0156D4  C0B9  F013         	movff	ICMP_Receive@ipv4Hdr,ETH_ReadBlock@buffer
 18738  0156D8  C0BA  F014         	movff	ICMP_Receive@ipv4Hdr+1,ETH_ReadBlock@buffer+1
 18739  0156DC  0E00               	movlw	0
 18740  0156DE  6E16               	movwf	ETH_ReadBlock@length+1,c
 18741  0156E0  0E14               	movlw	20
 18742  0156E2  6E15               	movwf	ETH_ReadBlock@length,c
 18743  0156E4  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
 18744                           
 18745                           ;icmp.c: 78: if(5 == ipv4Hdr->ihl)
 18746  0156E8  C0B9  FFD9         	movff	ICMP_Receive@ipv4Hdr,fsr2l
 18747  0156EC  C0BA  FFDA         	movff	ICMP_Receive@ipv4Hdr+1,fsr2h
 18748  0156F0  0100               	movlb	0	; () banked
 18749  0156F2  50DF               	movf	223,w,c
 18750  0156F4  0B0F               	andlw	15
 18751  0156F6  0A05               	xorlw	5
 18752  0156F8  A4D8               	btfss	status,2,c
 18753  0156FA  0012               	return	
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;icmp.c: 79: {
 18757                           ;icmp.c: 80: portUnreachable = ETH_Read16();
 18758  0156FC  EC69  F0B4         	call	_ETH_Read16	;wreg free
 18759  015700  C013  F250         	movff	?_ETH_Read16,_portUnreachable
 18760  015704  C014  F251         	movff	?_ETH_Read16+1,_portUnreachable+1
 18761                           
 18762                           ;icmp.c: 85: }
 18763                           
 18764                           ;icmp.c: 84: break;
 18765                           
 18766                           ;icmp.c: 83: default:
 18767                           
 18768                           ;icmp.c: 81: }
 18769                           ;icmp.c: 82: break;
 18770  015708  0012               	return	
 18771  01570A                     l1098:
 18772  01570A                     l12204:
 18773  01570A  0100               	movlb	0	; () banked
 18774  01570C  51C0               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
 18775  01570E  6FBC               	movwf	(??_ICMP_Receive+1)& (0+255),b
 18776  015710  6BBB               	clrf	??_ICMP_Receive& (0+255),b
 18777  015712  C0C0  F0BD         	movff	ICMP_Receive@icmpHdr,??_ICMP_Receive+2
 18778  015716  C0C1  F0BE         	movff	ICMP_Receive@icmpHdr+1,??_ICMP_Receive+3
 18779  01571A  C0BE  F0BD         	movff	??_ICMP_Receive+3,??_ICMP_Receive+2
 18780  01571E  6BBE               	clrf	(??_ICMP_Receive+3)& (0+255),b
 18781  015720  0EFF               	movlw	255
 18782  015722  17BD               	andwf	(??_ICMP_Receive+2)& (0+255),f,b
 18783  015724  0E00               	movlw	0
 18784  015726  17BE               	andwf	(??_ICMP_Receive+3)& (0+255),f,b
 18785  015728  51BB               	movf	??_ICMP_Receive& (0+255),w,b
 18786  01572A  13BD               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
 18787  01572C  51BC               	movf	(??_ICMP_Receive+1)& (0+255),w,b
 18788  01572E  13BE               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
 18789                           
 18790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 18791                           ; Switch size 1, requested type "space"
 18792                           ; Number of cases is 2, Range of values is 3 to 8
 18793                           ; switch strategies available:
 18794                           ; Name         Instructions Cycles
 18795                           ; simple_byte            7     4 (average)
 18796                           ;	Chosen strategy is simple_byte
 18797  015730  51BE               	movf	(??_ICMP_Receive+3)& (0+255),w,b
 18798  015732  0A03               	xorlw	3	; case 3
 18799  015734  B4D8               	btfsc	status,2,c
 18800  015736  D004               	goto	l13268
 18801  015738  0A0B               	xorlw	11	; case 8
 18802  01573A  A4D8               	btfss	status,2,c
 18803  01573C  0012               	return	
 18804  01573E  D005               	goto	l13270
 18805  015740                     l13268:
 18806                           
 18807                           ; BSR set to: 0
 18808                           ; Switch size 1, requested type "space"
 18809                           ; Number of cases is 1, Range of values is 3 to 3
 18810                           ; switch strategies available:
 18811                           ; Name         Instructions Cycles
 18812                           ; simple_byte            4     3 (average)
 18813                           ;	Chosen strategy is simple_byte
 18814  015740  51BD               	movf	(??_ICMP_Receive+2)& (0+255),w,b
 18815  015742  0A03               	xorlw	3	; case 3
 18816  015744  A4D8               	btfss	status,2,c
 18817  015746  0012               	return	
 18818  015748  D7BF               	goto	l1103
 18819  01574A                     l13270:
 18820                           
 18821                           ; BSR set to: 0
 18822                           ; Switch size 1, requested type "space"
 18823                           ; Number of cases is 3, Range of values is 0 to 252
 18824                           ; switch strategies available:
 18825                           ; Name         Instructions Cycles
 18826                           ; simple_byte           10     6 (average)
 18827                           ;	Chosen strategy is simple_byte
 18828  01574A  51BD               	movf	(??_ICMP_Receive+2)& (0+255),w,b
 18829  01574C  0A00               	xorlw	0	; case 0
 18830  01574E  B4D8               	btfsc	status,2,c
 18831  015750  D7B2               	goto	l1099
 18832  015752  0A2A               	xorlw	42	; case 42
 18833  015754  B4D8               	btfsc	status,2,c
 18834  015756  D7AF               	goto	l1099
 18835  015758  0AD6               	xorlw	214	; case 252
 18836  01575A  A4D8               	btfss	status,2,c
 18837  01575C  0012               	return	
 18838  01575E  D7AB               	goto	l1099
 18839  015760                     __end_of_ICMP_Receive:
 18840                           	opt stack 0
 18841                           tosu	equ	0xFFF
 18842                           tosh	equ	0xFFE
 18843                           tosl	equ	0xFFD
 18844                           pclath	equ	0xFFA
 18845                           tblptru	equ	0xFF8
 18846                           tblptrh	equ	0xFF7
 18847                           tblptrl	equ	0xFF6
 18848                           tablat	equ	0xFF5
 18849                           prodh	equ	0xFF4
 18850                           prodl	equ	0xFF3
 18851                           intcon	equ	0xFF2
 18852                           indf0	equ	0xFEF
 18853                           postinc0	equ	0xFEE
 18854                           fsr0h	equ	0xFEA
 18855                           fsr0l	equ	0xFE9
 18856                           wreg	equ	0xFE8
 18857                           indf1	equ	0xFE7
 18858                           postinc1	equ	0xFE6
 18859                           postdec1	equ	0xFE5
 18860                           plusw1	equ	0xFE3
 18861                           fsr1h	equ	0xFE2
 18862                           fsr1l	equ	0xFE1
 18863                           indf2	equ	0xFDF
 18864                           postinc2	equ	0xFDE
 18865                           postdec2	equ	0xFDD
 18866                           plusw2	equ	0xFDB
 18867                           fsr2h	equ	0xFDA
 18868                           fsr2l	equ	0xFD9
 18869                           status	equ	0xFD8
 18870                           
 18871 ;; *************** function _ICMP_EchoReply *****************
 18872 ;; Defined at:
 18873 ;;		line 99 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 18874 ;; Parameters:    Size  Location     Type
 18875 ;;  ipv4Hdr         2   72[BANK0 ] PTR struct .
 18876 ;;		 -> ipv4Header(20), 
 18877 ;; Auto vars:     Size  Location     Type
 18878 ;;  ipv4PayloadL    2   86[BANK0 ] unsigned int 
 18879 ;;  icmp_cksm_st    2   82[BANK0 ] unsigned int 
 18880 ;;  cksm            2   84[BANK0 ] unsigned int 
 18881 ;;  sequence        2   80[BANK0 ] unsigned int 
 18882 ;;  identifier      2   78[BANK0 ] unsigned int 
 18883 ;;  ret             1   88[BANK0 ] enum E392
 18884 ;; Return value:  Size  Location     Type
 18885 ;;                  1    wreg      enum E392
 18886 ;; Registers used:
 18887 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18888 ;; Tracked objects:
 18889 ;;		On entry : 0/0
 18890 ;;		On exit  : 0/0
 18891 ;;		Unchanged: 0/0
 18892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18894 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18896 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18897 ;;Total ram usage:       17 bytes
 18898 ;; Hardware stack levels used:    1
 18899 ;; Hardware stack levels required when called:    9
 18900 ;; This function calls:
 18901 ;;		_ETH_Copy
 18902 ;;		_ETH_Insert
 18903 ;;		_ETH_Read16
 18904 ;;		_ETH_TxComputeChecksum
 18905 ;;		_ETH_Write16
 18906 ;;		_IPV4_Send
 18907 ;;		_IPv4_Start
 18908 ;; This function is called by:
 18909 ;;		_ICMP_Receive
 18910 ;; This function uses a non-reentrant model
 18911 ;;
 18912                           
 18913                           	psect	text69
 18914  014CB6                     __ptext69:
 18915                           	opt stack 0
 18916  014CB6                     _ICMP_EchoReply:
 18917                           	opt stack 17
 18918                           
 18919                           ;icmp.c: 101: uint16_t cksm =0;
 18920                           
 18921                           ;incstack = 0
 18922  014CB6  0E00               	movlw	0
 18923  014CB8  0100               	movlb	0	; () banked
 18924  014CBA  6FB5               	movwf	(ICMP_EchoReply@cksm+1)& (0+255),b
 18925  014CBC  0E00               	movlw	0
 18926  014CBE  6FB4               	movwf	ICMP_EchoReply@cksm& (0+255),b
 18927                           
 18928                           ;icmp.c: 102: error_msg ret = ERROR;
 18929  014CC0  0E00               	movlw	0
 18930  014CC2  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 18931                           
 18932                           ; BSR set to: 0
 18933                           ;icmp.c: 103: uint16_t identifier;
 18934                           ;icmp.c: 104: uint16_t sequence;
 18935                           ;icmp.c: 106: identifier = ETH_Read16();
 18936  014CC4  EC69  F0B4         	call	_ETH_Read16	;wreg free
 18937  014CC8  C013  F0AE         	movff	?_ETH_Read16,ICMP_EchoReply@identifier
 18938  014CCC  C014  F0AF         	movff	?_ETH_Read16+1,ICMP_EchoReply@identifier+1
 18939                           
 18940                           ;icmp.c: 107: sequence = ETH_Read16();
 18941  014CD0  EC69  F0B4         	call	_ETH_Read16	;wreg free
 18942  014CD4  C013  F0B0         	movff	?_ETH_Read16,ICMP_EchoReply@sequence
 18943  014CD8  C014  F0B1         	movff	?_ETH_Read16+1,ICMP_EchoReply@sequence+1
 18944                           
 18945                           ;icmp.c: 108: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
 18946  014CDC  0100               	movlb	0	; () banked
 18947  014CDE  EE20 F00C          	lfsr	2,12
 18948  014CE2  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 18949  014CE4  26D9               	addwf	fsr2l,f,c
 18950  014CE6  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 18951  014CE8  22DA               	addwfc	fsr2h,f,c
 18952  014CEA  CFDE F031          	movff	postinc2,IPv4_Start@destAddress
 18953  014CEE  CFDE F032          	movff	postinc2,IPv4_Start@destAddress+1
 18954  014CF2  CFDE F033          	movff	postinc2,IPv4_Start@destAddress+2
 18955  014CF6  CFDE F034          	movff	postinc2,IPv4_Start@destAddress+3
 18956  014CFA  EE20 F009          	lfsr	2,9
 18957  014CFE  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 18958  014D00  26D9               	addwf	fsr2l,f,c
 18959  014D02  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 18960  014D04  22DA               	addwfc	fsr2h,f,c
 18961  014D06  50DF               	movf	indf2,w,c
 18962  014D08  6E35               	movwf	IPv4_Start@protocol,c
 18963  014D0A  ECB1  F09F         	call	_IPv4_Start	;wreg free
 18964  014D0E  0100               	movlb	0	; () banked
 18965  014D10  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;icmp.c: 109: if(ret == SUCCESS)
 18969  014D12  05B8               	decf	ICMP_EchoReply@ret& (0+255),w,b
 18970  014D14  A4D8               	btfss	status,2,c
 18971  014D16  D088               	goto	l1109
 18972                           
 18973                           ; BSR set to: 0
 18974                           ;icmp.c: 110: {
 18975                           ;icmp.c: 111: uint16_t icmp_cksm_start;
 18976                           ;icmp.c: 112: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
 18977  014D18  EE20 F002          	lfsr	2,2
 18978  014D1C  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 18979  014D1E  26D9               	addwf	fsr2l,f,c
 18980  014D20  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 18981  014D22  22DA               	addwfc	fsr2h,f,c
 18982  014D24  CFDE F0AA          	movff	postinc2,??_ICMP_EchoReply
 18983  014D28  CFDD F0AB          	movff	postdec2,??_ICMP_EchoReply+1
 18984  014D2C  0EEC               	movlw	236
 18985  014D2E  25AA               	addwf	??_ICMP_EchoReply& (0+255),w,b
 18986  014D30  6FB6               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 18987  014D32  0EFF               	movlw	255
 18988  014D34  21AB               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
 18989  014D36  6FB7               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 18990                           
 18991                           ;icmp.c: 114: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
 18992  014D38  EE20 F002          	lfsr	2,2
 18993  014D3C  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 18994  014D3E  26D9               	addwf	fsr2l,f,c
 18995  014D40  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 18996  014D42  22DA               	addwfc	fsr2h,f,c
 18997  014D44  CFDE F0AA          	movff	postinc2,??_ICMP_EchoReply
 18998  014D48  CFDD F0AB          	movff	postdec2,??_ICMP_EchoReply+1
 18999  014D4C  C0A8  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
 19000  014D50  C0A9  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
 19001  014D54  50DF               	movf	223,w,c
 19002  014D56  0B0F               	andlw	15
 19003  014D58  6FAC               	movwf	(??_ICMP_EchoReply+2)& (0+255),b
 19004  014D5A  6BAD               	clrf	(??_ICMP_EchoReply+3)& (0+255),b
 19005  014D5C  90D8               	bcf	status,0,c
 19006  014D5E  37AC               	rlcf	(??_ICMP_EchoReply+2)& (0+255),f,b
 19007  014D60  37AD               	rlcf	(??_ICMP_EchoReply+3)& (0+255),f,b
 19008  014D62  90D8               	bcf	status,0,c
 19009  014D64  37AC               	rlcf	(??_ICMP_EchoReply+2)& (0+255),f,b
 19010  014D66  37AD               	rlcf	(??_ICMP_EchoReply+3)& (0+255),f,b
 19011  014D68  1FAC               	comf	(??_ICMP_EchoReply+2)& (0+255),f,b
 19012  014D6A  1FAD               	comf	(??_ICMP_EchoReply+3)& (0+255),f,b
 19013  014D6C  4BAC               	infsnz	(??_ICMP_EchoReply+2)& (0+255),f,b
 19014  014D6E  2BAD               	incf	(??_ICMP_EchoReply+3)& (0+255),f,b
 19015  014D70  51AA               	movf	??_ICMP_EchoReply& (0+255),w,b
 19016  014D72  25AC               	addwf	(??_ICMP_EchoReply+2)& (0+255),w,b
 19017  014D74  6FB6               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 19018  014D76  51AB               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
 19019  014D78  21AD               	addwfc	(??_ICMP_EchoReply+3)& (0+255),w,b
 19020  014D7A  6FB7               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 19021                           
 19022                           ; BSR set to: 0
 19023                           ;icmp.c: 116: ETH_Write16(ECHO_REPLY);
 19024  014D7C  0E00               	movlw	0
 19025  014D7E  6E14               	movwf	ETH_Write16@data+1,c
 19026  014D80  0E00               	movlw	0
 19027  014D82  6E13               	movwf	ETH_Write16@data,c
 19028  014D84  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 19029                           
 19030                           ;icmp.c: 117: ETH_Write16(0);
 19031  014D88  0E00               	movlw	0
 19032  014D8A  6E14               	movwf	ETH_Write16@data+1,c
 19033  014D8C  0E00               	movlw	0
 19034  014D8E  6E13               	movwf	ETH_Write16@data,c
 19035  014D90  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 19036                           
 19037                           ;icmp.c: 119: ETH_Write16(identifier);
 19038  014D94  C0AE  F013         	movff	ICMP_EchoReply@identifier,ETH_Write16@data
 19039  014D98  C0AF  F014         	movff	ICMP_EchoReply@identifier+1,ETH_Write16@data+1
 19040  014D9C  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 19041                           
 19042                           ;icmp.c: 120: ETH_Write16(sequence);
 19043  014DA0  C0B0  F013         	movff	ICMP_EchoReply@sequence,ETH_Write16@data
 19044  014DA4  C0B1  F014         	movff	ICMP_EchoReply@sequence+1,ETH_Write16@data+1
 19045  014DA8  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 19046                           
 19047                           ;icmp.c: 123: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t) - 4);
 19048  014DAC  0EF8               	movlw	248
 19049  014DAE  0100               	movlb	0	; () banked
 19050  014DB0  25B6               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
 19051  014DB2  6E19               	movwf	ETH_Copy@len,c
 19052  014DB4  0EFF               	movlw	255
 19053  014DB6  21B7               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
 19054  014DB8  6E1A               	movwf	ETH_Copy@len+1,c
 19055  014DBA  EC64  F0AD         	call	_ETH_Copy	;wreg free
 19056  014DBE  0100               	movlb	0	; () banked
 19057  014DC0  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 19058                           
 19059                           ; BSR set to: 0
 19060                           ;icmp.c: 124: if(ret==SUCCESS)
 19061  014DC2  05B8               	decf	ICMP_EchoReply@ret& (0+255),w,b
 19062  014DC4  A4D8               	btfss	status,2,c
 19063  014DC6  D030               	goto	l1109
 19064                           
 19065                           ; BSR set to: 0
 19066                           ;icmp.c: 125: {
 19067                           ;icmp.c: 127: cksm = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
 19068  014DC8  0E00               	movlw	0
 19069  014DCA  6FB5               	movwf	(ICMP_EchoReply@cksm+1)& (0+255),b
 19070  014DCC  0E22               	movlw	34
 19071  014DCE  6FB4               	movwf	ICMP_EchoReply@cksm& (0+255),b
 19072                           
 19073                           ;icmp.c: 128: icmp_cksm_start = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
 19074  014DD0  0E00               	movlw	0
 19075  014DD2  6FB3               	movwf	(ICMP_EchoReply@icmp_cksm_start+1)& (0+255),b
 19076  014DD4  0E22               	movlw	34
 19077  014DD6  6FB2               	movwf	ICMP_EchoReply@icmp_cksm_start& (0+255),b
 19078                           
 19079                           ; BSR set to: 0
 19080                           ;icmp.c: 129: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
 19081  014DD8  C0B2  F025         	movff	ICMP_EchoReply@icmp_cksm_start,ETH_TxComputeChecksum@position
 19082  014DDC  C0B3  F026         	movff	ICMP_EchoReply@icmp_cksm_start+1,ETH_TxComputeChecksum@position+1
 19083  014DE0  C0B6  F027         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
 19084  014DE4  C0B7  F028         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
 19085  014DE8  0E00               	movlw	0
 19086  014DEA  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
 19087  014DEC  0E00               	movlw	0
 19088  014DEE  6E29               	movwf	ETH_TxComputeChecksum@seed,c
 19089  014DF0  EC91  F0AC         	call	_ETH_TxComputeChecksum	;wreg free
 19090  014DF4  C025  F0B4         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
 19091  014DF8  C026  F0B5         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
 19092                           
 19093                           ;icmp.c: 130: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
 19094  014DFC  0EB4               	movlw	low ICMP_EchoReply@cksm
 19095  014DFE  6E13               	movwf	ETH_Insert@data,c
 19096  014E00  0E00               	movlw	high ICMP_EchoReply@cksm
 19097  014E02  6E14               	movwf	ETH_Insert@data+1,c
 19098  014E04  0E00               	movlw	0
 19099  014E06  6E16               	movwf	ETH_Insert@len+1,c
 19100  014E08  0E02               	movlw	2
 19101  014E0A  6E15               	movwf	ETH_Insert@len,c
 19102  014E0C  0E00               	movlw	0
 19103  014E0E  6E18               	movwf	ETH_Insert@offset+1,c
 19104  014E10  0E24               	movlw	36
 19105  014E12  6E17               	movwf	ETH_Insert@offset,c
 19106  014E14  ECB7  F0B1         	call	_ETH_Insert	;wreg free
 19107                           
 19108                           ;icmp.c: 131: ret = IPV4_Send(ipv4PayloadLength);
 19109  014E18  C0B6  F037         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
 19110  014E1C  C0B7  F038         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
 19111  014E20  ECAE  F0AE         	call	_IPV4_Send	;wreg free
 19112  014E24  0100               	movlb	0	; () banked
 19113  014E26  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 19114  014E28                     l1109:
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;icmp.c: 132: }
 19118                           ;icmp.c: 133: }
 19119                           ;icmp.c: 134: return ret;
 19120                           
 19121                           ; BSR set to: 0
 19122                           
 19123                           ; BSR set to: 0
 19124  014E28  51B8               	movf	ICMP_EchoReply@ret& (0+255),w,b
 19125  014E2A  0012               	return	
 19126  014E2C                     __end_of_ICMP_EchoReply:
 19127                           	opt stack 0
 19128                           tosu	equ	0xFFF
 19129                           tosh	equ	0xFFE
 19130                           tosl	equ	0xFFD
 19131                           pclath	equ	0xFFA
 19132                           tblptru	equ	0xFF8
 19133                           tblptrh	equ	0xFF7
 19134                           tblptrl	equ	0xFF6
 19135                           tablat	equ	0xFF5
 19136                           prodh	equ	0xFF4
 19137                           prodl	equ	0xFF3
 19138                           intcon	equ	0xFF2
 19139                           indf0	equ	0xFEF
 19140                           postinc0	equ	0xFEE
 19141                           fsr0h	equ	0xFEA
 19142                           fsr0l	equ	0xFE9
 19143                           wreg	equ	0xFE8
 19144                           indf1	equ	0xFE7
 19145                           postinc1	equ	0xFE6
 19146                           postdec1	equ	0xFE5
 19147                           plusw1	equ	0xFE3
 19148                           fsr1h	equ	0xFE2
 19149                           fsr1l	equ	0xFE1
 19150                           indf2	equ	0xFDF
 19151                           postinc2	equ	0xFDE
 19152                           postdec2	equ	0xFDD
 19153                           plusw2	equ	0xFDB
 19154                           fsr2h	equ	0xFDA
 19155                           fsr2l	equ	0xFD9
 19156                           status	equ	0xFD8
 19157                           
 19158 ;; *************** function _ETH_Read16 *****************
 19159 ;; Defined at:
 19160 ;;		line 452 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19161 ;; Parameters:    Size  Location     Type
 19162 ;;		None
 19163 ;; Auto vars:     Size  Location     Type
 19164 ;;  ret             2   20[COMRAM] unsigned int 
 19165 ;; Return value:  Size  Location     Type
 19166 ;;                  2   18[COMRAM] unsigned int 
 19167 ;; Registers used:
 19168 ;;		wreg, status,2, status,0, cstack
 19169 ;; Tracked objects:
 19170 ;;		On entry : 0/0
 19171 ;;		On exit  : 0/0
 19172 ;;		Unchanged: 0/0
 19173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19178 ;;Total ram usage:        4 bytes
 19179 ;; Hardware stack levels used:    1
 19180 ;; Hardware stack levels required when called:    5
 19181 ;; This function calls:
 19182 ;;		_ETH_EdataRead
 19183 ;; This function is called by:
 19184 ;;		_ICMP_Receive
 19185 ;;		_ICMP_EchoReply
 19186 ;;		_DHCP_Handler
 19187 ;;		_DNS_Handler
 19188 ;;		_TCP_ParseTCPOptions
 19189 ;;		_TFTP_Handler
 19190 ;; This function uses a non-reentrant model
 19191 ;;
 19192                           
 19193                           	psect	text70
 19194  0168D2                     __ptext70:
 19195                           	opt stack 0
 19196  0168D2                     _ETH_Read16:
 19197                           	opt stack 20
 19198                           
 19199                           ;ETHxxJ6x_driver.c: 454: uint16_t ret = 0;
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;incstack = 0
 19203  0168D2  0E00               	movlw	0
 19204  0168D4  6E16               	movwf	ETH_Read16@ret+1,c
 19205  0168D6  0E00               	movlw	0
 19206  0168D8  6E15               	movwf	ETH_Read16@ret,c
 19207                           
 19208                           ;ETHxxJ6x_driver.c: 455: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 19209  0168DA  0102               	movlb	2	; () banked
 19210  0168DC  5137               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 19211  0168DE  E104               	bnz	u10200
 19212  0168E0  0E02               	movlw	2
 19213  0168E2  5D36               	subwf	_rxPacketStatusVector& (0+255),w,b
 19214  0168E4  A0D8               	btfss	status,0,c
 19215  0168E6  D00D               	goto	l557
 19216  0168E8                     u10200:
 19217                           
 19218                           ; BSR set to: 2
 19219                           ;ETHxxJ6x_driver.c: 456: {
 19220                           ;ETHxxJ6x_driver.c: 457: ((uint8_t *)&ret)[1] = ETH_EdataRead();
 19221  0168E8  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 19222  0168EC  6E16               	movwf	ETH_Read16@ret+1,c
 19223                           
 19224                           ;ETHxxJ6x_driver.c: 458: ((uint8_t *)&ret)[0] = ETH_EdataRead();
 19225  0168EE  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 19226  0168F2  6E15               	movwf	ETH_Read16@ret,c
 19227                           
 19228                           ;ETHxxJ6x_driver.c: 459: rxPacketStatusVector.byteCount -= sizeof(ret);
 19229  0168F4  0E02               	movlw	2
 19230  0168F6  0102               	movlb	2	; () banked
 19231  0168F8  5F36               	subwf	_rxPacketStatusVector& (0+255),f,b
 19232  0168FA  0E00               	movlw	0
 19233  0168FC  5B37               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 19234                           
 19235                           ; BSR set to: 2
 19236                           ;ETHxxJ6x_driver.c: 460: ethData.error = 0;
 19237  0168FE  9124               	bcf	_ethData& (0+255),0,b	;volatile
 19238                           
 19239                           ;ETHxxJ6x_driver.c: 461: }
 19240  016900  D001               	goto	l558
 19241  016902                     l557:
 19242                           
 19243                           ; BSR set to: 2
 19244                           ;ETHxxJ6x_driver.c: 462: else
 19245                           ;ETHxxJ6x_driver.c: 463: {
 19246                           ;ETHxxJ6x_driver.c: 464: ethData.error = 1;
 19247  016902  8124               	bsf	_ethData& (0+255),0,b	;volatile
 19248  016904                     l558:
 19249                           
 19250                           ; BSR set to: 2
 19251                           ;ETHxxJ6x_driver.c: 465: }
 19252                           ;ETHxxJ6x_driver.c: 466: return ret;
 19253  016904  C015  F013         	movff	ETH_Read16@ret,?_ETH_Read16
 19254  016908  C016  F014         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
 19255                           
 19256                           ; BSR set to: 2
 19257  01690C  0012               	return		;funcret
 19258  01690E                     __end_of_ETH_Read16:
 19259                           	opt stack 0
 19260                           tosu	equ	0xFFF
 19261                           tosh	equ	0xFFE
 19262                           tosl	equ	0xFFD
 19263                           pclath	equ	0xFFA
 19264                           tblptru	equ	0xFF8
 19265                           tblptrh	equ	0xFF7
 19266                           tblptrl	equ	0xFF6
 19267                           tablat	equ	0xFF5
 19268                           prodh	equ	0xFF4
 19269                           prodl	equ	0xFF3
 19270                           intcon	equ	0xFF2
 19271                           indf0	equ	0xFEF
 19272                           postinc0	equ	0xFEE
 19273                           fsr0h	equ	0xFEA
 19274                           fsr0l	equ	0xFE9
 19275                           wreg	equ	0xFE8
 19276                           indf1	equ	0xFE7
 19277                           postinc1	equ	0xFE6
 19278                           postdec1	equ	0xFE5
 19279                           plusw1	equ	0xFE3
 19280                           fsr1h	equ	0xFE2
 19281                           fsr1l	equ	0xFE1
 19282                           indf2	equ	0xFDF
 19283                           postinc2	equ	0xFDE
 19284                           postdec2	equ	0xFDD
 19285                           plusw2	equ	0xFDB
 19286                           fsr2h	equ	0xFDA
 19287                           fsr2l	equ	0xFD9
 19288                           status	equ	0xFD8
 19289                           
 19290 ;; *************** function _ETH_Copy *****************
 19291 ;; Defined at:
 19292 ;;		line 866 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19293 ;; Parameters:    Size  Location     Type
 19294 ;;  len             2   24[COMRAM] unsigned int 
 19295 ;; Auto vars:     Size  Location     Type
 19296 ;;  tmp_len         2   28[COMRAM] unsigned int 
 19297 ;;  timer           2   26[COMRAM] unsigned int 
 19298 ;; Return value:  Size  Location     Type
 19299 ;;                  1    wreg      enum E4853
 19300 ;; Registers used:
 19301 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19302 ;; Tracked objects:
 19303 ;;		On entry : 0/0
 19304 ;;		On exit  : 0/0
 19305 ;;		Unchanged: 0/0
 19306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19308 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19310 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19311 ;;Total ram usage:        6 bytes
 19312 ;; Hardware stack levels used:    1
 19313 ;; Hardware stack levels required when called:    5
 19314 ;; This function calls:
 19315 ;;		___wmul
 19316 ;; This function is called by:
 19317 ;;		_ICMP_EchoReply
 19318 ;;		_ICMP_PortUnreachable
 19319 ;; This function uses a non-reentrant model
 19320 ;;
 19321                           
 19322                           	psect	text71
 19323  015AC8                     __ptext71:
 19324                           	opt stack 0
 19325  015AC8                     _ETH_Copy:
 19326                           	opt stack 20
 19327                           
 19328                           ;ETHxxJ6x_driver.c: 868: uint16_t timer;
 19329                           ;ETHxxJ6x_driver.c: 869: uint16_t tmp_len;
 19330                           ;ETHxxJ6x_driver.c: 871: timer = 2 * len;
 19331                           
 19332                           ; BSR set to: 2
 19333                           ;incstack = 0
 19334  015AC8  90D8               	bcf	status,0,c
 19335  015ACA  3419               	rlcf	ETH_Copy@len,w,c
 19336  015ACC  6E1B               	movwf	ETH_Copy@timer,c
 19337  015ACE  341A               	rlcf	ETH_Copy@len+1,w,c
 19338  015AD0  6E1C               	movwf	ETH_Copy@timer+1,c
 19339                           
 19340                           ;ETHxxJ6x_driver.c: 872: while(ECON1bits.DMAST!=0 && --timer) __nop();
 19341  015AD2  D001               	goto	l666
 19342  015AD4                     l667:
 19343  015AD4  F000               	nop	
 19344  015AD6                     l666:
 19345  015AD6  AAD2               	btfss	4050,5,c	;volatile
 19346  015AD8  D007               	goto	u10250
 19347  015ADA  061B               	decf	ETH_Copy@timer,f,c
 19348  015ADC  A0D8               	btfss	status,0,c
 19349  015ADE  061C               	decf	ETH_Copy@timer+1,f,c
 19350  015AE0  501B               	movf	ETH_Copy@timer,w,c
 19351  015AE2  101C               	iorwf	ETH_Copy@timer+1,w,c
 19352  015AE4  A4D8               	btfss	status,2,c
 19353  015AE6  D7F6               	goto	l667
 19354  015AE8                     u10250:
 19355                           
 19356                           ;ETHxxJ6x_driver.c: 873: if(ECON1bits.DMAST==0)
 19357  015AE8  BAD2               	btfsc	4050,5,c	;volatile
 19358  015AEA  D042               	goto	l679
 19359                           
 19360                           ;ETHxxJ6x_driver.c: 874: {
 19361                           ;ETHxxJ6x_driver.c: 875: EDMADST = EWRPT;
 19362  015AEC  CEE2 FEF4          	movff	3810,3828	;volatile
 19363  015AF0  CEE3 FEF5          	movff	3811,3829	;volatile
 19364                           
 19365                           ;ETHxxJ6x_driver.c: 876: EDMAST = ERDPT;
 19366  015AF4  CF7A FEF0          	movff	3962,3824	;volatile
 19367  015AF8  CF7B FEF1          	movff	3963,3825	;volatile
 19368                           
 19369                           ;ETHxxJ6x_driver.c: 878: tmp_len = ERDPT + len;
 19370  015AFC  5019               	movf	ETH_Copy@len,w,c
 19371  015AFE  247A               	addwf	3962,w,c	;volatile
 19372  015B00  6E1D               	movwf	ETH_Copy@tmp_len,c
 19373  015B02  501A               	movf	ETH_Copy@len+1,w,c
 19374  015B04  207B               	addwfc	3963,w,c	;volatile
 19375  015B06  6E1E               	movwf	ETH_Copy@tmp_len+1,c
 19376                           
 19377                           ;ETHxxJ6x_driver.c: 880: if (tmp_len > ((((8192) - (((1518) + (7)) << 1)) - 1)) )
 19378  015B08  0E16               	movlw	22
 19379  015B0A  5C1D               	subwf	ETH_Copy@tmp_len,w,c
 19380  015B0C  0E14               	movlw	20
 19381  015B0E  581E               	subwfb	ETH_Copy@tmp_len+1,w,c
 19382  015B10  A0D8               	btfss	status,0,c
 19383  015B12  D006               	goto	l10782
 19384                           
 19385                           ;ETHxxJ6x_driver.c: 881: {
 19386                           ;ETHxxJ6x_driver.c: 882: tmp_len = tmp_len - ((((8192) - (((1518) + (7)) << 1)) - 1));
 19387  015B14  0EEB               	movlw	235
 19388  015B16  241D               	addwf	ETH_Copy@tmp_len,w,c
 19389  015B18  6E1D               	movwf	ETH_Copy@tmp_len,c
 19390  015B1A  0EEB               	movlw	235
 19391  015B1C  201E               	addwfc	ETH_Copy@tmp_len+1,w,c
 19392  015B1E  6E1E               	movwf	ETH_Copy@tmp_len+1,c
 19393  015B20                     l10782:
 19394                           
 19395                           ;ETHxxJ6x_driver.c: 886: {
 19396                           ;ETHxxJ6x_driver.c: 887: EDMAND = tmp_len;
 19397                           
 19398                           ;ETHxxJ6x_driver.c: 885: }else
 19399                           
 19400                           ;ETHxxJ6x_driver.c: 883: EDMAND = (0) + tmp_len;
 19401  015B20  C01D  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
 19402  015B24  C01E  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
 19403                           
 19404                           ;ETHxxJ6x_driver.c: 888: }
 19405                           ;ETHxxJ6x_driver.c: 890: ECON1bits.CSUMEN = 0;
 19406  015B28  98D2               	bcf	4050,4,c	;volatile
 19407                           
 19408                           ;ETHxxJ6x_driver.c: 891: ECON1bits.DMAST = 1;
 19409  015B2A  8AD2               	bsf	4050,5,c	;volatile
 19410                           
 19411                           ;ETHxxJ6x_driver.c: 893: timer = 40 * len;
 19412  015B2C  C019  F013         	movff	ETH_Copy@len,___wmul@multiplier
 19413  015B30  C01A  F014         	movff	ETH_Copy@len+1,___wmul@multiplier+1
 19414  015B34  0E00               	movlw	0
 19415  015B36  6E16               	movwf	___wmul@multiplicand+1,c
 19416  015B38  0E28               	movlw	40
 19417  015B3A  6E15               	movwf	___wmul@multiplicand,c
 19418  015B3C  EC4A  F0B6         	call	___wmul	;wreg free
 19419  015B40  C013  F01B         	movff	?___wmul,ETH_Copy@timer
 19420  015B44  C014  F01C         	movff	?___wmul+1,ETH_Copy@timer+1
 19421                           
 19422                           ;ETHxxJ6x_driver.c: 894: while(ECON1bits.DMAST!=0 && --timer) __nop();
 19423  015B48  D001               	goto	l674
 19424  015B4A                     l675:
 19425  015B4A  F000               	nop	
 19426  015B4C                     l674:
 19427  015B4C  AAD2               	btfss	4050,5,c	;volatile
 19428  015B4E  D007               	goto	u10290
 19429  015B50  061B               	decf	ETH_Copy@timer,f,c
 19430  015B52  A0D8               	btfss	status,0,c
 19431  015B54  061C               	decf	ETH_Copy@timer+1,f,c
 19432  015B56  501B               	movf	ETH_Copy@timer,w,c
 19433  015B58  101C               	iorwf	ETH_Copy@timer+1,w,c
 19434  015B5A  A4D8               	btfss	status,2,c
 19435  015B5C  D7F6               	goto	l675
 19436  015B5E                     u10290:
 19437                           
 19438                           ;ETHxxJ6x_driver.c: 895: if(ECON1bits.DMAST == 0)
 19439  015B5E  BAD2               	btfsc	4050,5,c	;volatile
 19440  015B60  D007               	goto	l679
 19441                           
 19442                           ;ETHxxJ6x_driver.c: 896: {
 19443                           ;ETHxxJ6x_driver.c: 897: EWRPT += len;
 19444  015B62  5019               	movf	ETH_Copy@len,w,c
 19445  015B64  010E               	movlb	14	; () banked
 19446  015B66  27E2               	addwf	226,f,b	;volatile
 19447  015B68  501A               	movf	ETH_Copy@len+1,w,c
 19448  015B6A  23E3               	addwfc	227,f,b	;volatile
 19449                           
 19450                           ; BSR set to: 14
 19451                           ;ETHxxJ6x_driver.c: 898: return SUCCESS;
 19452  015B6C  0E01               	movlw	1
 19453                           
 19454                           ; BSR set to: 14
 19455  015B6E  0012               	return	
 19456  015B70                     l679:
 19457                           
 19458                           ; BSR set to: 14
 19459  015B70  00FF               	reset		;# 
 19460                           
 19461                           ;ETHxxJ6x_driver.c: 903: return DMA_TIMEOUT;
 19462  015B72  0E0C               	movlw	12
 19463  015B74  0012               	return	
 19464  015B76                     __end_of_ETH_Copy:
 19465                           	opt stack 0
 19466                           tosu	equ	0xFFF
 19467                           tosh	equ	0xFFE
 19468                           tosl	equ	0xFFD
 19469                           pclath	equ	0xFFA
 19470                           tblptru	equ	0xFF8
 19471                           tblptrh	equ	0xFF7
 19472                           tblptrl	equ	0xFF6
 19473                           tablat	equ	0xFF5
 19474                           prodh	equ	0xFF4
 19475                           prodl	equ	0xFF3
 19476                           intcon	equ	0xFF2
 19477                           indf0	equ	0xFEF
 19478                           postinc0	equ	0xFEE
 19479                           fsr0h	equ	0xFEA
 19480                           fsr0l	equ	0xFE9
 19481                           wreg	equ	0xFE8
 19482                           indf1	equ	0xFE7
 19483                           postinc1	equ	0xFE6
 19484                           postdec1	equ	0xFE5
 19485                           plusw1	equ	0xFE3
 19486                           fsr1h	equ	0xFE2
 19487                           fsr1l	equ	0xFE1
 19488                           indf2	equ	0xFDF
 19489                           postinc2	equ	0xFDE
 19490                           postdec2	equ	0xFDD
 19491                           plusw2	equ	0xFDB
 19492                           fsr2h	equ	0xFDA
 19493                           fsr2l	equ	0xFD9
 19494                           status	equ	0xFD8
 19495                           
 19496 ;; *************** function _ETH_Dump *****************
 19497 ;; Defined at:
 19498 ;;		line 789 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19499 ;; Parameters:    Size  Location     Type
 19500 ;;  length          2   18[COMRAM] unsigned int 
 19501 ;; Auto vars:     Size  Location     Type
 19502 ;;		None
 19503 ;; Return value:  Size  Location     Type
 19504 ;;                  1    wreg      void 
 19505 ;; Registers used:
 19506 ;;		wreg, status,2, status,0
 19507 ;; Tracked objects:
 19508 ;;		On entry : 0/0
 19509 ;;		On exit  : 0/0
 19510 ;;		Unchanged: 0/0
 19511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19516 ;;Total ram usage:        2 bytes
 19517 ;; Hardware stack levels used:    1
 19518 ;; Hardware stack levels required when called:    4
 19519 ;; This function calls:
 19520 ;;		Nothing
 19521 ;; This function is called by:
 19522 ;;		_IPV4_Packet
 19523 ;;		_ICMP_Receive
 19524 ;;		_DHCP_Handler
 19525 ;;		_TCP_ParseTCPOptions
 19526 ;; This function uses a non-reentrant model
 19527 ;;
 19528                           
 19529                           	psect	text72
 19530  016A8C                     __ptext72:
 19531                           	opt stack 0
 19532  016A8C                     _ETH_Dump:
 19533                           	opt stack 21
 19534                           
 19535                           ;ETHxxJ6x_driver.c: 791: length = (rxPacketStatusVector.byteCount <= length) ? rxPacketS
      +                          tatusVector.byteCount : length;
 19536                           
 19537                           ;incstack = 0
 19538  016A8C  0102               	movlb	2	; () banked
 19539  016A8E  5136               	movf	_rxPacketStatusVector& (0+255),w,b
 19540  016A90  5C13               	subwf	ETH_Dump@length,w,c
 19541  016A92  5137               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 19542  016A94  5814               	subwfb	ETH_Dump@length+1,w,c
 19543  016A96  A0D8               	btfss	status,0,c
 19544  016A98  D004               	goto	l654
 19545                           
 19546                           ; BSR set to: 2
 19547                           
 19548                           ; BSR set to: 2
 19549  016A9A  C236  F013         	movff	_rxPacketStatusVector,ETH_Dump@length
 19550  016A9E  C237  F014         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
 19551  016AA2                     l654:
 19552                           
 19553                           ; BSR set to: 2
 19554                           ;ETHxxJ6x_driver.c: 792: if (length)
 19555                           
 19556                           ; BSR set to: 2
 19557  016AA2  5013               	movf	ETH_Dump@length,w,c
 19558  016AA4  1014               	iorwf	ETH_Dump@length+1,w,c
 19559  016AA6  B4D8               	btfsc	status,2,c
 19560  016AA8  0012               	return	
 19561                           
 19562                           ; BSR set to: 2
 19563                           ;ETHxxJ6x_driver.c: 793: {
 19564                           ;ETHxxJ6x_driver.c: 795: ERDPT += length;
 19565  016AAA  5013               	movf	ETH_Dump@length,w,c
 19566  016AAC  267A               	addwf	3962,f,c	;volatile
 19567  016AAE  5014               	movf	ETH_Dump@length+1,w,c
 19568  016AB0  227B               	addwfc	3963,f,c	;volatile
 19569                           
 19570                           ;ETHxxJ6x_driver.c: 796: rxPacketStatusVector.byteCount -= length;
 19571  016AB2  5013               	movf	ETH_Dump@length,w,c
 19572  016AB4  5F36               	subwf	_rxPacketStatusVector& (0+255),f,b
 19573  016AB6  5014               	movf	ETH_Dump@length+1,w,c
 19574  016AB8  5B37               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 19575  016ABA  0012               	return	
 19576  016ABC                     __end_of_ETH_Dump:
 19577                           	opt stack 0
 19578                           tosu	equ	0xFFF
 19579                           tosh	equ	0xFFE
 19580                           tosl	equ	0xFFD
 19581                           pclath	equ	0xFFA
 19582                           tblptru	equ	0xFF8
 19583                           tblptrh	equ	0xFF7
 19584                           tblptrl	equ	0xFF6
 19585                           tablat	equ	0xFF5
 19586                           prodh	equ	0xFF4
 19587                           prodl	equ	0xFF3
 19588                           intcon	equ	0xFF2
 19589                           indf0	equ	0xFEF
 19590                           postinc0	equ	0xFEE
 19591                           fsr0h	equ	0xFEA
 19592                           fsr0l	equ	0xFE9
 19593                           wreg	equ	0xFE8
 19594                           indf1	equ	0xFE7
 19595                           postinc1	equ	0xFE6
 19596                           postdec1	equ	0xFE5
 19597                           plusw1	equ	0xFE3
 19598                           fsr1h	equ	0xFE2
 19599                           fsr1l	equ	0xFE1
 19600                           indf2	equ	0xFDF
 19601                           postinc2	equ	0xFDE
 19602                           postdec2	equ	0xFDD
 19603                           plusw2	equ	0xFDB
 19604                           fsr2h	equ	0xFDA
 19605                           fsr2l	equ	0xFD9
 19606                           status	equ	0xFD8
 19607                           
 19608 ;; *************** function _ETH_RxComputeChecksum *****************
 19609 ;; Defined at:
 19610 ;;		line 1026 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19611 ;; Parameters:    Size  Location     Type
 19612 ;;  len             2   36[COMRAM] unsigned int 
 19613 ;;  seed            2   38[COMRAM] unsigned int 
 19614 ;; Auto vars:     Size  Location     Type
 19615 ;;  cksm            4   46[COMRAM] unsigned long 
 19616 ;;  rxptr           2   44[COMRAM] unsigned int 
 19617 ;; Return value:  Size  Location     Type
 19618 ;;                  2   36[COMRAM] unsigned int 
 19619 ;; Registers used:
 19620 ;;		wreg, status,2, status,0, cstack
 19621 ;; Tracked objects:
 19622 ;;		On entry : 0/0
 19623 ;;		On exit  : 0/0
 19624 ;;		Unchanged: 0/0
 19625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19627 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19629 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19630 ;;Total ram usage:       14 bytes
 19631 ;; Hardware stack levels used:    1
 19632 ;; Hardware stack levels required when called:    6
 19633 ;; This function calls:
 19634 ;;		_ETH_ComputeChecksum
 19635 ;; This function is called by:
 19636 ;;		_IPV4_Packet
 19637 ;; This function uses a non-reentrant model
 19638 ;;
 19639                           
 19640                           	psect	text73
 19641  0166E4                     __ptext73:
 19642                           	opt stack 0
 19643  0166E4                     _ETH_RxComputeChecksum:
 19644                           	opt stack 21
 19645                           
 19646                           ;ETHxxJ6x_driver.c: 1028: uint16_t rxptr;
 19647                           ;ETHxxJ6x_driver.c: 1029: uint32_t cksm;
 19648                           ;ETHxxJ6x_driver.c: 1032: rxptr = ERDPT;
 19649                           
 19650                           ; BSR set to: 2
 19651                           ;incstack = 0
 19652  0166E4  CF7A F02D          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
 19653  0166E8  CF7B F02E          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
 19654                           
 19655                           ;ETHxxJ6x_driver.c: 1034: cksm = ETH_ComputeChecksum( len, seed);
 19656  0166EC  C025  F013         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
 19657  0166F0  C026  F014         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 19658  0166F4  C027  F015         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
 19659  0166F8  C028  F016         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 19660  0166FC  EC22  F0A9         	call	_ETH_ComputeChecksum	;wreg free
 19661  016700  C013  F02F         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
 19662  016704  C014  F030         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
 19663  016708  6A31               	clrf	ETH_RxComputeChecksum@cksm+2,c
 19664  01670A  6A32               	clrf	ETH_RxComputeChecksum@cksm+3,c
 19665                           
 19666                           ;ETHxxJ6x_driver.c: 1037: ERDPT = rxptr;
 19667  01670C  C02D  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
 19668  016710  C02E  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
 19669                           
 19670                           ;ETHxxJ6x_driver.c: 1040: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 19671  016714  502F               	movf	ETH_RxComputeChecksum@cksm,w,c
 19672  016716  6E2A               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
 19673  016718  6A29               	clrf	??_ETH_RxComputeChecksum& (0+255),c
 19674  01671A  0EFF               	movlw	255
 19675  01671C  1430               	andwf	ETH_RxComputeChecksum@cksm+1,w,c
 19676  01671E  6E2B               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
 19677  016720  0E00               	movlw	0
 19678  016722  1431               	andwf	ETH_RxComputeChecksum@cksm+2,w,c
 19679  016724  6E2C               	movwf	(??_ETH_RxComputeChecksum+3)& (0+255),c
 19680  016726  5029               	movf	??_ETH_RxComputeChecksum,w,c
 19681  016728  102B               	iorwf	??_ETH_RxComputeChecksum+2,w,c
 19682  01672A  6E25               	movwf	?_ETH_RxComputeChecksum,c
 19683  01672C  502A               	movf	??_ETH_RxComputeChecksum+1,w,c
 19684  01672E  102C               	iorwf	??_ETH_RxComputeChecksum+3,w,c
 19685  016730  6E26               	movwf	?_ETH_RxComputeChecksum+1,c
 19686  016732  0012               	return	
 19687  016734                     __end_of_ETH_RxComputeChecksum:
 19688                           	opt stack 0
 19689                           tosu	equ	0xFFF
 19690                           tosh	equ	0xFFE
 19691                           tosl	equ	0xFFD
 19692                           pclath	equ	0xFFA
 19693                           tblptru	equ	0xFF8
 19694                           tblptrh	equ	0xFF7
 19695                           tblptrl	equ	0xFF6
 19696                           tablat	equ	0xFF5
 19697                           prodh	equ	0xFF4
 19698                           prodl	equ	0xFF3
 19699                           intcon	equ	0xFF2
 19700                           indf0	equ	0xFEF
 19701                           postinc0	equ	0xFEE
 19702                           fsr0h	equ	0xFEA
 19703                           fsr0l	equ	0xFE9
 19704                           wreg	equ	0xFE8
 19705                           indf1	equ	0xFE7
 19706                           postinc1	equ	0xFE6
 19707                           postdec1	equ	0xFE5
 19708                           plusw1	equ	0xFE3
 19709                           fsr1h	equ	0xFE2
 19710                           fsr1l	equ	0xFE1
 19711                           indf2	equ	0xFDF
 19712                           postinc2	equ	0xFDE
 19713                           postdec2	equ	0xFDD
 19714                           plusw2	equ	0xFDB
 19715                           fsr2h	equ	0xFDA
 19716                           fsr2l	equ	0xFD9
 19717                           status	equ	0xFD8
 19718                           
 19719 ;; *************** function _ETH_NextPacketUpdate *****************
 19720 ;; Defined at:
 19721 ;;		line 319 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19722 ;; Parameters:    Size  Location     Type
 19723 ;;		None
 19724 ;; Auto vars:     Size  Location     Type
 19725 ;;		None
 19726 ;; Return value:  Size  Location     Type
 19727 ;;                  1    wreg      void 
 19728 ;; Registers used:
 19729 ;;		wreg, status,2, status,0, cstack
 19730 ;; Tracked objects:
 19731 ;;		On entry : 0/0
 19732 ;;		On exit  : 0/0
 19733 ;;		Unchanged: 0/0
 19734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19739 ;;Total ram usage:        0 bytes
 19740 ;; Hardware stack levels used:    1
 19741 ;; Hardware stack levels required when called:    5
 19742 ;; This function calls:
 19743 ;;		_ETH_EdataRead
 19744 ;; This function is called by:
 19745 ;;		_Network_Read
 19746 ;; This function uses a non-reentrant model
 19747 ;;
 19748                           
 19749                           	psect	text74
 19750  016894                     __ptext74:
 19751                           	opt stack 0
 19752  016894                     _ETH_NextPacketUpdate:
 19753                           	opt stack 23
 19754                           
 19755                           ;ETHxxJ6x_driver.c: 322: ERDPT = nextPacketPointer;
 19756                           
 19757                           ;incstack = 0
 19758  016894  C041  FF7A         	movff	_nextPacketPointer,3962	;volatile
 19759  016898  C042  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
 19760                           
 19761                           ;ETHxxJ6x_driver.c: 326: ((char *) &nextPacketPointer)[0] = ETH_EdataRead();
 19762  01689C  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 19763  0168A0  6E41               	movwf	_nextPacketPointer,c
 19764                           
 19765                           ;ETHxxJ6x_driver.c: 327: ((char *) &nextPacketPointer)[1] = ETH_EdataRead();
 19766  0168A2  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 19767  0168A6  6E42               	movwf	_nextPacketPointer+1,c
 19768                           
 19769                           ;ETHxxJ6x_driver.c: 328: ((char *) &rxPacketStatusVector)[0] = ETH_EdataRead();
 19770  0168A8  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 19771  0168AC  0102               	movlb	2	; () banked
 19772  0168AE  6F36               	movwf	_rxPacketStatusVector& (0+255),b
 19773                           
 19774                           ;ETHxxJ6x_driver.c: 329: ((char *) &rxPacketStatusVector)[1] = ETH_EdataRead();
 19775  0168B0  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 19776  0168B4  0102               	movlb	2	; () banked
 19777  0168B6  6F37               	movwf	(_rxPacketStatusVector+1)& (0+255),b
 19778                           
 19779                           ;ETHxxJ6x_driver.c: 330: ((char *) &rxPacketStatusVector)[2] = ETH_EdataRead();
 19780  0168B8  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 19781  0168BC  0102               	movlb	2	; () banked
 19782  0168BE  6F38               	movwf	(_rxPacketStatusVector+2)& (0+255),b
 19783                           
 19784                           ;ETHxxJ6x_driver.c: 331: ((char *) &rxPacketStatusVector)[3] = ETH_EdataRead();
 19785  0168C0  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 19786  0168C4  0102               	movlb	2	; () banked
 19787  0168C6  6F39               	movwf	(_rxPacketStatusVector+3)& (0+255),b
 19788                           
 19789                           ; BSR set to: 2
 19790                           ;ETHxxJ6x_driver.c: 334: rxPacketStatusVector.byteCount -= 4;
 19791  0168C8  0E04               	movlw	4
 19792  0168CA  5F36               	subwf	_rxPacketStatusVector& (0+255),f,b
 19793  0168CC  0E00               	movlw	0
 19794  0168CE  5B37               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 19795                           
 19796                           ; BSR set to: 2
 19797  0168D0  0012               	return		;funcret
 19798  0168D2                     __end_of_ETH_NextPacketUpdate:
 19799                           	opt stack 0
 19800                           tosu	equ	0xFFF
 19801                           tosh	equ	0xFFE
 19802                           tosl	equ	0xFFD
 19803                           pclath	equ	0xFFA
 19804                           tblptru	equ	0xFF8
 19805                           tblptrh	equ	0xFF7
 19806                           tblptrl	equ	0xFF6
 19807                           tablat	equ	0xFF5
 19808                           prodh	equ	0xFF4
 19809                           prodl	equ	0xFF3
 19810                           intcon	equ	0xFF2
 19811                           indf0	equ	0xFEF
 19812                           postinc0	equ	0xFEE
 19813                           fsr0h	equ	0xFEA
 19814                           fsr0l	equ	0xFE9
 19815                           wreg	equ	0xFE8
 19816                           indf1	equ	0xFE7
 19817                           postinc1	equ	0xFE6
 19818                           postdec1	equ	0xFE5
 19819                           plusw1	equ	0xFE3
 19820                           fsr1h	equ	0xFE2
 19821                           fsr1l	equ	0xFE1
 19822                           indf2	equ	0xFDF
 19823                           postinc2	equ	0xFDE
 19824                           postdec2	equ	0xFDD
 19825                           plusw2	equ	0xFDB
 19826                           fsr2h	equ	0xFDA
 19827                           fsr2l	equ	0xFD9
 19828                           status	equ	0xFD8
 19829                           
 19830 ;; *************** function _ETH_Flush *****************
 19831 ;; Defined at:
 19832 ;;		line 803 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19833 ;; Parameters:    Size  Location     Type
 19834 ;;		None
 19835 ;; Auto vars:     Size  Location     Type
 19836 ;;		None
 19837 ;; Return value:  Size  Location     Type
 19838 ;;                  1    wreg      void 
 19839 ;; Registers used:
 19840 ;;		wreg, status,2, status,0
 19841 ;; Tracked objects:
 19842 ;;		On entry : 0/0
 19843 ;;		On exit  : 0/0
 19844 ;;		Unchanged: 0/0
 19845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19850 ;;Total ram usage:        4 bytes
 19851 ;; Hardware stack levels used:    1
 19852 ;; Hardware stack levels required when called:    4
 19853 ;; This function calls:
 19854 ;;		Nothing
 19855 ;; This function is called by:
 19856 ;;		_ETH_Init
 19857 ;;		_Network_Read
 19858 ;; This function uses a non-reentrant model
 19859 ;;
 19860                           
 19861                           	psect	text75
 19862  01629A                     __ptext75:
 19863                           	opt stack 0
 19864  01629A                     _ETH_Flush:
 19865                           	opt stack 23
 19866                           
 19867                           ;ETHxxJ6x_driver.c: 805: ethData.pktReady = 0;
 19868                           
 19869                           ; BSR set to: 2
 19870                           ;incstack = 0
 19871  01629A  0102               	movlb	2	; () banked
 19872  01629C  9324               	bcf	_ethData& (0+255),1,b	;volatile
 19873                           
 19874                           ; BSR set to: 2
 19875                           ;ETHxxJ6x_driver.c: 807: ECON2 = ECON2 | 0x40;
 19876  01629E  010E               	movlb	14	; () banked
 19877  0162A0  51FE               	movf	254,w,b	;volatile
 19878  0162A2  0940               	iorlw	64
 19879  0162A4  6FFE               	movwf	254,b	;volatile
 19880                           
 19881                           ;ETHxxJ6x_driver.c: 813: if (((nextPacketPointer - 1) < ERXST) ||
 19882                           ;ETHxxJ6x_driver.c: 814: ((nextPacketPointer - 1) > ERXND))
 19883  0162A6  0EFF               	movlw	255
 19884  0162A8  6E13               	movwf	??_ETH_Flush& (0+255),c
 19885  0162AA  0EFF               	movlw	255
 19886  0162AC  6E14               	movwf	(??_ETH_Flush+1)& (0+255),c
 19887  0162AE  C041  F015         	movff	_nextPacketPointer,??_ETH_Flush+2
 19888  0162B2  C042  F016         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 19889  0162B6  5013               	movf	??_ETH_Flush,w,c
 19890  0162B8  2615               	addwf	??_ETH_Flush+2,f,c
 19891  0162BA  5014               	movf	??_ETH_Flush+1,w,c
 19892  0162BC  2216               	addwfc	??_ETH_Flush+3,f,c
 19893  0162BE  51E8               	movf	232,w,b	;volatile
 19894  0162C0  5C15               	subwf	??_ETH_Flush+2,w,c
 19895  0162C2  51E9               	movf	233,w,b	;volatile
 19896  0162C4  5816               	subwfb	??_ETH_Flush+3,w,c
 19897  0162C6  A0D8               	btfss	status,0,c
 19898  0162C8  D012               	goto	u12120
 19899                           
 19900                           ; BSR set to: 14
 19901  0162CA  0EFF               	movlw	255
 19902  0162CC  6E13               	movwf	??_ETH_Flush& (0+255),c
 19903  0162CE  0EFF               	movlw	255
 19904  0162D0  6E14               	movwf	(??_ETH_Flush+1)& (0+255),c
 19905  0162D2  C041  F015         	movff	_nextPacketPointer,??_ETH_Flush+2
 19906  0162D6  C042  F016         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 19907  0162DA  5013               	movf	??_ETH_Flush,w,c
 19908  0162DC  2615               	addwf	??_ETH_Flush+2,f,c
 19909  0162DE  5014               	movf	??_ETH_Flush+1,w,c
 19910  0162E0  2216               	addwfc	??_ETH_Flush+3,f,c
 19911  0162E2  5015               	movf	??_ETH_Flush+2,w,c
 19912  0162E4  5DEA               	subwf	234,w,b	;volatile
 19913  0162E6  5016               	movf	??_ETH_Flush+3,w,c
 19914  0162E8  59EB               	subwfb	235,w,b	;volatile
 19915  0162EA  B0D8               	btfsc	status,0,c
 19916  0162EC  D005               	goto	l659
 19917  0162EE                     u12120:
 19918                           
 19919                           ; BSR set to: 14
 19920                           ;ETHxxJ6x_driver.c: 815: ERXRDPT = ERXND;
 19921  0162EE  CEEA FEEC          	movff	3818,3820	;volatile
 19922  0162F2  CEEB FEED          	movff	3819,3821	;volatile
 19923  0162F6  D006               	goto	l662
 19924  0162F8                     l659:
 19925                           
 19926                           ; BSR set to: 14
 19927                           ;ETHxxJ6x_driver.c: 816: else
 19928                           ;ETHxxJ6x_driver.c: 817: ERXRDPT = nextPacketPointer - 1;
 19929                           
 19930                           ; BSR set to: 14
 19931  0162F8  0EFF               	movlw	255
 19932  0162FA  2441               	addwf	_nextPacketPointer,w,c
 19933  0162FC  6FEC               	movwf	236,b	;volatile
 19934  0162FE  0EFF               	movlw	255
 19935  016300  2042               	addwfc	_nextPacketPointer+1,w,c
 19936  016302  6FED               	movwf	237,b	;volatile
 19937  016304                     l662:
 19938                           
 19939                           ; BSR set to: 14
 19940                           ;ETHxxJ6x_driver.c: 819: EIEbits.PKTIE = 1;
 19941                           
 19942                           ; BSR set to: 14
 19943  016304  8DFB               	bsf	251,6,b	;volatile
 19944                           
 19945                           ; BSR set to: 14
 19946  016306  0012               	return		;funcret
 19947  016308                     __end_of_ETH_Flush:
 19948                           	opt stack 0
 19949                           tosu	equ	0xFFF
 19950                           tosh	equ	0xFFE
 19951                           tosl	equ	0xFFD
 19952                           pclath	equ	0xFFA
 19953                           tblptru	equ	0xFF8
 19954                           tblptrh	equ	0xFF7
 19955                           tblptrl	equ	0xFF6
 19956                           tablat	equ	0xFF5
 19957                           prodh	equ	0xFF4
 19958                           prodl	equ	0xFF3
 19959                           intcon	equ	0xFF2
 19960                           indf0	equ	0xFEF
 19961                           postinc0	equ	0xFEE
 19962                           fsr0h	equ	0xFEA
 19963                           fsr0l	equ	0xFE9
 19964                           wreg	equ	0xFE8
 19965                           indf1	equ	0xFE7
 19966                           postinc1	equ	0xFE6
 19967                           postdec1	equ	0xFE5
 19968                           plusw1	equ	0xFE3
 19969                           fsr1h	equ	0xFE2
 19970                           fsr1l	equ	0xFE1
 19971                           indf2	equ	0xFDF
 19972                           postinc2	equ	0xFDE
 19973                           postdec2	equ	0xFDD
 19974                           plusw2	equ	0xFDB
 19975                           fsr2h	equ	0xFDA
 19976                           fsr2l	equ	0xFD9
 19977                           status	equ	0xFD8
 19978                           
 19979 ;; *************** function _ARPV4_Packet *****************
 19980 ;; Defined at:
 19981 ;;		line 101 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 19982 ;; Parameters:    Size  Location     Type
 19983 ;;		None
 19984 ;; Auto vars:     Size  Location     Type
 19985 ;;  x               1   39[BANK0 ] unsigned char 
 19986 ;;  arpPtr          2   36[BANK0 ] PTR struct .
 19987 ;;		 -> arpMap(104), 
 19988 ;;  x               1   38[BANK0 ] unsigned char 
 19989 ;;  header         28   42[BANK0 ] struct .
 19990 ;;  entryPointer    2   40[BANK0 ] PTR struct .
 19991 ;;		 -> arpMap(104), 
 19992 ;;  length          2   32[BANK0 ] unsigned int 
 19993 ;;  ret             1   35[BANK0 ] enum E476
 19994 ;;  mergeFlag       1   34[BANK0 ] unsigned char 
 19995 ;; Return value:  Size  Location     Type
 19996 ;;                  1    wreg      enum E476
 19997 ;; Registers used:
 19998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/0
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20005 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20006 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20007 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20008 ;;Total ram usage:       70 bytes
 20009 ;; Hardware stack levels used:    1
 20010 ;; Hardware stack levels required when called:    7
 20011 ;; This function calls:
 20012 ;;		_ETH_ReadBlock
 20013 ;;		_ETH_Send
 20014 ;;		_ETH_WriteBlock
 20015 ;;		_ETH_WriteStart
 20016 ;;		_memcpy
 20017 ;; This function is called by:
 20018 ;;		_Network_Read
 20019 ;; This function uses a non-reentrant model
 20020 ;;
 20021                           
 20022                           	psect	text76
 20023  012662                     __ptext76:
 20024                           	opt stack 0
 20025  012662                     _ARPV4_Packet:
 20026                           	opt stack 21
 20027                           
 20028                           ;arpv4.c: 103: arpHeader_t header;
 20029                           ;arpv4.c: 104: arpMap_t *entryPointer;
 20030                           ;arpv4.c: 105: bool mergeFlag;
 20031                           ;arpv4.c: 106: uint16_t length;
 20032                           ;arpv4.c: 107: error_msg ret;
 20033                           ;arpv4.c: 109: ret = ERROR;
 20034                           
 20035                           ; BSR set to: 14
 20036                           ;incstack = 0
 20037  012662  0E00               	movlw	0
 20038  012664  0100               	movlb	0	; () banked
 20039  012666  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 20040                           
 20041                           ; BSR set to: 0
 20042                           ;arpv4.c: 111: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
 20043  012668  0E8A               	movlw	low ARPV4_Packet@header
 20044  01266A  6E13               	movwf	ETH_ReadBlock@buffer,c
 20045  01266C  0E00               	movlw	high ARPV4_Packet@header
 20046  01266E  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 20047  012670  0E00               	movlw	0
 20048  012672  6E16               	movwf	ETH_ReadBlock@length+1,c
 20049  012674  0E1C               	movlw	28
 20050  012676  6E15               	movwf	ETH_ReadBlock@length,c
 20051  012678  ECF5  F0B2         	call	_ETH_ReadBlock	;wreg free
 20052  01267C  C013  F080         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
 20053  012680  C014  F081         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
 20054                           
 20055                           ;arpv4.c: 112: if(length == sizeof(arpHeader_t))
 20056  012684  0E1C               	movlw	28
 20057  012686  0100               	movlb	0	; () banked
 20058  012688  1980               	xorwf	ARPV4_Packet@length& (0+255),w,b
 20059  01268A  1181               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
 20060  01268C  A4D8               	btfss	status,2,c
 20061  01268E  0012               	return	
 20062                           
 20063                           ; BSR set to: 0
 20064                           ;arpv4.c: 113: {
 20065                           ;arpv4.c: 115: mergeFlag = 0;
 20066  012690  0E00               	movlw	0
 20067  012692  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 20068                           
 20069                           ; BSR set to: 0
 20070                           ;arpv4.c: 116: entryPointer = arpMap;
 20071  012694  0E10               	movlw	low _arpMap
 20072  012696  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 20073  012698  0E03               	movlw	high _arpMap
 20074  01269A  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;arpv4.c: 118: for(uint8_t x=8; x > 0; x--)
 20078  01269C  0E08               	movlw	8
 20079  01269E  6F86               	movwf	ARPV4_Packet@x& (0+255),b
 20080  0126A0                     l12344:
 20081                           
 20082                           ; BSR set to: 0
 20083  0126A0  5186               	movf	ARPV4_Packet@x& (0+255),w,b
 20084  0126A2  B4D8               	btfsc	status,2,c
 20085  0126A4  D03C               	goto	u12490
 20086                           
 20087                           ; BSR set to: 0
 20088                           ;arpv4.c: 119: {
 20089                           ;arpv4.c: 120: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
 20090                           
 20091                           ; BSR set to: 0
 20092                           
 20093                           ; BSR set to: 0
 20094  0126A6  EE20 F006          	lfsr	2,6
 20095  0126AA  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 20096  0126AC  26D9               	addwf	fsr2l,f,c
 20097  0126AE  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 20098  0126B0  22DA               	addwfc	fsr2h,f,c
 20099  0126B2  50DE               	movf	postinc2,w,c
 20100  0126B4  1998               	xorwf	(ARPV4_Packet@header+14)& (0+255),w,b
 20101  0126B6  E12D               	bnz	l12358
 20102  0126B8  50DE               	movf	postinc2,w,c
 20103  0126BA  1999               	xorwf	(ARPV4_Packet@header+15)& (0+255),w,b
 20104  0126BC  E12A               	bnz	l12358
 20105  0126BE  50DE               	movf	postinc2,w,c
 20106  0126C0  199A               	xorwf	(ARPV4_Packet@header+16)& (0+255),w,b
 20107  0126C2  E127               	bnz	l12358
 20108  0126C4  50DE               	movf	postinc2,w,c
 20109  0126C6  199B               	xorwf	(ARPV4_Packet@header+17)& (0+255),w,b
 20110  0126C8  A4D8               	btfss	status,2,c
 20111  0126CA  D023               	goto	l320
 20112                           
 20113                           ; BSR set to: 0
 20114  0126CC  EE20 F00A          	lfsr	2,10
 20115  0126D0  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 20116  0126D2  26D9               	addwf	fsr2l,f,c
 20117  0126D4  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 20118  0126D6  22DA               	addwfc	fsr2h,f,c
 20119  0126D8  50DE               	movf	postinc2,w,c
 20120  0126DA  198C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
 20121  0126DC  E11A               	bnz	l12358
 20122  0126DE  50DE               	movf	postinc2,w,c
 20123  0126E0  198D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
 20124  0126E2  A4D8               	btfss	status,2,c
 20125  0126E4  D016               	goto	l320
 20126                           
 20127                           ; BSR set to: 0
 20128                           ;arpv4.c: 121: {
 20129                           ;arpv4.c: 122: entryPointer->age = 0;
 20130  0126E6  EE20 F00C          	lfsr	2,12
 20131  0126EA  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 20132  0126EC  26D9               	addwf	fsr2l,f,c
 20133  0126EE  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 20134  0126F0  22DA               	addwfc	fsr2h,f,c
 20135  0126F2  0E00               	movlw	0
 20136  0126F4  6EDF               	movwf	indf2,c
 20137                           
 20138                           ; BSR set to: 0
 20139                           ;arpv4.c: 123: entryPointer->macAddress.s = header.sha.s;
 20140  0126F6  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 20141  0126FA  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 20142  0126FE  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 20143  012702  0E05               	movlw	5
 20144  012704                     u12481:
 20145  012704  CFDB FFE3          	movff	plusw2,plusw1
 20146  012708  06E8               	decf	wreg,f,c
 20147  01270A  E2FC               	bc	u12481
 20148                           
 20149                           ; BSR set to: 0
 20150                           ;arpv4.c: 124: mergeFlag = 1;
 20151  01270C  0E01               	movlw	1
 20152  01270E  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 20153                           
 20154                           ;arpv4.c: 125: break;
 20155  012710  D006               	goto	u12490
 20156  012712                     l320:
 20157  012712                     l12358:
 20158                           
 20159                           ; BSR set to: 0
 20160                           ;arpv4.c: 126: }
 20161                           ;arpv4.c: 127: entryPointer++;
 20162  012712  0E0D               	movlw	13
 20163  012714  2788               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
 20164  012716  0E00               	movlw	0
 20165  012718  2389               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
 20166                           
 20167                           ; BSR set to: 0
 20168  01271A  0786               	decf	ARPV4_Packet@x& (0+255),f,b
 20169  01271C  D7C1               	goto	l12344
 20170  01271E                     u12490:
 20171                           
 20172                           ; BSR set to: 0
 20173                           ;arpv4.c: 128: }
 20174                           ;arpv4.c: 130: if((ip_database_info.ipv4_myAddress) && ((ip_database_info.ipv4_myAddress
      +                          ) == ((((uint32_t)header.tpa&(uint32_t)0xff000000) >> 24) | (((uint32_t)header.tpa&(uint
      +                          32_t)0x00ff0000) >> 8) | (((uint32_t)header.tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_
      +                          t
 20175                           
 20176                           ; BSR set to: 0
 20177  01271E  0102               	movlb	2	; () banked
 20178  012720  5100               	movf	_ip_database_info& (0+255),w,b
 20179  012722  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 20180  012724  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 20181  012726  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 20182  012728  B4D8               	btfsc	status,2,c
 20183  01272A  D238               	goto	l321
 20184                           
 20185                           ; BSR set to: 2
 20186  01272C  0EFF               	movlw	255
 20187  01272E  0100               	movlb	0	; () banked
 20188  012730  15A2               	andwf	(ARPV4_Packet@header+24)& (0+255),w,b
 20189  012732  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 20190  012734  0E00               	movlw	0
 20191  012736  15A3               	andwf	(ARPV4_Packet@header+25)& (0+255),w,b
 20192  012738  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 20193  01273A  0E00               	movlw	0
 20194  01273C  15A4               	andwf	(ARPV4_Packet@header+26)& (0+255),w,b
 20195  01273E  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 20196  012740  0E00               	movlw	0
 20197  012742  15A5               	andwf	(ARPV4_Packet@header+27)& (0+255),w,b
 20198  012744  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 20199  012746  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 20200  01274A  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 20201  01274C  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 20202  01274E  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 20203  012750  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 20204  012754  0E00               	movlw	0
 20205  012756  14DE               	andwf	postinc2,w,c
 20206  012758  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 20207  01275A  0EFF               	movlw	255
 20208  01275C  14DE               	andwf	postinc2,w,c
 20209  01275E  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 20210  012760  0E00               	movlw	0
 20211  012762  14DE               	andwf	postinc2,w,c
 20212  012764  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 20213  012766  0E00               	movlw	0
 20214  012768  14DE               	andwf	postinc2,w,c
 20215  01276A  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 20216  01276C  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 20217  012770  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 20218  012774  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 20219  012778  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 20220  01277A  C0A2  F068         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 20221  01277E  C0A3  F069         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 20222  012782  C0A4  F06A         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 20223  012786  C0A5  F06B         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 20224  01278A  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 20225  01278E  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 20226  012792  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 20227  012796  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 20228  012798  0E00               	movlw	0
 20229  01279A  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 20230  01279C  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 20231  01279E  0EFF               	movlw	255
 20232  0127A0  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 20233  0127A2  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 20234  0127A4  0E00               	movlw	0
 20235  0127A6  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 20236  0127A8  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 20237  0127AA  0E00               	movlw	0
 20238  0127AC  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 20239  0127AE  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 20240  0127B0  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 20241  0127B4  0E00               	movlw	0
 20242  0127B6  14DE               	andwf	postinc2,w,c
 20243  0127B8  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 20244  0127BA  0E00               	movlw	0
 20245  0127BC  14DE               	andwf	postinc2,w,c
 20246  0127BE  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 20247  0127C0  0E00               	movlw	0
 20248  0127C2  14DE               	andwf	postinc2,w,c
 20249  0127C4  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 20250  0127C6  0EFF               	movlw	255
 20251  0127C8  14DE               	andwf	postinc2,w,c
 20252  0127CA  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 20253  0127CC  0E19               	movlw	25
 20254  0127CE  D005               	goto	u12510
 20255  0127D0                     u12515:
 20256  0127D0  90D8               	bcf	status,0,c
 20257  0127D2  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 20258  0127D4  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 20259  0127D6  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 20260  0127D8  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 20261  0127DA                     u12510:
 20262  0127DA  2EE8               	decfsz	wreg,f,c
 20263  0127DC  D7F9               	goto	u12515
 20264  0127DE  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 20265  0127E0  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 20266  0127E2  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 20267  0127E4  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 20268  0127E6  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 20269  0127E8  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 20270  0127EA  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 20271  0127EC  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 20272  0127EE  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 20273  0127F0  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 20274  0127F2  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 20275  0127F4  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 20276  0127F6  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 20277  0127F8  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 20278  0127FA  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 20279  0127FC  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 20280  0127FE  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 20281  012800  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 20282  012802  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 20283  012804  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 20284  012806  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 20285  012808  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 20286  01280A  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 20287  01280C  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 20288  01280E  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 20289  012810  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 20290  012812  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 20291  012814  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 20292  012816  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 20293  012818  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 20294  01281A  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 20295  01281C  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 20296  01281E  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 20297  012820  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 20298  012822  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 20299  012824  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 20300  012826  0102               	movlb	2	; () banked
 20301  012828  5100               	movf	_ip_database_info& (0+255),w,b
 20302  01282A  0100               	movlb	0	; () banked
 20303  01282C  197C               	xorwf	(??_ARPV4_Packet+28)& (0+255),w,b
 20304  01282E  E10F               	bnz	u12521
 20305  012830  0102               	movlb	2	; () banked
 20306  012832  5101               	movf	(_ip_database_info+1)& (0+255),w,b
 20307  012834  0100               	movlb	0	; () banked
 20308  012836  197D               	xorwf	(??_ARPV4_Packet+29)& (0+255),w,b
 20309  012838  E10A               	bnz	u12521
 20310  01283A  0102               	movlb	2	; () banked
 20311  01283C  5102               	movf	(_ip_database_info+2)& (0+255),w,b
 20312  01283E  0100               	movlb	0	; () banked
 20313  012840  197E               	xorwf	(??_ARPV4_Packet+30)& (0+255),w,b
 20314  012842  E105               	bnz	u12521
 20315  012844  0102               	movlb	2	; () banked
 20316  012846  5103               	movf	(_ip_database_info+3)& (0+255),w,b
 20317  012848  0100               	movlb	0	; () banked
 20318  01284A  197F               	xorwf	(??_ARPV4_Packet+31)& (0+255),w,b
 20319  01284C  A4D8               	btfss	status,2,c
 20320  01284E                     u12521:
 20321  01284E  D1A6               	goto	l321
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;arpv4.c: 131: {
 20325                           ;arpv4.c: 132: if(!mergeFlag)
 20326  012850  5182               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
 20327  012852  A4D8               	btfss	status,2,c
 20328  012854  D0CE               	goto	l322
 20329                           
 20330                           ; BSR set to: 0
 20331                           ;arpv4.c: 133: {
 20332                           ;arpv4.c: 135: entryPointer = arpMap;
 20333  012856  0E10               	movlw	low _arpMap
 20334  012858  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 20335  01285A  0E03               	movlw	high _arpMap
 20336  01285C  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 20337                           
 20338                           ;arpv4.c: 136: arpMap_t *arpPtr = arpMap;
 20339  01285E  0E10               	movlw	low _arpMap
 20340  012860  6F84               	movwf	ARPV4_Packet@arpPtr& (0+255),b
 20341  012862  0E03               	movlw	high _arpMap
 20342  012864  6F85               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
 20343                           
 20344                           ; BSR set to: 0
 20345                           ;arpv4.c: 137: for(uint8_t x=8; x !=0; x--)
 20346  012866  0E08               	movlw	8
 20347  012868  6F87               	movwf	ARPV4_Packet@x_939& (0+255),b
 20348  01286A                     l12374:
 20349                           
 20350                           ; BSR set to: 0
 20351  01286A  5187               	movf	ARPV4_Packet@x_939& (0+255),w,b
 20352  01286C  B4D8               	btfsc	status,2,c
 20353  01286E  D01A               	goto	u12560
 20354                           
 20355                           ; BSR set to: 0
 20356                           ;arpv4.c: 138: {
 20357                           ;arpv4.c: 139: if(entryPointer->age < arpPtr->age)
 20358                           
 20359                           ; BSR set to: 0
 20360                           
 20361                           ; BSR set to: 0
 20362  012870  EE20 F00C          	lfsr	2,12
 20363  012874  5184               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
 20364  012876  26D9               	addwf	fsr2l,f,c
 20365  012878  5185               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
 20366  01287A  22DA               	addwfc	fsr2h,f,c
 20367  01287C  EE10 F00C          	lfsr	1,12
 20368  012880  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 20369  012882  26E1               	addwf	fsr1l,f,c
 20370  012884  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 20371  012886  22E2               	addwfc	fsr1h,f,c
 20372  012888  50DE               	movf	postinc2,w,c
 20373  01288A  5CE6               	subwf	postinc1,w,c
 20374  01288C  B0D8               	btfsc	status,0,c
 20375  01288E  D004               	goto	l325
 20376                           
 20377                           ; BSR set to: 0
 20378                           ;arpv4.c: 140: {
 20379                           ;arpv4.c: 141: entryPointer = arpPtr;
 20380  012890  C084  F088         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 20381  012894  C085  F089         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 20382  012898                     l325:
 20383                           
 20384                           ; BSR set to: 0
 20385                           ;arpv4.c: 142: }
 20386                           ;arpv4.c: 144: arpPtr++;
 20387  012898  0E0D               	movlw	13
 20388  01289A  2784               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
 20389  01289C  0E00               	movlw	0
 20390  01289E  2385               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
 20391                           
 20392                           ; BSR set to: 0
 20393  0128A0  0787               	decf	ARPV4_Packet@x_939& (0+255),f,b
 20394  0128A2  D7E3               	goto	l12374
 20395  0128A4                     u12560:
 20396                           
 20397                           ; BSR set to: 0
 20398                           ;arpv4.c: 145: }
 20399                           ;arpv4.c: 148: entryPointer->age = 0;
 20400                           
 20401                           ; BSR set to: 0
 20402  0128A4  EE20 F00C          	lfsr	2,12
 20403  0128A8  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 20404  0128AA  26D9               	addwf	fsr2l,f,c
 20405  0128AC  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 20406  0128AE  22DA               	addwfc	fsr2h,f,c
 20407  0128B0  0E00               	movlw	0
 20408  0128B2  6EDF               	movwf	indf2,c
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;arpv4.c: 149: entryPointer->macAddress.s = header.sha.s;
 20412  0128B4  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 20413  0128B8  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 20414  0128BC  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 20415  0128C0  0E05               	movlw	5
 20416  0128C2                     u12571:
 20417  0128C2  CFDB FFE3          	movff	plusw2,plusw1
 20418  0128C6  06E8               	decf	wreg,f,c
 20419  0128C8  E2FC               	bc	u12571
 20420                           
 20421                           ; BSR set to: 0
 20422                           ;arpv4.c: 150: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 20423  0128CA  0EFF               	movlw	255
 20424  0128CC  1598               	andwf	(ARPV4_Packet@header+14)& (0+255),w,b
 20425  0128CE  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 20426  0128D0  0E00               	movlw	0
 20427  0128D2  1599               	andwf	(ARPV4_Packet@header+15)& (0+255),w,b
 20428  0128D4  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 20429  0128D6  0E00               	movlw	0
 20430  0128D8  159A               	andwf	(ARPV4_Packet@header+16)& (0+255),w,b
 20431  0128DA  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 20432  0128DC  0E00               	movlw	0
 20433  0128DE  159B               	andwf	(ARPV4_Packet@header+17)& (0+255),w,b
 20434  0128E0  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 20435  0128E2  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 20436  0128E6  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 20437  0128E8  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 20438  0128EA  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 20439  0128EC  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 20440  0128F0  0E00               	movlw	0
 20441  0128F2  14DE               	andwf	postinc2,w,c
 20442  0128F4  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 20443  0128F6  0EFF               	movlw	255
 20444  0128F8  14DE               	andwf	postinc2,w,c
 20445  0128FA  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 20446  0128FC  0E00               	movlw	0
 20447  0128FE  14DE               	andwf	postinc2,w,c
 20448  012900  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 20449  012902  0E00               	movlw	0
 20450  012904  14DE               	andwf	postinc2,w,c
 20451  012906  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 20452  012908  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 20453  01290C  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 20454  012910  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 20455  012914  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 20456  012916  C098  F068         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 20457  01291A  C099  F069         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 20458  01291E  C09A  F06A         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 20459  012922  C09B  F06B         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 20460  012926  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 20461  01292A  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 20462  01292E  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 20463  012932  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 20464  012934  0E00               	movlw	0
 20465  012936  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 20466  012938  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 20467  01293A  0EFF               	movlw	255
 20468  01293C  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 20469  01293E  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 20470  012940  0E00               	movlw	0
 20471  012942  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 20472  012944  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 20473  012946  0E00               	movlw	0
 20474  012948  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 20475  01294A  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 20476  01294C  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 20477  012950  0E00               	movlw	0
 20478  012952  14DE               	andwf	postinc2,w,c
 20479  012954  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 20480  012956  0E00               	movlw	0
 20481  012958  14DE               	andwf	postinc2,w,c
 20482  01295A  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 20483  01295C  0E00               	movlw	0
 20484  01295E  14DE               	andwf	postinc2,w,c
 20485  012960  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 20486  012962  0EFF               	movlw	255
 20487  012964  14DE               	andwf	postinc2,w,c
 20488  012966  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 20489  012968  0E19               	movlw	25
 20490  01296A  D005               	goto	u12580
 20491  01296C                     u12585:
 20492  01296C  90D8               	bcf	status,0,c
 20493  01296E  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 20494  012970  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 20495  012972  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 20496  012974  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 20497  012976                     u12580:
 20498  012976  2EE8               	decfsz	wreg,f,c
 20499  012978  D7F9               	goto	u12585
 20500  01297A  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 20501  01297C  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 20502  01297E  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 20503  012980  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 20504  012982  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 20505  012984  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 20506  012986  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 20507  012988  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 20508  01298A  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 20509  01298C  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 20510  01298E  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 20511  012990  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 20512  012992  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 20513  012994  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 20514  012996  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 20515  012998  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 20516  01299A  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 20517  01299C  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 20518  01299E  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 20519  0129A0  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 20520  0129A2  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 20521  0129A4  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 20522  0129A6  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 20523  0129A8  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 20524  0129AA  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 20525  0129AC  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 20526  0129AE  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 20527  0129B0  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 20528  0129B2  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 20529  0129B4  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 20530  0129B6  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 20531  0129B8  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 20532  0129BA  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 20533  0129BC  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 20534  0129BE  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 20535  0129C0  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 20536  0129C2  EE20 F006          	lfsr	2,6
 20537  0129C6  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 20538  0129C8  26D9               	addwf	fsr2l,f,c
 20539  0129CA  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 20540  0129CC  22DA               	addwfc	fsr2h,f,c
 20541  0129CE  C07C  FFDE         	movff	??_ARPV4_Packet+28,postinc2
 20542  0129D2  C07D  FFDE         	movff	??_ARPV4_Packet+29,postinc2
 20543  0129D6  C07E  FFDE         	movff	??_ARPV4_Packet+30,postinc2
 20544  0129DA  C07F  FFDE         	movff	??_ARPV4_Packet+31,postinc2
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;arpv4.c: 151: entryPointer->protocolType = header.ptype;
 20548  0129DE  EE20 F00A          	lfsr	2,10
 20549  0129E2  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 20550  0129E4  26D9               	addwf	fsr2l,f,c
 20551  0129E6  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 20552  0129E8  22DA               	addwfc	fsr2h,f,c
 20553  0129EA  C08C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 20554  0129EE  C08D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 20555  0129F2                     l322:
 20556                           
 20557                           ; BSR set to: 0
 20558                           ;arpv4.c: 152: }
 20559                           ;arpv4.c: 153: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
 20560                           
 20561                           ; BSR set to: 0
 20562  0129F2  0591               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
 20563  0129F4  1190               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
 20564  0129F6  A4D8               	btfss	status,2,c
 20565  0129F8  0012               	return	
 20566                           
 20567                           ; BSR set to: 0
 20568                           ;arpv4.c: 154: {
 20569                           ;arpv4.c: 155: ret = ETH_WriteStart(&header.sha ,0x0806);
 20570  0129FA  0E92               	movlw	low (ARPV4_Packet@header+8)
 20571  0129FC  6E25               	movwf	ETH_WriteStart@dest_mac,c
 20572  0129FE  0E00               	movlw	high (ARPV4_Packet@header+8)
 20573  012A00  6E26               	movwf	ETH_WriteStart@dest_mac+1,c
 20574  012A02  0E08               	movlw	8
 20575  012A04  6E28               	movwf	ETH_WriteStart@type+1,c
 20576  012A06  0E06               	movlw	6
 20577  012A08  6E27               	movwf	ETH_WriteStart@type,c
 20578  012A0A  ECCF  F0A0         	call	_ETH_WriteStart	;wreg free
 20579  012A0E  0100               	movlb	0	; () banked
 20580  012A10  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 20581                           
 20582                           ; BSR set to: 0
 20583                           ;arpv4.c: 156: if(ret == SUCCESS)
 20584  012A12  0583               	decf	ARPV4_Packet@ret& (0+255),w,b
 20585  012A14  A4D8               	btfss	status,2,c
 20586  012A16  0012               	return	
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;arpv4.c: 157: {
 20590                           ;arpv4.c: 159: header.tha.s = header.sha.s;
 20591  012A18  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 20592  012A1C  EE10  F09C         	lfsr	1,ARPV4_Packet@header+18
 20593  012A20  0E05               	movlw	5
 20594  012A22                     u12611:
 20595  012A22  CFDB FFE3          	movff	plusw2,plusw1
 20596  012A26  06E8               	decf	wreg,f,c
 20597  012A28  E2FC               	bc	u12611
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;arpv4.c: 160: memcpy((void*)&header.sha.s, (void*)&hostMacAddress.s, sizeof(mac48Addres
      +                          s_t));
 20601  012A2A  0E92               	movlw	low (ARPV4_Packet@header+8)
 20602  012A2C  6E13               	movwf	memcpy@d1,c
 20603  012A2E  0E00               	movlw	high (ARPV4_Packet@header+8)
 20604  012A30  6E14               	movwf	memcpy@d1+1,c
 20605  012A32  0EB0               	movlw	low _hostMacAddress
 20606  012A34  6E15               	movwf	memcpy@s1,c
 20607  012A36  0E03               	movlw	high _hostMacAddress
 20608  012A38  6E16               	movwf	memcpy@s1+1,c
 20609  012A3A  0E00               	movlw	0
 20610  012A3C  6E18               	movwf	memcpy@n+1,c
 20611  012A3E  0E06               	movlw	6
 20612  012A40  6E17               	movwf	memcpy@n,c
 20613  012A42  EC07  F0B4         	call	_memcpy	;wreg free
 20614                           
 20615                           ;arpv4.c: 161: header.tpa = header.spa;
 20616  012A46  C098  F0A2         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 20617  012A4A  C099  F0A3         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 20618  012A4E  C09A  F0A4         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 20619  012A52  C09B  F0A5         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 20620                           
 20621                           ;arpv4.c: 162: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
 20622  012A56  0EFF               	movlw	255
 20623  012A58  0102               	movlb	2	; () banked
 20624  012A5A  1500               	andwf	_ip_database_info& (0+255),w,b
 20625  012A5C  0100               	movlb	0	; () banked
 20626  012A5E  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 20627  012A60  0E00               	movlw	0
 20628  012A62  0102               	movlb	2	; () banked
 20629  012A64  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 20630  012A66  0100               	movlb	0	; () banked
 20631  012A68  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 20632  012A6A  0E00               	movlw	0
 20633  012A6C  0102               	movlb	2	; () banked
 20634  012A6E  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 20635  012A70  0100               	movlb	0	; () banked
 20636  012A72  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 20637  012A74  0E00               	movlw	0
 20638  012A76  0102               	movlb	2	; () banked
 20639  012A78  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 20640  012A7A  0100               	movlb	0	; () banked
 20641  012A7C  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 20642  012A7E  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 20643  012A82  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 20644  012A84  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 20645  012A86  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 20646  012A88  0E00               	movlw	0
 20647  012A8A  0102               	movlb	2	; () banked
 20648  012A8C  1500               	andwf	_ip_database_info& (0+255),w,b
 20649  012A8E  0100               	movlb	0	; () banked
 20650  012A90  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 20651  012A92  0EFF               	movlw	255
 20652  012A94  0102               	movlb	2	; () banked
 20653  012A96  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 20654  012A98  0100               	movlb	0	; () banked
 20655  012A9A  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 20656  012A9C  0E00               	movlw	0
 20657  012A9E  0102               	movlb	2	; () banked
 20658  012AA0  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 20659  012AA2  0100               	movlb	0	; () banked
 20660  012AA4  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 20661  012AA6  0E00               	movlw	0
 20662  012AA8  0102               	movlb	2	; () banked
 20663  012AAA  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 20664  012AAC  0100               	movlb	0	; () banked
 20665  012AAE  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 20666  012AB0  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 20667  012AB4  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 20668  012AB8  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 20669  012ABC  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 20670  012ABE  C200  F068         	movff	_ip_database_info,??_ARPV4_Packet+8
 20671  012AC2  C201  F069         	movff	_ip_database_info+1,??_ARPV4_Packet+9
 20672  012AC6  C202  F06A         	movff	_ip_database_info+2,??_ARPV4_Packet+10
 20673  012ACA  C203  F06B         	movff	_ip_database_info+3,??_ARPV4_Packet+11
 20674  012ACE  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 20675  012AD2  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 20676  012AD6  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 20677  012ADA  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 20678  012ADC  0E00               	movlw	0
 20679  012ADE  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 20680  012AE0  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 20681  012AE2  0EFF               	movlw	255
 20682  012AE4  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 20683  012AE6  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 20684  012AE8  0E00               	movlw	0
 20685  012AEA  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 20686  012AEC  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 20687  012AEE  0E00               	movlw	0
 20688  012AF0  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 20689  012AF2  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 20690  012AF4  0E00               	movlw	0
 20691  012AF6  0102               	movlb	2	; () banked
 20692  012AF8  1500               	andwf	_ip_database_info& (0+255),w,b
 20693  012AFA  0100               	movlb	0	; () banked
 20694  012AFC  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 20695  012AFE  0E00               	movlw	0
 20696  012B00  0102               	movlb	2	; () banked
 20697  012B02  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 20698  012B04  0100               	movlb	0	; () banked
 20699  012B06  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 20700  012B08  0E00               	movlw	0
 20701  012B0A  0102               	movlb	2	; () banked
 20702  012B0C  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 20703  012B0E  0100               	movlb	0	; () banked
 20704  012B10  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 20705  012B12  0EFF               	movlw	255
 20706  012B14  0102               	movlb	2	; () banked
 20707  012B16  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 20708  012B18  0100               	movlb	0	; () banked
 20709  012B1A  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 20710  012B1C  0E19               	movlw	25
 20711  012B1E  D005               	goto	u12620
 20712  012B20                     u12625:
 20713  012B20  90D8               	bcf	status,0,c
 20714  012B22  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 20715  012B24  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 20716  012B26  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 20717  012B28  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 20718  012B2A                     u12620:
 20719  012B2A  2EE8               	decfsz	wreg,f,c
 20720  012B2C  D7F9               	goto	u12625
 20721  012B2E  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 20722  012B30  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 20723  012B32  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 20724  012B34  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 20725  012B36  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 20726  012B38  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 20727  012B3A  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 20728  012B3C  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 20729  012B3E  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 20730  012B40  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 20731  012B42  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 20732  012B44  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 20733  012B46  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 20734  012B48  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 20735  012B4A  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 20736  012B4C  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 20737  012B4E  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 20738  012B50  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 20739  012B52  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 20740  012B54  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 20741  012B56  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 20742  012B58  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 20743  012B5A  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 20744  012B5C  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 20745  012B5E  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 20746  012B60  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 20747  012B62  6F98               	movwf	(ARPV4_Packet@header+14)& (0+255),b
 20748  012B64  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 20749  012B66  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 20750  012B68  6F99               	movwf	(ARPV4_Packet@header+15)& (0+255),b
 20751  012B6A  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 20752  012B6C  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 20753  012B6E  6F9A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
 20754  012B70  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 20755  012B72  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 20756  012B74  6F9B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
 20757                           
 20758                           ; BSR set to: 0
 20759                           ;arpv4.c: 163: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 20760  012B76  0E02               	movlw	2
 20761  012B78  6F91               	movwf	(ARPV4_Packet@header+7)& (0+255),b
 20762  012B7A  0E00               	movlw	0
 20763  012B7C  6F90               	movwf	(ARPV4_Packet@header+6)& (0+255),b
 20764                           
 20765                           ; BSR set to: 0
 20766                           ;arpv4.c: 164: ETH_WriteBlock((char*)&header,sizeof(header));
 20767  012B7E  0E8A               	movlw	low ARPV4_Packet@header
 20768  012B80  6E13               	movwf	ETH_WriteBlock@buffer,c
 20769  012B82  0E00               	movlw	high ARPV4_Packet@header
 20770  012B84  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 20771  012B86  0E00               	movlw	0
 20772  012B88  6E16               	movwf	ETH_WriteBlock@length+1,c
 20773  012B8A  0E1C               	movlw	28
 20774  012B8C  6E15               	movwf	ETH_WriteBlock@length,c
 20775  012B8E  EC49  F0B3         	call	_ETH_WriteBlock	;wreg free
 20776                           
 20777                           ;arpv4.c: 167: ret = ETH_Send();
 20778  012B92  ECBB  F0AD         	call	_ETH_Send	;wreg free
 20779  012B96  0100               	movlb	0	; () banked
 20780  012B98  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 20781                           
 20782                           ; BSR set to: 0
 20783                           ;arpv4.c: 168: }
 20784                           ;arpv4.c: 169: }
 20785                           ;arpv4.c: 170: }
 20786                           
 20787                           ; BSR set to: 0
 20788  012B9A  0012               	return	
 20789  012B9C                     l321:
 20790                           
 20791                           ;arpv4.c: 171: else
 20792                           ;arpv4.c: 172: {
 20793                           ;arpv4.c: 173: ret = ARP_IP_NOT_MATCHED;
 20794                           
 20795                           ; BSR set to: 0
 20796  012B9C  0E0E               	movlw	14
 20797  012B9E  0100               	movlb	0	; () banked
 20798  012BA0  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 20799                           
 20800                           ; BSR set to: 0
 20801                           
 20802                           ; BSR set to: 0
 20803  012BA2  0012               	return	
 20804  012BA4                     __end_of_ARPV4_Packet:
 20805                           	opt stack 0
 20806                           tosu	equ	0xFFF
 20807                           tosh	equ	0xFFE
 20808                           tosl	equ	0xFFD
 20809                           pclath	equ	0xFFA
 20810                           tblptru	equ	0xFF8
 20811                           tblptrh	equ	0xFF7
 20812                           tblptrl	equ	0xFF6
 20813                           tablat	equ	0xFF5
 20814                           prodh	equ	0xFF4
 20815                           prodl	equ	0xFF3
 20816                           intcon	equ	0xFF2
 20817                           indf0	equ	0xFEF
 20818                           postinc0	equ	0xFEE
 20819                           fsr0h	equ	0xFEA
 20820                           fsr0l	equ	0xFE9
 20821                           wreg	equ	0xFE8
 20822                           indf1	equ	0xFE7
 20823                           postinc1	equ	0xFE6
 20824                           postdec1	equ	0xFE5
 20825                           plusw1	equ	0xFE3
 20826                           fsr1h	equ	0xFE2
 20827                           fsr1l	equ	0xFE1
 20828                           indf2	equ	0xFDF
 20829                           postinc2	equ	0xFDE
 20830                           postdec2	equ	0xFDD
 20831                           plusw2	equ	0xFDB
 20832                           fsr2h	equ	0xFDA
 20833                           fsr2l	equ	0xFD9
 20834                           status	equ	0xFD8
 20835                           
 20836 ;; *************** function _ETH_ReadBlock *****************
 20837 ;; Defined at:
 20838 ;;		line 520 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 20839 ;; Parameters:    Size  Location     Type
 20840 ;;  buffer          2   18[COMRAM] PTR void 
 20841 ;;		 -> TFTP_Handler@data(100), tcpHeader(20), DHCP_Handler@chaddr(16), udpHeader(8), 
 20842 ;;		 -> ICMP_Receive@icmpHdr(4), Network_Read@header(14), ipv4Header(20), NULL(0), 
 20843 ;;		 -> ARPV4_Packet@header(28), 
 20844 ;;  length          2   20[COMRAM] unsigned int 
 20845 ;; Auto vars:     Size  Location     Type
 20846 ;;  p               2   24[COMRAM] PTR unsigned char 
 20847 ;;		 -> TFTP_Handler@data(100), tcpHeader(20), DHCP_Handler@chaddr(16), udpHeader(8), 
 20848 ;;		 -> ICMP_Receive@icmpHdr(4), Network_Read@header(14), ipv4Header(20), NULL(0), 
 20849 ;;		 -> ARPV4_Packet@header(28), 
 20850 ;;  len             2   22[COMRAM] unsigned int 
 20851 ;; Return value:  Size  Location     Type
 20852 ;;                  2   18[COMRAM] unsigned int 
 20853 ;; Registers used:
 20854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20855 ;; Tracked objects:
 20856 ;;		On entry : 0/0
 20857 ;;		On exit  : 0/0
 20858 ;;		Unchanged: 0/0
 20859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20861 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20863 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20864 ;;Total ram usage:        8 bytes
 20865 ;; Hardware stack levels used:    1
 20866 ;; Hardware stack levels required when called:    5
 20867 ;; This function calls:
 20868 ;;		_ETH_EdataRead
 20869 ;; This function is called by:
 20870 ;;		_ARPV4_Packet
 20871 ;;		_IPV4_Packet
 20872 ;;		_Network_Read
 20873 ;;		_ICMP_Receive
 20874 ;;		_UDP_Receive
 20875 ;;		_DHCP_Handler
 20876 ;;		_TCP_PayloadSave
 20877 ;;		_TCP_Recv
 20878 ;;		_TFTP_Handler
 20879 ;; This function uses a non-reentrant model
 20880 ;;
 20881                           
 20882                           	psect	text77
 20883  0165EA                     __ptext77:
 20884                           	opt stack 0
 20885  0165EA                     _ETH_ReadBlock:
 20886                           	opt stack 21
 20887                           
 20888                           ;ETHxxJ6x_driver.c: 522: uint16_t len = 0;
 20889                           
 20890                           ; BSR set to: 0
 20891                           ;incstack = 0
 20892  0165EA  0E00               	movlw	0
 20893  0165EC  6E18               	movwf	ETH_ReadBlock@len+1,c
 20894  0165EE  0E00               	movlw	0
 20895  0165F0  6E17               	movwf	ETH_ReadBlock@len,c
 20896                           
 20897                           ;ETHxxJ6x_driver.c: 523: char *p = buffer;
 20898  0165F2  C013  F019         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 20899  0165F6  C014  F01A         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 20900                           
 20901                           ;ETHxxJ6x_driver.c: 524: while(rxPacketStatusVector.byteCount && length)
 20902  0165FA  D013               	goto	l572
 20903  0165FC                     
 20904                           ;ETHxxJ6x_driver.c: 525: {
 20905                           ;ETHxxJ6x_driver.c: 526: *p++ = ETH_EdataRead();
 20906  0165FC  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 20907  016600  C019  FFD9         	movff	ETH_ReadBlock@p,fsr2l
 20908  016604  C01A  FFDA         	movff	ETH_ReadBlock@p+1,fsr2h
 20909  016608  6EDF               	movwf	indf2,c
 20910  01660A  4A19               	infsnz	ETH_ReadBlock@p,f,c
 20911  01660C  2A1A               	incf	ETH_ReadBlock@p+1,f,c
 20912                           
 20913                           ;ETHxxJ6x_driver.c: 527: len ++;
 20914  01660E  4A17               	infsnz	ETH_ReadBlock@len,f,c
 20915  016610  2A18               	incf	ETH_ReadBlock@len+1,f,c
 20916                           
 20917                           ;ETHxxJ6x_driver.c: 528: length --;
 20918  016612  0615               	decf	ETH_ReadBlock@length,f,c
 20919  016614  A0D8               	btfss	status,0,c
 20920  016616  0616               	decf	ETH_ReadBlock@length+1,f,c
 20921                           
 20922                           ;ETHxxJ6x_driver.c: 529: rxPacketStatusVector.byteCount --;
 20923  016618  0102               	movlb	2	; () banked
 20924  01661A  0736               	decf	_rxPacketStatusVector& (0+255),f,b
 20925  01661C  A0D8               	btfss	status,0,c
 20926  01661E  0737               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
 20927                           
 20928                           ; BSR set to: 2
 20929                           ;ETHxxJ6x_driver.c: 530: ethData.error = 0;
 20930  016620  9124               	bcf	_ethData& (0+255),0,b	;volatile
 20931  016622                     l572:
 20932                           
 20933                           ; BSR set to: 2
 20934  016622  0102               	movlb	2	; () banked
 20935  016624  5136               	movf	_rxPacketStatusVector& (0+255),w,b
 20936  016626  1137               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 20937  016628  B4D8               	btfsc	status,2,c
 20938  01662A  D004               	goto	u9960
 20939                           
 20940                           ; BSR set to: 2
 20941  01662C  5015               	movf	ETH_ReadBlock@length,w,c
 20942  01662E  1016               	iorwf	ETH_ReadBlock@length+1,w,c
 20943  016630  A4D8               	btfss	status,2,c
 20944  016632  D7E4               	goto	l573
 20945  016634                     u9960:
 20946                           
 20947                           ; BSR set to: 2
 20948                           ;ETHxxJ6x_driver.c: 531: }
 20949                           ;ETHxxJ6x_driver.c: 532: return len;
 20950                           
 20951                           ; BSR set to: 2
 20952  016634  C017  F013         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 20953  016638  C018  F014         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 20954                           
 20955                           ; BSR set to: 2
 20956  01663C  0012               	return		;funcret
 20957  01663E                     __end_of_ETH_ReadBlock:
 20958                           	opt stack 0
 20959                           tosu	equ	0xFFF
 20960                           tosh	equ	0xFFE
 20961                           tosl	equ	0xFFD
 20962                           pclath	equ	0xFFA
 20963                           tblptru	equ	0xFF8
 20964                           tblptrh	equ	0xFF7
 20965                           tblptrl	equ	0xFF6
 20966                           tablat	equ	0xFF5
 20967                           prodh	equ	0xFF4
 20968                           prodl	equ	0xFF3
 20969                           intcon	equ	0xFF2
 20970                           indf0	equ	0xFEF
 20971                           postinc0	equ	0xFEE
 20972                           fsr0h	equ	0xFEA
 20973                           fsr0l	equ	0xFE9
 20974                           wreg	equ	0xFE8
 20975                           indf1	equ	0xFE7
 20976                           postinc1	equ	0xFE6
 20977                           postdec1	equ	0xFE5
 20978                           plusw1	equ	0xFE3
 20979                           fsr1h	equ	0xFE2
 20980                           fsr1l	equ	0xFE1
 20981                           indf2	equ	0xFDF
 20982                           postinc2	equ	0xFDE
 20983                           postdec2	equ	0xFDD
 20984                           plusw2	equ	0xFDB
 20985                           fsr2h	equ	0xFDA
 20986                           fsr2l	equ	0xFD9
 20987                           status	equ	0xFD8
 20988                           
 20989 ;; *************** function _ETH_EventHandler *****************
 20990 ;; Defined at:
 20991 ;;		line 263 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 20992 ;; Parameters:    Size  Location     Type
 20993 ;;		None
 20994 ;; Auto vars:     Size  Location     Type
 20995 ;;		None
 20996 ;; Return value:  Size  Location     Type
 20997 ;;                  1    wreg      void 
 20998 ;; Registers used:
 20999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21000 ;; Tracked objects:
 21001 ;;		On entry : 0/0
 21002 ;;		On exit  : 0/0
 21003 ;;		Unchanged: 0/0
 21004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21009 ;;Total ram usage:        0 bytes
 21010 ;; Hardware stack levels used:    1
 21011 ;; Hardware stack levels required when called:    7
 21012 ;; This function calls:
 21013 ;;		_ETH_CheckLinkUp
 21014 ;;		_ETH_RemovePacket
 21015 ;;		_ETH_SendQueued
 21016 ;;		_ETH_Shift_Tx_Packets
 21017 ;;		_PHY_Read
 21018 ;; This function is called by:
 21019 ;;		_Network_Manage
 21020 ;; This function uses a non-reentrant model
 21021 ;;
 21022                           
 21023                           	psect	text78
 21024  016488                     __ptext78:
 21025                           	opt stack 0
 21026  016488                     _ETH_EventHandler:
 21027                           	opt stack 22
 21028                           
 21029                           ;ETHxxJ6x_driver.c: 266: PIR2bits.ETHIF = 0;
 21030                           
 21031                           ; BSR set to: 2
 21032                           ;incstack = 0
 21033  016488  9AA1               	bcf	4001,5,c	;volatile
 21034                           
 21035                           ;ETHxxJ6x_driver.c: 268: if (EIRbits.LINKIF)
 21036  01648A  A860               	btfss	3936,4,c	;volatile
 21037  01648C  D007               	goto	l511
 21038                           
 21039                           ;ETHxxJ6x_driver.c: 269: {
 21040                           ;ETHxxJ6x_driver.c: 270: PHY_Read(PHIR);
 21041  01648E  0E13               	movlw	19
 21042  016490  EC13  F0B1         	call	_PHY_Read
 21043                           
 21044                           ;ETHxxJ6x_driver.c: 272: ethData.linkChange = 1;
 21045  016494  0102               	movlb	2	; () banked
 21046  016496  8924               	bsf	_ethData& (0+255),4,b	;volatile
 21047                           
 21048                           ;ETHxxJ6x_driver.c: 274: ETH_CheckLinkUp();
 21049  016498  EC0E  F0B6         	call	_ETH_CheckLinkUp	;wreg free
 21050  01649C                     l511:
 21051                           
 21052                           ;ETHxxJ6x_driver.c: 275: }
 21053                           ;ETHxxJ6x_driver.c: 277: if(EIRbits.RXERIF)
 21054  01649C  B060               	btfsc	3936,0,c	;volatile
 21055                           
 21056                           ;ETHxxJ6x_driver.c: 278: {
 21057                           ;ETHxxJ6x_driver.c: 281: EIRbits.RXERIF = 0;
 21058  01649E  9060               	bcf	3936,0,c	;volatile
 21059                           
 21060                           ;ETHxxJ6x_driver.c: 282: }
 21061                           ;ETHxxJ6x_driver.c: 284: if (EIRbits.TXERIF)
 21062  0164A0  B260               	btfsc	3936,1,c	;volatile
 21063                           
 21064                           ;ETHxxJ6x_driver.c: 285: {
 21065                           ;ETHxxJ6x_driver.c: 286: EIRbits.TXERIF = 0;
 21066  0164A2  9260               	bcf	3936,1,c	;volatile
 21067                           
 21068                           ;ETHxxJ6x_driver.c: 287: }
 21069                           ;ETHxxJ6x_driver.c: 289: if(EIRbits.TXIF)
 21070  0164A4  A660               	btfss	3936,3,c	;volatile
 21071  0164A6  D014               	goto	l515
 21072                           
 21073                           ;ETHxxJ6x_driver.c: 290: {
 21074                           ;ETHxxJ6x_driver.c: 291: EIRbits.TXIF = 0;
 21075  0164A8  9660               	bcf	3936,3,c	;volatile
 21076                           
 21077                           ;ETHxxJ6x_driver.c: 292: ETH_RemovePacket( (uint16_t)pTail );
 21078  0164AA  C043  F013         	movff	_pTail,ETH_RemovePacket@packetHandle
 21079  0164AE  C044  F014         	movff	_pTail+1,ETH_RemovePacket@packetHandle+1
 21080  0164B2  ECB0  F0AB         	call	_ETH_RemovePacket	;wreg free
 21081                           
 21082                           ;ETHxxJ6x_driver.c: 293: if( ethListSize > 0 )
 21083  0164B6  5048               	movf	_ethListSize,w,c
 21084  0164B8  B4D8               	btfsc	status,2,c
 21085  0164BA  D00A               	goto	l515
 21086                           
 21087                           ;ETHxxJ6x_driver.c: 294: {
 21088                           ;ETHxxJ6x_driver.c: 295: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 21089  0164BC  0E0C               	movlw	12
 21090  0164BE  010E               	movlb	14	; () banked
 21091  0164C0  5DE2               	subwf	226,w,b	;volatile
 21092  0164C2  0E1A               	movlw	26
 21093  0164C4  59E3               	subwfb	227,w,b	;volatile
 21094  0164C6  B0D8               	btfsc	status,0,c
 21095                           
 21096                           ; BSR set to: 14
 21097                           ;ETHxxJ6x_driver.c: 296: {
 21098                           ;ETHxxJ6x_driver.c: 298: ETH_Shift_Tx_Packets();
 21099  0164C8  ECCD  F0A4         	call	_ETH_Shift_Tx_Packets	;wreg free
 21100                           
 21101                           ;ETHxxJ6x_driver.c: 299: }
 21102                           ;ETHxxJ6x_driver.c: 302: ETH_SendQueued();
 21103  0164CC  EC5B  F0B0         	call	_ETH_SendQueued	;wreg free
 21104  0164D0                     l515:
 21105                           
 21106                           ;ETHxxJ6x_driver.c: 303: }
 21107                           ;ETHxxJ6x_driver.c: 304: }
 21108                           ;ETHxxJ6x_driver.c: 306: if (EIRbits.PKTIF)
 21109  0164D0  AC60               	btfss	3936,6,c	;volatile
 21110  0164D2  0012               	return	
 21111                           
 21112                           ;ETHxxJ6x_driver.c: 307: {
 21113                           ;ETHxxJ6x_driver.c: 309: if(ethData.pktReady == 0)
 21114  0164D4  0102               	movlb	2	; () banked
 21115  0164D6  B324               	btfsc	_ethData& (0+255),1,b	;volatile
 21116  0164D8  0012               	return	
 21117                           
 21118                           ; BSR set to: 2
 21119                           ;ETHxxJ6x_driver.c: 310: {
 21120                           ;ETHxxJ6x_driver.c: 311: ethData.pktReady = 1;
 21121  0164DA  8324               	bsf	_ethData& (0+255),1,b	;volatile
 21122                           
 21123                           ;ETHxxJ6x_driver.c: 312: EIEbits.PKTIE = 0;
 21124  0164DC  010E               	movlb	14	; () banked
 21125  0164DE  9DFB               	bcf	251,6,b	;volatile
 21126                           
 21127                           ; BSR set to: 14
 21128  0164E0  0012               	return	
 21129  0164E2                     __end_of_ETH_EventHandler:
 21130                           	opt stack 0
 21131                           tosu	equ	0xFFF
 21132                           tosh	equ	0xFFE
 21133                           tosl	equ	0xFFD
 21134                           pclath	equ	0xFFA
 21135                           tblptru	equ	0xFF8
 21136                           tblptrh	equ	0xFF7
 21137                           tblptrl	equ	0xFF6
 21138                           tablat	equ	0xFF5
 21139                           prodh	equ	0xFF4
 21140                           prodl	equ	0xFF3
 21141                           intcon	equ	0xFF2
 21142                           indf0	equ	0xFEF
 21143                           postinc0	equ	0xFEE
 21144                           fsr0h	equ	0xFEA
 21145                           fsr0l	equ	0xFE9
 21146                           wreg	equ	0xFE8
 21147                           indf1	equ	0xFE7
 21148                           postinc1	equ	0xFE6
 21149                           postdec1	equ	0xFE5
 21150                           plusw1	equ	0xFE3
 21151                           fsr1h	equ	0xFE2
 21152                           fsr1l	equ	0xFE1
 21153                           indf2	equ	0xFDF
 21154                           postinc2	equ	0xFDE
 21155                           postdec2	equ	0xFDD
 21156                           plusw2	equ	0xFDB
 21157                           fsr2h	equ	0xFDA
 21158                           fsr2l	equ	0xFD9
 21159                           status	equ	0xFD8
 21160                           
 21161 ;; *************** function _ETH_RemovePacket *****************
 21162 ;; Defined at:
 21163 ;;		line 1232 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21164 ;; Parameters:    Size  Location     Type
 21165 ;;  packetHandle    2   18[COMRAM] unsigned int 
 21166 ;; Auto vars:     Size  Location     Type
 21167 ;;  pPacket         2   22[COMRAM] PTR struct .
 21168 ;;		 -> RAM(3935), NULL(0), 
 21169 ;; Return value:  Size  Location     Type
 21170 ;;                  1    wreg      void 
 21171 ;; Registers used:
 21172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21173 ;; Tracked objects:
 21174 ;;		On entry : 0/0
 21175 ;;		On exit  : 0/0
 21176 ;;		Unchanged: 0/0
 21177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21182 ;;Total ram usage:        6 bytes
 21183 ;; Hardware stack levels used:    1
 21184 ;; Hardware stack levels required when called:    4
 21185 ;; This function calls:
 21186 ;;		Nothing
 21187 ;; This function is called by:
 21188 ;;		_ETH_EventHandler
 21189 ;; This function uses a non-reentrant model
 21190 ;;
 21191                           
 21192                           	psect	text79
 21193  015760                     __ptext79:
 21194                           	opt stack 0
 21195  015760                     _ETH_RemovePacket:
 21196                           	opt stack 24
 21197                           
 21198                           ;ETHxxJ6x_driver.c: 1234: txPacket_t* pPacket = (0);
 21199                           
 21200                           ;incstack = 0
 21201  015760  0E00               	movlw	0
 21202  015762  6E17               	movwf	ETH_RemovePacket@pPacket,c
 21203  015764  0E00               	movlw	0
 21204  015766  6E18               	movwf	ETH_RemovePacket@pPacket+1,c
 21205                           
 21206                           ;ETHxxJ6x_driver.c: 1239: if( (packetHandle == (0)) || (ethListSize == 0) )
 21207  015768  5013               	movf	ETH_RemovePacket@packetHandle,w,c
 21208  01576A  1014               	iorwf	ETH_RemovePacket@packetHandle+1,w,c
 21209  01576C  B4D8               	btfsc	status,2,c
 21210  01576E  0012               	return	
 21211  015770  5048               	movf	_ethListSize,w,c
 21212  015772  B4D8               	btfsc	status,2,c
 21213  015774  0012               	return	
 21214                           
 21215                           ;ETHxxJ6x_driver.c: 1242: }
 21216                           ;ETHxxJ6x_driver.c: 1244: pPacket = (txPacket_t*)packetHandle;
 21217                           
 21218                           ;ETHxxJ6x_driver.c: 1240: {
 21219                           ;ETHxxJ6x_driver.c: 1241: return;
 21220  015776  C013  F017         	movff	ETH_RemovePacket@packetHandle,ETH_RemovePacket@pPacket
 21221  01577A  C014  F018         	movff	ETH_RemovePacket@packetHandle+1,ETH_RemovePacket@pPacket+1
 21222                           
 21223                           ;ETHxxJ6x_driver.c: 1262: if( pPacket->nextPacket == (0) )
 21224  01577E  EE20 F008          	lfsr	2,8
 21225  015782  5017               	movf	ETH_RemovePacket@pPacket,w,c
 21226  015784  26D9               	addwf	fsr2l,f,c
 21227  015786  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 21228  015788  22DA               	addwfc	fsr2h,f,c
 21229  01578A  50DE               	movf	postinc2,w,c
 21230  01578C  10DE               	iorwf	postinc2,w,c
 21231  01578E  A4D8               	btfss	status,2,c
 21232  015790  D018               	goto	l789
 21233                           
 21234                           ;ETHxxJ6x_driver.c: 1263: {
 21235                           ;ETHxxJ6x_driver.c: 1264: pTail = pPacket->prevPacket;
 21236  015792  EE20 F006          	lfsr	2,6
 21237  015796  5017               	movf	ETH_RemovePacket@pPacket,w,c
 21238  015798  26D9               	addwf	fsr2l,f,c
 21239  01579A  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 21240  01579C  22DA               	addwfc	fsr2h,f,c
 21241  01579E  CFDE F043          	movff	postinc2,_pTail
 21242  0157A2  CFDD F044          	movff	postdec2,_pTail+1
 21243                           
 21244                           ;ETHxxJ6x_driver.c: 1265: if( pTail != (0) )
 21245  0157A6  5043               	movf	_pTail,w,c
 21246  0157A8  1044               	iorwf	_pTail+1,w,c
 21247  0157AA  B4D8               	btfsc	status,2,c
 21248  0157AC  D00A               	goto	l789
 21249                           
 21250                           ;ETHxxJ6x_driver.c: 1266: {
 21251                           ;ETHxxJ6x_driver.c: 1267: pTail->nextPacket = (0);
 21252  0157AE  EE20 F008          	lfsr	2,8
 21253  0157B2  5043               	movf	_pTail,w,c
 21254  0157B4  26D9               	addwf	fsr2l,f,c
 21255  0157B6  5044               	movf	_pTail+1,w,c
 21256  0157B8  22DA               	addwfc	fsr2h,f,c
 21257  0157BA  0E00               	movlw	0
 21258  0157BC  6EDE               	movwf	postinc2,c
 21259  0157BE  0E00               	movlw	0
 21260  0157C0  6EDD               	movwf	postdec2,c
 21261  0157C2                     l789:
 21262                           
 21263                           ;ETHxxJ6x_driver.c: 1268: }
 21264                           ;ETHxxJ6x_driver.c: 1269: }
 21265                           ;ETHxxJ6x_driver.c: 1271: if( pPacket->prevPacket == (0) )
 21266  0157C2  EE20 F006          	lfsr	2,6
 21267  0157C6  5017               	movf	ETH_RemovePacket@pPacket,w,c
 21268  0157C8  26D9               	addwf	fsr2l,f,c
 21269  0157CA  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 21270  0157CC  22DA               	addwfc	fsr2h,f,c
 21271  0157CE  50DE               	movf	postinc2,w,c
 21272  0157D0  10DE               	iorwf	postinc2,w,c
 21273  0157D2  A4D8               	btfss	status,2,c
 21274  0157D4  D018               	goto	l791
 21275                           
 21276                           ;ETHxxJ6x_driver.c: 1272: {
 21277                           ;ETHxxJ6x_driver.c: 1273: pHead = pPacket->nextPacket;
 21278  0157D6  EE20 F008          	lfsr	2,8
 21279  0157DA  5017               	movf	ETH_RemovePacket@pPacket,w,c
 21280  0157DC  26D9               	addwf	fsr2l,f,c
 21281  0157DE  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 21282  0157E0  22DA               	addwfc	fsr2h,f,c
 21283  0157E2  CFDE F045          	movff	postinc2,_pHead
 21284  0157E6  CFDD F046          	movff	postdec2,_pHead+1
 21285                           
 21286                           ;ETHxxJ6x_driver.c: 1274: if( pHead != (0) )
 21287  0157EA  5045               	movf	_pHead,w,c
 21288  0157EC  1046               	iorwf	_pHead+1,w,c
 21289  0157EE  B4D8               	btfsc	status,2,c
 21290  0157F0  D00A               	goto	l791
 21291                           
 21292                           ;ETHxxJ6x_driver.c: 1275: {
 21293                           ;ETHxxJ6x_driver.c: 1276: pHead->prevPacket = (0);
 21294  0157F2  EE20 F006          	lfsr	2,6
 21295  0157F6  5045               	movf	_pHead,w,c
 21296  0157F8  26D9               	addwf	fsr2l,f,c
 21297  0157FA  5046               	movf	_pHead+1,w,c
 21298  0157FC  22DA               	addwfc	fsr2h,f,c
 21299  0157FE  0E00               	movlw	0
 21300  015800  6EDE               	movwf	postinc2,c
 21301  015802  0E00               	movlw	0
 21302  015804  6EDD               	movwf	postdec2,c
 21303  015806                     l791:
 21304                           
 21305                           ;ETHxxJ6x_driver.c: 1277: }
 21306                           ;ETHxxJ6x_driver.c: 1278: }
 21307                           ;ETHxxJ6x_driver.c: 1281: pPacket->flags = 0;
 21308  015806  C017  FFD9         	movff	ETH_RemovePacket@pPacket,fsr2l
 21309  01580A  C018  FFDA         	movff	ETH_RemovePacket@pPacket+1,fsr2h
 21310  01580E  0E00               	movlw	0
 21311  015810  6EDE               	movwf	postinc2,c
 21312  015812  0E00               	movlw	0
 21313  015814  6EDD               	movwf	postdec2,c
 21314                           
 21315                           ;ETHxxJ6x_driver.c: 1282: pPacket->prevPacket = (0);
 21316  015816  EE20 F006          	lfsr	2,6
 21317  01581A  5017               	movf	ETH_RemovePacket@pPacket,w,c
 21318  01581C  26D9               	addwf	fsr2l,f,c
 21319  01581E  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 21320  015820  22DA               	addwfc	fsr2h,f,c
 21321  015822  0E00               	movlw	0
 21322  015824  6EDE               	movwf	postinc2,c
 21323  015826  0E00               	movlw	0
 21324  015828  6EDD               	movwf	postdec2,c
 21325                           
 21326                           ;ETHxxJ6x_driver.c: 1283: pPacket->nextPacket = (0);
 21327  01582A  EE20 F008          	lfsr	2,8
 21328  01582E  5017               	movf	ETH_RemovePacket@pPacket,w,c
 21329  015830  26D9               	addwf	fsr2l,f,c
 21330  015832  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 21331  015834  22DA               	addwfc	fsr2h,f,c
 21332  015836  0E00               	movlw	0
 21333  015838  6EDE               	movwf	postinc2,c
 21334  01583A  0E00               	movlw	0
 21335  01583C  6EDD               	movwf	postdec2,c
 21336                           
 21337                           ;ETHxxJ6x_driver.c: 1285: ethListSize --;
 21338  01583E  0648               	decf	_ethListSize,f,c
 21339  015840  0012               	return	
 21340  015842                     __end_of_ETH_RemovePacket:
 21341                           	opt stack 0
 21342                           tosu	equ	0xFFF
 21343                           tosh	equ	0xFFE
 21344                           tosl	equ	0xFFD
 21345                           pclath	equ	0xFFA
 21346                           tblptru	equ	0xFF8
 21347                           tblptrh	equ	0xFF7
 21348                           tblptrl	equ	0xFF6
 21349                           tablat	equ	0xFF5
 21350                           prodh	equ	0xFF4
 21351                           prodl	equ	0xFF3
 21352                           intcon	equ	0xFF2
 21353                           indf0	equ	0xFEF
 21354                           postinc0	equ	0xFEE
 21355                           fsr0h	equ	0xFEA
 21356                           fsr0l	equ	0xFE9
 21357                           wreg	equ	0xFE8
 21358                           indf1	equ	0xFE7
 21359                           postinc1	equ	0xFE6
 21360                           postdec1	equ	0xFE5
 21361                           plusw1	equ	0xFE3
 21362                           fsr1h	equ	0xFE2
 21363                           fsr1l	equ	0xFE1
 21364                           indf2	equ	0xFDF
 21365                           postinc2	equ	0xFDE
 21366                           postdec2	equ	0xFDD
 21367                           plusw2	equ	0xFDB
 21368                           fsr2h	equ	0xFDA
 21369                           fsr2l	equ	0xFD9
 21370                           status	equ	0xFD8
 21371                           
 21372 ;; *************** function _ETH_CheckLinkUp *****************
 21373 ;; Defined at:
 21374 ;;		line 243 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21375 ;; Parameters:    Size  Location     Type
 21376 ;;		None
 21377 ;; Auto vars:     Size  Location     Type
 21378 ;;  value           4   29[COMRAM] unsigned long 
 21379 ;; Return value:  Size  Location     Type
 21380 ;;                  1    wreg      unsigned char 
 21381 ;; Registers used:
 21382 ;;		wreg, status,2, status,0, cstack
 21383 ;; Tracked objects:
 21384 ;;		On entry : 0/0
 21385 ;;		On exit  : 0/0
 21386 ;;		Unchanged: 0/0
 21387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21389 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21392 ;;Total ram usage:        4 bytes
 21393 ;; Hardware stack levels used:    1
 21394 ;; Hardware stack levels required when called:    6
 21395 ;; This function calls:
 21396 ;;		_PHY_Read
 21397 ;; This function is called by:
 21398 ;;		_ETH_Init
 21399 ;;		_ETH_EventHandler
 21400 ;;		_Network_WaitForLink
 21401 ;; This function uses a non-reentrant model
 21402 ;;
 21403                           
 21404                           	psect	text80
 21405  016C1C                     __ptext80:
 21406                           	opt stack 0
 21407  016C1C                     _ETH_CheckLinkUp:
 21408                           	opt stack 21
 21409                           
 21410                           ;ETHxxJ6x_driver.c: 245: uint32_t value;
 21411                           ;ETHxxJ6x_driver.c: 247: value = PHY_Read(PHSTAT2);
 21412                           
 21413                           ;incstack = 0
 21414  016C1C  0E11               	movlw	17
 21415  016C1E  EC13  F0B1         	call	_PHY_Read
 21416  016C22  C015  F01E         	movff	?_PHY_Read,ETH_CheckLinkUp@value
 21417  016C26  C016  F01F         	movff	?_PHY_Read+1,ETH_CheckLinkUp@value+1
 21418  016C2A  C017  F020         	movff	?_PHY_Read+2,ETH_CheckLinkUp@value+2
 21419  016C2E  C018  F021         	movff	?_PHY_Read+3,ETH_CheckLinkUp@value+3
 21420                           
 21421                           ;ETHxxJ6x_driver.c: 248: if(value & 0x0400)
 21422  016C32  A41F               	btfss	ETH_CheckLinkUp@value+1,2,c
 21423  016C34  D004               	goto	l506
 21424                           
 21425                           ;ETHxxJ6x_driver.c: 249: {
 21426                           ;ETHxxJ6x_driver.c: 250: ethData.up = 1;
 21427  016C36  0102               	movlb	2	; () banked
 21428  016C38  8524               	bsf	_ethData& (0+255),2,b	;volatile
 21429                           
 21430                           ; BSR set to: 2
 21431                           ;ETHxxJ6x_driver.c: 251: return 1;
 21432  016C3A  0E01               	movlw	1
 21433                           
 21434                           ; BSR set to: 2
 21435                           ;ETHxxJ6x_driver.c: 252: }
 21436                           
 21437                           ; BSR set to: 2
 21438  016C3C  0012               	return	
 21439  016C3E                     l506:
 21440                           
 21441                           ;ETHxxJ6x_driver.c: 253: else
 21442                           ;ETHxxJ6x_driver.c: 254: {
 21443                           ;ETHxxJ6x_driver.c: 255: ethData.up = 0;
 21444  016C3E  0102               	movlb	2	; () banked
 21445  016C40  9524               	bcf	_ethData& (0+255),2,b	;volatile
 21446                           
 21447                           ; BSR set to: 2
 21448                           ;ETHxxJ6x_driver.c: 256: return 0;
 21449  016C42  0E00               	movlw	0
 21450                           
 21451                           ; BSR set to: 2
 21452  016C44  0012               	return	
 21453  016C46                     __end_of_ETH_CheckLinkUp:
 21454                           	opt stack 0
 21455                           tosu	equ	0xFFF
 21456                           tosh	equ	0xFFE
 21457                           tosl	equ	0xFFD
 21458                           pclath	equ	0xFFA
 21459                           tblptru	equ	0xFF8
 21460                           tblptrh	equ	0xFF7
 21461                           tblptrl	equ	0xFF6
 21462                           tablat	equ	0xFF5
 21463                           prodh	equ	0xFF4
 21464                           prodl	equ	0xFF3
 21465                           intcon	equ	0xFF2
 21466                           indf0	equ	0xFEF
 21467                           postinc0	equ	0xFEE
 21468                           fsr0h	equ	0xFEA
 21469                           fsr0l	equ	0xFE9
 21470                           wreg	equ	0xFE8
 21471                           indf1	equ	0xFE7
 21472                           postinc1	equ	0xFE6
 21473                           postdec1	equ	0xFE5
 21474                           plusw1	equ	0xFE3
 21475                           fsr1h	equ	0xFE2
 21476                           fsr1l	equ	0xFE1
 21477                           indf2	equ	0xFDF
 21478                           postinc2	equ	0xFDE
 21479                           postdec2	equ	0xFDD
 21480                           plusw2	equ	0xFDB
 21481                           fsr2h	equ	0xFDA
 21482                           fsr2l	equ	0xFD9
 21483                           status	equ	0xFD8
 21484                           
 21485 ;; *************** function _PHY_Read *****************
 21486 ;; Defined at:
 21487 ;;		line 403 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21488 ;; Parameters:    Size  Location     Type
 21489 ;;  reg             1    wreg     enum E5175
 21490 ;; Auto vars:     Size  Location     Type
 21491 ;;  reg             1   24[COMRAM] enum E5175
 21492 ;;  ret             4   25[COMRAM] long 
 21493 ;; Return value:  Size  Location     Type
 21494 ;;                  4   20[COMRAM] long 
 21495 ;; Registers used:
 21496 ;;		wreg, status,2, status,0, cstack
 21497 ;; Tracked objects:
 21498 ;;		On entry : 0/0
 21499 ;;		On exit  : 0/0
 21500 ;;		Unchanged: 0/0
 21501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21503 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21505 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21506 ;;Total ram usage:        9 bytes
 21507 ;; Hardware stack levels used:    1
 21508 ;; Hardware stack levels required when called:    5
 21509 ;; This function calls:
 21510 ;;		_PHY_WaitForBusy
 21511 ;; This function is called by:
 21512 ;;		_ETH_CheckLinkUp
 21513 ;;		_ETH_EventHandler
 21514 ;; This function uses a non-reentrant model
 21515 ;;
 21516                           
 21517                           	psect	text81
 21518  016226                     __ptext81:
 21519                           	opt stack 0
 21520  016226                     _PHY_Read:
 21521                           	opt stack 21
 21522                           
 21523                           ; BSR set to: 2
 21524                           ;incstack = 0
 21525                           ;PHY_Read@reg stored from wreg
 21526  016226  6E19               	movwf	PHY_Read@reg,c
 21527                           
 21528                           ;ETHxxJ6x_driver.c: 405: int32_t ret = NOERROR;
 21529  016228  0E00               	movlw	0
 21530  01622A  6E1A               	movwf	PHY_Read@ret,c
 21531  01622C  0E00               	movlw	0
 21532  01622E  6E1B               	movwf	PHY_Read@ret+1,c
 21533  016230  0E00               	movlw	0
 21534  016232  6E1C               	movwf	PHY_Read@ret+2,c
 21535  016234  0E00               	movlw	0
 21536  016236  6E1D               	movwf	PHY_Read@ret+3,c
 21537                           
 21538                           ;ETHxxJ6x_driver.c: 406: if(PHY_WaitForBusy() == NOERROR)
 21539  016238  EC2D  F0B5         	call	_PHY_WaitForBusy	;wreg free
 21540  01623C  0900               	iorlw	0
 21541  01623E  A4D8               	btfss	status,2,c
 21542  016240  D01F               	goto	l545
 21543                           
 21544                           ;ETHxxJ6x_driver.c: 407: {
 21545                           ;ETHxxJ6x_driver.c: 408: MIREGADR = reg;
 21546  016242  C019  FEB4         	movff	PHY_Read@reg,3764	;volatile
 21547                           
 21548                           ;ETHxxJ6x_driver.c: 409: MICMD = 0;
 21549  016246  0E00               	movlw	0
 21550  016248  010E               	movlb	14	; () banked
 21551  01624A  6FB2               	movwf	178,b	;volatile
 21552                           
 21553                           ; BSR set to: 14
 21554                           ;ETHxxJ6x_driver.c: 410: MICMDbits.MIIRD = 1;
 21555  01624C  81B2               	bsf	178,0,b	;volatile
 21556                           
 21557                           ; BSR set to: 14
 21558                           ;ETHxxJ6x_driver.c: 411: __nop(); __nop();
 21559  01624E  F000               	nop	
 21560  016250  F000               	nop	
 21561                           
 21562                           ;ETHxxJ6x_driver.c: 412: if(PHY_WaitForBusy() == BUSY_TIMEOUT)
 21563  016252  EC2D  F0B5         	call	_PHY_WaitForBusy	;wreg free
 21564  016256  0AFF               	xorlw	-1
 21565  016258  A4D8               	btfss	status,2,c
 21566  01625A  D009               	goto	l546
 21567                           
 21568                           ;ETHxxJ6x_driver.c: 413: {
 21569                           ;ETHxxJ6x_driver.c: 414: ret = READ_FAIL;
 21570  01625C  0EFD               	movlw	253
 21571  01625E  6E1A               	movwf	PHY_Read@ret,c
 21572  016260  0EFF               	movlw	255
 21573  016262  6E1B               	movwf	PHY_Read@ret+1,c
 21574  016264  0EFF               	movlw	255
 21575  016266  6E1C               	movwf	PHY_Read@ret+2,c
 21576  016268  0EFF               	movlw	255
 21577  01626A  6E1D               	movwf	PHY_Read@ret+3,c
 21578                           
 21579                           ;ETHxxJ6x_driver.c: 415: }
 21580  01626C  D00D               	goto	l548
 21581  01626E                     l546:
 21582                           
 21583                           ;ETHxxJ6x_driver.c: 416: else
 21584                           ;ETHxxJ6x_driver.c: 417: {
 21585                           ;ETHxxJ6x_driver.c: 418: MICMDbits.MIIRD = 0;
 21586  01626E  010E               	movlb	14	; () banked
 21587  016270  91B2               	bcf	178,0,b	;volatile
 21588                           
 21589                           ; BSR set to: 14
 21590                           ;ETHxxJ6x_driver.c: 419: ret = MIRD;
 21591  016272  CEB8 F01A          	movff	3768,PHY_Read@ret	;volatile
 21592  016276  CEB9 F01B          	movff	3769,PHY_Read@ret+1	;volatile
 21593  01627A  6A1C               	clrf	PHY_Read@ret+2,c
 21594  01627C  6A1D               	clrf	PHY_Read@ret+3,c
 21595                           
 21596                           ; BSR set to: 14
 21597                           ;ETHxxJ6x_driver.c: 420: }
 21598                           ;ETHxxJ6x_driver.c: 421: }
 21599  01627E  D004               	goto	l548
 21600  016280                     l545:
 21601                           
 21602                           ;ETHxxJ6x_driver.c: 422: else
 21603                           ;ETHxxJ6x_driver.c: 423: {
 21604                           ;ETHxxJ6x_driver.c: 424: ret = BUSY_TIMEOUT;
 21605  016280  681A               	setf	PHY_Read@ret,c
 21606  016282  681B               	setf	PHY_Read@ret+1,c
 21607  016284  681C               	setf	PHY_Read@ret+2,c
 21608  016286  681D               	setf	PHY_Read@ret+3,c
 21609  016288                     l548:
 21610                           
 21611                           ;ETHxxJ6x_driver.c: 425: }
 21612                           ;ETHxxJ6x_driver.c: 426: return ret;
 21613  016288  C01A  F015         	movff	PHY_Read@ret,?_PHY_Read
 21614  01628C  C01B  F016         	movff	PHY_Read@ret+1,?_PHY_Read+1
 21615  016290  C01C  F017         	movff	PHY_Read@ret+2,?_PHY_Read+2
 21616  016294  C01D  F018         	movff	PHY_Read@ret+3,?_PHY_Read+3
 21617  016298  0012               	return		;funcret
 21618  01629A                     __end_of_PHY_Read:
 21619                           	opt stack 0
 21620                           tosu	equ	0xFFF
 21621                           tosh	equ	0xFFE
 21622                           tosl	equ	0xFFD
 21623                           pclath	equ	0xFFA
 21624                           tblptru	equ	0xFF8
 21625                           tblptrh	equ	0xFF7
 21626                           tblptrl	equ	0xFF6
 21627                           tablat	equ	0xFF5
 21628                           prodh	equ	0xFF4
 21629                           prodl	equ	0xFF3
 21630                           intcon	equ	0xFF2
 21631                           indf0	equ	0xFEF
 21632                           postinc0	equ	0xFEE
 21633                           fsr0h	equ	0xFEA
 21634                           fsr0l	equ	0xFE9
 21635                           wreg	equ	0xFE8
 21636                           indf1	equ	0xFE7
 21637                           postinc1	equ	0xFE6
 21638                           postdec1	equ	0xFE5
 21639                           plusw1	equ	0xFE3
 21640                           fsr1h	equ	0xFE2
 21641                           fsr1l	equ	0xFE1
 21642                           indf2	equ	0xFDF
 21643                           postinc2	equ	0xFDE
 21644                           postdec2	equ	0xFDD
 21645                           plusw2	equ	0xFDB
 21646                           fsr2h	equ	0xFDA
 21647                           fsr2l	equ	0xFD9
 21648                           status	equ	0xFD8
 21649                           
 21650 ;; *************** function _PHY_WaitForBusy *****************
 21651 ;; Defined at:
 21652 ;;		line 351 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21653 ;; Parameters:    Size  Location     Type
 21654 ;;		None
 21655 ;; Auto vars:     Size  Location     Type
 21656 ;;  timeout         1   19[COMRAM] unsigned char 
 21657 ;;  ret             1   18[COMRAM] enum E5184
 21658 ;; Return value:  Size  Location     Type
 21659 ;;                  1    wreg      enum E5184
 21660 ;; Registers used:
 21661 ;;		wreg, status,2, status,0
 21662 ;; Tracked objects:
 21663 ;;		On entry : 0/0
 21664 ;;		On exit  : 0/0
 21665 ;;		Unchanged: 0/0
 21666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21671 ;;Total ram usage:        2 bytes
 21672 ;; Hardware stack levels used:    1
 21673 ;; Hardware stack levels required when called:    4
 21674 ;; This function calls:
 21675 ;;		Nothing
 21676 ;; This function is called by:
 21677 ;;		_PHY_Write
 21678 ;;		_PHY_Read
 21679 ;; This function uses a non-reentrant model
 21680 ;;
 21681                           
 21682                           	psect	text82
 21683  016A5A                     __ptext82:
 21684                           	opt stack 0
 21685  016A5A                     _PHY_WaitForBusy:
 21686                           	opt stack 21
 21687                           
 21688                           ;ETHxxJ6x_driver.c: 353: phyError_t ret = NOERROR;
 21689                           
 21690                           ;incstack = 0
 21691  016A5A  0E00               	movlw	0
 21692  016A5C  6E13               	movwf	PHY_WaitForBusy@ret,c
 21693                           
 21694                           ;ETHxxJ6x_driver.c: 354: uint8_t timeout;
 21695                           ;ETHxxJ6x_driver.c: 356: for(timeout = 0; timeout < 10;timeout++) __nop();
 21696  016A5E  0E00               	movlw	0
 21697  016A60  6E14               	movwf	PHY_WaitForBusy@timeout,c
 21698  016A62                     l10710:
 21699  016A62  0E09               	movlw	9
 21700  016A64  6414               	cpfsgt	PHY_WaitForBusy@timeout,c
 21701  016A66  D001               	goto	l531
 21702  016A68  D003               	goto	u10160
 21703  016A6A                     l531:
 21704  016A6A  F000               	nop	
 21705  016A6C  2A14               	incf	PHY_WaitForBusy@timeout,f,c
 21706  016A6E  D7F9               	goto	l10710
 21707  016A70                     u10160:
 21708                           
 21709                           ;ETHxxJ6x_driver.c: 357: timeout = 90;
 21710  016A70  0E5A               	movlw	90
 21711  016A72  6E14               	movwf	PHY_WaitForBusy@timeout,c
 21712                           
 21713                           ;ETHxxJ6x_driver.c: 358: while(MISTATbits.BUSY && --timeout) __nop();
 21714  016A74  D001               	goto	l533
 21715  016A76                     l534:
 21716                           
 21717                           ; BSR set to: 14
 21718  016A76  F000               	nop	
 21719  016A78                     l533:
 21720  016A78  010E               	movlb	14	; () banked
 21721  016A7A  A18A               	btfss	138,0,b	;volatile
 21722  016A7C  D002               	goto	l536
 21723                           
 21724                           ; BSR set to: 14
 21725  016A7E  2E14               	decfsz	PHY_WaitForBusy@timeout,f,c
 21726  016A80  D7FA               	goto	l534
 21727  016A82                     l536:
 21728                           
 21729                           ; BSR set to: 14
 21730                           ;ETHxxJ6x_driver.c: 360: if(timeout == 0) ret = BUSY_TIMEOUT;
 21731                           
 21732                           ; BSR set to: 14
 21733                           
 21734                           ; BSR set to: 14
 21735  016A82  5014               	movf	PHY_WaitForBusy@timeout,w,c
 21736  016A84  B4D8               	btfsc	status,2,c
 21737                           
 21738                           ; BSR set to: 14
 21739  016A86  6813               	setf	PHY_WaitForBusy@ret,c
 21740                           
 21741                           ; BSR set to: 14
 21742                           ;ETHxxJ6x_driver.c: 361: return ret;
 21743                           
 21744                           ; BSR set to: 14
 21745  016A88  5013               	movf	PHY_WaitForBusy@ret,w,c
 21746  016A8A  0012               	return	
 21747  016A8C                     __end_of_PHY_WaitForBusy:
 21748                           	opt stack 0
 21749                           tosu	equ	0xFFF
 21750                           tosh	equ	0xFFE
 21751                           tosl	equ	0xFFD
 21752                           pclath	equ	0xFFA
 21753                           tblptru	equ	0xFF8
 21754                           tblptrh	equ	0xFF7
 21755                           tblptrl	equ	0xFF6
 21756                           tablat	equ	0xFF5
 21757                           prodh	equ	0xFF4
 21758                           prodl	equ	0xFF3
 21759                           intcon	equ	0xFF2
 21760                           indf0	equ	0xFEF
 21761                           postinc0	equ	0xFEE
 21762                           fsr0h	equ	0xFEA
 21763                           fsr0l	equ	0xFE9
 21764                           wreg	equ	0xFE8
 21765                           indf1	equ	0xFE7
 21766                           postinc1	equ	0xFE6
 21767                           postdec1	equ	0xFE5
 21768                           plusw1	equ	0xFE3
 21769                           fsr1h	equ	0xFE2
 21770                           fsr1l	equ	0xFE1
 21771                           indf2	equ	0xFDF
 21772                           postinc2	equ	0xFDE
 21773                           postdec2	equ	0xFDD
 21774                           plusw2	equ	0xFDB
 21775                           fsr2h	equ	0xFDA
 21776                           fsr2l	equ	0xFD9
 21777                           status	equ	0xFD8
 21778                           
 21779 ;; *************** function _DHCP_Manage *****************
 21780 ;; Defined at:
 21781 ;;		line 202 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 21782 ;; Parameters:    Size  Location     Type
 21783 ;;		None
 21784 ;; Auto vars:     Size  Location     Type
 21785 ;;  now             4   82[BANK0 ] long 
 21786 ;; Return value:  Size  Location     Type
 21787 ;;                  1    wreg      void 
 21788 ;; Registers used:
 21789 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21790 ;; Tracked objects:
 21791 ;;		On entry : 0/0
 21792 ;;		On exit  : 0/0
 21793 ;;		Unchanged: 0/0
 21794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21796 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21798 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21799 ;;Total ram usage:        5 bytes
 21800 ;; Hardware stack levels used:    1
 21801 ;; Hardware stack levels required when called:   12
 21802 ;; This function calls:
 21803 ;;		_sendDHCPDISCOVER
 21804 ;;		_sendDHCPREQUEST
 21805 ;;		_time
 21806 ;; This function is called by:
 21807 ;;		_Network_Manage
 21808 ;; This function uses a non-reentrant model
 21809 ;;
 21810                           
 21811                           	psect	text83
 21812  014FA0                     __ptext83:
 21813                           	opt stack 0
 21814  014FA0                     _DHCP_Manage:
 21815                           	opt stack 17
 21816                           
 21817                           ;dhcp_client.c: 204: static time_t managementTimer = 0;
 21818                           ;dhcp_client.c: 205: time_t now;
 21819                           ;dhcp_client.c: 206: now = time(0);
 21820                           
 21821                           ; BSR set to: 14
 21822                           ;incstack = 0
 21823  014FA0  0E00               	movlw	0
 21824  014FA2  6E13               	movwf	time@t,c
 21825  014FA4  0E00               	movlw	0
 21826  014FA6  6E14               	movwf	time@t+1,c
 21827  014FA8  ECCA  F0B2         	call	_time	;wreg free
 21828  014FAC  C013  F0B2         	movff	?_time,DHCP_Manage@now
 21829  014FB0  C014  F0B3         	movff	?_time+1,DHCP_Manage@now+1
 21830  014FB4  C015  F0B4         	movff	?_time+2,DHCP_Manage@now+2
 21831  014FB8  C016  F0B5         	movff	?_time+3,DHCP_Manage@now+3
 21832                           
 21833                           ;dhcp_client.c: 208: if(managementTimer <= now)
 21834  014FBC  0103               	movlb	3	; () banked
 21835  014FBE  5108               	movf	DHCP_Manage@managementTimer& (0+255),w,b
 21836  014FC0  0100               	movlb	0	; () banked
 21837  014FC2  5DB2               	subwf	DHCP_Manage@now& (0+255),w,b
 21838  014FC4  0103               	movlb	3	; () banked
 21839  014FC6  5109               	movf	(DHCP_Manage@managementTimer+1)& (0+255),w,b
 21840  014FC8  0100               	movlb	0	; () banked
 21841  014FCA  59B3               	subwfb	(DHCP_Manage@now+1)& (0+255),w,b
 21842  014FCC  0103               	movlb	3	; () banked
 21843  014FCE  510A               	movf	(DHCP_Manage@managementTimer+2)& (0+255),w,b
 21844  014FD0  0100               	movlb	0	; () banked
 21845  014FD2  59B4               	subwfb	(DHCP_Manage@now+2)& (0+255),w,b
 21846  014FD4  51B5               	movf	(DHCP_Manage@now+3)& (0+255),w,b
 21847  014FD6  0A80               	xorlw	128
 21848  014FD8  6FB1               	movwf	??_DHCP_Manage& (0+255),b
 21849  014FDA  0103               	movlb	3	; () banked
 21850  014FDC  510B               	movf	(DHCP_Manage@managementTimer+3)& (0+255),w,b
 21851  014FDE  0A80               	xorlw	128
 21852  014FE0  0100               	movlb	0	; () banked
 21853  014FE2  59B1               	subwfb	??_DHCP_Manage& (0+255),w,b
 21854  014FE4  B0D8               	btfsc	status,0,c
 21855  014FE6  D065               	goto	l1328
 21856  014FE8  D073               	goto	l1330
 21857  014FEA                     
 21858                           ;dhcp_client.c: 213: dhcpData.t1 = 4;
 21859                           
 21860                           ; BSR set to: 0
 21861  014FEA  0E04               	movlw	4
 21862  014FEC  0102               	movlb	2	; () banked
 21863  014FEE  6FB1               	movwf	(_dhcpData+36)& (0+255),b
 21864  014FF0  0E00               	movlw	0
 21865  014FF2  6FB2               	movwf	(_dhcpData+37)& (0+255),b
 21866  014FF4  0E00               	movlw	0
 21867  014FF6  6FB3               	movwf	(_dhcpData+38)& (0+255),b
 21868  014FF8  0E00               	movlw	0
 21869  014FFA  6FB4               	movwf	(_dhcpData+39)& (0+255),b
 21870  014FFC                     
 21871                           ;dhcp_client.c: 214: dhcpState.tmrClientState = WAITFORTIMER;
 21872  014FFC  0E01               	movlw	1
 21873  014FFE  D036               	goto	L21
 21874  015000                     
 21875                           ; BSR set to: 2
 21876                           ;dhcp_client.c: 217: if(dhcpData.t1 == 2)
 21877                           
 21878                           ; BSR set to: 2
 21879  015000  0E02               	movlw	2
 21880  015002  19B1               	xorwf	(_dhcpData+36)& (0+255),w,b
 21881  015004  11B2               	iorwf	(_dhcpData+37)& (0+255),w,b
 21882  015006  11B3               	iorwf	(_dhcpData+38)& (0+255),w,b
 21883  015008  11B4               	iorwf	(_dhcpData+39)& (0+255),w,b
 21884  01500A  A4D8               	btfss	status,2,c
 21885  01500C  D003               	goto	l1332
 21886                           
 21887                           ; BSR set to: 2
 21888                           ;dhcp_client.c: 218: {
 21889                           ;dhcp_client.c: 219: dhcpState.tmrClientState = STARTDISCOVER;
 21890  01500E  0E02               	movlw	2
 21891  015010  6F4D               	movwf	(_dhcpState+1)& (0+255),b
 21892                           
 21893                           ;dhcp_client.c: 220: }
 21894  015012  D005               	goto	l1333
 21895  015014                     l1332:
 21896                           
 21897                           ; BSR set to: 2
 21898                           ;dhcp_client.c: 221: else dhcpData.t1 --;
 21899                           
 21900                           ; BSR set to: 2
 21901  015014  07B1               	decf	(_dhcpData+36)& (0+255),f,b
 21902  015016  0E00               	movlw	0
 21903  015018  5BB2               	subwfb	(_dhcpData+37)& (0+255),f,b
 21904  01501A  5BB3               	subwfb	(_dhcpData+38)& (0+255),f,b
 21905  01501C  5BB4               	subwfb	(_dhcpData+39)& (0+255),f,b
 21906  01501E                     l1333:
 21907                           
 21908                           ; BSR set to: 2
 21909                           ;dhcp_client.c: 222: if(dhcpData.t2 == 2)
 21910  01501E  0E02               	movlw	2
 21911  015020  19B5               	xorwf	(_dhcpData+40)& (0+255),w,b
 21912  015022  11B6               	iorwf	(_dhcpData+41)& (0+255),w,b
 21913  015024  11B7               	iorwf	(_dhcpData+42)& (0+255),w,b
 21914  015026  11B8               	iorwf	(_dhcpData+43)& (0+255),w,b
 21915  015028  A4D8               	btfss	status,2,c
 21916  01502A  D002               	goto	l1334
 21917                           
 21918                           ; BSR set to: 2
 21919                           ;dhcp_client.c: 223: {
 21920                           ;dhcp_client.c: 224: dhcpState.tmrClientState = STARTREQUEST;
 21921  01502C  0E03               	movlw	3
 21922  01502E  D01E               	goto	L21
 21923  015030                     l1334:
 21924                           
 21925                           ; BSR set to: 2
 21926                           ;dhcp_client.c: 226: else dhcpData.t2 --;
 21927                           
 21928                           ; BSR set to: 2
 21929  015030  07B5               	decf	(_dhcpData+40)& (0+255),f,b
 21930  015032  0E00               	movlw	0
 21931  015034  5BB6               	subwfb	(_dhcpData+41)& (0+255),f,b
 21932  015036  5BB7               	subwfb	(_dhcpData+42)& (0+255),f,b
 21933  015038  5BB8               	subwfb	(_dhcpData+43)& (0+255),f,b
 21934                           
 21935                           ; BSR set to: 2
 21936                           ;dhcp_client.c: 227: break;
 21937  01503A  D04A               	goto	l1330
 21938  01503C                     
 21939                           ; BSR set to: 2
 21940                           ;dhcp_client.c: 229: if(sendDHCPDISCOVER())
 21941                           
 21942                           ; BSR set to: 2
 21943  01503C  EC1B  F0B0         	call	_sendDHCPDISCOVER	;wreg free
 21944  015040  0900               	iorlw	0
 21945  015042  B4D8               	btfsc	status,2,c
 21946  015044  D045               	goto	l1330
 21947                           
 21948                           ;dhcp_client.c: 230: {
 21949                           ;dhcp_client.c: 231: dhcpData.t1 = 10;
 21950  015046  0E0A               	movlw	10
 21951  015048  0102               	movlb	2	; () banked
 21952  01504A  6FB1               	movwf	(_dhcpData+36)& (0+255),b
 21953  01504C  0E00               	movlw	0
 21954  01504E  6FB2               	movwf	(_dhcpData+37)& (0+255),b
 21955  015050  0E00               	movlw	0
 21956  015052  6FB3               	movwf	(_dhcpData+38)& (0+255),b
 21957  015054  0E00               	movlw	0
 21958  015056  6FB4               	movwf	(_dhcpData+39)& (0+255),b
 21959                           
 21960                           ;dhcp_client.c: 232: dhcpData.t2 = 2147483647;
 21961  015058  0EFF               	movlw	255
 21962  01505A  6FB5               	movwf	(_dhcpData+40)& (0+255),b
 21963  01505C  0EFF               	movlw	255
 21964  01505E  6FB6               	movwf	(_dhcpData+41)& (0+255),b
 21965  015060  0EFF               	movlw	255
 21966  015062  6FB7               	movwf	(_dhcpData+42)& (0+255),b
 21967  015064  0E7F               	movlw	127
 21968  015066  6FB8               	movwf	(_dhcpData+43)& (0+255),b
 21969                           
 21970                           ;dhcp_client.c: 233: dhcpState.rxClientState = SELECTING;
 21971  015068  0E00               	movlw	0
 21972  01506A  D01F               	goto	L19
 21973  01506C                     L21:
 21974  01506C  6F4D               	movwf	(_dhcpState+1)& (0+255),b
 21975                           
 21976                           ; BSR set to: 2
 21977                           ;dhcp_client.c: 235: }
 21978                           ;dhcp_client.c: 236: break;
 21979  01506E  D030               	goto	l1330
 21980  015070                     
 21981                           ; BSR set to: 2
 21982                           ;dhcp_client.c: 238: if(sendDHCPREQUEST())
 21983                           
 21984                           ; BSR set to: 2
 21985  015070  EC93  F0B7         	call	_sendDHCPREQUEST	;wreg free
 21986  015074  0900               	iorlw	0
 21987  015076  B4D8               	btfsc	status,2,c
 21988  015078  D02B               	goto	l1330
 21989                           
 21990                           ;dhcp_client.c: 239: {
 21991                           ;dhcp_client.c: 240: dhcpData.t1 = 30;
 21992  01507A  0E1E               	movlw	30
 21993  01507C  0102               	movlb	2	; () banked
 21994  01507E  6FB1               	movwf	(_dhcpData+36)& (0+255),b
 21995  015080  0E00               	movlw	0
 21996  015082  6FB2               	movwf	(_dhcpData+37)& (0+255),b
 21997  015084  0E00               	movlw	0
 21998  015086  6FB3               	movwf	(_dhcpData+38)& (0+255),b
 21999  015088  0E00               	movlw	0
 22000  01508A  6FB4               	movwf	(_dhcpData+39)& (0+255),b
 22001                           
 22002                           ;dhcp_client.c: 241: dhcpData.t2 = 15;
 22003  01508C  0E0F               	movlw	15
 22004  01508E  6FB5               	movwf	(_dhcpData+40)& (0+255),b
 22005  015090  0E00               	movlw	0
 22006  015092  6FB6               	movwf	(_dhcpData+41)& (0+255),b
 22007  015094  0E00               	movlw	0
 22008  015096  6FB7               	movwf	(_dhcpData+42)& (0+255),b
 22009  015098  0E00               	movlw	0
 22010  01509A  6FB8               	movwf	(_dhcpData+43)& (0+255),b
 22011                           
 22012                           ; BSR set to: 2
 22013                           ;dhcp_client.c: 242: if(dhcpState.rxClientState == BOUND )dhcpState.rxClientState = RENE
      +                          WLEASE;
 22014  01509C  0E03               	movlw	3
 22015  01509E  194C               	xorwf	_dhcpState& (0+255),w,b
 22016  0150A0  A4D8               	btfss	status,2,c
 22017  0150A2  D002               	goto	l1340
 22018                           
 22019                           ; BSR set to: 2
 22020  0150A4  0E02               	movlw	2
 22021  0150A6  D001               	goto	L19
 22022  0150A8                     l1340:
 22023                           
 22024                           ; BSR set to: 2
 22025                           ;dhcp_client.c: 243: else dhcpState.rxClientState = REQUESTING;
 22026                           
 22027                           ; BSR set to: 2
 22028  0150A8  0E01               	movlw	1
 22029  0150AA                     L19:
 22030  0150AA  6F4C               	movwf	_dhcpState& (0+255),b
 22031  0150AC  D7A7               	goto	L22
 22032  0150AE                     
 22033                           ; BSR set to: 2
 22034                           ;dhcp_client.c: 248: dhcpState.tmrClientState = INIT_TIMER;
 22035                           
 22036                           ; BSR set to: 2
 22037  0150AE  0E00               	movlw	0
 22038  0150B0  D7DD               	goto	L21
 22039  0150B2                     l1328:
 22040                           
 22041                           ; BSR set to: 2
 22042  0150B2  0102               	movlb	2	; () banked
 22043  0150B4  514D               	movf	(_dhcpState+1)& (0+255),w,b
 22044                           
 22045                           ; Switch size 1, requested type "space"
 22046                           ; Number of cases is 4, Range of values is 0 to 3
 22047                           ; switch strategies available:
 22048                           ; Name         Instructions Cycles
 22049                           ; simple_byte           13     7 (average)
 22050                           ;	Chosen strategy is simple_byte
 22051  0150B6  0A00               	xorlw	0	; case 0
 22052  0150B8  B4D8               	btfsc	status,2,c
 22053  0150BA  D797               	goto	l1329
 22054  0150BC  0A01               	xorlw	1	; case 1
 22055  0150BE  B4D8               	btfsc	status,2,c
 22056  0150C0  D79F               	goto	l1331
 22057  0150C2  0A03               	xorlw	3	; case 2
 22058  0150C4  B4D8               	btfsc	status,2,c
 22059  0150C6  D7BA               	goto	l1336
 22060  0150C8  0A01               	xorlw	1	; case 3
 22061  0150CA  B4D8               	btfsc	status,2,c
 22062  0150CC  D7D1               	goto	l1338
 22063  0150CE  D7EF               	goto	l1342
 22064  0150D0                     l1330:
 22065                           
 22066                           ;dhcp_client.c: 251: }
 22067                           ;dhcp_client.c: 252: managementTimer = now + 1;
 22068                           
 22069                           ; BSR set to: 2
 22070                           
 22071                           ; BSR set to: 2
 22072  0150D0  0E01               	movlw	1
 22073  0150D2  0100               	movlb	0	; () banked
 22074  0150D4  25B2               	addwf	DHCP_Manage@now& (0+255),w,b
 22075  0150D6  0103               	movlb	3	; () banked
 22076  0150D8  6F08               	movwf	DHCP_Manage@managementTimer& (0+255),b
 22077  0150DA  0E00               	movlw	0
 22078  0150DC  0100               	movlb	0	; () banked
 22079  0150DE  21B3               	addwfc	(DHCP_Manage@now+1)& (0+255),w,b
 22080  0150E0  0103               	movlb	3	; () banked
 22081  0150E2  6F09               	movwf	(DHCP_Manage@managementTimer+1)& (0+255),b
 22082  0150E4  0E00               	movlw	0
 22083  0150E6  0100               	movlb	0	; () banked
 22084  0150E8  21B4               	addwfc	(DHCP_Manage@now+2)& (0+255),w,b
 22085  0150EA  0103               	movlb	3	; () banked
 22086  0150EC  6F0A               	movwf	(DHCP_Manage@managementTimer+2)& (0+255),b
 22087  0150EE  0E00               	movlw	0
 22088  0150F0  0100               	movlb	0	; () banked
 22089  0150F2  21B5               	addwfc	(DHCP_Manage@now+3)& (0+255),w,b
 22090  0150F4  0103               	movlb	3	; () banked
 22091  0150F6  6F0B               	movwf	(DHCP_Manage@managementTimer+3)& (0+255),b
 22092                           
 22093                           ; BSR set to: 3
 22094  0150F8  0012               	return		;funcret
 22095  0150FA                     __end_of_DHCP_Manage:
 22096                           	opt stack 0
 22097                           tosu	equ	0xFFF
 22098                           tosh	equ	0xFFE
 22099                           tosl	equ	0xFFD
 22100                           pclath	equ	0xFFA
 22101                           tblptru	equ	0xFF8
 22102                           tblptrh	equ	0xFF7
 22103                           tblptrl	equ	0xFF6
 22104                           tablat	equ	0xFF5
 22105                           prodh	equ	0xFF4
 22106                           prodl	equ	0xFF3
 22107                           intcon	equ	0xFF2
 22108                           indf0	equ	0xFEF
 22109                           postinc0	equ	0xFEE
 22110                           fsr0h	equ	0xFEA
 22111                           fsr0l	equ	0xFE9
 22112                           wreg	equ	0xFE8
 22113                           indf1	equ	0xFE7
 22114                           postinc1	equ	0xFE6
 22115                           postdec1	equ	0xFE5
 22116                           plusw1	equ	0xFE3
 22117                           fsr1h	equ	0xFE2
 22118                           fsr1l	equ	0xFE1
 22119                           indf2	equ	0xFDF
 22120                           postinc2	equ	0xFDE
 22121                           postdec2	equ	0xFDD
 22122                           plusw2	equ	0xFDB
 22123                           fsr2h	equ	0xFDA
 22124                           fsr2l	equ	0xFD9
 22125                           status	equ	0xFD8
 22126                           
 22127 ;; *************** function _time *****************
 22128 ;; Defined at:
 22129 ;;		line 163 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 22130 ;; Parameters:    Size  Location     Type
 22131 ;;  t               2   18[COMRAM] PTR long 
 22132 ;;		 -> Network_Manage@now(4), arpTimer(4), NULL(0), 
 22133 ;; Auto vars:     Size  Location     Type
 22134 ;;  the_time        4   23[COMRAM] long 
 22135 ;;  gie_val         1   22[COMRAM] unsigned char 
 22136 ;; Return value:  Size  Location     Type
 22137 ;;                  4   18[COMRAM] long 
 22138 ;; Registers used:
 22139 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22140 ;; Tracked objects:
 22141 ;;		On entry : 0/0
 22142 ;;		On exit  : 0/0
 22143 ;;		Unchanged: 0/0
 22144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22146 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22148 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22149 ;;Total ram usage:        9 bytes
 22150 ;; Hardware stack levels used:    1
 22151 ;; Hardware stack levels required when called:    4
 22152 ;; This function calls:
 22153 ;;		Nothing
 22154 ;; This function is called by:
 22155 ;;		_timersInit
 22156 ;;		_Network_Manage
 22157 ;;		_DHCP_Manage
 22158 ;;		_DNS_Handler
 22159 ;;		_SYSLOG_Init
 22160 ;;		_SYSLOG_Write
 22161 ;;		_NTP_Request
 22162 ;; This function uses a non-reentrant model
 22163 ;;
 22164                           
 22165                           	psect	text84
 22166  016594                     __ptext84:
 22167                           	opt stack 0
 22168  016594                     _time:
 22169                           	opt stack 23
 22170                           
 22171                           ;rtcc.c: 165: bool gie_val;
 22172                           ;rtcc.c: 166: time_t the_time;
 22173                           ;rtcc.c: 168: gie_val = GIE;
 22174                           
 22175                           ; BSR set to: 3
 22176                           ;incstack = 0
 22177  016594  0E00               	movlw	0
 22178  016596  BEF2               	btfsc	intcon,7,c	;volatile
 22179  016598  0E01               	movlw	1
 22180  01659A  6E17               	movwf	time@gie_val,c
 22181                           
 22182                           ;rtcc.c: 169: GIE = 0;
 22183  01659C  9EF2               	bcf	intcon,7,c	;volatile
 22184                           
 22185                           ;rtcc.c: 170: the_time = device_time;
 22186  01659E  C22E  F018         	movff	_device_time,time@the_time	;volatile
 22187  0165A2  C22F  F019         	movff	_device_time+1,time@the_time+1	;volatile
 22188  0165A6  C230  F01A         	movff	_device_time+2,time@the_time+2	;volatile
 22189  0165AA  C231  F01B         	movff	_device_time+3,time@the_time+3	;volatile
 22190                           
 22191                           ;rtcc.c: 171: GIE = gie_val;
 22192  0165AE  A017               	btfss	time@gie_val,0,c
 22193  0165B0  D002               	goto	u10370
 22194  0165B2  8EF2               	bsf	intcon,7,c	;volatile
 22195  0165B4  D001               	goto	u10385
 22196  0165B6                     u10370:
 22197  0165B6  9EF2               	bcf	intcon,7,c	;volatile
 22198  0165B8                     u10385:
 22199                           
 22200                           ;rtcc.c: 173: if(t)
 22201  0165B8  5013               	movf	time@t,w,c
 22202  0165BA  1014               	iorwf	time@t+1,w,c
 22203  0165BC  B4D8               	btfsc	status,2,c
 22204  0165BE  D00C               	goto	l1036
 22205                           
 22206                           ;rtcc.c: 174: {
 22207                           ;rtcc.c: 175: *t = the_time;
 22208  0165C0  C013  FFD9         	movff	time@t,fsr2l
 22209  0165C4  C014  FFDA         	movff	time@t+1,fsr2h
 22210  0165C8  C018  FFDE         	movff	time@the_time,postinc2
 22211  0165CC  C019  FFDE         	movff	time@the_time+1,postinc2
 22212  0165D0  C01A  FFDE         	movff	time@the_time+2,postinc2
 22213  0165D4  C01B  FFDE         	movff	time@the_time+3,postinc2
 22214  0165D8                     l1036:
 22215                           
 22216                           ;rtcc.c: 176: }
 22217                           ;rtcc.c: 178: return (the_time);
 22218  0165D8  C018  F013         	movff	time@the_time,?_time
 22219  0165DC  C019  F014         	movff	time@the_time+1,?_time+1
 22220  0165E0  C01A  F015         	movff	time@the_time+2,?_time+2
 22221  0165E4  C01B  F016         	movff	time@the_time+3,?_time+3
 22222  0165E8  0012               	return	
 22223  0165EA                     __end_of_time:
 22224                           	opt stack 0
 22225                           tosu	equ	0xFFF
 22226                           tosh	equ	0xFFE
 22227                           tosl	equ	0xFFD
 22228                           pclath	equ	0xFFA
 22229                           tblptru	equ	0xFF8
 22230                           tblptrh	equ	0xFF7
 22231                           tblptrl	equ	0xFF6
 22232                           tablat	equ	0xFF5
 22233                           prodh	equ	0xFF4
 22234                           prodl	equ	0xFF3
 22235                           intcon	equ	0xFF2
 22236                           indf0	equ	0xFEF
 22237                           postinc0	equ	0xFEE
 22238                           fsr0h	equ	0xFEA
 22239                           fsr0l	equ	0xFE9
 22240                           wreg	equ	0xFE8
 22241                           indf1	equ	0xFE7
 22242                           postinc1	equ	0xFE6
 22243                           postdec1	equ	0xFE5
 22244                           plusw1	equ	0xFE3
 22245                           fsr1h	equ	0xFE2
 22246                           fsr1l	equ	0xFE1
 22247                           indf2	equ	0xFDF
 22248                           postinc2	equ	0xFDE
 22249                           postdec2	equ	0xFDD
 22250                           plusw2	equ	0xFDB
 22251                           fsr2h	equ	0xFDA
 22252                           fsr2l	equ	0xFD9
 22253                           status	equ	0xFD8
 22254                           
 22255 ;; *************** function _sendDHCPREQUEST *****************
 22256 ;; Defined at:
 22257 ;;		line 131 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 22258 ;; Parameters:    Size  Location     Type
 22259 ;;		None
 22260 ;; Auto vars:     Size  Location     Type
 22261 ;;		None
 22262 ;; Return value:  Size  Location     Type
 22263 ;;                  1    wreg      unsigned char 
 22264 ;; Registers used:
 22265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22266 ;; Tracked objects:
 22267 ;;		On entry : 0/0
 22268 ;;		On exit  : 0/0
 22269 ;;		Unchanged: 0/0
 22270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22275 ;;Total ram usage:        0 bytes
 22276 ;; Hardware stack levels used:    1
 22277 ;; Hardware stack levels required when called:   11
 22278 ;; This function calls:
 22279 ;;		_sendRequest
 22280 ;; This function is called by:
 22281 ;;		_DHCP_Manage
 22282 ;;		_DHCP_Handler
 22283 ;; This function uses a non-reentrant model
 22284 ;;
 22285                           
 22286                           	psect	text85
 22287  016F26                     __ptext85:
 22288                           	opt stack 0
 22289  016F26                     _sendDHCPREQUEST:
 22290                           	opt stack 14
 22291                           
 22292                           ;dhcp_client.c: 133: return sendRequest(DHCP_REQUEST);
 22293                           
 22294                           ;incstack = 0
 22295  016F26  0E03               	movlw	3
 22296  016F28  ECE0  F0A1         	call	_sendRequest
 22297  016F2C  0012               	return	
 22298  016F2E                     __end_of_sendDHCPREQUEST:
 22299                           	opt stack 0
 22300                           tosu	equ	0xFFF
 22301                           tosh	equ	0xFFE
 22302                           tosl	equ	0xFFD
 22303                           pclath	equ	0xFFA
 22304                           tblptru	equ	0xFF8
 22305                           tblptrh	equ	0xFF7
 22306                           tblptrl	equ	0xFF6
 22307                           tablat	equ	0xFF5
 22308                           prodh	equ	0xFF4
 22309                           prodl	equ	0xFF3
 22310                           intcon	equ	0xFF2
 22311                           indf0	equ	0xFEF
 22312                           postinc0	equ	0xFEE
 22313                           fsr0h	equ	0xFEA
 22314                           fsr0l	equ	0xFE9
 22315                           wreg	equ	0xFE8
 22316                           indf1	equ	0xFE7
 22317                           postinc1	equ	0xFE6
 22318                           postdec1	equ	0xFE5
 22319                           plusw1	equ	0xFE3
 22320                           fsr1h	equ	0xFE2
 22321                           fsr1l	equ	0xFE1
 22322                           indf2	equ	0xFDF
 22323                           postinc2	equ	0xFDE
 22324                           postdec2	equ	0xFDD
 22325                           plusw2	equ	0xFDB
 22326                           fsr2h	equ	0xFDA
 22327                           fsr2l	equ	0xFD9
 22328                           status	equ	0xFD8
 22329                           
 22330 ;; *************** function _sendDHCPDISCOVER *****************
 22331 ;; Defined at:
 22332 ;;		line 118 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 22333 ;; Parameters:    Size  Location     Type
 22334 ;;		None
 22335 ;; Auto vars:     Size  Location     Type
 22336 ;;		None
 22337 ;; Return value:  Size  Location     Type
 22338 ;;                  1    wreg      unsigned char 
 22339 ;; Registers used:
 22340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22341 ;; Tracked objects:
 22342 ;;		On entry : 0/0
 22343 ;;		On exit  : 0/0
 22344 ;;		Unchanged: 0/0
 22345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22349 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22350 ;;Total ram usage:        1 bytes
 22351 ;; Hardware stack levels used:    1
 22352 ;; Hardware stack levels required when called:   11
 22353 ;; This function calls:
 22354 ;;		_lfsr
 22355 ;;		_sendRequest
 22356 ;; This function is called by:
 22357 ;;		_DHCP_Manage
 22358 ;; This function uses a non-reentrant model
 22359 ;;
 22360                           
 22361                           	psect	text86
 22362  016036                     __ptext86:
 22363                           	opt stack 0
 22364  016036                     _sendDHCPDISCOVER:
 22365                           	opt stack 17
 22366                           
 22367                           ;dhcp_client.c: 120: dhcpData.dhcpIPAddress = (ip_database_info.ipv4_myAddress);
 22368                           
 22369                           ;incstack = 0
 22370  016036  C200  F28D         	movff	_ip_database_info,_dhcpData
 22371  01603A  C201  F28E         	movff	_ip_database_info+1,_dhcpData+1
 22372  01603E  C202  F28F         	movff	_ip_database_info+2,_dhcpData+2
 22373  016042  C203  F290         	movff	_ip_database_info+3,_dhcpData+3
 22374                           
 22375                           ;dhcp_client.c: 121: dhcpData.xidValue = lfsr();
 22376  016046  ECA4  F0B6         	call	_lfsr	;wreg free
 22377  01604A  0100               	movlb	0	; () banked
 22378  01604C  6FB0               	movwf	??_sendDHCPDISCOVER& (0+255),b
 22379  01604E  51B0               	movf	??_sendDHCPDISCOVER& (0+255),w,b
 22380  016050  0102               	movlb	2	; () banked
 22381  016052  6FAD               	movwf	(_dhcpData+32)& (0+255),b
 22382  016054  6BAE               	clrf	(_dhcpData+33)& (0+255),b
 22383  016056  6BAF               	clrf	(_dhcpData+34)& (0+255),b
 22384  016058  6BB0               	clrf	(_dhcpData+35)& (0+255),b
 22385                           
 22386                           ; BSR set to: 2
 22387                           ;dhcp_client.c: 122: dhcpData.xidValue <<= 8;
 22388  01605A  C2AF  F2B0         	movff	_dhcpData+34,_dhcpData+35
 22389  01605E  C2AE  F2AF         	movff	_dhcpData+33,_dhcpData+34
 22390  016062  C2AD  F2AE         	movff	_dhcpData+32,_dhcpData+33
 22391  016066  6BAD               	clrf	(_dhcpData+32)& (0+255),b
 22392                           
 22393                           ; BSR set to: 2
 22394                           ;dhcp_client.c: 123: dhcpData.xidValue |= lfsr();
 22395  016068  ECA4  F0B6         	call	_lfsr	;wreg free
 22396  01606C  0100               	movlb	0	; () banked
 22397  01606E  6FB0               	movwf	??_sendDHCPDISCOVER& (0+255),b
 22398  016070  51B0               	movf	??_sendDHCPDISCOVER& (0+255),w,b
 22399  016072  0102               	movlb	2	; () banked
 22400  016074  13AD               	iorwf	(_dhcpData+32)& (0+255),f,b
 22401                           
 22402                           ;dhcp_client.c: 124: dhcpData.xidValue <<= 8;
 22403  016076  C2AF  F2B0         	movff	_dhcpData+34,_dhcpData+35
 22404  01607A  C2AE  F2AF         	movff	_dhcpData+33,_dhcpData+34
 22405  01607E  C2AD  F2AE         	movff	_dhcpData+32,_dhcpData+33
 22406  016082  6BAD               	clrf	(_dhcpData+32)& (0+255),b
 22407                           
 22408                           ; BSR set to: 2
 22409                           ;dhcp_client.c: 125: dhcpData.xidValue |= lfsr();
 22410  016084  ECA4  F0B6         	call	_lfsr	;wreg free
 22411  016088  0100               	movlb	0	; () banked
 22412  01608A  6FB0               	movwf	??_sendDHCPDISCOVER& (0+255),b
 22413  01608C  51B0               	movf	??_sendDHCPDISCOVER& (0+255),w,b
 22414  01608E  0102               	movlb	2	; () banked
 22415  016090  13AD               	iorwf	(_dhcpData+32)& (0+255),f,b
 22416                           
 22417                           ; BSR set to: 2
 22418                           ;dhcp_client.c: 126: dhcpData.xidValue <<= 8;
 22419  016092  C2AF  F2B0         	movff	_dhcpData+34,_dhcpData+35
 22420  016096  C2AE  F2AF         	movff	_dhcpData+33,_dhcpData+34
 22421  01609A  C2AD  F2AE         	movff	_dhcpData+32,_dhcpData+33
 22422  01609E  6BAD               	clrf	(_dhcpData+32)& (0+255),b
 22423                           
 22424                           ;dhcp_client.c: 127: dhcpData.xidValue |= lfsr();
 22425  0160A0  ECA4  F0B6         	call	_lfsr	;wreg free
 22426  0160A4  0100               	movlb	0	; () banked
 22427  0160A6  6FB0               	movwf	??_sendDHCPDISCOVER& (0+255),b
 22428  0160A8  51B0               	movf	??_sendDHCPDISCOVER& (0+255),w,b
 22429  0160AA  0102               	movlb	2	; () banked
 22430  0160AC  13AD               	iorwf	(_dhcpData+32)& (0+255),f,b
 22431                           
 22432                           ; BSR set to: 2
 22433                           ;dhcp_client.c: 128: return sendRequest(DHCP_DISCOVER);
 22434  0160AE  0E01               	movlw	1
 22435  0160B0  ECE0  F0A1         	call	_sendRequest
 22436  0160B4  0012               	return	
 22437  0160B6                     __end_of_sendDHCPDISCOVER:
 22438                           	opt stack 0
 22439                           tosu	equ	0xFFF
 22440                           tosh	equ	0xFFE
 22441                           tosl	equ	0xFFD
 22442                           pclath	equ	0xFFA
 22443                           tblptru	equ	0xFF8
 22444                           tblptrh	equ	0xFF7
 22445                           tblptrl	equ	0xFF6
 22446                           tablat	equ	0xFF5
 22447                           prodh	equ	0xFF4
 22448                           prodl	equ	0xFF3
 22449                           intcon	equ	0xFF2
 22450                           indf0	equ	0xFEF
 22451                           postinc0	equ	0xFEE
 22452                           fsr0h	equ	0xFEA
 22453                           fsr0l	equ	0xFE9
 22454                           wreg	equ	0xFE8
 22455                           indf1	equ	0xFE7
 22456                           postinc1	equ	0xFE6
 22457                           postdec1	equ	0xFE5
 22458                           plusw1	equ	0xFE3
 22459                           fsr1h	equ	0xFE2
 22460                           fsr1l	equ	0xFE1
 22461                           indf2	equ	0xFDF
 22462                           postinc2	equ	0xFDE
 22463                           postdec2	equ	0xFDD
 22464                           plusw2	equ	0xFDB
 22465                           fsr2h	equ	0xFDA
 22466                           fsr2l	equ	0xFD9
 22467                           status	equ	0xFD8
 22468                           
 22469 ;; *************** function _sendRequest *****************
 22470 ;; Defined at:
 22471 ;;		line 141 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 22472 ;; Parameters:    Size  Location     Type
 22473 ;;  type            1    wreg     enum E769
 22474 ;; Auto vars:     Size  Location     Type
 22475 ;;  type            1   57[COMRAM] enum E769
 22476 ;;  started         1   56[COMRAM] enum E507
 22477 ;; Return value:  Size  Location     Type
 22478 ;;                  1    wreg      unsigned char 
 22479 ;; Registers used:
 22480 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22481 ;; Tracked objects:
 22482 ;;		On entry : 0/0
 22483 ;;		On exit  : 0/0
 22484 ;;		Unchanged: 0/0
 22485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22490 ;;Total ram usage:        2 bytes
 22491 ;; Hardware stack levels used:    1
 22492 ;; Hardware stack levels required when called:   10
 22493 ;; This function calls:
 22494 ;;		_DHCP_WriteZeros
 22495 ;;		_ETH_Write16
 22496 ;;		_ETH_Write32
 22497 ;;		_ETH_Write8
 22498 ;;		_ETH_WriteBlock
 22499 ;;		_ETH_WriteString
 22500 ;;		_UDP_Send
 22501 ;;		_UDP_Start
 22502 ;;		_strlen
 22503 ;; This function is called by:
 22504 ;;		_sendDHCPDISCOVER
 22505 ;;		_sendDHCPREQUEST
 22506 ;;		_sendDHCPDECLINE
 22507 ;; This function uses a non-reentrant model
 22508 ;;
 22509                           
 22510                           	psect	text87
 22511  0143C0                     __ptext87:
 22512                           	opt stack 0
 22513  0143C0                     _sendRequest:
 22514                           	opt stack 14
 22515                           
 22516                           ;incstack = 0
 22517                           ;sendRequest@type stored from wreg
 22518  0143C0  6E3A               	movwf	sendRequest@type,c
 22519                           
 22520                           ;dhcp_client.c: 144: error_msg started;
 22521                           ;dhcp_client.c: 147: started = UDP_Start(0xFFFFFFFF,68,67);
 22522  0143C2  0EFF               	movlw	255
 22523  0143C4  0100               	movlb	0	; () banked
 22524  0143C6  6FA8               	movwf	UDP_Start@destIP& (0+255),b
 22525  0143C8  0EFF               	movlw	255
 22526  0143CA  6FA9               	movwf	(UDP_Start@destIP+1)& (0+255),b
 22527  0143CC  0EFF               	movlw	255
 22528  0143CE  6FAA               	movwf	(UDP_Start@destIP+2)& (0+255),b
 22529  0143D0  0EFF               	movlw	255
 22530  0143D2  6FAB               	movwf	(UDP_Start@destIP+3)& (0+255),b
 22531  0143D4  0E00               	movlw	0
 22532  0143D6  6FAD               	movwf	(UDP_Start@srcPort+1)& (0+255),b
 22533  0143D8  0E44               	movlw	68
 22534  0143DA  6FAC               	movwf	UDP_Start@srcPort& (0+255),b
 22535  0143DC  0E00               	movlw	0
 22536  0143DE  6FAF               	movwf	(UDP_Start@dstPort+1)& (0+255),b
 22537  0143E0  0E43               	movlw	67
 22538  0143E2  6FAE               	movwf	UDP_Start@dstPort& (0+255),b
 22539  0143E4  EC16  F0B2         	call	_UDP_Start	;wreg free
 22540  0143E8  6E39               	movwf	sendRequest@started,c
 22541                           
 22542                           ;dhcp_client.c: 148: if(started==SUCCESS)
 22543  0143EA  0439               	decf	sendRequest@started,w,c
 22544  0143EC  A4D8               	btfss	status,2,c
 22545  0143EE  D0F6               	goto	l1315
 22546                           
 22547                           ;dhcp_client.c: 149: {
 22548                           ;dhcp_client.c: 150: ETH_Write32(0x01010600);
 22549  0143F0  0E00               	movlw	0
 22550  0143F2  6E13               	movwf	ETH_Write32@data,c
 22551  0143F4  0E06               	movlw	6
 22552  0143F6  6E14               	movwf	ETH_Write32@data+1,c
 22553  0143F8  0E01               	movlw	1
 22554  0143FA  6E15               	movwf	ETH_Write32@data+2,c
 22555  0143FC  0E01               	movlw	1
 22556  0143FE  6E16               	movwf	ETH_Write32@data+3,c
 22557  014400  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22558                           
 22559                           ;dhcp_client.c: 151: ETH_Write32(dhcpData.xidValue);
 22560  014404  C2AD  F013         	movff	_dhcpData+32,ETH_Write32@data
 22561  014408  C2AE  F014         	movff	_dhcpData+33,ETH_Write32@data+1
 22562  01440C  C2AF  F015         	movff	_dhcpData+34,ETH_Write32@data+2
 22563  014410  C2B0  F016         	movff	_dhcpData+35,ETH_Write32@data+3
 22564  014414  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22565                           
 22566                           ;dhcp_client.c: 152: ETH_Write32(0x00008000);
 22567  014418  0E00               	movlw	0
 22568  01441A  6E13               	movwf	ETH_Write32@data,c
 22569  01441C  0E80               	movlw	128
 22570  01441E  6E14               	movwf	ETH_Write32@data+1,c
 22571  014420  0E00               	movlw	0
 22572  014422  6E15               	movwf	ETH_Write32@data+2,c
 22573  014424  0E00               	movlw	0
 22574  014426  6E16               	movwf	ETH_Write32@data+3,c
 22575  014428  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22576                           
 22577                           ;dhcp_client.c: 153: if(type == DHCP_REQUEST)
 22578  01442C  0E03               	movlw	3
 22579  01442E  183A               	xorwf	sendRequest@type,w,c
 22580  014430  A4D8               	btfss	status,2,c
 22581  014432  D00B               	goto	l1316
 22582                           
 22583                           ;dhcp_client.c: 154: {
 22584                           ;dhcp_client.c: 155: ETH_Write32(0);
 22585  014434  0E00               	movlw	0
 22586  014436  6E13               	movwf	ETH_Write32@data,c
 22587  014438  0E00               	movlw	0
 22588  01443A  6E14               	movwf	ETH_Write32@data+1,c
 22589  01443C  0E00               	movlw	0
 22590  01443E  6E15               	movwf	ETH_Write32@data+2,c
 22591  014440  0E00               	movlw	0
 22592  014442  6E16               	movwf	ETH_Write32@data+3,c
 22593  014444  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22594                           
 22595                           ;dhcp_client.c: 156: }
 22596  014448  D00A               	goto	l1317
 22597  01444A                     l1316:
 22598                           
 22599                           ;dhcp_client.c: 157: else
 22600                           ;dhcp_client.c: 158: {
 22601                           ;dhcp_client.c: 159: ETH_Write32(dhcpData.dhcpIPAddress);
 22602  01444A  C28D  F013         	movff	_dhcpData,ETH_Write32@data
 22603  01444E  C28E  F014         	movff	_dhcpData+1,ETH_Write32@data+1
 22604  014452  C28F  F015         	movff	_dhcpData+2,ETH_Write32@data+2
 22605  014456  C290  F016         	movff	_dhcpData+3,ETH_Write32@data+3
 22606  01445A  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22607  01445E                     l1317:
 22608                           
 22609                           ;dhcp_client.c: 160: }
 22610                           ;dhcp_client.c: 161: ETH_Write32(0);
 22611  01445E  0E00               	movlw	0
 22612  014460  6E13               	movwf	ETH_Write32@data,c
 22613  014462  0E00               	movlw	0
 22614  014464  6E14               	movwf	ETH_Write32@data+1,c
 22615  014466  0E00               	movlw	0
 22616  014468  6E15               	movwf	ETH_Write32@data+2,c
 22617  01446A  0E00               	movlw	0
 22618  01446C  6E16               	movwf	ETH_Write32@data+3,c
 22619  01446E  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22620                           
 22621                           ;dhcp_client.c: 162: ETH_Write32(0);
 22622  014472  0E00               	movlw	0
 22623  014474  6E13               	movwf	ETH_Write32@data,c
 22624  014476  0E00               	movlw	0
 22625  014478  6E14               	movwf	ETH_Write32@data+1,c
 22626  01447A  0E00               	movlw	0
 22627  01447C  6E15               	movwf	ETH_Write32@data+2,c
 22628  01447E  0E00               	movlw	0
 22629  014480  6E16               	movwf	ETH_Write32@data+3,c
 22630  014482  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22631                           
 22632                           ;dhcp_client.c: 163: ETH_Write32(0);
 22633  014486  0E00               	movlw	0
 22634  014488  6E13               	movwf	ETH_Write32@data,c
 22635  01448A  0E00               	movlw	0
 22636  01448C  6E14               	movwf	ETH_Write32@data+1,c
 22637  01448E  0E00               	movlw	0
 22638  014490  6E15               	movwf	ETH_Write32@data+2,c
 22639  014492  0E00               	movlw	0
 22640  014494  6E16               	movwf	ETH_Write32@data+3,c
 22641  014496  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22642                           
 22643                           ;dhcp_client.c: 164: ETH_WriteBlock((char *)&hostMacAddress,6);
 22644  01449A  0EB0               	movlw	low _hostMacAddress
 22645  01449C  6E13               	movwf	ETH_WriteBlock@buffer,c
 22646  01449E  0E03               	movlw	high _hostMacAddress
 22647  0144A0  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 22648  0144A2  0E00               	movlw	0
 22649  0144A4  6E16               	movwf	ETH_WriteBlock@length+1,c
 22650  0144A6  0E06               	movlw	6
 22651  0144A8  6E15               	movwf	ETH_WriteBlock@length,c
 22652  0144AA  EC49  F0B3         	call	_ETH_WriteBlock	;wreg free
 22653                           
 22654                           ;dhcp_client.c: 165: DHCP_WriteZeros(202);
 22655  0144AE  0E00               	movlw	0
 22656  0144B0  6E15               	movwf	DHCP_WriteZeros@length+1,c
 22657  0144B2  0ECA               	movlw	202
 22658  0144B4  6E14               	movwf	DHCP_WriteZeros@length,c
 22659  0144B6  ECDE  F0B6         	call	_DHCP_WriteZeros	;wreg free
 22660                           
 22661                           ;dhcp_client.c: 166: ETH_Write32(0x63825363);
 22662  0144BA  0E63               	movlw	99
 22663  0144BC  6E13               	movwf	ETH_Write32@data,c
 22664  0144BE  0E53               	movlw	83
 22665  0144C0  6E14               	movwf	ETH_Write32@data+1,c
 22666  0144C2  0E82               	movlw	130
 22667  0144C4  6E15               	movwf	ETH_Write32@data+2,c
 22668  0144C6  0E63               	movlw	99
 22669  0144C8  6E16               	movwf	ETH_Write32@data+3,c
 22670  0144CA  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22671                           
 22672                           ;dhcp_client.c: 169: ETH_Write8(12); ETH_Write8(strlen(dhcpName)); ETH_WriteString(dhcpN
      +                          ame);
 22673  0144CE  0E0C               	movlw	12
 22674  0144D0  EC8A  F0B7         	call	_ETH_Write8
 22675  0144D4  0EED               	movlw	low _dhcpName
 22676  0144D6  6E13               	movwf	strlen@s,c
 22677  0144D8  0EFE               	movlw	high _dhcpName
 22678  0144DA  6E14               	movwf	strlen@s+1,c
 22679  0144DC  EC1F  F0B3         	call	_strlen	;wreg free
 22680  0144E0  5013               	movf	?_strlen,w,c
 22681  0144E2  EC8A  F0B7         	call	_ETH_Write8
 22682  0144E6  0EED               	movlw	low _dhcpName
 22683  0144E8  6E13               	movwf	ETH_WriteString@string,c
 22684  0144EA  0EFE               	movlw	high _dhcpName
 22685  0144EC  6E14               	movwf	ETH_WriteString@string+1,c
 22686  0144EE  ECBF  F0B3         	call	_ETH_WriteString	;wreg free
 22687                           
 22688                           ;dhcp_client.c: 171: ETH_Write8(42); ETH_Write8(4); ETH_Write32(0);
 22689  0144F2  0E2A               	movlw	42
 22690  0144F4  EC8A  F0B7         	call	_ETH_Write8
 22691  0144F8  0E04               	movlw	4
 22692  0144FA  EC8A  F0B7         	call	_ETH_Write8
 22693  0144FE  0E00               	movlw	0
 22694  014500  6E13               	movwf	ETH_Write32@data,c
 22695  014502  0E00               	movlw	0
 22696  014504  6E14               	movwf	ETH_Write32@data+1,c
 22697  014506  0E00               	movlw	0
 22698  014508  6E15               	movwf	ETH_Write32@data+2,c
 22699  01450A  0E00               	movlw	0
 22700  01450C  6E16               	movwf	ETH_Write32@data+3,c
 22701  01450E  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22702                           
 22703                           ;dhcp_client.c: 173: ETH_Write8(53); ETH_Write8(1); ETH_Write8(type);
 22704  014512  0E35               	movlw	53
 22705  014514  EC8A  F0B7         	call	_ETH_Write8
 22706  014518  0E01               	movlw	1
 22707  01451A  EC8A  F0B7         	call	_ETH_Write8
 22708  01451E  503A               	movf	sendRequest@type,w,c
 22709  014520  EC8A  F0B7         	call	_ETH_Write8
 22710                           
 22711                           ;dhcp_client.c: 174: if(type == DHCP_REQUEST)
 22712  014524  0E03               	movlw	3
 22713  014526  183A               	xorwf	sendRequest@type,w,c
 22714  014528  A4D8               	btfss	status,2,c
 22715  01452A  D020               	goto	l1318
 22716                           
 22717                           ;dhcp_client.c: 175: {
 22718                           ;dhcp_client.c: 177: ETH_Write8(50);ETH_Write8(4);ETH_Write32(dhcpData.dhcpIPAddress);
 22719  01452C  0E32               	movlw	50
 22720  01452E  EC8A  F0B7         	call	_ETH_Write8
 22721  014532  0E04               	movlw	4
 22722  014534  EC8A  F0B7         	call	_ETH_Write8
 22723  014538  C28D  F013         	movff	_dhcpData,ETH_Write32@data
 22724  01453C  C28E  F014         	movff	_dhcpData+1,ETH_Write32@data+1
 22725  014540  C28F  F015         	movff	_dhcpData+2,ETH_Write32@data+2
 22726  014544  C290  F016         	movff	_dhcpData+3,ETH_Write32@data+3
 22727  014548  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22728                           
 22729                           ;dhcp_client.c: 179: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpData.leasee_ip);
 22730  01454C  0E36               	movlw	54
 22731  01454E  EC8A  F0B7         	call	_ETH_Write8
 22732  014552  0E04               	movlw	4
 22733  014554  EC8A  F0B7         	call	_ETH_Write8
 22734  014558  C2B9  F013         	movff	_dhcpData+44,ETH_Write32@data
 22735  01455C  C2BA  F014         	movff	_dhcpData+45,ETH_Write32@data+1
 22736  014560  C2BB  F015         	movff	_dhcpData+46,ETH_Write32@data+2
 22737  014564  C2BC  F016         	movff	_dhcpData+47,ETH_Write32@data+3
 22738  014568  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 22739  01456C                     l1318:
 22740                           
 22741                           ;dhcp_client.c: 180: }
 22742                           ;dhcp_client.c: 182: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 22743  01456C  0E37               	movlw	55
 22744  01456E  EC8A  F0B7         	call	_ETH_Write8
 22745  014572  0E04               	movlw	4
 22746  014574  EC8A  F0B7         	call	_ETH_Write8
 22747  014578  0E01               	movlw	1
 22748  01457A  EC8A  F0B7         	call	_ETH_Write8
 22749  01457E  0E03               	movlw	3
 22750  014580  EC8A  F0B7         	call	_ETH_Write8
 22751  014584  0E06               	movlw	6
 22752  014586  EC8A  F0B7         	call	_ETH_Write8
 22753  01458A  0E0F               	movlw	15
 22754  01458C  EC8A  F0B7         	call	_ETH_Write8
 22755                           
 22756                           ;dhcp_client.c: 184: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 22757  014590  0E39               	movlw	57
 22758  014592  EC8A  F0B7         	call	_ETH_Write8
 22759  014596  0E02               	movlw	2
 22760  014598  EC8A  F0B7         	call	_ETH_Write8
 22761  01459C  0E02               	movlw	2
 22762  01459E  6E14               	movwf	ETH_Write16@data+1,c
 22763  0145A0  0E00               	movlw	0
 22764  0145A2  6E13               	movwf	ETH_Write16@data,c
 22765  0145A4  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 22766                           
 22767                           ;dhcp_client.c: 186: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock(&hostM
      +                          acAddress,6);
 22768  0145A8  0E3D               	movlw	61
 22769  0145AA  EC8A  F0B7         	call	_ETH_Write8
 22770  0145AE  0E07               	movlw	7
 22771  0145B0  EC8A  F0B7         	call	_ETH_Write8
 22772  0145B4  0E01               	movlw	1
 22773  0145B6  EC8A  F0B7         	call	_ETH_Write8
 22774  0145BA  0EB0               	movlw	low _hostMacAddress
 22775  0145BC  6E13               	movwf	ETH_WriteBlock@buffer,c
 22776  0145BE  0E03               	movlw	high _hostMacAddress
 22777  0145C0  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 22778  0145C2  0E00               	movlw	0
 22779  0145C4  6E16               	movwf	ETH_WriteBlock@length+1,c
 22780  0145C6  0E06               	movlw	6
 22781  0145C8  6E15               	movwf	ETH_WriteBlock@length,c
 22782  0145CA  EC49  F0B3         	call	_ETH_WriteBlock	;wreg free
 22783                           
 22784                           ;dhcp_client.c: 187: ETH_Write8(255);
 22785  0145CE  0EFF               	movlw	255
 22786  0145D0  EC8A  F0B7         	call	_ETH_Write8
 22787                           
 22788                           ;dhcp_client.c: 192: UDP_Send();
 22789  0145D4  ECC4  F0AA         	call	_UDP_Send	;wreg free
 22790                           
 22791                           ;dhcp_client.c: 193: return 1;
 22792  0145D8  0E01               	movlw	1
 22793  0145DA  0012               	return	
 22794  0145DC                     l1315:
 22795                           
 22796                           ;dhcp_client.c: 194: }
 22797                           ;dhcp_client.c: 195: return 0;
 22798  0145DC  0E00               	movlw	0
 22799  0145DE  0012               	return	
 22800  0145E0                     __end_of_sendRequest:
 22801                           	opt stack 0
 22802                           tosu	equ	0xFFF
 22803                           tosh	equ	0xFFE
 22804                           tosl	equ	0xFFD
 22805                           pclath	equ	0xFFA
 22806                           tblptru	equ	0xFF8
 22807                           tblptrh	equ	0xFF7
 22808                           tblptrl	equ	0xFF6
 22809                           tablat	equ	0xFF5
 22810                           prodh	equ	0xFF4
 22811                           prodl	equ	0xFF3
 22812                           intcon	equ	0xFF2
 22813                           indf0	equ	0xFEF
 22814                           postinc0	equ	0xFEE
 22815                           fsr0h	equ	0xFEA
 22816                           fsr0l	equ	0xFE9
 22817                           wreg	equ	0xFE8
 22818                           indf1	equ	0xFE7
 22819                           postinc1	equ	0xFE6
 22820                           postdec1	equ	0xFE5
 22821                           plusw1	equ	0xFE3
 22822                           fsr1h	equ	0xFE2
 22823                           fsr1l	equ	0xFE1
 22824                           indf2	equ	0xFDF
 22825                           postinc2	equ	0xFDE
 22826                           postdec2	equ	0xFDD
 22827                           plusw2	equ	0xFDB
 22828                           fsr2h	equ	0xFDA
 22829                           fsr2l	equ	0xFD9
 22830                           status	equ	0xFD8
 22831                           
 22832 ;; *************** function _strlen *****************
 22833 ;; Defined at:
 22834 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\strlen.c"
 22835 ;; Parameters:    Size  Location     Type
 22836 ;;  s               2   18[COMRAM] PTR const unsigned char 
 22837 ;;		 -> tftp_option(8), tftp_msg.tftp_block_size(5), tftp_msg.tftp_filename(32), tftp_msg(41), 
 22838 ;;		 -> STR_11(5), STR_10(6), STR_9(9), DHCP_Handler@chaddr(16), 
 22839 ;;		 -> dhcpName(13), 
 22840 ;; Auto vars:     Size  Location     Type
 22841 ;;  cp              2   22[COMRAM] PTR const unsigned char 
 22842 ;;		 -> tftp_option(8), tftp_msg.tftp_block_size(5), tftp_msg.tftp_filename(32), tftp_msg(41), 
 22843 ;;		 -> STR_11(5), STR_10(6), STR_9(9), DHCP_Handler@chaddr(16), 
 22844 ;;		 -> dhcpName(13), 
 22845 ;; Return value:  Size  Location     Type
 22846 ;;                  2   18[COMRAM] unsigned int 
 22847 ;; Registers used:
 22848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22849 ;; Tracked objects:
 22850 ;;		On entry : 0/0
 22851 ;;		On exit  : 0/0
 22852 ;;		Unchanged: 0/0
 22853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22855 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22856 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22857 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22858 ;;Total ram usage:        6 bytes
 22859 ;; Hardware stack levels used:    1
 22860 ;; Hardware stack levels required when called:    4
 22861 ;; This function calls:
 22862 ;;		Nothing
 22863 ;; This function is called by:
 22864 ;;		_sendRequest
 22865 ;;		_DHCP_Handler
 22866 ;;		_DNS_Query
 22867 ;;		_TFTP_Configure
 22868 ;;		_TFTP_Read_Write_Request
 22869 ;; This function uses a non-reentrant model
 22870 ;;
 22871                           
 22872                           	psect	text88
 22873  01663E                     __ptext88:
 22874                           	opt stack 0
 22875  01663E                     _strlen:
 22876                           	opt stack 21
 22877                           
 22878                           ;incstack = 0
 22879  01663E  C013  F017         	movff	strlen@s,strlen@cp
 22880  016642  C014  F018         	movff	strlen@s+1,strlen@cp+1
 22881  016646  D002               	goto	l2730
 22882  016648  4A17               	infsnz	strlen@cp,f,c
 22883  01664A  2A18               	incf	strlen@cp+1,f,c
 22884  01664C                     l2730:
 22885  01664C  C017  FFF6         	movff	strlen@cp,tblptrl
 22886  016650  C018  FFF7         	movff	strlen@cp+1,tblptrh
 22887  016654  0E00               	movlw	low (__mediumconst shr (0+16))
 22888  016656  6EF8               	movwf	tblptru,c
 22889  016658  0E0F               	movlw	(high __ramtop+-1)
 22890  01665A  64F7               	cpfsgt	tblptrh,c
 22891  01665C  D003               	bra	u9937
 22892  01665E  0008               	tblrd		*
 22893  016660  50F5               	movf	tablat,w,c
 22894  016662  D005               	bra	u9930
 22895  016664                     u9937:
 22896  016664  CFF6 FFE9          	movff	tblptrl,fsr0l
 22897  016668  CFF7 FFEA          	movff	tblptrh,fsr0h
 22898  01666C  50EF               	movf	indf0,w,c
 22899  01666E                     u9930:
 22900  01666E  0900               	iorlw	0
 22901  016670  A4D8               	btfss	status,2,c
 22902  016672  D7EA               	goto	l2731
 22903  016674  C013  F015         	movff	strlen@s,??_strlen
 22904  016678  C014  F016         	movff	strlen@s+1,??_strlen+1
 22905  01667C  1E15               	comf	??_strlen,f,c
 22906  01667E  1E16               	comf	??_strlen+1,f,c
 22907  016680  4A15               	infsnz	??_strlen,f,c
 22908  016682  2A16               	incf	??_strlen+1,f,c
 22909  016684  5017               	movf	strlen@cp,w,c
 22910  016686  2415               	addwf	??_strlen,w,c
 22911  016688  6E13               	movwf	?_strlen,c
 22912  01668A  5018               	movf	strlen@cp+1,w,c
 22913  01668C  2016               	addwfc	??_strlen+1,w,c
 22914  01668E  6E14               	movwf	?_strlen+1,c
 22915  016690  0012               	return	
 22916  016692                     __end_of_strlen:
 22917                           	opt stack 0
 22918                           tosu	equ	0xFFF
 22919                           tosh	equ	0xFFE
 22920                           tosl	equ	0xFFD
 22921                           pclath	equ	0xFFA
 22922                           tblptru	equ	0xFF8
 22923                           tblptrh	equ	0xFF7
 22924                           tblptrl	equ	0xFF6
 22925                           tablat	equ	0xFF5
 22926                           prodh	equ	0xFF4
 22927                           prodl	equ	0xFF3
 22928                           intcon	equ	0xFF2
 22929                           indf0	equ	0xFEF
 22930                           postinc0	equ	0xFEE
 22931                           fsr0h	equ	0xFEA
 22932                           fsr0l	equ	0xFE9
 22933                           wreg	equ	0xFE8
 22934                           indf1	equ	0xFE7
 22935                           postinc1	equ	0xFE6
 22936                           postdec1	equ	0xFE5
 22937                           plusw1	equ	0xFE3
 22938                           fsr1h	equ	0xFE2
 22939                           fsr1l	equ	0xFE1
 22940                           indf2	equ	0xFDF
 22941                           postinc2	equ	0xFDE
 22942                           postdec2	equ	0xFDD
 22943                           plusw2	equ	0xFDB
 22944                           fsr2h	equ	0xFDA
 22945                           fsr2l	equ	0xFD9
 22946                           status	equ	0xFD8
 22947                           
 22948 ;; *************** function _UDP_Start *****************
 22949 ;; Defined at:
 22950 ;;		line 66 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 22951 ;; Parameters:    Size  Location     Type
 22952 ;;  destIP          4   72[BANK0 ] unsigned long 
 22953 ;;  srcPort         2   76[BANK0 ] unsigned int 
 22954 ;;  dstPort         2   78[BANK0 ] unsigned int 
 22955 ;; Auto vars:     Size  Location     Type
 22956 ;;  ret             1   53[COMRAM] enum E393
 22957 ;; Return value:  Size  Location     Type
 22958 ;;                  1    wreg      enum E393
 22959 ;; Registers used:
 22960 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22961 ;; Tracked objects:
 22962 ;;		On entry : 0/0
 22963 ;;		On exit  : 0/0
 22964 ;;		Unchanged: 0/0
 22965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22966 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22969 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22970 ;;Total ram usage:        9 bytes
 22971 ;; Hardware stack levels used:    1
 22972 ;; Hardware stack levels required when called:    9
 22973 ;; This function calls:
 22974 ;;		_ETH_ResetByteCount
 22975 ;;		_ETH_Write16
 22976 ;;		_IPv4_Start
 22977 ;; This function is called by:
 22978 ;;		_sendRequest
 22979 ;;		_TFTP_Ack
 22980 ;;		_DNS_Query
 22981 ;;		_NTP_Request
 22982 ;;		_TFTP_Read_Write_Request
 22983 ;; This function uses a non-reentrant model
 22984 ;;
 22985                           
 22986                           	psect	text89
 22987  01642C                     __ptext89:
 22988                           	opt stack 0
 22989  01642C                     _UDP_Start:
 22990                           	opt stack 15
 22991                           
 22992                           ;udpv4.c: 69: error_msg ret = ERROR;
 22993                           
 22994                           ;incstack = 0
 22995  01642C  0E00               	movlw	0
 22996  01642E  6E36               	movwf	UDP_Start@ret,c
 22997                           
 22998                           ;udpv4.c: 72: ret = IPv4_Start(destIP,UDP_TCPIP);
 22999  016430  C0A8  F031         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 23000  016434  C0A9  F032         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 23001  016438  C0AA  F033         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 23002  01643C  C0AB  F034         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 23003  016440  0E11               	movlw	17
 23004  016442  6E35               	movwf	IPv4_Start@protocol,c
 23005  016444  ECB1  F09F         	call	_IPv4_Start	;wreg free
 23006  016448  6E36               	movwf	UDP_Start@ret,c
 23007                           
 23008                           ;udpv4.c: 73: if(ret == SUCCESS)
 23009  01644A  0436               	decf	UDP_Start@ret,w,c
 23010  01644C  A4D8               	btfss	status,2,c
 23011  01644E  D01A               	goto	l1229
 23012                           
 23013                           ;udpv4.c: 74: {
 23014                           ;udpv4.c: 76: ETH_ResetByteCount();
 23015  016450  EC80  F0B7         	call	_ETH_ResetByteCount	;wreg free
 23016                           
 23017                           ;udpv4.c: 79: ETH_Write16(srcPort);
 23018  016454  C0AC  F013         	movff	UDP_Start@srcPort,ETH_Write16@data
 23019  016458  C0AD  F014         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 23020  01645C  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 23021                           
 23022                           ;udpv4.c: 82: ETH_Write16(dstPort);
 23023  016460  C0AE  F013         	movff	UDP_Start@dstPort,ETH_Write16@data
 23024  016464  C0AF  F014         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 23025  016468  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 23026                           
 23027                           ;udpv4.c: 85: ETH_Write16(0);
 23028  01646C  0E00               	movlw	0
 23029  01646E  6E14               	movwf	ETH_Write16@data+1,c
 23030  016470  0E00               	movlw	0
 23031  016472  6E13               	movwf	ETH_Write16@data,c
 23032  016474  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 23033                           
 23034                           ;udpv4.c: 88: ETH_Write16(0);
 23035  016478  0E00               	movlw	0
 23036  01647A  6E14               	movwf	ETH_Write16@data+1,c
 23037  01647C  0E00               	movlw	0
 23038  01647E  6E13               	movwf	ETH_Write16@data,c
 23039  016480  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 23040  016484                     l1229:
 23041                           
 23042                           ;udpv4.c: 90: }
 23043                           ;udpv4.c: 91: return ret;
 23044  016484  5036               	movf	UDP_Start@ret,w,c
 23045  016486  0012               	return	
 23046  016488                     __end_of_UDP_Start:
 23047                           	opt stack 0
 23048                           tosu	equ	0xFFF
 23049                           tosh	equ	0xFFE
 23050                           tosl	equ	0xFFD
 23051                           pclath	equ	0xFFA
 23052                           tblptru	equ	0xFF8
 23053                           tblptrh	equ	0xFF7
 23054                           tblptrl	equ	0xFF6
 23055                           tablat	equ	0xFF5
 23056                           prodh	equ	0xFF4
 23057                           prodl	equ	0xFF3
 23058                           intcon	equ	0xFF2
 23059                           indf0	equ	0xFEF
 23060                           postinc0	equ	0xFEE
 23061                           fsr0h	equ	0xFEA
 23062                           fsr0l	equ	0xFE9
 23063                           wreg	equ	0xFE8
 23064                           indf1	equ	0xFE7
 23065                           postinc1	equ	0xFE6
 23066                           postdec1	equ	0xFE5
 23067                           plusw1	equ	0xFE3
 23068                           fsr1h	equ	0xFE2
 23069                           fsr1l	equ	0xFE1
 23070                           indf2	equ	0xFDF
 23071                           postinc2	equ	0xFDE
 23072                           postdec2	equ	0xFDD
 23073                           plusw2	equ	0xFDB
 23074                           fsr2h	equ	0xFDA
 23075                           fsr2l	equ	0xFD9
 23076                           status	equ	0xFD8
 23077                           
 23078 ;; *************** function _IPv4_Start *****************
 23079 ;; Defined at:
 23080 ;;		line 206 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 23081 ;; Parameters:    Size  Location     Type
 23082 ;;  destAddress     4   48[COMRAM] unsigned long 
 23083 ;;  protocol        1   52[COMRAM] enum E236
 23084 ;; Auto vars:     Size  Location     Type
 23085 ;;  targetAddres    4   65[BANK0 ] unsigned long 
 23086 ;;  macAddress      2   69[BANK0 ] PTR const struct .
 23087 ;;		 -> arpMap.macAddress(6), NULL(0), broadcastMAC(6), arpMap(104), 
 23088 ;;  ret             1   71[BANK0 ] enum E392
 23089 ;; Return value:  Size  Location     Type
 23090 ;;                  1    wreg      enum E392
 23091 ;; Registers used:
 23092 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23093 ;; Tracked objects:
 23094 ;;		On entry : 0/0
 23095 ;;		On exit  : 0/0
 23096 ;;		Unchanged: 0/0
 23097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23098 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23099 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23100 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23101 ;;      Totals:         5      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23102 ;;Total ram usage:       20 bytes
 23103 ;; Hardware stack levels used:    1
 23104 ;; Hardware stack levels required when called:    8
 23105 ;; This function calls:
 23106 ;;		_ARPV4_Lookup
 23107 ;;		_ARPV4_Request
 23108 ;;		_ETH_Write16
 23109 ;;		_ETH_Write32
 23110 ;;		_ETH_Write8
 23111 ;;		_ETH_WriteStart
 23112 ;; This function is called by:
 23113 ;;		_ICMP_EchoReply
 23114 ;;		_ICMP_PortUnreachable
 23115 ;;		_UDP_Start
 23116 ;;		_TCP_Snd
 23117 ;; This function uses a non-reentrant model
 23118 ;;
 23119                           
 23120                           	psect	text90
 23121  013F62                     __ptext90:
 23122                           	opt stack 0
 23123  013F62                     _IPv4_Start:
 23124                           	opt stack 18
 23125                           
 23126                           ;ipv4.c: 208: error_msg ret = ERROR;
 23127                           
 23128                           ;incstack = 0
 23129  013F62  0E00               	movlw	0
 23130  013F64  0100               	movlb	0	; () banked
 23131  013F66  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 23132                           
 23133                           ; BSR set to: 0
 23134                           ;ipv4.c: 210: const mac48Address_t *macAddress;
 23135                           ;ipv4.c: 211: uint32_t targetAddress;
 23136                           ;ipv4.c: 214: if((((ip_database_info.ipv4_myAddress) != 0) || (protocol == UDP_TCPIP))
 23137                           ;ipv4.c: 215: && ((ip_database_info.ipv4_myAddress) != 0x7F000001))
 23138  013F68  0102               	movlb	2	; () banked
 23139  013F6A  5100               	movf	_ip_database_info& (0+255),w,b
 23140  013F6C  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 23141  013F6E  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 23142  013F70  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 23143  013F72  A4D8               	btfss	status,2,c
 23144  013F74  D004               	goto	u9790
 23145                           
 23146                           ; BSR set to: 2
 23147  013F76  0E11               	movlw	17
 23148  013F78  1835               	xorwf	IPv4_Start@protocol,w,c
 23149  013F7A  A4D8               	btfss	status,2,c
 23150  013F7C  D10D               	goto	l890
 23151  013F7E                     u9790:
 23152                           
 23153                           ; BSR set to: 2
 23154                           
 23155                           ; BSR set to: 2
 23156  013F7E  0500               	decf	_ip_database_info& (0+255),w,b
 23157  013F80  E106               	bnz	u9800
 23158  013F82  0E7F               	movlw	127
 23159  013F84  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 23160  013F86  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 23161  013F88  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 23162  013F8A  B4D8               	btfsc	status,2,c
 23163  013F8C  D105               	goto	l890
 23164  013F8E                     u9800:
 23165                           
 23166                           ; BSR set to: 2
 23167                           ;ipv4.c: 216: {
 23168                           ;ipv4.c: 217: if(((destAddress == 0xFFFFFFFF)
 23169                           ;ipv4.c: 218: |((destAddress | 0XFF000000) == 0xFFFFFFFF)
 23170                           ;ipv4.c: 219: |((destAddress | 0xFFFF0000 )== 0xFFFFFFFF)
 23171                           ;ipv4.c: 220: |((destAddress | 0xFFFFFF00) == 0xFFFFFFFF))==0)
 23172  013F8E  2831               	incf	IPv4_Start@destAddress,w,c
 23173  013F90  E107               	bnz	u9810
 23174  013F92  2832               	incf	IPv4_Start@destAddress+1,w,c
 23175  013F94  E105               	bnz	u9810
 23176  013F96  2833               	incf	IPv4_Start@destAddress+2,w,c
 23177  013F98  E103               	bnz	u9810
 23178  013F9A  2834               	incf	IPv4_Start@destAddress+3,w,c
 23179  013F9C  B4D8               	btfsc	status,2,c
 23180  013F9E  D0A0               	goto	l884
 23181  013FA0                     u9810:
 23182                           
 23183                           ; BSR set to: 2
 23184  013FA0  0E00               	movlw	0
 23185  013FA2  1031               	iorwf	IPv4_Start@destAddress,w,c
 23186  013FA4  0100               	movlb	0	; () banked
 23187  013FA6  6F99               	movwf	??_IPv4_Start& (0+255),b
 23188  013FA8  0E00               	movlw	0
 23189  013FAA  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 23190  013FAC  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 23191  013FAE  0E00               	movlw	0
 23192  013FB0  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 23193  013FB2  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 23194  013FB4  0EFF               	movlw	255
 23195  013FB6  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 23196  013FB8  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 23197  013FBA  2999               	incf	??_IPv4_Start& (0+255),w,b
 23198  013FBC  E107               	bnz	u9820
 23199  013FBE  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 23200  013FC0  E105               	bnz	u9820
 23201  013FC2  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 23202  013FC4  E103               	bnz	u9820
 23203  013FC6  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 23204  013FC8  B4D8               	btfsc	status,2,c
 23205  013FCA  D08A               	goto	l884
 23206  013FCC                     u9820:
 23207                           
 23208                           ; BSR set to: 0
 23209  013FCC  0E00               	movlw	0
 23210  013FCE  1031               	iorwf	IPv4_Start@destAddress,w,c
 23211  013FD0  6F99               	movwf	??_IPv4_Start& (0+255),b
 23212  013FD2  0E00               	movlw	0
 23213  013FD4  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 23214  013FD6  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 23215  013FD8  0EFF               	movlw	255
 23216  013FDA  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 23217  013FDC  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 23218  013FDE  0EFF               	movlw	255
 23219  013FE0  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 23220  013FE2  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 23221  013FE4  2999               	incf	??_IPv4_Start& (0+255),w,b
 23222  013FE6  E107               	bnz	u9830
 23223  013FE8  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 23224  013FEA  E105               	bnz	u9830
 23225  013FEC  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 23226  013FEE  E103               	bnz	u9830
 23227  013FF0  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 23228  013FF2  B4D8               	btfsc	status,2,c
 23229  013FF4  D075               	goto	l884
 23230  013FF6                     u9830:
 23231                           
 23232                           ; BSR set to: 0
 23233  013FF6  0E00               	movlw	0
 23234  013FF8  1031               	iorwf	IPv4_Start@destAddress,w,c
 23235  013FFA  6F99               	movwf	??_IPv4_Start& (0+255),b
 23236  013FFC  0EFF               	movlw	255
 23237  013FFE  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 23238  014000  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 23239  014002  0EFF               	movlw	255
 23240  014004  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 23241  014006  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 23242  014008  0EFF               	movlw	255
 23243  01400A  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 23244  01400C  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 23245  01400E  2999               	incf	??_IPv4_Start& (0+255),w,b
 23246  014010  E107               	bnz	u9840
 23247  014012  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 23248  014014  E105               	bnz	u9840
 23249  014016  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 23250  014018  E103               	bnz	u9840
 23251  01401A  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 23252  01401C  B4D8               	btfsc	status,2,c
 23253  01401E  D060               	goto	l884
 23254  014020                     u9840:
 23255                           
 23256                           ; BSR set to: 0
 23257                           ;ipv4.c: 221: {
 23258                           ;ipv4.c: 222: if( ((destAddress ^ (ip_database_info.ipv4_myAddress)) & (ip_database_info
      +                          .ipv4_subnetMask)) == 0)
 23259  014020  5031               	movf	IPv4_Start@destAddress,w,c
 23260  014022  0102               	movlb	2	; () banked
 23261  014024  1900               	xorwf	_ip_database_info& (0+255),w,b
 23262  014026  0100               	movlb	0	; () banked
 23263  014028  6F99               	movwf	??_IPv4_Start& (0+255),b
 23264  01402A  5032               	movf	IPv4_Start@destAddress+1,w,c
 23265  01402C  0102               	movlb	2	; () banked
 23266  01402E  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
 23267  014030  0100               	movlb	0	; () banked
 23268  014032  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 23269  014034  5033               	movf	IPv4_Start@destAddress+2,w,c
 23270  014036  0102               	movlb	2	; () banked
 23271  014038  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
 23272  01403A  0100               	movlb	0	; () banked
 23273  01403C  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 23274  01403E  5034               	movf	IPv4_Start@destAddress+3,w,c
 23275  014040  0102               	movlb	2	; () banked
 23276  014042  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 23277  014044  0100               	movlb	0	; () banked
 23278  014046  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 23279  014048  0102               	movlb	2	; () banked
 23280  01404A  510C               	movf	(_ip_database_info+12)& (0+255),w,b
 23281  01404C  0100               	movlb	0	; () banked
 23282  01404E  1599               	andwf	??_IPv4_Start& (0+255),w,b
 23283  014050  6F9D               	movwf	(??_IPv4_Start+4)& (0+255),b
 23284  014052  0102               	movlb	2	; () banked
 23285  014054  510D               	movf	(_ip_database_info+13)& (0+255),w,b
 23286  014056  0100               	movlb	0	; () banked
 23287  014058  159A               	andwf	(??_IPv4_Start+1)& (0+255),w,b
 23288  01405A  6F9E               	movwf	(??_IPv4_Start+5)& (0+255),b
 23289  01405C  0102               	movlb	2	; () banked
 23290  01405E  510E               	movf	(_ip_database_info+14)& (0+255),w,b
 23291  014060  0100               	movlb	0	; () banked
 23292  014062  159B               	andwf	(??_IPv4_Start+2)& (0+255),w,b
 23293  014064  6F9F               	movwf	(??_IPv4_Start+6)& (0+255),b
 23294  014066  0102               	movlb	2	; () banked
 23295  014068  510F               	movf	(_ip_database_info+15)& (0+255),w,b
 23296  01406A  0100               	movlb	0	; () banked
 23297  01406C  159C               	andwf	(??_IPv4_Start+3)& (0+255),w,b
 23298  01406E  6FA0               	movwf	(??_IPv4_Start+7)& (0+255),b
 23299  014070  519D               	movf	(??_IPv4_Start+4)& (0+255),w,b
 23300  014072  119E               	iorwf	(??_IPv4_Start+5)& (0+255),w,b
 23301  014074  119F               	iorwf	(??_IPv4_Start+6)& (0+255),w,b
 23302  014076  11A0               	iorwf	(??_IPv4_Start+7)& (0+255),w,b
 23303  014078  A4D8               	btfss	status,2,c
 23304  01407A  D009               	goto	l885
 23305                           
 23306                           ; BSR set to: 0
 23307                           ;ipv4.c: 223: {
 23308                           ;ipv4.c: 224: targetAddress = destAddress;
 23309  01407C  C031  F0A1         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 23310  014080  C032  F0A2         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 23311  014084  C033  F0A3         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 23312  014088  C034  F0A4         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 23313                           
 23314                           ;ipv4.c: 225: }
 23315  01408C  D008               	goto	l886
 23316  01408E                     l885:
 23317                           
 23318                           ; BSR set to: 0
 23319                           ;ipv4.c: 226: else
 23320                           ;ipv4.c: 227: {
 23321                           ;ipv4.c: 228: targetAddress = (ip_database_info.ipv4_router);
 23322  01408E  C210  F0A1         	movff	_ip_database_info+16,IPv4_Start@targetAddress
 23323  014092  C211  F0A2         	movff	_ip_database_info+17,IPv4_Start@targetAddress+1
 23324  014096  C212  F0A3         	movff	_ip_database_info+18,IPv4_Start@targetAddress+2
 23325  01409A  C213  F0A4         	movff	_ip_database_info+19,IPv4_Start@targetAddress+3
 23326  01409E                     l886:
 23327                           
 23328                           ; BSR set to: 0
 23329                           ;ipv4.c: 229: }
 23330                           ;ipv4.c: 230: macAddress= ARPV4_Lookup(targetAddress);
 23331                           
 23332                           ; BSR set to: 0
 23333  01409E  C0A1  F013         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 23334  0140A2  C0A2  F014         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 23335  0140A6  C0A3  F015         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 23336  0140AA  C0A4  F016         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 23337  0140AE  EC71  F0B2         	call	_ARPV4_Lookup	;wreg free
 23338  0140B2  C013  F0A5         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 23339  0140B6  C014  F0A6         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 23340                           
 23341                           ;ipv4.c: 231: if(macAddress == 0)
 23342  0140BA  0100               	movlb	0	; () banked
 23343  0140BC  51A5               	movf	IPv4_Start@macAddress& (0+255),w,b
 23344  0140BE  11A6               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 23345  0140C0  A4D8               	btfss	status,2,c
 23346  0140C2  D013               	goto	l889
 23347                           
 23348                           ; BSR set to: 0
 23349                           ;ipv4.c: 232: {
 23350                           ;ipv4.c: 233: ret = ARPV4_Request(targetAddress);
 23351  0140C4  C0A1  F02D         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 23352  0140C8  C0A2  F02E         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 23353  0140CC  C0A3  F02F         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 23354  0140D0  C0A4  F030         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 23355  0140D4  EC8F  F09A         	call	_ARPV4_Request	;wreg free
 23356  0140D8  0100               	movlb	0	; () banked
 23357  0140DA  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 23358                           
 23359                           ; BSR set to: 0
 23360                           ;ipv4.c: 234: return ret;
 23361  0140DC  51A7               	movf	IPv4_Start@ret& (0+255),w,b
 23362                           
 23363                           ; BSR set to: 0
 23364  0140DE  0012               	return	
 23365  0140E0                     l884:
 23366                           
 23367                           ;ipv4.c: 237: else
 23368                           ;ipv4.c: 238: {
 23369                           ;ipv4.c: 239: macAddress = &broadcastMAC;
 23370                           
 23371                           ; BSR set to: 0
 23372  0140E0  0E08               	movlw	low _broadcastMAC
 23373  0140E2  0100               	movlb	0	; () banked
 23374  0140E4  6FA5               	movwf	IPv4_Start@macAddress& (0+255),b
 23375  0140E6  0EFF               	movlw	high _broadcastMAC
 23376  0140E8  6FA6               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 23377  0140EA                     l889:
 23378                           
 23379                           ; BSR set to: 0
 23380                           ;ipv4.c: 240: }
 23381                           ;ipv4.c: 241: ret = ETH_WriteStart(macAddress, 0x0800);
 23382                           
 23383                           ; BSR set to: 0
 23384  0140EA  C0A5  F025         	movff	IPv4_Start@macAddress,ETH_WriteStart@dest_mac
 23385  0140EE  C0A6  F026         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@dest_mac+1
 23386  0140F2  0E08               	movlw	8
 23387  0140F4  6E28               	movwf	ETH_WriteStart@type+1,c
 23388  0140F6  0E00               	movlw	0
 23389  0140F8  6E27               	movwf	ETH_WriteStart@type,c
 23390  0140FA  ECCF  F0A0         	call	_ETH_WriteStart	;wreg free
 23391  0140FE  0100               	movlb	0	; () banked
 23392  014100  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 23393                           
 23394                           ; BSR set to: 0
 23395                           ;ipv4.c: 242: if(ret == SUCCESS)
 23396  014102  05A7               	decf	IPv4_Start@ret& (0+255),w,b
 23397  014104  A4D8               	btfss	status,2,c
 23398  014106  D048               	goto	l890
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;ipv4.c: 243: {
 23402                           ;ipv4.c: 244: ETH_Write16(0x4500);
 23403  014108  0E45               	movlw	69
 23404  01410A  6E14               	movwf	ETH_Write16@data+1,c
 23405  01410C  0E00               	movlw	0
 23406  01410E  6E13               	movwf	ETH_Write16@data,c
 23407  014110  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 23408                           
 23409                           ;ipv4.c: 245: ETH_Write16(0);
 23410  014114  0E00               	movlw	0
 23411  014116  6E14               	movwf	ETH_Write16@data+1,c
 23412  014118  0E00               	movlw	0
 23413  01411A  6E13               	movwf	ETH_Write16@data,c
 23414  01411C  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 23415                           
 23416                           ;ipv4.c: 246: ETH_Write32(0xAA554000);
 23417  014120  0E00               	movlw	0
 23418  014122  6E13               	movwf	ETH_Write32@data,c
 23419  014124  0E40               	movlw	64
 23420  014126  6E14               	movwf	ETH_Write32@data+1,c
 23421  014128  0E55               	movlw	85
 23422  01412A  6E15               	movwf	ETH_Write32@data+2,c
 23423  01412C  0EAA               	movlw	170
 23424  01412E  6E16               	movwf	ETH_Write32@data+3,c
 23425  014130  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 23426                           
 23427                           ;ipv4.c: 247: ETH_Write8(64u);
 23428  014134  0E40               	movlw	64
 23429  014136  EC8A  F0B7         	call	_ETH_Write8
 23430                           
 23431                           ;ipv4.c: 248: ETH_Write8(protocol);
 23432  01413A  5035               	movf	IPv4_Start@protocol,w,c
 23433  01413C  EC8A  F0B7         	call	_ETH_Write8
 23434                           
 23435                           ;ipv4.c: 249: ETH_Write16(0);
 23436  014140  0E00               	movlw	0
 23437  014142  6E14               	movwf	ETH_Write16@data+1,c
 23438  014144  0E00               	movlw	0
 23439  014146  6E13               	movwf	ETH_Write16@data,c
 23440  014148  EC4F  F0B7         	call	_ETH_Write16	;wreg free
 23441                           
 23442                           ;ipv4.c: 250: ETH_Write32((ip_database_info.ipv4_myAddress));
 23443  01414C  C200  F013         	movff	_ip_database_info,ETH_Write32@data
 23444  014150  C201  F014         	movff	_ip_database_info+1,ETH_Write32@data+1
 23445  014154  C202  F015         	movff	_ip_database_info+2,ETH_Write32@data+2
 23446  014158  C203  F016         	movff	_ip_database_info+3,ETH_Write32@data+3
 23447  01415C  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 23448                           
 23449                           ;ipv4.c: 251: ETH_Write32(destAddress);
 23450  014160  C031  F013         	movff	IPv4_Start@destAddress,ETH_Write32@data
 23451  014164  C032  F014         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 23452  014168  C033  F015         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 23453  01416C  C034  F016         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 23454  014170  ECD1  F0B6         	call	_ETH_Write32	;wreg free
 23455                           
 23456                           ;ipv4.c: 254: ipv4Header.srcIpAddress = (ip_database_info.ipv4_myAddress);
 23457  014174  C200  F279         	movff	_ip_database_info,_ipv4Header+12
 23458  014178  C201  F27A         	movff	_ip_database_info+1,_ipv4Header+13
 23459  01417C  C202  F27B         	movff	_ip_database_info+2,_ipv4Header+14
 23460  014180  C203  F27C         	movff	_ip_database_info+3,_ipv4Header+15
 23461                           
 23462                           ;ipv4.c: 255: ipv4Header.dstIpAddress = destAddress;
 23463  014184  C031  F27D         	movff	IPv4_Start@destAddress,_ipv4Header+16
 23464  014188  C032  F27E         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 23465  01418C  C033  F27F         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 23466  014190  C034  F280         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 23467                           
 23468                           ;ipv4.c: 256: ipv4Header.protocol = protocol;
 23469  014194  C035  F276         	movff	IPv4_Start@protocol,_ipv4Header+9
 23470  014198                     l890:
 23471                           
 23472                           ;ipv4.c: 257: }
 23473                           ;ipv4.c: 258: }
 23474                           ;ipv4.c: 259: return ret;
 23475  014198  0100               	movlb	0	; () banked
 23476  01419A  51A7               	movf	IPv4_Start@ret& (0+255),w,b
 23477  01419C  0012               	return	
 23478  01419E                     __end_of_IPv4_Start:
 23479                           	opt stack 0
 23480                           tosu	equ	0xFFF
 23481                           tosh	equ	0xFFE
 23482                           tosl	equ	0xFFD
 23483                           pclath	equ	0xFFA
 23484                           tblptru	equ	0xFF8
 23485                           tblptrh	equ	0xFF7
 23486                           tblptrl	equ	0xFF6
 23487                           tablat	equ	0xFF5
 23488                           prodh	equ	0xFF4
 23489                           prodl	equ	0xFF3
 23490                           intcon	equ	0xFF2
 23491                           indf0	equ	0xFEF
 23492                           postinc0	equ	0xFEE
 23493                           fsr0h	equ	0xFEA
 23494                           fsr0l	equ	0xFE9
 23495                           wreg	equ	0xFE8
 23496                           indf1	equ	0xFE7
 23497                           postinc1	equ	0xFE6
 23498                           postdec1	equ	0xFE5
 23499                           plusw1	equ	0xFE3
 23500                           fsr1h	equ	0xFE2
 23501                           fsr1l	equ	0xFE1
 23502                           indf2	equ	0xFDF
 23503                           postinc2	equ	0xFDE
 23504                           postdec2	equ	0xFDD
 23505                           plusw2	equ	0xFDB
 23506                           fsr2h	equ	0xFDA
 23507                           fsr2l	equ	0xFD9
 23508                           status	equ	0xFD8
 23509                           
 23510 ;; *************** function _ETH_Write32 *****************
 23511 ;; Defined at:
 23512 ;;		line 570 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 23513 ;; Parameters:    Size  Location     Type
 23514 ;;  data            4   18[COMRAM] unsigned long 
 23515 ;; Auto vars:     Size  Location     Type
 23516 ;;		None
 23517 ;; Return value:  Size  Location     Type
 23518 ;;                  1    wreg      void 
 23519 ;; Registers used:
 23520 ;;		wreg, status,2, cstack
 23521 ;; Tracked objects:
 23522 ;;		On entry : 0/0
 23523 ;;		On exit  : 0/0
 23524 ;;		Unchanged: 0/0
 23525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23530 ;;Total ram usage:        4 bytes
 23531 ;; Hardware stack levels used:    1
 23532 ;; Hardware stack levels required when called:    5
 23533 ;; This function calls:
 23534 ;;		_ETH_EdataWrite
 23535 ;; This function is called by:
 23536 ;;		_IPv4_Start
 23537 ;;		_ICMP_PortUnreachable
 23538 ;;		_sendRequest
 23539 ;;		_NTP_Request
 23540 ;; This function uses a non-reentrant model
 23541 ;;
 23542                           
 23543                           	psect	text91
 23544  016DA2                     __ptext91:
 23545                           	opt stack 0
 23546  016DA2                     _ETH_Write32:
 23547                           	opt stack 20
 23548                           
 23549                           ;ETHxxJ6x_driver.c: 572: ETH_EdataWrite(data >> 24);
 23550                           
 23551                           ; BSR set to: 0
 23552                           ;incstack = 0
 23553  016DA2  5016               	movf	ETH_Write32@data+3,w,c
 23554  016DA4  EC9A  F0B7         	call	_ETH_EdataWrite
 23555                           
 23556                           ;ETHxxJ6x_driver.c: 573: ETH_EdataWrite(data >> 16);
 23557  016DA8  5015               	movf	ETH_Write32@data+2,w,c
 23558  016DAA  EC9A  F0B7         	call	_ETH_EdataWrite
 23559                           
 23560                           ;ETHxxJ6x_driver.c: 574: ETH_EdataWrite(data >> 8);
 23561  016DAE  5014               	movf	ETH_Write32@data+1,w,c
 23562  016DB0  EC9A  F0B7         	call	_ETH_EdataWrite
 23563                           
 23564                           ;ETHxxJ6x_driver.c: 575: ETH_EdataWrite(data);
 23565  016DB4  5013               	movf	ETH_Write32@data,w,c
 23566  016DB6  EC9A  F0B7         	call	_ETH_EdataWrite
 23567  016DBA  0012               	return		;funcret
 23568  016DBC                     __end_of_ETH_Write32:
 23569                           	opt stack 0
 23570                           tosu	equ	0xFFF
 23571                           tosh	equ	0xFFE
 23572                           tosl	equ	0xFFD
 23573                           pclath	equ	0xFFA
 23574                           tblptru	equ	0xFF8
 23575                           tblptrh	equ	0xFF7
 23576                           tblptrl	equ	0xFF6
 23577                           tablat	equ	0xFF5
 23578                           prodh	equ	0xFF4
 23579                           prodl	equ	0xFF3
 23580                           intcon	equ	0xFF2
 23581                           indf0	equ	0xFEF
 23582                           postinc0	equ	0xFEE
 23583                           fsr0h	equ	0xFEA
 23584                           fsr0l	equ	0xFE9
 23585                           wreg	equ	0xFE8
 23586                           indf1	equ	0xFE7
 23587                           postinc1	equ	0xFE6
 23588                           postdec1	equ	0xFE5
 23589                           plusw1	equ	0xFE3
 23590                           fsr1h	equ	0xFE2
 23591                           fsr1l	equ	0xFE1
 23592                           indf2	equ	0xFDF
 23593                           postinc2	equ	0xFDE
 23594                           postdec2	equ	0xFDD
 23595                           plusw2	equ	0xFDB
 23596                           fsr2h	equ	0xFDA
 23597                           fsr2l	equ	0xFD9
 23598                           status	equ	0xFD8
 23599                           
 23600 ;; *************** function _ETH_Write16 *****************
 23601 ;; Defined at:
 23602 ;;		line 549 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 23603 ;; Parameters:    Size  Location     Type
 23604 ;;  data            2   18[COMRAM] unsigned int 
 23605 ;; Auto vars:     Size  Location     Type
 23606 ;;		None
 23607 ;; Return value:  Size  Location     Type
 23608 ;;                  1    wreg      void 
 23609 ;; Registers used:
 23610 ;;		wreg, status,2, cstack
 23611 ;; Tracked objects:
 23612 ;;		On entry : 0/0
 23613 ;;		On exit  : 0/0
 23614 ;;		Unchanged: 0/0
 23615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23620 ;;Total ram usage:        2 bytes
 23621 ;; Hardware stack levels used:    1
 23622 ;; Hardware stack levels required when called:    5
 23623 ;; This function calls:
 23624 ;;		_ETH_EdataWrite
 23625 ;; This function is called by:
 23626 ;;		_IPv4_Start
 23627 ;;		_ICMP_EchoReply
 23628 ;;		_ICMP_PortUnreachable
 23629 ;;		_UDP_Start
 23630 ;;		_sendRequest
 23631 ;;		_TFTP_Ack
 23632 ;;		_DNS_Query
 23633 ;;		_TFTP_Read_Write_Request
 23634 ;; This function uses a non-reentrant model
 23635 ;;
 23636                           
 23637                           	psect	text92
 23638  016E9E                     __ptext92:
 23639                           	opt stack 0
 23640  016E9E                     _ETH_Write16:
 23641                           	opt stack 20
 23642                           
 23643                           ;ETHxxJ6x_driver.c: 551: ETH_EdataWrite(data >> 8);
 23644                           
 23645                           ;incstack = 0
 23646  016E9E  5014               	movf	ETH_Write16@data+1,w,c
 23647  016EA0  EC9A  F0B7         	call	_ETH_EdataWrite
 23648                           
 23649                           ;ETHxxJ6x_driver.c: 552: ETH_EdataWrite(data);
 23650  016EA4  5013               	movf	ETH_Write16@data,w,c
 23651  016EA6  EC9A  F0B7         	call	_ETH_EdataWrite
 23652  016EAA  0012               	return		;funcret
 23653  016EAC                     __end_of_ETH_Write16:
 23654                           	opt stack 0
 23655                           tosu	equ	0xFFF
 23656                           tosh	equ	0xFFE
 23657                           tosl	equ	0xFFD
 23658                           pclath	equ	0xFFA
 23659                           tblptru	equ	0xFF8
 23660                           tblptrh	equ	0xFF7
 23661                           tblptrl	equ	0xFF6
 23662                           tablat	equ	0xFF5
 23663                           prodh	equ	0xFF4
 23664                           prodl	equ	0xFF3
 23665                           intcon	equ	0xFF2
 23666                           indf0	equ	0xFEF
 23667                           postinc0	equ	0xFEE
 23668                           fsr0h	equ	0xFEA
 23669                           fsr0l	equ	0xFE9
 23670                           wreg	equ	0xFE8
 23671                           indf1	equ	0xFE7
 23672                           postinc1	equ	0xFE6
 23673                           postdec1	equ	0xFE5
 23674                           plusw1	equ	0xFE3
 23675                           fsr1h	equ	0xFE2
 23676                           fsr1l	equ	0xFE1
 23677                           indf2	equ	0xFDF
 23678                           postinc2	equ	0xFDE
 23679                           postdec2	equ	0xFDD
 23680                           plusw2	equ	0xFDB
 23681                           fsr2h	equ	0xFDA
 23682                           fsr2l	equ	0xFD9
 23683                           status	equ	0xFD8
 23684                           
 23685 ;; *************** function _ARPV4_Request *****************
 23686 ;; Defined at:
 23687 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 23688 ;; Parameters:    Size  Location     Type
 23689 ;;  destAddress     4   44[COMRAM] unsigned long 
 23690 ;; Auto vars:     Size  Location     Type
 23691 ;;  header         28   29[BANK0 ] struct .
 23692 ;;  ret             1   28[BANK0 ] enum E476
 23693 ;; Return value:  Size  Location     Type
 23694 ;;                  1    wreg      enum E476
 23695 ;; Registers used:
 23696 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23697 ;; Tracked objects:
 23698 ;;		On entry : 0/0
 23699 ;;		On exit  : 0/0
 23700 ;;		Unchanged: 0/0
 23701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23703 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23704 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23705 ;;      Totals:         4      57       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23706 ;;Total ram usage:       61 bytes
 23707 ;; Hardware stack levels used:    1
 23708 ;; Hardware stack levels required when called:    7
 23709 ;; This function calls:
 23710 ;;		_ETH_Send
 23711 ;;		_ETH_WriteBlock
 23712 ;;		_ETH_WriteStart
 23713 ;;		_memcpy
 23714 ;; This function is called by:
 23715 ;;		_IPv4_Start
 23716 ;; This function uses a non-reentrant model
 23717 ;;
 23718                           
 23719                           	psect	text93
 23720  01351E                     __ptext93:
 23721                           	opt stack 0
 23722  01351E                     _ARPV4_Request:
 23723                           	opt stack 18
 23724                           
 23725                           ;arpv4.c: 200: error_msg ret;
 23726                           ;arpv4.c: 202: ret = ERROR;
 23727                           
 23728                           ;incstack = 0
 23729  01351E  0E00               	movlw	0
 23730  013520  0100               	movlb	0	; () banked
 23731  013522  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 23732                           
 23733                           ;arpv4.c: 204: arpHeader_t header;
 23734                           ;arpv4.c: 205: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 23735  013524  0E01               	movlw	1
 23736  013526  6F7E               	movwf	(ARPV4_Request@header+1)& (0+255),b
 23737  013528  0E00               	movlw	0
 23738  01352A  6F7D               	movwf	ARPV4_Request@header& (0+255),b
 23739                           
 23740                           ;arpv4.c: 206: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 23741  01352C  0E00               	movlw	0
 23742  01352E  6F80               	movwf	(ARPV4_Request@header+3)& (0+255),b
 23743  013530  0E08               	movlw	8
 23744  013532  6F7F               	movwf	(ARPV4_Request@header+2)& (0+255),b
 23745                           
 23746                           ;arpv4.c: 207: header.hlen = 6;
 23747  013534  0E06               	movlw	6
 23748  013536  6F81               	movwf	(ARPV4_Request@header+4)& (0+255),b
 23749                           
 23750                           ;arpv4.c: 208: header.plen = 4;
 23751  013538  0E04               	movlw	4
 23752  01353A  6F82               	movwf	(ARPV4_Request@header+5)& (0+255),b
 23753                           
 23754                           ;arpv4.c: 209: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 23755  01353C  0E01               	movlw	1
 23756  01353E  6F84               	movwf	(ARPV4_Request@header+7)& (0+255),b
 23757  013540  0E00               	movlw	0
 23758  013542  6F83               	movwf	(ARPV4_Request@header+6)& (0+255),b
 23759                           
 23760                           ; BSR set to: 0
 23761                           ;arpv4.c: 210: memcpy((void*)&header.sha, (void*)&hostMacAddress, sizeof(mac48Address_t)
      +                          );
 23762  013544  0E85               	movlw	low (ARPV4_Request@header+8)
 23763  013546  6E13               	movwf	memcpy@d1,c
 23764  013548  0E00               	movlw	high (ARPV4_Request@header+8)
 23765  01354A  6E14               	movwf	memcpy@d1+1,c
 23766  01354C  0EB0               	movlw	low _hostMacAddress
 23767  01354E  6E15               	movwf	memcpy@s1,c
 23768  013550  0E03               	movlw	high _hostMacAddress
 23769  013552  6E16               	movwf	memcpy@s1+1,c
 23770  013554  0E00               	movlw	0
 23771  013556  6E18               	movwf	memcpy@n+1,c
 23772  013558  0E06               	movlw	6
 23773  01355A  6E17               	movwf	memcpy@n,c
 23774  01355C  EC07  F0B4         	call	_memcpy	;wreg free
 23775                           
 23776                           ;arpv4.c: 211: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
 23777  013560  0EFF               	movlw	255
 23778  013562  0102               	movlb	2	; () banked
 23779  013564  1500               	andwf	_ip_database_info& (0+255),w,b
 23780  013566  0100               	movlb	0	; () banked
 23781  013568  6F60               	movwf	??_ARPV4_Request& (0+255),b
 23782  01356A  0E00               	movlw	0
 23783  01356C  0102               	movlb	2	; () banked
 23784  01356E  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 23785  013570  0100               	movlb	0	; () banked
 23786  013572  6F61               	movwf	(??_ARPV4_Request+1)& (0+255),b
 23787  013574  0E00               	movlw	0
 23788  013576  0102               	movlb	2	; () banked
 23789  013578  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 23790  01357A  0100               	movlb	0	; () banked
 23791  01357C  6F62               	movwf	(??_ARPV4_Request+2)& (0+255),b
 23792  01357E  0E00               	movlw	0
 23793  013580  0102               	movlb	2	; () banked
 23794  013582  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 23795  013584  0100               	movlb	0	; () banked
 23796  013586  6F63               	movwf	(??_ARPV4_Request+3)& (0+255),b
 23797  013588  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 23798  01358C  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 23799  01358E  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 23800  013590  6B60               	clrf	??_ARPV4_Request& (0+255),b
 23801  013592  0E00               	movlw	0
 23802  013594  0102               	movlb	2	; () banked
 23803  013596  1500               	andwf	_ip_database_info& (0+255),w,b
 23804  013598  0100               	movlb	0	; () banked
 23805  01359A  6F64               	movwf	(??_ARPV4_Request+4)& (0+255),b
 23806  01359C  0EFF               	movlw	255
 23807  01359E  0102               	movlb	2	; () banked
 23808  0135A0  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 23809  0135A2  0100               	movlb	0	; () banked
 23810  0135A4  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 23811  0135A6  0E00               	movlw	0
 23812  0135A8  0102               	movlb	2	; () banked
 23813  0135AA  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 23814  0135AC  0100               	movlb	0	; () banked
 23815  0135AE  6F66               	movwf	(??_ARPV4_Request+6)& (0+255),b
 23816  0135B0  0E00               	movlw	0
 23817  0135B2  0102               	movlb	2	; () banked
 23818  0135B4  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 23819  0135B6  0100               	movlb	0	; () banked
 23820  0135B8  6F67               	movwf	(??_ARPV4_Request+7)& (0+255),b
 23821  0135BA  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 23822  0135BE  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 23823  0135C2  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 23824  0135C6  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 23825  0135C8  C200  F068         	movff	_ip_database_info,??_ARPV4_Request+8
 23826  0135CC  C201  F069         	movff	_ip_database_info+1,??_ARPV4_Request+9
 23827  0135D0  C202  F06A         	movff	_ip_database_info+2,??_ARPV4_Request+10
 23828  0135D4  C203  F06B         	movff	_ip_database_info+3,??_ARPV4_Request+11
 23829  0135D8  C069  F068         	movff	??_ARPV4_Request+9,??_ARPV4_Request+8
 23830  0135DC  C06A  F069         	movff	??_ARPV4_Request+10,??_ARPV4_Request+9
 23831  0135E0  C06B  F06A         	movff	??_ARPV4_Request+11,??_ARPV4_Request+10
 23832  0135E4  6B6B               	clrf	(??_ARPV4_Request+11)& (0+255),b
 23833  0135E6  0E00               	movlw	0
 23834  0135E8  1568               	andwf	(??_ARPV4_Request+8)& (0+255),w,b
 23835  0135EA  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 23836  0135EC  0EFF               	movlw	255
 23837  0135EE  1569               	andwf	(??_ARPV4_Request+9)& (0+255),w,b
 23838  0135F0  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 23839  0135F2  0E00               	movlw	0
 23840  0135F4  156A               	andwf	(??_ARPV4_Request+10)& (0+255),w,b
 23841  0135F6  6F6E               	movwf	(??_ARPV4_Request+14)& (0+255),b
 23842  0135F8  0E00               	movlw	0
 23843  0135FA  156B               	andwf	(??_ARPV4_Request+11)& (0+255),w,b
 23844  0135FC  6F6F               	movwf	(??_ARPV4_Request+15)& (0+255),b
 23845  0135FE  0E00               	movlw	0
 23846  013600  0102               	movlb	2	; () banked
 23847  013602  1500               	andwf	_ip_database_info& (0+255),w,b
 23848  013604  0100               	movlb	0	; () banked
 23849  013606  6F70               	movwf	(??_ARPV4_Request+16)& (0+255),b
 23850  013608  0E00               	movlw	0
 23851  01360A  0102               	movlb	2	; () banked
 23852  01360C  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 23853  01360E  0100               	movlb	0	; () banked
 23854  013610  6F71               	movwf	(??_ARPV4_Request+17)& (0+255),b
 23855  013612  0E00               	movlw	0
 23856  013614  0102               	movlb	2	; () banked
 23857  013616  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 23858  013618  0100               	movlb	0	; () banked
 23859  01361A  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 23860  01361C  0EFF               	movlw	255
 23861  01361E  0102               	movlb	2	; () banked
 23862  013620  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 23863  013622  0100               	movlb	0	; () banked
 23864  013624  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 23865  013626  0E19               	movlw	25
 23866  013628  D005               	goto	u9700
 23867  01362A                     u9705:
 23868  01362A  90D8               	bcf	status,0,c
 23869  01362C  3373               	rrcf	(??_ARPV4_Request+19)& (0+255),f,b
 23870  01362E  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 23871  013630  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 23872  013632  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 23873  013634                     u9700:
 23874  013634  2EE8               	decfsz	wreg,f,c
 23875  013636  D7F9               	goto	u9705
 23876  013638  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 23877  01363A  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 23878  01363C  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 23879  01363E  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 23880  013640  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 23881  013642  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 23882  013644  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 23883  013646  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 23884  013648  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 23885  01364A  516F               	movf	(??_ARPV4_Request+15)& (0+255),w,b
 23886  01364C  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 23887  01364E  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 23888  013650  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 23889  013652  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 23890  013654  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 23891  013656  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 23892  013658  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 23893  01365A  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 23894  01365C  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 23895  01365E  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 23896  013660  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 23897  013662  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 23898  013664  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 23899  013666  6F7B               	movwf	(??_ARPV4_Request+27)& (0+255),b
 23900  013668  5160               	movf	??_ARPV4_Request& (0+255),w,b
 23901  01366A  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 23902  01366C  6F8B               	movwf	(ARPV4_Request@header+14)& (0+255),b
 23903  01366E  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 23904  013670  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 23905  013672  6F8C               	movwf	(ARPV4_Request@header+15)& (0+255),b
 23906  013674  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 23907  013676  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 23908  013678  6F8D               	movwf	(ARPV4_Request@header+16)& (0+255),b
 23909  01367A  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 23910  01367C  117B               	iorwf	(??_ARPV4_Request+27)& (0+255),w,b
 23911  01367E  6F8E               	movwf	(ARPV4_Request@header+17)& (0+255),b
 23912                           
 23913                           ; BSR set to: 0
 23914                           ;arpv4.c: 212: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 23915  013680  0EFF               	movlw	255
 23916  013682  142D               	andwf	ARPV4_Request@destAddress,w,c
 23917  013684  6F60               	movwf	??_ARPV4_Request& (0+255),b
 23918  013686  0E00               	movlw	0
 23919  013688  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 23920  01368A  6F61               	movwf	(??_ARPV4_Request+1)& (0+255),b
 23921  01368C  0E00               	movlw	0
 23922  01368E  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 23923  013690  6F62               	movwf	(??_ARPV4_Request+2)& (0+255),b
 23924  013692  0E00               	movlw	0
 23925  013694  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 23926  013696  6F63               	movwf	(??_ARPV4_Request+3)& (0+255),b
 23927  013698  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 23928  01369C  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 23929  01369E  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 23930  0136A0  6B60               	clrf	??_ARPV4_Request& (0+255),b
 23931  0136A2  0E00               	movlw	0
 23932  0136A4  142D               	andwf	ARPV4_Request@destAddress,w,c
 23933  0136A6  6F64               	movwf	(??_ARPV4_Request+4)& (0+255),b
 23934  0136A8  0EFF               	movlw	255
 23935  0136AA  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 23936  0136AC  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 23937  0136AE  0E00               	movlw	0
 23938  0136B0  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 23939  0136B2  6F66               	movwf	(??_ARPV4_Request+6)& (0+255),b
 23940  0136B4  0E00               	movlw	0
 23941  0136B6  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 23942  0136B8  6F67               	movwf	(??_ARPV4_Request+7)& (0+255),b
 23943  0136BA  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 23944  0136BE  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 23945  0136C2  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 23946  0136C6  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 23947  0136C8  C02D  F068         	movff	ARPV4_Request@destAddress,??_ARPV4_Request+8
 23948  0136CC  C02E  F069         	movff	ARPV4_Request@destAddress+1,??_ARPV4_Request+9
 23949  0136D0  C02F  F06A         	movff	ARPV4_Request@destAddress+2,??_ARPV4_Request+10
 23950  0136D4  C030  F06B         	movff	ARPV4_Request@destAddress+3,??_ARPV4_Request+11
 23951  0136D8  C069  F068         	movff	??_ARPV4_Request+9,??_ARPV4_Request+8
 23952  0136DC  C06A  F069         	movff	??_ARPV4_Request+10,??_ARPV4_Request+9
 23953  0136E0  C06B  F06A         	movff	??_ARPV4_Request+11,??_ARPV4_Request+10
 23954  0136E4  6B6B               	clrf	(??_ARPV4_Request+11)& (0+255),b
 23955  0136E6  0E00               	movlw	0
 23956  0136E8  1568               	andwf	(??_ARPV4_Request+8)& (0+255),w,b
 23957  0136EA  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 23958  0136EC  0EFF               	movlw	255
 23959  0136EE  1569               	andwf	(??_ARPV4_Request+9)& (0+255),w,b
 23960  0136F0  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 23961  0136F2  0E00               	movlw	0
 23962  0136F4  156A               	andwf	(??_ARPV4_Request+10)& (0+255),w,b
 23963  0136F6  6F6E               	movwf	(??_ARPV4_Request+14)& (0+255),b
 23964  0136F8  0E00               	movlw	0
 23965  0136FA  156B               	andwf	(??_ARPV4_Request+11)& (0+255),w,b
 23966  0136FC  6F6F               	movwf	(??_ARPV4_Request+15)& (0+255),b
 23967  0136FE  0E00               	movlw	0
 23968  013700  142D               	andwf	ARPV4_Request@destAddress,w,c
 23969  013702  6F70               	movwf	(??_ARPV4_Request+16)& (0+255),b
 23970  013704  0E00               	movlw	0
 23971  013706  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 23972  013708  6F71               	movwf	(??_ARPV4_Request+17)& (0+255),b
 23973  01370A  0E00               	movlw	0
 23974  01370C  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 23975  01370E  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 23976  013710  0EFF               	movlw	255
 23977  013712  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 23978  013714  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 23979  013716  0E19               	movlw	25
 23980  013718  D005               	goto	u9710
 23981  01371A                     u9715:
 23982  01371A  90D8               	bcf	status,0,c
 23983  01371C  3373               	rrcf	(??_ARPV4_Request+19)& (0+255),f,b
 23984  01371E  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 23985  013720  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 23986  013722  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 23987  013724                     u9710:
 23988  013724  2EE8               	decfsz	wreg,f,c
 23989  013726  D7F9               	goto	u9715
 23990  013728  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 23991  01372A  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 23992  01372C  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 23993  01372E  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 23994  013730  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 23995  013732  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 23996  013734  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 23997  013736  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 23998  013738  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 23999  01373A  516F               	movf	(??_ARPV4_Request+15)& (0+255),w,b
 24000  01373C  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 24001  01373E  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 24002  013740  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 24003  013742  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 24004  013744  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 24005  013746  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 24006  013748  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 24007  01374A  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 24008  01374C  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 24009  01374E  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 24010  013750  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 24011  013752  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 24012  013754  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 24013  013756  6F7B               	movwf	(??_ARPV4_Request+27)& (0+255),b
 24014  013758  5160               	movf	??_ARPV4_Request& (0+255),w,b
 24015  01375A  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 24016  01375C  6F95               	movwf	(ARPV4_Request@header+24)& (0+255),b
 24017  01375E  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 24018  013760  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 24019  013762  6F96               	movwf	(ARPV4_Request@header+25)& (0+255),b
 24020  013764  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 24021  013766  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 24022  013768  6F97               	movwf	(ARPV4_Request@header+26)& (0+255),b
 24023  01376A  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 24024  01376C  117B               	iorwf	(??_ARPV4_Request+27)& (0+255),w,b
 24025  01376E  6F98               	movwf	(ARPV4_Request@header+27)& (0+255),b
 24026                           
 24027                           ; BSR set to: 0
 24028                           ;arpv4.c: 213: header.tha.s.byte1 = 0;
 24029  013770  0E00               	movlw	0
 24030  013772  6F8F               	movwf	(ARPV4_Request@header+18)& (0+255),b
 24031                           
 24032                           ; BSR set to: 0
 24033                           ;arpv4.c: 214: header.tha.s.byte2 = 0;
 24034  013774  0E00               	movlw	0
 24035  013776  6F90               	movwf	(ARPV4_Request@header+19)& (0+255),b
 24036                           
 24037                           ; BSR set to: 0
 24038                           ;arpv4.c: 215: header.tha.s.byte3 = 0;
 24039  013778  0E00               	movlw	0
 24040  01377A  6F91               	movwf	(ARPV4_Request@header+20)& (0+255),b
 24041                           
 24042                           ; BSR set to: 0
 24043                           ;arpv4.c: 216: header.tha.s.byte4 = 0;
 24044  01377C  0E00               	movlw	0
 24045  01377E  6F92               	movwf	(ARPV4_Request@header+21)& (0+255),b
 24046                           
 24047                           ; BSR set to: 0
 24048                           ;arpv4.c: 217: header.tha.s.byte5 = 0;
 24049  013780  0E00               	movlw	0
 24050  013782  6F93               	movwf	(ARPV4_Request@header+22)& (0+255),b
 24051                           
 24052                           ; BSR set to: 0
 24053                           ;arpv4.c: 218: header.tha.s.byte6 = 0;
 24054  013784  0E00               	movlw	0
 24055  013786  6F94               	movwf	(ARPV4_Request@header+23)& (0+255),b
 24056                           
 24057                           ; BSR set to: 0
 24058                           ;arpv4.c: 220: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 24059  013788  0E08               	movlw	low _broadcastMAC
 24060  01378A  6E25               	movwf	ETH_WriteStart@dest_mac,c
 24061  01378C  0EFF               	movlw	high _broadcastMAC
 24062  01378E  6E26               	movwf	ETH_WriteStart@dest_mac+1,c
 24063  013790  0E08               	movlw	8
 24064  013792  6E28               	movwf	ETH_WriteStart@type+1,c
 24065  013794  0E06               	movlw	6
 24066  013796  6E27               	movwf	ETH_WriteStart@type,c
 24067  013798  ECCF  F0A0         	call	_ETH_WriteStart	;wreg free
 24068  01379C  0100               	movlb	0	; () banked
 24069  01379E  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 24070                           
 24071                           ; BSR set to: 0
 24072                           ;arpv4.c: 221: if(ret == SUCCESS)
 24073  0137A0  057C               	decf	ARPV4_Request@ret& (0+255),w,b
 24074  0137A2  A4D8               	btfss	status,2,c
 24075  0137A4  D013               	goto	l338
 24076                           
 24077                           ; BSR set to: 0
 24078                           ;arpv4.c: 222: {
 24079                           ;arpv4.c: 223: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 24080  0137A6  0E7D               	movlw	low ARPV4_Request@header
 24081  0137A8  6E13               	movwf	ETH_WriteBlock@buffer,c
 24082  0137AA  0E00               	movlw	high ARPV4_Request@header
 24083  0137AC  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 24084  0137AE  0E00               	movlw	0
 24085  0137B0  6E16               	movwf	ETH_WriteBlock@length+1,c
 24086  0137B2  0E1C               	movlw	28
 24087  0137B4  6E15               	movwf	ETH_WriteBlock@length,c
 24088  0137B6  EC49  F0B3         	call	_ETH_WriteBlock	;wreg free
 24089                           
 24090                           ;arpv4.c: 224: ret = ETH_Send();
 24091  0137BA  ECBB  F0AD         	call	_ETH_Send	;wreg free
 24092  0137BE  0100               	movlb	0	; () banked
 24093  0137C0  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 24094                           
 24095                           ; BSR set to: 0
 24096                           ;arpv4.c: 225: if(ret == SUCCESS)
 24097  0137C2  057C               	decf	ARPV4_Request@ret& (0+255),w,b
 24098  0137C4  A4D8               	btfss	status,2,c
 24099  0137C6  D002               	goto	l338
 24100                           
 24101                           ; BSR set to: 0
 24102                           ;arpv4.c: 226: {
 24103                           ;arpv4.c: 227: return MAC_NOT_FOUND;
 24104  0137C8  0E05               	movlw	5
 24105                           
 24106                           ; BSR set to: 0
 24107  0137CA  0012               	return	
 24108  0137CC                     l338:
 24109                           
 24110                           ; BSR set to: 0
 24111                           ;arpv4.c: 228: }
 24112                           ;arpv4.c: 229: }
 24113                           ;arpv4.c: 230: return ret;
 24114                           
 24115                           ; BSR set to: 0
 24116                           
 24117                           ; BSR set to: 0
 24118  0137CC  517C               	movf	ARPV4_Request@ret& (0+255),w,b
 24119  0137CE  0012               	return	
 24120  0137D0                     __end_of_ARPV4_Request:
 24121                           	opt stack 0
 24122                           tosu	equ	0xFFF
 24123                           tosh	equ	0xFFE
 24124                           tosl	equ	0xFFD
 24125                           pclath	equ	0xFFA
 24126                           tblptru	equ	0xFF8
 24127                           tblptrh	equ	0xFF7
 24128                           tblptrl	equ	0xFF6
 24129                           tablat	equ	0xFF5
 24130                           prodh	equ	0xFF4
 24131                           prodl	equ	0xFF3
 24132                           intcon	equ	0xFF2
 24133                           indf0	equ	0xFEF
 24134                           postinc0	equ	0xFEE
 24135                           fsr0h	equ	0xFEA
 24136                           fsr0l	equ	0xFE9
 24137                           wreg	equ	0xFE8
 24138                           indf1	equ	0xFE7
 24139                           postinc1	equ	0xFE6
 24140                           postdec1	equ	0xFE5
 24141                           plusw1	equ	0xFE3
 24142                           fsr1h	equ	0xFE2
 24143                           fsr1l	equ	0xFE1
 24144                           indf2	equ	0xFDF
 24145                           postinc2	equ	0xFDE
 24146                           postdec2	equ	0xFDD
 24147                           plusw2	equ	0xFDB
 24148                           fsr2h	equ	0xFDA
 24149                           fsr2l	equ	0xFD9
 24150                           status	equ	0xFD8
 24151                           
 24152 ;; *************** function _memcpy *****************
 24153 ;; Defined at:
 24154 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\memcpy.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;  d1              2   18[COMRAM] PTR void 
 24157 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), 
 24158 ;;  s1              2   20[COMRAM] PTR const void 
 24159 ;;		 -> hostMacAddress(6), 
 24160 ;;  n               2   22[COMRAM] unsigned int 
 24161 ;; Auto vars:     Size  Location     Type
 24162 ;;  s               2   27[COMRAM] PTR const unsigned char 
 24163 ;;		 -> hostMacAddress(6), 
 24164 ;;  d               2   25[COMRAM] PTR unsigned char 
 24165 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), 
 24166 ;;  tmp             1   24[COMRAM] unsigned char 
 24167 ;; Return value:  Size  Location     Type
 24168 ;;                  2   18[COMRAM] PTR void 
 24169 ;; Registers used:
 24170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24171 ;; Tracked objects:
 24172 ;;		On entry : 0/0
 24173 ;;		On exit  : 0/0
 24174 ;;		Unchanged: 0/0
 24175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24177 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24179 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24180 ;;Total ram usage:       11 bytes
 24181 ;; Hardware stack levels used:    1
 24182 ;; Hardware stack levels required when called:    4
 24183 ;; This function calls:
 24184 ;;		Nothing
 24185 ;; This function is called by:
 24186 ;;		_ARPV4_Packet
 24187 ;;		_ARPV4_Request
 24188 ;; This function uses a non-reentrant model
 24189 ;;
 24190                           
 24191                           	psect	text94
 24192  01680E                     __ptext94:
 24193                           	opt stack 0
 24194  01680E                     _memcpy:
 24195                           	opt stack 20
 24196                           
 24197                           ; BSR set to: 0
 24198                           ;incstack = 0
 24199  01680E  C015  F01C         	movff	memcpy@s1,memcpy@s
 24200  016812  C016  F01D         	movff	memcpy@s1+1,memcpy@s+1
 24201  016816  C013  F01A         	movff	memcpy@d1,memcpy@d
 24202  01681A  C014  F01B         	movff	memcpy@d1+1,memcpy@d+1
 24203  01681E  D010               	goto	l2571
 24204  016820                     l10240:
 24205  016820  C01C  FFD9         	movff	memcpy@s,fsr2l
 24206  016824  C01D  FFDA         	movff	memcpy@s+1,fsr2h
 24207  016828  50DF               	movf	indf2,w,c
 24208  01682A  6E19               	movwf	memcpy@tmp,c
 24209  01682C  4A1C               	infsnz	memcpy@s,f,c
 24210  01682E  2A1D               	incf	memcpy@s+1,f,c
 24211  016830  C01A  FFD9         	movff	memcpy@d,fsr2l
 24212  016834  C01B  FFDA         	movff	memcpy@d+1,fsr2h
 24213  016838  C019  FFDF         	movff	memcpy@tmp,indf2
 24214  01683C  4A1A               	infsnz	memcpy@d,f,c
 24215  01683E  2A1B               	incf	memcpy@d+1,f,c
 24216  016840                     l2571:
 24217  016840  0617               	decf	memcpy@n,f,c
 24218  016842  A0D8               	btfss	status,0,c
 24219  016844  0618               	decf	memcpy@n+1,f,c
 24220  016846  2817               	incf	memcpy@n,w,c
 24221  016848  E1EB               	bnz	l10240
 24222  01684A  2818               	incf	memcpy@n+1,w,c
 24223  01684C  B4D8               	btfsc	status,2,c
 24224  01684E  0012               	return	
 24225  016850  D7E7               	goto	l2572
 24226  016852                     __end_of_memcpy:
 24227                           	opt stack 0
 24228                           tosu	equ	0xFFF
 24229                           tosh	equ	0xFFE
 24230                           tosl	equ	0xFFD
 24231                           pclath	equ	0xFFA
 24232                           tblptru	equ	0xFF8
 24233                           tblptrh	equ	0xFF7
 24234                           tblptrl	equ	0xFF6
 24235                           tablat	equ	0xFF5
 24236                           prodh	equ	0xFF4
 24237                           prodl	equ	0xFF3
 24238                           intcon	equ	0xFF2
 24239                           indf0	equ	0xFEF
 24240                           postinc0	equ	0xFEE
 24241                           fsr0h	equ	0xFEA
 24242                           fsr0l	equ	0xFE9
 24243                           wreg	equ	0xFE8
 24244                           indf1	equ	0xFE7
 24245                           postinc1	equ	0xFE6
 24246                           postdec1	equ	0xFE5
 24247                           plusw1	equ	0xFE3
 24248                           fsr1h	equ	0xFE2
 24249                           fsr1l	equ	0xFE1
 24250                           indf2	equ	0xFDF
 24251                           postinc2	equ	0xFDE
 24252                           postdec2	equ	0xFDD
 24253                           plusw2	equ	0xFDB
 24254                           fsr2h	equ	0xFDA
 24255                           fsr2l	equ	0xFD9
 24256                           status	equ	0xFD8
 24257                           
 24258 ;; *************** function _ETH_WriteStart *****************
 24259 ;; Defined at:
 24260 ;;		line 622 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24261 ;; Parameters:    Size  Location     Type
 24262 ;;  dest_mac        2   36[COMRAM] PTR const struct .
 24263 ;;		 -> arpMap.macAddress(6), NULL(0), broadcastMAC(6), header.sha(6), 
 24264 ;;		 -> ARPV4_Packet@header(28), arpMap(104), 
 24265 ;;  type            2   38[COMRAM] unsigned int 
 24266 ;; Auto vars:     Size  Location     Type
 24267 ;;  ethPacket       2   42[COMRAM] PTR struct .
 24268 ;;		 -> RAM(3935), NULL(0), 
 24269 ;; Return value:  Size  Location     Type
 24270 ;;                  1    wreg      enum E476
 24271 ;; Registers used:
 24272 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24273 ;; Tracked objects:
 24274 ;;		On entry : 0/0
 24275 ;;		On exit  : 0/0
 24276 ;;		Unchanged: 0/0
 24277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24281 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24282 ;;Total ram usage:        8 bytes
 24283 ;; Hardware stack levels used:    1
 24284 ;; Hardware stack levels required when called:    6
 24285 ;; This function calls:
 24286 ;;		_ETH_EdataWrite
 24287 ;;		_ETH_NewPacket
 24288 ;;		_ETH_ResetByteCount
 24289 ;;		_ETH_Shift_Tx_Packets
 24290 ;;		_putch
 24291 ;; This function is called by:
 24292 ;;		_ARPV4_Packet
 24293 ;;		_ARPV4_Request
 24294 ;;		_IPv4_Start
 24295 ;; This function uses a non-reentrant model
 24296 ;;
 24297                           
 24298                           	psect	text95
 24299  01419E                     __ptext95:
 24300                           	opt stack 0
 24301  01419E                     _ETH_WriteStart:
 24302                           	opt stack 19
 24303                           
 24304                           ;ETHxxJ6x_driver.c: 624: txPacket_t* ethPacket = (0);
 24305                           
 24306                           ;incstack = 0
 24307  01419E  0E00               	movlw	0
 24308  0141A0  6E2B               	movwf	ETH_WriteStart@ethPacket,c
 24309  0141A2  0E00               	movlw	0
 24310  0141A4  6E2C               	movwf	ETH_WriteStart@ethPacket+1,c
 24311                           
 24312                           ;ETHxxJ6x_driver.c: 626: if(!ethData.up)
 24313  0141A6  0102               	movlb	2	; () banked
 24314  0141A8  B524               	btfsc	_ethData& (0+255),2,b	;volatile
 24315  0141AA  D002               	goto	l611
 24316                           
 24317                           ; BSR set to: 2
 24318                           ;ETHxxJ6x_driver.c: 627: {
 24319                           ;ETHxxJ6x_driver.c: 628: return LINK_NOT_FOUND;
 24320  0141AC  0E02               	movlw	2
 24321                           
 24322                           ; BSR set to: 2
 24323  0141AE  0012               	return	
 24324  0141B0                     l611:
 24325                           
 24326                           ; BSR set to: 2
 24327                           ;ETHxxJ6x_driver.c: 629: }
 24328                           ;ETHxxJ6x_driver.c: 632: if( pHead != (0) )
 24329                           
 24330                           ; BSR set to: 2
 24331  0141B0  5045               	movf	_pHead,w,c
 24332  0141B2  1046               	iorwf	_pHead+1,w,c
 24333  0141B4  B4D8               	btfsc	status,2,c
 24334  0141B6  D00C               	goto	l614
 24335                           
 24336                           ; BSR set to: 2
 24337                           ;ETHxxJ6x_driver.c: 633: {
 24338                           ;ETHxxJ6x_driver.c: 634: if( pHead->flags & (0x0001 << 0) )
 24339  0141B8  C045  FFD9         	movff	_pHead,fsr2l
 24340  0141BC  C046  FFDA         	movff	_pHead+1,fsr2h
 24341  0141C0  CFDE F029          	movff	postinc2,??_ETH_WriteStart
 24342  0141C4  CFDD F02A          	movff	postdec2,??_ETH_WriteStart+1
 24343  0141C8  A029               	btfss	??_ETH_WriteStart,0,c
 24344  0141CA  D002               	goto	l614
 24345                           
 24346                           ; BSR set to: 2
 24347                           ;ETHxxJ6x_driver.c: 635: {
 24348                           ;ETHxxJ6x_driver.c: 636: return BUFFER_BUSY;
 24349  0141CC  0E03               	movlw	3
 24350                           
 24351                           ; BSR set to: 2
 24352  0141CE  0012               	return	
 24353  0141D0                     l614:
 24354                           
 24355                           ; BSR set to: 2
 24356                           ;ETHxxJ6x_driver.c: 637: }
 24357                           ;ETHxxJ6x_driver.c: 638: }
 24358                           ;ETHxxJ6x_driver.c: 640: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 24359                           
 24360                           ; BSR set to: 2
 24361                           
 24362                           ; BSR set to: 2
 24363  0141D0  0E0C               	movlw	12
 24364  0141D2  010E               	movlb	14	; () banked
 24365  0141D4  5DE2               	subwf	226,w,b	;volatile
 24366  0141D6  0E1A               	movlw	26
 24367  0141D8  59E3               	subwfb	227,w,b	;volatile
 24368  0141DA  A0D8               	btfss	status,0,c
 24369  0141DC  D00F               	goto	l617
 24370                           
 24371                           ; BSR set to: 14
 24372                           ;ETHxxJ6x_driver.c: 641: {
 24373                           ;ETHxxJ6x_driver.c: 645: if(ECON1bits.TXRTS)
 24374  0141DE  A6D2               	btfss	4050,3,c	;volatile
 24375  0141E0  D002               	goto	l616
 24376                           
 24377                           ; BSR set to: 14
 24378                           ;ETHxxJ6x_driver.c: 646: {
 24379                           ;ETHxxJ6x_driver.c: 647: return TX_LOGIC_NOT_IDLE;
 24380  0141E2  0E04               	movlw	4
 24381                           
 24382                           ; BSR set to: 14
 24383  0141E4  0012               	return	
 24384  0141E6                     l616:
 24385                           
 24386                           ; BSR set to: 14
 24387                           ;ETHxxJ6x_driver.c: 648: }
 24388                           ;ETHxxJ6x_driver.c: 651: ETH_Shift_Tx_Packets();
 24389                           
 24390                           ; BSR set to: 14
 24391  0141E6  ECCD  F0A4         	call	_ETH_Shift_Tx_Packets	;wreg free
 24392                           
 24393                           ;ETHxxJ6x_driver.c: 654: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 24394  0141EA  0E0C               	movlw	12
 24395  0141EC  010E               	movlb	14	; () banked
 24396  0141EE  5DE2               	subwf	226,w,b	;volatile
 24397  0141F0  0E1A               	movlw	26
 24398  0141F2  59E3               	subwfb	227,w,b	;volatile
 24399  0141F4  A0D8               	btfss	status,0,c
 24400  0141F6  D002               	goto	l617
 24401                           
 24402                           ; BSR set to: 14
 24403                           ;ETHxxJ6x_driver.c: 655: {
 24404                           ;ETHxxJ6x_driver.c: 656: return BUFFER_BUSY;
 24405  0141F8  0E03               	movlw	3
 24406                           
 24407                           ; BSR set to: 14
 24408  0141FA  0012               	return	
 24409  0141FC                     l617:
 24410                           
 24411                           ; BSR set to: 14
 24412                           ;ETHxxJ6x_driver.c: 657: }
 24413                           ;ETHxxJ6x_driver.c: 658: }
 24414                           ;ETHxxJ6x_driver.c: 663: ethPacket = (txPacket_t*)ETH_NewPacket();
 24415                           
 24416                           ; BSR set to: 14
 24417                           
 24418                           ; BSR set to: 14
 24419  0141FC  ECF0  F0A2         	call	_ETH_NewPacket	;wreg free
 24420  014200  C013  F02B         	movff	?_ETH_NewPacket,ETH_WriteStart@ethPacket
 24421  014204  C014  F02C         	movff	?_ETH_NewPacket+1,ETH_WriteStart@ethPacket+1
 24422                           
 24423                           ;ETHxxJ6x_driver.c: 665: if( ethPacket == (0) )
 24424  014208  502B               	movf	ETH_WriteStart@ethPacket,w,c
 24425  01420A  102C               	iorwf	ETH_WriteStart@ethPacket+1,w,c
 24426  01420C  A4D8               	btfss	status,2,c
 24427  01420E  D002               	goto	l618
 24428                           
 24429                           ;ETHxxJ6x_driver.c: 666: {
 24430                           ;ETHxxJ6x_driver.c: 668: return BUFFER_BUSY;
 24431  014210  0E03               	movlw	3
 24432  014212  0012               	return	
 24433  014214                     l618:
 24434                           
 24435                           ;ETHxxJ6x_driver.c: 669: }
 24436                           ;ETHxxJ6x_driver.c: 671: do{ ethPacket->flags = ethPacket->flags | (0x0001 << 0); } whil
      +                          e(0);
 24437  014214  C02B  FFD9         	movff	ETH_WriteStart@ethPacket,fsr2l
 24438  014218  C02C  FFDA         	movff	ETH_WriteStart@ethPacket+1,fsr2h
 24439  01421C  CFDE F029          	movff	postinc2,??_ETH_WriteStart
 24440  014220  CFDD F02A          	movff	postdec2,??_ETH_WriteStart+1
 24441  014224  0E01               	movlw	1
 24442  014226  1229               	iorwf	??_ETH_WriteStart,f,c
 24443  014228  0E00               	movlw	0
 24444  01422A  122A               	iorwf	??_ETH_WriteStart+1,f,c
 24445  01422C  C02B  FFD9         	movff	ETH_WriteStart@ethPacket,fsr2l
 24446  014230  C02C  FFDA         	movff	ETH_WriteStart@ethPacket+1,fsr2h
 24447  014234  C029  FFDE         	movff	??_ETH_WriteStart,postinc2
 24448  014238  C02A  FFDD         	movff	??_ETH_WriteStart+1,postdec2
 24449                           
 24450                           ;ETHxxJ6x_driver.c: 673: EWRPT = ethPacket->packetStart;
 24451  01423C  EE20 F002          	lfsr	2,2
 24452  014240  502B               	movf	ETH_WriteStart@ethPacket,w,c
 24453  014242  26D9               	addwf	fsr2l,f,c
 24454  014244  502C               	movf	ETH_WriteStart@ethPacket+1,w,c
 24455  014246  22DA               	addwfc	fsr2h,f,c
 24456  014248  CFDE FEE2          	movff	postinc2,3810	;volatile
 24457  01424C  CFDD FEE3          	movff	postdec2,3811	;volatile
 24458                           
 24459                           ;ETHxxJ6x_driver.c: 675: ETH_ResetByteCount();
 24460  014250  EC80  F0B7         	call	_ETH_ResetByteCount	;wreg free
 24461                           
 24462                           ;ETHxxJ6x_driver.c: 677: ETH_EdataWrite(0x06);
 24463  014254  0E06               	movlw	6
 24464  014256  EC9A  F0B7         	call	_ETH_EdataWrite
 24465                           
 24466                           ;ETHxxJ6x_driver.c: 678: ETH_EdataWrite(dest_mac->mac_array[0]);
 24467  01425A  C025  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
 24468  01425E  C026  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
 24469  014262  0E00               	movlw	low (__mediumconst shr (0+16))
 24470  014264  6EF8               	movwf	tblptru,c
 24471  014266  0E0F               	movlw	(high __ramtop+-1)
 24472  014268  64F7               	cpfsgt	tblptrh,c
 24473  01426A  D003               	bra	u9517
 24474  01426C  0008               	tblrd		*
 24475  01426E  50F5               	movf	tablat,w,c
 24476  014270  D005               	bra	u9510
 24477  014272                     u9517:
 24478  014272  CFF6 FFE9          	movff	tblptrl,fsr0l
 24479  014276  CFF7 FFEA          	movff	tblptrh,fsr0h
 24480  01427A  50EF               	movf	indf0,w,c
 24481  01427C                     u9510:
 24482  01427C  EC9A  F0B7         	call	_ETH_EdataWrite
 24483                           
 24484                           ;ETHxxJ6x_driver.c: 679: ETH_EdataWrite(dest_mac->mac_array[1]);
 24485  014280  0E01               	movlw	1
 24486  014282  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 24487  014284  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 24488  014286  0E00               	movlw	0
 24489  014288  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 24490  01428A  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 24491  01428C  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24492  014290  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24493  014294  0E00               	movlw	low (__mediumconst shr (0+16))
 24494  014296  6EF8               	movwf	tblptru,c
 24495  014298  0E0F               	movlw	(high __ramtop+-1)
 24496  01429A  64F7               	cpfsgt	tblptrh,c
 24497  01429C  D003               	bra	u9527
 24498  01429E  0008               	tblrd		*
 24499  0142A0  50F5               	movf	tablat,w,c
 24500  0142A2  D005               	bra	u9520
 24501  0142A4                     u9527:
 24502  0142A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 24503  0142A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 24504  0142AC  50EF               	movf	indf0,w,c
 24505  0142AE                     u9520:
 24506  0142AE  EC9A  F0B7         	call	_ETH_EdataWrite
 24507                           
 24508                           ;ETHxxJ6x_driver.c: 680: ETH_EdataWrite(dest_mac->mac_array[2]);
 24509  0142B2  0E02               	movlw	2
 24510  0142B4  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 24511  0142B6  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 24512  0142B8  0E00               	movlw	0
 24513  0142BA  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 24514  0142BC  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 24515  0142BE  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24516  0142C2  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24517  0142C6  0E00               	movlw	low (__mediumconst shr (0+16))
 24518  0142C8  6EF8               	movwf	tblptru,c
 24519  0142CA  0E0F               	movlw	(high __ramtop+-1)
 24520  0142CC  64F7               	cpfsgt	tblptrh,c
 24521  0142CE  D003               	bra	u9537
 24522  0142D0  0008               	tblrd		*
 24523  0142D2  50F5               	movf	tablat,w,c
 24524  0142D4  D005               	bra	u9530
 24525  0142D6                     u9537:
 24526  0142D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 24527  0142DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 24528  0142DE  50EF               	movf	indf0,w,c
 24529  0142E0                     u9530:
 24530  0142E0  EC9A  F0B7         	call	_ETH_EdataWrite
 24531                           
 24532                           ;ETHxxJ6x_driver.c: 681: ETH_EdataWrite(dest_mac->mac_array[3]);
 24533  0142E4  0E03               	movlw	3
 24534  0142E6  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 24535  0142E8  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 24536  0142EA  0E00               	movlw	0
 24537  0142EC  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 24538  0142EE  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 24539  0142F0  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24540  0142F4  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24541  0142F8  0E00               	movlw	low (__mediumconst shr (0+16))
 24542  0142FA  6EF8               	movwf	tblptru,c
 24543  0142FC  0E0F               	movlw	(high __ramtop+-1)
 24544  0142FE  64F7               	cpfsgt	tblptrh,c
 24545  014300  D003               	bra	u9547
 24546  014302  0008               	tblrd		*
 24547  014304  50F5               	movf	tablat,w,c
 24548  014306  D005               	bra	u9540
 24549  014308                     u9547:
 24550  014308  CFF6 FFE9          	movff	tblptrl,fsr0l
 24551  01430C  CFF7 FFEA          	movff	tblptrh,fsr0h
 24552  014310  50EF               	movf	indf0,w,c
 24553  014312                     u9540:
 24554  014312  EC9A  F0B7         	call	_ETH_EdataWrite
 24555                           
 24556                           ;ETHxxJ6x_driver.c: 682: ETH_EdataWrite(dest_mac->mac_array[4]);
 24557  014316  0E04               	movlw	4
 24558  014318  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 24559  01431A  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 24560  01431C  0E00               	movlw	0
 24561  01431E  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 24562  014320  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 24563  014322  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24564  014326  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24565  01432A  0E00               	movlw	low (__mediumconst shr (0+16))
 24566  01432C  6EF8               	movwf	tblptru,c
 24567  01432E  0E0F               	movlw	(high __ramtop+-1)
 24568  014330  64F7               	cpfsgt	tblptrh,c
 24569  014332  D003               	bra	u9557
 24570  014334  0008               	tblrd		*
 24571  014336  50F5               	movf	tablat,w,c
 24572  014338  D005               	bra	u9550
 24573  01433A                     u9557:
 24574  01433A  CFF6 FFE9          	movff	tblptrl,fsr0l
 24575  01433E  CFF7 FFEA          	movff	tblptrh,fsr0h
 24576  014342  50EF               	movf	indf0,w,c
 24577  014344                     u9550:
 24578  014344  EC9A  F0B7         	call	_ETH_EdataWrite
 24579                           
 24580                           ;ETHxxJ6x_driver.c: 683: ETH_EdataWrite(dest_mac->mac_array[5]);
 24581  014348  0E05               	movlw	5
 24582  01434A  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 24583  01434C  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 24584  01434E  0E00               	movlw	0
 24585  014350  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 24586  014352  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 24587  014354  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24588  014358  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24589  01435C  0E00               	movlw	low (__mediumconst shr (0+16))
 24590  01435E  6EF8               	movwf	tblptru,c
 24591  014360  0E0F               	movlw	(high __ramtop+-1)
 24592  014362  64F7               	cpfsgt	tblptrh,c
 24593  014364  D003               	bra	u9567
 24594  014366  0008               	tblrd		*
 24595  014368  50F5               	movf	tablat,w,c
 24596  01436A  D005               	bra	u9560
 24597  01436C                     u9567:
 24598  01436C  CFF6 FFE9          	movff	tblptrl,fsr0l
 24599  014370  CFF7 FFEA          	movff	tblptrh,fsr0h
 24600  014374  50EF               	movf	indf0,w,c
 24601  014376                     u9560:
 24602  014376  EC9A  F0B7         	call	_ETH_EdataWrite
 24603                           
 24604                           ;ETHxxJ6x_driver.c: 685: ETH_EdataWrite(MAADR1);
 24605  01437A  010E               	movlb	14	; () banked
 24606  01437C  5184               	movf	132,w,b	;volatile
 24607  01437E  EC9A  F0B7         	call	_ETH_EdataWrite
 24608                           
 24609                           ;ETHxxJ6x_driver.c: 686: ETH_EdataWrite(MAADR2);
 24610  014382  010E               	movlb	14	; () banked
 24611  014384  5185               	movf	133,w,b	;volatile
 24612  014386  EC9A  F0B7         	call	_ETH_EdataWrite
 24613                           
 24614                           ;ETHxxJ6x_driver.c: 687: ETH_EdataWrite(MAADR3);
 24615  01438A  010E               	movlb	14	; () banked
 24616  01438C  5182               	movf	130,w,b	;volatile
 24617  01438E  EC9A  F0B7         	call	_ETH_EdataWrite
 24618                           
 24619                           ;ETHxxJ6x_driver.c: 688: ETH_EdataWrite(MAADR4);
 24620  014392  010E               	movlb	14	; () banked
 24621  014394  5183               	movf	131,w,b	;volatile
 24622  014396  EC9A  F0B7         	call	_ETH_EdataWrite
 24623                           
 24624                           ;ETHxxJ6x_driver.c: 689: ETH_EdataWrite(MAADR5);
 24625  01439A  010E               	movlb	14	; () banked
 24626  01439C  5180               	movf	128,w,b	;volatile
 24627  01439E  EC9A  F0B7         	call	_ETH_EdataWrite
 24628                           
 24629                           ;ETHxxJ6x_driver.c: 690: ETH_EdataWrite(MAADR6);
 24630  0143A2  010E               	movlb	14	; () banked
 24631  0143A4  5181               	movf	129,w,b	;volatile
 24632  0143A6  EC9A  F0B7         	call	_ETH_EdataWrite
 24633                           
 24634                           ;ETHxxJ6x_driver.c: 691: ETH_EdataWrite(((char *)&type)[1]);
 24635  0143AA  5028               	movf	ETH_WriteStart@type+1,w,c
 24636  0143AC  EC9A  F0B7         	call	_ETH_EdataWrite
 24637                           
 24638                           ;ETHxxJ6x_driver.c: 692: ETH_EdataWrite(((char *)&type)[0]);
 24639  0143B0  5027               	movf	ETH_WriteStart@type,w,c
 24640  0143B2  EC9A  F0B7         	call	_ETH_EdataWrite
 24641                           
 24642                           ;ETHxxJ6x_driver.c: 694: putch('+');
 24643  0143B6  0E2B               	movlw	43
 24644  0143B8  ECA0  F0B7         	call	_putch
 24645                           
 24646                           ;ETHxxJ6x_driver.c: 695: return SUCCESS;
 24647  0143BC  0E01               	movlw	1
 24648  0143BE  0012               	return	
 24649  0143C0                     __end_of_ETH_WriteStart:
 24650                           	opt stack 0
 24651                           tosu	equ	0xFFF
 24652                           tosh	equ	0xFFE
 24653                           tosl	equ	0xFFD
 24654                           pclath	equ	0xFFA
 24655                           tblptru	equ	0xFF8
 24656                           tblptrh	equ	0xFF7
 24657                           tblptrl	equ	0xFF6
 24658                           tablat	equ	0xFF5
 24659                           prodh	equ	0xFF4
 24660                           prodl	equ	0xFF3
 24661                           intcon	equ	0xFF2
 24662                           indf0	equ	0xFEF
 24663                           postinc0	equ	0xFEE
 24664                           fsr0h	equ	0xFEA
 24665                           fsr0l	equ	0xFE9
 24666                           wreg	equ	0xFE8
 24667                           indf1	equ	0xFE7
 24668                           postinc1	equ	0xFE6
 24669                           postdec1	equ	0xFE5
 24670                           plusw1	equ	0xFE3
 24671                           fsr1h	equ	0xFE2
 24672                           fsr1l	equ	0xFE1
 24673                           indf2	equ	0xFDF
 24674                           postinc2	equ	0xFDE
 24675                           postdec2	equ	0xFDD
 24676                           plusw2	equ	0xFDB
 24677                           fsr2h	equ	0xFDA
 24678                           fsr2l	equ	0xFD9
 24679                           status	equ	0xFD8
 24680                           
 24681 ;; *************** function _ETH_Shift_Tx_Packets *****************
 24682 ;; Defined at:
 24683 ;;		line 911 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24684 ;; Parameters:    Size  Location     Type
 24685 ;;		None
 24686 ;; Auto vars:     Size  Location     Type
 24687 ;;  pElem           2   34[COMRAM] PTR struct .
 24688 ;;		 -> txData(200), NULL(0), 
 24689 ;;  shiftOffset     2   28[COMRAM] unsigned int 
 24690 ;;  len             2   32[COMRAM] unsigned int 
 24691 ;;  timer           2   30[COMRAM] unsigned int 
 24692 ;; Return value:  Size  Location     Type
 24693 ;;                  1    wreg      enum E4853
 24694 ;; Registers used:
 24695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24696 ;; Tracked objects:
 24697 ;;		On entry : 0/0
 24698 ;;		On exit  : 0/0
 24699 ;;		Unchanged: 0/0
 24700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24702 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24703 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24704 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24705 ;;Total ram usage:       12 bytes
 24706 ;; Hardware stack levels used:    1
 24707 ;; Hardware stack levels required when called:    5
 24708 ;; This function calls:
 24709 ;;		___wmul
 24710 ;; This function is called by:
 24711 ;;		_ETH_EventHandler
 24712 ;;		_ETH_WriteStart
 24713 ;; This function uses a non-reentrant model
 24714 ;;
 24715                           
 24716                           	psect	text96
 24717  01499A                     __ptext96:
 24718                           	opt stack 0
 24719  01499A                     _ETH_Shift_Tx_Packets:
 24720                           	opt stack 19
 24721                           
 24722                           ;ETHxxJ6x_driver.c: 913: uint16_t timer;
 24723                           ;ETHxxJ6x_driver.c: 914: uint16_t len = pHead->packetEnd - pTail->packetStart;
 24724                           
 24725                           ;incstack = 0
 24726  01499A  EE20 F004          	lfsr	2,4
 24727  01499E  5045               	movf	_pHead,w,c
 24728  0149A0  26D9               	addwf	fsr2l,f,c
 24729  0149A2  5046               	movf	_pHead+1,w,c
 24730  0149A4  22DA               	addwfc	fsr2h,f,c
 24731  0149A6  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 24732  0149AA  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 24733  0149AE  EE20 F002          	lfsr	2,2
 24734  0149B2  5043               	movf	_pTail,w,c
 24735  0149B4  26D9               	addwf	fsr2l,f,c
 24736  0149B6  5044               	movf	_pTail+1,w,c
 24737  0149B8  22DA               	addwfc	fsr2h,f,c
 24738  0149BA  CFDE F01B          	movff	postinc2,??_ETH_Shift_Tx_Packets+2
 24739  0149BE  CFDD F01C          	movff	postdec2,??_ETH_Shift_Tx_Packets+3
 24740  0149C2  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 24741  0149C4  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 24742  0149C6  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 24743  0149C8  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 24744  0149CA  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 24745  0149CC  241B               	addwf	??_ETH_Shift_Tx_Packets+2,w,c
 24746  0149CE  6E21               	movwf	ETH_Shift_Tx_Packets@len,c
 24747  0149D0  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 24748  0149D2  201C               	addwfc	??_ETH_Shift_Tx_Packets+3,w,c
 24749  0149D4  6E22               	movwf	ETH_Shift_Tx_Packets@len+1,c
 24750                           
 24751                           ;ETHxxJ6x_driver.c: 916: timer = 2 * len;
 24752  0149D6  90D8               	bcf	status,0,c
 24753  0149D8  3421               	rlcf	ETH_Shift_Tx_Packets@len,w,c
 24754  0149DA  6E1F               	movwf	ETH_Shift_Tx_Packets@timer,c
 24755  0149DC  3422               	rlcf	ETH_Shift_Tx_Packets@len+1,w,c
 24756  0149DE  6E20               	movwf	ETH_Shift_Tx_Packets@timer+1,c
 24757                           
 24758                           ;ETHxxJ6x_driver.c: 917: while(ECON1bits.DMAST!=0 && --timer) __nop();
 24759  0149E0  D001               	goto	l683
 24760  0149E2                     l684:
 24761  0149E2  F000               	nop	
 24762  0149E4                     l683:
 24763  0149E4  AAD2               	btfss	4050,5,c	;volatile
 24764  0149E6  D007               	goto	u9320
 24765  0149E8  061F               	decf	ETH_Shift_Tx_Packets@timer,f,c
 24766  0149EA  A0D8               	btfss	status,0,c
 24767  0149EC  0620               	decf	ETH_Shift_Tx_Packets@timer+1,f,c
 24768  0149EE  501F               	movf	ETH_Shift_Tx_Packets@timer,w,c
 24769  0149F0  1020               	iorwf	ETH_Shift_Tx_Packets@timer+1,w,c
 24770  0149F2  A4D8               	btfss	status,2,c
 24771  0149F4  D7F6               	goto	l684
 24772  0149F6                     u9320:
 24773                           
 24774                           ;ETHxxJ6x_driver.c: 918: if(ECON1bits.DMAST==0)
 24775  0149F6  BAD2               	btfsc	4050,5,c	;volatile
 24776  0149F8  D09B               	goto	l694
 24777                           
 24778                           ;ETHxxJ6x_driver.c: 919: {
 24779                           ;ETHxxJ6x_driver.c: 920: EDMADST = ((8192) - (((1518) + (7)) << 1));
 24780  0149FA  0E14               	movlw	20
 24781  0149FC  010E               	movlb	14	; () banked
 24782  0149FE  6FF5               	movwf	245,b	;volatile
 24783  014A00  0E16               	movlw	22
 24784  014A02  6FF4               	movwf	244,b	;volatile
 24785                           
 24786                           ; BSR set to: 14
 24787                           ;ETHxxJ6x_driver.c: 922: EDMAST = pTail->packetStart;
 24788  014A04  EE20 F002          	lfsr	2,2
 24789  014A08  5043               	movf	_pTail,w,c
 24790  014A0A  26D9               	addwf	fsr2l,f,c
 24791  014A0C  5044               	movf	_pTail+1,w,c
 24792  014A0E  22DA               	addwfc	fsr2h,f,c
 24793  014A10  CFDE FEF0          	movff	postinc2,3824	;volatile
 24794  014A14  CFDD FEF1          	movff	postdec2,3825	;volatile
 24795                           
 24796                           ; BSR set to: 14
 24797                           ;ETHxxJ6x_driver.c: 923: EDMAND = pHead->packetEnd;
 24798  014A18  EE20 F004          	lfsr	2,4
 24799  014A1C  5045               	movf	_pHead,w,c
 24800  014A1E  26D9               	addwf	fsr2l,f,c
 24801  014A20  5046               	movf	_pHead+1,w,c
 24802  014A22  22DA               	addwfc	fsr2h,f,c
 24803  014A24  CFDE FEF2          	movff	postinc2,3826	;volatile
 24804  014A28  CFDD FEF3          	movff	postdec2,3827	;volatile
 24805                           
 24806                           ; BSR set to: 14
 24807                           ;ETHxxJ6x_driver.c: 925: ECON1bits.CSUMEN = 0;
 24808  014A2C  98D2               	bcf	4050,4,c	;volatile
 24809                           
 24810                           ; BSR set to: 14
 24811                           ;ETHxxJ6x_driver.c: 926: ECON1bits.DMAST = 1;
 24812  014A2E  8AD2               	bsf	4050,5,c	;volatile
 24813                           
 24814                           ; BSR set to: 14
 24815                           ;ETHxxJ6x_driver.c: 928: timer = 40 * len;
 24816  014A30  C021  F013         	movff	ETH_Shift_Tx_Packets@len,___wmul@multiplier
 24817  014A34  C022  F014         	movff	ETH_Shift_Tx_Packets@len+1,___wmul@multiplier+1
 24818  014A38  0E00               	movlw	0
 24819  014A3A  6E16               	movwf	___wmul@multiplicand+1,c
 24820  014A3C  0E28               	movlw	40
 24821  014A3E  6E15               	movwf	___wmul@multiplicand,c
 24822  014A40  EC4A  F0B6         	call	___wmul	;wreg free
 24823  014A44  C013  F01F         	movff	?___wmul,ETH_Shift_Tx_Packets@timer
 24824  014A48  C014  F020         	movff	?___wmul+1,ETH_Shift_Tx_Packets@timer+1
 24825                           
 24826                           ;ETHxxJ6x_driver.c: 929: while(ECON1bits.DMAST!=0 && --timer) __nop();
 24827  014A4C  D001               	goto	l689
 24828  014A4E                     l690:
 24829  014A4E  F000               	nop	
 24830  014A50                     l689:
 24831  014A50  AAD2               	btfss	4050,5,c	;volatile
 24832  014A52  D007               	goto	u9350
 24833  014A54  061F               	decf	ETH_Shift_Tx_Packets@timer,f,c
 24834  014A56  A0D8               	btfss	status,0,c
 24835  014A58  0620               	decf	ETH_Shift_Tx_Packets@timer+1,f,c
 24836  014A5A  501F               	movf	ETH_Shift_Tx_Packets@timer,w,c
 24837  014A5C  1020               	iorwf	ETH_Shift_Tx_Packets@timer+1,w,c
 24838  014A5E  A4D8               	btfss	status,2,c
 24839  014A60  D7F6               	goto	l690
 24840  014A62                     u9350:
 24841                           
 24842                           ;ETHxxJ6x_driver.c: 930: if(ECON1bits.DMAST == 0)
 24843  014A62  BAD2               	btfsc	4050,5,c	;volatile
 24844  014A64  D065               	goto	l694
 24845                           
 24846                           ;ETHxxJ6x_driver.c: 931: {
 24847                           ;ETHxxJ6x_driver.c: 933: txPacket_t *pElem = pHead;
 24848  014A66  C045  F023         	movff	_pHead,ETH_Shift_Tx_Packets@pElem
 24849  014A6A  C046  F024         	movff	_pHead+1,ETH_Shift_Tx_Packets@pElem+1
 24850                           
 24851                           ;ETHxxJ6x_driver.c: 934: uint16_t shiftOffset = pTail->packetStart;
 24852  014A6E  EE20 F002          	lfsr	2,2
 24853  014A72  5043               	movf	_pTail,w,c
 24854  014A74  26D9               	addwf	fsr2l,f,c
 24855  014A76  5044               	movf	_pTail+1,w,c
 24856  014A78  22DA               	addwfc	fsr2h,f,c
 24857  014A7A  CFDE F01D          	movff	postinc2,ETH_Shift_Tx_Packets@shiftOffset
 24858  014A7E  CFDD F01E          	movff	postdec2,ETH_Shift_Tx_Packets@shiftOffset+1
 24859                           
 24860                           ;ETHxxJ6x_driver.c: 936: while( pElem != (0) )
 24861  014A82  D04A               	goto	l695
 24862  014A84                     
 24863                           ;ETHxxJ6x_driver.c: 937: {
 24864                           ;ETHxxJ6x_driver.c: 938: pElem->packetStart = pElem->packetStart - shiftOffset;
 24865  014A84  EE20 F002          	lfsr	2,2
 24866  014A88  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 24867  014A8A  26D9               	addwf	fsr2l,f,c
 24868  014A8C  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 24869  014A8E  22DA               	addwfc	fsr2h,f,c
 24870  014A90  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 24871  014A94  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 24872  014A98  C01D  F01B         	movff	ETH_Shift_Tx_Packets@shiftOffset,??_ETH_Shift_Tx_Packets+2
 24873  014A9C  C01E  F01C         	movff	ETH_Shift_Tx_Packets@shiftOffset+1,??_ETH_Shift_Tx_Packets+3
 24874  014AA0  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 24875  014AA2  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 24876  014AA4  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 24877  014AA6  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 24878  014AA8  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 24879  014AAA  261B               	addwf	??_ETH_Shift_Tx_Packets+2,f,c
 24880  014AAC  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 24881  014AAE  221C               	addwfc	??_ETH_Shift_Tx_Packets+3,f,c
 24882  014AB0  EE20 F002          	lfsr	2,2
 24883  014AB4  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 24884  014AB6  26D9               	addwf	fsr2l,f,c
 24885  014AB8  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 24886  014ABA  22DA               	addwfc	fsr2h,f,c
 24887  014ABC  C01B  FFDE         	movff	??_ETH_Shift_Tx_Packets+2,postinc2
 24888  014AC0  C01C  FFDD         	movff	??_ETH_Shift_Tx_Packets+3,postdec2
 24889                           
 24890                           ;ETHxxJ6x_driver.c: 939: pElem->packetEnd = pElem->packetEnd - shiftOffset;
 24891  014AC4  EE20 F004          	lfsr	2,4
 24892  014AC8  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 24893  014ACA  26D9               	addwf	fsr2l,f,c
 24894  014ACC  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 24895  014ACE  22DA               	addwfc	fsr2h,f,c
 24896  014AD0  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 24897  014AD4  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 24898  014AD8  C01D  F01B         	movff	ETH_Shift_Tx_Packets@shiftOffset,??_ETH_Shift_Tx_Packets+2
 24899  014ADC  C01E  F01C         	movff	ETH_Shift_Tx_Packets@shiftOffset+1,??_ETH_Shift_Tx_Packets+3
 24900  014AE0  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 24901  014AE2  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 24902  014AE4  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 24903  014AE6  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 24904  014AE8  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 24905  014AEA  261B               	addwf	??_ETH_Shift_Tx_Packets+2,f,c
 24906  014AEC  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 24907  014AEE  221C               	addwfc	??_ETH_Shift_Tx_Packets+3,f,c
 24908  014AF0  EE20 F004          	lfsr	2,4
 24909  014AF4  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 24910  014AF6  26D9               	addwf	fsr2l,f,c
 24911  014AF8  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 24912  014AFA  22DA               	addwfc	fsr2h,f,c
 24913  014AFC  C01B  FFDE         	movff	??_ETH_Shift_Tx_Packets+2,postinc2
 24914  014B00  C01C  FFDD         	movff	??_ETH_Shift_Tx_Packets+3,postdec2
 24915                           
 24916                           ;ETHxxJ6x_driver.c: 940: pElem = pElem->nextPacket;
 24917  014B04  EE20 F008          	lfsr	2,8
 24918  014B08  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 24919  014B0A  26D9               	addwf	fsr2l,f,c
 24920  014B0C  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 24921  014B0E  22DA               	addwfc	fsr2h,f,c
 24922  014B10  CFDE F023          	movff	postinc2,ETH_Shift_Tx_Packets@pElem
 24923  014B14  CFDD F024          	movff	postdec2,ETH_Shift_Tx_Packets@pElem+1
 24924  014B18                     l695:
 24925  014B18  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 24926  014B1A  1024               	iorwf	ETH_Shift_Tx_Packets@pElem+1,w,c
 24927  014B1C  A4D8               	btfss	status,2,c
 24928  014B1E  D7B2               	goto	l696
 24929                           
 24930                           ;ETHxxJ6x_driver.c: 941: }
 24931                           ;ETHxxJ6x_driver.c: 944: EWRPT = ((8192) - (((1518) + (7)) << 1)) + len;
 24932  014B20  0E16               	movlw	22
 24933  014B22  2421               	addwf	ETH_Shift_Tx_Packets@len,w,c
 24934  014B24  010E               	movlb	14	; () banked
 24935  014B26  6FE2               	movwf	226,b	;volatile
 24936  014B28  0E14               	movlw	20
 24937  014B2A  2022               	addwfc	ETH_Shift_Tx_Packets@len+1,w,c
 24938  014B2C  6FE3               	movwf	227,b	;volatile
 24939                           
 24940                           ; BSR set to: 14
 24941                           ;ETHxxJ6x_driver.c: 945: return SUCCESS;
 24942                           ;	Return value of _ETH_Shift_Tx_Packets is never used
 24943  014B2E  0012               	return	
 24944  014B30                     l694:
 24945                           
 24946                           ; BSR set to: 14
 24947  014B30  00FF               	reset		;# 
 24948                           
 24949                           ;ETHxxJ6x_driver.c: 951: return DMA_TIMEOUT;
 24950                           ;	Return value of _ETH_Shift_Tx_Packets is never used
 24951  014B32  0012               	return		;funcret
 24952  014B34                     __end_of_ETH_Shift_Tx_Packets:
 24953                           	opt stack 0
 24954                           tosu	equ	0xFFF
 24955                           tosh	equ	0xFFE
 24956                           tosl	equ	0xFFD
 24957                           pclath	equ	0xFFA
 24958                           tblptru	equ	0xFF8
 24959                           tblptrh	equ	0xFF7
 24960                           tblptrl	equ	0xFF6
 24961                           tablat	equ	0xFF5
 24962                           prodh	equ	0xFF4
 24963                           prodl	equ	0xFF3
 24964                           intcon	equ	0xFF2
 24965                           indf0	equ	0xFEF
 24966                           postinc0	equ	0xFEE
 24967                           fsr0h	equ	0xFEA
 24968                           fsr0l	equ	0xFE9
 24969                           wreg	equ	0xFE8
 24970                           indf1	equ	0xFE7
 24971                           postinc1	equ	0xFE6
 24972                           postdec1	equ	0xFE5
 24973                           plusw1	equ	0xFE3
 24974                           fsr1h	equ	0xFE2
 24975                           fsr1l	equ	0xFE1
 24976                           indf2	equ	0xFDF
 24977                           postinc2	equ	0xFDE
 24978                           postdec2	equ	0xFDD
 24979                           plusw2	equ	0xFDB
 24980                           fsr2h	equ	0xFDA
 24981                           fsr2l	equ	0xFD9
 24982                           status	equ	0xFD8
 24983                           
 24984 ;; *************** function ___wmul *****************
 24985 ;; Defined at:
 24986 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
 24987 ;; Parameters:    Size  Location     Type
 24988 ;;  multiplier      2   18[COMRAM] unsigned int 
 24989 ;;  multiplicand    2   20[COMRAM] unsigned int 
 24990 ;; Auto vars:     Size  Location     Type
 24991 ;;  product         2   22[COMRAM] unsigned int 
 24992 ;; Return value:  Size  Location     Type
 24993 ;;                  2   18[COMRAM] unsigned int 
 24994 ;; Registers used:
 24995 ;;		wreg, status,2, status,0, prodl, prodh
 24996 ;; Tracked objects:
 24997 ;;		On entry : 0/0
 24998 ;;		On exit  : 0/0
 24999 ;;		Unchanged: 0/0
 25000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25004 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25005 ;;Total ram usage:        6 bytes
 25006 ;; Hardware stack levels used:    1
 25007 ;; Hardware stack levels required when called:    4
 25008 ;; This function calls:
 25009 ;;		Nothing
 25010 ;; This function is called by:
 25011 ;;		_ETH_Copy
 25012 ;;		_ETH_Shift_Tx_Packets
 25013 ;;		__doprnt
 25014 ;;		_atoi
 25015 ;; This function uses a non-reentrant model
 25016 ;;
 25017                           
 25018                           	psect	text97
 25019  016C94                     __ptext97:
 25020                           	opt stack 0
 25021  016C94                     ___wmul:
 25022                           	opt stack 21
 25023                           
 25024                           ;incstack = 0
 25025  016C94  5013               	movf	___wmul@multiplier,w,c
 25026  016C96  0215               	mulwf	___wmul@multiplicand,c
 25027  016C98  CFF3 F017          	movff	prodl,___wmul@product
 25028  016C9C  CFF4 F018          	movff	prodh,___wmul@product+1
 25029  016CA0  5013               	movf	___wmul@multiplier,w,c
 25030  016CA2  0216               	mulwf	___wmul@multiplicand+1,c
 25031  016CA4  50F3               	movf	prodl,w,c
 25032  016CA6  2618               	addwf	___wmul@product+1,f,c
 25033  016CA8  5014               	movf	___wmul@multiplier+1,w,c
 25034  016CAA  0215               	mulwf	___wmul@multiplicand,c
 25035  016CAC  50F3               	movf	prodl,w,c
 25036  016CAE  2618               	addwf	___wmul@product+1,f,c
 25037  016CB0  C017  F013         	movff	___wmul@product,?___wmul
 25038  016CB4  C018  F014         	movff	___wmul@product+1,?___wmul+1
 25039  016CB8  0012               	return	
 25040  016CBA                     __end_of___wmul:
 25041                           	opt stack 0
 25042                           tosu	equ	0xFFF
 25043                           tosh	equ	0xFFE
 25044                           tosl	equ	0xFFD
 25045                           pclath	equ	0xFFA
 25046                           tblptru	equ	0xFF8
 25047                           tblptrh	equ	0xFF7
 25048                           tblptrl	equ	0xFF6
 25049                           tablat	equ	0xFF5
 25050                           prodh	equ	0xFF4
 25051                           prodl	equ	0xFF3
 25052                           intcon	equ	0xFF2
 25053                           indf0	equ	0xFEF
 25054                           postinc0	equ	0xFEE
 25055                           fsr0h	equ	0xFEA
 25056                           fsr0l	equ	0xFE9
 25057                           wreg	equ	0xFE8
 25058                           indf1	equ	0xFE7
 25059                           postinc1	equ	0xFE6
 25060                           postdec1	equ	0xFE5
 25061                           plusw1	equ	0xFE3
 25062                           fsr1h	equ	0xFE2
 25063                           fsr1l	equ	0xFE1
 25064                           indf2	equ	0xFDF
 25065                           postinc2	equ	0xFDE
 25066                           postdec2	equ	0xFDD
 25067                           plusw2	equ	0xFDB
 25068                           fsr2h	equ	0xFDA
 25069                           fsr2l	equ	0xFD9
 25070                           status	equ	0xFD8
 25071                           
 25072 ;; *************** function _ETH_ResetByteCount *****************
 25073 ;; Defined at:
 25074 ;;		line 1121 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25075 ;; Parameters:    Size  Location     Type
 25076 ;;		None
 25077 ;; Auto vars:     Size  Location     Type
 25078 ;;		None
 25079 ;; Return value:  Size  Location     Type
 25080 ;;                  1    wreg      void 
 25081 ;; Registers used:
 25082 ;;		None
 25083 ;; Tracked objects:
 25084 ;;		On entry : 0/0
 25085 ;;		On exit  : 0/0
 25086 ;;		Unchanged: 0/0
 25087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25092 ;;Total ram usage:        0 bytes
 25093 ;; Hardware stack levels used:    1
 25094 ;; Hardware stack levels required when called:    4
 25095 ;; This function calls:
 25096 ;;		Nothing
 25097 ;; This function is called by:
 25098 ;;		_ETH_WriteStart
 25099 ;;		_UDP_Start
 25100 ;;		_ETH_TxReset
 25101 ;; This function uses a non-reentrant model
 25102 ;;
 25103                           
 25104                           	psect	text98
 25105  016F00                     __ptext98:
 25106                           	opt stack 0
 25107  016F00                     _ETH_ResetByteCount:
 25108                           	opt stack 20
 25109                           
 25110                           ;ETHxxJ6x_driver.c: 1123: ethData.saveWRPT = EWRPT;
 25111                           
 25112                           ;incstack = 0
 25113  016F00  CEE2 F228          	movff	3810,_ethData+4	;volatile
 25114  016F04  CEE3 F229          	movff	3811,_ethData+5	;volatile
 25115  016F08  0012               	return		;funcret
 25116  016F0A                     __end_of_ETH_ResetByteCount:
 25117                           	opt stack 0
 25118                           tosu	equ	0xFFF
 25119                           tosh	equ	0xFFE
 25120                           tosl	equ	0xFFD
 25121                           pclath	equ	0xFFA
 25122                           tblptru	equ	0xFF8
 25123                           tblptrh	equ	0xFF7
 25124                           tblptrl	equ	0xFF6
 25125                           tablat	equ	0xFF5
 25126                           prodh	equ	0xFF4
 25127                           prodl	equ	0xFF3
 25128                           intcon	equ	0xFF2
 25129                           indf0	equ	0xFEF
 25130                           postinc0	equ	0xFEE
 25131                           fsr0h	equ	0xFEA
 25132                           fsr0l	equ	0xFE9
 25133                           wreg	equ	0xFE8
 25134                           indf1	equ	0xFE7
 25135                           postinc1	equ	0xFE6
 25136                           postdec1	equ	0xFE5
 25137                           plusw1	equ	0xFE3
 25138                           fsr1h	equ	0xFE2
 25139                           fsr1l	equ	0xFE1
 25140                           indf2	equ	0xFDF
 25141                           postinc2	equ	0xFDE
 25142                           postdec2	equ	0xFDD
 25143                           plusw2	equ	0xFDB
 25144                           fsr2h	equ	0xFDA
 25145                           fsr2l	equ	0xFD9
 25146                           status	equ	0xFD8
 25147                           
 25148 ;; *************** function _ETH_NewPacket *****************
 25149 ;; Defined at:
 25150 ;;		line 1177 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25151 ;; Parameters:    Size  Location     Type
 25152 ;;		None
 25153 ;; Auto vars:     Size  Location     Type
 25154 ;;  index           1   22[COMRAM] unsigned char 
 25155 ;; Return value:  Size  Location     Type
 25156 ;;                  2   18[COMRAM] unsigned int 
 25157 ;; Registers used:
 25158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25159 ;; Tracked objects:
 25160 ;;		On entry : 0/0
 25161 ;;		On exit  : 0/0
 25162 ;;		Unchanged: 0/0
 25163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25166 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25167 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25168 ;;Total ram usage:        5 bytes
 25169 ;; Hardware stack levels used:    1
 25170 ;; Hardware stack levels required when called:    4
 25171 ;; This function calls:
 25172 ;;		Nothing
 25173 ;; This function is called by:
 25174 ;;		_ETH_WriteStart
 25175 ;; This function uses a non-reentrant model
 25176 ;;
 25177                           
 25178                           	psect	text99
 25179  0145E0                     __ptext99:
 25180                           	opt stack 0
 25181  0145E0                     _ETH_NewPacket:
 25182                           	opt stack 20
 25183                           
 25184                           ;ETHxxJ6x_driver.c: 1179: uint8_t index = 0;
 25185                           
 25186                           ;incstack = 0
 25187  0145E0  0E00               	movlw	0
 25188  0145E2  6E17               	movwf	ETH_NewPacket@index,c
 25189                           
 25190                           ;ETHxxJ6x_driver.c: 1181: if( ethListSize == (20) )
 25191  0145E4  0E14               	movlw	20
 25192  0145E6  1848               	xorwf	_ethListSize,w,c
 25193  0145E8  A4D8               	btfss	status,2,c
 25194  0145EA  D0EB               	goto	l773
 25195                           
 25196                           ;ETHxxJ6x_driver.c: 1182: {
 25197                           ;ETHxxJ6x_driver.c: 1183: return (0);
 25198  0145EC  0E00               	movlw	0
 25199  0145EE  6E14               	movwf	?_ETH_NewPacket+1,c
 25200  0145F0  0E00               	movlw	0
 25201  0145F2  6E13               	movwf	?_ETH_NewPacket,c
 25202  0145F4  0012               	return	
 25203  0145F6                     
 25204                           ;ETHxxJ6x_driver.c: 1187: {
 25205                           ;ETHxxJ6x_driver.c: 1188: if( (bool)(txData[index].flags & (0x0001 << 2)) == 0 )
 25206  0145F6  5017               	movf	ETH_NewPacket@index,w,c
 25207  0145F8  0D0A               	mullw	10
 25208  0145FA  0E00               	movlw	low _txData
 25209  0145FC  24F3               	addwf	prodl,w,c
 25210  0145FE  6ED9               	movwf	fsr2l,c
 25211  014600  0E04               	movlw	high _txData
 25212  014602  20F4               	addwfc	prodh,w,c
 25213  014604  6EDA               	movwf	fsr2h,c
 25214  014606  0104               	movlb	4	; () banked
 25215  014608  B4DF               	btfsc	indf2,2,c
 25216  01460A  D0DA               	goto	l775
 25217                           
 25218                           ; BSR set to: 4
 25219                           ;ETHxxJ6x_driver.c: 1189: {
 25220                           ;ETHxxJ6x_driver.c: 1190: txData[index].flags = 0;
 25221  01460C  5017               	movf	ETH_NewPacket@index,w,c
 25222  01460E  0D0A               	mullw	10
 25223  014610  0E00               	movlw	low _txData
 25224  014612  24F3               	addwf	prodl,w,c
 25225  014614  6ED9               	movwf	fsr2l,c
 25226  014616  0E04               	movlw	high _txData
 25227  014618  20F4               	addwfc	prodh,w,c
 25228  01461A  6EDA               	movwf	fsr2h,c
 25229  01461C  0E00               	movlw	0
 25230  01461E  6EDE               	movwf	postinc2,c
 25231  014620  0E00               	movlw	0
 25232  014622  6EDD               	movwf	postdec2,c
 25233                           
 25234                           ; BSR set to: 4
 25235                           
 25236                           ;ETHxxJ6x_driver.c: 1191: do{ txData[index].flags = txData[index].flags | (0x0001 << 2);
      +                           } while(0);
 25237  014624  5017               	movf	ETH_NewPacket@index,w,c
 25238  014626  0D0A               	mullw	10
 25239  014628  0E00               	movlw	low _txData
 25240  01462A  24F3               	addwf	prodl,w,c
 25241  01462C  6ED9               	movwf	fsr2l,c
 25242  01462E  0E04               	movlw	high _txData
 25243  014630  20F4               	addwfc	prodh,w,c
 25244  014632  6EDA               	movwf	fsr2h,c
 25245  014634  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 25246  014638  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 25247  01463C  0E04               	movlw	4
 25248  01463E  1215               	iorwf	??_ETH_NewPacket,f,c
 25249  014640  0E00               	movlw	0
 25250  014642  1216               	iorwf	??_ETH_NewPacket+1,f,c
 25251  014644  5017               	movf	ETH_NewPacket@index,w,c
 25252  014646  0D0A               	mullw	10
 25253  014648  0E00               	movlw	low _txData
 25254  01464A  24F3               	addwf	prodl,w,c
 25255  01464C  6ED9               	movwf	fsr2l,c
 25256  01464E  0E04               	movlw	high _txData
 25257  014650  20F4               	addwfc	prodh,w,c
 25258  014652  6EDA               	movwf	fsr2h,c
 25259  014654  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 25260  014658  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 25261                           
 25262                           ; BSR set to: 4
 25263                           ;ETHxxJ6x_driver.c: 1193: txData[index].packetEnd = ((8192)-1);
 25264  01465C  5017               	movf	ETH_NewPacket@index,w,c
 25265  01465E  0D0A               	mullw	10
 25266  014660  0E04               	movlw	4
 25267  014662  26F3               	addwf	prodl,f,c
 25268  014664  0E00               	movlw	0
 25269  014666  22F4               	addwfc	prodh,f,c
 25270  014668  0E00               	movlw	low _txData
 25271  01466A  24F3               	addwf	prodl,w,c
 25272  01466C  6ED9               	movwf	fsr2l,c
 25273  01466E  0E04               	movlw	high _txData
 25274  014670  20F4               	addwfc	prodh,w,c
 25275  014672  6EDA               	movwf	fsr2h,c
 25276  014674  0EFF               	movlw	255
 25277  014676  6EDE               	movwf	postinc2,c
 25278  014678  0E1F               	movlw	31
 25279  01467A  6EDD               	movwf	postdec2,c
 25280                           
 25281                           ;ETHxxJ6x_driver.c: 1195: txData[index].prevPacket = (0);
 25282  01467C  5017               	movf	ETH_NewPacket@index,w,c
 25283  01467E  0D0A               	mullw	10
 25284  014680  0E06               	movlw	6
 25285  014682  26F3               	addwf	prodl,f,c
 25286  014684  0E00               	movlw	0
 25287  014686  22F4               	addwfc	prodh,f,c
 25288  014688  0E00               	movlw	low _txData
 25289  01468A  24F3               	addwf	prodl,w,c
 25290  01468C  6ED9               	movwf	fsr2l,c
 25291  01468E  0E04               	movlw	high _txData
 25292  014690  20F4               	addwfc	prodh,w,c
 25293  014692  6EDA               	movwf	fsr2h,c
 25294  014694  0E00               	movlw	0
 25295  014696  6EDE               	movwf	postinc2,c
 25296  014698  0E00               	movlw	0
 25297  01469A  6EDD               	movwf	postdec2,c
 25298                           
 25299                           ;ETHxxJ6x_driver.c: 1196: txData[index].nextPacket = pHead;
 25300  01469C  5017               	movf	ETH_NewPacket@index,w,c
 25301  01469E  0D0A               	mullw	10
 25302  0146A0  0E08               	movlw	8
 25303  0146A2  26F3               	addwf	prodl,f,c
 25304  0146A4  0E00               	movlw	0
 25305  0146A6  22F4               	addwfc	prodh,f,c
 25306  0146A8  0E00               	movlw	low _txData
 25307  0146AA  24F3               	addwf	prodl,w,c
 25308  0146AC  6ED9               	movwf	fsr2l,c
 25309  0146AE  0E04               	movlw	high _txData
 25310  0146B0  20F4               	addwfc	prodh,w,c
 25311  0146B2  6EDA               	movwf	fsr2h,c
 25312  0146B4  C045  FFDE         	movff	_pHead,postinc2
 25313  0146B8  C046  FFDD         	movff	_pHead+1,postdec2
 25314                           
 25315                           ; BSR set to: 4
 25316                           ;ETHxxJ6x_driver.c: 1198: if( pHead != (0) )
 25317  0146BC  5045               	movf	_pHead,w,c
 25318  0146BE  1046               	iorwf	_pHead+1,w,c
 25319  0146C0  B4D8               	btfsc	status,2,c
 25320  0146C2  D054               	goto	l778
 25321                           
 25322                           ; BSR set to: 4
 25323                           ;ETHxxJ6x_driver.c: 1199: {
 25324                           ;ETHxxJ6x_driver.c: 1200: pHead->prevPacket = &txData[index];
 25325  0146C4  5017               	movf	ETH_NewPacket@index,w,c
 25326  0146C6  0D0A               	mullw	10
 25327  0146C8  0E00               	movlw	low _txData
 25328  0146CA  6E15               	movwf	??_ETH_NewPacket& (0+255),c
 25329  0146CC  0E04               	movlw	high _txData
 25330  0146CE  6E16               	movwf	(??_ETH_NewPacket+1)& (0+255),c
 25331  0146D0  50F3               	movf	prodl,w,c
 25332  0146D2  2615               	addwf	??_ETH_NewPacket,f,c
 25333  0146D4  50F4               	movf	prodh,w,c
 25334  0146D6  2216               	addwfc	??_ETH_NewPacket+1,f,c
 25335  0146D8  EE20 F006          	lfsr	2,6
 25336  0146DC  5045               	movf	_pHead,w,c
 25337  0146DE  26D9               	addwf	fsr2l,f,c
 25338  0146E0  5046               	movf	_pHead+1,w,c
 25339  0146E2  22DA               	addwfc	fsr2h,f,c
 25340  0146E4  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 25341  0146E8  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 25342                           
 25343                           ;ETHxxJ6x_driver.c: 1201: txData[index].packetStart = pHead->packetEnd + (7);
 25344  0146EC  EE20 F004          	lfsr	2,4
 25345  0146F0  5045               	movf	_pHead,w,c
 25346  0146F2  26D9               	addwf	fsr2l,f,c
 25347  0146F4  5046               	movf	_pHead+1,w,c
 25348  0146F6  22DA               	addwfc	fsr2h,f,c
 25349  0146F8  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 25350  0146FC  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 25351  014700  0E07               	movlw	7
 25352  014702  2615               	addwf	??_ETH_NewPacket,f,c
 25353  014704  0E00               	movlw	0
 25354  014706  2216               	addwfc	??_ETH_NewPacket+1,f,c
 25355  014708  5017               	movf	ETH_NewPacket@index,w,c
 25356  01470A  0D0A               	mullw	10
 25357  01470C  0E02               	movlw	2
 25358  01470E  26F3               	addwf	prodl,f,c
 25359  014710  0E00               	movlw	0
 25360  014712  22F4               	addwfc	prodh,f,c
 25361  014714  0E00               	movlw	low _txData
 25362  014716  24F3               	addwf	prodl,w,c
 25363  014718  6ED9               	movwf	fsr2l,c
 25364  01471A  0E04               	movlw	high _txData
 25365  01471C  20F4               	addwfc	prodh,w,c
 25366  01471E  6EDA               	movwf	fsr2h,c
 25367  014720  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 25368  014724  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 25369                           
 25370                           ;ETHxxJ6x_driver.c: 1204: if( txData[index].packetStart & 0x0001 )
 25371  014728  5017               	movf	ETH_NewPacket@index,w,c
 25372  01472A  0D0A               	mullw	10
 25373  01472C  0E02               	movlw	2
 25374  01472E  26F3               	addwf	prodl,f,c
 25375  014730  0E00               	movlw	0
 25376  014732  22F4               	addwfc	prodh,f,c
 25377  014734  0E00               	movlw	low _txData
 25378  014736  24F3               	addwf	prodl,w,c
 25379  014738  6ED9               	movwf	fsr2l,c
 25380  01473A  0E04               	movlw	high _txData
 25381  01473C  20F4               	addwfc	prodh,w,c
 25382  01473E  6EDA               	movwf	fsr2h,c
 25383  014740  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 25384  014744  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 25385  014748  A015               	btfss	??_ETH_NewPacket,0,c
 25386  01474A  D028               	goto	l780
 25387                           
 25388                           ; BSR set to: 4
 25389                           ;ETHxxJ6x_driver.c: 1205: {
 25390                           ;ETHxxJ6x_driver.c: 1207: ++ txData[index].packetStart;
 25391  01474C  5017               	movf	ETH_NewPacket@index,w,c
 25392  01474E  0D0A               	mullw	10
 25393  014750  0E02               	movlw	2
 25394  014752  26F3               	addwf	prodl,f,c
 25395  014754  0E00               	movlw	0
 25396  014756  22F4               	addwfc	prodh,f,c
 25397  014758  0E00               	movlw	low _txData
 25398  01475A  24F3               	addwf	prodl,w,c
 25399  01475C  6ED9               	movwf	fsr2l,c
 25400  01475E  0E04               	movlw	high _txData
 25401  014760  20F4               	addwfc	prodh,w,c
 25402  014762  6EDA               	movwf	fsr2h,c
 25403  014764  2ADE               	incf	postinc2,f,c
 25404  014766  0E00               	movlw	0
 25405  014768  22DD               	addwfc	postdec2,f,c
 25406                           
 25407                           ; BSR set to: 4
 25408                           ;ETHxxJ6x_driver.c: 1208: }
 25409                           ;ETHxxJ6x_driver.c: 1209: }
 25410  01476A  D018               	goto	l780
 25411  01476C                     l778:
 25412                           
 25413                           ; BSR set to: 4
 25414                           ;ETHxxJ6x_driver.c: 1210: else
 25415                           ;ETHxxJ6x_driver.c: 1211: {
 25416                           ;ETHxxJ6x_driver.c: 1212: txData[index].packetStart = ((8192) - (((1518) + (7)) << 1));
 25417                           
 25418                           ; BSR set to: 4
 25419  01476C  5017               	movf	ETH_NewPacket@index,w,c
 25420  01476E  0D0A               	mullw	10
 25421  014770  0E02               	movlw	2
 25422  014772  26F3               	addwf	prodl,f,c
 25423  014774  0E00               	movlw	0
 25424  014776  22F4               	addwfc	prodh,f,c
 25425  014778  0E00               	movlw	low _txData
 25426  01477A  24F3               	addwf	prodl,w,c
 25427  01477C  6ED9               	movwf	fsr2l,c
 25428  01477E  0E04               	movlw	high _txData
 25429  014780  20F4               	addwfc	prodh,w,c
 25430  014782  6EDA               	movwf	fsr2h,c
 25431  014784  0E16               	movlw	22
 25432  014786  6EDE               	movwf	postinc2,c
 25433  014788  0E14               	movlw	20
 25434  01478A  6EDD               	movwf	postdec2,c
 25435                           
 25436                           ; BSR set to: 4
 25437                           ;ETHxxJ6x_driver.c: 1213: pTail = (txPacket_t*)&txData[index];
 25438  01478C  5017               	movf	ETH_NewPacket@index,w,c
 25439  01478E  0D0A               	mullw	10
 25440  014790  0E00               	movlw	low _txData
 25441  014792  24F3               	addwf	prodl,w,c
 25442  014794  6E43               	movwf	_pTail,c
 25443  014796  0E04               	movlw	high _txData
 25444  014798  20F4               	addwfc	prodh,w,c
 25445  01479A  6E44               	movwf	_pTail+1,c
 25446  01479C                     l780:
 25447                           
 25448                           ; BSR set to: 4
 25449                           ;ETHxxJ6x_driver.c: 1214: }
 25450                           ;ETHxxJ6x_driver.c: 1216: pHead = (txPacket_t*)&txData[index];
 25451                           
 25452                           ; BSR set to: 4
 25453  01479C  5017               	movf	ETH_NewPacket@index,w,c
 25454  01479E  0D0A               	mullw	10
 25455  0147A0  0E00               	movlw	low _txData
 25456  0147A2  24F3               	addwf	prodl,w,c
 25457  0147A4  6E45               	movwf	_pHead,c
 25458  0147A6  0E04               	movlw	high _txData
 25459  0147A8  20F4               	addwfc	prodh,w,c
 25460  0147AA  6E46               	movwf	_pHead+1,c
 25461                           
 25462                           ; BSR set to: 4
 25463                           ;ETHxxJ6x_driver.c: 1218: ethListSize ++;
 25464  0147AC  2A48               	incf	_ethListSize,f,c
 25465                           
 25466                           ; BSR set to: 4
 25467                           ;ETHxxJ6x_driver.c: 1219: return (uint16_t)(&txData[index]);
 25468  0147AE  5017               	movf	ETH_NewPacket@index,w,c
 25469  0147B0  0D0A               	mullw	10
 25470  0147B2  0E00               	movlw	low _txData
 25471  0147B4  24F3               	addwf	prodl,w,c
 25472  0147B6  6E13               	movwf	?_ETH_NewPacket,c
 25473  0147B8  0E04               	movlw	high _txData
 25474  0147BA  20F4               	addwfc	prodh,w,c
 25475  0147BC  6E14               	movwf	?_ETH_NewPacket+1,c
 25476                           
 25477                           ; BSR set to: 4
 25478  0147BE  0012               	return	
 25479  0147C0                     l775:
 25480                           
 25481                           ; BSR set to: 4
 25482                           ;ETHxxJ6x_driver.c: 1220: }
 25483                           ;ETHxxJ6x_driver.c: 1221: index ++;
 25484                           
 25485                           ; BSR set to: 4
 25486  0147C0  2A17               	incf	ETH_NewPacket@index,f,c
 25487  0147C2                     l773:
 25488                           
 25489                           ; BSR set to: 4
 25490  0147C2  0E13               	movlw	19
 25491  0147C4  6417               	cpfsgt	ETH_NewPacket@index,c
 25492  0147C6  D717               	goto	l774
 25493                           
 25494                           ;ETHxxJ6x_driver.c: 1222: }
 25495                           ;ETHxxJ6x_driver.c: 1224: return (0);
 25496  0147C8  0E00               	movlw	0
 25497  0147CA  6E14               	movwf	?_ETH_NewPacket+1,c
 25498  0147CC  0E00               	movlw	0
 25499  0147CE  6E13               	movwf	?_ETH_NewPacket,c
 25500  0147D0  0012               	return	
 25501  0147D2                     __end_of_ETH_NewPacket:
 25502                           	opt stack 0
 25503                           tosu	equ	0xFFF
 25504                           tosh	equ	0xFFE
 25505                           tosl	equ	0xFFD
 25506                           pclath	equ	0xFFA
 25507                           tblptru	equ	0xFF8
 25508                           tblptrh	equ	0xFF7
 25509                           tblptrl	equ	0xFF6
 25510                           tablat	equ	0xFF5
 25511                           prodh	equ	0xFF4
 25512                           prodl	equ	0xFF3
 25513                           intcon	equ	0xFF2
 25514                           indf0	equ	0xFEF
 25515                           postinc0	equ	0xFEE
 25516                           fsr0h	equ	0xFEA
 25517                           fsr0l	equ	0xFE9
 25518                           wreg	equ	0xFE8
 25519                           indf1	equ	0xFE7
 25520                           postinc1	equ	0xFE6
 25521                           postdec1	equ	0xFE5
 25522                           plusw1	equ	0xFE3
 25523                           fsr1h	equ	0xFE2
 25524                           fsr1l	equ	0xFE1
 25525                           indf2	equ	0xFDF
 25526                           postinc2	equ	0xFDE
 25527                           postdec2	equ	0xFDD
 25528                           plusw2	equ	0xFDB
 25529                           fsr2h	equ	0xFDA
 25530                           fsr2l	equ	0xFD9
 25531                           status	equ	0xFD8
 25532                           
 25533 ;; *************** function _ETH_WriteBlock *****************
 25534 ;; Defined at:
 25535 ;;		line 596 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25536 ;; Parameters:    Size  Location     Type
 25537 ;;  buffer          2   18[COMRAM] PTR const void 
 25538 ;;		 -> tftp_option(8), tftp_msg.tftp_block_size(5), tftp_msg.tftp_filename(32), tftp_msg(41), 
 25539 ;;		 -> STR_11(5), STR_10(6), STR_9(9), TCP_Snd@txHeader(20), 
 25540 ;;		 -> NULL(0), ARPV4_Request@header(28), ARPV4_Packet@header(28), hostMacAddress(6), 
 25541 ;;  length          2   20[COMRAM] unsigned int 
 25542 ;; Auto vars:     Size  Location     Type
 25543 ;;  p               2   22[COMRAM] PTR const unsigned char 
 25544 ;;		 -> tftp_option(8), tftp_msg.tftp_block_size(5), tftp_msg.tftp_filename(32), tftp_msg(41), 
 25545 ;;		 -> STR_11(5), STR_10(6), STR_9(9), TCP_Snd@txHeader(20), 
 25546 ;;		 -> NULL(0), ARPV4_Request@header(28), ARPV4_Packet@header(28), hostMacAddress(6), 
 25547 ;; Return value:  Size  Location     Type
 25548 ;;                  2   18[COMRAM] unsigned int 
 25549 ;; Registers used:
 25550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25551 ;; Tracked objects:
 25552 ;;		On entry : 0/0
 25553 ;;		On exit  : 0/0
 25554 ;;		Unchanged: 0/0
 25555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25559 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25560 ;;Total ram usage:        6 bytes
 25561 ;; Hardware stack levels used:    1
 25562 ;; Hardware stack levels required when called:    5
 25563 ;; This function calls:
 25564 ;;		_ETH_EdataWrite
 25565 ;; This function is called by:
 25566 ;;		_ARPV4_Packet
 25567 ;;		_ARPV4_Request
 25568 ;;		_sendRequest
 25569 ;;		_TCP_Snd
 25570 ;;		_TFTP_Read_Write_Request
 25571 ;; This function uses a non-reentrant model
 25572 ;;
 25573                           
 25574                           	psect	text100
 25575  016692                     __ptext100:
 25576                           	opt stack 0
 25577  016692                     _ETH_WriteBlock:
 25578                           	opt stack 19
 25579                           
 25580                           ;ETHxxJ6x_driver.c: 598: const char *p = buffer;
 25581                           
 25582                           ;incstack = 0
 25583  016692  C013  F017         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 25584  016696  C014  F018         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 25585                           
 25586                           ;ETHxxJ6x_driver.c: 599: while(length-- && (EWRPT < ((8192)-1)))
 25587  01669A  D015               	goto	l600
 25588  01669C                     
 25589                           ;ETHxxJ6x_driver.c: 600: {
 25590                           ;ETHxxJ6x_driver.c: 601: ETH_EdataWrite(*p++);
 25591  01669C  C017  FFF6         	movff	ETH_WriteBlock@p,tblptrl
 25592  0166A0  C018  FFF7         	movff	ETH_WriteBlock@p+1,tblptrh
 25593  0166A4  0E00               	movlw	low (__mediumconst shr (0+16))
 25594  0166A6  6EF8               	movwf	tblptru,c
 25595  0166A8  0E0F               	movlw	(high __ramtop+-1)
 25596  0166AA  64F7               	cpfsgt	tblptrh,c
 25597  0166AC  D003               	bra	u9587
 25598  0166AE  0008               	tblrd		*
 25599  0166B0  50F5               	movf	tablat,w,c
 25600  0166B2  D005               	bra	u9580
 25601  0166B4                     u9587:
 25602  0166B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 25603  0166B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 25604  0166BC  50EF               	movf	indf0,w,c
 25605  0166BE                     u9580:
 25606  0166BE  EC9A  F0B7         	call	_ETH_EdataWrite
 25607  0166C2  4A17               	infsnz	ETH_WriteBlock@p,f,c
 25608  0166C4  2A18               	incf	ETH_WriteBlock@p+1,f,c
 25609  0166C6                     l600:
 25610  0166C6  0615               	decf	ETH_WriteBlock@length,f,c
 25611  0166C8  A0D8               	btfss	status,0,c
 25612  0166CA  0616               	decf	ETH_WriteBlock@length+1,f,c
 25613  0166CC  2815               	incf	ETH_WriteBlock@length,w,c
 25614  0166CE  E103               	bnz	u9590
 25615  0166D0  2816               	incf	ETH_WriteBlock@length+1,w,c
 25616  0166D2  B4D8               	btfsc	status,2,c
 25617  0166D4  0012               	return	
 25618  0166D6                     u9590:
 25619  0166D6  010E               	movlb	14	; () banked
 25620  0166D8  29E2               	incf	226,w,b	;volatile
 25621  0166DA  0E1F               	movlw	31
 25622  0166DC  59E3               	subwfb	227,w,b	;volatile
 25623  0166DE  B0D8               	btfsc	status,0,c
 25624  0166E0  0012               	return	
 25625  0166E2  D7DC               	goto	l601
 25626  0166E4                     __end_of_ETH_WriteBlock:
 25627                           	opt stack 0
 25628                           tosu	equ	0xFFF
 25629                           tosh	equ	0xFFE
 25630                           tosl	equ	0xFFD
 25631                           pclath	equ	0xFFA
 25632                           tblptru	equ	0xFF8
 25633                           tblptrh	equ	0xFF7
 25634                           tblptrl	equ	0xFF6
 25635                           tablat	equ	0xFF5
 25636                           prodh	equ	0xFF4
 25637                           prodl	equ	0xFF3
 25638                           intcon	equ	0xFF2
 25639                           indf0	equ	0xFEF
 25640                           postinc0	equ	0xFEE
 25641                           fsr0h	equ	0xFEA
 25642                           fsr0l	equ	0xFE9
 25643                           wreg	equ	0xFE8
 25644                           indf1	equ	0xFE7
 25645                           postinc1	equ	0xFE6
 25646                           postdec1	equ	0xFE5
 25647                           plusw1	equ	0xFE3
 25648                           fsr1h	equ	0xFE2
 25649                           fsr1l	equ	0xFE1
 25650                           indf2	equ	0xFDF
 25651                           postinc2	equ	0xFDE
 25652                           postdec2	equ	0xFDD
 25653                           plusw2	equ	0xFDB
 25654                           fsr2h	equ	0xFDA
 25655                           fsr2l	equ	0xFD9
 25656                           status	equ	0xFD8
 25657                           
 25658 ;; *************** function _ARPV4_Lookup *****************
 25659 ;; Defined at:
 25660 ;;		line 238 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 25661 ;; Parameters:    Size  Location     Type
 25662 ;;  ip_address      4   18[COMRAM] unsigned long 
 25663 ;; Auto vars:     Size  Location     Type
 25664 ;;  entry_pointe    2   26[COMRAM] PTR struct .
 25665 ;;		 -> arpMap(104), 
 25666 ;;  x               1   28[COMRAM] unsigned char 
 25667 ;; Return value:  Size  Location     Type
 25668 ;;                  2   18[COMRAM] PTR struct .
 25669 ;; Registers used:
 25670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25671 ;; Tracked objects:
 25672 ;;		On entry : 0/0
 25673 ;;		On exit  : 0/0
 25674 ;;		Unchanged: 0/0
 25675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25677 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25678 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25679 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25680 ;;Total ram usage:       11 bytes
 25681 ;; Hardware stack levels used:    1
 25682 ;; Hardware stack levels required when called:    4
 25683 ;; This function calls:
 25684 ;;		Nothing
 25685 ;; This function is called by:
 25686 ;;		_IPv4_Start
 25687 ;; This function uses a non-reentrant model
 25688 ;;
 25689                           
 25690                           	psect	text101
 25691  0164E2                     __ptext101:
 25692                           	opt stack 0
 25693  0164E2                     _ARPV4_Lookup:
 25694                           	opt stack 21
 25695                           
 25696                           ;arpv4.c: 240: arpMap_t *entry_pointer = arpMap;
 25697                           
 25698                           ;incstack = 0
 25699  0164E2  0E10               	movlw	low _arpMap
 25700  0164E4  6E1B               	movwf	ARPV4_Lookup@entry_pointer,c
 25701  0164E6  0E03               	movlw	high _arpMap
 25702  0164E8  6E1C               	movwf	ARPV4_Lookup@entry_pointer+1,c
 25703                           
 25704                           ;arpv4.c: 241: uint8_t x;
 25705                           ;arpv4.c: 243: for(x = 0; x < 8; x++)
 25706  0164EA  0E00               	movlw	0
 25707  0164EC  6E1D               	movwf	ARPV4_Lookup@x,c
 25708  0164EE                     l10358:
 25709  0164EE  0E07               	movlw	7
 25710  0164F0  641D               	cpfsgt	ARPV4_Lookup@x,c
 25711  0164F2  D001               	goto	l342
 25712  0164F4  D01E               	goto	u9760
 25713  0164F6                     l342:
 25714                           
 25715                           ;arpv4.c: 244: {
 25716                           ;arpv4.c: 245: if(entry_pointer->ipAddress == ip_address)
 25717  0164F6  EE20 F006          	lfsr	2,6
 25718  0164FA  501B               	movf	ARPV4_Lookup@entry_pointer,w,c
 25719  0164FC  26D9               	addwf	fsr2l,f,c
 25720  0164FE  501C               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 25721  016500  22DA               	addwfc	fsr2h,f,c
 25722  016502  5013               	movf	ARPV4_Lookup@ip_address,w,c
 25723  016504  18DE               	xorwf	postinc2,w,c
 25724  016506  E10F               	bnz	l10368
 25725  016508  5014               	movf	ARPV4_Lookup@ip_address+1,w,c
 25726  01650A  18DE               	xorwf	postinc2,w,c
 25727  01650C  E10C               	bnz	l10368
 25728  01650E  5015               	movf	ARPV4_Lookup@ip_address+2,w,c
 25729  016510  18DE               	xorwf	postinc2,w,c
 25730  016512  E109               	bnz	l10368
 25731  016514  5016               	movf	ARPV4_Lookup@ip_address+3,w,c
 25732  016516  18DE               	xorwf	postinc2,w,c
 25733  016518  A4D8               	btfss	status,2,c
 25734  01651A  D005               	goto	l344
 25735                           
 25736                           ;arpv4.c: 246: return &entry_pointer->macAddress;
 25737  01651C  C01B  F013         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 25738  016520  C01C  F014         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 25739  016524  0012               	return	
 25740  016526                     l344:
 25741  016526                     l10368:
 25742                           
 25743                           ;arpv4.c: 247: entry_pointer ++;
 25744  016526  0E0D               	movlw	13
 25745  016528  261B               	addwf	ARPV4_Lookup@entry_pointer,f,c
 25746  01652A  0E00               	movlw	0
 25747  01652C  221C               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 25748  01652E  2A1D               	incf	ARPV4_Lookup@x,f,c
 25749  016530  D7DE               	goto	l10358
 25750  016532                     u9760:
 25751                           
 25752                           ;arpv4.c: 248: }
 25753                           ;arpv4.c: 249: return 0;
 25754  016532  0E00               	movlw	0
 25755  016534  6E13               	movwf	?_ARPV4_Lookup,c
 25756  016536  0E00               	movlw	0
 25757  016538  6E14               	movwf	?_ARPV4_Lookup+1,c
 25758  01653A  0012               	return	
 25759  01653C                     __end_of_ARPV4_Lookup:
 25760                           	opt stack 0
 25761                           tosu	equ	0xFFF
 25762                           tosh	equ	0xFFE
 25763                           tosl	equ	0xFFD
 25764                           pclath	equ	0xFFA
 25765                           tblptru	equ	0xFF8
 25766                           tblptrh	equ	0xFF7
 25767                           tblptrl	equ	0xFF6
 25768                           tablat	equ	0xFF5
 25769                           prodh	equ	0xFF4
 25770                           prodl	equ	0xFF3
 25771                           intcon	equ	0xFF2
 25772                           indf0	equ	0xFEF
 25773                           postinc0	equ	0xFEE
 25774                           fsr0h	equ	0xFEA
 25775                           fsr0l	equ	0xFE9
 25776                           wreg	equ	0xFE8
 25777                           indf1	equ	0xFE7
 25778                           postinc1	equ	0xFE6
 25779                           postdec1	equ	0xFE5
 25780                           plusw1	equ	0xFE3
 25781                           fsr1h	equ	0xFE2
 25782                           fsr1l	equ	0xFE1
 25783                           indf2	equ	0xFDF
 25784                           postinc2	equ	0xFDE
 25785                           postdec2	equ	0xFDD
 25786                           plusw2	equ	0xFDB
 25787                           fsr2h	equ	0xFDA
 25788                           fsr2l	equ	0xFD9
 25789                           status	equ	0xFD8
 25790                           
 25791 ;; *************** function _UDP_Send *****************
 25792 ;; Defined at:
 25793 ;;		line 94 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 25794 ;; Parameters:    Size  Location     Type
 25795 ;;		None
 25796 ;; Auto vars:     Size  Location     Type
 25797 ;;  udpLength       2   22[BANK0 ] unsigned int 
 25798 ;;  cksm            2   20[BANK0 ] unsigned int 
 25799 ;;  ret             1   19[BANK0 ] enum E393
 25800 ;; Return value:  Size  Location     Type
 25801 ;;                  1    wreg      enum E393
 25802 ;; Registers used:
 25803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25804 ;; Tracked objects:
 25805 ;;		On entry : 0/0
 25806 ;;		On exit  : 0/0
 25807 ;;		Unchanged: 0/0
 25808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25810 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25811 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25812 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25813 ;;Total ram usage:        9 bytes
 25814 ;; Hardware stack levels used:    1
 25815 ;; Hardware stack levels required when called:    8
 25816 ;; This function calls:
 25817 ;;		_ETH_GetByteCount
 25818 ;;		_ETH_Insert
 25819 ;;		_ETH_TxComputeChecksum
 25820 ;;		_IPV4_Send
 25821 ;; This function is called by:
 25822 ;;		_sendRequest
 25823 ;;		_TFTP_Ack
 25824 ;;		_DNS_Query
 25825 ;;		_NTP_Request
 25826 ;;		_TFTP_Read_Write_Request
 25827 ;; This function uses a non-reentrant model
 25828 ;;
 25829                           
 25830                           	psect	text102
 25831  015588                     __ptext102:
 25832                           	opt stack 0
 25833  015588                     _UDP_Send:
 25834                           	opt stack 16
 25835                           
 25836                           ;udpv4.c: 96: uint16_t udpLength;
 25837                           ;udpv4.c: 97: uint16_t cksm;
 25838                           ;udpv4.c: 98: error_msg ret = ERROR;
 25839                           
 25840                           ;incstack = 0
 25841  015588  0E00               	movlw	0
 25842  01558A  0100               	movlb	0	; () banked
 25843  01558C  6F73               	movwf	UDP_Send@ret& (0+255),b
 25844                           
 25845                           ; BSR set to: 0
 25846                           ;udpv4.c: 100: udpLength = ETH_GetByteCount();
 25847  01558E  EC6F  F0B6         	call	_ETH_GetByteCount	;wreg free
 25848  015592  C013  F076         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 25849  015596  C014  F077         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 25850                           
 25851                           ;udpv4.c: 101: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 25852  01559A  0100               	movlb	0	; () banked
 25853  01559C  5176               	movf	UDP_Send@udpLength& (0+255),w,b
 25854  01559E  6F70               	movwf	(??_UDP_Send+1)& (0+255),b
 25855  0155A0  6B6F               	clrf	??_UDP_Send& (0+255),b
 25856  0155A2  C076  F071         	movff	UDP_Send@udpLength,??_UDP_Send+2
 25857  0155A6  C077  F072         	movff	UDP_Send@udpLength+1,??_UDP_Send+3
 25858  0155AA  C072  F071         	movff	??_UDP_Send+3,??_UDP_Send+2
 25859  0155AE  6B72               	clrf	(??_UDP_Send+3)& (0+255),b
 25860  0155B0  0EFF               	movlw	255
 25861  0155B2  1771               	andwf	(??_UDP_Send+2)& (0+255),f,b
 25862  0155B4  0E00               	movlw	0
 25863  0155B6  1772               	andwf	(??_UDP_Send+3)& (0+255),f,b
 25864  0155B8  516F               	movf	??_UDP_Send& (0+255),w,b
 25865  0155BA  1171               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 25866  0155BC  6F76               	movwf	UDP_Send@udpLength& (0+255),b
 25867  0155BE  5170               	movf	(??_UDP_Send+1)& (0+255),w,b
 25868  0155C0  1172               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 25869  0155C2  6F77               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 25870                           
 25871                           ; BSR set to: 0
 25872                           ;udpv4.c: 102: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (size_t)(((char*)&((udpHeader_t *)1)->length)-1));
 25873  0155C4  0E76               	movlw	low UDP_Send@udpLength
 25874  0155C6  6E13               	movwf	ETH_Insert@data,c
 25875  0155C8  0E00               	movlw	high UDP_Send@udpLength
 25876  0155CA  6E14               	movwf	ETH_Insert@data+1,c
 25877  0155CC  0E00               	movlw	0
 25878  0155CE  6E16               	movwf	ETH_Insert@len+1,c
 25879  0155D0  0E02               	movlw	2
 25880  0155D2  6E15               	movwf	ETH_Insert@len,c
 25881  0155D4  0E00               	movlw	0
 25882  0155D6  6E18               	movwf	ETH_Insert@offset+1,c
 25883  0155D8  0E26               	movlw	38
 25884  0155DA  6E17               	movwf	ETH_Insert@offset,c
 25885  0155DC  ECB7  F0B1         	call	_ETH_Insert	;wreg free
 25886                           
 25887                           ;udpv4.c: 103: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 25888  0155E0  0100               	movlb	0	; () banked
 25889  0155E2  5176               	movf	UDP_Send@udpLength& (0+255),w,b
 25890  0155E4  6F70               	movwf	(??_UDP_Send+1)& (0+255),b
 25891  0155E6  6B6F               	clrf	??_UDP_Send& (0+255),b
 25892  0155E8  C076  F071         	movff	UDP_Send@udpLength,??_UDP_Send+2
 25893  0155EC  C077  F072         	movff	UDP_Send@udpLength+1,??_UDP_Send+3
 25894  0155F0  C072  F071         	movff	??_UDP_Send+3,??_UDP_Send+2
 25895  0155F4  6B72               	clrf	(??_UDP_Send+3)& (0+255),b
 25896  0155F6  0EFF               	movlw	255
 25897  0155F8  1771               	andwf	(??_UDP_Send+2)& (0+255),f,b
 25898  0155FA  0E00               	movlw	0
 25899  0155FC  1772               	andwf	(??_UDP_Send+3)& (0+255),f,b
 25900  0155FE  516F               	movf	??_UDP_Send& (0+255),w,b
 25901  015600  1171               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 25902  015602  6F76               	movwf	UDP_Send@udpLength& (0+255),b
 25903  015604  5170               	movf	(??_UDP_Send+1)& (0+255),w,b
 25904  015606  1172               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 25905  015608  6F77               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 25906                           
 25907                           ; BSR set to: 0
 25908                           ;udpv4.c: 106: cksm = udpLength + UDP_TCPIP;
 25909  01560A  0E11               	movlw	17
 25910  01560C  2576               	addwf	UDP_Send@udpLength& (0+255),w,b
 25911  01560E  6F74               	movwf	UDP_Send@cksm& (0+255),b
 25912  015610  0E00               	movlw	0
 25913  015612  2177               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 25914  015614  6F75               	movwf	(UDP_Send@cksm+1)& (0+255),b
 25915                           
 25916                           ; BSR set to: 0
 25917                           ;udpv4.c: 107: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 25918  015616  0E00               	movlw	0
 25919  015618  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 25920  01561A  0E1A               	movlw	26
 25921  01561C  6E25               	movwf	ETH_TxComputeChecksum@position,c
 25922  01561E  0E08               	movlw	8
 25923  015620  2576               	addwf	UDP_Send@udpLength& (0+255),w,b
 25924  015622  6E27               	movwf	ETH_TxComputeChecksum@len,c
 25925  015624  0E00               	movlw	0
 25926  015626  2177               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 25927  015628  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 25928  01562A  C074  F029         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 25929  01562E  C075  F02A         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 25930  015632  EC91  F0AC         	call	_ETH_TxComputeChecksum	;wreg free
 25931  015636  C025  F074         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 25932  01563A  C026  F075         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 25933                           
 25934                           ;udpv4.c: 110: if (cksm == 0){
 25935  01563E  0100               	movlb	0	; () banked
 25936  015640  5174               	movf	UDP_Send@cksm& (0+255),w,b
 25937  015642  1175               	iorwf	(UDP_Send@cksm+1)& (0+255),w,b
 25938  015644  A4D8               	btfss	status,2,c
 25939  015646  D002               	goto	l1233
 25940                           
 25941                           ; BSR set to: 0
 25942                           ;udpv4.c: 111: cksm = 0xffff;
 25943  015648  6974               	setf	UDP_Send@cksm& (0+255),b
 25944  01564A  6975               	setf	(UDP_Send@cksm+1)& (0+255),b
 25945  01564C                     l1233:
 25946                           
 25947                           ; BSR set to: 0
 25948                           ;udpv4.c: 112: }
 25949                           ;udpv4.c: 114: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((udpHeader_t *)1)->checksum)-1));
 25950                           
 25951                           ; BSR set to: 0
 25952  01564C  0E74               	movlw	low UDP_Send@cksm
 25953  01564E  6E13               	movwf	ETH_Insert@data,c
 25954  015650  0E00               	movlw	high UDP_Send@cksm
 25955  015652  6E14               	movwf	ETH_Insert@data+1,c
 25956  015654  0E00               	movlw	0
 25957  015656  6E16               	movwf	ETH_Insert@len+1,c
 25958  015658  0E02               	movlw	2
 25959  01565A  6E15               	movwf	ETH_Insert@len,c
 25960  01565C  0E00               	movlw	0
 25961  01565E  6E18               	movwf	ETH_Insert@offset+1,c
 25962  015660  0E28               	movlw	40
 25963  015662  6E17               	movwf	ETH_Insert@offset,c
 25964  015664  ECB7  F0B1         	call	_ETH_Insert	;wreg free
 25965                           
 25966                           ;udpv4.c: 116: ret = IPV4_Send(udpLength);
 25967  015668  C076  F037         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 25968  01566C  C077  F038         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 25969  015670  ECAE  F0AE         	call	_IPV4_Send	;wreg free
 25970  015674  0100               	movlb	0	; () banked
 25971  015676  6F73               	movwf	UDP_Send@ret& (0+255),b
 25972  015678  0012               	return	
 25973  01567A                     __end_of_UDP_Send:
 25974                           	opt stack 0
 25975                           tosu	equ	0xFFF
 25976                           tosh	equ	0xFFE
 25977                           tosl	equ	0xFFD
 25978                           pclath	equ	0xFFA
 25979                           tblptru	equ	0xFF8
 25980                           tblptrh	equ	0xFF7
 25981                           tblptrl	equ	0xFF6
 25982                           tablat	equ	0xFF5
 25983                           prodh	equ	0xFF4
 25984                           prodl	equ	0xFF3
 25985                           intcon	equ	0xFF2
 25986                           indf0	equ	0xFEF
 25987                           postinc0	equ	0xFEE
 25988                           fsr0h	equ	0xFEA
 25989                           fsr0l	equ	0xFE9
 25990                           wreg	equ	0xFE8
 25991                           indf1	equ	0xFE7
 25992                           postinc1	equ	0xFE6
 25993                           postdec1	equ	0xFE5
 25994                           plusw1	equ	0xFE3
 25995                           fsr1h	equ	0xFE2
 25996                           fsr1l	equ	0xFE1
 25997                           indf2	equ	0xFDF
 25998                           postinc2	equ	0xFDE
 25999                           postdec2	equ	0xFDD
 26000                           plusw2	equ	0xFDB
 26001                           fsr2h	equ	0xFDA
 26002                           fsr2l	equ	0xFD9
 26003                           status	equ	0xFD8
 26004                           
 26005 ;; *************** function _IPV4_Send *****************
 26006 ;; Defined at:
 26007 ;;		line 262 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 26008 ;; Parameters:    Size  Location     Type
 26009 ;;  payloadLengt    2   54[COMRAM] unsigned int 
 26010 ;; Auto vars:     Size  Location     Type
 26011 ;;  totalLength     2   13[BANK0 ] unsigned int 
 26012 ;;  cksm            2   11[BANK0 ] unsigned int 
 26013 ;;  ret             1   10[BANK0 ] enum E392
 26014 ;; Return value:  Size  Location     Type
 26015 ;;                  1    wreg      enum E392
 26016 ;; Registers used:
 26017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26018 ;; Tracked objects:
 26019 ;;		On entry : 0/0
 26020 ;;		On exit  : 0/0
 26021 ;;		Unchanged: 0/0
 26022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26024 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26026 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26027 ;;Total ram usage:       11 bytes
 26028 ;; Hardware stack levels used:    1
 26029 ;; Hardware stack levels required when called:    7
 26030 ;; This function calls:
 26031 ;;		_ETH_Insert
 26032 ;;		_ETH_Send
 26033 ;;		_ETH_TxComputeChecksum
 26034 ;; This function is called by:
 26035 ;;		_ICMP_EchoReply
 26036 ;;		_ICMP_PortUnreachable
 26037 ;;		_UDP_Send
 26038 ;;		_TCP_Snd
 26039 ;; This function uses a non-reentrant model
 26040 ;;
 26041                           
 26042                           	psect	text103
 26043  015D5C                     __ptext103:
 26044                           	opt stack 0
 26045  015D5C                     _IPV4_Send:
 26046                           	opt stack 19
 26047                           
 26048                           ;ipv4.c: 264: uint16_t totalLength;
 26049                           ;ipv4.c: 265: uint16_t cksm;
 26050                           ;ipv4.c: 266: error_msg ret;
 26051                           ;ipv4.c: 268: totalLength = 20 + payloadLength;
 26052                           
 26053                           ; BSR set to: 0
 26054                           ;incstack = 0
 26055  015D5C  0E14               	movlw	20
 26056  015D5E  2437               	addwf	IPV4_Send@payloadLength,w,c
 26057  015D60  0100               	movlb	0	; () banked
 26058  015D62  6F6D               	movwf	IPV4_Send@totalLength& (0+255),b
 26059  015D64  0E00               	movlw	0
 26060  015D66  2038               	addwfc	IPV4_Send@payloadLength+1,w,c
 26061  015D68  6F6E               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 26062                           
 26063                           ;ipv4.c: 269: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 26064  015D6A  516D               	movf	IPV4_Send@totalLength& (0+255),w,b
 26065  015D6C  6F67               	movwf	(??_IPV4_Send+1)& (0+255),b
 26066  015D6E  6B66               	clrf	??_IPV4_Send& (0+255),b
 26067  015D70  C06D  F068         	movff	IPV4_Send@totalLength,??_IPV4_Send+2
 26068  015D74  C06E  F069         	movff	IPV4_Send@totalLength+1,??_IPV4_Send+3
 26069  015D78  C069  F068         	movff	??_IPV4_Send+3,??_IPV4_Send+2
 26070  015D7C  6B69               	clrf	(??_IPV4_Send+3)& (0+255),b
 26071  015D7E  0EFF               	movlw	255
 26072  015D80  1768               	andwf	(??_IPV4_Send+2)& (0+255),f,b
 26073  015D82  0E00               	movlw	0
 26074  015D84  1769               	andwf	(??_IPV4_Send+3)& (0+255),f,b
 26075  015D86  5166               	movf	??_IPV4_Send& (0+255),w,b
 26076  015D88  1168               	iorwf	(??_IPV4_Send+2)& (0+255),w,b
 26077  015D8A  6F6D               	movwf	IPV4_Send@totalLength& (0+255),b
 26078  015D8C  5167               	movf	(??_IPV4_Send+1)& (0+255),w,b
 26079  015D8E  1169               	iorwf	(??_IPV4_Send+3)& (0+255),w,b
 26080  015D90  6F6E               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 26081                           
 26082                           ; BSR set to: 0
 26083                           ;ipv4.c: 272: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (size_t)(((c
      +                          har*)&((ipv4Header_t *)1)->length)-1));
 26084  015D92  0E6D               	movlw	low IPV4_Send@totalLength
 26085  015D94  6E13               	movwf	ETH_Insert@data,c
 26086  015D96  0E00               	movlw	high IPV4_Send@totalLength
 26087  015D98  6E14               	movwf	ETH_Insert@data+1,c
 26088  015D9A  0E00               	movlw	0
 26089  015D9C  6E16               	movwf	ETH_Insert@len+1,c
 26090  015D9E  0E02               	movlw	2
 26091  015DA0  6E15               	movwf	ETH_Insert@len,c
 26092  015DA2  0E00               	movlw	0
 26093  015DA4  6E18               	movwf	ETH_Insert@offset+1,c
 26094  015DA6  0E10               	movlw	16
 26095  015DA8  6E17               	movwf	ETH_Insert@offset,c
 26096  015DAA  ECB7  F0B1         	call	_ETH_Insert	;wreg free
 26097                           
 26098                           ;ipv4.c: 274: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 26099  015DAE  0E00               	movlw	0
 26100  015DB0  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 26101  015DB2  0E0E               	movlw	14
 26102  015DB4  6E25               	movwf	ETH_TxComputeChecksum@position,c
 26103  015DB6  0E00               	movlw	0
 26104  015DB8  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 26105  015DBA  0E14               	movlw	20
 26106  015DBC  6E27               	movwf	ETH_TxComputeChecksum@len,c
 26107  015DBE  0E00               	movlw	0
 26108  015DC0  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
 26109  015DC2  0E00               	movlw	0
 26110  015DC4  6E29               	movwf	ETH_TxComputeChecksum@seed,c
 26111  015DC6  EC91  F0AC         	call	_ETH_TxComputeChecksum	;wreg free
 26112  015DCA  C025  F06B         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 26113  015DCE  C026  F06C         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 26114                           
 26115                           ;ipv4.c: 276: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (size_t)(((char*)&(
      +                          (ipv4Header_t *)1)->headerCksm)-1));
 26116  015DD2  0E6B               	movlw	low IPV4_Send@cksm
 26117  015DD4  6E13               	movwf	ETH_Insert@data,c
 26118  015DD6  0E00               	movlw	high IPV4_Send@cksm
 26119  015DD8  6E14               	movwf	ETH_Insert@data+1,c
 26120  015DDA  0E00               	movlw	0
 26121  015DDC  6E16               	movwf	ETH_Insert@len+1,c
 26122  015DDE  0E02               	movlw	2
 26123  015DE0  6E15               	movwf	ETH_Insert@len,c
 26124  015DE2  0E00               	movlw	0
 26125  015DE4  6E18               	movwf	ETH_Insert@offset+1,c
 26126  015DE6  0E18               	movlw	24
 26127  015DE8  6E17               	movwf	ETH_Insert@offset,c
 26128  015DEA  ECB7  F0B1         	call	_ETH_Insert	;wreg free
 26129                           
 26130                           ;ipv4.c: 277: ret = ETH_Send();
 26131  015DEE  ECBB  F0AD         	call	_ETH_Send	;wreg free
 26132  015DF2  0100               	movlb	0	; () banked
 26133  015DF4  6F6A               	movwf	IPV4_Send@ret& (0+255),b
 26134                           
 26135                           ; BSR set to: 0
 26136                           ;ipv4.c: 279: return ret;
 26137  015DF6  516A               	movf	IPV4_Send@ret& (0+255),w,b
 26138  015DF8  0012               	return	
 26139  015DFA                     __end_of_IPV4_Send:
 26140                           	opt stack 0
 26141                           tosu	equ	0xFFF
 26142                           tosh	equ	0xFFE
 26143                           tosl	equ	0xFFD
 26144                           pclath	equ	0xFFA
 26145                           tblptru	equ	0xFF8
 26146                           tblptrh	equ	0xFF7
 26147                           tblptrl	equ	0xFF6
 26148                           tablat	equ	0xFF5
 26149                           prodh	equ	0xFF4
 26150                           prodl	equ	0xFF3
 26151                           intcon	equ	0xFF2
 26152                           indf0	equ	0xFEF
 26153                           postinc0	equ	0xFEE
 26154                           fsr0h	equ	0xFEA
 26155                           fsr0l	equ	0xFE9
 26156                           wreg	equ	0xFE8
 26157                           indf1	equ	0xFE7
 26158                           postinc1	equ	0xFE6
 26159                           postdec1	equ	0xFE5
 26160                           plusw1	equ	0xFE3
 26161                           fsr1h	equ	0xFE2
 26162                           fsr1l	equ	0xFE1
 26163                           indf2	equ	0xFDF
 26164                           postinc2	equ	0xFDE
 26165                           postdec2	equ	0xFDD
 26166                           plusw2	equ	0xFDB
 26167                           fsr2h	equ	0xFDA
 26168                           fsr2l	equ	0xFD9
 26169                           status	equ	0xFD8
 26170                           
 26171 ;; *************** function _ETH_TxComputeChecksum *****************
 26172 ;; Defined at:
 26173 ;;		line 999 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26174 ;; Parameters:    Size  Location     Type
 26175 ;;  position        2   36[COMRAM] unsigned int 
 26176 ;;  len             2   38[COMRAM] unsigned int 
 26177 ;;  seed            2   40[COMRAM] unsigned int 
 26178 ;; Auto vars:     Size  Location     Type
 26179 ;;  cksm            4    2[BANK0 ] unsigned long 
 26180 ;;  rxptr           2    0[BANK0 ] unsigned int 
 26181 ;; Return value:  Size  Location     Type
 26182 ;;                  2   36[COMRAM] unsigned int 
 26183 ;; Registers used:
 26184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26185 ;; Tracked objects:
 26186 ;;		On entry : 0/0
 26187 ;;		On exit  : 0/0
 26188 ;;		Unchanged: 0/0
 26189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26190 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26191 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26192 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26193 ;;      Totals:        18       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26194 ;;Total ram usage:       24 bytes
 26195 ;; Hardware stack levels used:    1
 26196 ;; Hardware stack levels required when called:    6
 26197 ;; This function calls:
 26198 ;;		_ETH_ComputeChecksum
 26199 ;; This function is called by:
 26200 ;;		_IPV4_Send
 26201 ;;		_ICMP_EchoReply
 26202 ;;		_ICMP_PortUnreachable
 26203 ;;		_UDP_Send
 26204 ;;		_TCP_Snd
 26205 ;; This function uses a non-reentrant model
 26206 ;;
 26207                           
 26208                           	psect	text104
 26209  015922                     __ptext104:
 26210                           	opt stack 0
 26211  015922                     _ETH_TxComputeChecksum:
 26212                           	opt stack 19
 26213                           
 26214                           ;ETHxxJ6x_driver.c: 1001: uint16_t rxptr;
 26215                           ;ETHxxJ6x_driver.c: 1002: uint32_t cksm;
 26216                           ;ETHxxJ6x_driver.c: 1005: rxptr = ERDPT;
 26217                           
 26218                           ; BSR set to: 0
 26219                           ;incstack = 0
 26220  015922  CF7A F060          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
 26221  015926  CF7B F061          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
 26222                           
 26223                           ;ETHxxJ6x_driver.c: 1008: ERDPT = pHead->packetStart + position + 1;
 26224  01592A  EE20 F002          	lfsr	2,2
 26225  01592E  5045               	movf	_pHead,w,c
 26226  015930  26D9               	addwf	fsr2l,f,c
 26227  015932  5046               	movf	_pHead+1,w,c
 26228  015934  22DA               	addwfc	fsr2h,f,c
 26229  015936  CFDE F02B          	movff	postinc2,??_ETH_TxComputeChecksum
 26230  01593A  CFDD F02C          	movff	postdec2,??_ETH_TxComputeChecksum+1
 26231  01593E  5025               	movf	ETH_TxComputeChecksum@position,w,c
 26232  015940  262B               	addwf	??_ETH_TxComputeChecksum,f,c
 26233  015942  5026               	movf	ETH_TxComputeChecksum@position+1,w,c
 26234  015944  222C               	addwfc	??_ETH_TxComputeChecksum+1,f,c
 26235  015946  0E01               	movlw	1
 26236  015948  242B               	addwf	??_ETH_TxComputeChecksum,w,c
 26237  01594A  6E7A               	movwf	3962,c	;volatile
 26238  01594C  0E00               	movlw	0
 26239  01594E  202C               	addwfc	??_ETH_TxComputeChecksum+1,w,c
 26240  015950  6E7B               	movwf	3963,c	;volatile
 26241                           
 26242                           ;ETHxxJ6x_driver.c: 1010: cksm = ETH_ComputeChecksum( len, seed);
 26243  015952  C027  F013         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
 26244  015956  C028  F014         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 26245  01595A  C029  F015         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
 26246  01595E  C02A  F016         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 26247  015962  EC22  F0A9         	call	_ETH_ComputeChecksum	;wreg free
 26248  015966  C013  F062         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
 26249  01596A  C014  F063         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
 26250  01596E  0100               	movlb	0	; () banked
 26251  015970  6B64               	clrf	(ETH_TxComputeChecksum@cksm+2)& (0+255),b
 26252  015972  6B65               	clrf	(ETH_TxComputeChecksum@cksm+3)& (0+255),b
 26253                           
 26254                           ; BSR set to: 0
 26255                           ;ETHxxJ6x_driver.c: 1013: ERDPT = rxptr;
 26256  015974  C060  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
 26257  015978  C061  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
 26258                           
 26259                           ; BSR set to: 0
 26260                           ;ETHxxJ6x_driver.c: 1015: cksm = ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 26261  01597C  0EFF               	movlw	255
 26262  01597E  1562               	andwf	ETH_TxComputeChecksum@cksm& (0+255),w,b
 26263  015980  6E2B               	movwf	??_ETH_TxComputeChecksum& (0+255),c
 26264  015982  0E00               	movlw	0
 26265  015984  1563               	andwf	(ETH_TxComputeChecksum@cksm+1)& (0+255),w,b
 26266  015986  6E2C               	movwf	(??_ETH_TxComputeChecksum+1)& (0+255),c
 26267  015988  0E00               	movlw	0
 26268  01598A  1564               	andwf	(ETH_TxComputeChecksum@cksm+2)& (0+255),w,b
 26269  01598C  6E2D               	movwf	(??_ETH_TxComputeChecksum+2)& (0+255),c
 26270  01598E  0E00               	movlw	0
 26271  015990  1565               	andwf	(ETH_TxComputeChecksum@cksm+3)& (0+255),w,b
 26272  015992  6E2E               	movwf	(??_ETH_TxComputeChecksum+3)& (0+255),c
 26273  015994  C02D  F02E         	movff	??_ETH_TxComputeChecksum+2,??_ETH_TxComputeChecksum+3
 26274  015998  C02C  F02D         	movff	??_ETH_TxComputeChecksum+1,??_ETH_TxComputeChecksum+2
 26275  01599C  C02B  F02C         	movff	??_ETH_TxComputeChecksum,??_ETH_TxComputeChecksum+1
 26276  0159A0  6A2B               	clrf	??_ETH_TxComputeChecksum,c
 26277  0159A2  0EFF               	movlw	255
 26278  0159A4  C062  F02F         	movff	ETH_TxComputeChecksum@cksm,??_ETH_TxComputeChecksum+4
 26279  0159A8  C063  F030         	movff	ETH_TxComputeChecksum@cksm+1,??_ETH_TxComputeChecksum+5
 26280  0159AC  C064  F031         	movff	ETH_TxComputeChecksum@cksm+2,??_ETH_TxComputeChecksum+6
 26281  0159B0  C065  F032         	movff	ETH_TxComputeChecksum@cksm+3,??_ETH_TxComputeChecksum+7
 26282  0159B4  C030  F02F         	movff	??_ETH_TxComputeChecksum+5,??_ETH_TxComputeChecksum+4
 26283  0159B8  C031  F030         	movff	??_ETH_TxComputeChecksum+6,??_ETH_TxComputeChecksum+5
 26284  0159BC  C032  F031         	movff	??_ETH_TxComputeChecksum+7,??_ETH_TxComputeChecksum+6
 26285  0159C0  6A32               	clrf	??_ETH_TxComputeChecksum+7,c
 26286  0159C2  142F               	andwf	??_ETH_TxComputeChecksum+4,w,c
 26287  0159C4  6E33               	movwf	(??_ETH_TxComputeChecksum+8)& (0+255),c
 26288  0159C6  0E00               	movlw	0
 26289  0159C8  1430               	andwf	??_ETH_TxComputeChecksum+5,w,c
 26290  0159CA  6E34               	movwf	(??_ETH_TxComputeChecksum+9)& (0+255),c
 26291  0159CC  0E00               	movlw	0
 26292  0159CE  1431               	andwf	??_ETH_TxComputeChecksum+6,w,c
 26293  0159D0  6E35               	movwf	(??_ETH_TxComputeChecksum+10)& (0+255),c
 26294  0159D2  0E00               	movlw	0
 26295  0159D4  1432               	andwf	??_ETH_TxComputeChecksum+7,w,c
 26296  0159D6  6E36               	movwf	(??_ETH_TxComputeChecksum+11)& (0+255),c
 26297  0159D8  502B               	movf	??_ETH_TxComputeChecksum,w,c
 26298  0159DA  1033               	iorwf	??_ETH_TxComputeChecksum+8,w,c
 26299  0159DC  6F62               	movwf	ETH_TxComputeChecksum@cksm& (0+255),b
 26300  0159DE  502C               	movf	??_ETH_TxComputeChecksum+1,w,c
 26301  0159E0  1034               	iorwf	??_ETH_TxComputeChecksum+9,w,c
 26302  0159E2  6F63               	movwf	(ETH_TxComputeChecksum@cksm+1)& (0+255),b
 26303  0159E4  502D               	movf	??_ETH_TxComputeChecksum+2,w,c
 26304  0159E6  1035               	iorwf	??_ETH_TxComputeChecksum+10,w,c
 26305  0159E8  6F64               	movwf	(ETH_TxComputeChecksum@cksm+2)& (0+255),b
 26306  0159EA  502E               	movf	??_ETH_TxComputeChecksum+3,w,c
 26307  0159EC  1036               	iorwf	??_ETH_TxComputeChecksum+11,w,c
 26308  0159EE  6F65               	movwf	(ETH_TxComputeChecksum@cksm+3)& (0+255),b
 26309                           
 26310                           ; BSR set to: 0
 26311                           ;ETHxxJ6x_driver.c: 1017: return cksm;
 26312  0159F0  C062  F025         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 26313  0159F4  C063  F026         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 26314  0159F8  0012               	return	
 26315  0159FA                     __end_of_ETH_TxComputeChecksum:
 26316                           	opt stack 0
 26317                           tosu	equ	0xFFF
 26318                           tosh	equ	0xFFE
 26319                           tosl	equ	0xFFD
 26320                           pclath	equ	0xFFA
 26321                           tblptru	equ	0xFF8
 26322                           tblptrh	equ	0xFF7
 26323                           tblptrl	equ	0xFF6
 26324                           tablat	equ	0xFF5
 26325                           prodh	equ	0xFF4
 26326                           prodl	equ	0xFF3
 26327                           intcon	equ	0xFF2
 26328                           indf0	equ	0xFEF
 26329                           postinc0	equ	0xFEE
 26330                           fsr0h	equ	0xFEA
 26331                           fsr0l	equ	0xFE9
 26332                           wreg	equ	0xFE8
 26333                           indf1	equ	0xFE7
 26334                           postinc1	equ	0xFE6
 26335                           postdec1	equ	0xFE5
 26336                           plusw1	equ	0xFE3
 26337                           fsr1h	equ	0xFE2
 26338                           fsr1l	equ	0xFE1
 26339                           indf2	equ	0xFDF
 26340                           postinc2	equ	0xFDE
 26341                           postdec2	equ	0xFDD
 26342                           plusw2	equ	0xFDB
 26343                           fsr2h	equ	0xFDA
 26344                           fsr2l	equ	0xFD9
 26345                           status	equ	0xFD8
 26346                           
 26347 ;; *************** function _ETH_ComputeChecksum *****************
 26348 ;; Defined at:
 26349 ;;		line 955 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26350 ;; Parameters:    Size  Location     Type
 26351 ;;  len             2   18[COMRAM] unsigned int 
 26352 ;;  seed            2   20[COMRAM] unsigned int 
 26353 ;; Auto vars:     Size  Location     Type
 26354 ;;  cksm            4   30[COMRAM] unsigned long 
 26355 ;;  v               2   34[COMRAM] unsigned int 
 26356 ;; Return value:  Size  Location     Type
 26357 ;;                  2   18[COMRAM] unsigned int 
 26358 ;; Registers used:
 26359 ;;		wreg, status,2, status,0, cstack
 26360 ;; Tracked objects:
 26361 ;;		On entry : 0/0
 26362 ;;		On exit  : 0/0
 26363 ;;		Unchanged: 0/0
 26364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26366 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26367 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26368 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26369 ;;Total ram usage:       18 bytes
 26370 ;; Hardware stack levels used:    1
 26371 ;; Hardware stack levels required when called:    5
 26372 ;; This function calls:
 26373 ;;		_ETH_EdataRead
 26374 ;; This function is called by:
 26375 ;;		_ETH_TxComputeChecksum
 26376 ;;		_ETH_RxComputeChecksum
 26377 ;; This function uses a non-reentrant model
 26378 ;;
 26379                           
 26380                           	psect	text105
 26381  015244                     __ptext105:
 26382                           	opt stack 0
 26383  015244                     _ETH_ComputeChecksum:
 26384                           	opt stack 19
 26385                           
 26386                           ;ETHxxJ6x_driver.c: 957: uint32_t cksm;
 26387                           ;ETHxxJ6x_driver.c: 958: uint16_t v;
 26388                           ;ETHxxJ6x_driver.c: 960: cksm = seed;
 26389                           
 26390                           ; BSR set to: 0
 26391                           ;incstack = 0
 26392  015244  C015  F01F         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
 26393  015248  C016  F020         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
 26394  01524C  6A21               	clrf	ETH_ComputeChecksum@cksm+2,c
 26395  01524E  6A22               	clrf	ETH_ComputeChecksum@cksm+3,c
 26396                           
 26397                           ;ETHxxJ6x_driver.c: 962: while(len > 1)
 26398  015250  D016               	goto	l701
 26399  015252                     l10292:
 26400                           
 26401                           ;ETHxxJ6x_driver.c: 963: {
 26402                           ;ETHxxJ6x_driver.c: 964: v = 0;
 26403  015252  0E00               	movlw	0
 26404  015254  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 26405  015256  0E00               	movlw	0
 26406  015258  6E23               	movwf	ETH_ComputeChecksum@v,c
 26407                           
 26408                           ;ETHxxJ6x_driver.c: 965: ((char *)&v)[1] = ETH_EdataRead();
 26409  01525A  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 26410  01525E  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 26411                           
 26412                           ;ETHxxJ6x_driver.c: 966: ((char *)&v)[0] = ETH_EdataRead();
 26413  015260  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 26414  015264  6E23               	movwf	ETH_ComputeChecksum@v,c
 26415                           
 26416                           ;ETHxxJ6x_driver.c: 967: cksm += v;
 26417  015266  5023               	movf	ETH_ComputeChecksum@v,w,c
 26418  015268  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 26419  01526A  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 26420  01526C  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 26421  01526E  0E00               	movlw	0
 26422  015270  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 26423  015272  0E00               	movlw	0
 26424  015274  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 26425                           
 26426                           ;ETHxxJ6x_driver.c: 968: len -= 2;
 26427  015276  0E02               	movlw	2
 26428  015278  5E13               	subwf	ETH_ComputeChecksum@len,f,c
 26429  01527A  0E00               	movlw	0
 26430  01527C  5A14               	subwfb	ETH_ComputeChecksum@len+1,f,c
 26431  01527E                     l701:
 26432  01527E  5014               	movf	ETH_ComputeChecksum@len+1,w,c
 26433  015280  E1E8               	bnz	l10292
 26434  015282  0E02               	movlw	2
 26435  015284  5C13               	subwf	ETH_ComputeChecksum@len,w,c
 26436  015286  B0D8               	btfsc	status,0,c
 26437  015288  D7E4               	goto	l702
 26438                           
 26439                           ;ETHxxJ6x_driver.c: 969: }
 26440                           ;ETHxxJ6x_driver.c: 971: if(len)
 26441  01528A  5013               	movf	ETH_ComputeChecksum@len,w,c
 26442  01528C  1014               	iorwf	ETH_ComputeChecksum@len+1,w,c
 26443  01528E  B4D8               	btfsc	status,2,c
 26444  015290  D03B               	goto	l705
 26445                           
 26446                           ;ETHxxJ6x_driver.c: 972: {
 26447                           ;ETHxxJ6x_driver.c: 973: v = 0;
 26448  015292  0E00               	movlw	0
 26449  015294  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 26450  015296  0E00               	movlw	0
 26451  015298  6E23               	movwf	ETH_ComputeChecksum@v,c
 26452                           
 26453                           ;ETHxxJ6x_driver.c: 974: ((char *)&v)[1] = ETH_EdataRead();
 26454  01529A  EC85  F0B7         	call	_ETH_EdataRead	;wreg free
 26455  01529E  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 26456                           
 26457                           ;ETHxxJ6x_driver.c: 975: ((char *)&v)[0] = 0;
 26458  0152A0  0E00               	movlw	0
 26459  0152A2  6E23               	movwf	ETH_ComputeChecksum@v,c
 26460                           
 26461                           ;ETHxxJ6x_driver.c: 976: cksm += v;
 26462  0152A4  5023               	movf	ETH_ComputeChecksum@v,w,c
 26463  0152A6  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 26464  0152A8  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 26465  0152AA  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 26466  0152AC  0E00               	movlw	0
 26467  0152AE  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 26468  0152B0  0E00               	movlw	0
 26469  0152B2  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 26470                           
 26471                           ;ETHxxJ6x_driver.c: 977: }
 26472                           ;ETHxxJ6x_driver.c: 980: while(cksm >> 16)
 26473  0152B4  D029               	goto	l705
 26474  0152B6                     
 26475                           ;ETHxxJ6x_driver.c: 981: {
 26476                           ;ETHxxJ6x_driver.c: 982: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 26477  0152B6  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 26478  0152BA  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 26479  0152BE  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 26480  0152C2  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 26481  0152C6  0E11               	movlw	17
 26482  0152C8  D005               	goto	u9670
 26483  0152CA                     u9675:
 26484  0152CA  90D8               	bcf	status,0,c
 26485  0152CC  321A               	rrcf	??_ETH_ComputeChecksum+3,f,c
 26486  0152CE  3219               	rrcf	??_ETH_ComputeChecksum+2,f,c
 26487  0152D0  3218               	rrcf	??_ETH_ComputeChecksum+1,f,c
 26488  0152D2  3217               	rrcf	??_ETH_ComputeChecksum,f,c
 26489  0152D4                     u9670:
 26490  0152D4  2EE8               	decfsz	wreg,f,c
 26491  0152D6  D7F9               	goto	u9675
 26492  0152D8  0EFF               	movlw	255
 26493  0152DA  141F               	andwf	ETH_ComputeChecksum@cksm,w,c
 26494  0152DC  6E1B               	movwf	(??_ETH_ComputeChecksum+4)& (0+255),c
 26495  0152DE  0EFF               	movlw	255
 26496  0152E0  1420               	andwf	ETH_ComputeChecksum@cksm+1,w,c
 26497  0152E2  6E1C               	movwf	(??_ETH_ComputeChecksum+5)& (0+255),c
 26498  0152E4  0E00               	movlw	0
 26499  0152E6  1421               	andwf	ETH_ComputeChecksum@cksm+2,w,c
 26500  0152E8  6E1D               	movwf	(??_ETH_ComputeChecksum+6)& (0+255),c
 26501  0152EA  0E00               	movlw	0
 26502  0152EC  1422               	andwf	ETH_ComputeChecksum@cksm+3,w,c
 26503  0152EE  6E1E               	movwf	(??_ETH_ComputeChecksum+7)& (0+255),c
 26504  0152F0  5017               	movf	??_ETH_ComputeChecksum,w,c
 26505  0152F2  241B               	addwf	??_ETH_ComputeChecksum+4,w,c
 26506  0152F4  6E1F               	movwf	ETH_ComputeChecksum@cksm,c
 26507  0152F6  5018               	movf	??_ETH_ComputeChecksum+1,w,c
 26508  0152F8  201C               	addwfc	??_ETH_ComputeChecksum+5,w,c
 26509  0152FA  6E20               	movwf	ETH_ComputeChecksum@cksm+1,c
 26510  0152FC  5019               	movf	??_ETH_ComputeChecksum+2,w,c
 26511  0152FE  201D               	addwfc	??_ETH_ComputeChecksum+6,w,c
 26512  015300  6E21               	movwf	ETH_ComputeChecksum@cksm+2,c
 26513  015302  501A               	movf	??_ETH_ComputeChecksum+3,w,c
 26514  015304  201E               	addwfc	??_ETH_ComputeChecksum+7,w,c
 26515  015306  6E22               	movwf	ETH_ComputeChecksum@cksm+3,c
 26516  015308                     l705:
 26517  015308  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 26518  01530C  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 26519  015310  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 26520  015314  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 26521  015318  0E11               	movlw	17
 26522  01531A  D005               	goto	u9680
 26523  01531C                     u9685:
 26524  01531C  90D8               	bcf	status,0,c
 26525  01531E  321A               	rrcf	??_ETH_ComputeChecksum+3,f,c
 26526  015320  3219               	rrcf	??_ETH_ComputeChecksum+2,f,c
 26527  015322  3218               	rrcf	??_ETH_ComputeChecksum+1,f,c
 26528  015324  3217               	rrcf	??_ETH_ComputeChecksum,f,c
 26529  015326                     u9680:
 26530  015326  2EE8               	decfsz	wreg,f,c
 26531  015328  D7F9               	goto	u9685
 26532  01532A  5017               	movf	??_ETH_ComputeChecksum,w,c
 26533  01532C  1018               	iorwf	??_ETH_ComputeChecksum+1,w,c
 26534  01532E  1019               	iorwf	??_ETH_ComputeChecksum+2,w,c
 26535  015330  101A               	iorwf	??_ETH_ComputeChecksum+3,w,c
 26536  015332  A4D8               	btfss	status,2,c
 26537  015334  D7C0               	goto	l706
 26538                           
 26539                           ;ETHxxJ6x_driver.c: 983: }
 26540                           ;ETHxxJ6x_driver.c: 986: cksm = ~cksm;
 26541  015336  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 26542  01533A  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 26543  01533E  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 26544  015342  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 26545  015346  1E17               	comf	??_ETH_ComputeChecksum,f,c
 26546  015348  1E18               	comf	??_ETH_ComputeChecksum+1,f,c
 26547  01534A  1E19               	comf	??_ETH_ComputeChecksum+2,f,c
 26548  01534C  1E1A               	comf	??_ETH_ComputeChecksum+3,f,c
 26549  01534E  C017  F01F         	movff	??_ETH_ComputeChecksum,ETH_ComputeChecksum@cksm
 26550  015352  C018  F020         	movff	??_ETH_ComputeChecksum+1,ETH_ComputeChecksum@cksm+1
 26551  015356  C019  F021         	movff	??_ETH_ComputeChecksum+2,ETH_ComputeChecksum@cksm+2
 26552  01535A  C01A  F022         	movff	??_ETH_ComputeChecksum+3,ETH_ComputeChecksum@cksm+3
 26553                           
 26554                           ;ETHxxJ6x_driver.c: 989: return cksm;
 26555  01535E  C01F  F013         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
 26556  015362  C020  F014         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
 26557  015366  0012               	return		;funcret
 26558  015368                     __end_of_ETH_ComputeChecksum:
 26559                           	opt stack 0
 26560                           tosu	equ	0xFFF
 26561                           tosh	equ	0xFFE
 26562                           tosl	equ	0xFFD
 26563                           pclath	equ	0xFFA
 26564                           tblptru	equ	0xFF8
 26565                           tblptrh	equ	0xFF7
 26566                           tblptrl	equ	0xFF6
 26567                           tablat	equ	0xFF5
 26568                           prodh	equ	0xFF4
 26569                           prodl	equ	0xFF3
 26570                           intcon	equ	0xFF2
 26571                           indf0	equ	0xFEF
 26572                           postinc0	equ	0xFEE
 26573                           fsr0h	equ	0xFEA
 26574                           fsr0l	equ	0xFE9
 26575                           wreg	equ	0xFE8
 26576                           indf1	equ	0xFE7
 26577                           postinc1	equ	0xFE6
 26578                           postdec1	equ	0xFE5
 26579                           plusw1	equ	0xFE3
 26580                           fsr1h	equ	0xFE2
 26581                           fsr1l	equ	0xFE1
 26582                           indf2	equ	0xFDF
 26583                           postinc2	equ	0xFDE
 26584                           postdec2	equ	0xFDD
 26585                           plusw2	equ	0xFDB
 26586                           fsr2h	equ	0xFDA
 26587                           fsr2l	equ	0xFD9
 26588                           status	equ	0xFD8
 26589                           
 26590 ;; *************** function _ETH_EdataRead *****************
 26591 ;; Defined at:
 26592 ;;		line 108 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26593 ;; Parameters:    Size  Location     Type
 26594 ;;		None
 26595 ;; Auto vars:     Size  Location     Type
 26596 ;;		None
 26597 ;; Return value:  Size  Location     Type
 26598 ;;                  1    wreg      unsigned char 
 26599 ;; Registers used:
 26600 ;;		wreg, status,2
 26601 ;; Tracked objects:
 26602 ;;		On entry : 0/0
 26603 ;;		On exit  : 0/0
 26604 ;;		Unchanged: 0/0
 26605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26610 ;;Total ram usage:        0 bytes
 26611 ;; Hardware stack levels used:    1
 26612 ;; Hardware stack levels required when called:    4
 26613 ;; This function calls:
 26614 ;;		Nothing
 26615 ;; This function is called by:
 26616 ;;		_ETH_NextPacketUpdate
 26617 ;;		_ETH_Read8
 26618 ;;		_ETH_Read16
 26619 ;;		_ETH_Read32
 26620 ;;		_ETH_ReadBlock
 26621 ;;		_ETH_ComputeChecksum
 26622 ;;		_ETH_Read24
 26623 ;; This function uses a non-reentrant model
 26624 ;;
 26625                           
 26626                           	psect	text106
 26627  016F0A                     __ptext106:
 26628                           	opt stack 0
 26629  016F0A                     _ETH_EdataRead:
 26630                           	opt stack 19
 26631                           
 26632                           ;incstack = 0
 26633  016F0A  CF61 FE7E          	movff	3937,_errataTemp	;# 
 26634                           
 26635                           ;ETHxxJ6x_driver.c: 111: return (uint8_t) errataTemp;
 26636  016F0E  010E               	movlb	14	; () banked
 26637  016F10  517E               	movf	126,w,b
 26638  016F12  0012               	return	
 26639  016F14                     __end_of_ETH_EdataRead:
 26640                           	opt stack 0
 26641                           tosu	equ	0xFFF
 26642                           tosh	equ	0xFFE
 26643                           tosl	equ	0xFFD
 26644                           pclath	equ	0xFFA
 26645                           tblptru	equ	0xFF8
 26646                           tblptrh	equ	0xFF7
 26647                           tblptrl	equ	0xFF6
 26648                           tablat	equ	0xFF5
 26649                           prodh	equ	0xFF4
 26650                           prodl	equ	0xFF3
 26651                           intcon	equ	0xFF2
 26652                           indf0	equ	0xFEF
 26653                           postinc0	equ	0xFEE
 26654                           fsr0h	equ	0xFEA
 26655                           fsr0l	equ	0xFE9
 26656                           wreg	equ	0xFE8
 26657                           indf1	equ	0xFE7
 26658                           postinc1	equ	0xFE6
 26659                           postdec1	equ	0xFE5
 26660                           plusw1	equ	0xFE3
 26661                           fsr1h	equ	0xFE2
 26662                           fsr1l	equ	0xFE1
 26663                           indf2	equ	0xFDF
 26664                           postinc2	equ	0xFDE
 26665                           postdec2	equ	0xFDD
 26666                           plusw2	equ	0xFDB
 26667                           fsr2h	equ	0xFDA
 26668                           fsr2l	equ	0xFD9
 26669                           status	equ	0xFD8
 26670                           
 26671 ;; *************** function _ETH_Send *****************
 26672 ;; Defined at:
 26673 ;;		line 711 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26674 ;; Parameters:    Size  Location     Type
 26675 ;;		None
 26676 ;; Auto vars:     Size  Location     Type
 26677 ;;  packetEnd       2   26[COMRAM] unsigned int 
 26678 ;; Return value:  Size  Location     Type
 26679 ;;                  1    wreg      enum E476
 26680 ;; Registers used:
 26681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26682 ;; Tracked objects:
 26683 ;;		On entry : 0/0
 26684 ;;		On exit  : 0/0
 26685 ;;		Unchanged: 0/0
 26686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26689 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26691 ;;Total ram usage:        6 bytes
 26692 ;; Hardware stack levels used:    1
 26693 ;; Hardware stack levels required when called:    6
 26694 ;; This function calls:
 26695 ;;		_ETH_SendQueued
 26696 ;;		_putch
 26697 ;; This function is called by:
 26698 ;;		_ARPV4_Packet
 26699 ;;		_ARPV4_Request
 26700 ;;		_IPV4_Send
 26701 ;; This function uses a non-reentrant model
 26702 ;;
 26703                           
 26704                           	psect	text107
 26705  015B76                     __ptext107:
 26706                           	opt stack 0
 26707  015B76                     _ETH_Send:
 26708                           	opt stack 18
 26709                           
 26710                           ;ETHxxJ6x_driver.c: 713: uint16_t packetEnd = EWRPT - 1;
 26711                           
 26712                           ; BSR set to: 14
 26713                           ;incstack = 0
 26714  015B76  0EFF               	movlw	255
 26715  015B78  010E               	movlb	14	; () banked
 26716  015B7A  25E2               	addwf	226,w,b	;volatile
 26717  015B7C  6E1B               	movwf	ETH_Send@packetEnd,c
 26718  015B7E  0EFF               	movlw	255
 26719  015B80  21E3               	addwfc	227,w,b	;volatile
 26720  015B82  6E1C               	movwf	ETH_Send@packetEnd+1,c
 26721                           
 26722                           ; BSR set to: 14
 26723                           ;ETHxxJ6x_driver.c: 715: if( !ethData.up )
 26724  015B84  0102               	movlb	2	; () banked
 26725  015B86  B524               	btfsc	_ethData& (0+255),2,b	;volatile
 26726  015B88  D002               	goto	l626
 26727                           
 26728                           ; BSR set to: 2
 26729                           ;ETHxxJ6x_driver.c: 716: {
 26730                           ;ETHxxJ6x_driver.c: 717: return LINK_NOT_FOUND;
 26731  015B8A  0E02               	movlw	2
 26732                           
 26733                           ; BSR set to: 2
 26734  015B8C  0012               	return	
 26735  015B8E                     l626:
 26736                           
 26737                           ; BSR set to: 2
 26738                           ;ETHxxJ6x_driver.c: 718: }
 26739                           ;ETHxxJ6x_driver.c: 720: if( ethListSize == 0 )
 26740                           
 26741                           ; BSR set to: 2
 26742  015B8E  5048               	movf	_ethListSize,w,c
 26743  015B90  A4D8               	btfss	status,2,c
 26744  015B92  D002               	goto	l628
 26745                           
 26746                           ; BSR set to: 2
 26747                           ;ETHxxJ6x_driver.c: 721: {
 26748                           ;ETHxxJ6x_driver.c: 722: return BUFFER_BUSY;
 26749  015B94  0E03               	movlw	3
 26750                           
 26751                           ; BSR set to: 2
 26752  015B96  0012               	return	
 26753  015B98                     l628:
 26754                           
 26755                           ; BSR set to: 2
 26756                           
 26757                           ; BSR set to: 2
 26758                           
 26759                           ;ETHxxJ6x_driver.c: 723: }
 26760                           ;ETHxxJ6x_driver.c: 725: do{ pHead->flags = pHead->flags & (~(0x0001 << 0)); } while(0);
 26761                           
 26762                           ; BSR set to: 2
 26763  015B98  0EFE               	movlw	254
 26764  015B9A  6E17               	movwf	??_ETH_Send& (0+255),c
 26765  015B9C  0EFF               	movlw	255
 26766  015B9E  6E18               	movwf	(??_ETH_Send+1)& (0+255),c
 26767  015BA0  C045  FFD9         	movff	_pHead,fsr2l
 26768  015BA4  C046  FFDA         	movff	_pHead+1,fsr2h
 26769  015BA8  CFDE F019          	movff	postinc2,??_ETH_Send+2
 26770  015BAC  CFDD F01A          	movff	postdec2,??_ETH_Send+3
 26771  015BB0  5017               	movf	??_ETH_Send,w,c
 26772  015BB2  1619               	andwf	??_ETH_Send+2,f,c
 26773  015BB4  5018               	movf	??_ETH_Send+1,w,c
 26774  015BB6  161A               	andwf	??_ETH_Send+3,f,c
 26775  015BB8  C045  FFD9         	movff	_pHead,fsr2l
 26776  015BBC  C046  FFDA         	movff	_pHead+1,fsr2h
 26777  015BC0  C019  FFDE         	movff	??_ETH_Send+2,postinc2
 26778  015BC4  C01A  FFDD         	movff	??_ETH_Send+3,postdec2
 26779                           
 26780                           ; BSR set to: 2
 26781                           ;ETHxxJ6x_driver.c: 726: pHead->packetEnd = packetEnd;
 26782  015BC8  EE20 F004          	lfsr	2,4
 26783  015BCC  5045               	movf	_pHead,w,c
 26784  015BCE  26D9               	addwf	fsr2l,f,c
 26785  015BD0  5046               	movf	_pHead+1,w,c
 26786  015BD2  22DA               	addwfc	fsr2h,f,c
 26787  015BD4  C01B  FFDE         	movff	ETH_Send@packetEnd,postinc2
 26788  015BD8  C01C  FFDD         	movff	ETH_Send@packetEnd+1,postdec2
 26789                           
 26790                           ; BSR set to: 2
 26791                           
 26792                           ;ETHxxJ6x_driver.c: 727: do{ pHead->flags = pHead->flags | (0x0001 << 1); } while(0);
 26793  015BDC  C045  FFD9         	movff	_pHead,fsr2l
 26794  015BE0  C046  FFDA         	movff	_pHead+1,fsr2h
 26795  015BE4  CFDE F017          	movff	postinc2,??_ETH_Send
 26796  015BE8  CFDD F018          	movff	postdec2,??_ETH_Send+1
 26797  015BEC  0E02               	movlw	2
 26798  015BEE  1217               	iorwf	??_ETH_Send,f,c
 26799  015BF0  0E00               	movlw	0
 26800  015BF2  1218               	iorwf	??_ETH_Send+1,f,c
 26801  015BF4  C045  FFD9         	movff	_pHead,fsr2l
 26802  015BF8  C046  FFDA         	movff	_pHead+1,fsr2h
 26803  015BFC  C017  FFDE         	movff	??_ETH_Send,postinc2
 26804  015C00  C018  FFDD         	movff	??_ETH_Send+1,postdec2
 26805                           
 26806                           ; BSR set to: 2
 26807                           ;ETHxxJ6x_driver.c: 730: if( (ECON1bits.TXRTS) || (ethListSize > 1) )
 26808                           
 26809                           ; BSR set to: 2
 26810  015C04  B6D2               	btfsc	4050,3,c	;volatile
 26811  015C06  D003               	goto	u9640
 26812                           
 26813                           ; BSR set to: 2
 26814  015C08  0E01               	movlw	1
 26815  015C0A  6448               	cpfsgt	_ethListSize,c
 26816  015C0C  D005               	goto	l633
 26817  015C0E                     u9640:
 26818                           
 26819                           ; BSR set to: 2
 26820                           ;ETHxxJ6x_driver.c: 731: {
 26821                           ;ETHxxJ6x_driver.c: 732: putch('~');
 26822                           
 26823                           ; BSR set to: 2
 26824  015C0E  0E7E               	movlw	126
 26825  015C10  ECA0  F0B7         	call	_putch
 26826                           
 26827                           ;ETHxxJ6x_driver.c: 733: return (0x0001 << 1);
 26828  015C14  0E02               	movlw	2
 26829  015C16  0012               	return	
 26830  015C18                     l633:
 26831                           
 26832                           ;ETHxxJ6x_driver.c: 734: }
 26833                           ;ETHxxJ6x_driver.c: 736: return ETH_SendQueued();
 26834  015C18  EC5B  F0B0         	call	_ETH_SendQueued	;wreg free
 26835  015C1C  0012               	return	
 26836  015C1E                     __end_of_ETH_Send:
 26837                           	opt stack 0
 26838                           tosu	equ	0xFFF
 26839                           tosh	equ	0xFFE
 26840                           tosl	equ	0xFFD
 26841                           pclath	equ	0xFFA
 26842                           tblptru	equ	0xFF8
 26843                           tblptrh	equ	0xFF7
 26844                           tblptrl	equ	0xFF6
 26845                           tablat	equ	0xFF5
 26846                           prodh	equ	0xFF4
 26847                           prodl	equ	0xFF3
 26848                           intcon	equ	0xFF2
 26849                           indf0	equ	0xFEF
 26850                           postinc0	equ	0xFEE
 26851                           fsr0h	equ	0xFEA
 26852                           fsr0l	equ	0xFE9
 26853                           wreg	equ	0xFE8
 26854                           indf1	equ	0xFE7
 26855                           postinc1	equ	0xFE6
 26856                           postdec1	equ	0xFE5
 26857                           plusw1	equ	0xFE3
 26858                           fsr1h	equ	0xFE2
 26859                           fsr1l	equ	0xFE1
 26860                           indf2	equ	0xFDF
 26861                           postinc2	equ	0xFDE
 26862                           postdec2	equ	0xFDD
 26863                           plusw2	equ	0xFDB
 26864                           fsr2h	equ	0xFDA
 26865                           fsr2l	equ	0xFD9
 26866                           status	equ	0xFD8
 26867                           
 26868 ;; *************** function _ETH_SendQueued *****************
 26869 ;; Defined at:
 26870 ;;		line 744 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26871 ;; Parameters:    Size  Location     Type
 26872 ;;		None
 26873 ;; Auto vars:     Size  Location     Type
 26874 ;;		None
 26875 ;; Return value:  Size  Location     Type
 26876 ;;                  1    wreg      enum E4853
 26877 ;; Registers used:
 26878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26879 ;; Tracked objects:
 26880 ;;		On entry : 0/0
 26881 ;;		On exit  : 0/0
 26882 ;;		Unchanged: 0/0
 26883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26886 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26888 ;;Total ram usage:        4 bytes
 26889 ;; Hardware stack levels used:    1
 26890 ;; Hardware stack levels required when called:    5
 26891 ;; This function calls:
 26892 ;;		_putch
 26893 ;; This function is called by:
 26894 ;;		_ETH_EventHandler
 26895 ;;		_ETH_Send
 26896 ;; This function uses a non-reentrant model
 26897 ;;
 26898                           
 26899                           	psect	text108
 26900  0160B6                     __ptext108:
 26901                           	opt stack 0
 26902  0160B6                     _ETH_SendQueued:
 26903                           	opt stack 18
 26904                           
 26905                           ;ETHxxJ6x_driver.c: 746: if( pHead->flags & (0x0001 << 1) )
 26906                           
 26907                           ;incstack = 0
 26908  0160B6  C045  FFD9         	movff	_pHead,fsr2l
 26909  0160BA  C046  FFDA         	movff	_pHead+1,fsr2h
 26910  0160BE  CFDE F013          	movff	postinc2,??_ETH_SendQueued
 26911  0160C2  CFDD F014          	movff	postdec2,??_ETH_SendQueued+1
 26912  0160C6  A213               	btfss	??_ETH_SendQueued,1,c
 26913  0160C8  D034               	goto	l638
 26914                           
 26915                           ;ETHxxJ6x_driver.c: 747: {
 26916                           ;ETHxxJ6x_driver.c: 749: do{ pHead->flags = pHead->flags & (~(0x0001 << 1)); } while(0);
 26917  0160CA  0EFD               	movlw	253
 26918  0160CC  6E13               	movwf	??_ETH_SendQueued& (0+255),c
 26919  0160CE  0EFF               	movlw	255
 26920  0160D0  6E14               	movwf	(??_ETH_SendQueued+1)& (0+255),c
 26921  0160D2  C045  FFD9         	movff	_pHead,fsr2l
 26922  0160D6  C046  FFDA         	movff	_pHead+1,fsr2h
 26923  0160DA  CFDE F015          	movff	postinc2,??_ETH_SendQueued+2
 26924  0160DE  CFDD F016          	movff	postdec2,??_ETH_SendQueued+3
 26925  0160E2  5013               	movf	??_ETH_SendQueued,w,c
 26926  0160E4  1615               	andwf	??_ETH_SendQueued+2,f,c
 26927  0160E6  5014               	movf	??_ETH_SendQueued+1,w,c
 26928  0160E8  1616               	andwf	??_ETH_SendQueued+3,f,c
 26929  0160EA  C045  FFD9         	movff	_pHead,fsr2l
 26930  0160EE  C046  FFDA         	movff	_pHead+1,fsr2h
 26931  0160F2  C015  FFDE         	movff	??_ETH_SendQueued+2,postinc2
 26932  0160F6  C016  FFDD         	movff	??_ETH_SendQueued+3,postdec2
 26933                           
 26934                           ;ETHxxJ6x_driver.c: 752: ETXST = pTail->packetStart;
 26935  0160FA  EE20 F002          	lfsr	2,2
 26936  0160FE  5043               	movf	_pTail,w,c
 26937  016100  26D9               	addwf	fsr2l,f,c
 26938  016102  5044               	movf	_pTail+1,w,c
 26939  016104  22DA               	addwfc	fsr2h,f,c
 26940  016106  CFDE FEE4          	movff	postinc2,3812	;volatile
 26941  01610A  CFDD FEE5          	movff	postdec2,3813	;volatile
 26942                           
 26943                           ;ETHxxJ6x_driver.c: 753: ETXND = pTail->packetEnd;
 26944  01610E  EE20 F004          	lfsr	2,4
 26945  016112  5043               	movf	_pTail,w,c
 26946  016114  26D9               	addwf	fsr2l,f,c
 26947  016116  5044               	movf	_pTail+1,w,c
 26948  016118  22DA               	addwfc	fsr2h,f,c
 26949  01611A  CFDE FEE6          	movff	postinc2,3814	;volatile
 26950  01611E  CFDD FEE7          	movff	postdec2,3815	;volatile
 26951                           
 26952                           ;ETHxxJ6x_driver.c: 755: __nop(); __nop();
 26953  016122  F000               	nop	
 26954  016124  F000               	nop	
 26955                           
 26956                           ;ETHxxJ6x_driver.c: 756: ECON1bits.TXRTS = 1;
 26957  016126  86D2               	bsf	4050,3,c	;volatile
 26958                           
 26959                           ;ETHxxJ6x_driver.c: 758: putch('-');
 26960  016128  0E2D               	movlw	45
 26961  01612A  ECA0  F0B7         	call	_putch
 26962                           
 26963                           ;ETHxxJ6x_driver.c: 759: return SUCCESS;
 26964  01612E  0E01               	movlw	1
 26965                           
 26966                           ;ETHxxJ6x_driver.c: 760: }
 26967  016130  0012               	return	
 26968  016132                     l638:
 26969                           
 26970                           ;ETHxxJ6x_driver.c: 761: else
 26971                           ;ETHxxJ6x_driver.c: 762: {
 26972                           ;ETHxxJ6x_driver.c: 763: return BUFFER_BUSY;
 26973  016132  0E03               	movlw	3
 26974  016134  0012               	return	
 26975  016136                     __end_of_ETH_SendQueued:
 26976                           	opt stack 0
 26977                           tosu	equ	0xFFF
 26978                           tosh	equ	0xFFE
 26979                           tosl	equ	0xFFD
 26980                           pclath	equ	0xFFA
 26981                           tblptru	equ	0xFF8
 26982                           tblptrh	equ	0xFF7
 26983                           tblptrl	equ	0xFF6
 26984                           tablat	equ	0xFF5
 26985                           prodh	equ	0xFF4
 26986                           prodl	equ	0xFF3
 26987                           intcon	equ	0xFF2
 26988                           indf0	equ	0xFEF
 26989                           postinc0	equ	0xFEE
 26990                           fsr0h	equ	0xFEA
 26991                           fsr0l	equ	0xFE9
 26992                           wreg	equ	0xFE8
 26993                           indf1	equ	0xFE7
 26994                           postinc1	equ	0xFE6
 26995                           postdec1	equ	0xFE5
 26996                           plusw1	equ	0xFE3
 26997                           fsr1h	equ	0xFE2
 26998                           fsr1l	equ	0xFE1
 26999                           indf2	equ	0xFDF
 27000                           postinc2	equ	0xFDE
 27001                           postdec2	equ	0xFDD
 27002                           plusw2	equ	0xFDB
 27003                           fsr2h	equ	0xFDA
 27004                           fsr2l	equ	0xFD9
 27005                           status	equ	0xFD8
 27006                           
 27007 ;; *************** function _putch *****************
 27008 ;; Defined at:
 27009 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\putch.c"
 27010 ;; Parameters:    Size  Location     Type
 27011 ;;  c               1    wreg     unsigned char 
 27012 ;; Auto vars:     Size  Location     Type
 27013 ;;  c               1    0[COMRAM] unsigned char 
 27014 ;; Return value:  Size  Location     Type
 27015 ;;                  1    wreg      void 
 27016 ;; Registers used:
 27017 ;;		wreg
 27018 ;; Tracked objects:
 27019 ;;		On entry : 0/0
 27020 ;;		On exit  : 0/0
 27021 ;;		Unchanged: 0/0
 27022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27027 ;;Total ram usage:        0 bytes
 27028 ;; Hardware stack levels used:    1
 27029 ;; Hardware stack levels required when called:    4
 27030 ;; This function calls:
 27031 ;;		Nothing
 27032 ;; This function is called by:
 27033 ;;		_ETH_WriteStart
 27034 ;;		_ETH_Send
 27035 ;;		_ETH_SendQueued
 27036 ;;		_printf
 27037 ;;		_udp_test
 27038 ;;		__doprnt
 27039 ;; This function uses a non-reentrant model
 27040 ;;
 27041                           
 27042                           	psect	text109
 27043  016F40                     __ptext109:
 27044                           	opt stack 0
 27045  016F40                     _putch:
 27046                           	opt stack 21
 27047                           
 27048                           ;incstack = 0
 27049  016F40  0012               	return		;funcret
 27050  016F42                     __end_of_putch:
 27051                           	opt stack 0
 27052                           tosu	equ	0xFFF
 27053                           tosh	equ	0xFFE
 27054                           tosl	equ	0xFFD
 27055                           pclath	equ	0xFFA
 27056                           tblptru	equ	0xFF8
 27057                           tblptrh	equ	0xFF7
 27058                           tblptrl	equ	0xFF6
 27059                           tablat	equ	0xFF5
 27060                           prodh	equ	0xFF4
 27061                           prodl	equ	0xFF3
 27062                           intcon	equ	0xFF2
 27063                           indf0	equ	0xFEF
 27064                           postinc0	equ	0xFEE
 27065                           fsr0h	equ	0xFEA
 27066                           fsr0l	equ	0xFE9
 27067                           wreg	equ	0xFE8
 27068                           indf1	equ	0xFE7
 27069                           postinc1	equ	0xFE6
 27070                           postdec1	equ	0xFE5
 27071                           plusw1	equ	0xFE3
 27072                           fsr1h	equ	0xFE2
 27073                           fsr1l	equ	0xFE1
 27074                           indf2	equ	0xFDF
 27075                           postinc2	equ	0xFDE
 27076                           postdec2	equ	0xFDD
 27077                           plusw2	equ	0xFDB
 27078                           fsr2h	equ	0xFDA
 27079                           fsr2l	equ	0xFD9
 27080                           status	equ	0xFD8
 27081                           
 27082 ;; *************** function _ETH_Insert *****************
 27083 ;; Defined at:
 27084 ;;		line 774 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 27085 ;; Parameters:    Size  Location     Type
 27086 ;;  data            2   18[COMRAM] PTR unsigned char 
 27087 ;;		 -> TCP_Snd@cksm(2), UDP_Send@cksm(2), UDP_Send@udpLength(2), ICMP_PortUnreachable@cksm(2), 
 27088 ;;		 -> ICMP_EchoReply@cksm(2), IPV4_Send@cksm(2), IPV4_Send@totalLength(2), 
 27089 ;;  len             2   20[COMRAM] unsigned int 
 27090 ;;  offset          2   22[COMRAM] unsigned int 
 27091 ;; Auto vars:     Size  Location     Type
 27092 ;;  current_tx_p    2   26[COMRAM] unsigned int 
 27093 ;; Return value:  Size  Location     Type
 27094 ;;                  1    wreg      void 
 27095 ;; Registers used:
 27096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27097 ;; Tracked objects:
 27098 ;;		On entry : 0/0
 27099 ;;		On exit  : 0/0
 27100 ;;		Unchanged: 0/0
 27101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27102 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27105 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27106 ;;Total ram usage:       10 bytes
 27107 ;; Hardware stack levels used:    1
 27108 ;; Hardware stack levels required when called:    5
 27109 ;; This function calls:
 27110 ;;		_ETH_EdataWrite
 27111 ;; This function is called by:
 27112 ;;		_IPV4_Send
 27113 ;;		_ICMP_EchoReply
 27114 ;;		_ICMP_PortUnreachable
 27115 ;;		_UDP_Send
 27116 ;;		_TCP_Snd
 27117 ;; This function uses a non-reentrant model
 27118 ;;
 27119                           
 27120                           	psect	text110
 27121  01636E                     __ptext110:
 27122                           	opt stack 0
 27123  01636E                     _ETH_Insert:
 27124                           	opt stack 20
 27125                           
 27126                           ;ETHxxJ6x_driver.c: 776: uint16_t current_tx_ptr = EWRPT;
 27127                           
 27128                           ;incstack = 0
 27129  01636E  CEE2 F01B          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
 27130  016372  CEE3 F01C          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
 27131                           
 27132                           ;ETHxxJ6x_driver.c: 777: EWRPT = pHead->packetStart + offset + 1;
 27133  016376  EE20 F002          	lfsr	2,2
 27134  01637A  5045               	movf	_pHead,w,c
 27135  01637C  26D9               	addwf	fsr2l,f,c
 27136  01637E  5046               	movf	_pHead+1,w,c
 27137  016380  22DA               	addwfc	fsr2h,f,c
 27138  016382  CFDE F019          	movff	postinc2,??_ETH_Insert
 27139  016386  CFDD F01A          	movff	postdec2,??_ETH_Insert+1
 27140  01638A  5017               	movf	ETH_Insert@offset,w,c
 27141  01638C  2619               	addwf	??_ETH_Insert,f,c
 27142  01638E  5018               	movf	ETH_Insert@offset+1,w,c
 27143  016390  221A               	addwfc	??_ETH_Insert+1,f,c
 27144  016392  0E01               	movlw	1
 27145  016394  2419               	addwf	??_ETH_Insert,w,c
 27146  016396  010E               	movlb	14	; () banked
 27147  016398  6FE2               	movwf	226,b	;volatile
 27148  01639A  0E00               	movlw	0
 27149  01639C  201A               	addwfc	??_ETH_Insert+1,w,c
 27150  01639E  6FE3               	movwf	227,b	;volatile
 27151                           
 27152                           ;ETHxxJ6x_driver.c: 778: while(len--)
 27153  0163A0  D009               	goto	l645
 27154  0163A2                     l10388:
 27155                           
 27156                           ;ETHxxJ6x_driver.c: 779: {
 27157                           ;ETHxxJ6x_driver.c: 780: ETH_EdataWrite(*data++);
 27158  0163A2  C013  FFD9         	movff	ETH_Insert@data,fsr2l
 27159  0163A6  C014  FFDA         	movff	ETH_Insert@data+1,fsr2h
 27160  0163AA  50DF               	movf	indf2,w,c
 27161  0163AC  EC9A  F0B7         	call	_ETH_EdataWrite
 27162  0163B0  4A13               	infsnz	ETH_Insert@data,f,c
 27163  0163B2  2A14               	incf	ETH_Insert@data+1,f,c
 27164  0163B4                     l645:
 27165  0163B4  0615               	decf	ETH_Insert@len,f,c
 27166  0163B6  A0D8               	btfss	status,0,c
 27167  0163B8  0616               	decf	ETH_Insert@len+1,f,c
 27168  0163BA  2815               	incf	ETH_Insert@len,w,c
 27169  0163BC  E1F2               	bnz	l10388
 27170  0163BE  2816               	incf	ETH_Insert@len+1,w,c
 27171  0163C0  A4D8               	btfss	status,2,c
 27172  0163C2  D7EF               	goto	l646
 27173                           
 27174                           ;ETHxxJ6x_driver.c: 781: }
 27175                           ;ETHxxJ6x_driver.c: 782: EWRPT = current_tx_ptr;
 27176  0163C4  C01B  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
 27177  0163C8  C01C  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
 27178  0163CC  0012               	return		;funcret
 27179  0163CE                     __end_of_ETH_Insert:
 27180                           	opt stack 0
 27181                           tosu	equ	0xFFF
 27182                           tosh	equ	0xFFE
 27183                           tosl	equ	0xFFD
 27184                           pclath	equ	0xFFA
 27185                           tblptru	equ	0xFF8
 27186                           tblptrh	equ	0xFF7
 27187                           tblptrl	equ	0xFF6
 27188                           tablat	equ	0xFF5
 27189                           prodh	equ	0xFF4
 27190                           prodl	equ	0xFF3
 27191                           intcon	equ	0xFF2
 27192                           indf0	equ	0xFEF
 27193                           postinc0	equ	0xFEE
 27194                           fsr0h	equ	0xFEA
 27195                           fsr0l	equ	0xFE9
 27196                           wreg	equ	0xFE8
 27197                           indf1	equ	0xFE7
 27198                           postinc1	equ	0xFE6
 27199                           postdec1	equ	0xFE5
 27200                           plusw1	equ	0xFE3
 27201                           fsr1h	equ	0xFE2
 27202                           fsr1l	equ	0xFE1
 27203                           indf2	equ	0xFDF
 27204                           postinc2	equ	0xFDE
 27205                           postdec2	equ	0xFDD
 27206                           plusw2	equ	0xFDB
 27207                           fsr2h	equ	0xFDA
 27208                           fsr2l	equ	0xFD9
 27209                           status	equ	0xFD8
 27210                           
 27211 ;; *************** function _ETH_GetByteCount *****************
 27212 ;; Defined at:
 27213 ;;		line 1126 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 27214 ;; Parameters:    Size  Location     Type
 27215 ;;		None
 27216 ;; Auto vars:     Size  Location     Type
 27217 ;;		None
 27218 ;; Return value:  Size  Location     Type
 27219 ;;                  2   18[COMRAM] unsigned int 
 27220 ;; Registers used:
 27221 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27222 ;; Tracked objects:
 27223 ;;		On entry : 0/0
 27224 ;;		On exit  : 0/0
 27225 ;;		Unchanged: 0/0
 27226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27231 ;;Total ram usage:        4 bytes
 27232 ;; Hardware stack levels used:    1
 27233 ;; Hardware stack levels required when called:    4
 27234 ;; This function calls:
 27235 ;;		Nothing
 27236 ;; This function is called by:
 27237 ;;		_UDP_Send
 27238 ;; This function uses a non-reentrant model
 27239 ;;
 27240                           
 27241                           	psect	text111
 27242  016CDE                     __ptext111:
 27243                           	opt stack 0
 27244  016CDE                     _ETH_GetByteCount:
 27245                           	opt stack 19
 27246                           
 27247                           ;ETHxxJ6x_driver.c: 1128: return (EWRPT - ethData.saveWRPT);
 27248                           
 27249                           ;incstack = 0
 27250  016CDE  EE22  F028         	lfsr	2,_ethData+4	;volatile
 27251  016CE2  CFDE F015          	movff	postinc2,??_ETH_GetByteCount
 27252  016CE6  CFDD F016          	movff	postdec2,??_ETH_GetByteCount+1
 27253  016CEA  1E15               	comf	??_ETH_GetByteCount,f,c
 27254  016CEC  1E16               	comf	??_ETH_GetByteCount+1,f,c
 27255  016CEE  4A15               	infsnz	??_ETH_GetByteCount,f,c
 27256  016CF0  2A16               	incf	??_ETH_GetByteCount+1,f,c
 27257  016CF2  010E               	movlb	14	; () banked
 27258  016CF4  51E2               	movf	226,w,b	;volatile
 27259  016CF6  2415               	addwf	??_ETH_GetByteCount,w,c
 27260  016CF8  6E13               	movwf	?_ETH_GetByteCount,c
 27261  016CFA  51E3               	movf	227,w,b	;volatile
 27262  016CFC  2016               	addwfc	??_ETH_GetByteCount+1,w,c
 27263  016CFE  6E14               	movwf	?_ETH_GetByteCount+1,c
 27264  016D00  0012               	return	
 27265  016D02                     __end_of_ETH_GetByteCount:
 27266                           	opt stack 0
 27267                           tosu	equ	0xFFF
 27268                           tosh	equ	0xFFE
 27269                           tosl	equ	0xFFD
 27270                           pclath	equ	0xFFA
 27271                           tblptru	equ	0xFF8
 27272                           tblptrh	equ	0xFF7
 27273                           tblptrl	equ	0xFF6
 27274                           tablat	equ	0xFF5
 27275                           prodh	equ	0xFF4
 27276                           prodl	equ	0xFF3
 27277                           intcon	equ	0xFF2
 27278                           indf0	equ	0xFEF
 27279                           postinc0	equ	0xFEE
 27280                           fsr0h	equ	0xFEA
 27281                           fsr0l	equ	0xFE9
 27282                           wreg	equ	0xFE8
 27283                           indf1	equ	0xFE7
 27284                           postinc1	equ	0xFE6
 27285                           postdec1	equ	0xFE5
 27286                           plusw1	equ	0xFE3
 27287                           fsr1h	equ	0xFE2
 27288                           fsr1l	equ	0xFE1
 27289                           indf2	equ	0xFDF
 27290                           postinc2	equ	0xFDE
 27291                           postdec2	equ	0xFDD
 27292                           plusw2	equ	0xFDB
 27293                           fsr2h	equ	0xFDA
 27294                           fsr2l	equ	0xFD9
 27295                           status	equ	0xFD8
 27296                           
 27297 ;; *************** function _ETH_WriteString *****************
 27298 ;; Defined at:
 27299 ;;		line 578 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 27300 ;; Parameters:    Size  Location     Type
 27301 ;;  string          2   18[COMRAM] PTR const unsigned char 
 27302 ;;		 -> dhcpName(13), 
 27303 ;; Auto vars:     Size  Location     Type
 27304 ;;  length          2   20[COMRAM] unsigned int 
 27305 ;; Return value:  Size  Location     Type
 27306 ;;                  2   18[COMRAM] unsigned int 
 27307 ;; Registers used:
 27308 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27309 ;; Tracked objects:
 27310 ;;		On entry : 0/0
 27311 ;;		On exit  : 0/0
 27312 ;;		Unchanged: 0/0
 27313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27318 ;;Total ram usage:        4 bytes
 27319 ;; Hardware stack levels used:    1
 27320 ;; Hardware stack levels required when called:    5
 27321 ;; This function calls:
 27322 ;;		_ETH_EdataWrite
 27323 ;; This function is called by:
 27324 ;;		_sendRequest
 27325 ;; This function uses a non-reentrant model
 27326 ;;
 27327                           
 27328                           	psect	text112
 27329  01677E                     __ptext112:
 27330                           	opt stack 0
 27331  01677E                     _ETH_WriteString:
 27332                           	opt stack 18
 27333                           
 27334                           ;ETHxxJ6x_driver.c: 580: uint16_t length = 0;
 27335                           
 27336                           ; BSR set to: 14
 27337                           ;incstack = 0
 27338  01677E  0E00               	movlw	0
 27339  016780  6E16               	movwf	ETH_WriteString@length+1,c
 27340  016782  0E00               	movlw	0
 27341  016784  6E15               	movwf	ETH_WriteString@length,c
 27342                           
 27343                           ;ETHxxJ6x_driver.c: 581: while(*string && (EWRPT < ((8192)-1)))
 27344  016786  D00E               	goto	l592
 27345  016788                     
 27346                           ;ETHxxJ6x_driver.c: 582: {
 27347                           ;ETHxxJ6x_driver.c: 583: ETH_EdataWrite(*string++);
 27348  016788  C013  FFF6         	movff	ETH_WriteString@string,tblptrl
 27349  01678C  C014  FFF7         	movff	ETH_WriteString@string+1,tblptrh
 27350  016790                     	if	0	;tblptru may be non-zero
 27351  016790                     	endif
 27352  016790                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27353  016790  0E00               	movlw	low (__mediumconst shr (0+16))
 27354  016792  6EF8               	movwf	tblptru,c
 27355  016794                     	endif
 27356  016794  0008               	tblrd		*
 27357  016796  50F5               	movf	tablat,w,c
 27358  016798  EC9A  F0B7         	call	_ETH_EdataWrite
 27359  01679C  4A13               	infsnz	ETH_WriteString@string,f,c
 27360  01679E  2A14               	incf	ETH_WriteString@string+1,f,c
 27361                           
 27362                           ;ETHxxJ6x_driver.c: 584: length ++;
 27363  0167A0  4A15               	infsnz	ETH_WriteString@length,f,c
 27364  0167A2  2A16               	incf	ETH_WriteString@length+1,f,c
 27365  0167A4                     l592:
 27366  0167A4  C013  FFF6         	movff	ETH_WriteString@string,tblptrl
 27367  0167A8  C014  FFF7         	movff	ETH_WriteString@string+1,tblptrh
 27368  0167AC                     	if	0	;tblptru may be non-zero
 27369  0167AC                     	endif
 27370  0167AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27371  0167AC  0E00               	movlw	low (__mediumconst shr (0+16))
 27372  0167AE  6EF8               	movwf	tblptru,c
 27373  0167B0                     	endif
 27374  0167B0  0008               	tblrd		*
 27375  0167B2  50F5               	movf	tablat,w,c
 27376  0167B4  0900               	iorlw	0
 27377  0167B6  B4D8               	btfsc	status,2,c
 27378  0167B8  0012               	return	
 27379  0167BA  010E               	movlb	14	; () banked
 27380  0167BC  29E2               	incf	226,w,b	;volatile
 27381  0167BE  0E1F               	movlw	31
 27382  0167C0  59E3               	subwfb	227,w,b	;volatile
 27383  0167C2  B0D8               	btfsc	status,0,c
 27384  0167C4  0012               	return	
 27385  0167C6  D7E0               	goto	l593
 27386  0167C8                     __end_of_ETH_WriteString:
 27387                           	opt stack 0
 27388                           tosu	equ	0xFFF
 27389                           tosh	equ	0xFFE
 27390                           tosl	equ	0xFFD
 27391                           pclath	equ	0xFFA
 27392                           tblptru	equ	0xFF8
 27393                           tblptrh	equ	0xFF7
 27394                           tblptrl	equ	0xFF6
 27395                           tablat	equ	0xFF5
 27396                           prodh	equ	0xFF4
 27397                           prodl	equ	0xFF3
 27398                           intcon	equ	0xFF2
 27399                           indf0	equ	0xFEF
 27400                           postinc0	equ	0xFEE
 27401                           fsr0h	equ	0xFEA
 27402                           fsr0l	equ	0xFE9
 27403                           wreg	equ	0xFE8
 27404                           indf1	equ	0xFE7
 27405                           postinc1	equ	0xFE6
 27406                           postdec1	equ	0xFE5
 27407                           plusw1	equ	0xFE3
 27408                           fsr1h	equ	0xFE2
 27409                           fsr1l	equ	0xFE1
 27410                           indf2	equ	0xFDF
 27411                           postinc2	equ	0xFDE
 27412                           postdec2	equ	0xFDD
 27413                           plusw2	equ	0xFDB
 27414                           fsr2h	equ	0xFDA
 27415                           fsr2l	equ	0xFD9
 27416                           status	equ	0xFD8
 27417                           
 27418 ;; *************** function _DHCP_WriteZeros *****************
 27419 ;; Defined at:
 27420 ;;		line 483 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 27421 ;; Parameters:    Size  Location     Type
 27422 ;;  length          2   19[COMRAM] unsigned int 
 27423 ;; Auto vars:     Size  Location     Type
 27424 ;;		None
 27425 ;; Return value:  Size  Location     Type
 27426 ;;                  1    wreg      void 
 27427 ;; Registers used:
 27428 ;;		wreg, status,2, status,0, cstack
 27429 ;; Tracked objects:
 27430 ;;		On entry : 0/0
 27431 ;;		On exit  : 0/0
 27432 ;;		Unchanged: 0/0
 27433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27438 ;;Total ram usage:        2 bytes
 27439 ;; Hardware stack levels used:    1
 27440 ;; Hardware stack levels required when called:    6
 27441 ;; This function calls:
 27442 ;;		_ETH_Write8
 27443 ;; This function is called by:
 27444 ;;		_sendRequest
 27445 ;; This function uses a non-reentrant model
 27446 ;;
 27447                           
 27448                           	psect	text113
 27449  016DBC                     __ptext113:
 27450                           	opt stack 0
 27451  016DBC                     _DHCP_WriteZeros:
 27452                           	opt stack 17
 27453                           
 27454                           ;dhcp_client.c: 485: while(length--)
 27455                           
 27456                           ;incstack = 0
 27457  016DBC  D003               	goto	l1434
 27458  016DBE                     l10530:
 27459                           
 27460                           ;dhcp_client.c: 486: {
 27461                           ;dhcp_client.c: 487: ETH_Write8(0);
 27462  016DBE  0E00               	movlw	0
 27463  016DC0  EC8A  F0B7         	call	_ETH_Write8
 27464  016DC4                     l1434:
 27465  016DC4  0614               	decf	DHCP_WriteZeros@length,f,c
 27466  016DC6  A0D8               	btfss	status,0,c
 27467  016DC8  0615               	decf	DHCP_WriteZeros@length+1,f,c
 27468  016DCA  2814               	incf	DHCP_WriteZeros@length,w,c
 27469  016DCC  E1F8               	bnz	l10530
 27470  016DCE  2815               	incf	DHCP_WriteZeros@length+1,w,c
 27471  016DD0  B4D8               	btfsc	status,2,c
 27472  016DD2  0012               	return	
 27473  016DD4  D7F4               	goto	l1435
 27474  016DD6                     __end_of_DHCP_WriteZeros:
 27475                           	opt stack 0
 27476                           tosu	equ	0xFFF
 27477                           tosh	equ	0xFFE
 27478                           tosl	equ	0xFFD
 27479                           pclath	equ	0xFFA
 27480                           tblptru	equ	0xFF8
 27481                           tblptrh	equ	0xFF7
 27482                           tblptrl	equ	0xFF6
 27483                           tablat	equ	0xFF5
 27484                           prodh	equ	0xFF4
 27485                           prodl	equ	0xFF3
 27486                           intcon	equ	0xFF2
 27487                           indf0	equ	0xFEF
 27488                           postinc0	equ	0xFEE
 27489                           fsr0h	equ	0xFEA
 27490                           fsr0l	equ	0xFE9
 27491                           wreg	equ	0xFE8
 27492                           indf1	equ	0xFE7
 27493                           postinc1	equ	0xFE6
 27494                           postdec1	equ	0xFE5
 27495                           plusw1	equ	0xFE3
 27496                           fsr1h	equ	0xFE2
 27497                           fsr1l	equ	0xFE1
 27498                           indf2	equ	0xFDF
 27499                           postinc2	equ	0xFDE
 27500                           postdec2	equ	0xFDD
 27501                           plusw2	equ	0xFDB
 27502                           fsr2h	equ	0xFDA
 27503                           fsr2l	equ	0xFD9
 27504                           status	equ	0xFD8
 27505                           
 27506 ;; *************** function _ETH_Write8 *****************
 27507 ;; Defined at:
 27508 ;;		line 540 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;  data            1    wreg     unsigned char 
 27511 ;; Auto vars:     Size  Location     Type
 27512 ;;  data            1   18[COMRAM] unsigned char 
 27513 ;; Return value:  Size  Location     Type
 27514 ;;                  1    wreg      void 
 27515 ;; Registers used:
 27516 ;;		wreg, status,2, cstack
 27517 ;; Tracked objects:
 27518 ;;		On entry : 0/0
 27519 ;;		On exit  : 0/0
 27520 ;;		Unchanged: 0/0
 27521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27526 ;;Total ram usage:        1 bytes
 27527 ;; Hardware stack levels used:    1
 27528 ;; Hardware stack levels required when called:    5
 27529 ;; This function calls:
 27530 ;;		_ETH_EdataWrite
 27531 ;; This function is called by:
 27532 ;;		_IPv4_Start
 27533 ;;		_sendRequest
 27534 ;;		_DHCP_WriteZeros
 27535 ;;		_DNS_Query
 27536 ;;		_NTP_Request
 27537 ;;		_TFTP_Read_Write_Request
 27538 ;; This function uses a non-reentrant model
 27539 ;;
 27540                           
 27541                           	psect	text114
 27542  016F14                     __ptext114:
 27543                           	opt stack 0
 27544  016F14                     _ETH_Write8:
 27545                           	opt stack 20
 27546                           
 27547                           ;incstack = 0
 27548                           ;ETH_Write8@data stored from wreg
 27549  016F14  6E13               	movwf	ETH_Write8@data,c
 27550                           
 27551                           ;ETHxxJ6x_driver.c: 542: ETH_EdataWrite(data);
 27552  016F16  5013               	movf	ETH_Write8@data,w,c
 27553  016F18  EC9A  F0B7         	call	_ETH_EdataWrite
 27554  016F1C  0012               	return		;funcret
 27555  016F1E                     __end_of_ETH_Write8:
 27556                           	opt stack 0
 27557                           tosu	equ	0xFFF
 27558                           tosh	equ	0xFFE
 27559                           tosl	equ	0xFFD
 27560                           pclath	equ	0xFFA
 27561                           tblptru	equ	0xFF8
 27562                           tblptrh	equ	0xFF7
 27563                           tblptrl	equ	0xFF6
 27564                           tablat	equ	0xFF5
 27565                           prodh	equ	0xFF4
 27566                           prodl	equ	0xFF3
 27567                           intcon	equ	0xFF2
 27568                           indf0	equ	0xFEF
 27569                           postinc0	equ	0xFEE
 27570                           fsr0h	equ	0xFEA
 27571                           fsr0l	equ	0xFE9
 27572                           wreg	equ	0xFE8
 27573                           indf1	equ	0xFE7
 27574                           postinc1	equ	0xFE6
 27575                           postdec1	equ	0xFE5
 27576                           plusw1	equ	0xFE3
 27577                           fsr1h	equ	0xFE2
 27578                           fsr1l	equ	0xFE1
 27579                           indf2	equ	0xFDF
 27580                           postinc2	equ	0xFDE
 27581                           postdec2	equ	0xFDD
 27582                           plusw2	equ	0xFDB
 27583                           fsr2h	equ	0xFDA
 27584                           fsr2l	equ	0xFD9
 27585                           status	equ	0xFD8
 27586                           
 27587 ;; *************** function _ETH_EdataWrite *****************
 27588 ;; Defined at:
 27589 ;;		line 114 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 27590 ;; Parameters:    Size  Location     Type
 27591 ;;  d               1    wreg     unsigned char 
 27592 ;; Auto vars:     Size  Location     Type
 27593 ;;  d               1    0[COMRAM] unsigned char 
 27594 ;; Return value:  Size  Location     Type
 27595 ;;                  1    wreg      void 
 27596 ;; Registers used:
 27597 ;;		wreg
 27598 ;; Tracked objects:
 27599 ;;		On entry : 0/0
 27600 ;;		On exit  : 0/0
 27601 ;;		Unchanged: 0/0
 27602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27607 ;;Total ram usage:        0 bytes
 27608 ;; Hardware stack levels used:    1
 27609 ;; Hardware stack levels required when called:    4
 27610 ;; This function calls:
 27611 ;;		Nothing
 27612 ;; This function is called by:
 27613 ;;		_ETH_Write8
 27614 ;;		_ETH_Write16
 27615 ;;		_ETH_Write32
 27616 ;;		_ETH_WriteString
 27617 ;;		_ETH_WriteBlock
 27618 ;;		_ETH_WriteStart
 27619 ;;		_ETH_Insert
 27620 ;;		_ETH_Write24
 27621 ;; This function uses a non-reentrant model
 27622 ;;
 27623                           
 27624                           	psect	text115
 27625  016F34                     __ptext115:
 27626                           	opt stack 0
 27627  016F34                     _ETH_EdataWrite:
 27628                           	opt stack 20
 27629                           
 27630                           ;incstack = 0
 27631  016F34  CFE8 FF61          	movff	wreg,3937	;# 
 27632  016F38  0012               	return		;funcret
 27633  016F3A                     __end_of_ETH_EdataWrite:
 27634                           	opt stack 0
 27635                           tosu	equ	0xFFF
 27636                           tosh	equ	0xFFE
 27637                           tosl	equ	0xFFD
 27638                           pclath	equ	0xFFA
 27639                           tblptru	equ	0xFF8
 27640                           tblptrh	equ	0xFF7
 27641                           tblptrl	equ	0xFF6
 27642                           tablat	equ	0xFF5
 27643                           prodh	equ	0xFF4
 27644                           prodl	equ	0xFF3
 27645                           intcon	equ	0xFF2
 27646                           indf0	equ	0xFEF
 27647                           postinc0	equ	0xFEE
 27648                           fsr0h	equ	0xFEA
 27649                           fsr0l	equ	0xFE9
 27650                           wreg	equ	0xFE8
 27651                           indf1	equ	0xFE7
 27652                           postinc1	equ	0xFE6
 27653                           postdec1	equ	0xFE5
 27654                           plusw1	equ	0xFE3
 27655                           fsr1h	equ	0xFE2
 27656                           fsr1l	equ	0xFE1
 27657                           indf2	equ	0xFDF
 27658                           postinc2	equ	0xFDE
 27659                           postdec2	equ	0xFDD
 27660                           plusw2	equ	0xFDB
 27661                           fsr2h	equ	0xFDA
 27662                           fsr2l	equ	0xFD9
 27663                           status	equ	0xFD8
 27664                           
 27665 ;; *************** function _lfsr *****************
 27666 ;; Defined at:
 27667 ;;		line 32 in file "mcc_generated_files/TCPIPLibrary/lfsr.c"
 27668 ;; Parameters:    Size  Location     Type
 27669 ;;		None
 27670 ;; Auto vars:     Size  Location     Type
 27671 ;;  lsb             1   18[COMRAM] unsigned char 
 27672 ;; Return value:  Size  Location     Type
 27673 ;;                  1    wreg      unsigned char 
 27674 ;; Registers used:
 27675 ;;		wreg, status,2, status,0
 27676 ;; Tracked objects:
 27677 ;;		On entry : 0/0
 27678 ;;		On exit  : 0/0
 27679 ;;		Unchanged: 0/0
 27680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27685 ;;Total ram usage:        1 bytes
 27686 ;; Hardware stack levels used:    1
 27687 ;; Hardware stack levels required when called:    4
 27688 ;; This function calls:
 27689 ;;		Nothing
 27690 ;; This function is called by:
 27691 ;;		_sendDHCPDISCOVER
 27692 ;; This function uses a non-reentrant model
 27693 ;;
 27694                           
 27695                           	psect	text116
 27696  016D48                     __ptext116:
 27697                           	opt stack 0
 27698  016D48                     _lfsr:
 27699                           	opt stack 23
 27700                           
 27701                           ;lfsr.c: 34: char lsb = lfsr_value & 1;
 27702                           
 27703                           ;incstack = 0
 27704  016D48  0101               	movlb	1	; () banked
 27705  016D4A  51FF               	movf	_lfsr_value& (0+255),w,b
 27706  016D4C  0B01               	andlw	1
 27707  016D4E  6E13               	movwf	lfsr@lsb,c
 27708                           
 27709                           ;lfsr.c: 35: lfsr_value >>= 1;
 27710  016D50  90D8               	bcf	status,0,c
 27711  016D52  33FF               	rrcf	_lfsr_value& (0+255),f,b
 27712                           
 27713                           ; BSR set to: 1
 27714                           ;lfsr.c: 36: if (lsb)
 27715  016D54  5013               	movf	lfsr@lsb,w,c
 27716  016D56  B4D8               	btfsc	status,2,c
 27717  016D58  D004               	goto	l1060
 27718                           
 27719                           ; BSR set to: 1
 27720                           ;lfsr.c: 37: lfsr_value ^= xor_mask;
 27721  016D5A  0102               	movlb	2	; () banked
 27722  016D5C  51C5               	movf	_xor_mask& (0+255),w,b
 27723  016D5E  0101               	movlb	1	; () banked
 27724  016D60  1BFF               	xorwf	_lfsr_value& (0+255),f,b
 27725  016D62                     l1060:
 27726                           
 27727                           ; BSR set to: 1
 27728                           ;lfsr.c: 38: return lfsr_value & 0x7f;
 27729  016D62  51FF               	movf	_lfsr_value& (0+255),w,b
 27730  016D64  0B7F               	andlw	127
 27731  016D66  0012               	return	
 27732  016D68                     __end_of_lfsr:
 27733                           	opt stack 0
 27734                           tosu	equ	0xFFF
 27735                           tosh	equ	0xFFE
 27736                           tosl	equ	0xFFD
 27737                           pclath	equ	0xFFA
 27738                           tblptru	equ	0xFF8
 27739                           tblptrh	equ	0xFF7
 27740                           tblptrl	equ	0xFF6
 27741                           tablat	equ	0xFF5
 27742                           prodh	equ	0xFF4
 27743                           prodl	equ	0xFF3
 27744                           intcon	equ	0xFF2
 27745                           indf0	equ	0xFEF
 27746                           postinc0	equ	0xFEE
 27747                           fsr0h	equ	0xFEA
 27748                           fsr0l	equ	0xFE9
 27749                           wreg	equ	0xFE8
 27750                           indf1	equ	0xFE7
 27751                           postinc1	equ	0xFE6
 27752                           postdec1	equ	0xFE5
 27753                           plusw1	equ	0xFE3
 27754                           fsr1h	equ	0xFE2
 27755                           fsr1l	equ	0xFE1
 27756                           indf2	equ	0xFDF
 27757                           postinc2	equ	0xFDE
 27758                           postdec2	equ	0xFDD
 27759                           plusw2	equ	0xFDB
 27760                           fsr2h	equ	0xFDA
 27761                           fsr2l	equ	0xFD9
 27762                           status	equ	0xFD8
 27763                           
 27764 ;; *************** function _ARPV4_Update *****************
 27765 ;; Defined at:
 27766 ;;		line 183 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 27767 ;; Parameters:    Size  Location     Type
 27768 ;;		None
 27769 ;; Auto vars:     Size  Location     Type
 27770 ;;  x               1   20[COMRAM] unsigned char 
 27771 ;;  entryPointer    2   18[COMRAM] PTR struct .
 27772 ;;		 -> arpMap(104), 
 27773 ;; Return value:  Size  Location     Type
 27774 ;;                  1    wreg      void 
 27775 ;; Registers used:
 27776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27777 ;; Tracked objects:
 27778 ;;		On entry : 0/0
 27779 ;;		On exit  : 0/0
 27780 ;;		Unchanged: 0/0
 27781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27783 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27785 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27786 ;;Total ram usage:        3 bytes
 27787 ;; Hardware stack levels used:    1
 27788 ;; Hardware stack levels required when called:    4
 27789 ;; This function calls:
 27790 ;;		Nothing
 27791 ;; This function is called by:
 27792 ;;		_Network_Manage
 27793 ;; This function uses a non-reentrant model
 27794 ;;
 27795                           
 27796                           	psect	text117
 27797  016AEA                     __ptext117:
 27798                           	opt stack 0
 27799  016AEA                     _ARPV4_Update:
 27800                           	opt stack 25
 27801                           
 27802                           ;arpv4.c: 185: arpMap_t *entryPointer = arpMap;
 27803                           
 27804                           ; BSR set to: 1
 27805                           ;incstack = 0
 27806  016AEA  0E10               	movlw	low _arpMap
 27807  016AEC  6E13               	movwf	ARPV4_Update@entryPointer,c
 27808  016AEE  0E03               	movlw	high _arpMap
 27809  016AF0  6E14               	movwf	ARPV4_Update@entryPointer+1,c
 27810                           
 27811                           ;arpv4.c: 186: for(uint8_t x=0; x < 8; x++)
 27812  016AF2  0E00               	movlw	0
 27813  016AF4  6E15               	movwf	ARPV4_Update@x,c
 27814  016AF6                     l12674:
 27815  016AF6  0E07               	movlw	7
 27816  016AF8  6415               	cpfsgt	ARPV4_Update@x,c
 27817  016AFA  D001               	goto	l332
 27818  016AFC  0012               	return	
 27819  016AFE                     l332:
 27820                           
 27821                           ;arpv4.c: 187: {
 27822                           ;arpv4.c: 188: entryPointer->age ++;
 27823  016AFE  EE20 F00C          	lfsr	2,12
 27824  016B02  5013               	movf	ARPV4_Update@entryPointer,w,c
 27825  016B04  26D9               	addwf	fsr2l,f,c
 27826  016B06  5014               	movf	ARPV4_Update@entryPointer+1,w,c
 27827  016B08  22DA               	addwfc	fsr2h,f,c
 27828  016B0A  2ADF               	incf	indf2,f,c
 27829                           
 27830                           ;arpv4.c: 189: entryPointer ++;
 27831  016B0C  0E0D               	movlw	13
 27832  016B0E  2613               	addwf	ARPV4_Update@entryPointer,f,c
 27833  016B10  0E00               	movlw	0
 27834  016B12  2214               	addwfc	ARPV4_Update@entryPointer+1,f,c
 27835  016B14  2A15               	incf	ARPV4_Update@x,f,c
 27836  016B16  D7EF               	goto	l12674
 27837  016B18                     __end_of_ARPV4_Update:
 27838                           	opt stack 0
 27839                           tosu	equ	0xFFF
 27840                           tosh	equ	0xFFE
 27841                           tosl	equ	0xFFD
 27842                           pclath	equ	0xFFA
 27843                           tblptru	equ	0xFF8
 27844                           tblptrh	equ	0xFF7
 27845                           tblptrl	equ	0xFF6
 27846                           tablat	equ	0xFF5
 27847                           prodh	equ	0xFF4
 27848                           prodl	equ	0xFF3
 27849                           intcon	equ	0xFF2
 27850                           indf0	equ	0xFEF
 27851                           postinc0	equ	0xFEE
 27852                           fsr0h	equ	0xFEA
 27853                           fsr0l	equ	0xFE9
 27854                           wreg	equ	0xFE8
 27855                           indf1	equ	0xFE7
 27856                           postinc1	equ	0xFE6
 27857                           postdec1	equ	0xFE5
 27858                           plusw1	equ	0xFE3
 27859                           fsr1h	equ	0xFE2
 27860                           fsr1l	equ	0xFE1
 27861                           indf2	equ	0xFDF
 27862                           postinc2	equ	0xFDE
 27863                           postdec2	equ	0xFDD
 27864                           plusw2	equ	0xFDB
 27865                           fsr2h	equ	0xFDA
 27866                           fsr2l	equ	0xFD9
 27867                           status	equ	0xFD8
 27868                           
 27869 ;; *************** function _INTERRUPT_InterruptManager *****************
 27870 ;; Defined at:
 27871 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 27872 ;; Parameters:    Size  Location     Type
 27873 ;;		None
 27874 ;; Auto vars:     Size  Location     Type
 27875 ;;		None
 27876 ;; Return value:  Size  Location     Type
 27877 ;;                  1    wreg      void 
 27878 ;; Registers used:
 27879 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 27880 ;; Tracked objects:
 27881 ;;		On entry : 0/0
 27882 ;;		On exit  : 0/0
 27883 ;;		Unchanged: 0/0
 27884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27887 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27888 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27889 ;;Total ram usage:       18 bytes
 27890 ;; Hardware stack levels used:    1
 27891 ;; Hardware stack levels required when called:    3
 27892 ;; This function calls:
 27893 ;;		_TMR0_ISR
 27894 ;;		_TMR1_ISR
 27895 ;; This function is called by:
 27896 ;;		Interrupt level 2
 27897 ;; This function uses a non-reentrant model
 27898 ;;
 27899                           
 27900                           	psect	intcode
 27901  000008                     __pintcode:
 27902                           	opt stack 0
 27903  000008                     _INTERRUPT_InterruptManager:
 27904                           	opt stack 14
 27905                           
 27906                           ;incstack = 0
 27907  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 27908  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 27909  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 27910  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 27911  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 27912  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 27913  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 27914  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 27915  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 27916  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
 27917  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
 27918  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 27919  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 27920  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 27921  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
 27922  000042  C04D  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
 27923  000046  C04E  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 27924  00004A  C04F  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 27925  00004E  C050  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 27926                           
 27927                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 27928  000052  BAF2               	btfsc	intcon,5,c	;volatile
 27929  000054  A4F2               	btfss	intcon,2,c	;volatile
 27930  000056  D003               	goto	i2l22
 27931                           
 27932                           ;interrupt_manager.c: 61: {
 27933                           ;interrupt_manager.c: 62: TMR0_ISR();
 27934  000058  EC8C  F0B5         	call	_TMR0_ISR	;wreg free
 27935                           
 27936                           ;interrupt_manager.c: 63: }
 27937  00005C  D006               	goto	i2l24
 27938  00005E                     i2l22:
 27939                           
 27940                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 27941  00005E  BCF2               	btfsc	intcon,6,c	;volatile
 27942  000060  A09D               	btfss	3997,0,c	;volatile
 27943  000062  D003               	goto	i2l24
 27944  000064  B09E               	btfsc	3998,0,c	;volatile
 27945                           
 27946                           ;interrupt_manager.c: 65: {
 27947                           ;interrupt_manager.c: 66: TMR1_ISR();
 27948  000066  ECB9  F0B5         	call	_TMR1_ISR	;wreg free
 27949  00006A                     i2l24:
 27950                           
 27951                           ;interrupt_manager.c: 68: else
 27952                           ;interrupt_manager.c: 69: {
 27953  00006A  C012  F050         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 27954  00006E  C011  F04F         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 27955  000072  C010  F04E         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 27956  000076  C00F  F04D         	movff	??_INTERRUPT_InterruptManager+14,btemp
 27957  00007A  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 27958  00007E  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 27959  000082  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 27960  000086  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 27961  00008A  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 27962  00008E  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 27963  000092  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 27964  000096  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 27965  00009A  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 27966  00009E  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 27967  0000A2  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 27968  0000A6  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 27969  0000AA  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 27970  0000AE  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 27971  0000B2  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 27972  0000B4  0011               	retfie		f
 27973  0000B6                     __end_of_INTERRUPT_InterruptManager:
 27974                           	opt stack 0
 27975                           tosu	equ	0xFFF
 27976                           tosh	equ	0xFFE
 27977                           tosl	equ	0xFFD
 27978                           pclatu	equ	0xFFB
 27979                           pclath	equ	0xFFA
 27980                           tblptru	equ	0xFF8
 27981                           tblptrh	equ	0xFF7
 27982                           tblptrl	equ	0xFF6
 27983                           tablat	equ	0xFF5
 27984                           prodh	equ	0xFF4
 27985                           prodl	equ	0xFF3
 27986                           intcon	equ	0xFF2
 27987                           indf0	equ	0xFEF
 27988                           postinc0	equ	0xFEE
 27989                           fsr0h	equ	0xFEA
 27990                           fsr0l	equ	0xFE9
 27991                           wreg	equ	0xFE8
 27992                           indf1	equ	0xFE7
 27993                           postinc1	equ	0xFE6
 27994                           postdec1	equ	0xFE5
 27995                           plusw1	equ	0xFE3
 27996                           fsr1h	equ	0xFE2
 27997                           fsr1l	equ	0xFE1
 27998                           indf2	equ	0xFDF
 27999                           postinc2	equ	0xFDE
 28000                           postdec2	equ	0xFDD
 28001                           plusw2	equ	0xFDB
 28002                           fsr2h	equ	0xFDA
 28003                           fsr2l	equ	0xFD9
 28004                           status	equ	0xFD8
 28005                           
 28006 ;; *************** function _TMR1_ISR *****************
 28007 ;; Defined at:
 28008 ;;		line 144 in file "mcc_generated_files/tmr1.c"
 28009 ;; Parameters:    Size  Location     Type
 28010 ;;		None
 28011 ;; Auto vars:     Size  Location     Type
 28012 ;;		None
 28013 ;; Return value:  Size  Location     Type
 28014 ;;                  1    wreg      void 
 28015 ;; Registers used:
 28016 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 28017 ;; Tracked objects:
 28018 ;;		On entry : 0/0
 28019 ;;		On exit  : 0/0
 28020 ;;		Unchanged: 0/0
 28021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28026 ;;Total ram usage:        0 bytes
 28027 ;; Hardware stack levels used:    1
 28028 ;; Hardware stack levels required when called:    2
 28029 ;; This function calls:
 28030 ;;		_TMR1_CallBack
 28031 ;; This function is called by:
 28032 ;;		_INTERRUPT_InterruptManager
 28033 ;; This function uses a non-reentrant model
 28034 ;;
 28035                           
 28036                           	psect	text119
 28037  016B72                     __ptext119:
 28038                           	opt stack 0
 28039  016B72                     _TMR1_ISR:
 28040                           	opt stack 14
 28041                           
 28042                           ;tmr1.c: 146: static volatile uint16_t CountCallBack = 0;
 28043                           ;tmr1.c: 149: PIR1bits.TMR1IF = 0;
 28044                           
 28045                           ;incstack = 0
 28046  016B72  909E               	bcf	3998,0,c	;volatile
 28047                           
 28048                           ;tmr1.c: 152: TMR1H = (timer1ReloadVal >> 8);
 28049  016B74  504C               	movf	_timer1ReloadVal+1,w,c	;volatile
 28050  016B76  6ECF               	movwf	4047,c	;volatile
 28051                           
 28052                           ;tmr1.c: 153: TMR1L = (uint8_t) timer1ReloadVal;
 28053  016B78  C04B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 28054                           
 28055                           ;tmr1.c: 156: if (++CountCallBack >= 20)
 28056  016B7C  0102               	movlb	2	; () banked
 28057  016B7E  4B54               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
 28058  016B80  2B55               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 28059  016B82  5155               	movf	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 28060  016B84  E104               	bnz	i2u867_40
 28061  016B86  0E14               	movlw	20
 28062  016B88  5D54               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
 28063  016B8A  A0D8               	btfss	status,0,c
 28064  016B8C  0012               	return	
 28065  016B8E                     i2u867_40:
 28066                           
 28067                           ; BSR set to: 2
 28068                           ;tmr1.c: 157: {
 28069                           ;tmr1.c: 159: TMR1_CallBack();
 28070  016B8E  EC81  F0B6         	call	_TMR1_CallBack	;wreg free
 28071                           
 28072                           ;tmr1.c: 162: CountCallBack = 0;
 28073  016B92  0E00               	movlw	0
 28074  016B94  0102               	movlb	2	; () banked
 28075  016B96  6F55               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
 28076  016B98  0E00               	movlw	0
 28077  016B9A  6F54               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
 28078  016B9C  0012               	return	
 28079  016B9E                     __end_of_TMR1_ISR:
 28080                           	opt stack 0
 28081                           tosu	equ	0xFFF
 28082                           tosh	equ	0xFFE
 28083                           tosl	equ	0xFFD
 28084                           pclatu	equ	0xFFB
 28085                           pclath	equ	0xFFA
 28086                           tblptru	equ	0xFF8
 28087                           tblptrh	equ	0xFF7
 28088                           tblptrl	equ	0xFF6
 28089                           tablat	equ	0xFF5
 28090                           prodh	equ	0xFF4
 28091                           prodl	equ	0xFF3
 28092                           intcon	equ	0xFF2
 28093                           indf0	equ	0xFEF
 28094                           postinc0	equ	0xFEE
 28095                           fsr0h	equ	0xFEA
 28096                           fsr0l	equ	0xFE9
 28097                           wreg	equ	0xFE8
 28098                           indf1	equ	0xFE7
 28099                           postinc1	equ	0xFE6
 28100                           postdec1	equ	0xFE5
 28101                           plusw1	equ	0xFE3
 28102                           fsr1h	equ	0xFE2
 28103                           fsr1l	equ	0xFE1
 28104                           indf2	equ	0xFDF
 28105                           postinc2	equ	0xFDE
 28106                           postdec2	equ	0xFDD
 28107                           plusw2	equ	0xFDB
 28108                           fsr2h	equ	0xFDA
 28109                           fsr2l	equ	0xFD9
 28110                           status	equ	0xFD8
 28111                           
 28112 ;; *************** function _TMR1_CallBack *****************
 28113 ;; Defined at:
 28114 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 28115 ;; Parameters:    Size  Location     Type
 28116 ;;		None
 28117 ;; Auto vars:     Size  Location     Type
 28118 ;;		None
 28119 ;; Return value:  Size  Location     Type
 28120 ;;                  1    wreg      void 
 28121 ;; Registers used:
 28122 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 28123 ;; Tracked objects:
 28124 ;;		On entry : 0/0
 28125 ;;		On exit  : 0/0
 28126 ;;		Unchanged: 0/0
 28127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28132 ;;Total ram usage:        0 bytes
 28133 ;; Hardware stack levels used:    1
 28134 ;; Hardware stack levels required when called:    1
 28135 ;; This function calls:
 28136 ;;		Absolute function
 28137 ;;		_TMR1_DefaultInterruptHandler
 28138 ;;		_rtcc_handler
 28139 ;; This function is called by:
 28140 ;;		_TMR1_ISR
 28141 ;; This function uses a non-reentrant model
 28142 ;;
 28143                           
 28144                           	psect	text120
 28145  016D02                     __ptext120:
 28146                           	opt stack 0
 28147  016D02                     _TMR1_CallBack:
 28148                           	opt stack 14
 28149                           
 28150                           ;tmr1.c: 170: if(TMR1_InterruptHandler)
 28151                           
 28152                           ; BSR set to: 2
 28153                           ;incstack = 0
 28154  016D02  0102               	movlb	2	; () banked
 28155  016D04  51FA               	movf	_TMR1_InterruptHandler& (0+255),w,b
 28156  016D06  11FB               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 28157  016D08  11FC               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 28158  016D0A  B4D8               	btfsc	status,2,c
 28159  016D0C  0012               	return	
 28160                           
 28161                           ; BSR set to: 2
 28162                           ;tmr1.c: 171: {
 28163                           ;tmr1.c: 172: TMR1_InterruptHandler();
 28164  016D0E  D801               	call	i2u840_48
 28165  016D10  0012               	return	
 28166  016D12                     i2u840_48:
 28167  016D12  0005               	push	
 28168  016D14  6EFA               	movwf	pclath,c
 28169  016D16  51FA               	movf	_TMR1_InterruptHandler& (0+255),w,b
 28170  016D18  6EFD               	movwf	tosl,c
 28171  016D1A  51FB               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 28172  016D1C  6EFE               	movwf	tosh,c
 28173  016D1E  51FC               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 28174  016D20  6EFF               	movwf	tosu,c
 28175  016D22  50FA               	movf	pclath,w,c
 28176  016D24  0012               	return		;indir
 28177  016D26                     __end_of_TMR1_CallBack:
 28178                           	opt stack 0
 28179                           tosu	equ	0xFFF
 28180                           tosh	equ	0xFFE
 28181                           tosl	equ	0xFFD
 28182                           pclatu	equ	0xFFB
 28183                           pclath	equ	0xFFA
 28184                           tblptru	equ	0xFF8
 28185                           tblptrh	equ	0xFF7
 28186                           tblptrl	equ	0xFF6
 28187                           tablat	equ	0xFF5
 28188                           prodh	equ	0xFF4
 28189                           prodl	equ	0xFF3
 28190                           intcon	equ	0xFF2
 28191                           indf0	equ	0xFEF
 28192                           postinc0	equ	0xFEE
 28193                           fsr0h	equ	0xFEA
 28194                           fsr0l	equ	0xFE9
 28195                           wreg	equ	0xFE8
 28196                           indf1	equ	0xFE7
 28197                           postinc1	equ	0xFE6
 28198                           postdec1	equ	0xFE5
 28199                           plusw1	equ	0xFE3
 28200                           fsr1h	equ	0xFE2
 28201                           fsr1l	equ	0xFE1
 28202                           indf2	equ	0xFDF
 28203                           postinc2	equ	0xFDE
 28204                           postdec2	equ	0xFDD
 28205                           plusw2	equ	0xFDB
 28206                           fsr2h	equ	0xFDA
 28207                           fsr2l	equ	0xFD9
 28208                           status	equ	0xFD8
 28209                           
 28210 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 28211 ;; Defined at:
 28212 ;;		line 180 in file "mcc_generated_files/tmr1.c"
 28213 ;; Parameters:    Size  Location     Type
 28214 ;;		None
 28215 ;; Auto vars:     Size  Location     Type
 28216 ;;		None
 28217 ;; Return value:  Size  Location     Type
 28218 ;;                  1    wreg      void 
 28219 ;; Registers used:
 28220 ;;		None
 28221 ;; Tracked objects:
 28222 ;;		On entry : 0/0
 28223 ;;		On exit  : 0/0
 28224 ;;		Unchanged: 0/0
 28225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28230 ;;Total ram usage:        0 bytes
 28231 ;; Hardware stack levels used:    1
 28232 ;; This function calls:
 28233 ;;		Nothing
 28234 ;; This function is called by:
 28235 ;;		_TMR1_Initialize
 28236 ;;		_TMR1_CallBack
 28237 ;; This function uses a non-reentrant model
 28238 ;;
 28239                           
 28240                           	psect	text121
 28241  016F42                     __ptext121:
 28242                           	opt stack 0
 28243  016F42                     _TMR1_DefaultInterruptHandler:
 28244                           	opt stack 14
 28245                           
 28246                           ;incstack = 0
 28247  016F42  0012               	return		;funcret
 28248  016F44                     __end_of_TMR1_DefaultInterruptHandler:
 28249                           	opt stack 0
 28250                           tosu	equ	0xFFF
 28251                           tosh	equ	0xFFE
 28252                           tosl	equ	0xFFD
 28253                           pclatu	equ	0xFFB
 28254                           pclath	equ	0xFFA
 28255                           tblptru	equ	0xFF8
 28256                           tblptrh	equ	0xFF7
 28257                           tblptrl	equ	0xFF6
 28258                           tablat	equ	0xFF5
 28259                           prodh	equ	0xFF4
 28260                           prodl	equ	0xFF3
 28261                           intcon	equ	0xFF2
 28262                           indf0	equ	0xFEF
 28263                           postinc0	equ	0xFEE
 28264                           fsr0h	equ	0xFEA
 28265                           fsr0l	equ	0xFE9
 28266                           wreg	equ	0xFE8
 28267                           indf1	equ	0xFE7
 28268                           postinc1	equ	0xFE6
 28269                           postdec1	equ	0xFE5
 28270                           plusw1	equ	0xFE3
 28271                           fsr1h	equ	0xFE2
 28272                           fsr1l	equ	0xFE1
 28273                           indf2	equ	0xFDF
 28274                           postinc2	equ	0xFDE
 28275                           postdec2	equ	0xFDD
 28276                           plusw2	equ	0xFDB
 28277                           fsr2h	equ	0xFDA
 28278                           fsr2l	equ	0xFD9
 28279                           status	equ	0xFD8
 28280                           
 28281 ;; *************** function _rtcc_handler *****************
 28282 ;; Defined at:
 28283 ;;		line 95 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 28284 ;; Parameters:    Size  Location     Type
 28285 ;;		None
 28286 ;; Auto vars:     Size  Location     Type
 28287 ;;		None
 28288 ;; Return value:  Size  Location     Type
 28289 ;;                  1    wreg      void 
 28290 ;; Registers used:
 28291 ;;		wreg, status,2, status,0
 28292 ;; Tracked objects:
 28293 ;;		On entry : 0/0
 28294 ;;		On exit  : 0/0
 28295 ;;		Unchanged: 0/0
 28296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28301 ;;Total ram usage:        0 bytes
 28302 ;; Hardware stack levels used:    1
 28303 ;; This function calls:
 28304 ;;		Nothing
 28305 ;; This function is called by:
 28306 ;;		_rtcc_init
 28307 ;;		_TMR1_CallBack
 28308 ;; This function uses a non-reentrant model
 28309 ;;
 28310                           
 28311                           	psect	text122
 28312  016E3A                     __ptext122:
 28313                           	opt stack 0
 28314  016E3A                     _rtcc_handler:
 28315                           	opt stack 14
 28316                           
 28317                           ;rtcc.c: 97: device_time++;
 28318                           
 28319                           ;incstack = 0
 28320  016E3A  0E01               	movlw	1
 28321  016E3C  0102               	movlb	2	; () banked
 28322  016E3E  272E               	addwf	_device_time& (0+255),f,b	;volatile
 28323  016E40  0E00               	movlw	0
 28324  016E42  232F               	addwfc	(_device_time+1)& (0+255),f,b	;volatile
 28325  016E44  2330               	addwfc	(_device_time+2)& (0+255),f,b	;volatile
 28326  016E46  2331               	addwfc	(_device_time+3)& (0+255),f,b	;volatile
 28327                           
 28328                           ; BSR set to: 2
 28329  016E48  0012               	return		;funcret
 28330  016E4A                     __end_of_rtcc_handler:
 28331                           	opt stack 0
 28332                           tosu	equ	0xFFF
 28333                           tosh	equ	0xFFE
 28334                           tosl	equ	0xFFD
 28335                           pclatu	equ	0xFFB
 28336                           pclath	equ	0xFFA
 28337                           tblptru	equ	0xFF8
 28338                           tblptrh	equ	0xFF7
 28339                           tblptrl	equ	0xFF6
 28340                           tablat	equ	0xFF5
 28341                           prodh	equ	0xFF4
 28342                           prodl	equ	0xFF3
 28343                           intcon	equ	0xFF2
 28344                           indf0	equ	0xFEF
 28345                           postinc0	equ	0xFEE
 28346                           fsr0h	equ	0xFEA
 28347                           fsr0l	equ	0xFE9
 28348                           wreg	equ	0xFE8
 28349                           indf1	equ	0xFE7
 28350                           postinc1	equ	0xFE6
 28351                           postdec1	equ	0xFE5
 28352                           plusw1	equ	0xFE3
 28353                           fsr1h	equ	0xFE2
 28354                           fsr1l	equ	0xFE1
 28355                           indf2	equ	0xFDF
 28356                           postinc2	equ	0xFDE
 28357                           postdec2	equ	0xFDD
 28358                           plusw2	equ	0xFDB
 28359                           fsr2h	equ	0xFDA
 28360                           fsr2l	equ	0xFD9
 28361                           status	equ	0xFD8
 28362                           
 28363 ;; *************** function _TMR0_ISR *****************
 28364 ;; Defined at:
 28365 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 28366 ;; Parameters:    Size  Location     Type
 28367 ;;		None
 28368 ;; Auto vars:     Size  Location     Type
 28369 ;;		None
 28370 ;; Return value:  Size  Location     Type
 28371 ;;                  1    wreg      void 
 28372 ;; Registers used:
 28373 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 28374 ;; Tracked objects:
 28375 ;;		On entry : 0/0
 28376 ;;		On exit  : 0/0
 28377 ;;		Unchanged: 0/0
 28378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28383 ;;Total ram usage:        0 bytes
 28384 ;; Hardware stack levels used:    1
 28385 ;; Hardware stack levels required when called:    1
 28386 ;; This function calls:
 28387 ;;		Absolute function
 28388 ;;		_TMR0_DefaultInterruptHandler
 28389 ;; This function is called by:
 28390 ;;		_INTERRUPT_InterruptManager
 28391 ;; This function uses a non-reentrant model
 28392 ;;
 28393                           
 28394                           	psect	text123
 28395  016B18                     __ptext123:
 28396                           	opt stack 0
 28397  016B18                     _TMR0_ISR:
 28398                           	opt stack 15
 28399                           
 28400                           ;tmr0.c: 136: INTCONbits.TMR0IF = 0;
 28401                           
 28402                           ; BSR set to: 2
 28403                           ;incstack = 0
 28404  016B18  94F2               	bcf	intcon,2,c	;volatile
 28405                           
 28406                           ;tmr0.c: 140: TMR0H = timer0ReloadVal >> 8;
 28407  016B1A  504A               	movf	_timer0ReloadVal+1,w,c	;volatile
 28408  016B1C  6ED7               	movwf	4055,c	;volatile
 28409                           
 28410                           ;tmr0.c: 141: TMR0L = (uint8_t) timer0ReloadVal;
 28411  016B1E  C049  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 28412                           
 28413                           ;tmr0.c: 143: if(TMR0_InterruptHandler)
 28414  016B22  0103               	movlb	3	; () banked
 28415  016B24  51F0               	movf	_TMR0_InterruptHandler& (0+255),w,b
 28416  016B26  11F1               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 28417  016B28  11F2               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 28418  016B2A  B4D8               	btfsc	status,2,c
 28419  016B2C  0012               	return	
 28420                           
 28421                           ; BSR set to: 3
 28422                           ;tmr0.c: 144: {
 28423                           ;tmr0.c: 145: TMR0_InterruptHandler();
 28424  016B2E  D801               	call	i2u866_48
 28425  016B30  0012               	return	
 28426  016B32                     i2u866_48:
 28427  016B32  0005               	push	
 28428  016B34  6EFA               	movwf	pclath,c
 28429  016B36  51F0               	movf	_TMR0_InterruptHandler& (0+255),w,b
 28430  016B38  6EFD               	movwf	tosl,c
 28431  016B3A  51F1               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 28432  016B3C  6EFE               	movwf	tosh,c
 28433  016B3E  51F2               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 28434  016B40  6EFF               	movwf	tosu,c
 28435  016B42  50FA               	movf	pclath,w,c
 28436  016B44  0012               	return		;indir
 28437  016B46                     __end_of_TMR0_ISR:
 28438                           	opt stack 0
 28439                           tosu	equ	0xFFF
 28440                           tosh	equ	0xFFE
 28441                           tosl	equ	0xFFD
 28442                           pclatu	equ	0xFFB
 28443                           pclath	equ	0xFFA
 28444                           tblptru	equ	0xFF8
 28445                           tblptrh	equ	0xFF7
 28446                           tblptrl	equ	0xFF6
 28447                           tablat	equ	0xFF5
 28448                           prodh	equ	0xFF4
 28449                           prodl	equ	0xFF3
 28450                           intcon	equ	0xFF2
 28451                           indf0	equ	0xFEF
 28452                           postinc0	equ	0xFEE
 28453                           fsr0h	equ	0xFEA
 28454                           fsr0l	equ	0xFE9
 28455                           wreg	equ	0xFE8
 28456                           indf1	equ	0xFE7
 28457                           postinc1	equ	0xFE6
 28458                           postdec1	equ	0xFE5
 28459                           plusw1	equ	0xFE3
 28460                           fsr1h	equ	0xFE2
 28461                           fsr1l	equ	0xFE1
 28462                           indf2	equ	0xFDF
 28463                           postinc2	equ	0xFDE
 28464                           postdec2	equ	0xFDD
 28465                           plusw2	equ	0xFDB
 28466                           fsr2h	equ	0xFDA
 28467                           fsr2l	equ	0xFD9
 28468                           status	equ	0xFD8
 28469                           
 28470 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 28471 ;; Defined at:
 28472 ;;		line 156 in file "mcc_generated_files/tmr0.c"
 28473 ;; Parameters:    Size  Location     Type
 28474 ;;		None
 28475 ;; Auto vars:     Size  Location     Type
 28476 ;;		None
 28477 ;; Return value:  Size  Location     Type
 28478 ;;                  1    wreg      void 
 28479 ;; Registers used:
 28480 ;;		None
 28481 ;; Tracked objects:
 28482 ;;		On entry : 0/0
 28483 ;;		On exit  : 0/0
 28484 ;;		Unchanged: 0/0
 28485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28490 ;;Total ram usage:        0 bytes
 28491 ;; Hardware stack levels used:    1
 28492 ;; This function calls:
 28493 ;;		Nothing
 28494 ;; This function is called by:
 28495 ;;		_TMR0_Initialize
 28496 ;;		_TMR0_ISR
 28497 ;; This function uses a non-reentrant model
 28498 ;;
 28499                           
 28500                           	psect	text124
 28501  016F44                     __ptext124:
 28502                           	opt stack 0
 28503  016F44                     _TMR0_DefaultInterruptHandler:
 28504                           	opt stack 15
 28505                           
 28506                           ;incstack = 0
 28507  016F44  0012               	return		;funcret
 28508  016F46                     __end_of_TMR0_DefaultInterruptHandler:
 28509                           	opt stack 0
 28510                           tosu	equ	0xFFF
 28511                           tosh	equ	0xFFE
 28512                           tosl	equ	0xFFD
 28513                           pclatu	equ	0xFFB
 28514                           pclath	equ	0xFFA
 28515                           tblptru	equ	0xFF8
 28516                           tblptrh	equ	0xFF7
 28517                           tblptrl	equ	0xFF6
 28518                           tablat	equ	0xFF5
 28519                           prodh	equ	0xFF4
 28520                           prodl	equ	0xFF3
 28521                           intcon	equ	0xFF2
 28522                           indf0	equ	0xFEF
 28523                           postinc0	equ	0xFEE
 28524                           fsr0h	equ	0xFEA
 28525                           fsr0l	equ	0xFE9
 28526                           wreg	equ	0xFE8
 28527                           indf1	equ	0xFE7
 28528                           postinc1	equ	0xFE6
 28529                           postdec1	equ	0xFE5
 28530                           plusw1	equ	0xFE3
 28531                           fsr1h	equ	0xFE2
 28532                           fsr1l	equ	0xFE1
 28533                           indf2	equ	0xFDF
 28534                           postinc2	equ	0xFDE
 28535                           postdec2	equ	0xFDD
 28536                           plusw2	equ	0xFDB
 28537                           fsr2h	equ	0xFDA
 28538                           fsr2l	equ	0xFD9
 28539                           status	equ	0xFD8
 28540                           tosu	equ	0xFFF
 28541                           tosh	equ	0xFFE
 28542                           tosl	equ	0xFFD
 28543                           pclatu	equ	0xFFB
 28544                           pclath	equ	0xFFA
 28545                           tblptru	equ	0xFF8
 28546                           tblptrh	equ	0xFF7
 28547                           tblptrl	equ	0xFF6
 28548                           tablat	equ	0xFF5
 28549                           prodh	equ	0xFF4
 28550                           prodl	equ	0xFF3
 28551                           intcon	equ	0xFF2
 28552                           indf0	equ	0xFEF
 28553                           postinc0	equ	0xFEE
 28554                           fsr0h	equ	0xFEA
 28555                           fsr0l	equ	0xFE9
 28556                           wreg	equ	0xFE8
 28557                           indf1	equ	0xFE7
 28558                           postinc1	equ	0xFE6
 28559                           postdec1	equ	0xFE5
 28560                           plusw1	equ	0xFE3
 28561                           fsr1h	equ	0xFE2
 28562                           fsr1l	equ	0xFE1
 28563                           indf2	equ	0xFDF
 28564                           postinc2	equ	0xFDE
 28565                           postdec2	equ	0xFDD
 28566                           plusw2	equ	0xFDB
 28567                           fsr2h	equ	0xFDA
 28568                           fsr2l	equ	0xFD9
 28569                           status	equ	0xFD8
 28570                           
 28571                           	psect	text125
 28572  000000                     __ptext125:
 28573                           	opt stack 0
 28574                           tosu	equ	0xFFF
 28575                           tosh	equ	0xFFE
 28576                           tosl	equ	0xFFD
 28577                           pclatu	equ	0xFFB
 28578                           pclath	equ	0xFFA
 28579                           tblptru	equ	0xFF8
 28580                           tblptrh	equ	0xFF7
 28581                           tblptrl	equ	0xFF6
 28582                           tablat	equ	0xFF5
 28583                           prodh	equ	0xFF4
 28584                           prodl	equ	0xFF3
 28585                           intcon	equ	0xFF2
 28586                           indf0	equ	0xFEF
 28587                           postinc0	equ	0xFEE
 28588                           fsr0h	equ	0xFEA
 28589                           fsr0l	equ	0xFE9
 28590                           wreg	equ	0xFE8
 28591                           indf1	equ	0xFE7
 28592                           postinc1	equ	0xFE6
 28593                           postdec1	equ	0xFE5
 28594                           plusw1	equ	0xFE3
 28595                           fsr1h	equ	0xFE2
 28596                           fsr1l	equ	0xFE1
 28597                           indf2	equ	0xFDF
 28598                           postinc2	equ	0xFDE
 28599                           postdec2	equ	0xFDD
 28600                           plusw2	equ	0xFDB
 28601                           fsr2h	equ	0xFDA
 28602                           fsr2l	equ	0xFD9
 28603                           status	equ	0xFD8
 28604                           
 28605                           	psect	rparam
 28606  0000                     tosu	equ	0xFFF
 28607                           tosh	equ	0xFFE
 28608                           tosl	equ	0xFFD
 28609                           pclatu	equ	0xFFB
 28610                           pclath	equ	0xFFA
 28611                           tblptru	equ	0xFF8
 28612                           tblptrh	equ	0xFF7
 28613                           tblptrl	equ	0xFF6
 28614                           tablat	equ	0xFF5
 28615                           prodh	equ	0xFF4
 28616                           prodl	equ	0xFF3
 28617                           intcon	equ	0xFF2
 28618                           indf0	equ	0xFEF
 28619                           postinc0	equ	0xFEE
 28620                           fsr0h	equ	0xFEA
 28621                           fsr0l	equ	0xFE9
 28622                           wreg	equ	0xFE8
 28623                           indf1	equ	0xFE7
 28624                           postinc1	equ	0xFE6
 28625                           postdec1	equ	0xFE5
 28626                           plusw1	equ	0xFE3
 28627                           fsr1h	equ	0xFE2
 28628                           fsr1l	equ	0xFE1
 28629                           indf2	equ	0xFDF
 28630                           postinc2	equ	0xFDE
 28631                           postdec2	equ	0xFDD
 28632                           plusw2	equ	0xFDB
 28633                           fsr2h	equ	0xFDA
 28634                           fsr2l	equ	0xFD9
 28635                           status	equ	0xFD8
 28636                           
 28637                           	psect	temp
 28638  00004D                     btemp:
 28639                           	opt stack 0
 28640  00004D                     	ds	1
 28641  0000                     int$flags	set	btemp
 28642  0000                     wtemp6	set	btemp+1
 28643                           tosu	equ	0xFFF
 28644                           tosh	equ	0xFFE
 28645                           tosl	equ	0xFFD
 28646                           pclatu	equ	0xFFB
 28647                           pclath	equ	0xFFA
 28648                           tblptru	equ	0xFF8
 28649                           tblptrh	equ	0xFF7
 28650                           tblptrl	equ	0xFF6
 28651                           tablat	equ	0xFF5
 28652                           prodh	equ	0xFF4
 28653                           prodl	equ	0xFF3
 28654                           intcon	equ	0xFF2
 28655                           indf0	equ	0xFEF
 28656                           postinc0	equ	0xFEE
 28657                           fsr0h	equ	0xFEA
 28658                           fsr0l	equ	0xFE9
 28659                           wreg	equ	0xFE8
 28660                           indf1	equ	0xFE7
 28661                           postinc1	equ	0xFE6
 28662                           postdec1	equ	0xFE5
 28663                           plusw1	equ	0xFE3
 28664                           fsr1h	equ	0xFE2
 28665                           fsr1l	equ	0xFE1
 28666                           indf2	equ	0xFDF
 28667                           postinc2	equ	0xFDE
 28668                           postdec2	equ	0xFDD
 28669                           plusw2	equ	0xFDB
 28670                           fsr2h	equ	0xFDA
 28671                           fsr2l	equ	0xFD9
 28672                           status	equ	0xFD8


Data Sizes:
    Strings     240
    Constant    145
    Data        112
    BSS         665
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160    160     160
    BANK1           256    255     256
    BANK2           256     52     253
    BANK3           256      4     243
    BANK4           256      0     200
    BANK5           256      0     128
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    TFTP_callBackTable.TFTP_CallBack	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)unsigned char  size(3) Largest target is 0

    dnsCache.dnsName	PTR const unsigned char  size(2) Largest target is 0

    S4512$1$1	PTR unsigned char  size(2) Largest target is 100
		 -> TFTP_Handler@data(BANK1[100]), 

    ?_udp_table_nextEntry.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 41
		 -> tftp_option(CODE[8]), tftp_msg.tftp_block_size(BANK3[5]), tftp_msg.tftp_filename(BANK3[32]), tftp_msg(BANK3[41]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[9]), DHCP_Handler@chaddr(BANK1[16]), 
		 -> dhcpName(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> tftp_option(CODE[8]), tftp_msg.tftp_block_size(BANK3[5]), tftp_msg.tftp_filename(BANK3[32]), tftp_msg(BANK3[41]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[9]), DHCP_Handler@chaddr(BANK1[16]), 
		 -> dhcpName(CODE[13]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 255
		 -> DNS_Handler@dnsR(BANK1[255]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 0

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_13(CODE[22]), STR_12(CODE[19]), STR_6(CODE[10]), STR_5(CODE[29]), 
		 -> STR_1(CODE[58]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> TFTP_Handler@recv_buffer(BANK1[100]), TFTP_Handler@data(BANK1[100]), dnsCache(BANK5[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> TFTP_Handler@recv_buffer(BANK1[100]), TFTP_Handler@data(BANK1[100]), dnsCache(BANK5[128]), 

    memcpy@d1	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    memcpy@s1	PTR const void  size(2) Largest target is 6
		 -> hostMacAddress(BANK3[6]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK3[6]), 

    memcmp@s2	PTR const void  size(2) Largest target is 6
		 -> broadcastMAC(CODE[6]), hostMacAddress(BANK3[6]), 

    memcmp@s1	PTR const void  size(2) Largest target is 16
		 -> DHCP_Handler@chaddr(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 41
		 -> tftp_msg.tftp_block_size(BANK3[5]), tftp_msg(BANK3[41]), NULL(NULL[0]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(COMRAM[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK0[2]), STR_14(CODE[7]), DNS_Lookup@str(COMRAM[80]), 
		 -> makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_13(CODE[22]), STR_12(CODE[19]), STR_7(CODE[26]), STR_6(CODE[10]), 
		 -> STR_5(CODE[29]), STR_4(CODE[12]), STR_1(CODE[58]), 

    S4681__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4681__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(COMRAM[5]), 

    Process_TFTP_Data@data	PTR unsigned char  size(2) Largest target is 100
		 -> TFTP_Handler@data(BANK1[100]), 

    S4512$TFTP_CallBack	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)unsigned char  size(3) Largest target is 0

    Process_TFTP_Data@hptr.TFTP_CallBack	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)unsigned char  size(3) Largest target is 0

    Process_TFTP_Data@hptr	PTR const struct . size(2) Largest target is 0
		 -> TFTP_callBackTable(CODE[0]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 41
		 -> tftp_msg(BANK3[41]), 

    tftp_modes	PTR const unsigned char [3] size(2) Largest target is 9
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[9]), 

    ntp	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_8(CODE[18]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3351$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3351$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3351$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3351$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3351$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3351$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    DNS_Lookup@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@dnsPtr.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@dnsPtr	PTR struct . size(2) Largest target is 128
		 -> dnsCache(BANK5[128]), 

    DNS_Handler@entryPointer	PTR struct . size(2) Largest target is 128
		 -> dnsCache(BANK5[128]), 

    DNS_Query@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    S3193$dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Query@oldestEntry.dnsName	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 128
		 -> TFTP_Handler@recv_buffer(BANK1[100]), TFTP_Handler@data(BANK1[100]), dnsCache(BANK5[128]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    UDP_Receive@hptr	PTR struct . size(2) Largest target is 20
		 -> UDP_CallBackTable(CODE[20]), NULL(NULL[0]), 

    sp__udp_table_nextEntry.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__udp_table_nextEntry	PTR struct . size(2) Largest target is 20
		 -> UDP_CallBackTable(CODE[20]), NULL(NULL[0]), 

    udp_table_nextEntry@i	PTR struct . size(2) Largest target is 20
		 -> UDP_CallBackTable(CODE[20]), NULL(NULL[0]), 

    udp_table_nextEntry@j.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    udp_table_nextEntry@j	PTR struct . size(2) Largest target is 20
		 -> UDP_CallBackTable(CODE[20]), 

    sp__udp_table_getIterator	PTR struct . size(2) Largest target is 20
		 -> UDP_CallBackTable(CODE[20]), 

    S2724$callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> Network_Manage@now(BANK3[4]), arpTimer(BANK2[4]), NULL(NULL[0]), 

    rtcc_set@t	PTR long  size(2) Largest target is 3935
		 -> RAM(DATA[3935]), 

    sp__makeIpv4AddresstoStr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK3[15]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), NULL(NULL[0]), broadcastMAC(CODE[6]), arpMap(BANK3[104]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(2) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ETH_RemovePacket@pPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket	PTR struct . size(2) Largest target is 3935
		 -> RAM(DATA[3935]), NULL(NULL[0]), 

    txData.nextPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    txData.nextPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    txData.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    txData.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_PacketListReset@ptr	PTR unsigned char  size(2) Largest target is 240
		 -> txData(BANK4[200]), 

    ETH_GetMAC@mac	PTR unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK3[6]), 

    ETH_Shift_Tx_Packets@pElem.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem	PTR struct . size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_Insert@data	PTR unsigned char  size(2) Largest target is 2
		 -> TCP_Snd@cksm(BANK0[2]), UDP_Send@cksm(BANK0[2]), UDP_Send@udpLength(BANK0[2]), ICMP_PortUnreachable@cksm(BANK0[2]), 
		 -> ICMP_EchoReply@cksm(BANK0[2]), IPV4_Send@cksm(BANK0[2]), IPV4_Send@totalLength(BANK0[2]), 

    pTail.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    pTail.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), NULL(NULL[0]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(BANK0[28]), arpMap(BANK3[104]), 

    ETH_WriteStart@ethPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    S1081$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    pHead.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    S1081$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    pHead.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    pHead	PTR struct . size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket	PTR struct . size(2) Largest target is 3935
		 -> RAM(DATA[3935]), NULL(NULL[0]), 

    ETH_WriteBlock@buffer	PTR const void  size(2) Largest target is 41
		 -> tftp_option(CODE[8]), tftp_msg.tftp_block_size(BANK3[5]), tftp_msg.tftp_filename(BANK3[32]), tftp_msg(BANK3[41]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[9]), TCP_Snd@txHeader(BANK0[20]), 
		 -> NULL(NULL[0]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), hostMacAddress(BANK3[6]), 

    ETH_WriteBlock@p	PTR const unsigned char  size(2) Largest target is 41
		 -> tftp_option(CODE[8]), tftp_msg.tftp_block_size(BANK3[5]), tftp_msg.tftp_filename(BANK3[32]), tftp_msg(BANK3[41]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[9]), TCP_Snd@txHeader(BANK0[20]), 
		 -> NULL(NULL[0]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), hostMacAddress(BANK3[6]), 

    ETH_WriteString@string	PTR const unsigned char  size(2) Largest target is 13
		 -> dhcpName(CODE[13]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 100
		 -> TFTP_Handler@data(BANK1[100]), tcpHeader(BANK2[20]), DHCP_Handler@chaddr(BANK1[16]), udpHeader(BANK2[8]), 
		 -> ICMP_Receive@icmpHdr(BANK0[4]), Network_Read@header(BANK2[14]), ipv4Header(BANK2[20]), NULL(NULL[0]), 
		 -> ARPV4_Packet@header(BANK0[28]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 100
		 -> TFTP_Handler@data(BANK1[100]), tcpHeader(BANK2[20]), DHCP_Handler@chaddr(BANK1[16]), udpHeader(BANK2[8]), 
		 -> ICMP_Receive@icmpHdr(BANK0[4]), Network_Read@header(BANK2[14]), ipv4Header(BANK2[20]), NULL(NULL[0]), 
		 -> ARPV4_Packet@header(BANK0[28]), 

    pTail	PTR struct . size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_Init@mac	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), 

    sp__MAC_getAddress	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), NULL(NULL[0]), arpMap(BANK3[104]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    sp__memcpy	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _timersInit->_time
    _rtcc_init->_TMR1_SetInterruptHandler
    _Network_WaitForLink->_ETH_CheckLinkUp
    _IPV4_Init->_ipdb_init
    _ETH_Init->_printf
    _printf->__doprnt
    __doprnt->___llmod
    ___llmod->___lldiv
    _PHY_Write->_PHY_WaitForBusy
    _ARPV4_Init->_ETH_GetMAC
    _udp_table_nextEntry->_udp_table_getIterator
    _atoi->___wmul
    _ICMP_PortUnreachable->_IPV4_Send
    _ETH_SetReadPtr->_IPV4_GetStartPosition
    _sendDHCPDECLINE->_sendRequest
    _TCP_ParseTCPOptions->_ETH_Read16
    _TCP_Snd->_IPV4_Send
    _IPV4_SaveStartPosition->_ETH_GetReadPtr
    _ICMP_EchoReply->_IPV4_Send
    _ETH_Copy->___wmul
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_WriteStart
    _ETH_EventHandler->_ETH_Shift_Tx_Packets
    _ETH_CheckLinkUp->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy
    _sendDHCPREQUEST->_sendRequest
    _sendDHCPDISCOVER->_sendRequest
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _ARPV4_Request->_ETH_WriteStart
    _ETH_WriteStart->_ETH_Shift_Tx_Packets
    _ETH_Shift_Tx_Packets->___wmul
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum
    _ETH_Send->_ETH_SendQueued
    _DHCP_WriteZeros->_ETH_Write8

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _Network_Init->_ETH_Init
    _ETH_Init->_printf
    _printf->__doprnt
    _Network_Manage->_TCP_Update
    _TCP_Update->_TCP_FiniteStateMachine
    _IPV4_Packet->_TCP_Recv
    _UDP_Receive->_DNS_Handler
    _TFTP_Handler->_TFTP_Ack
    _TFTP_Ack->_UDP_Start
    _ICMP_PortUnreachable->_IPv4_Start
    _TCP_Recv->_TCP_FiniteStateMachine
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _DHCP_Manage->_sendDHCPDISCOVER
    _sendRequest->_UDP_Start
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _TCP_Update->_TCP_FiniteStateMachine
    _UDP_Receive->_DNS_Handler
    _TCP_Recv->_TCP_FiniteStateMachine

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _Network_Read->_IPV4_Packet

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_Network_Manage

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  432209
                     _Network_Manage
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    8913
                     _ADC_Initialize
                   _ECCP1_Initialize
               _INTERRUPT_Initialize
                       _Network_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3      98
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Network_Init                                         0     0      0    8641
                         _ARPV4_Init
                          _DHCP_init
                           _ETH_Init
                          _IPV4_Init
                _Network_WaitForLink
                           _TCP_Init
                          _rtcc_init
                         _timersInit
 ---------------------------------------------------------------------------------
 (3) _timersInit                                           0     0      0     791
                               _time
 ---------------------------------------------------------------------------------
 (3) _rtcc_init                                            0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3     174
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (3) _IPV4_Init                                            0     0      0     136
                          _ipdb_init
 ---------------------------------------------------------------------------------
 (4) _ipdb_init                                            2     2      0     136
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ETH_Init                                            14    14      0    6981
                                             27 BANK0     14    14      0
                    _ETH_CheckLinkUp
                          _ETH_Flush
                _ETH_PacketListReset
                     _MAC_getAddress
                          _PHY_Write
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              21     7     14    5566
                                             50 COMRAM     7     7      0
                                             13 BANK0     14     0     14
                            __doprnt
 ---------------------------------------------------------------------------------
 (5) __doprnt                                             27    21      6    4890
                                             40 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                   Absolute function *
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     412
                                             31 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PHY_Write                                            4     2      2     626
                                             20 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _MAC_getAddress                                       2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_PacketListReset                                  4     4      0     102
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _DHCP_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Init                                           1     1      0     281
                                             20 COMRAM     1     1      0
                         _ETH_GetMAC
 ---------------------------------------------------------------------------------
 (4) _ETH_GetMAC                                           2     0      2     213
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  423296
                                             51 BANK2      1     1      0
                                              0 BANK3      4     4      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                           8     8      0   68243
                                            156 BANK0      4     4      0
                                              5 BANK1      4     4      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  276275
                                             33 BANK2     18    18      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  265269
                                              0 BANK2     33    33      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
             _IPV4_SaveStartPosition
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2  155227
                                            125 BANK0      9     7      2
                       _DHCP_Handler *
                        _DNS_Handler *
                      _ETH_ReadBlock
               _ICMP_PortUnreachable
             _IPV4_GetDatagramLength
                        _NTP_Handler *
                       _TFTP_Handler *
              _udp_table_getIterator
                _udp_table_nextEntry
 ---------------------------------------------------------------------------------
 (5) _udp_table_nextEntry                                  4     2      2     189
                                             20 COMRAM     4     2      2
              _udp_table_getIterator
 ---------------------------------------------------------------------------------
 (6) _udp_table_getIterator                                2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _TFTP_Handler                                       211   209      2   37122
                                             88 BANK0      6     4      2
                                              0 BANK1    205   205      0
                         _ETH_Read16
                      _ETH_ReadBlock
                  _Process_TFTP_Data
                           _TFTP_Ack
                               _atoi
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     947
                                             18 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    1565
                                             24 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _TFTP_Ack                                             8     8      0   31585
                                             80 BANK0      8     8      0
                        _ETH_Write16
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (6) _Process_TFTP_Data                                   11     3      8     344
                                             18 COMRAM    11     3      8
 ---------------------------------------------------------------------------------
 (5) _NTP_Handler                                         10     8      2     380
                                             88 BANK0     10     8      2
                         _ETH_Read32
                          _ETH_Read8
                           _rtcc_set
 ---------------------------------------------------------------------------------
 (6) _rtcc_set                                             3     1      2     155
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _IPV4_GetDatagramLength                               2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ICMP_PortUnreachable                                13     3     10   31858
                                             72 BANK0     13     3     10
                           _ETH_Copy
                         _ETH_Insert
                     _ETH_SetReadPtr
              _ETH_TxComputeChecksum
                        _ETH_Write16
                        _ETH_Write32
              _IPV4_GetStartPosition
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _IPV4_GetStartPosition                                2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ETH_SetReadPtr                                       2     0      2     121
                                             20 COMRAM     2     0      2
              _IPV4_GetStartPosition (ARG)
 ---------------------------------------------------------------------------------
 (5) _DNS_Handler                                        292   290      2    2566
                                             88 BANK0     37    35      2
                                              0 BANK1    255   255      0
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                             _strcmp
                               _time
 ---------------------------------------------------------------------------------
 (6) _strcmp                                               6     2      4     493
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        91    89      2   80872
                                             88 BANK0      6     4      2
                                              0 BANK1     85    85      0
                           _ETH_Dump
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
                    _sendDHCPDECLINE
                    _sendDHCPREQUEST
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _sendDHCPDECLINE                                      0     0      0   37296
                        _sendRequest
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               9     3      6     701
                                             18 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     148
                                             18 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6   71758
                                            156 BANK0      3     3      0
                                              5 BANK1     34    28      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    1644
                                             22 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      37
                                             18 COMRAM     1     1      0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              13    13      0   67763
                                            148 BANK0      8     8      0
                                              0 BANK1      5     5      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
                  _isPortUnreachable
               _resetPortUnreachable
 ---------------------------------------------------------------------------------
 (4) _resetPortUnreachable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _isPortUnreachable                                    2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     13    11      2   33769
                                            135 BANK0     13    11      2
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             63    61      2   31535
                                             72 BANK0     63    61      2
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            2     0      2    1815
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_SaveStartPosition                               0     0      0       0
                     _ETH_GetReadPtr
 ---------------------------------------------------------------------------------
 (5) _ETH_GetReadPtr                                       2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           29    27      2     606
                                             18 COMRAM    29    27      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        11     9      2   32615
                                             89 BANK0     11     9      2
                           _ETH_Dump
                         _ETH_Read16
                      _ETH_ReadBlock
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      17    15      2   29339
                                             72 BANK0     17    15      2
                           _ETH_Copy
                         _ETH_Insert
                         _ETH_Read16
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2      74
                                             18 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             6     4      2    1454
                                             24 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             2     0      2     937
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    1655
                                             36 COMRAM    14    10      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _ETH_Flush                                            4     4      0       0
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0    8888
                                              0 BANK0     70    70      0
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        8     4      4    1939
                                             18 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     0     0      0    2270
                    _ETH_CheckLinkUp
                   _ETH_RemovePacket
                     _ETH_SendQueued
               _ETH_Shift_Tx_Packets
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (3) _ETH_RemovePacket                                     6     4      2     375
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _ETH_CheckLinkUp                                      4     4      0     278
                                             29 COMRAM     4     4      0
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (5) _PHY_Read                                             9     5      4     244
                                             20 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (6) _PHY_WaitForBusy                                      2     2      0     170
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          5     5      0   75482
                                             81 BANK0      5     5      0
                   _sendDHCPDISCOVER
                    _sendDHCPREQUEST
                               _time
 ---------------------------------------------------------------------------------
 (4) _time                                                 9     5      4     791
                                             18 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (6) _sendDHCPREQUEST                                      0     0      0   37296
                        _sendRequest
 ---------------------------------------------------------------------------------
 (3) _sendDHCPDISCOVER                                     1     1      0   37330
                                             80 BANK0      1     1      0
                               _lfsr
                        _sendRequest
 ---------------------------------------------------------------------------------
 (7) _sendRequest                                          2     2      0   37296
                                             56 COMRAM     2     2      0
                    _DHCP_WriteZeros
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                    _ETH_WriteString
                           _UDP_Send
                          _UDP_Start
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               6     4      2     940
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _UDP_Start                                            9     1      8   19390
                                             53 COMRAM     1     1      0
                                             72 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5   15567
                                             48 COMRAM     5     0      5
                                             57 BANK0     15    15      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4    2554
                                             18 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Write16                                          2     0      2    2312
                                             18 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       61    57      4    6318
                                             44 COMRAM     4     0      4
                                              0 BANK0     57    57      0
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     748
                                             18 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       8     4      4    2796
                                             36 COMRAM     8     4      4
                     _ETH_EdataWrite
                      _ETH_NewPacket
                 _ETH_ResetByteCount
               _ETH_Shift_Tx_Packets
                              _putch
 ---------------------------------------------------------------------------------
 (7) _ETH_Shift_Tx_Packets                                12    12      0    1373
                                             24 COMRAM    12    12      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     952
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_NewPacket                                        5     3      2     502
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4    1906
                                             18 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     257
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (7) _UDP_Send                                             9     9      0    9716
                                             15 BANK0      9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           11     9      2    4968
                                             54 COMRAM     2     0      2
                                              6 BANK0      9     9      0
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               24    18      6    2350
                                             36 COMRAM    18    12      6
                                              0 BANK0      6     6      0
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (7) _ETH_ComputeChecksum                                 18    14      4     774
                                             18 COMRAM    18    14      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (8) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             6     6      0      34
                                             22 COMRAM     6     6      0
                     _ETH_SendQueued
                              _putch
 ---------------------------------------------------------------------------------
 (8) _ETH_SendQueued                                       4     4      0       0
                                             18 COMRAM     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                          10     4      6    2020
                                             18 COMRAM    10     4      6
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (8) _ETH_GetByteCount                                     4     2      2       0
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ETH_WriteString                                      4     2      2     168
                                             18 COMRAM     4     2      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (8) _DHCP_WriteZeros                                      2     0      2     152
                                             19 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      31
                                             18 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _lfsr                                                 1     1      0      34
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                         18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (16) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _rtcc_handler *
 ---------------------------------------------------------------------------------
 (17) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _sendDHCPDISCOVER
         _lfsr
         _sendRequest
           _DHCP_WriteZeros
             _ETH_Write8
               _ETH_EdataWrite
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteBlock
             _ETH_EdataWrite
           _ETH_WriteString
             _ETH_EdataWrite
           _UDP_Send
             _ETH_GetByteCount
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
           _UDP_Start
             _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _strlen
       _sendDHCPREQUEST
         _sendRequest
           _DHCP_WriteZeros
             _ETH_Write8
               _ETH_EdataWrite
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteBlock
             _ETH_EdataWrite
           _ETH_WriteString
             _ETH_EdataWrite
           _UDP_Send
             _ETH_GetByteCount
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
           _UDP_Start
             _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _strlen
       _time
     _ETH_EventHandler
       _ETH_CheckLinkUp
         _PHY_Read
           _PHY_WaitForBusy
       _ETH_RemovePacket
       _ETH_SendQueued
         _putch
       _ETH_Shift_Tx_Packets
         ___wmul
       _PHY_Read
         _PHY_WaitForBusy
     _Network_Read
       _ARPV4_Packet
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_Send
           _ETH_SendQueued
             _putch
           _putch
         _ETH_WriteBlock
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_NewPacket
           _ETH_ResetByteCount
           _ETH_Shift_Tx_Packets
             ___wmul
           _putch
         _memcpy
       _ETH_Flush
       _ETH_NextPacketUpdate
         _ETH_EdataRead
       _ETH_ReadBlock
         _ETH_EdataRead
       _IPV4_Packet
         _ETH_Dump
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_RxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ICMP_Receive
           _ETH_Dump
           _ETH_Read16
             _ETH_EdataRead
           _ETH_ReadBlock
             _ETH_EdataRead
           _ICMP_EchoReply
             _ETH_Copy
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Read16
               _ETH_EdataRead
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
         _IPV4_PseudoHeaderChecksum
         _IPV4_SaveStartPosition
           _ETH_GetReadPtr
         _TCP_Recv
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _ETH_EdataRead
               _TCP_Snd
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                     _ETH_SendQueued
                       _putch
                     _putch
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                     _memcpy
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_NewPacket
                     _ETH_ResetByteCount
                     _ETH_Shift_Tx_Packets
                       ___wmul
                     _putch
             _TCP_Snd
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _IPV4_Send
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_Send
                     _ETH_SendQueued
                       _putch
                     _putch
                   _ETH_WriteBlock
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_NewPacket
                     _ETH_ResetByteCount
                     _ETH_Shift_Tx_Packets
                       ___wmul
                     _putch
                   _memcpy
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
             _isPortUnreachable
             _resetPortUnreachable
           _TCP_ParseTCPOptions
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
         _UDP_Receive
           _DHCP_Handler *
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _ETH_ReadBlock
               _ETH_EdataRead
             _memcmp
             _sendDHCPDECLINE
               _sendRequest
                 _DHCP_WriteZeros
                   _ETH_Write8
                     _ETH_EdataWrite
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteString
                   _ETH_EdataWrite
                 _UDP_Send
                   _ETH_GetByteCount
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                   _IPV4_Send
                     _ETH_Insert
                       _ETH_EdataWrite
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_TxComputeChecksum
                       _ETH_ComputeChecksum
                         _ETH_EdataRead
                 _UDP_Start
                   _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _IPv4_Start
                     _ARPV4_Lookup
                     _ARPV4_Request
                       _ETH_Send
                         _ETH_SendQueued
                           _putch
                         _putch
                       _ETH_WriteBlock
                         _ETH_EdataWrite
                       _ETH_WriteStart
                         _ETH_EdataWrite
                         _ETH_NewPacket
                         _ETH_ResetByteCount
                         _ETH_Shift_Tx_Packets
                           ___wmul
                         _putch
                       _memcpy
                     _ETH_Write16
                       _ETH_EdataWrite
                     _ETH_Write32
                       _ETH_EdataWrite
                     _ETH_Write8
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                 _strlen
             _sendDHCPREQUEST
               _sendRequest
                 _DHCP_WriteZeros
                   _ETH_Write8
                     _ETH_EdataWrite
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteString
                   _ETH_EdataWrite
                 _UDP_Send
                   _ETH_GetByteCount
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                   _IPV4_Send
                     _ETH_Insert
                       _ETH_EdataWrite
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_TxComputeChecksum
                       _ETH_ComputeChecksum
                         _ETH_EdataRead
                 _UDP_Start
                   _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _IPv4_Start
                     _ARPV4_Lookup
                     _ARPV4_Request
                       _ETH_Send
                         _ETH_SendQueued
                           _putch
                         _putch
                       _ETH_WriteBlock
                         _ETH_EdataWrite
                       _ETH_WriteStart
                         _ETH_EdataWrite
                         _ETH_NewPacket
                         _ETH_ResetByteCount
                         _ETH_Shift_Tx_Packets
                           ___wmul
                         _putch
                       _memcpy
                     _ETH_Write16
                       _ETH_EdataWrite
                     _ETH_Write32
                       _ETH_EdataWrite
                     _ETH_Write8
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                 _strlen
             _strlen
           _DNS_Handler *
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _strcmp
             _time
           _ETH_ReadBlock *
             _ETH_EdataRead
           _ICMP_PortUnreachable *
             _ETH_Copy
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_SetReadPtr
               _IPV4_GetStartPosition (ARG)
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _IPV4_GetStartPosition
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _IPV4_GetDatagramLength *
           _NTP_Handler *
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _rtcc_set
           _TFTP_Handler *
             _ETH_Read16
               _ETH_EdataRead
             _ETH_ReadBlock
               _ETH_EdataRead
             _Process_TFTP_Data
             _TFTP_Ack
               _ETH_Write16
                 _ETH_EdataWrite
               _UDP_Send
                 _ETH_GetByteCount
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                     _ETH_SendQueued
                       _putch
                     _putch
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
               _UDP_Start
                 _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                     _memcpy
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_NewPacket
                     _ETH_ResetByteCount
                     _ETH_Shift_Tx_Packets
                       ___wmul
                     _putch
             _atoi
               ___wmul
               _isdigit
             _memset
           _udp_table_getIterator *
           _udp_table_nextEntry *
             _udp_table_getIterator
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
               _ETH_SendQueued
                 _putch
               _putch
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
               _memcpy
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_NewPacket
               _ETH_ResetByteCount
               _ETH_Shift_Tx_Packets
                 ___wmul
               _putch
         _isPortUnreachable
         _resetPortUnreachable
     _time
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECCP1_Initialize
     _INTERRUPT_Initialize
     _Network_Init
       _ARPV4_Init
         _ETH_GetMAC
       _DHCP_init
       _ETH_Init
         _ETH_CheckLinkUp
           _PHY_Read
             _PHY_WaitForBusy
         _ETH_Flush
         _ETH_PacketListReset
         _MAC_getAddress
         _PHY_Write
           _PHY_WaitForBusy
         _printf
           __doprnt
             Absolute function(Fake) *
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
       _IPV4_Init
         _ipdb_init
       _Network_WaitForLink
         _ETH_CheckLinkUp
           _PHY_Read
             _PHY_WaitForBusy
       _TCP_Init
       _rtcc_init
         _TMR1_SetInterruptHandler
       _timersInit
         _time
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      80      15       50.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      4      F3      11       94.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     34      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     524      29        0.0%
DATA                 0      0     524       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Jan 09 14:21:49 2018

                  _IPV4_GetDatagramLength 6E2A             __size_of_resetPortUnreachable 000C  
                    __end_of_DHCP_Handler 30C2                 ETH_Shift_Tx_Packets@pElem 0023  
                     ___wmul@multiplicand 0015                          ??_ICMP_EchoReply 00AA  
               ETH_Shift_Tx_Packets@timer 001F               ??_IPV4_PseudoHeaderChecksum 0015  
                         _timer0ReloadVal 0049                            ??_ICMP_Receive 00BB  
                            __CFG_CP0$OFF 000000                     ETH_WriteString@length 0015  
                                     l320 2712                                       l312 6A34  
                                     l321 2B9C                                       l322 29F2  
                                     l332 6AFE                                       l325 2898  
                                     l501 3AC4                                       l342 64F6  
                                     l511 649C                                       l344 6526  
                                     l600 66C6                                       l601 669C  
                                     l338 37CC                                       l506 6C3E  
                                     l611 41B0                                       l531 6A6A  
                                     l515 64D0                                       l701 527E  
                                     l533 6A78                                       l702 5252  
                                     l614 41D0                                       l534 6A76  
                                     l616 41E6                                       l536 6A82  
                                     l552 6C8E                                       l633 5C18  
                                     l705 5308                                       l617 41FC  
                                     l545 6280                                       l553 6C90  
                                     WREG 000FE8                                       l626 5B8E  
                                     l706 52B6                                       l618 4214  
                                     l546 626E                                       l628 5B98  
                                     l548 6288                                       l572 6622  
                                     l492 3A9A                                       l645 63B4  
                                     l573 65FC                                       l557 6902  
                                     l646 63A2                                       l638 6132  
                                     l662 6304                                       l654 6AA2  
                                     l558 6904                                       l567 6580  
                                     l592 67A4                                       l568 6582  
                                     l593 6788                                       l497 3AAE  
                                     l913 5ED0                                       l690 4A4E  
                                     l674 5B4C                                       l666 5AD6  
                                     l498 3AA6                                       l683 49E4  
                                     l659 62F8                                       l675 5B4A  
                                     l667 5AD4                                       l915 5EF8  
                                     l780 479C                                       l684 49E2  
                  __size_of_ETH_EdataRead 000A                                       l773 47C2  
                                     l765 676E                                       l774 45F6  
                                     l694 4B30                                       l766 675A  
                                     l775 47C0                                       l695 4B18  
                                     l791 5806                                       l679 5B70  
                                     l847 58C0                                       l696 4A84  
                                     l848 5896                                       l768 677C  
                                     l689 4A50                                       l778 476C  
                                     l890 4198                                       l874 2540  
                                     l866 24C4                                       l875 259A  
                                     _EIE 000EFB                                       l884 40E0  
                                     l868 264A                                       l885 408E  
                                     l789 57C2                                       l877 263C  
                                     l869 24E2                                       l886 409E  
                                     l889 40EA                                       l993 5F7C  
                                     _GIE 007F97                                       l999 5D18  
                             ?_ETH_GetMAC 0013                                       _PR2 000FCB  
                       DNS_Handler@dnsPtr 00D6                        ICMP_EchoReply@cksm 00B4  
                       DNS_Handler@answer 00D2                   IPv4_Start@targetAddress 00A1  
                         _timer1ReloadVal 004B           ETH_Shift_Tx_Packets@shiftOffset 001D  
                             ?_ETH_Read32 0013                               ?_ETH_Read16 0013  
                                     _ntp 02C1                         DNS_Handler@length 00B8  
                   ETH_WriteString@string 0013                              UDP_Start@ret 0036  
                         _TMR2_Initialize 6E1A                              ?_DNS_Handler 00B8  
                                     prod 000FF3                      TCP_Snd@tcpDataLength 00D1  
                      __size_of_DHCP_init 0002                     ??_ETH_ComputeChecksum 0017  
                                     tosl 000FFD                                       wreg 000FE8  
                             ?_ETH_Insert 0013                              __CFG_IESO$ON 000000  
                    udp_table_nextEntry@i 0015                      udp_table_nextEntry@j 0017  
                             ?_ETH_Write8 0001                                      EDATA 000F61  
               TCP_FiniteStateMachine@ret 0100                           ?_Network_Manage 0001  
                            __CFG_WDT$OFF 000000                                      l1001 5D56  
                                    l1002 5D0C                                      l1003 5D12  
                                    l1103 56C8                                      l2001 3EC8  
                                    l1114 5586                                      l2002 3DE4  
                                    l2011 3F38                                      l1060 6D62  
                                    l1036 65D8                                      l2004 3E00  
                                    l1109 4E28                                      l2101 18AC  
                                    l1118 6DEA                                      l2006 3E0A  
                                    l2110 1A22                                      l2111 1992  
                                    l2103 18F4                                      l1400 2FA4  
                                    l1240 4946                                      l2112 1A5E  
                                    l1233 564C                                      l2009 3EE8  
                                    l1241 48AE                                      l2113 1A88  
                                    l1330 50D0                                      l1242 4932  
                                    l2050 1450                                      l2034 6E52  
                                    l1315 45DC                                      l1331 5000  
                                    l1403 2FB2                                      l2107 1A0A  
                                    l1316 444A                                      l1340 50A8  
                                    l1332 5014                                      l1500 3964  
                                    l2108 1912                                      l2052 14FC  
                                    l1229 6484                                      l1317 445E  
                                    l1333 501E                                      l1501 38DE  
                                    l1237 4992                                      l2061 1508  
                                    l2053 14E2                                      l1318 456C  
                                    l1342 50AE                                      l1334 5030  
                                    l1510 39BA                                      l1350 2BB2  
                                    l2070 1552                                      l2054 14A6  
                                    l1511 39D2                                      l1503 395C  
                                    l1351 2BC2                                      l1328 50B2  
                                    l1336 503C                                      l1504 3936  
                                    l1352 2BD0                                      l2080 1752  
                                    l2064 16C4                                      l2048 140A  
                                    l1329 4FEA                                      l1513 3A6A  
                                    l1505 3932                                      l1425 3074  
                                    l2081 1706                                      l2065 150C  
                                    l2049 147C                                      l1434 6DC4  
                                    l1338 5070                                      l1098 570A  
                                    l1610 207C                                      l1370 2F3E  
                                    l1346 2BDE                                      l2082 1738  
                                    l2058 1678                                      l2074 15AC  
                                    l1435 6DBE                                      l1099 56B6  
                                    l1611 201A                                      l1603 1E4C  
                                    l1427 307A                                      l1371 2DE4  
                                    l1347 2BA6                                      l2075 1610  
                                    l2067 1510                                      l1612 20CC  
                                    l1620 4E7A                                      l1700 0688  
                                    l1372 2F6E                                      l1380 2EBA  
                                    l1188 69E8                                      l2076 1660  
                                    l2068 1548                                      l1381 2E70  
                                    l1373 2DFA                                      l1349 2BFC  
                                    l2501 634E                                      l2085 1788  
                                    l2069 1558                                      l1614 211C  
                                    l1606 1E90                                      l1382 2EB6  
                                    l1374 2E10                                      l2502 635C  
                                    l2094 1870                                      l2086 17BC  
                                    l1607 1EBC                                      l1703 06E2  
                                    l1631 521E                                      l1375 2E62  
                                    l2095 1818                                      l2079 1672  
                                    l1608 1EE8                                      l1712 0792  
                                    l1704 06F8                                      l1624 523C  
                                    l1640 51FC                                      l2280 5A00  
                                    l1384 2EC2                                      l1376 2E18  
                                    l2088 185A                                      l1609 1F9E  
                                    l1801 137C                                      l1705 0758  
                                    l1625 5230                                      l1633 515C  
                                    l2281 59FC                                      l1377 2E5E  
                                    l1369 2DBA                                      l2089 17D6  
                                    l1802 12EE                                      l1722 08AC  
                                    l1386 2F0A                                      l1619 4E66  
                                    l1731 0B3E                                      l1707 0744  
                                    l1627 5136                                      l2283 5A40  
                                    l1387 2F26                                      l1379 2E6A  
                                    l2099 188C                                      l1804 134E  
                                    l1716 0C28                                      l1732 0B60  
                                    l1628 5208                                      l1652 3186  
                                    l1388 2F32                                      l1717 07DA  
                                    l1629 513E                                      l1653 31A8  
                                    l2461 6D7E                                      l1726 09E8  
                                    l1646 5240                                      l2286 5A8C  
                                    l1494 388C                                      l1398 30AA  
                                    l1751 0EFC                                      l1743 0E74  
                                    l1727 0A58                                      l1639 51AA  
                                    l1671 32DC                                      l1663 328C  
                                    l1655 31C0                                      l2287 5A52  
                                    l1399 2F80                                      l1760 1166  
                                    l1752 0FEE                                      l1672 32CC  
                                    l1664 327C                                      l1496 386E  
                                    l1761 10A4                                      l1737 1074  
                                    l1745 0EA0                                      l2289 5ABE  
                                    l1497 3854                                      l2730 664C  
                                    l1682 138E                                      l1754 101E  
                                    l1738 0C52                                      l2722 67D2  
                                    l2571 6840                                      l2731 6648  
                                    l1755 103E                                      l1691 07A8  
                                    l1675 32F0                                      l1667 32B4  
                                    l2723 67CA                                      l2491 6016  
                                    l2572 6820                                      l1764 10CA  
                                    l1692 01D8                                      l1684 01C4  
                                    l1668 32A4                                      l2564 5CA4  
                                    l2492 6024                                      l1773 11F2  
                                    l1765 10F2                                      l1749 0ED8  
                                    l1685 0050                                      l2565 5C20  
                                    l1790 1216                                      l1774 1184  
                                    l1694 02EA                                      l2566 5C9C  
                                    l1767 1110                                      l1695 04A0  
                                    l1687 01B0                                      l1871 4B72  
                                    l2487 5FE2                                      l1784 120A  
                                    l1768 1130                                      l1872 4C86  
                                    l2488 5FD6                                      l1689 13E2  
                                    l1785 1204                                      l1777 119C  
                                    l2577 6B60                                      l1873 4B7C  
                                    l2497 6326                                      l1794 126C  
                                    l1778 11BC                                      l2578 6B50  
                                    l2498 631A                                      l1795 128C  
                                    l1699 04FA                                      l1789 12C2  
                                    l1877 4C6C                                      l1878 4C4E  
                                    l1799 12DA                                      l1993 3D70  
                                    l1994 3F18                                      l1996 3EF4  
                                    l1999 3DD4                                      l8646 5EC8  
                                    l8658 5EF0                                      l8852 6A2C  
                                    STR_1 FF0E                                      STR_2 FFFC  
                                    STR_4 FFCB                                      STR_5 FF48  
                                    STR_6 FFD7                                      STR_7 FF65  
                                    STR_8 FFA8                                      STR_9 FFE1  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _LATF 000F8E  
                                    _LATG 000F8F                             __CFG_DEBUG$ON 000000  
                                    _MIRD 000EB8                                      i2l22 005E  
                                    i2l24 006A                                      u7520 5EEC  
                                    u7540 5F14                                      u9320 49F6  
                                    _MIWR 000EB6                                      u9350 4A62  
                                    u9510 427C                                      u9520 42AE  
                                    u9530 42E0                                      u9540 4312  
                                    u9700 3634                                      u7860 6A4C  
                                    u9517 4272                                      u9550 4344  
                                    u9710 3724                                      u9527 42A4  
                       ??_PHY_WaitForBusy 0013                                      u9640 5C0E  
                                    u9560 4376                                      u9800 3F8E  
                                    u9537 42D6                                      u9705 362A  
                                    u9810 3FA0                                      u9547 4308  
                                    u9715 371A                                      u9580 66BE  
                                    u9820 3FCC                                      u9557 433A  
                                    u9670 52D4                                      u9590 66D6  
                                    u9830 3FF6                                      u9567 436C  
                                    u9680 5326                                      u9760 6532  
                                    u9840 4020                                      u9930 666E  
                                    u9675 52CA                                      u9587 66B4  
                                    u9685 531C                                      u9790 3F7E  
                                    u9960 6634                                      u9937 6664  
                                    _TMR1 000FCE                                      _TMR2 000FCC  
                 __size_of_ETH_EdataWrite 0006                             __CFG_FCMEN$ON 000000  
                            __CFG_STVR$ON 000000                           __end_of_TCP_Snd 2120  
                      DNS_Handler@nameLen 00D1                           _TCP_PayloadSave 4E2C  
                                    _atoi 59FA                                      _main 6E4A  
                                    _lfsr 6D48                                      _time 6594  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004D  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00B6                             __CFG_FOSC2$ON 000000  
                       ?_ETH_RemovePacket 0013                           ETH_EdataWrite@d 0001  
                            ?_IPV4_Packet 0001                makeIpv4AddresstoStr@ip_str 03A1  
              ??_TMR1_SetInterruptHandler 0016                      _ETH_Shift_Tx_Packets 499A  
                      __size_of_ETH_Read8 0026                        __size_of_ETH_Flush 006E  
                  __size_of_ETH_ReadBlock 0054                              ___param_bank 000000  
                      __size_of_IPV4_Init 0006                        __size_of_IPV4_Send 009E  
                 __end_of_ETH_WriteString 67C8                    __size_of_ETH_NewPacket 01F2  
                      ??_ETH_RemovePacket 0015                              ?_ETH_Write32 0013  
                            ?_ETH_Write16 0013                   __size_of_ETH_GetReadPtr 000A  
                        ARPV4_Request@ret 007C                   __end_of_TMR0_Initialize 69BA  
                     __size_of_ARPV4_Init 0032                  __size_of_ETH_CheckLinkUp 002A  
          ??_TMR0_DefaultInterruptHandler 0001                   ?_TCP_FiniteStateMachine 0001  
          __size_of_OSCILLATOR_Initialize 000A                  __size_of_sendDHCPDECLINE 0008  
                        _ETH_GetByteCount 6CDE             __end_of_OSCILLATOR_Initialize 6ECE  
                                   l10240 6820                          __end_of_ETH_Copy 5B76  
                                   l12020 181C                                     l12006 17DA  
                                   l11320 3932                                     l10530 6DBE  
                                   l11306 388C                                     l11234 2F1E  
                                   l10292 5252                                     l12204 570A  
                                   l11500 02E4                                     l11420 51F8  
                                   l10358 64EE                                     l10710 6A62  
                                   l11334 3978                                     l12070 1A7A  
                                   l12062 1A0A                                     l10368 6526  
                                   l12240 4932                                     l11602 08AA  
                                   l10388 63A2                          __end_of_ETH_Dump 6ABC  
                                   l11348 39CA                                     l11614 09E0  
                                   l11518 048C                                     l10822 5A88  
                                   l12238 492A                                     l12344 26A0  
                                   l12280 31A8                          __end_of_ETH_Init 3D1C  
                                   l12374 286A                                     l12358 2712  
                                   l10782 5B20                                     l13270 574A  
                                   l10862 6DEA                                     l13262 5D3C  
                                   l12552 237E                                     l13264 5D4C  
                                   l11818 1348                                     l10882 5C20  
                                   l12570 246A                                     l12562 23F4  
                                   l13266 5D52                                     l13268 5740  
                       _nextPacketPointer 0041                                     l11870 3DE4  
                                   l12566 2432                                     l11960 15AC  
                                   l12674 6AF6                                     l10898 6B50  
                                   l11874 3E00                          __end_of_ETH_Send 5C1E  
                                   ?_atoi 0019                                     ?_main 0001  
                                   ?_lfsr 0001                __size_of_Process_TFTP_Data 000E  
                                   STR_10 FFF1                                     STR_11 FFF7  
                                   STR_12 FF95                                     STR_13 FF7F  
                                   STR_14 FFEA                                     STR_15 FFBA  
                                   _ECON1 000FD2                                     _ECON2 000EFE  
                                   ?_time 0013       IPV4_PseudoHeaderChecksum@payloadLen 0013  
                                   u10000 1C34                                     u10010 1D64  
                         __end_of___lldiv 6036                                     u10005 1C2A  
                                   u10030 1E42                                     u10015 1D5A  
                                   u10200 68E8                                     u11001 3818  
                                   u10210 655A                                     u10160 6A70  
                                   u10400 6AE6                                     u10250 5AE8  
                                   u11060 396C                                     u10430 5C4E  
                                   u11231 035C                                     u12120 62EE  
                                   u11160 5168                                     u10600 632A  
                                   _T0CON 000FD5                                     u11401 0978  
                                   u10370 65B6                                     u10290 5B5E  
                                   u10450 5C76                                     u11090 39C6  
                                   u11411 0A6E                                     u11331 07F0  
                                   u11421 0A96                                     u11261 056C  
                                   u10437 5C44                                     u12150 58E4  
                                   u12310 3200                                     u12230 4950  
                                   u12320 3218                                     u10800 2CF4  
                                   u10720 2C16                                     u12080 1A9A  
                                   _T1CON 000FCD                                     u10385 65B8  
                                   u10457 5C6C                           __end_of___llmod 636E  
                                   u12410 33AA                                     u10490 6802  
                                   u10810 2D04                                     u10570 5FE6  
                                   u12090 1AB8                                     u12058 18DE  
                                   u12155 58DA                                     u11611 123C  
                                   u11451 0C78                                     u11371 08D2  
                                   u10731 2C20                                     u12420 34BE  
                                   u11700 3DF6                                     u10740 2C4A  
                                   u12228 4910                                     u11621 1256  
                                   u11461 0C9E                                     u11381 08EE  
                                   u12229 492A                                     u12510 27DA  
                                   u11710 3ED8                                     u12190 4800  
                                   u12078 1A48                                     u11391 0916  
                                   u12415 33A0                                     u10911 2F7E  
                                   u10751 2C58                                     u10840 2D78  
                                   u11800 1586                                     _T2CON 000FCA  
                                   u12521 284E                                     u12425 34B4  
                                   u12290 31DC                                     u11650 3D42  
                                   u12611 2A22                                     u12515 27D0  
                                   u10931 2F92                                     u10851 2DAC  
                                   u10771 2C86                                     u12620 2B2A  
                                   u10780 2CBC                                     u10790 2CCC  
                                   u12630 3AA0                                     u11671 3D90  
                                   u11807 157C                                     u12560 28A4  
                                   u12800 23B6                                     u12625 2B20  
                                   u12481 2704                                     u12490 271E  
                                   u12571 28C2                                     u12580 2976  
                                   u12820 23F4                                     u11860 1606  
                                   u10990 37EE                                     u12750 2228  
                                   u11870 164A                                     u12840 2432  
                                   u12760 2320                                     u11768 143A  
                                   u12585 296C                                     u12930 2602  
                                   u11858 15D2                                     u12755 221E  
                                   u11867 15FC                                     u11859 1608  
                                   u12860 246A                                     u12780 2398  
                                   u12765 2316                                     u11877 1640  
                                   u12870 247A                                     u12871 2478  
                                   _MAIPG 000EA6                                     _ERDPT 000F7A  
                      __size_of_TCB_Reset 011A                                     _MICMD 000EB2  
                                   _ERXND 000EEA                                     _ETXND 000EE6  
                                   _ERXST 000EE8                                     _EWRPT 000EE2  
                                   _ETXST 000EE4                                     _TMR0H 000FD7  
                                   _TMR1H 000FCF                                     _TMR0L 000FD6  
                                   _TMR1L 000FCE                           __end_of__doprnt 1AC2  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _TRISF 000F97  
                                   _TRISG 000F98                                     _RXRST 007E96  
          __size_of_ETH_TxComputeChecksum 00D8         __size_of_TMR0_SetInterruptHandler 000E  
           __end_of_ETH_TxComputeChecksum 59FA                 ?_TMR0_SetInterruptHandler 0013  
                    __size_of_DHCP_Manage 015A                          __end_of_TMR0_ISR 6B46  
                        __end_of_TMR1_ISR 6B9E                          __end_of_TCP_Init 6C1C  
                __size_of_sendDHCPREQUEST 0008                                     _pHead 0045  
                        __end_of_TCP_Recv 351E                          __end_of_TFTP_Ack 6226  
                             ?_IPv4_Start 0031                          __end_of_PHY_Read 629A  
                                   _pTail 0043                           __end_of_dpowers FEA5  
                        __end_of_UDP_Send 567A                               ?_TCP_Update 0001  
                         __end_of_isdigit 6D86                                     atoi@a 001E  
                                   atoi@s 0019                                     _putch 6F40  
                  DHCP_Handler@acceptNACK 0122                        __size_of_PHY_Write 0028  
                 __end_of_TMR1_Initialize 6BF2                        __size_of_UDP_Start 005C  
               __size_of_ETH_EventHandler 005A                 _IPV4_PseudoHeaderChecksum 5842  
                                   pclath 000FFA           TCP_FiniteStateMachine@nextState 0104  
                                   tablat 000FF5                                     time@t 0013  
                     _udp_table_nextEntry 69BA                                     plusw1 000FE3  
                                   plusw2 000FDB                                     status 000FD8  
                                   wtemp6 004E                             _ETH_EdataRead 6F0A  
                  ?_IPV4_GetStartPosition 0013                ETH_RxComputeChecksum@rxptr 002D  
                __size_of_SPI1_Initialize 000E                       __size_of_ETH_GetMAC 005E  
                          __CFG_ETHLED$ON 000000                     ?_ETH_Shift_Tx_Packets 0001  
           ETH_TxComputeChecksum@position 0025                         __end_of_DHCP_init 6F40  
                     __size_of_ETH_Read16 003C                       __size_of_ETH_Read32 0058  
                    __end_of_ARPV4_Packet 2BA4                            _checksum_eeprm 0240  
                         __initialization 5DFA                       __size_of_ETH_Insert 0060  
                    __end_of_ARPV4_Lookup 653C                              __end_of_atoi 5AC8  
                            __end_of_main 6E58                              __end_of_lfsr 6D68  
                    __end_of_ARPV4_Update 6B18                              __end_of_time 65EA  
                            _xorSequences FEC5            __end_of_TCP_FiniteStateMachine 1408  
                         rtcc_set@gie_val 0015                       __size_of_ETH_Write8 000A  
                             ETH_Copy@len 0019                   __end_of_TMR2_Initialize 6E2A  
             ?_INTERRUPT_InterruptManager 0001                      ?_udp_table_nextEntry 0015  
                             ETH_Init@mac 0087                           _DHCP_WriteZeros 6DBC  
                                  ??_atoi 001B                  ETH_TxComputeChecksum@len 0027  
                                  ??_main 003B                                    ??_lfsr 0013  
                                  ??_time 0017                             __activetblptr 000003  
                          _MAC_getAddress 6ECE              __end_of_ICMP_PortUnreachable 5588  
                     _TCP_ParseTCPOptions 50FA                              ?_sendRequest 0001  
                 ETH_WriteStart@ethPacket 002B                    ETH_PacketListReset@ptr 0013  
                           _ETH_ReadBlock 65EA                           TCP_Snd@txHeader 00D3  
                       __end_of_ETH_Read8 6C94                             _ETH_NewPacket 45E0  
                       __end_of_ETH_Flush 6308                   Process_TFTP_Data@length 0019  
                       ETH_Send@packetEnd 001B                   __end_of_TCP_PayloadSave 4FA0  
                       __end_of_IPV4_Init 6F34                         __end_of_IPV4_Send 5DFA  
                               ??_TCP_Snd 00AA                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                         ipdb_init@x_2014 0014                          ___llmod@dividend 0020  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR1L 000FBE  
                          ETH_Dump@length 0013                                    _EDMAND 000EF2  
                                  _EDMAST 000EF0                                    ?_putch 0001  
                                  _MAADR1 000E84                                    _MAADR2 000E85  
                                  _MAADR3 000E82                                    _MAADR4 000E83  
                                  _MAADR5 000E80                                    _MAADR6 000E81  
                 __size_of_ETH_SetReadPtr 000A                                    _MACON1 000EA0  
                                  _MACON3 000EA2                                    _MACON4 000EA3  
                    DNS_Handler@ipAddress 00C5                                    _MAMXFL 000EAA  
                 __size_of_ETH_SendQueued 0080                                    _INTCON 000FF2  
                                  _OSCCON 000FD3                            ?_ETH_EdataRead 0001  
                    __end_of_ICMP_Receive 5760                              DNS_Handler@i 00D8  
                            DNS_Handler@v 00CD                              DNS_Handler@x 00D9  
                        __end_of_dhcpName FEFA                      ?_TCP_ParseTCPOptions 0001  
                       __end_of_TCB_Reset 5482                     __size_of_DHCP_Handler 051E  
            __size_of_ETH_PacketListReset 004A                            __CFG_XINST$OFF 000000  
                __end_of_sendDHCPDISCOVER 60B6      __end_of_TMR1_DefaultInterruptHandler 6F44  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 6F42  
                          ETH_ReadBlock@p 0019                        _ETH_ResetByteCount 6F00  
                    TCP_Snd@payloadLength 00CE                     ICMP_EchoReply@ipv4Hdr 00A8  
                        ?_ETH_WriteString 0013                                    ___wmul 6C94  
                               ??___lldiv 001B                       __size_of_IPv4_Start 023C  
                                  _arpMap 0310                                 ??___llmod 0028  
                     __size_of_TCP_Update 0182                         __end_of_PHY_Write 6C6E  
                   ??_udp_table_nextEntry 0017                                    _memcmp 5C1E  
                               ??__doprnt 002F                                    _memcpy 680E  
                        ?_TMR0_Initialize 0001                                    _memset 6B46  
                       __end_of_UDP_Start 6488                                    clear_0 5E52  
                                  clear_1 5E5E                                    clear_2 5E6A  
                                  clear_3 5E76                                    clear_4 5E82  
                  __end_of_MAC_getAddress 6ED8                                    _tcpMss 02C3  
                                  _txData 0400                    DHCP_Handler@count_3188 0120  
                            __doprnt@flag 0065                      __end_of_broadcastMAC FF0E  
                                  _printf 690E                       ?_ETH_ResetByteCount 0001  
                            __doprnt@prec 006A                                    _strcmp 67C8  
                                  _strlen 663E                    ETH_ComputeChecksum@len 0013  
       ICMP_PortUnreachable@destIPAddress 00AC                        Process_TFTP_Data@i 001B  
                         UDP_Start@destIP 00A8                                 ??_isdigit 0013  
                          ?_ETH_ReadBlock 0013                              ?_UDP_Receive 00DD  
                            __mediumconst FE7C                         ??_ETH_CheckLinkUp 001E  
                          ?_ETH_NewPacket 0013                          __end_of_rtcc_set 6AEA  
                     ETH_SetReadPtr@rdptr 0015                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                         TFTP_Ack@started 00B6                         ??_sendDHCPDECLINE 003B  
                                  putch@c 0001                              ?_NTP_Handler 00B8  
            __size_of_Network_WaitForLink 000C                      __size_of_DNS_Handler 02A8  
TMR0_SetInterruptHandler@InterruptHandler 0013  TMR1_SetInterruptHandler@InterruptHandler 0013  
                            ??_ARPV4_Init 0015                         ?_ECCP1_Initialize 0001  
                   DHCP_WriteZeros@length 0014                              _DHCP_Handler 2BA4  
                           DHCP_Handler@a 0110             __size_of_INTERRUPT_Initialize 0004  
                   __end_of_TMR1_CallBack 6D26                            _ETH_EdataWrite 6F34  
                 ?_IPV4_SaveStartPosition 0001                        TFTP_Handler@length 00B8  
                        ?_TMR1_Initialize 0001                            ETH_Insert@data 0013  
                         __CFG_FOSC$HSPLL 000000                         _SYSTEM_Initialize 6B9E  
                      ??_ECCP1_Initialize 0013                        TFTP_Handler@opcode 01CA  
                              __accesstop 0060                   __end_of__initialization 5E88  
                    ??_ETH_ResetByteCount 0013                         ??_sendDHCPREQUEST 003B  
                   ??_TCP_ParseTCPOptions 0017                        ?_SYSTEM_Initialize 0001  
                               ?_ETH_Copy 0019                    ??_ETH_Shift_Tx_Packets 0019  
                               ?_ETH_Dump 0013                                 ?_ETH_Init 0001  
                               ?_ETH_Send 0001                             ___rparam_used 000001  
                 ?_IPV4_GetDatagramLength 0013                             ?_Network_Init 0001  
                           ?_Network_Read 0001                    IPV4_Send@payloadLength 0037  
                   IPv4_Start@destAddress 0031                   __end_of_DHCP_WriteZeros 6DD6  
              DHCP_Manage@managementTimer 0308                            __pcstackCOMRAM 0001  
                            __pidataBANK1 6F46                              __pidataBANK2 6948  
                            __pidataBANK3 69F2                       ??_SYSTEM_Initialize 003A  
                   _ETH_RxComputeChecksum 66E4                   __size_of_ETH_WriteBlock 0052  
                          _ETH_GetReadPtr 6EF6                                 ?_TMR0_ISR 0001  
                    __size_of_IPV4_Packet 0542                                 ?_TMR1_ISR 0001  
                   __end_of_ARPV4_Request 37D0             ?_TMR1_DefaultInterruptHandler 0001  
                               ?_TCP_Init 0001                                 ?_TCP_Recv 0105  
                               ?_TFTP_Ack 0001                                 ?_PHY_Read 0015  
                       ??_SPI1_Initialize 0013                   __size_of_ETH_WriteStart 0222  
                               ?_UDP_Send 0001                             __end_of_putch 6F42  
                        ?_TMR2_Initialize 0001                     _udp_table_getIterator 6ED8  
                      PHY_WaitForBusy@ret 0013                      __size_of_ETH_Write16 000E  
                    __size_of_ETH_Write32 001A                           ?_MAC_getAddress 0013  
                      __end_of_ARPV4_Init 6A5A         TCP_ParseTCPOptions@tcpOptionsSize 001B  
            __end_of_ETH_NextPacketUpdate 68D2                              ??_ETH_GetMAC 0015  
                         ETH_Copy@tmp_len 001D                           _PHY_WaitForBusy 6A5A  
                            ETH_Read8@ret 0013                              ??_ETH_Read32 0017  
                            ??_ETH_Read16 0015                          ??_Network_Manage 02F9  
                            ??_ETH_Insert 0019              __end_of_resetPortUnreachable 6EC4  
                            ??_ETH_Write8 0013                  DHCP_Handler@optionLength 0124  
                        ?_TCP_PayloadSave 00E7                                __doprnt@ap 002D  
                              __doprnt@cp 0063                    __end_of_ETH_EdataWrite 6F3A  
                              __doprnt@pb 0029                      ETH_ComputeChecksum@v 0023  
          __end_of_IPV4_SaveStartPosition 6E9E                 __end_of_SYSTEM_Initialize 6BC8  
                                 ??_putch 0013                           ??_ETH_EdataRead 0013  
                           _current_block 003B                         _ipv4StartPosition 0252  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                        _ETH_EventHandler 6488                        __size_of_ipdb_init 0096  
                __end_of_ETH_GetByteCount 6D02                     __size_of_ARPV4_Packet 0542  
          __end_of_IPV4_GetDatagramLength 6E3A                                __pnvCOMRAM 0049  
                   __size_of_ARPV4_Lookup 005A                                ??_ETH_Copy 001B  
                              ??_ETH_Dump 0015                                ??_ETH_Init 007B  
                          ??_Network_Init 003A                            ??_Network_Read 02E7  
                              ??_ETH_Send 0017                  Process_TFTP_Data@address 0013  
                   __size_of_ARPV4_Update 002E                     isPortUnreachable@port 0013  
                              _macAddress FF02                      _ICMP_PortUnreachable 5482  
                         TCB_Reset@tcbPtr 0013                        __end_of_ETH_GetMAC 642C  
                  __end_of_ETH_GetReadPtr 6F00                        __end_of_ETH_Read16 690E  
                      __end_of_ETH_Read32 6594          __end_of_TMR0_SetInterruptHandler 6E66  
                      __end_of_ETH_Insert 63CE                              IPV4_Send@ret 006A  
                                 ?___wmul 0013                                ??_TMR0_ISR 0001  
                              ??_TMR1_ISR 0001                                ??_TCP_Init 0013  
                              ??_TCP_Recv 010B                     DNS_Handler@dataLength 00D4  
                              ??_TFTP_Ack 0039                                ??_PHY_Read 0019  
                                 _CCP1CON 000FBD                        __end_of_ETH_Write8 6F1E  
                              ??_UDP_Send 006F                                   _ECCP1AS 000FB6  
                                 ?_memcmp 0013                                   ?_memcpy 0013  
                                 ?_memset 0013               __end_of_ETH_ComputeChecksum 5368  
                                 _EDMADST 000EF4                                   ?_printf 006D  
                                 _EFLOCON 000E97                                   _MABBIPG 000EA4  
                 __size_of_ADC_Initialize 0016                                   ?_strcmp 0013  
                                 ?_strlen 0013                           ??_ETH_ReadBlock 0017  
                         ??_ETH_NewPacket 0015                                   _EIEbits 000EFB  
               __size_of_ETH_RemovePacket 00E2                                   _ERXFCON 000ED8  
                      __size_of_rtcc_init 0024                                   _EIRbits 000F60  
                                 _ERXRDPT 000EEC                                _ipv4Header 026D  
                            _ARPV4_Packet 2662                                   _OSCTUNE 000F9B  
                            ??_IPv4_Start 0099                                   _SSP1ADD 000FC8  
                    __size_of_sendRequest 0220                                   _SSP1BUF 000FC9  
                            _ARPV4_Lookup 64E2                                   _TCP_Snd 1AC2  
                         ?_ETH_EdataWrite 0001                              ??_TCP_Update 00FC  
                   __size_of_ICMP_Receive 00E6                              _ARPV4_Update 6AEA  
                          _ETH_SetReadPtr 6EEC                   ??_IPV4_GetStartPosition 0015  
                          _ETH_SendQueued 60B6                    ARPV4_Lookup@ip_address 0013  
                         TCP_Update@count 0105                        UDP_Receive@udpcksm 00DD  
                   ?_ICMP_PortUnreachable 00A8                                   __Hparam 0000  
                                 __Lparam 0000                           ?_ETH_GetReadPtr 0013  
                  ?_ETH_RxComputeChecksum 0025                                _errataTemp 000E7E  
                        ?_DHCP_WriteZeros 0014                                 _ECON1bits 000FD2  
                              _last_block 0256                        ETH_NewPacket@index 0017  
                               ?_rtcc_set 0013                   __end_of_PHY_WaitForBusy 6A8C  
                             time@gie_val 0017                                   ___lldiv 5FB4  
                         __size_of___wmul 0026                                   ___llmod 6308  
                  ?_udp_table_getIterator 0013                                 _DHCP_init 6F3E  
                              _currentTCB 003D                        __end_of_IPv4_Start 419E  
                                 __doprnt 1408                        __end_of_TCP_Update 4CB6  
                                 __pcinit 5DFA                           __size_of_memcmp 00A0  
                         __size_of_memcpy 0044                           __size_of_memset 002C  
                                 __ramtop 1000                         __end_of_ipdb_init 5F28  
                                 __ptext0 6E4A                                   __ptext1 6B9E  
                                 __ptext2 6E1A                                   __ptext3 6BC8  
                                 __ptext4 6982                                   __ptext5 6E58  
                                 __ptext6 6E66                                   __ptext7 6852  
                                 __ptext8 6EC4                                   __ptext9 6D26  
                                 _ethData 0224                           __size_of_printf 003A  
       TCP_FiniteStateMachine@notAckBytes 0101                             ??_DHCP_Manage 00B1  
                               _T0CONbits 000FD5            ??_TMR1_DefaultInterruptHandler 0001  
                         __size_of_strcmp 0046                              _ICMP_Receive 567A  
                         __size_of_strlen 0054                         __end_of_hexpowers FEC5  
                               _T1CONbits 000FCD                                   _dpowers FE7D  
                   _OSCILLATOR_Initialize 6EC4                                 _T2CONbits 000FCA  
                                 _tcbList 003F                                _lfsr_value 01FF  
                           ?_TFTP_Handler 00B8                                   _isdigit 6D68  
       __size_of_TMR1_SetInterruptHandler 000E                       _ETH_PacketListReset 6734  
                ??_PIN_MANAGER_Initialize 0013                 ?_TMR1_SetInterruptHandler 0013  
                  __end_of_ETH_SetReadPtr 6EF6                    __end_of_ETH_SendQueued 6136  
                  ICMP_EchoReply@sequence 00B0                      __size_of_UDP_Receive 01C8  
                   _ETH_TxComputeChecksum 5922                   __size_of_ICMP_EchoReply 0176  
              __size_of_SYSTEM_Initialize 002A                                 _MICMDbits 000EB2  
                    end_of_initialization 5E88                                 _ESTATbits 000EFD  
                 ETH_ComputeChecksum@cksm 001F                               TCP_Snd@data 00CA  
                    __size_of_NTP_Handler 007C                   ETH_ComputeChecksum@seed 0015  
                             TCP_Snd@cksm 00CC                                 _ETH_Read8 6C6E  
                              _next_block 0242                                 _ETH_Flush 629A  
                                 memcmp@n 0017                                   memcpy@d 001A  
                                 memcpy@n 0017                                   memcpy@s 001C  
                               _IPV4_Init 6F2E                                   lfsr@lsb 0013  
                               _IPV4_Send 5D5C                        IPv4_Start@protocol 0035  
                                 memset@c 0015                                   memset@n 0017  
                                 memset@p 0019                              _broadcastMAC FF08  
                        UDP_Start@dstPort 00AE                       ETH_ReadBlock@buffer 0013  
                    _ETH_NextPacketUpdate 6894                  DHCP_Handler@acceptOffers 0121  
                     ETH_ReadBlock@length 0015                           ___lldiv@divisor 0017  
                          ETH_Write8@data 0013                      ?_ETH_PacketListReset 0001  
                           ?_rtcc_handler 0001                         __end_of_rtcc_init 6CDE  
                             PHY_Read@reg 0019                           ___lldiv@counter 001F  
                             PHY_Read@ret 001A                          UDP_Start@srcPort 00AC  
                            _Control_Byte 0258                                   printf@f 006D  
                       ?_sendDHCPDISCOVER 0001                            _ETH_WriteBlock 6692  
                     _Network_WaitForLink 6EAC                                 _TCB_Reset 5368  
                              ??_rtcc_set 0015                                   postdec1 000FE5  
                                 postdec2 000FDD                      _resetPortUnreachable 6EB8  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                           _ETH_CheckLinkUp 6C1C  
                          _ETH_WriteStart 419E                        TCP_PayloadSave@len 00E7  
                      TCP_PayloadSave@ret 00F1                                ?_DHCP_init 0001  
                   ARPV4_Packet@mergeFlag 0082                           _sendDHCPDECLINE 6F1E  
                      ??_sendDHCPDISCOVER 00B0                        _nextSequenceNumber 0304  
                                 strcmp@r 0018               TFTP_Ack@tftp_server_address 00B0  
                                 strlen@s 0013                                _prev_block 0244  
                ETH_RxComputeChecksum@len 0025                  _TMR0_SetInterruptHandler 6E58  
                              _timersInit 6D86                            ??_TFTP_Handler 00BA  
                               _PHY_Write 6C46                                _tftp_modes 03E6  
                               _UDP_Start 642C                      __end_of_Network_Init 6D48  
                    __end_of_Network_Read 5D5C                           _sendDHCPREQUEST 6F26  
                             UDP_Send@ret 0073                             _rcvPayloadLen 0248  
                         ?_ETH_SetReadPtr 0015                      ?_Network_WaitForLink 0001  
                         ?_ETH_SendQueued 0001                         IPV4_Packet@hdrLen 02E2  
                       _isPortUnreachable 6DD6                           DNS_Handler@dnsR 0100  
                     __end_of_DHCP_Manage 50FA                             ETH_GetMAC@mac 0013  
                         DNS_Handler@lock 00DA                         IPV4_Packet@length 02E3  
                         DNS_Handler@type 00CF                         ICMP_EchoReply@ret 00B8  
                              ?_ETH_Read8 0001                        ?_isPortUnreachable 0013  
                              ?_ETH_Flush 0001                                ?_IPV4_Init 0001  
                              ?_IPV4_Send 0037                    ??_ICMP_PortUnreachable 0039  
                   ?_ETH_NextPacketUpdate 0001                           _SPI1_Initialize 6E66  
                          DHCP_Manage@now 00B2                    PHY_WaitForBusy@timeout 0014  
                          ??_rtcc_handler 0001                     ??_ETH_PacketListReset 0013  
                 DHCP_Handler@messageType 0118                    __end_of_ETH_WriteBlock 66E4  
                     ??_isPortUnreachable 0015               __end_of_udp_table_nextEntry 69F2  
                       __size_of_ETH_Copy 00AE                         __size_of_ETH_Dump 0030  
                       __size_of_ETH_Init 02A4                    __end_of_ETH_WriteStart 43C0  
                       __size_of_ETH_Send 00A8                          ??_MAC_getAddress 0015  
                   ?_resetPortUnreachable 0001                                _store_type 0246  
                              ?_TCB_Reset 0013                 __size_of_ECCP1_Initialize 0016  
            __end_of_INTERRUPT_Initialize 6F3E                          ?_PHY_WaitForBusy 0001  
                          __end_of___wmul 6CBA                  __end_of_ETH_EventHandler 64E2  
                ARPV4_Request@destAddress 002D                            TCP_Recv@length 0109  
                       _UDP_CallBackTable FED9                            TCP_Recv@tcbPtr 00FD  
                       __size_of_TMR0_ISR 002E                         __size_of_TMR1_ISR 002C  
                          _ADC_Initialize 6E04                         __size_of_TCP_Init 002A  
                       __size_of_TCP_Recv 045C                         __size_of_TFTP_Ack 0074  
                          __end_of_memcmp 5CBE                         __size_of_PHY_Read 0074  
                          __end_of_memcpy 6852                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_memset 6B72                     DHCP_Handler@acceptACK 0123  
                       __size_of_UDP_Send 00F2                  __size_of_ETH_WriteString 004A  
                              ?_PHY_Write 0015             NTP_Handler@timeFractionalPart 00BA  
                          __end_of_printf 6948                          _ETH_RemovePacket 5760  
               ETH_RxComputeChecksum@cksm 002F                                ?_UDP_Start 00A8  
                          __end_of_strcmp 680E                             ??_DNS_Handler 00BA  
                     ICMP_Receive@icmpHdr 00C0                 ETH_RxComputeChecksum@seed 0027  
                          __end_of_strlen 6692                       ICMP_Receive@ipv4Hdr 00B9  
                     start_initialization 5DFA                 __end_of_isPortUnreachable 6DEE  
                 ETH_RemovePacket@pPacket 0017               NTP_Handler@timeIntegralPart 00BE  
                   ??_Network_WaitForLink 0022                  __size_of_TMR0_Initialize 0038  
                  ?_ETH_TxComputeChecksum 0025           __size_of_PIN_MANAGER_Initialize 0042  
                              ipdb_init@x 0013                         NTP_Handler@length 00B8  
                           ETH_Copy@timer 001B                        sendRequest@started 0039  
                           ETH_Read32@ret 0017                             ETH_Read16@ret 0015  
             __end_of_TCP_ParseTCPOptions 5244                    ETH_WriteStart@dest_mac 0025  
             __size_of_ETH_ResetByteCount 000A                         ?_ETH_GetByteCount 0013  
                         ___llmod@divisor 0024                           ___llmod@counter 0028  
                ??_TCP_FiniteStateMachine 00F4                   __end_of_ETH_CheckLinkUp 6C46  
                 __end_of_sendDHCPDECLINE 6F26                        ??_ETH_GetByteCount 0015  
                           ??_IPV4_Packet 02C6                           ?_ETH_WriteBlock 0013  
           __size_of_ETH_Shift_Tx_Packets 019A                  __size_of_TMR1_Initialize 002A  
                         ?_ETH_WriteStart 0025                             ??_ETH_Write32 0017  
                           ??_ETH_Write16 0015                   ETH_Shift_Tx_Packets@len 0021  
                                ??___wmul 0017                 __end_of_UDP_CallBackTable FEED  
                     __end_of_dnsXidValue FED9                               __doprnt@idx 0060  
                             __doprnt@len 0061                    __end_of_ADC_Initialize 6E1A  
                             __doprnt@val 0066                               ??_DHCP_init 0013  
                     ARPV4_Request@header 007D                               __pdataBANK1 01FF  
                             __pdataBANK2 028D                               __pdataBANK3 03B6  
                                ??_memcmp 0019                            TFTP_Ack@opcode 00B7  
                                ??_memcpy 0019                                  ??_memset 0019  
                 __end_of_sendDHCPREQUEST 6F2E                    __size_of_TMR1_CallBack 0024  
                                ??_printf 0033                               ?_timersInit 0001  
                                ??_strcmp 0017                                  ??_strlen 0015  
                   DHCP_Handler@localData 0125                          ??_ETH_EdataWrite 0013  
                             _DHCP_Manage 4FA0                      IPv4_Start@macAddress 00A5  
                           ETH_Insert@len 0015                           IPV4_Packet@cksm 02E5  
                   TMR1_ISR@CountCallBack 0254                               __pbssCOMRAM 003B  
                ICMP_EchoReply@identifier 00AE                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 02C6  
                           __pcstackBANK3 03EC                     TCP_Recv@remoteAddress 0105  
                __size_of_TMR2_Initialize 0010                            _hostMacAddress 03B0  
                          _ICMP_EchoReply 4CB6                                  ?_TCP_Snd 00A8  
                 __end_of_SPI1_Initialize 6E74                              _isdigit$4939 0014  
                ICMP_PortUnreachable@cksm 00B2                       __end_of_DNS_Handler 3A78  
                  __size_of_ARPV4_Request 02B2                               ??_ETH_Read8 0013  
                             ??_ETH_Flush 0013                    ??_ETH_NextPacketUpdate 0013  
                             ??_IPV4_Init 0015                               ??_IPV4_Send 0066  
          __size_of_IPV4_GetStartPosition 000A                     __end_of_ETH_EdataRead 6F14  
                        ??_ETH_GetReadPtr 0015             __end_of_IPV4_GetStartPosition 6EEC  
                               __doprnt@c 006C                                 __doprnt@f 002B  
                ETH_PacketListReset@index 0015                   ??_ETH_RxComputeChecksum 0029  
                   _TMR0_InterruptHandler 03F0                  __size_of_TCP_PayloadSave 0174  
                               __pnvBANK2 02FA                                 __pnvBANK3 03F0  
                    __end_of_TFTP_Handler 3F62                                 _dhcpState 024C  
         ICMP_EchoReply@ipv4PayloadLength 00B6                    ??_resetPortUnreachable 0013  
                  _PIN_MANAGER_Initialize 6852                   ??_udp_table_getIterator 0015  
                               __pintcode 0008                               ??_TCB_Reset 0015  
        __end_of_TMR1_SetInterruptHandler 6E82                             __pmediumconst FE7C  
                               __ptext100 6692                                 __ptext101 64E2  
                               __ptext110 636E                                 __ptext102 5588  
                               __ptext111 6CDE                                 __ptext103 5D5C  
                               __ptext120 6D02                                 __ptext112 677E  
                               __ptext104 5922                                 __ptext121 6F42  
                               __ptext113 6DBC                                 __ptext105 5244  
                               __ptext122 6E3A                                 __ptext114 6F14  
                               __ptext106 6F0A                                 __ptext123 6B18  
                               __ptext115 6F34                                 __ptext107 5B76  
                               __ptext124 6F44                                 __ptext116 6D48  
                               __ptext108 60B6                                 __ptext125 0000  
                               __ptext117 6AEA                                 __ptext109 6F40  
                               __ptext119 6B72                                  ?___lldiv 0013  
                                ?___llmod 0020                             IPV4_Send@cksm 006B  
                         ?_ADC_Initialize 0001                                  ?__doprnt 0029  
                   __size_of_Network_Init 0022                     __size_of_Network_Read 009E  
                      ARPV4_Packet@header 008A                       __end_of_IPV4_Packet 2662  
                       __size_of_rtcc_set 002E                        ARPV4_Packet@arpPtr 0084  
                        _ip_database_info 0200              ??_INTERRUPT_InterruptManager 0001  
              __end_of_TFTP_callBackTable FE7D                        ARPV4_Packet@length 0080  
            IPV4_PseudoHeaderChecksum@len 001F              IPV4_PseudoHeaderChecksum@tmp 0024  
                ARPV4_Update@entryPointer 0013                       __end_of_ETH_Write16 6EAC  
                     __end_of_ETH_Write32 6DBC                               ??_PHY_Write 0017  
                                _ECCP1DEL 000F79                             ??_sendRequest 0039  
                             ??_UDP_Start 0036                                  ?_isdigit 0001  
                   __end_of_ETH_ReadBlock 663E                      __end_of_rtcc_handler 6E4A  
                  __end_of_ICMP_EchoReply 4E2C                                 _ipdb_init 5E92  
                         sendRequest@type 003A                     __end_of_ETH_NewPacket 47D2  
              __size_of_isPortUnreachable 0018                               _device_time 022E  
            __size_of_ETH_ComputeChecksum 0124              ETH_RemovePacket@packetHandle 0013  
                               _hexpowers FEA5                         ??_ETH_WriteString 0015  
                          __size_of_putch 0002                      _INTERRUPT_Initialize 6F3A  
                               _tcpHeader 0259                             _TMR1_CallBack 6D02  
                       ??_TMR0_Initialize 0016                   __size_of_Network_Manage 008C  
                          ___wmul@product 0017                      ETH_WriteBlock@buffer 0013  
                               _udpHeader 0281                      ETH_WriteBlock@length 0015  
                                _MIREGADR 000EB4                                  _ETH_Copy 5AC8  
                              TCP_Snd@ret 00D0                                  _ETH_Dump 6A8C  
                                _ETH_Init 3A78                       __size_of_timersInit 001C  
                                _ETH_Send 5B76                                  _PIE1bits 000F9D  
                             _dnsXidValue FED7                          ?_ETH_CheckLinkUp 0001  
         __size_of_TCP_FiniteStateMachine 1408                          ?_sendDHCPDECLINE 0001  
                            _Network_Init 6D26                              _Network_Read 5CBE  
     __size_of_INTERRUPT_InterruptManager 00AE                         _nextAvailablePort 024A  
              ??_TMR0_SetInterruptHandler 0016                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u840_48 6D12  
                                i2u866_48 6B32                                  i2u867_40 6B8E  
                                _RCONbits 000FD0                               _ethListSize 0048  
                        __CFG_WDTPS$32768 000000                          _ECCP1_Initialize 6DEE  
                                _SSP1CON1 000FC6                             ARPV4_Packet@x 0086  
                                _TMR0_ISR 6B18                                  _TMR1_ISR 6B72  
                                _TCP_Init 6BF2                                 _rtcc_init 6CBA  
                                _SSP1STAT 000FC7                                  _TCP_Recv 30C2  
                                _TFTP_Ack 61B2                                  _PHY_Read 6226  
      __size_of_IPV4_PseudoHeaderChecksum 00E0                             _ARPV4_Request 351E  
                                _UDP_Send 5588          ICMP_PortUnreachable@srcIPAddress 00A8  
                      _flash_checksum_new 023C                           _portUnreachable 0250  
              ?_IPV4_PseudoHeaderChecksum 0013                          ?_sendDHCPREQUEST 0001  
                       ??_TMR1_Initialize 0016                          ??_ETH_SetReadPtr 0017  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0013                            DNS_Handler@ttl 00C9  
                __size_of_DHCP_WriteZeros 001A                             ARPV4_Lookup@x 001D  
                        ??_ETH_SendQueued 0013               TCP_FiniteStateMachine@event 0103  
              ICMP_PortUnreachable@length 00B0                  ??_IPV4_SaveStartPosition 0015  
                           ??_UDP_Receive 00DF                                ?_ipdb_init 0001  
                         ?_ICMP_EchoReply 00A8                               _DNS_Handler 37D0  
                           ARPV4_Update@x 0015                 __size_of_sendDHCPDISCOVER 0080  
                           ??_NTP_Handler 003B                        __end_of_macAddress FF08  
                 DNS_Handler@entryPointer 00DB                  ??_IPV4_GetDatagramLength 0015  
                        ?_SPI1_Initialize 0001                IPV4_PseudoHeaderChecksum@v 001D  
                           TCP_Recv@count 00FC                          TCP_Update@tcbPtr 0107  
                           ?_DHCP_Handler 00B8                                 copy_data0 5E0E  
                               copy_data1 5E2E                     ?_INTERRUPT_Initialize 0001  
                        __size_of_TCP_Snd 065E                       __end_of_sendRequest 45E0  
                          ?_TMR1_CallBack 0001                         ??_TMR2_Initialize 0013  
                           TCP_Snd@tcbPtr 00A8                     Process_TFTP_Data@data 0017  
                   Process_TFTP_Data@hptr 001C                  __end_of_ETH_RemovePacket 5842  
                           IPv4_Start@ret 00A7                                  __Hrparam 0000  
              ETH_TxComputeChecksum@rxptr 0060                               _IPV4_Packet 2120  
                               memcpy@tmp 0019                                  __Lrparam 0000  
               DHCP_Handler@declineOffers 011E                        DHCP_Handler@a_3189 0114  
                             _ETH_Write32 6DA2                               _ETH_Write16 6E9E  
                        ETH_ReadBlock@len 0017                            ?_ARPV4_Request 002D  
                       ??_TCP_PayloadSave 00E9                   ??_OSCILLATOR_Initialize 0013  
                              ?_rtcc_init 0001                          TFTP_Handler@data 0164  
                        __size_of___lldiv 0082                          __size_of___llmod 0066  
                       ?_ETH_EventHandler 0001                          __size_of__doprnt 06BA  
       __end_of_IPV4_PseudoHeaderChecksum 5922                    TCP_ParseTCPOptions@ret 0019  
                _TMR1_SetInterruptHandler 6E74                    TCP_ParseTCPOptions@opt 001A  
                             _tcbListSize 0047                        DHCP_Handler@chaddr 0100  
                ARPV4_Packet@entryPointer 0088                   ICMP_PortUnreachable@ret 00B4  
                 ??_ETH_TxComputeChecksum 002B                     _TMR1_InterruptHandler 02FA  
                      ??_ETH_EventHandler 0025                    _TCP_FiniteStateMachine 0000  
                      DHCP_Handler@length 00B8                                  _dhcpData 028D  
                                _dhcpName FEED                        DHCP_Handler@siaddr 011A  
                        __size_of_isdigit 001E                        DHCP_Handler@option 0119  
                                _dnsCache 0500                                  __ptext10 6D86  
                                __ptext11 6CBA                                  __ptext20 6308  
                                __ptext12 6E74                                  _destPort 024E  
                                __ptext21 5FB4                                  __ptext13 6BF2  
                                __ptext30 6E04                                  __ptext22 6C46  
                                __ptext14 6EAC                                  __ptext31 5F28  
                                __ptext23 6ECE                                  __ptext15 6F2E  
                                __ptext40 37D0                                  __ptext32 4B34  
                                __ptext24 6734                                  __ptext16 5E92  
                                _arpTimer 0289                                  __ptext41 3D1C  
                                __ptext33 5CBE                                  __ptext25 6F3E  
                                __ptext17 3A78                                  __ptext50 6EE2  
                                __ptext42 6B46                                  __ptext34 2120  
                                __ptext26 6A28                                  __ptext18 690E  
                                __ptext51 6EEC                                  __ptext43 59FA  
                                __ptext35 47D2                                  __ptext27 63CE  
                                __ptext19 1408                                  __ptext60 6EB8  
                                __ptext52 67C8                                  __ptext44 6D68  
                                __ptext36 69BA                                  __ptext28 6F3A  
                                __ptext61 6DD6                                  __ptext53 6F1E  
                                __ptext45 61B2                                  __ptext37 6ED8  
                                __ptext29 6DEE                                  __ptext70 68D2  
                                __ptext62 4E2C                                  __ptext54 5C1E  
                                __ptext46 6E82                                  __ptext38 6136  
                                __ptext71 5AC8                                  __ptext63 1AC2  
                                __ptext55 653C                                  __ptext47 6ABC  
                                __ptext39 2BA4                                  __ptext80 6C1C  
                                __ptext72 6A8C                                  __ptext64 5368  
                                __ptext56 30C2                                  __ptext48 6E2A  
                                __ptext81 6226                                  __ptext73 66E4  
                                __ptext65 6E90                                  __ptext57 50FA  
                                __ptext49 5482                                  __ptext90 3F62  
                                __ptext82 6A5A                                  __ptext74 6894  
                                __ptext66 6EF6                                  __ptext58 6C6E  
                                __ptext91 6DA2                                  __ptext83 4FA0  
                                __ptext75 629A                                  __ptext67 5842  
                                __ptext59 0000                                  __ptext92 6E9E  
                                __ptext84 6594                                  __ptext76 2662  
                                __ptext68 567A                                  __ptext93 351E  
                                __ptext85 6F26                                  __ptext77 65EA  
                                __ptext69 4CB6                                  __ptext94 680E  
                                __ptext86 6036                                  __ptext78 6488  
                                __ptext95 419E                                  __ptext87 43C0  
                                __ptext79 5760                                  __ptext96 499A  
                                __ptext88 663E                                  __ptext97 6C94  
                                __ptext89 642C                                  __ptext98 6F00  
                                __ptext99 45E0                            ??_DHCP_Handler 00BA  
                       ARPV4_Packet@x_939 0087                              _SSP1CON1bits 000FC6  
                           _sequenceIndex 0257                                _ARPV4_Init 6A28  
                            time@the_time 0018               __end_of_ETH_PacketListReset 677E  
                   __size_of_TFTP_Handler 0246                       __end_of_UDP_Receive 499A  
                        ??_ETH_WriteBlock 0017                           ICMP_Receive@ret 00BF  
                       _remoteIpv4Address 0232                             TFTP_Handler@v 01CB  
                      ETH_WriteStart@type 0027                 ARPV4_Lookup@entry_pointer 001B  
                     __end_of_NTP_Handler 61B2                             __size_of_atoi 00CE  
                        ??_ETH_WriteStart 0029                             __size_of_main 000E  
                           __size_of_lfsr 0020                         TFTP_Ack@dest_port 00B4  
                           __size_of_time 0056      __end_of_TMR0_DefaultInterruptHandler 6F46  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 6F44  
           __size_of_ICMP_PortUnreachable 0106                    DNS_Handler@authorityRR 00C3  
                       UDP_Send@udpLength 0076                          PHY_Write@GIESave 0018  
                                _rtcc_set 6ABC                       __end_of_tftp_option FF02  
                                _tftp_msg 0378                                  int$flags 004D  
                                atoi@sign 001D                      _rxPacketStatusVector 0236  
                               rtcc_set@t 0013        __end_of_INTERRUPT_InterruptManager 00B6  
              _INTERRUPT_InterruptManager 0008                              _SSP1STATbits 000FC7  
                   __size_of_rtcc_handler 0010              __size_of_udp_table_nextEntry 0038  
               __size_of_ETH_GetByteCount 0024               __end_of_Network_WaitForLink 6EB8  
                            ??_timersInit 001C                                  _xor_mask 02C5  
                  TFTP_Handler@block_size 01C8                              ?_DHCP_Manage 0001  
                              _ETH_GetMAC 63CE                       Network_Manage@nowPv 030C  
         __size_of_IPV4_SaveStartPosition 000E                                _ETH_Read32 653C  
                              _ETH_Read16 68D2              __end_of_ETH_Shift_Tx_Packets 4B34  
                              _INTCONbits 000FF2                               _sendRequest 43C0  
                           _flash_address 0300                 ETH_TxComputeChecksum@cksm 0062  
                __size_of_PHY_WaitForBusy 0032                              _TFTP_Handler 3D1C  
                       _Process_TFTP_Data 6E82                               ??_ipdb_init 0013  
               ETH_TxComputeChecksum@seed 0029                                  memcmp@s1 0013  
                                memcmp@s2 0015                                _ETH_Insert 636E  
                                memcpy@d1 0013                                  memcpy@s1 0015  
                           ?_ARPV4_Packet 0001                           ETH_Write32@data 0013  
                         ETH_Write16@data 0013                             ?_ARPV4_Lookup 0013  
                                isdigit@c 0015                    ??_INTERRUPT_Initialize 0013  
                                memset@p1 0013                        ?_Process_TFTP_Data 0013  
                              _ETH_Write8 6F14                      __end_of_xorSequences FED7  
                         ??_TMR1_CallBack 0001                         ??_DHCP_WriteZeros 0016  
                           ?_ARPV4_Update 0001                     _receivedRemoteAddress 022A  
         __size_of_IPV4_GetDatagramLength 0010                __end_of_ETH_ResetByteCount 6F0A  
           ICMP_EchoReply@icmp_cksm_start 00B2                                  intlevel2 0000  
                       DHCP_Handler@count 011F                            _Network_Manage 5F28  
                              _MISTATbits 000E8A                       ??_Process_TFTP_Data 001B  
                        ___lldiv@dividend 0013                   ?_PIN_MANAGER_Initialize 0001  
                         UDP_Receive@hptr 00E4              __size_of_TCP_ParseTCPOptions 014A  
                      __end_of_timersInit 6DA2            __size_of_ETH_RxComputeChecksum 0050  
                        ??_ADC_Initialize 0013             __end_of_ETH_RxComputeChecksum 6734  
                            _rtcc_handler 6E3A             ?_TMR0_DefaultInterruptHandler 0001  
                         ??_ARPV4_Request 0060                       _ETH_ComputeChecksum 5244  
                             ARPV4_Init@x 0015            __size_of_udp_table_getIterator 000A  
                  _flash_checksum_current 023E                                  printf@ap 0033  
           __end_of_udp_table_getIterator 6EE2                                  printf@pb 0035  
                             ??_rtcc_init 0016                          DHCP_Handler@F840 03B6  
                    IPV4_Send@totalLength 006D                           _ETH_WriteString 677E  
                       _tftp_last_address 02BD                 __end_of_Process_TFTP_Data 6E90  
                           ?_ICMP_Receive 00B9                      ETH_CheckLinkUp@value 001E  
                                strcmp@s1 0013                                  strcmp@s2 0015  
                 __size_of_MAC_getAddress 000A                           ETH_WriteBlock@p 0017  
                        ___lldiv@quotient 001B             IPV4_PseudoHeaderChecksum@cksm 0020  
                         ARPV4_Packet@ret 0083                           _TMR0_Initialize 6982  
                          UDP_Receive@ret 00E3                                  strlen@cp 0017  
                          ??_ARPV4_Packet 0060                   TFTP_Handler@recv_buffer 0100  
                             _UDP_Receive 47D2                     ETH_Init@phycon1_value 0085  
                          ??_ARPV4_Lookup 0017                      ?_ETH_ComputeChecksum 0013  
                        _sendDHCPDISCOVER 6036                TCP_PayloadSave@buffer_size 00F2  
                          ??_ARPV4_Update 0013                                  strtok@sp 023A  
                              _IPv4_Start 3F62                               _NTP_Handler 6136  
                __end_of_ECCP1_Initialize 6E04                  ETH_Insert@current_tx_ptr 001B  
                       Network_Manage@now 03EC                                _TCP_Update 4B34  
                  __end_of_Network_Manage 5FB4                               ?_ARPV4_Init 0001  
                      _TFTP_callBackTable FE7D            __end_of_PIN_MANAGER_Initialize 6894  
                      Network_Read@header 02EB                               _tftp_option FEFA  
           __size_of_ETH_NextPacketUpdate 003E                    _IPV4_SaveStartPosition 6E90  
                           PHY_Write@data 0015                     _IPV4_GetStartPosition 6EE2  
                            UDP_Send@cksm 0074                           _TMR1_Initialize 6BC8  
                            PHY_Write@reg 0017                          ETH_Insert@offset 0017  
