

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Nov 29 18:17:59 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F67J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1
   148                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   149                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   150                           	dabs	1,0xE7E,2,_errataTemp
   151  0000                     
   152                           ; Version 1.44
   153                           ; Generated 14/09/2017 GMT
   154                           ; 
   155                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   156                           ; All rights reserved.
   157                           ; 
   158                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   159                           ; 
   160                           ; Redistribution and use in source and binary forms, with or without modification, are
   161                           ; permitted provided that the following conditions are met:
   162                           ; 
   163                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   164                           ;        conditions and the following disclaimer.
   165                           ; 
   166                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   167                           ;        of conditions and the following disclaimer in the documentation and/or other
   168                           ;        materials provided with the distribution.
   169                           ; 
   170                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   171                           ;        software without specific prior written permission.
   172                           ; 
   173                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   174                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   175                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   176                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   177                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   178                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   179                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   180                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   181                           ; 
   182                           ; 
   183                           ; Code-generator required, PIC18F67J60 Definitions
   184                           ; 
   185                           ; SFR Addresses
   186  0000                     
   187                           	psect	idataCOMRAM
   188  016B5A                     __pidataCOMRAM:
   189                           	opt stack 0
   190                           
   191                           ;initializer for _tcpMss
   192  016B5A  0218               	dw	536
   193                           
   194                           	psect	idataBANK1
   195  016B64                     __pidataBANK1:
   196                           	opt stack 0
   197                           
   198                           ;initializer for _lfsr_value
   199  016B64  40                 	db	64
   200                           
   201                           	psect	idataBANK2
   202  01661A                     __pidataBANK2:
   203                           	opt stack 0
   204                           
   205                           ;initializer for _dhcpData
   206  01661A  0000               	dw	0
   207  01661C  0000               	dw	0
   208  01661E  0000               	dw	0
   209  016620  0000               	dw	0
   210  016622  0000               	dw	0
   211  016624  0000               	dw	0
   212  016626  0000               	dw	0
   213  016628  0000               	dw	0
   214  01662A  0000               	dw	0
   215  01662C  0000               	dw	0
   216  01662E  0000               	dw	0
   217  016630  0000               	dw	0
   218  016632  0000               	dw	0
   219  016634  0000               	dw	0
   220  016636  0000               	dw	0
   221  016638  0000               	dw	0
   222  01663A  0000               	dw	0
   223  01663C  0000               	dw	0
   224  01663E  000A               	dw	10
   225  016640  0000               	dw	0
   226  016642  0E10               	dw	3600
   227  016644  0000               	dw	0
   228  016646  0000               	dw	0
   229  016648  0000               	dw	0
   230                           
   231                           ;initializer for _ntp
   232  01664A  BC                 	db	low STR_8
   233  01664B  FF                 	db	high STR_8
   234                           
   235                           ;initializer for _xor_mask
   236  01664C  41                 	db	65
   237                           
   238                           	psect	idataBANK3
   239  0166B2                     __pidataBANK3:
   240                           	opt stack 0
   241                           
   242                           ;initializer for DHCP_Handler@F840
   243  0166B2  0000               	dw	0
   244  0166B4  0000               	dw	0
   245  0166B6  0000               	dw	0
   246  0166B8  0000               	dw	0
   247  0166BA  0000               	dw	0
   248  0166BC  0000               	dw	0
   249  0166BE  0000               	dw	0
   250  0166C0  0000               	dw	0
   251  0166C2  0000               	dw	0
   252  0166C4  0000               	dw	0
   253  0166C6  0000               	dw	0
   254  0166C8  0000               	dw	0
   255  0166CA  0000               	dw	0
   256  0166CC  0000               	dw	0
   257  0166CE  0000               	dw	0
   258  0166D0  0000               	dw	0
   259  0166D2  0000               	dw	0
   260  0166D4  0000               	dw	0
   261  0166D6  0E10               	dw	3600
   262  0166D8  0000               	dw	0
   263  0166DA  0E10               	dw	3600
   264  0166DC  0000               	dw	0
   265  0166DE  0000               	dw	0
   266  0166E0  0000               	dw	0
   267                           
   268                           	psect	mediumconst
   269  00FEC6                     __pmediumconst:
   270                           	opt stack 0
   271  00FEC6  00                 	db	0
   272  00FEC7                     _dpowers:
   273                           	opt stack 0
   274  00FEC7  0001               	dw	1
   275  00FEC9  0000               	dw	0
   276  00FECB  000A               	dw	10
   277  00FECD  0000               	dw	0
   278  00FECF  0064               	dw	100
   279  00FED1  0000               	dw	0
   280  00FED3  03E8               	dw	1000
   281  00FED5  0000               	dw	0
   282  00FED7  2710               	dw	10000
   283  00FED9  0000               	dw	0
   284  00FEDB  86A0               	dw	34464
   285  00FEDD  0001               	dw	1
   286  00FEDF  4240               	dw	16960
   287  00FEE1  000F               	dw	15
   288  00FEE3  9680               	dw	38528
   289  00FEE5  0098               	dw	152
   290  00FEE7  E100               	dw	57600
   291  00FEE9  05F5               	dw	1525
   292  00FEEB  CA00               	dw	51712
   293  00FEED  3B9A               	dw	15258
   294  00FEEF                     __end_of_dpowers:
   295                           	opt stack 0
   296  00FEEF                     _hexpowers:
   297                           	opt stack 0
   298  00FEEF  0001               	dw	1
   299  00FEF1  0000               	dw	0
   300  00FEF3  0010               	dw	16
   301  00FEF5  0000               	dw	0
   302  00FEF7  0100               	dw	256
   303  00FEF9  0000               	dw	0
   304  00FEFB  1000               	dw	4096
   305  00FEFD  0000               	dw	0
   306  00FEFF  0000               	dw	0
   307  00FF01  0001               	dw	1
   308  00FF03  0000               	dw	0
   309  00FF05  0010               	dw	16
   310  00FF07  0000               	dw	0
   311  00FF09  0100               	dw	256
   312  00FF0B  0000               	dw	0
   313  00FF0D  1000               	dw	4096
   314  00FF0F                     __end_of_hexpowers:
   315                           	opt stack 0
   316  00FF0F                     _xorSequences:
   317                           	opt stack 0
   318  00FF0F  41                 	db	65
   319  00FF10  44                 	db	68
   320  00FF11  47                 	db	71
   321  00FF12  48                 	db	72
   322  00FF13  4E                 	db	78
   323  00FF14  53                 	db	83
   324  00FF15  55                 	db	85
   325  00FF16  5C                 	db	92
   326  00FF17  5F                 	db	95
   327  00FF18  60                 	db	96
   328  00FF19  65                 	db	101
   329  00FF1A  69                 	db	105
   330  00FF1B  6A                 	db	106
   331  00FF1C  72                 	db	114
   332  00FF1D  77                 	db	119
   333  00FF1E  78                 	db	120
   334  00FF1F  7B                 	db	123
   335  00FF20  7E                 	db	126
   336  00FF21                     __end_of_xorSequences:
   337                           	opt stack 0
   338  00FF21                     _dnsXidValue:
   339                           	opt stack 0
   340  00FF21  1234               	dw	4660
   341  00FF23                     __end_of_dnsXidValue:
   342                           	opt stack 0
   343  00FF23                     _UDP_CallBackTable:
   344                           	opt stack 0
   345  00FF23  0035               	dw	53
   346  00FF25  D0                 	db	low _DNS_Handler
   347  00FF26  37                 	db	high _DNS_Handler
   348  00FF27  01                 	db	low (_DNS_Handler shr (0+16))
   349  00FF28  0044               	dw	68
   350  00FF2A  A4                 	db	low _DHCP_Handler
   351  00FF2B  2B                 	db	high _DHCP_Handler
   352  00FF2C  01                 	db	low (_DHCP_Handler shr (0+16))
   353  00FF2D  007B               	dw	123
   354  00FF2F  AC                 	db	low _NTP_Handler
   355  00FF30  5D                 	db	high _NTP_Handler
   356  00FF31  01                 	db	low (_NTP_Handler shr (0+16))
   357  00FF32                     __end_of_UDP_CallBackTable:
   358                           	opt stack 0
   359  00FF32                     _dhcpName:
   360                           	opt stack 0
   361  00FF32  54                 	db	84
   362  00FF33  69                 	db	105
   363  00FF34  74                 	db	116
   364  00FF35  61                 	db	97
   365  00FF36  6E                 	db	110
   366  00FF37  20                 	db	32
   367  00FF38  42                 	db	66
   368  00FF39  6F                 	db	111
   369  00FF3A  69                 	db	105
   370  00FF3B  6C                 	db	108
   371  00FF3C  65                 	db	101
   372  00FF3D  72                 	db	114
   373  00FF3E  00                 	db	0
   374  00FF3F                     __end_of_dhcpName:
   375                           	opt stack 0
   376  00FF3F                     _macAddress:
   377                           	opt stack 0
   378  00FF3F  00                 	db	0
   379  00FF40  55                 	db	85
   380  00FF41  58                 	db	88
   381  00FF42  00                 	db	0
   382  00FF43  10                 	db	16
   383  00FF44  22                 	db	34
   384  00FF45                     __end_of_macAddress:
   385                           	opt stack 0
   386  00FF45                     _broadcastMAC:
   387                           	opt stack 0
   388  00FF45  FF                 	db	255
   389  00FF46  FF                 	db	255
   390  00FF47  FF                 	db	255
   391  00FF48  FF                 	db	255
   392  00FF49  FF                 	db	255
   393  00FF4A  FF                 	db	255
   394  00FF4B                     __end_of_broadcastMAC:
   395                           	opt stack 0
   396  00FF4B                     STR_1:
   397  00FF4B  4D                 	db	77	;'M'
   398  00FF4C  41                 	db	65	;'A'
   399  00FF4D  43                 	db	67	;'C'
   400  00FF4E  20                 	db	32
   401  00FF4F  41                 	db	65	;'A'
   402  00FF50  64                 	db	100	;'d'
   403  00FF51  64                 	db	100	;'d'
   404  00FF52  72                 	db	114	;'r'
   405  00FF53  65                 	db	101	;'e'
   406  00FF54  73                 	db	115	;'s'
   407  00FF55  73                 	db	115	;'s'
   408  00FF56  20                 	db	32
   409  00FF57  66                 	db	102	;'f'
   410  00FF58  72                 	db	114	;'r'
   411  00FF59  6F                 	db	111	;'o'
   412  00FF5A  6D                 	db	109	;'m'
   413  00FF5B  20                 	db	32
   414  00FF5C  45                 	db	69	;'E'
   415  00FF5D  45                 	db	69	;'E'
   416  00FF5E  50                 	db	80	;'P'
   417  00FF5F  52                 	db	82	;'R'
   418  00FF60  4F                 	db	79	;'O'
   419  00FF61  4D                 	db	77	;'M'
   420  00FF62  3A                 	db	58	;':'
   421  00FF63  20                 	db	32
   422  00FF64  25                 	db	37
   423  00FF65  2E                 	db	46
   424  00FF66  32                 	db	50	;'2'
   425  00FF67  58                 	db	88	;'X'
   426  00FF68  3A                 	db	58	;':'
   427  00FF69  25                 	db	37
   428  00FF6A  2E                 	db	46
   429  00FF6B  32                 	db	50	;'2'
   430  00FF6C  58                 	db	88	;'X'
   431  00FF6D  3A                 	db	58	;':'
   432  00FF6E  25                 	db	37
   433  00FF6F  2E                 	db	46
   434  00FF70  32                 	db	50	;'2'
   435  00FF71  58                 	db	88	;'X'
   436  00FF72  3A                 	db	58	;':'
   437  00FF73  25                 	db	37
   438  00FF74  2E                 	db	46
   439  00FF75  32                 	db	50	;'2'
   440  00FF76  58                 	db	88	;'X'
   441  00FF77  3A                 	db	58	;':'
   442  00FF78  25                 	db	37
   443  00FF79  2E                 	db	46
   444  00FF7A  32                 	db	50	;'2'
   445  00FF7B  58                 	db	88	;'X'
   446  00FF7C  3A                 	db	58	;':'
   447  00FF7D  25                 	db	37
   448  00FF7E  2E                 	db	46
   449  00FF7F  32                 	db	50	;'2'
   450  00FF80  58                 	db	88	;'X'
   451  00FF81  20                 	db	32
   452  00FF82  0D                 	db	13
   453  00FF83  0A                 	db	10
   454  00FF84  00                 	db	0
   455  00FF85  0D                 	db	13
   456  00FF86  0A                 	db	10
   457  00FF87  0D                 	db	13
   458  00FF88  0A                 	db	10
   459  00FF89  53                 	db	83	;'S'
   460  00FF8A  74                 	db	116	;'t'
   461  00FF8B  61                 	db	97	;'a'
   462  00FF8C  72                 	db	114	;'r'
   463  00FF8D  74                 	db	116	;'t'
   464  00FF8E  69                 	db	105	;'i'
   465  00FF8F  6E                 	db	110	;'n'
   466  00FF90  67                 	db	103	;'g'
   467  00FF91  20                 	db	32
   468  00FF92  53                 	db	83	;'S'
   469  00FF93  79                 	db	121	;'y'
   470  00FF94  73                 	db	115	;'s'
   471  00FF95  6C                 	db	108	;'l'
   472  00FF96  6F                 	db	111	;'o'
   473  00FF97  67                 	db	103	;'g'
   474  00FF98  20                 	db	32
   475  00FF99  61                 	db	97	;'a'
   476  00FF9A  74                 	db	116	;'t'
   477  00FF9B  20                 	db	32
   478  00FF9C  25                 	db	37
   479  00FF9D  6C                 	db	108	;'l'
   480  00FF9E  75                 	db	117	;'u'
   481  00FF9F  0D                 	db	13
   482  00FFA0  0A                 	db	10
   483  00FFA1  00                 	db	0
   484  00FFA2  44                 	db	68	;'D'
   485  00FFA3  4E                 	db	78	;'N'
   486  00FFA4  53                 	db	83	;'S'
   487  00FFA5  20                 	db	32
   488  00FFA6  46                 	db	70	;'F'
   489  00FFA7  6F                 	db	111	;'o'
   490  00FFA8  75                 	db	117	;'u'
   491  00FFA9  6E                 	db	110	;'n'
   492  00FFAA  64                 	db	100	;'d'
   493  00FFAB  20                 	db	32
   494  00FFAC  25                 	db	37
   495  00FFAD  73                 	db	115	;'s'
   496  00FFAE  20                 	db	32
   497  00FFAF  69                 	db	105	;'i'
   498  00FFB0  6E                 	db	110	;'n'
   499  00FFB1  20                 	db	32
   500  00FFB2  63                 	db	99	;'c'
   501  00FFB3  61                 	db	97	;'a'
   502  00FFB4  63                 	db	99	;'c'
   503  00FFB5  68                 	db	104	;'h'
   504  00FFB6  65                 	db	101	;'e'
   505  00FFB7  20                 	db	32
   506  00FFB8  25                 	db	37
   507  00FFB9  75                 	db	117	;'u'
   508  00FFBA  6C                 	db	108	;'l'
   509  00FFBB  00                 	db	0
   510  00FFBC                     STR_8:
   511  00FFBC  6E                 	db	110	;'n'
   512  00FFBD  74                 	db	116	;'t'
   513  00FFBE  70                 	db	112	;'p'
   514  00FFBF  2E                 	db	46
   515  00FFC0  6D                 	db	109	;'m'
   516  00FFC1  69                 	db	105	;'i'
   517  00FFC2  63                 	db	99	;'c'
   518  00FFC3  72                 	db	114	;'r'
   519  00FFC4  6F                 	db	111	;'o'
   520  00FFC5  63                 	db	99	;'c'
   521  00FFC6  68                 	db	104	;'h'
   522  00FFC7  69                 	db	105	;'i'
   523  00FFC8  70                 	db	112	;'p'
   524  00FFC9  2E                 	db	46
   525  00FFCA  63                 	db	99	;'c'
   526  00FFCB  6F                 	db	111	;'o'
   527  00FFCC  6D                 	db	109	;'m'
   528  00FFCD  00                 	db	0
   529  00FFCE                     STR_10:
   530  00FFCE  30                 	db	48	;'0'
   531  00FFCF  31                 	db	49	;'1'
   532  00FFD0  32                 	db	50	;'2'
   533  00FFD1  33                 	db	51	;'3'
   534  00FFD2  34                 	db	52	;'4'
   535  00FFD3  35                 	db	53	;'5'
   536  00FFD4  36                 	db	54	;'6'
   537  00FFD5  37                 	db	55	;'7'
   538  00FFD6  38                 	db	56	;'8'
   539  00FFD7  39                 	db	57	;'9'
   540  00FFD8  41                 	db	65	;'A'
   541  00FFD9  42                 	db	66	;'B'
   542  00FFDA  43                 	db	67	;'C'
   543  00FFDB  44                 	db	68	;'D'
   544  00FFDC  45                 	db	69	;'E'
   545  00FFDD  46                 	db	70	;'F'
   546  00FFDE  00                 	db	0
   547  00FFDF  25                 	db	37
   548  00FFE0  64                 	db	100	;'d'
   549  00FFE1  2E                 	db	46
   550  00FFE2  25                 	db	37
   551  00FFE3  64                 	db	100	;'d'
   552  00FFE4  2E                 	db	46
   553  00FFE5  25                 	db	37
   554  00FFE6  64                 	db	100	;'d'
   555  00FFE7  2E                 	db	46
   556  00FFE8  25                 	db	37
   557  00FFE9  64                 	db	100	;'d'
   558  00FFEA  00                 	db	0
   559  00FFEB  25                 	db	37
   560  00FFEC  75                 	db	117	;'u'
   561  00FFED  20                 	db	32
   562  00FFEE  3A                 	db	58	;':'
   563  00FFEF  20                 	db	32
   564  00FFF0  25                 	db	37
   565  00FFF1  73                 	db	115	;'s'
   566  00FFF2  0D                 	db	13
   567  00FFF3  0A                 	db	10
   568  00FFF4  00                 	db	0
   569  00FFF5                     STR_9:
   570  00FFF5  28                 	db	40
   571  00FFF6  6E                 	db	110	;'n'
   572  00FFF7  75                 	db	117	;'u'
   573  00FFF8  6C                 	db	108	;'l'
   574  00FFF9  6C                 	db	108	;'l'
   575  00FFFA  29                 	db	41
   576  00FFFB  00                 	db	0
   577  00FFFC                     STR_2:
   578  00FFFC  2E                 	db	46
   579  00FFFD  00                 	db	0
   580  0000                     
   581                           ; #config settings
   582  00FFFE  00                 	db	0	; dummy byte at the end
   583  0000                     
   584                           	psect	nvCOMRAM
   585  000047                     __pnvCOMRAM:
   586                           	opt stack 0
   587  000047                     _timer0ReloadVal:
   588                           	opt stack 0
   589  000047                     	ds	2
   590  000049                     _timer1ReloadVal:
   591                           	opt stack 0
   592  000049                     	ds	2
   593                           
   594                           	psect	nvBANK2
   595  0002F9                     __pnvBANK2:
   596                           	opt stack 0
   597  0002F9                     _TMR0_InterruptHandler:
   598                           	opt stack 0
   599  0002F9                     	ds	3
   600  0002FC                     _TMR1_InterruptHandler:
   601                           	opt stack 0
   602  0002FC                     	ds	3
   603  0000                     _EDMAND	set	3826
   604  0000                     _EDMAST	set	3824
   605  0000                     _EDMADST	set	3828
   606  0000                     _MIRD	set	3768
   607  0000                     _MIWR	set	3766
   608  0000                     _MAMXFL	set	3754
   609  0000                     _ERXRDPT	set	3820
   610  0000                     _EWRPT	set	3810
   611  0000                     _ERXND	set	3818
   612  0000                     _ERXST	set	3816
   613  0000                     _ETXND	set	3814
   614  0000                     _ETXST	set	3812
   615  0000                     _MAIPG	set	3750
   616  0000                     _MICMDbits	set	3762
   617  0000                     _MICMD	set	3762
   618  0000                     _MIREGADR	set	3764
   619  0000                     _MISTATbits	set	3722
   620  0000                     _EIEbits	set	3835
   621  0000                     _EIE	set	3835
   622  0000                     _ERXFCON	set	3800
   623  0000                     _MAADR6	set	3713
   624  0000                     _MAADR5	set	3712
   625  0000                     _MAADR4	set	3715
   626  0000                     _MAADR3	set	3714
   627  0000                     _MAADR2	set	3717
   628  0000                     _MAADR1	set	3716
   629  0000                     _EFLOCON	set	3735
   630  0000                     _MABBIPG	set	3748
   631  0000                     _MACON4	set	3747
   632  0000                     _MACON3	set	3746
   633  0000                     _MACON1	set	3744
   634  0000                     _ECON2	set	3838
   635  0000                     _ESTATbits	set	3837
   636  0000                     _ERDPT	set	3962
   637  0000                     _TMR1	set	4046
   638  0000                     _SSP1STATbits	set	4039
   639  0000                     _SSP1BUF	set	4041
   640  0000                     _SSP1CON1bits	set	4038
   641  0000                     _SSP1ADD	set	4040
   642  0000                     _SSP1CON1	set	4038
   643  0000                     _SSP1STAT	set	4039
   644  0000                     _INTCON	set	4082
   645  0000                     _PIR2bits	set	4001
   646  0000                     _EIRbits	set	3936
   647  0000                     _ECON1bits	set	4050
   648  0000                     _ECON1	set	4050
   649  0000                     _CCPR1H	set	4031
   650  0000                     _CCPR1L	set	4030
   651  0000                     _ECCP1AS	set	4022
   652  0000                     _ECCP1DEL	set	3961
   653  0000                     _CCP1CON	set	4029
   654  0000                     _T0CONbits	set	4053
   655  0000                     _T0CON	set	4053
   656  0000                     _TMR0L	set	4054
   657  0000                     _TMR0H	set	4055
   658  0000                     _ADCON0bits	set	4034
   659  0000                     _ADRESH	set	4036
   660  0000                     _ADRESL	set	4035
   661  0000                     _ADCON2	set	4032
   662  0000                     _ADCON1	set	4033
   663  0000                     _ADCON0	set	4034
   664  0000                     _ADCON1bits	set	4033
   665  0000                     _TRISD	set	3989
   666  0000                     _TRISC	set	3988
   667  0000                     _TRISB	set	3987
   668  0000                     _TRISG	set	3992
   669  0000                     _TRISA	set	3986
   670  0000                     _TRISF	set	3991
   671  0000                     _TRISE	set	3990
   672  0000                     _LATC	set	3979
   673  0000                     _LATG	set	3983
   674  0000                     _LATB	set	3978
   675  0000                     _LATF	set	3982
   676  0000                     _LATA	set	3977
   677  0000                     _LATD	set	3980
   678  0000                     _LATE	set	3981
   679  0000                     _T2CONbits	set	4042
   680  0000                     _T2CON	set	4042
   681  0000                     _TMR2	set	4044
   682  0000                     _PR2	set	4043
   683  0000                     _OSCTUNE	set	3995
   684  0000                     _OSCCON	set	4051
   685  0000                     _T1CONbits	set	4045
   686  0000                     _T1CON	set	4045
   687  0000                     _TMR1L	set	4046
   688  0000                     _TMR1H	set	4047
   689  0000                     _PIR1bits	set	3998
   690  0000                     _PIE1bits	set	3997
   691  0000                     _INTCONbits	set	4082
   692  0000                     _RCONbits	set	4048
   693  0000                     _GIE	set	32663
   694  0000                     _RXRST	set	32406
   695                           
   696                           	psect	cinit
   697  0157B2                     __pcinit:
   698                           	opt stack 0
   699  0157B2                     start_initialization:
   700                           	opt stack 0
   701  0157B2                     __initialization:
   702                           	opt stack 0
   703                           
   704                           ; Initialize objects allocated to BANK3 (48 bytes)
   705                           ; load TBLPTR registers with __pidataBANK3
   706  0157B2  0EB2               	movlw	low __pidataBANK3
   707  0157B4  6EF6               	movwf	tblptrl,c
   708  0157B6  0E66               	movlw	high __pidataBANK3
   709  0157B8  6EF7               	movwf	tblptrh,c
   710  0157BA  0E01               	movlw	low (__pidataBANK3 shr (0+16))
   711  0157BC  6EF8               	movwf	tblptru,c
   712  0157BE  EE03  F07B         	lfsr	0,__pdataBANK3
   713  0157C2  EE10 F030          	lfsr	1,48
   714  0157C6                     copy_data0:
   715  0157C6  0009               	tblrd		*+
   716  0157C8  CFF5 FFEE          	movff	tablat,postinc0
   717  0157CC  50E5               	movf	postdec1,w,c
   718  0157CE  50E1               	movf	fsr1l,w,c
   719  0157D0  E1FA               	bnz	copy_data0
   720                           
   721                           ; Initialize objects allocated to BANK2 (51 bytes)
   722                           ; load TBLPTR registers with __pidataBANK2
   723  0157D2  0E1A               	movlw	low __pidataBANK2
   724  0157D4  6EF6               	movwf	tblptrl,c
   725  0157D6  0E66               	movlw	high __pidataBANK2
   726  0157D8  6EF7               	movwf	tblptrh,c
   727  0157DA  0E01               	movlw	low (__pidataBANK2 shr (0+16))
   728  0157DC  6EF8               	movwf	tblptru,c
   729  0157DE  EE02  F0C6         	lfsr	0,__pdataBANK2
   730  0157E2  EE10 F033          	lfsr	1,51
   731  0157E6                     copy_data1:
   732  0157E6  0009               	tblrd		*+
   733  0157E8  CFF5 FFEE          	movff	tablat,postinc0
   734  0157EC  50E5               	movf	postdec1,w,c
   735  0157EE  50E1               	movf	fsr1l,w,c
   736  0157F0  E1FA               	bnz	copy_data1
   737                           
   738                           ; Initialize objects allocated to BANK1 (1 bytes)
   739                           ; load TBLPTR registers with __pidataBANK1
   740  0157F2  0E64               	movlw	low __pidataBANK1
   741  0157F4  6EF6               	movwf	tblptrl,c
   742  0157F6  0E6B               	movlw	high __pidataBANK1
   743  0157F8  6EF7               	movwf	tblptrh,c
   744  0157FA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   745  0157FC  6EF8               	movwf	tblptru,c
   746  0157FE  0009               	tblrd		*+	;fetch initializer
   747  015800  CFF5 F1FF          	movff	tablat,__pdataBANK1
   748                           
   749                           ; Initialize objects allocated to COMRAM (2 bytes)
   750                           ; load TBLPTR registers with __pidataCOMRAM
   751  015804  0E5A               	movlw	low __pidataCOMRAM
   752  015806  6EF6               	movwf	tblptrl,c
   753  015808  0E6B               	movlw	high __pidataCOMRAM
   754  01580A  6EF7               	movwf	tblptrh,c
   755  01580C  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   756  01580E  6EF8               	movwf	tblptru,c
   757  015810  0009               	tblrd		*+	;fetch initializer
   758  015812  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   759  015816  0009               	tblrd		*+	;fetch initializer
   760  015818  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   761                           
   762                           ; Clear objects allocated to BANK5 (128 bytes)
   763  01581C  EE05  F000         	lfsr	0,__pbssBANK5
   764  015820  0E80               	movlw	128
   765  015822                     clear_0:
   766  015822  6AEE               	clrf	postinc0,c
   767  015824  06E8               	decf	wreg,f,c
   768  015826  E1FD               	bnz	clear_0
   769                           
   770                           ; Clear objects allocated to BANK4 (200 bytes)
   771  015828  EE04  F000         	lfsr	0,__pbssBANK4
   772  01582C  0EC8               	movlw	200
   773  01582E                     clear_1:
   774  01582E  6AEE               	clrf	postinc0,c
   775  015830  06E8               	decf	wreg,f,c
   776  015832  E1FD               	bnz	clear_1
   777                           
   778                           ; Clear objects allocated to BANK3 (123 bytes)
   779  015834  EE03  F000         	lfsr	0,__pbssBANK3
   780  015838  0E7B               	movlw	123
   781  01583A                     clear_2:
   782  01583A  6AEE               	clrf	postinc0,c
   783  01583C  06E8               	decf	wreg,f,c
   784  01583E  E1FD               	bnz	clear_2
   785                           
   786                           ; Clear objects allocated to BANK2 (142 bytes)
   787  015840  EE02  F000         	lfsr	0,__pbssBANK2
   788  015844  0E8E               	movlw	142
   789  015846                     clear_3:
   790  015846  6AEE               	clrf	postinc0,c
   791  015848  06E8               	decf	wreg,f,c
   792  01584A  E1FD               	bnz	clear_3
   793                           
   794                           ; Clear objects allocated to COMRAM (12 bytes)
   795  01584C  EE00  F03B         	lfsr	0,__pbssCOMRAM
   796  015850  0E0C               	movlw	12
   797  015852                     clear_4:
   798  015852  6AEE               	clrf	postinc0,c
   799  015854  06E8               	decf	wreg,f,c
   800  015856  E1FD               	bnz	clear_4
   801  015858                     end_of_initialization:
   802                           	opt stack 0
   803  015858                     __end_of__initialization:
   804                           	opt stack 0
   805  015858  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   806  01585A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   807  01585C  0100               	movlb	0
   808  01585E  EF3A  F0B5         	goto	_main	;jump to C main() function
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           postdec1	equ	0xFE5
   816                           fsr1l	equ	0xFE1
   817                           
   818                           	psect	bssCOMRAM
   819  00003B                     __pbssCOMRAM:
   820                           	opt stack 0
   821  00003B                     _currentTCB:
   822                           	opt stack 0
   823  00003B                     	ds	2
   824  00003D                     _tcbList:
   825                           	opt stack 0
   826  00003D                     	ds	2
   827  00003F                     _nextPacketPointer:
   828                           	opt stack 0
   829  00003F                     	ds	2
   830  000041                     _pTail:
   831                           	opt stack 0
   832  000041                     	ds	2
   833  000043                     _pHead:
   834                           	opt stack 0
   835  000043                     	ds	2
   836  000045                     _tcbListSize:
   837                           	opt stack 0
   838  000045                     	ds	1
   839  000046                     _ethListSize:
   840                           	opt stack 0
   841  000046                     	ds	1
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           postdec1	equ	0xFE5
   849                           fsr1l	equ	0xFE1
   850                           
   851                           	psect	dataCOMRAM
   852  00004B                     __pdataCOMRAM:
   853                           	opt stack 0
   854  00004B                     _tcpMss:
   855                           	opt stack 0
   856  00004B                     	ds	2
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           
   866                           	psect	dataBANK1
   867  0001FF                     __pdataBANK1:
   868                           	opt stack 0
   869  0001FF                     _lfsr_value:
   870                           	opt stack 0
   871  0001FF                     	ds	1
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           postdec1	equ	0xFE5
   879                           fsr1l	equ	0xFE1
   880                           
   881                           	psect	bssBANK2
   882  000200                     __pbssBANK2:
   883                           	opt stack 0
   884  000200                     _ip_database_info:
   885                           	opt stack 0
   886  000200                     	ds	36
   887  000224                     _ethData:
   888                           	opt stack 0
   889  000224                     	ds	6
   890  00022A                     _receivedRemoteAddress:
   891                           	opt stack 0
   892  00022A                     	ds	4
   893  00022E                     DHCP_Manage@managementTimer:
   894                           	opt stack 0
   895  00022E                     	ds	4
   896  000232                     _device_time:
   897                           	opt stack 0
   898  000232                     	ds	4
   899  000236                     Network_Manage@nowPv:
   900                           	opt stack 0
   901  000236                     	ds	4
   902  00023A                     _remoteIpv4Address:
   903                           	opt stack 0
   904  00023A                     	ds	4
   905  00023E                     _rxPacketStatusVector:
   906                           	opt stack 0
   907  00023E                     	ds	4
   908  000242                     strtok@sp:
   909                           	opt stack 0
   910  000242                     	ds	2
   911  000244                     _rcvPayloadLen:
   912                           	opt stack 0
   913  000244                     	ds	2
   914  000246                     _nextAvailablePort:
   915                           	opt stack 0
   916  000246                     	ds	2
   917  000248                     _dhcpState:
   918                           	opt stack 0
   919  000248                     	ds	2
   920  00024A                     _destPort:
   921                           	opt stack 0
   922  00024A                     	ds	2
   923  00024C                     _portUnreachable:
   924                           	opt stack 0
   925  00024C                     	ds	2
   926  00024E                     _ipv4StartPosition:
   927                           	opt stack 0
   928  00024E                     	ds	2
   929  000250                     TMR1_ISR@CountCallBack:
   930                           	opt stack 0
   931  000250                     	ds	2
   932  000252                     _sequenceIndex:
   933                           	opt stack 0
   934  000252                     	ds	1
   935  000253                     _Control_Byte:
   936                           	opt stack 0
   937  000253                     	ds	1
   938  000254                     _tcpHeader:
   939                           	opt stack 0
   940  000254                     	ds	20
   941  000268                     _ipv4Header:
   942                           	opt stack 0
   943  000268                     	ds	20
   944  00027C                     _udpHeader:
   945                           	opt stack 0
   946  00027C                     	ds	8
   947  000284                     _hostMacAddress:
   948                           	opt stack 0
   949  000284                     	ds	6
   950  00028A                     _arpTimer:
   951                           	opt stack 0
   952  00028A                     	ds	4
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           postinc0	equ	0xFEE
   958                           wreg	equ	0xFE8
   959                           postdec1	equ	0xFE5
   960                           fsr1l	equ	0xFE1
   961                           
   962                           	psect	dataBANK2
   963  0002C6                     __pdataBANK2:
   964                           	opt stack 0
   965  0002C6                     _dhcpData:
   966                           	opt stack 0
   967  0002C6                     	ds	48
   968  0002F6                     _ntp:
   969                           	opt stack 0
   970  0002F6                     	ds	2
   971  0002F8                     _xor_mask:
   972                           	opt stack 0
   973  0002F8                     	ds	1
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1l	equ	0xFE1
   982                           
   983                           	psect	bssBANK3
   984  000300                     __pbssBANK3:
   985                           	opt stack 0
   986  000300                     _nextSequenceNumber:
   987                           	opt stack 0
   988  000300                     	ds	4
   989  000304                     _arpMap:
   990                           	opt stack 0
   991  000304                     	ds	104
   992  00036C                     makeIpv4AddresstoStr@ip_str:
   993                           	opt stack 0
   994  00036C                     	ds	15
   995                           tblptru	equ	0xFF8
   996                           tblptrh	equ	0xFF7
   997                           tblptrl	equ	0xFF6
   998                           tablat	equ	0xFF5
   999                           postinc0	equ	0xFEE
  1000                           wreg	equ	0xFE8
  1001                           postdec1	equ	0xFE5
  1002                           fsr1l	equ	0xFE1
  1003                           
  1004                           	psect	dataBANK3
  1005  00037B                     __pdataBANK3:
  1006                           	opt stack 0
  1007  00037B                     DHCP_Handler@F840:
  1008                           	opt stack 0
  1009  00037B                     	ds	48
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           postinc0	equ	0xFEE
  1015                           wreg	equ	0xFE8
  1016                           postdec1	equ	0xFE5
  1017                           fsr1l	equ	0xFE1
  1018                           
  1019                           	psect	bssBANK4
  1020  000400                     __pbssBANK4:
  1021                           	opt stack 0
  1022  000400                     _txData:
  1023                           	opt stack 0
  1024  000400                     	ds	200
  1025                           tblptru	equ	0xFF8
  1026                           tblptrh	equ	0xFF7
  1027                           tblptrl	equ	0xFF6
  1028                           tablat	equ	0xFF5
  1029                           postinc0	equ	0xFEE
  1030                           wreg	equ	0xFE8
  1031                           postdec1	equ	0xFE5
  1032                           fsr1l	equ	0xFE1
  1033                           
  1034                           	psect	bssBANK5
  1035  000500                     __pbssBANK5:
  1036                           	opt stack 0
  1037  000500                     _dnsCache:
  1038                           	opt stack 0
  1039  000500                     	ds	128
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           postinc0	equ	0xFEE
  1045                           wreg	equ	0xFE8
  1046                           postdec1	equ	0xFE5
  1047                           fsr1l	equ	0xFE1
  1048                           
  1049                           	psect	cstackBANK2
  1050  00028E                     __pcstackBANK2:
  1051                           	opt stack 0
  1052  00028E                     ??_IPV4_Packet:
  1053                           
  1054                           ; 1 bytes @ 0x0
  1055  00028E                     	ds	28
  1056  0002AA                     IPV4_Packet@hdrLen:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x1C
  1060  0002AA                     	ds	1
  1061  0002AB                     IPV4_Packet@length:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x1D
  1065  0002AB                     	ds	2
  1066  0002AD                     IPV4_Packet@cksm:
  1067                           	opt stack 0
  1068                           
  1069                           ; 2 bytes @ 0x1F
  1070  0002AD                     	ds	2
  1071  0002AF                     ??_Network_Read:
  1072                           
  1073                           ; 1 bytes @ 0x21
  1074  0002AF                     	ds	4
  1075  0002B3                     Network_Read@header:
  1076                           	opt stack 0
  1077                           
  1078                           ; 14 bytes @ 0x25
  1079  0002B3                     	ds	14
  1080  0002C1                     ??_Network_Manage:
  1081                           
  1082                           ; 1 bytes @ 0x33
  1083  0002C1                     	ds	1
  1084  0002C2                     Network_Manage@now:
  1085                           	opt stack 0
  1086                           
  1087                           ; 4 bytes @ 0x34
  1088  0002C2                     	ds	4
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           postdec1	equ	0xFE5
  1096                           fsr1l	equ	0xFE1
  1097                           
  1098                           	psect	cstackBANK1
  1099  000100                     __pcstackBANK1:
  1100                           	opt stack 0
  1101  000100                     TCP_FiniteStateMachine@ret:
  1102                           	opt stack 0
  1103  000100                     DHCP_Handler@chaddr:
  1104                           	opt stack 0
  1105  000100                     DNS_Handler@dnsR:
  1106                           	opt stack 0
  1107                           
  1108                           ; 255 bytes @ 0x0
  1109  000100                     	ds	1
  1110  000101                     TCP_FiniteStateMachine@notAckBytes:
  1111                           	opt stack 0
  1112                           
  1113                           ; 2 bytes @ 0x1
  1114  000101                     	ds	2
  1115  000103                     TCP_FiniteStateMachine@event:
  1116                           	opt stack 0
  1117                           
  1118                           ; 1 bytes @ 0x3
  1119  000103                     	ds	1
  1120  000104                     TCP_FiniteStateMachine@nextState:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0x4
  1124  000104                     	ds	1
  1125  000105                     TCP_Update@count:
  1126                           	opt stack 0
  1127  000105                     TCP_Recv@remoteAddress:
  1128                           	opt stack 0
  1129                           
  1130                           ; 4 bytes @ 0x5
  1131  000105                     	ds	2
  1132  000107                     TCP_Update@tcbPtr:
  1133                           	opt stack 0
  1134                           
  1135                           ; 2 bytes @ 0x7
  1136  000107                     	ds	2
  1137  000109                     TCP_Recv@length:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x9
  1141  000109                     	ds	2
  1142  00010B                     ??_TCP_Recv:
  1143                           
  1144                           ; 1 bytes @ 0xB
  1145  00010B                     	ds	5
  1146  000110                     DHCP_Handler@a:
  1147                           	opt stack 0
  1148                           
  1149                           ; 4 bytes @ 0x10
  1150  000110                     	ds	4
  1151  000114                     DHCP_Handler@a_3184:
  1152                           	opt stack 0
  1153                           
  1154                           ; 4 bytes @ 0x14
  1155  000114                     	ds	4
  1156  000118                     DHCP_Handler@messageType:
  1157                           	opt stack 0
  1158                           
  1159                           ; 1 bytes @ 0x18
  1160  000118                     	ds	1
  1161  000119                     DHCP_Handler@option:
  1162                           	opt stack 0
  1163                           
  1164                           ; 1 bytes @ 0x19
  1165  000119                     	ds	1
  1166  00011A                     DHCP_Handler@siaddr:
  1167                           	opt stack 0
  1168                           
  1169                           ; 4 bytes @ 0x1A
  1170  00011A                     	ds	4
  1171  00011E                     DHCP_Handler@declineOffers:
  1172                           	opt stack 0
  1173                           
  1174                           ; 1 bytes @ 0x1E
  1175  00011E                     	ds	1
  1176  00011F                     DHCP_Handler@count:
  1177                           	opt stack 0
  1178                           
  1179                           ; 1 bytes @ 0x1F
  1180  00011F                     	ds	1
  1181  000120                     DHCP_Handler@count_3183:
  1182                           	opt stack 0
  1183                           
  1184                           ; 1 bytes @ 0x20
  1185  000120                     	ds	1
  1186  000121                     DHCP_Handler@acceptOffers:
  1187                           	opt stack 0
  1188                           
  1189                           ; 1 bytes @ 0x21
  1190  000121                     	ds	1
  1191  000122                     DHCP_Handler@acceptNACK:
  1192                           	opt stack 0
  1193                           
  1194                           ; 1 bytes @ 0x22
  1195  000122                     	ds	1
  1196  000123                     DHCP_Handler@acceptACK:
  1197                           	opt stack 0
  1198                           
  1199                           ; 1 bytes @ 0x23
  1200  000123                     	ds	1
  1201  000124                     DHCP_Handler@optionLength:
  1202                           	opt stack 0
  1203                           
  1204                           ; 1 bytes @ 0x24
  1205  000124                     	ds	1
  1206  000125                     DHCP_Handler@localData:
  1207                           	opt stack 0
  1208                           
  1209                           ; 48 bytes @ 0x25
  1210  000125                     	ds	218
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec1	equ	0xFE5
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220                           	psect	cstackBANK0
  1221  000060                     __pcstackBANK0:
  1222                           	opt stack 0
  1223  000060                     ??_ARPV4_Packet:
  1224  000060                     ??_ARPV4_Request:
  1225  000060                     __doprnt@idx:
  1226                           	opt stack 0
  1227  000060                     ETH_TxComputeChecksum@rxptr:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x0
  1231  000060                     	ds	1
  1232  000061                     __doprnt@len:
  1233                           	opt stack 0
  1234                           
  1235                           ; 2 bytes @ 0x1
  1236  000061                     	ds	1
  1237  000062                     ETH_TxComputeChecksum@cksm:
  1238                           	opt stack 0
  1239                           
  1240                           ; 4 bytes @ 0x2
  1241  000062                     	ds	1
  1242  000063                     __doprnt@cp:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x3
  1246  000063                     	ds	2
  1247  000065                     __doprnt@flag:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0x5
  1251  000065                     	ds	1
  1252  000066                     ??_IPV4_Send:
  1253  000066                     __doprnt@val:
  1254                           	opt stack 0
  1255                           
  1256                           ; 4 bytes @ 0x6
  1257  000066                     	ds	4
  1258  00006A                     IPV4_Send@ret:
  1259                           	opt stack 0
  1260  00006A                     __doprnt@prec:
  1261                           	opt stack 0
  1262                           
  1263                           ; 2 bytes @ 0xA
  1264  00006A                     	ds	1
  1265  00006B                     IPV4_Send@cksm:
  1266                           	opt stack 0
  1267                           
  1268                           ; 2 bytes @ 0xB
  1269  00006B                     	ds	1
  1270  00006C                     __doprnt@c:
  1271                           	opt stack 0
  1272                           
  1273                           ; 1 bytes @ 0xC
  1274  00006C                     	ds	1
  1275  00006D                     ?_printf:
  1276                           	opt stack 0
  1277  00006D                     IPV4_Send@totalLength:
  1278                           	opt stack 0
  1279  00006D                     printf@f:
  1280                           	opt stack 0
  1281                           
  1282                           ; 2 bytes @ 0xD
  1283  00006D                     	ds	2
  1284  00006F                     ??_UDP_Send:
  1285                           
  1286                           ; 1 bytes @ 0xF
  1287  00006F                     	ds	4
  1288  000073                     UDP_Send@ret:
  1289                           	opt stack 0
  1290                           
  1291                           ; 1 bytes @ 0x13
  1292  000073                     	ds	1
  1293  000074                     UDP_Send@cksm:
  1294                           	opt stack 0
  1295                           
  1296                           ; 2 bytes @ 0x14
  1297  000074                     	ds	2
  1298  000076                     UDP_Send@udpLength:
  1299                           	opt stack 0
  1300                           
  1301                           ; 2 bytes @ 0x16
  1302  000076                     	ds	5
  1303  00007B                     ??_ETH_Init:
  1304                           
  1305                           ; 1 bytes @ 0x1B
  1306  00007B                     	ds	1
  1307  00007C                     ARPV4_Request@ret:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x1C
  1311  00007C                     	ds	1
  1312  00007D                     ARPV4_Request@header:
  1313                           	opt stack 0
  1314                           
  1315                           ; 28 bytes @ 0x1D
  1316  00007D                     	ds	3
  1317  000080                     ARPV4_Packet@length:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x20
  1321  000080                     	ds	2
  1322  000082                     ARPV4_Packet@mergeFlag:
  1323                           	opt stack 0
  1324                           
  1325                           ; 1 bytes @ 0x22
  1326  000082                     	ds	1
  1327  000083                     ARPV4_Packet@ret:
  1328                           	opt stack 0
  1329                           
  1330                           ; 1 bytes @ 0x23
  1331  000083                     	ds	1
  1332  000084                     ARPV4_Packet@arpPtr:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x24
  1336  000084                     	ds	1
  1337  000085                     ETH_Init@phycon1_value:
  1338                           	opt stack 0
  1339                           
  1340                           ; 2 bytes @ 0x25
  1341  000085                     	ds	1
  1342  000086                     ARPV4_Packet@x:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x26
  1346  000086                     	ds	1
  1347  000087                     ARPV4_Packet@x_939:
  1348                           	opt stack 0
  1349  000087                     ETH_Init@mac:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x27
  1353  000087                     	ds	1
  1354  000088                     ARPV4_Packet@entryPointer:
  1355                           	opt stack 0
  1356                           
  1357                           ; 2 bytes @ 0x28
  1358  000088                     	ds	2
  1359  00008A                     ARPV4_Packet@header:
  1360                           	opt stack 0
  1361                           
  1362                           ; 28 bytes @ 0x2A
  1363  00008A                     	ds	15
  1364  000099                     ??_IPv4_Start:
  1365                           
  1366                           ; 1 bytes @ 0x39
  1367  000099                     	ds	8
  1368  0000A1                     IPv4_Start@targetAddress:
  1369                           	opt stack 0
  1370                           
  1371                           ; 4 bytes @ 0x41
  1372  0000A1                     	ds	4
  1373  0000A5                     IPv4_Start@macAddress:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x45
  1377  0000A5                     	ds	2
  1378  0000A7                     IPv4_Start@ret:
  1379                           	opt stack 0
  1380                           
  1381                           ; 1 bytes @ 0x47
  1382  0000A7                     	ds	1
  1383  0000A8                     ICMP_EchoReply@ipv4Hdr:
  1384                           	opt stack 0
  1385  0000A8                     TCP_Snd@tcbPtr:
  1386                           	opt stack 0
  1387  0000A8                     ICMP_PortUnreachable@srcIPAddress:
  1388                           	opt stack 0
  1389  0000A8                     UDP_Start@destIP:
  1390                           	opt stack 0
  1391                           
  1392                           ; 4 bytes @ 0x48
  1393  0000A8                     	ds	2
  1394  0000AA                     ??_ICMP_EchoReply:
  1395  0000AA                     ??_TCP_Snd:
  1396                           
  1397                           ; 1 bytes @ 0x4A
  1398  0000AA                     	ds	2
  1399  0000AC                     UDP_Start@srcPort:
  1400                           	opt stack 0
  1401  0000AC                     ICMP_PortUnreachable@destIPAddress:
  1402                           	opt stack 0
  1403                           
  1404                           ; 4 bytes @ 0x4C
  1405  0000AC                     	ds	2
  1406  0000AE                     ICMP_EchoReply@identifier:
  1407                           	opt stack 0
  1408  0000AE                     UDP_Start@dstPort:
  1409                           	opt stack 0
  1410                           
  1411                           ; 2 bytes @ 0x4E
  1412  0000AE                     	ds	2
  1413  0000B0                     ??_sendDHCPDISCOVER:
  1414  0000B0                     ICMP_EchoReply@sequence:
  1415                           	opt stack 0
  1416  0000B0                     ICMP_PortUnreachable@length:
  1417                           	opt stack 0
  1418  0000B0                     DHCP_Handler@length:
  1419                           	opt stack 0
  1420  0000B0                     DNS_Handler@length:
  1421                           	opt stack 0
  1422  0000B0                     NTP_Handler@length:
  1423                           	opt stack 0
  1424                           
  1425                           ; 2 bytes @ 0x50
  1426  0000B0                     	ds	1
  1427  0000B1                     ??_DHCP_Manage:
  1428                           
  1429                           ; 1 bytes @ 0x51
  1430  0000B1                     	ds	1
  1431  0000B2                     ??_DNS_Handler:
  1432  0000B2                     ??_DHCP_Handler:
  1433  0000B2                     ICMP_EchoReply@icmp_cksm_start:
  1434                           	opt stack 0
  1435  0000B2                     ICMP_PortUnreachable@cksm:
  1436                           	opt stack 0
  1437  0000B2                     DHCP_Manage@now:
  1438                           	opt stack 0
  1439  0000B2                     NTP_Handler@timeFractionalPart:
  1440                           	opt stack 0
  1441                           
  1442                           ; 4 bytes @ 0x52
  1443  0000B2                     	ds	2
  1444  0000B4                     ICMP_PortUnreachable@ret:
  1445                           	opt stack 0
  1446  0000B4                     ICMP_EchoReply@cksm:
  1447                           	opt stack 0
  1448                           
  1449                           ; 2 bytes @ 0x54
  1450  0000B4                     	ds	2
  1451  0000B6                     ICMP_EchoReply@ipv4PayloadLength:
  1452                           	opt stack 0
  1453  0000B6                     NTP_Handler@timeIntegralPart:
  1454                           	opt stack 0
  1455                           
  1456                           ; 4 bytes @ 0x56
  1457  0000B6                     	ds	2
  1458  0000B8                     ICMP_EchoReply@ret:
  1459                           	opt stack 0
  1460                           
  1461                           ; 1 bytes @ 0x58
  1462  0000B8                     	ds	1
  1463  0000B9                     ICMP_Receive@ipv4Hdr:
  1464                           	opt stack 0
  1465                           
  1466                           ; 2 bytes @ 0x59
  1467  0000B9                     	ds	2
  1468  0000BB                     ??_ICMP_Receive:
  1469  0000BB                     DNS_Handler@authorityRR:
  1470                           	opt stack 0
  1471                           
  1472                           ; 2 bytes @ 0x5B
  1473  0000BB                     	ds	2
  1474  0000BD                     DNS_Handler@ipAddress:
  1475                           	opt stack 0
  1476                           
  1477                           ; 4 bytes @ 0x5D
  1478  0000BD                     	ds	2
  1479  0000BF                     ICMP_Receive@ret:
  1480                           	opt stack 0
  1481                           
  1482                           ; 1 bytes @ 0x5F
  1483  0000BF                     	ds	1
  1484  0000C0                     ICMP_Receive@icmpHdr:
  1485                           	opt stack 0
  1486                           
  1487                           ; 4 bytes @ 0x60
  1488  0000C0                     	ds	1
  1489  0000C1                     DNS_Handler@ttl:
  1490                           	opt stack 0
  1491                           
  1492                           ; 4 bytes @ 0x61
  1493  0000C1                     	ds	4
  1494  0000C5                     DNS_Handler@v:
  1495                           	opt stack 0
  1496                           
  1497                           ; 2 bytes @ 0x65
  1498  0000C5                     	ds	2
  1499  0000C7                     DNS_Handler@type:
  1500                           	opt stack 0
  1501                           
  1502                           ; 2 bytes @ 0x67
  1503  0000C7                     	ds	2
  1504  0000C9                     DNS_Handler@nameLen:
  1505                           	opt stack 0
  1506                           
  1507                           ; 1 bytes @ 0x69
  1508  0000C9                     	ds	1
  1509  0000CA                     DNS_Handler@answer:
  1510                           	opt stack 0
  1511  0000CA                     TCP_Snd@data:
  1512                           	opt stack 0
  1513                           
  1514                           ; 2 bytes @ 0x6A
  1515  0000CA                     	ds	2
  1516  0000CC                     DNS_Handler@dataLength:
  1517                           	opt stack 0
  1518  0000CC                     TCP_Snd@cksm:
  1519                           	opt stack 0
  1520                           
  1521                           ; 2 bytes @ 0x6C
  1522  0000CC                     	ds	2
  1523  0000CE                     DNS_Handler@dnsPtr:
  1524                           	opt stack 0
  1525  0000CE                     TCP_Snd@payloadLength:
  1526                           	opt stack 0
  1527                           
  1528                           ; 2 bytes @ 0x6E
  1529  0000CE                     	ds	2
  1530  0000D0                     DNS_Handler@i:
  1531                           	opt stack 0
  1532  0000D0                     TCP_Snd@ret:
  1533                           	opt stack 0
  1534                           
  1535                           ; 1 bytes @ 0x70
  1536  0000D0                     	ds	1
  1537  0000D1                     DNS_Handler@x:
  1538                           	opt stack 0
  1539  0000D1                     TCP_Snd@tcpDataLength:
  1540                           	opt stack 0
  1541                           
  1542                           ; 2 bytes @ 0x71
  1543  0000D1                     	ds	1
  1544  0000D2                     DNS_Handler@lock:
  1545                           	opt stack 0
  1546                           
  1547                           ; 1 bytes @ 0x72
  1548  0000D2                     	ds	1
  1549  0000D3                     DNS_Handler@entryPointer:
  1550                           	opt stack 0
  1551  0000D3                     TCP_Snd@txHeader:
  1552                           	opt stack 0
  1553                           
  1554                           ; 20 bytes @ 0x73
  1555  0000D3                     	ds	2
  1556  0000D5                     UDP_Receive@udpcksm:
  1557                           	opt stack 0
  1558                           
  1559                           ; 2 bytes @ 0x75
  1560  0000D5                     	ds	2
  1561  0000D7                     ??_UDP_Receive:
  1562                           
  1563                           ; 1 bytes @ 0x77
  1564  0000D7                     	ds	4
  1565  0000DB                     UDP_Receive@ret:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0x7B
  1569  0000DB                     	ds	1
  1570  0000DC                     UDP_Receive@hptr:
  1571                           	opt stack 0
  1572                           
  1573                           ; 2 bytes @ 0x7C
  1574  0000DC                     	ds	11
  1575  0000E7                     TCP_PayloadSave@len:
  1576                           	opt stack 0
  1577                           
  1578                           ; 2 bytes @ 0x87
  1579  0000E7                     	ds	2
  1580  0000E9                     ??_TCP_PayloadSave:
  1581                           
  1582                           ; 1 bytes @ 0x89
  1583  0000E9                     	ds	8
  1584  0000F1                     TCP_PayloadSave@ret:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x91
  1588  0000F1                     	ds	1
  1589  0000F2                     TCP_PayloadSave@buffer_size:
  1590                           	opt stack 0
  1591                           
  1592                           ; 2 bytes @ 0x92
  1593  0000F2                     	ds	2
  1594  0000F4                     ??_TCP_FiniteStateMachine:
  1595                           
  1596                           ; 1 bytes @ 0x94
  1597  0000F4                     	ds	8
  1598  0000FC                     ??_TCP_Update:
  1599  0000FC                     TCP_Recv@count:
  1600                           	opt stack 0
  1601                           
  1602                           ; 1 bytes @ 0x9C
  1603  0000FC                     	ds	1
  1604  0000FD                     TCP_Recv@tcbPtr:
  1605                           	opt stack 0
  1606                           
  1607                           ; 2 bytes @ 0x9D
  1608  0000FD                     	ds	3
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           postinc0	equ	0xFEE
  1614                           wreg	equ	0xFE8
  1615                           postdec1	equ	0xFE5
  1616                           fsr1l	equ	0xFE1
  1617                           
  1618                           	psect	cstackCOMRAM
  1619  000001                     __pcstackCOMRAM:
  1620                           	opt stack 0
  1621  000001                     ??_INTERRUPT_InterruptManager:
  1622  000001                     
  1623                           ; 1 bytes @ 0x0
  1624  000001                     	ds	18
  1625  000013                     ??_ETH_Flush:
  1626  000013                     ??_ETH_SendQueued:
  1627  000013                     ??_isdigit:
  1628  000013                     ?_ETH_ReadBlock:
  1629                           	opt stack 0
  1630  000013                     ?_ARPV4_Lookup:
  1631                           	opt stack 0
  1632  000013                     ?_MAC_getAddress:
  1633                           	opt stack 0
  1634  000013                     ?_ETH_NewPacket:
  1635                           	opt stack 0
  1636  000013                     ?_udp_table_getIterator:
  1637                           	opt stack 0
  1638  000013                     ?_strlen:
  1639                           	opt stack 0
  1640  000013                     ?_memcmp:
  1641                           	opt stack 0
  1642  000013                     ?_strcmp:
  1643                           	opt stack 0
  1644  000013                     ?_ETH_Read16:
  1645                           	opt stack 0
  1646  000013                     ?_ETH_ComputeChecksum:
  1647                           	opt stack 0
  1648  000013                     ?_ETH_GetReadPtr:
  1649                           	opt stack 0
  1650  000013                     ?_ETH_GetByteCount:
  1651                           	opt stack 0
  1652  000013                     ?_IPV4_PseudoHeaderChecksum:
  1653                           	opt stack 0
  1654  000013                     ?_IPV4_GetStartPosition:
  1655                           	opt stack 0
  1656  000013                     ?_IPV4_GetDatagramLength:
  1657                           	opt stack 0
  1658  000013                     ?___wmul:
  1659                           	opt stack 0
  1660  000013                     ?_time:
  1661                           	opt stack 0
  1662  000013                     ?_ETH_Read32:
  1663                           	opt stack 0
  1664  000013                     ?___lldiv:
  1665                           	opt stack 0
  1666  000013                     PHY_WaitForBusy@ret:
  1667                           	opt stack 0
  1668  000013                     ETH_Read8@ret:
  1669                           	opt stack 0
  1670  000013                     ETH_Write8@data:
  1671                           	opt stack 0
  1672  000013                     ipdb_init@x:
  1673                           	opt stack 0
  1674  000013                     lfsr@lsb:
  1675                           	opt stack 0
  1676  000013                     ARPV4_Update@entryPointer:
  1677                           	opt stack 0
  1678  000013                     ETH_ReadBlock@buffer:
  1679                           	opt stack 0
  1680  000013                     ETH_Write16@data:
  1681                           	opt stack 0
  1682  000013                     ETH_WriteString@string:
  1683                           	opt stack 0
  1684  000013                     ETH_WriteBlock@buffer:
  1685                           	opt stack 0
  1686  000013                     ETH_Insert@data:
  1687                           	opt stack 0
  1688  000013                     ETH_Dump@length:
  1689                           	opt stack 0
  1690  000013                     ETH_ComputeChecksum@len:
  1691                           	opt stack 0
  1692  000013                     ETH_GetMAC@mac:
  1693                           	opt stack 0
  1694  000013                     ETH_PacketListReset@ptr:
  1695                           	opt stack 0
  1696  000013                     ETH_RemovePacket@packetHandle:
  1697                           	opt stack 0
  1698  000013                     IPV4_PseudoHeaderChecksum@payloadLen:
  1699                           	opt stack 0
  1700  000013                     rtcc_set@t:
  1701                           	opt stack 0
  1702  000013                     time@t:
  1703                           	opt stack 0
  1704  000013                     isPortUnreachable@port:
  1705                           	opt stack 0
  1706  000013                     TCB_Reset@tcbPtr:
  1707                           	opt stack 0
  1708  000013                     ___wmul@multiplier:
  1709                           	opt stack 0
  1710  000013                     memcmp@s1:
  1711                           	opt stack 0
  1712  000013                     memcpy@d1:
  1713                           	opt stack 0
  1714  000013                     strcmp@s1:
  1715                           	opt stack 0
  1716  000013                     strlen@s:
  1717                           	opt stack 0
  1718  000013                     TMR1_SetInterruptHandler@InterruptHandler:
  1719                           	opt stack 0
  1720  000013                     TMR0_SetInterruptHandler@InterruptHandler:
  1721                           	opt stack 0
  1722  000013                     ARPV4_Lookup@ip_address:
  1723                           	opt stack 0
  1724  000013                     ETH_Write32@data:
  1725                           	opt stack 0
  1726  000013                     ___lldiv@dividend:
  1727                           	opt stack 0
  1728                           
  1729                           ; 4 bytes @ 0x12
  1730  000013                     	ds	1
  1731  000014                     PHY_WaitForBusy@timeout:
  1732                           	opt stack 0
  1733  000014                     ipdb_init@x_2014:
  1734                           	opt stack 0
  1735  000014                     _isdigit$4802:
  1736                           	opt stack 0
  1737  000014                     DHCP_WriteZeros@length:
  1738                           	opt stack 0
  1739                           
  1740                           ; 2 bytes @ 0x13
  1741  000014                     	ds	1
  1742  000015                     ??_ETH_NewPacket:
  1743  000015                     ??_strlen:
  1744  000015                     ??_ETH_GetByteCount:
  1745  000015                     ??_IPV4_PseudoHeaderChecksum:
  1746  000015                     ?_udp_table_nextEntry:
  1747                           	opt stack 0
  1748  000015                     ?_PHY_Read:
  1749                           	opt stack 0
  1750  000015                     ARPV4_Init@x:
  1751                           	opt stack 0
  1752  000015                     ARPV4_Update@x:
  1753                           	opt stack 0
  1754  000015                     rtcc_set@gie_val:
  1755                           	opt stack 0
  1756  000015                     isdigit@c:
  1757                           	opt stack 0
  1758  000015                     PHY_Write@data:
  1759                           	opt stack 0
  1760  000015                     ETH_Read16@ret:
  1761                           	opt stack 0
  1762  000015                     ETH_ReadBlock@length:
  1763                           	opt stack 0
  1764  000015                     ETH_WriteString@length:
  1765                           	opt stack 0
  1766  000015                     ETH_WriteBlock@length:
  1767                           	opt stack 0
  1768  000015                     ETH_Insert@len:
  1769                           	opt stack 0
  1770  000015                     ETH_ComputeChecksum@seed:
  1771                           	opt stack 0
  1772  000015                     ETH_SetReadPtr@rdptr:
  1773                           	opt stack 0
  1774  000015                     ETH_PacketListReset@index:
  1775                           	opt stack 0
  1776  000015                     udp_table_nextEntry@i:
  1777                           	opt stack 0
  1778  000015                     ___wmul@multiplicand:
  1779                           	opt stack 0
  1780  000015                     memcmp@s2:
  1781                           	opt stack 0
  1782  000015                     memcpy@s1:
  1783                           	opt stack 0
  1784  000015                     strcmp@s2:
  1785                           	opt stack 0
  1786                           
  1787                           ; 2 bytes @ 0x14
  1788  000015                     	ds	1
  1789  000016                     ??_TMR0_Initialize:
  1790  000016                     
  1791                           ; 1 bytes @ 0x15
  1792  000016                     	ds	1
  1793  000017                     ??_ETH_Send:
  1794  000017                     ??_strcmp:
  1795  000017                     ??_ETH_ComputeChecksum:
  1796  000017                     ??_TCP_ParseTCPOptions:
  1797  000017                     PHY_Write@reg:
  1798                           	opt stack 0
  1799  000017                     ETH_NewPacket@index:
  1800                           	opt stack 0
  1801  000017                     time@gie_val:
  1802                           	opt stack 0
  1803  000017                     ETH_ReadBlock@len:
  1804                           	opt stack 0
  1805  000017                     ETH_WriteBlock@p:
  1806                           	opt stack 0
  1807  000017                     ETH_Insert@offset:
  1808                           	opt stack 0
  1809  000017                     ETH_RemovePacket@pPacket:
  1810                           	opt stack 0
  1811  000017                     udp_table_nextEntry@j:
  1812                           	opt stack 0
  1813  000017                     ___wmul@product:
  1814                           	opt stack 0
  1815  000017                     memcmp@n:
  1816                           	opt stack 0
  1817  000017                     memcpy@n:
  1818                           	opt stack 0
  1819  000017                     strlen@cp:
  1820                           	opt stack 0
  1821  000017                     ETH_Read32@ret:
  1822                           	opt stack 0
  1823  000017                     ___lldiv@divisor:
  1824                           	opt stack 0
  1825                           
  1826                           ; 4 bytes @ 0x16
  1827  000017                     	ds	1
  1828  000018                     PHY_Write@GIESave:
  1829                           	opt stack 0
  1830  000018                     strcmp@r:
  1831                           	opt stack 0
  1832  000018                     time@the_time:
  1833                           	opt stack 0
  1834                           
  1835                           ; 4 bytes @ 0x17
  1836  000018                     	ds	1
  1837  000019                     ??_ETH_Shift_Tx_Packets:
  1838  000019                     ??_memcmp:
  1839  000019                     ??_ETH_Insert:
  1840  000019                     PHY_Read@reg:
  1841                           	opt stack 0
  1842  000019                     TCP_ParseTCPOptions@ret:
  1843                           	opt stack 0
  1844  000019                     memcpy@tmp:
  1845                           	opt stack 0
  1846  000019                     ETH_ReadBlock@p:
  1847                           	opt stack 0
  1848  000019                     ETH_Copy@len:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0x18
  1852  000019                     	ds	1
  1853  00001A                     TCP_ParseTCPOptions@opt:
  1854                           	opt stack 0
  1855  00001A                     memcpy@d:
  1856                           	opt stack 0
  1857  00001A                     PHY_Read@ret:
  1858                           	opt stack 0
  1859                           
  1860                           ; 4 bytes @ 0x19
  1861  00001A                     	ds	1
  1862  00001B                     ARPV4_Lookup@entry_pointer:
  1863                           	opt stack 0
  1864  00001B                     ETH_Send@packetEnd:
  1865                           	opt stack 0
  1866  00001B                     ETH_Insert@current_tx_ptr:
  1867                           	opt stack 0
  1868  00001B                     ETH_Copy@timer:
  1869                           	opt stack 0
  1870  00001B                     TCP_ParseTCPOptions@tcpOptionsSize:
  1871                           	opt stack 0
  1872  00001B                     ___lldiv@quotient:
  1873                           	opt stack 0
  1874                           
  1875                           ; 4 bytes @ 0x1A
  1876  00001B                     	ds	1
  1877  00001C                     memcpy@s:
  1878                           	opt stack 0
  1879                           
  1880                           ; 2 bytes @ 0x1B
  1881  00001C                     	ds	1
  1882  00001D                     ARPV4_Lookup@x:
  1883                           	opt stack 0
  1884  00001D                     ETH_Copy@tmp_len:
  1885                           	opt stack 0
  1886  00001D                     ETH_Shift_Tx_Packets@shiftOffset:
  1887                           	opt stack 0
  1888  00001D                     IPV4_PseudoHeaderChecksum@v:
  1889                           	opt stack 0
  1890                           
  1891                           ; 2 bytes @ 0x1C
  1892  00001D                     	ds	1
  1893  00001E                     ETH_CheckLinkUp@value:
  1894                           	opt stack 0
  1895                           
  1896                           ; 4 bytes @ 0x1D
  1897  00001E                     	ds	1
  1898  00001F                     IPV4_PseudoHeaderChecksum@len:
  1899                           	opt stack 0
  1900  00001F                     ___lldiv@counter:
  1901                           	opt stack 0
  1902  00001F                     ETH_Shift_Tx_Packets@timer:
  1903                           	opt stack 0
  1904  00001F                     ETH_ComputeChecksum@cksm:
  1905                           	opt stack 0
  1906                           
  1907                           ; 4 bytes @ 0x1E
  1908  00001F                     	ds	1
  1909  000020                     ?___llmod:
  1910                           	opt stack 0
  1911  000020                     IPV4_PseudoHeaderChecksum@cksm:
  1912                           	opt stack 0
  1913  000020                     ___llmod@dividend:
  1914                           	opt stack 0
  1915                           
  1916                           ; 4 bytes @ 0x1F
  1917  000020                     	ds	1
  1918  000021                     ETH_Shift_Tx_Packets@len:
  1919                           	opt stack 0
  1920                           
  1921                           ; 2 bytes @ 0x20
  1922  000021                     	ds	1
  1923  000022                     
  1924                           ; 1 bytes @ 0x21
  1925  000022                     	ds	1
  1926  000023                     ETH_Shift_Tx_Packets@pElem:
  1927                           	opt stack 0
  1928  000023                     ETH_ComputeChecksum@v:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x22
  1932  000023                     	ds	1
  1933  000024                     ___llmod@divisor:
  1934                           	opt stack 0
  1935  000024                     IPV4_PseudoHeaderChecksum@tmp:
  1936                           	opt stack 0
  1937                           
  1938                           ; 12 bytes @ 0x23
  1939  000024                     	ds	1
  1940  000025                     ?_ETH_TxComputeChecksum:
  1941                           	opt stack 0
  1942  000025                     ?_ETH_RxComputeChecksum:
  1943                           	opt stack 0
  1944  000025                     ETH_WriteStart@dest_mac:
  1945                           	opt stack 0
  1946  000025                     ETH_TxComputeChecksum@position:
  1947                           	opt stack 0
  1948  000025                     ETH_RxComputeChecksum@len:
  1949                           	opt stack 0
  1950                           
  1951                           ; 2 bytes @ 0x24
  1952  000025                     	ds	2
  1953  000027                     ETH_WriteStart@type:
  1954                           	opt stack 0
  1955  000027                     ETH_TxComputeChecksum@len:
  1956                           	opt stack 0
  1957  000027                     ETH_RxComputeChecksum@seed:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x26
  1961  000027                     	ds	1
  1962  000028                     ___llmod@counter:
  1963                           	opt stack 0
  1964                           
  1965                           ; 1 bytes @ 0x27
  1966  000028                     	ds	1
  1967  000029                     ??_ETH_WriteStart:
  1968  000029                     ??_ETH_RxComputeChecksum:
  1969  000029                     ?__doprnt:
  1970                           	opt stack 0
  1971  000029                     ETH_TxComputeChecksum@seed:
  1972                           	opt stack 0
  1973  000029                     __doprnt@pb:
  1974                           	opt stack 0
  1975                           
  1976                           ; 2 bytes @ 0x28
  1977  000029                     	ds	2
  1978  00002B                     ??_ETH_TxComputeChecksum:
  1979  00002B                     ETH_WriteStart@ethPacket:
  1980                           	opt stack 0
  1981  00002B                     __doprnt@f:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x2A
  1985  00002B                     	ds	2
  1986  00002D                     ETH_RxComputeChecksum@rxptr:
  1987                           	opt stack 0
  1988  00002D                     __doprnt@ap:
  1989                           	opt stack 0
  1990  00002D                     ARPV4_Request@destAddress:
  1991                           	opt stack 0
  1992                           
  1993                           ; 4 bytes @ 0x2C
  1994  00002D                     	ds	2
  1995  00002F                     ??__doprnt:
  1996  00002F                     ETH_RxComputeChecksum@cksm:
  1997                           	opt stack 0
  1998                           
  1999                           ; 4 bytes @ 0x2E
  2000  00002F                     	ds	2
  2001  000031                     IPv4_Start@destAddress:
  2002                           	opt stack 0
  2003                           
  2004                           ; 4 bytes @ 0x30
  2005  000031                     	ds	2
  2006  000033                     printf@ap:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x32
  2010  000033                     	ds	2
  2011  000035                     IPv4_Start@protocol:
  2012                           	opt stack 0
  2013  000035                     printf@pb:
  2014                           	opt stack 0
  2015                           
  2016                           ; 5 bytes @ 0x34
  2017  000035                     	ds	1
  2018  000036                     UDP_Start@ret:
  2019                           	opt stack 0
  2020                           
  2021                           ; 1 bytes @ 0x35
  2022  000036                     	ds	1
  2023  000037                     IPV4_Send@payloadLength:
  2024                           	opt stack 0
  2025                           
  2026                           ; 2 bytes @ 0x36
  2027  000037                     	ds	2
  2028  000039                     sendRequest@started:
  2029                           	opt stack 0
  2030                           
  2031                           ; 1 bytes @ 0x38
  2032  000039                     	ds	1
  2033  00003A                     sendRequest@type:
  2034                           	opt stack 0
  2035                           
  2036                           ; 1 bytes @ 0x39
  2037  00003A                     	ds	1
  2038  00003B                     tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           postdec1	equ	0xFE5
  2045                           fsr1l	equ	0xFE1
  2046                           
  2047                           ; 1 bytes @ 0x3A
  2048 ;;
  2049 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2050 ;;
  2051 ;; *************** function _main *****************
  2052 ;; Defined at:
  2053 ;;		line 51 in file "main.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels required when called:   17
  2073 ;; This function calls:
  2074 ;;		_Network_Manage
  2075 ;;		_SYSTEM_Initialize
  2076 ;; This function is called by:
  2077 ;;		Startup code after reset
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text0
  2082  016A74                     __ptext0:
  2083                           	opt stack 0
  2084  016A74                     _main:
  2085                           	opt stack 14
  2086                           
  2087                           ;main.c: 54: SYSTEM_Initialize();
  2088                           
  2089                           ;incstack = 0
  2090  016A74  ECE4  F0B3         	call	_SYSTEM_Initialize	;wreg free
  2091                           
  2092                           ;main.c: 73: (INTCONbits.GIE = 1);
  2093  016A78  8EF2               	bsf	intcon,7,c	;volatile
  2094                           
  2095                           ;main.c: 79: (INTCONbits.PEIE = 1);
  2096  016A7A  8CF2               	bsf	intcon,6,c	;volatile
  2097  016A7C                     
  2098                           ;main.c: 85: {
  2099                           ;main.c: 86: Network_Manage();
  2100  016A7C  EC14  F0AF         	call	_Network_Manage	;wreg free
  2101  016A80  D7FD               	goto	l1923
  2102  016A82                     __end_of_main:
  2103                           	opt stack 0
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           intcon	equ	0xFF2
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1l	equ	0xFE1
  2113                           
  2114 ;; *************** function _SYSTEM_Initialize *****************
  2115 ;; Defined at:
  2116 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    9
  2137 ;; This function calls:
  2138 ;;		_ADC_Initialize
  2139 ;;		_ECCP1_Initialize
  2140 ;;		_INTERRUPT_Initialize
  2141 ;;		_Network_Init
  2142 ;;		_OSCILLATOR_Initialize
  2143 ;;		_PIN_MANAGER_Initialize
  2144 ;;		_SPI1_Initialize
  2145 ;;		_TMR0_Initialize
  2146 ;;		_TMR1_Initialize
  2147 ;;		_TMR2_Initialize
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text1
  2154  0167C8                     __ptext1:
  2155                           	opt stack 0
  2156  0167C8                     _SYSTEM_Initialize:
  2157                           	opt stack 21
  2158                           
  2159                           ;mcc.c: 74: INTERRUPT_Initialize();
  2160                           
  2161                           ;incstack = 0
  2162  0167C8  ECAB  F0B5         	call	_INTERRUPT_Initialize	;wreg free
  2163                           
  2164                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  2165  0167CC  EC3D  F0B2         	call	_PIN_MANAGER_Initialize	;wreg free
  2166                           
  2167                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2168  0167D0  EC70  F0B5         	call	_OSCILLATOR_Initialize	;wreg free
  2169                           
  2170                           ;mcc.c: 77: SPI1_Initialize();
  2171  0167D4  EC48  F0B5         	call	_SPI1_Initialize	;wreg free
  2172                           
  2173                           ;mcc.c: 78: ECCP1_Initialize();
  2174  0167D8  EC0C  F0B5         	call	_ECCP1_Initialize	;wreg free
  2175                           
  2176                           ;mcc.c: 79: ADC_Initialize();
  2177  0167DC  EC17  F0B5         	call	_ADC_Initialize	;wreg free
  2178                           
  2179                           ;mcc.c: 80: TMR2_Initialize();
  2180  0167E0  EC22  F0B5         	call	_TMR2_Initialize	;wreg free
  2181                           
  2182                           ;mcc.c: 81: TMR1_Initialize();
  2183  0167E4  ECF9  F0B3         	call	_TMR1_Initialize	;wreg free
  2184                           
  2185                           ;mcc.c: 82: TMR0_Initialize();
  2186  0167E8  ECD5  F0B2         	call	_TMR0_Initialize	;wreg free
  2187                           
  2188                           ;mcc.c: 83: Network_Init();
  2189  0167EC  ECA8  F0B4         	call	_Network_Init	;wreg free
  2190  0167F0  0012               	return		;funcret
  2191  0167F2                     __end_of_SYSTEM_Initialize:
  2192                           	opt stack 0
  2193                           tblptru	equ	0xFF8
  2194                           tblptrh	equ	0xFF7
  2195                           tblptrl	equ	0xFF6
  2196                           tablat	equ	0xFF5
  2197                           intcon	equ	0xFF2
  2198                           postinc0	equ	0xFEE
  2199                           wreg	equ	0xFE8
  2200                           postdec1	equ	0xFE5
  2201                           fsr1l	equ	0xFE1
  2202                           
  2203 ;; *************** function _TMR2_Initialize *****************
  2204 ;; Defined at:
  2205 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;Total ram usage:        0 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    4
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_SYSTEM_Initialize
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text2
  2234  016A44                     __ptext2:
  2235                           	opt stack 0
  2236  016A44                     _TMR2_Initialize:
  2237                           	opt stack 25
  2238                           
  2239                           ;tmr2.c: 66: PR2 = 0x67;
  2240                           
  2241                           ;incstack = 0
  2242  016A44  0E67               	movlw	103
  2243  016A46  6ECB               	movwf	4043,c	;volatile
  2244                           
  2245                           ;tmr2.c: 69: TMR2 = 0x00;
  2246  016A48  0E00               	movlw	0
  2247  016A4A  6ECC               	movwf	4044,c	;volatile
  2248                           
  2249                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  2250  016A4C  929E               	bcf	3998,1,c	;volatile
  2251                           
  2252                           ;tmr2.c: 75: T2CON = 0x05;
  2253  016A4E  0E05               	movlw	5
  2254  016A50  6ECA               	movwf	4042,c	;volatile
  2255  016A52  0012               	return		;funcret
  2256  016A54                     __end_of_TMR2_Initialize:
  2257                           	opt stack 0
  2258                           tblptru	equ	0xFF8
  2259                           tblptrh	equ	0xFF7
  2260                           tblptrl	equ	0xFF6
  2261                           tablat	equ	0xFF5
  2262                           intcon	equ	0xFF2
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1l	equ	0xFE1
  2267                           
  2268 ;; *************** function _TMR1_Initialize *****************
  2269 ;; Defined at:
  2270 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;Total ram usage:        0 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    5
  2291 ;; This function calls:
  2292 ;;		_TMR1_SetInterruptHandler
  2293 ;; This function is called by:
  2294 ;;		_SYSTEM_Initialize
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text3
  2299  0167F2                     __ptext3:
  2300                           	opt stack 0
  2301  0167F2                     _TMR1_Initialize:
  2302                           	opt stack 24
  2303                           
  2304                           ;tmr1.c: 68: TMR1H = 0x01;
  2305                           
  2306                           ;incstack = 0
  2307  0167F2  0E01               	movlw	1
  2308  0167F4  6ECF               	movwf	4047,c	;volatile
  2309                           
  2310                           ;tmr1.c: 71: TMR1L = 0xB0;
  2311  0167F6  0EB0               	movlw	176
  2312  0167F8  6ECE               	movwf	4046,c	;volatile
  2313                           
  2314                           ;tmr1.c: 74: timer1ReloadVal=TMR1;
  2315  0167FA  CFCE F049          	movff	4046,_timer1ReloadVal	;volatile
  2316  0167FE  CFCF F04A          	movff	4047,_timer1ReloadVal+1	;volatile
  2317                           
  2318                           ;tmr1.c: 77: PIR1bits.TMR1IF = 0;
  2319  016802  909E               	bcf	3998,0,c	;volatile
  2320                           
  2321                           ;tmr1.c: 80: PIE1bits.TMR1IE = 1;
  2322  016804  809D               	bsf	3997,0,c	;volatile
  2323                           
  2324                           ;tmr1.c: 83: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2325  016806  0E60               	movlw	low _TMR1_DefaultInterruptHandler
  2326  016808  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2327  01680A  0E6B               	movlw	high _TMR1_DefaultInterruptHandler
  2328  01680C  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2329  01680E  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
  2330  016810  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler+2,c
  2331  016812  EC4F  F0B5         	call	_TMR1_SetInterruptHandler	;wreg free
  2332                           
  2333                           ;tmr1.c: 86: T1CON = 0x31;
  2334  016816  0E31               	movlw	49
  2335  016818  6ECD               	movwf	4045,c	;volatile
  2336  01681A  0012               	return		;funcret
  2337  01681C                     __end_of_TMR1_Initialize:
  2338                           	opt stack 0
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           intcon	equ	0xFF2
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1l	equ	0xFE1
  2348                           
  2349 ;; *************** function _TMR0_Initialize *****************
  2350 ;; Defined at:
  2351 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;Total ram usage:        2 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    5
  2372 ;; This function calls:
  2373 ;;		_TMR0_SetInterruptHandler
  2374 ;; This function is called by:
  2375 ;;		_SYSTEM_Initialize
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text4
  2380  0165AA                     __ptext4:
  2381                           	opt stack 0
  2382  0165AA                     _TMR0_Initialize:
  2383                           	opt stack 24
  2384                           
  2385                           ;tmr0.c: 71: TMR0H = 0xD7;
  2386                           
  2387                           ;incstack = 0
  2388  0165AA  0ED7               	movlw	215
  2389  0165AC  6ED7               	movwf	4055,c	;volatile
  2390                           
  2391                           ;tmr0.c: 74: TMR0L = 0x4E;
  2392  0165AE  0E4E               	movlw	78
  2393  0165B0  6ED6               	movwf	4054,c	;volatile
  2394                           
  2395                           ;tmr0.c: 78: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  2396  0165B2  50D6               	movf	4054,w,c	;volatile
  2397  0165B4  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  2398  0165B8  6A17               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2399  0165BA  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2400  0165BE  6A16               	clrf	??_TMR0_Initialize,c
  2401  0165C0  1016               	iorwf	??_TMR0_Initialize,w,c
  2402  0165C2  6E47               	movwf	_timer0ReloadVal,c	;volatile
  2403  0165C4  5017               	movf	??_TMR0_Initialize+1,w,c
  2404  0165C6  6E48               	movwf	_timer0ReloadVal+1,c	;volatile
  2405                           
  2406                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  2407  0165C8  94F2               	bcf	intcon,2,c	;volatile
  2408                           
  2409                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  2410  0165CA  8AF2               	bsf	intcon,5,c	;volatile
  2411                           
  2412                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2413  0165CC  0E62               	movlw	low _TMR0_DefaultInterruptHandler
  2414  0165CE  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  2415  0165D0  0E6B               	movlw	high _TMR0_DefaultInterruptHandler
  2416  0165D2  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  2417  0165D4  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  2418  0165D6  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler+2,c
  2419  0165D8  EC41  F0B5         	call	_TMR0_SetInterruptHandler	;wreg free
  2420                           
  2421                           ;tmr0.c: 90: T0CON = 0x9F;
  2422  0165DC  0E9F               	movlw	159
  2423  0165DE  6ED5               	movwf	4053,c	;volatile
  2424  0165E0  0012               	return		;funcret
  2425  0165E2                     __end_of_TMR0_Initialize:
  2426                           	opt stack 0
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           intcon	equ	0xFF2
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           postdec1	equ	0xFE5
  2435                           fsr1l	equ	0xFE1
  2436                           
  2437 ;; *************** function _TMR0_SetInterruptHandler *****************
  2438 ;; Defined at:
  2439 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  InterruptHan    3   18[COMRAM] PTR FTN()void 
  2442 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2454 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;Total ram usage:        3 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    4
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_TMR0_Initialize
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text5
  2469  016A82                     __ptext5:
  2470                           	opt stack 0
  2471  016A82                     _TMR0_SetInterruptHandler:
  2472                           	opt stack 24
  2473                           
  2474                           ;tmr0.c: 153: TMR0_InterruptHandler = InterruptHandler;
  2475                           
  2476                           ;incstack = 0
  2477  016A82  C013  F2F9         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2478  016A86  C014  F2FA         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2479  016A8A  C015  F2FB         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  2480  016A8E  0012               	return		;funcret
  2481  016A90                     __end_of_TMR0_SetInterruptHandler:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           intcon	equ	0xFF2
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1l	equ	0xFE1
  2492                           
  2493 ;; *************** function _SPI1_Initialize *****************
  2494 ;; Defined at:
  2495 ;;		line 63 in file "mcc_generated_files/spi1.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    4
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_SYSTEM_Initialize
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text6
  2524  016A90                     __ptext6:
  2525                           	opt stack 0
  2526  016A90                     _SPI1_Initialize:
  2527                           	opt stack 25
  2528                           
  2529                           ;spi1.c: 68: SSP1STAT = 0x80;
  2530                           
  2531                           ;incstack = 0
  2532  016A90  0E80               	movlw	128
  2533  016A92  6EC7               	movwf	4039,c	;volatile
  2534                           
  2535                           ;spi1.c: 71: SSP1CON1 = 0x21;
  2536  016A94  0E21               	movlw	33
  2537  016A96  6EC6               	movwf	4038,c	;volatile
  2538                           
  2539                           ;spi1.c: 74: SSP1ADD = 0x00;
  2540  016A98  0E00               	movlw	0
  2541  016A9A  6EC8               	movwf	4040,c	;volatile
  2542  016A9C  0012               	return		;funcret
  2543  016A9E                     __end_of_SPI1_Initialize:
  2544                           	opt stack 0
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           intcon	equ	0xFF2
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec1	equ	0xFE5
  2553                           fsr1l	equ	0xFE1
  2554                           
  2555 ;; *************** function _PIN_MANAGER_Initialize *****************
  2556 ;; Defined at:
  2557 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    4
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_SYSTEM_Initialize
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text7
  2586  01647A                     __ptext7:
  2587                           	opt stack 0
  2588  01647A                     _PIN_MANAGER_Initialize:
  2589                           	opt stack 25
  2590                           
  2591                           ;pin_manager.c: 56: LATE = 0x18;
  2592                           
  2593                           ;incstack = 0
  2594  01647A  0E18               	movlw	24
  2595  01647C  6E8D               	movwf	3981,c	;volatile
  2596                           
  2597                           ;pin_manager.c: 57: LATD = 0x00;
  2598  01647E  0E00               	movlw	0
  2599  016480  6E8C               	movwf	3980,c	;volatile
  2600                           
  2601                           ;pin_manager.c: 58: LATA = 0x00;
  2602  016482  0E00               	movlw	0
  2603  016484  6E89               	movwf	3977,c	;volatile
  2604                           
  2605                           ;pin_manager.c: 59: LATF = 0x00;
  2606  016486  0E00               	movlw	0
  2607  016488  6E8E               	movwf	3982,c	;volatile
  2608                           
  2609                           ;pin_manager.c: 60: LATB = 0x00;
  2610  01648A  0E00               	movlw	0
  2611  01648C  6E8A               	movwf	3978,c	;volatile
  2612                           
  2613                           ;pin_manager.c: 61: LATG = 0x00;
  2614  01648E  0E00               	movlw	0
  2615  016490  6E8F               	movwf	3983,c	;volatile
  2616                           
  2617                           ;pin_manager.c: 62: LATC = 0x01;
  2618  016492  0E01               	movlw	1
  2619  016494  6E8B               	movwf	3979,c	;volatile
  2620                           
  2621                           ;pin_manager.c: 67: TRISE = 0x00;
  2622  016496  0E00               	movlw	0
  2623  016498  6E96               	movwf	3990,c	;volatile
  2624                           
  2625                           ;pin_manager.c: 68: TRISF = 0x7E;
  2626  01649A  0E7E               	movlw	126
  2627  01649C  6E97               	movwf	3991,c	;volatile
  2628                           
  2629                           ;pin_manager.c: 69: TRISA = 0x2C;
  2630  01649E  0E2C               	movlw	44
  2631  0164A0  6E92               	movwf	3986,c	;volatile
  2632                           
  2633                           ;pin_manager.c: 70: TRISG = 0x00;
  2634  0164A2  0E00               	movlw	0
  2635  0164A4  6E98               	movwf	3992,c	;volatile
  2636                           
  2637                           ;pin_manager.c: 71: TRISB = 0xDF;
  2638  0164A6  0EDF               	movlw	223
  2639  0164A8  6E93               	movwf	3987,c	;volatile
  2640                           
  2641                           ;pin_manager.c: 72: TRISC = 0x90;
  2642  0164AA  0E90               	movlw	144
  2643  0164AC  6E94               	movwf	3988,c	;volatile
  2644                           
  2645                           ;pin_manager.c: 73: TRISD = 0x00;
  2646  0164AE  0E00               	movlw	0
  2647  0164B0  6E95               	movwf	3989,c	;volatile
  2648                           
  2649                           ;pin_manager.c: 78: ADCON1bits.PCFG = 0x03;
  2650  0164B2  50C1               	movf	4033,w,c	;volatile
  2651  0164B4  0BF0               	andlw	-16
  2652  0164B6  0903               	iorlw	3
  2653  0164B8  6EC1               	movwf	4033,c	;volatile
  2654  0164BA  0012               	return		;funcret
  2655  0164BC                     __end_of_PIN_MANAGER_Initialize:
  2656                           	opt stack 0
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           intcon	equ	0xFF2
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           postdec1	equ	0xFE5
  2665                           fsr1l	equ	0xFE1
  2666                           
  2667 ;; *************** function _OSCILLATOR_Initialize *****************
  2668 ;; Defined at:
  2669 ;;		line 86 in file "mcc_generated_files/mcc.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    4
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_SYSTEM_Initialize
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text8
  2698  016AE0                     __ptext8:
  2699                           	opt stack 0
  2700  016AE0                     _OSCILLATOR_Initialize:
  2701                           	opt stack 25
  2702                           
  2703                           ;mcc.c: 89: OSCCON = 0x02;
  2704                           
  2705                           ;incstack = 0
  2706  016AE0  0E02               	movlw	2
  2707  016AE2  6ED3               	movwf	4051,c	;volatile
  2708                           
  2709                           ;mcc.c: 91: OSCTUNE = 0x40;
  2710  016AE4  0E40               	movlw	64
  2711  016AE6  6E9B               	movwf	3995,c	;volatile
  2712  016AE8  0012               	return		;funcret
  2713  016AEA                     __end_of_OSCILLATOR_Initialize:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           intcon	equ	0xFF2
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           postdec1	equ	0xFE5
  2723                           fsr1l	equ	0xFE1
  2724                           
  2725 ;; *************** function _Network_Init *****************
  2726 ;; Defined at:
  2727 ;;		line 55 in file "mcc_generated_files/TCPIPLibrary/network.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    8
  2748 ;; This function calls:
  2749 ;;		_ARPV4_Init
  2750 ;;		_DHCP_init
  2751 ;;		_ETH_Init
  2752 ;;		_IPV4_Init
  2753 ;;		_Network_WaitForLink
  2754 ;;		_TCP_Init
  2755 ;;		_rtcc_init
  2756 ;;		_timersInit
  2757 ;; This function is called by:
  2758 ;;		_SYSTEM_Initialize
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text9
  2763  016950                     __ptext9:
  2764                           	opt stack 0
  2765  016950                     _Network_Init:
  2766                           	opt stack 21
  2767                           
  2768                           ;network.c: 57: ETH_Init();
  2769                           
  2770                           ;incstack = 0
  2771  016950  EC3C  F09D         	call	_ETH_Init	;wreg free
  2772                           
  2773                           ;network.c: 58: ARPV4_Init();
  2774  016954  EC27  F0B3         	call	_ARPV4_Init	;wreg free
  2775                           
  2776                           ;network.c: 59: IPV4_Init();
  2777  016958  ECA5  F0B5         	call	_IPV4_Init	;wreg free
  2778                           
  2779                           ;network.c: 60: DHCP_init();
  2780  01695C  ECAE  F0B5         	call	_DHCP_init	;wreg free
  2781                           
  2782                           ;network.c: 61: TCP_Init();
  2783  016960  EC0E  F0B4         	call	_TCP_Init	;wreg free
  2784                           
  2785                           ;network.c: 62: rtcc_init();
  2786  016964  EC72  F0B4         	call	_rtcc_init	;wreg free
  2787                           
  2788                           ;network.c: 63: Network_WaitForLink();
  2789  016968  EC64  F0B5         	call	_Network_WaitForLink	;wreg free
  2790                           
  2791                           ;network.c: 64: timersInit();
  2792  01696C  ECD8  F0B4         	call	_timersInit	;wreg free
  2793  016970  0012               	return		;funcret
  2794  016972                     __end_of_Network_Init:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           intcon	equ	0xFF2
  2801                           postinc0	equ	0xFEE
  2802                           wreg	equ	0xFE8
  2803                           postdec1	equ	0xFE5
  2804                           fsr1l	equ	0xFE1
  2805                           
  2806 ;; *************** function _timersInit *****************
  2807 ;; Defined at:
  2808 ;;		line 67 in file "mcc_generated_files/TCPIPLibrary/network.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    5
  2829 ;; This function calls:
  2830 ;;		_time
  2831 ;; This function is called by:
  2832 ;;		_Network_Init
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text10
  2837  0169B0                     __ptext10:
  2838                           	opt stack 0
  2839  0169B0                     _timersInit:
  2840                           	opt stack 23
  2841                           
  2842                           ;network.c: 69: time(&arpTimer);
  2843                           
  2844                           ;incstack = 0
  2845  0169B0  0E8A               	movlw	low _arpTimer
  2846  0169B2  6E13               	movwf	time@t,c
  2847  0169B4  0E02               	movlw	high _arpTimer
  2848  0169B6  6E14               	movwf	time@t+1,c
  2849  0169B8  EC07  F0B1         	call	_time	;wreg free
  2850                           
  2851                           ;network.c: 70: arpTimer += 10;
  2852  0169BC  0E0A               	movlw	10
  2853  0169BE  0102               	movlb	2	; () banked
  2854  0169C0  278A               	addwf	_arpTimer& (0+255),f,b
  2855  0169C2  0E00               	movlw	0
  2856  0169C4  238B               	addwfc	(_arpTimer+1)& (0+255),f,b
  2857  0169C6  238C               	addwfc	(_arpTimer+2)& (0+255),f,b
  2858  0169C8  238D               	addwfc	(_arpTimer+3)& (0+255),f,b
  2859                           
  2860                           ; BSR set to: 2
  2861  0169CA  0012               	return		;funcret
  2862  0169CC                     __end_of_timersInit:
  2863                           	opt stack 0
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           intcon	equ	0xFF2
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           postdec1	equ	0xFE5
  2872                           fsr1l	equ	0xFE1
  2873                           
  2874 ;; *************** function _rtcc_init *****************
  2875 ;; Defined at:
  2876 ;;		line 62 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    5
  2897 ;; This function calls:
  2898 ;;		_TMR1_SetInterruptHandler
  2899 ;; This function is called by:
  2900 ;;		_Network_Init
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text11
  2905  0168E4                     __ptext11:
  2906                           	opt stack 0
  2907  0168E4                     _rtcc_init:
  2908                           	opt stack 23
  2909                           
  2910                           ;rtcc.c: 64: device_time = 1293861600;
  2911                           
  2912                           ; BSR set to: 2
  2913                           ;incstack = 0
  2914  0168E4  0EE0               	movlw	224
  2915  0168E6  0102               	movlb	2	; () banked
  2916  0168E8  6F32               	movwf	_device_time& (0+255),b	;volatile
  2917  0168EA  0EC2               	movlw	194
  2918  0168EC  6F33               	movwf	(_device_time+1)& (0+255),b	;volatile
  2919  0168EE  0E1E               	movlw	30
  2920  0168F0  6F34               	movwf	(_device_time+2)& (0+255),b	;volatile
  2921  0168F2  0E4D               	movlw	77
  2922  0168F4  6F35               	movwf	(_device_time+3)& (0+255),b	;volatile
  2923                           
  2924                           ; BSR set to: 2
  2925                           ;rtcc.c: 65: TMR1_SetInterruptHandler(rtcc_handler);
  2926  0168F6  0E64               	movlw	low _rtcc_handler
  2927  0168F8  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2928  0168FA  0E6A               	movlw	high _rtcc_handler
  2929  0168FC  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2930  0168FE  0E01               	movlw	low (_rtcc_handler shr (0+16))
  2931  016900  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler+2,c
  2932  016902  EC4F  F0B5         	call	_TMR1_SetInterruptHandler	;wreg free
  2933  016906  0012               	return		;funcret
  2934  016908                     __end_of_rtcc_init:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           intcon	equ	0xFF2
  2941                           postinc0	equ	0xFEE
  2942                           wreg	equ	0xFE8
  2943                           postdec1	equ	0xFE5
  2944                           fsr1l	equ	0xFE1
  2945                           
  2946 ;; *************** function _TMR1_SetInterruptHandler *****************
  2947 ;; Defined at:
  2948 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  InterruptHan    3   18[COMRAM] PTR FTN()void 
  2951 ;;		 -> rtcc_handler(1), TMR1_DefaultInterruptHandler(1), 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:        3 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    4
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_TMR1_Initialize
  2974 ;;		_rtcc_init
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text12
  2979  016A9E                     __ptext12:
  2980                           	opt stack 0
  2981  016A9E                     _TMR1_SetInterruptHandler:
  2982                           	opt stack 24
  2983                           
  2984                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  2985                           
  2986                           ;incstack = 0
  2987  016A9E  C013  F2FC         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2988  016AA2  C014  F2FD         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2989  016AA6  C015  F2FE         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
  2990  016AAA  0012               	return		;funcret
  2991  016AAC                     __end_of_TMR1_SetInterruptHandler:
  2992                           	opt stack 0
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           intcon	equ	0xFF2
  2998                           postinc0	equ	0xFEE
  2999                           wreg	equ	0xFE8
  3000                           postdec1	equ	0xFE5
  3001                           fsr1l	equ	0xFE1
  3002                           
  3003 ;; *************** function _TCP_Init *****************
  3004 ;; Defined at:
  3005 ;;		line 1149 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        0 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    4
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_Network_Init
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text13
  3034  01681C                     __ptext13:
  3035                           	opt stack 0
  3036  01681C                     _TCP_Init:
  3037                           	opt stack 24
  3038                           
  3039                           ;tcpv4.c: 1151: tcbList = (0);
  3040                           
  3041                           ;incstack = 0
  3042  01681C  0E00               	movlw	0
  3043  01681E  6E3D               	movwf	_tcbList,c
  3044  016820  0E00               	movlw	0
  3045  016822  6E3E               	movwf	_tcbList+1,c
  3046                           
  3047                           ;tcpv4.c: 1152: tcbListSize = 0;
  3048  016824  0E00               	movlw	0
  3049  016826  6E45               	movwf	_tcbListSize,c
  3050                           
  3051                           ;tcpv4.c: 1153: nextAvailablePort = (1024u);
  3052  016828  0E04               	movlw	4
  3053  01682A  0102               	movlb	2	; () banked
  3054  01682C  6F47               	movwf	(_nextAvailablePort+1)& (0+255),b
  3055  01682E  0E00               	movlw	0
  3056  016830  6F46               	movwf	_nextAvailablePort& (0+255),b
  3057                           
  3058                           ; BSR set to: 2
  3059                           ;tcpv4.c: 1154: nextSequenceNumber = 0;
  3060  016832  0E00               	movlw	0
  3061  016834  0103               	movlb	3	; () banked
  3062  016836  6F00               	movwf	_nextSequenceNumber& (0+255),b
  3063  016838  0E00               	movlw	0
  3064  01683A  6F01               	movwf	(_nextSequenceNumber+1)& (0+255),b
  3065  01683C  0E00               	movlw	0
  3066  01683E  6F02               	movwf	(_nextSequenceNumber+2)& (0+255),b
  3067  016840  0E00               	movlw	0
  3068  016842  6F03               	movwf	(_nextSequenceNumber+3)& (0+255),b
  3069                           
  3070                           ; BSR set to: 3
  3071  016844  0012               	return		;funcret
  3072  016846                     __end_of_TCP_Init:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           intcon	equ	0xFF2
  3079                           postinc0	equ	0xFEE
  3080                           wreg	equ	0xFE8
  3081                           postdec1	equ	0xFE5
  3082                           fsr1l	equ	0xFE1
  3083                           
  3084 ;; *************** function _Network_WaitForLink *****************
  3085 ;; Defined at:
  3086 ;;		line 73 in file "mcc_generated_files/TCPIPLibrary/network.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    7
  3107 ;; This function calls:
  3108 ;;		_ETH_CheckLinkUp
  3109 ;; This function is called by:
  3110 ;;		_Network_Init
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text14
  3115  016AC8                     __ptext14:
  3116                           	opt stack 0
  3117  016AC8                     _Network_WaitForLink:
  3118                           	opt stack 21
  3119                           
  3120                           ;network.c: 75: while(!ETH_CheckLinkUp());
  3121                           
  3122                           ; BSR set to: 3
  3123                           ;incstack = 0
  3124  016AC8  EC23  F0B4         	call	_ETH_CheckLinkUp	;wreg free
  3125  016ACC  0900               	iorlw	0
  3126  016ACE  A4D8               	btfss	status,2,c
  3127  016AD0  0012               	return	
  3128  016AD2  D7FA               	goto	_Network_WaitForLink
  3129  016AD4                     __end_of_Network_WaitForLink:
  3130                           	opt stack 0
  3131                           tblptru	equ	0xFF8
  3132                           tblptrh	equ	0xFF7
  3133                           tblptrl	equ	0xFF6
  3134                           tablat	equ	0xFF5
  3135                           intcon	equ	0xFF2
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           postdec1	equ	0xFE5
  3139                           fsr1l	equ	0xFE1
  3140                           status	equ	0xFD8
  3141                           
  3142 ;; *************** function _IPV4_Init *****************
  3143 ;; Defined at:
  3144 ;;		line 65 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    5
  3165 ;; This function calls:
  3166 ;;		_ipdb_init
  3167 ;; This function is called by:
  3168 ;;		_Network_Init
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text15
  3173  016B4A                     __ptext15:
  3174                           	opt stack 0
  3175  016B4A                     _IPV4_Init:
  3176                           	opt stack 23
  3177                           
  3178                           ;ipv4.c: 67: ipdb_init();
  3179                           
  3180                           ;incstack = 0
  3181  016B4A  ECCA  F0AD         	call	_ipdb_init	;wreg free
  3182  016B4E  0012               	return		;funcret
  3183  016B50                     __end_of_IPV4_Init:
  3184                           	opt stack 0
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           intcon	equ	0xFF2
  3190                           postinc0	equ	0xFEE
  3191                           wreg	equ	0xFE8
  3192                           postdec1	equ	0xFE5
  3193                           fsr1l	equ	0xFE1
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _ipdb_init *****************
  3197 ;; Defined at:
  3198 ;;		line 31 in file "mcc_generated_files/TCPIPLibrary/ip_database.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  x               1   19[COMRAM] unsigned char 
  3203 ;;  x               1   18[COMRAM] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;Total ram usage:        2 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    4
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_IPV4_Init
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text16
  3228  015B94                     __ptext16:
  3229                           	opt stack 0
  3230  015B94                     _ipdb_init:
  3231                           	opt stack 23
  3232                           
  3233                           ;ip_database.c: 33: ip_database_info.ipv4_myAddress = 0;
  3234                           
  3235                           ;incstack = 0
  3236  015B94  0E00               	movlw	0
  3237  015B96  0102               	movlb	2	; () banked
  3238  015B98  6F00               	movwf	_ip_database_info& (0+255),b
  3239  015B9A  0E00               	movlw	0
  3240  015B9C  6F01               	movwf	(_ip_database_info+1)& (0+255),b
  3241  015B9E  0E00               	movlw	0
  3242  015BA0  6F02               	movwf	(_ip_database_info+2)& (0+255),b
  3243  015BA2  0E00               	movlw	0
  3244  015BA4  6F03               	movwf	(_ip_database_info+3)& (0+255),b
  3245                           
  3246                           ;ip_database.c: 34: ip_database_info.ipv4_subnetMask = 0;
  3247  015BA6  0E00               	movlw	0
  3248  015BA8  6F0C               	movwf	(_ip_database_info+12)& (0+255),b
  3249  015BAA  0E00               	movlw	0
  3250  015BAC  6F0D               	movwf	(_ip_database_info+13)& (0+255),b
  3251  015BAE  0E00               	movlw	0
  3252  015BB0  6F0E               	movwf	(_ip_database_info+14)& (0+255),b
  3253  015BB2  0E00               	movlw	0
  3254  015BB4  6F0F               	movwf	(_ip_database_info+15)& (0+255),b
  3255                           
  3256                           ;ip_database.c: 35: ip_database_info.ipv4_router = 0;
  3257  015BB6  0E00               	movlw	0
  3258  015BB8  6F10               	movwf	(_ip_database_info+16)& (0+255),b
  3259  015BBA  0E00               	movlw	0
  3260  015BBC  6F11               	movwf	(_ip_database_info+17)& (0+255),b
  3261  015BBE  0E00               	movlw	0
  3262  015BC0  6F12               	movwf	(_ip_database_info+18)& (0+255),b
  3263  015BC2  0E00               	movlw	0
  3264  015BC4  6F13               	movwf	(_ip_database_info+19)& (0+255),b
  3265                           
  3266                           ;ip_database.c: 36: for(uint8_t x=0; x < 2; x ++)
  3267  015BC6  0E00               	movlw	0
  3268  015BC8  6E13               	movwf	ipdb_init@x,c
  3269  015BCA                     l8188:
  3270                           
  3271                           ; BSR set to: 2
  3272  015BCA  0E01               	movlw	1
  3273  015BCC  6413               	cpfsgt	ipdb_init@x,c
  3274  015BCE  D001               	goto	l913
  3275  015BD0  D00E               	goto	u7070
  3276  015BD2                     l913:
  3277                           
  3278                           ;ip_database.c: 37: ip_database_info.ipv4_dns[x] = 0;
  3279                           
  3280                           ; BSR set to: 2
  3281  015BD2  5013               	movf	ipdb_init@x,w,c
  3282  015BD4  0D04               	mullw	4
  3283  015BD6  0E04               	movlw	low (_ip_database_info+4)
  3284  015BD8  24F3               	addwf	prodl,w,c
  3285  015BDA  6ED9               	movwf	fsr2l,c
  3286  015BDC  0E02               	movlw	high (_ip_database_info+4)
  3287  015BDE  20F4               	addwfc	prodh,w,c
  3288  015BE0  6EDA               	movwf	fsr2h,c
  3289  015BE2  6ADE               	clrf	postinc2,c
  3290  015BE4  6ADE               	clrf	postinc2,c
  3291  015BE6  6ADE               	clrf	postinc2,c
  3292  015BE8  6ADD               	clrf	postdec2,c
  3293  015BEA  2A13               	incf	ipdb_init@x,f,c
  3294  015BEC  D7EE               	goto	l8188
  3295  015BEE                     u7070:
  3296                           
  3297                           ;ip_database.c: 38: for(uint8_t x=0; x < 2; x++)
  3298  015BEE  0E00               	movlw	0
  3299  015BF0  6E14               	movwf	ipdb_init@x_2014,c
  3300  015BF2                     l8200:
  3301  015BF2  0E01               	movlw	1
  3302  015BF4  6414               	cpfsgt	ipdb_init@x_2014,c
  3303  015BF6  D001               	goto	l915
  3304  015BF8  D00E               	goto	u7090
  3305  015BFA                     l915:
  3306                           
  3307                           ;ip_database.c: 39: ip_database_info.ipv4_ntpAddress[x] = 0;
  3308  015BFA  5014               	movf	ipdb_init@x_2014,w,c
  3309  015BFC  0D04               	mullw	4
  3310  015BFE  0E18               	movlw	low (_ip_database_info+24)
  3311  015C00  24F3               	addwf	prodl,w,c
  3312  015C02  6ED9               	movwf	fsr2l,c
  3313  015C04  0E02               	movlw	high (_ip_database_info+24)
  3314  015C06  20F4               	addwfc	prodh,w,c
  3315  015C08  6EDA               	movwf	fsr2h,c
  3316  015C0A  6ADE               	clrf	postinc2,c
  3317  015C0C  6ADE               	clrf	postinc2,c
  3318  015C0E  6ADE               	clrf	postinc2,c
  3319  015C10  6ADD               	clrf	postdec2,c
  3320  015C12  2A14               	incf	ipdb_init@x_2014,f,c
  3321  015C14  D7EE               	goto	l8200
  3322  015C16                     u7090:
  3323                           
  3324                           ;ip_database.c: 40: ip_database_info.ipv4_tftpAddress = 0;
  3325  015C16  0E00               	movlw	0
  3326  015C18  0102               	movlb	2	; () banked
  3327  015C1A  6F20               	movwf	(_ip_database_info+32)& (0+255),b
  3328  015C1C  0E00               	movlw	0
  3329  015C1E  6F21               	movwf	(_ip_database_info+33)& (0+255),b
  3330  015C20  0E00               	movlw	0
  3331  015C22  6F22               	movwf	(_ip_database_info+34)& (0+255),b
  3332  015C24  0E00               	movlw	0
  3333  015C26  6F23               	movwf	(_ip_database_info+35)& (0+255),b
  3334                           
  3335                           ; BSR set to: 2
  3336  015C28  0012               	return		;funcret
  3337  015C2A                     __end_of_ipdb_init:
  3338                           	opt stack 0
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           prodh	equ	0xFF4
  3344                           prodl	equ	0xFF3
  3345                           intcon	equ	0xFF2
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           postdec1	equ	0xFE5
  3349                           fsr1l	equ	0xFE1
  3350                           postinc2	equ	0xFDE
  3351                           postdec2	equ	0xFDD
  3352                           fsr2h	equ	0xFDA
  3353                           fsr2l	equ	0xFD9
  3354                           status	equ	0xFD8
  3355                           
  3356 ;; *************** function _ETH_Init *****************
  3357 ;; Defined at:
  3358 ;;		line 132 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  mac             2   39[BANK0 ] PTR const struct .
  3363 ;;		 -> macAddress(6), 
  3364 ;;  phycon1_valu    2   37[BANK0 ] unsigned int 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;Total ram usage:       14 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    7
  3381 ;; This function calls:
  3382 ;;		_ETH_CheckLinkUp
  3383 ;;		_ETH_Flush
  3384 ;;		_ETH_PacketListReset
  3385 ;;		_MAC_getAddress
  3386 ;;		_PHY_Write
  3387 ;;		_printf
  3388 ;; This function is called by:
  3389 ;;		_Network_Init
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text17
  3394  013A78                     __ptext17:
  3395                           	opt stack 0
  3396  013A78                     _ETH_Init:
  3397                           	opt stack 21
  3398                           
  3399                           ;ETHxxJ6x_driver.c: 134: const mac48Address_t *mac;
  3400                           ;ETHxxJ6x_driver.c: 135: uint16_t phycon1_value;
  3401                           ;ETHxxJ6x_driver.c: 138: ethData.error = 0;
  3402                           
  3403                           ; BSR set to: 2
  3404                           ;incstack = 0
  3405  013A78  0102               	movlb	2	; () banked
  3406  013A7A  9124               	bcf	_ethData& (0+255),0,b	;volatile
  3407                           
  3408                           ;ETHxxJ6x_driver.c: 139: ethData.up = 0;
  3409  013A7C  9524               	bcf	_ethData& (0+255),2,b	;volatile
  3410                           
  3411                           ;ETHxxJ6x_driver.c: 140: ethData.linkChange = 0;
  3412  013A7E  9924               	bcf	_ethData& (0+255),4,b	;volatile
  3413                           
  3414                           ; BSR set to: 2
  3415                           ;ETHxxJ6x_driver.c: 142: ETH_PacketListReset();
  3416  013A80  ECAE  F0B1         	call	_ETH_PacketListReset	;wreg free
  3417                           
  3418                           ;ETHxxJ6x_driver.c: 144: ethData.saveRDPT = 0;
  3419  013A84  0E00               	movlw	0
  3420  013A86  0102               	movlb	2	; () banked
  3421  013A88  6F27               	movwf	(_ethData+3)& (0+255),b	;volatile
  3422  013A8A  0E00               	movlw	0
  3423  013A8C  6F26               	movwf	(_ethData+2)& (0+255),b	;volatile
  3424                           
  3425                           ; BSR set to: 2
  3426                           ;ETHxxJ6x_driver.c: 146: nextPacketPointer = (0);
  3427  013A8E  0E00               	movlw	0
  3428  013A90  6E40               	movwf	_nextPacketPointer+1,c
  3429  013A92  0E00               	movlw	0
  3430  013A94  6E3F               	movwf	_nextPacketPointer,c
  3431                           
  3432                           ; BSR set to: 2
  3433                           ;ETHxxJ6x_driver.c: 148: ECON1 = 0x00;
  3434  013A96  0E00               	movlw	0
  3435  013A98  6ED2               	movwf	4050,c	;volatile
  3436  013A9A                     
  3437                           ; BSR set to: 2
  3438  013A9A  010E               	movlb	14	; () banked
  3439  013A9C  B5FD               	btfsc	253,2,b	;volatile
  3440  013A9E  D7FD               	goto	l492
  3441  013AA0                     u11750:
  3442                           
  3443                           ; BSR set to: 14
  3444                           
  3445                           ; BSR set to: 14
  3446                           ;ETHxxJ6x_driver.c: 150: while(ECON1bits.TXRTS);
  3447  013AA0  A6D2               	btfss	4050,3,c	;volatile
  3448  013AA2  D005               	goto	l497
  3449  013AA4  D7FD               	goto	u11750
  3450  013AA6                     l498:
  3451                           
  3452                           ;ETHxxJ6x_driver.c: 152: {
  3453                           ;ETHxxJ6x_driver.c: 153: ethData.pktReady = 0;
  3454  013AA6  0102               	movlb	2	; () banked
  3455  013AA8  9324               	bcf	_ethData& (0+255),1,b	;volatile
  3456                           
  3457                           ; BSR set to: 2
  3458                           ;ETHxxJ6x_driver.c: 154: ETH_Flush();
  3459  013AAA  EC8A  F0AF         	call	_ETH_Flush	;wreg free
  3460  013AAE                     l497:
  3461  013AAE  BC60               	btfsc	3936,6,c	;volatile
  3462  013AB0  D7FA               	goto	l498
  3463                           
  3464                           ;ETHxxJ6x_driver.c: 155: }
  3465                           ;ETHxxJ6x_driver.c: 157: ECON2 = 0x00;
  3466  013AB2  0E00               	movlw	0
  3467  013AB4  010E               	movlb	14	; () banked
  3468  013AB6  6FFE               	movwf	254,b	;volatile
  3469                           
  3470                           ; BSR set to: 14
  3471                           ;ETHxxJ6x_driver.c: 159: __nop();
  3472  013AB8  F000               	nop	
  3473                           
  3474                           ;ETHxxJ6x_driver.c: 160: __nop();
  3475  013ABA  F000               	nop	
  3476                           
  3477                           ;ETHxxJ6x_driver.c: 161: __nop();
  3478  013ABC  F000               	nop	
  3479                           
  3480                           ;ETHxxJ6x_driver.c: 164: ECON2 = 0xA0;
  3481  013ABE  0EA0               	movlw	160
  3482  013AC0  010E               	movlb	14	; () banked
  3483  013AC2  6FFE               	movwf	254,b	;volatile
  3484  013AC4                     
  3485                           ; BSR set to: 14
  3486                           
  3487                           ; BSR set to: 14
  3488  013AC4  A1FD               	btfss	253,0,b	;volatile
  3489  013AC6  D7FE               	goto	l501
  3490                           
  3491                           ; BSR set to: 14
  3492                           ;ETHxxJ6x_driver.c: 180: MACON1 = 0x01; __nop();
  3493                           
  3494                           ; BSR set to: 14
  3495  013AC8  0E01               	movlw	1
  3496  013ACA  6FA0               	movwf	160,b	;volatile
  3497                           
  3498                           ; BSR set to: 14
  3499  013ACC  F000               	nop	
  3500                           
  3501                           ;ETHxxJ6x_driver.c: 181: MACON3 = 0b10110010; __nop();
  3502  013ACE  0EB2               	movlw	178
  3503  013AD0  010E               	movlb	14	; () banked
  3504  013AD2  6FA2               	movwf	162,b	;volatile
  3505                           
  3506                           ; BSR set to: 14
  3507  013AD4  F000               	nop	
  3508                           
  3509                           ;ETHxxJ6x_driver.c: 182: MACON4 = 0b01000000; __nop();
  3510  013AD6  0E40               	movlw	64
  3511  013AD8  010E               	movlb	14	; () banked
  3512  013ADA  6FA3               	movwf	163,b	;volatile
  3513                           
  3514                           ; BSR set to: 14
  3515  013ADC  F000               	nop	
  3516                           
  3517                           ;ETHxxJ6x_driver.c: 183: MABBIPG = 0x12; __nop();
  3518  013ADE  0E12               	movlw	18
  3519  013AE0  010E               	movlb	14	; () banked
  3520  013AE2  6FA4               	movwf	164,b	;volatile
  3521                           
  3522                           ; BSR set to: 14
  3523  013AE4  F000               	nop	
  3524                           
  3525                           ;ETHxxJ6x_driver.c: 184: MAIPG = 0x0C12; __nop();
  3526  013AE6  0E0C               	movlw	12
  3527  013AE8  010E               	movlb	14	; () banked
  3528  013AEA  6FA7               	movwf	167,b	;volatile
  3529  013AEC  0E12               	movlw	18
  3530  013AEE  6FA6               	movwf	166,b	;volatile
  3531                           
  3532                           ; BSR set to: 14
  3533  013AF0  F000               	nop	
  3534                           
  3535                           ;ETHxxJ6x_driver.c: 185: EFLOCON = 0x00;
  3536  013AF2  0E00               	movlw	0
  3537  013AF4  010E               	movlb	14	; () banked
  3538  013AF6  6F97               	movwf	151,b	;volatile
  3539                           
  3540                           ;ETHxxJ6x_driver.c: 186: phycon1_value = 0x0000;
  3541  013AF8  0E00               	movlw	0
  3542  013AFA  0100               	movlb	0	; () banked
  3543  013AFC  6F86               	movwf	(ETH_Init@phycon1_value+1)& (0+255),b
  3544  013AFE  0E00               	movlw	0
  3545  013B00  6F85               	movwf	ETH_Init@phycon1_value& (0+255),b
  3546                           
  3547                           ;ETHxxJ6x_driver.c: 191: ETXST = ((8192) - (((1518) + (7)) << 1));
  3548  013B02  0E14               	movlw	20
  3549  013B04  010E               	movlb	14	; () banked
  3550  013B06  6FE5               	movwf	229,b	;volatile
  3551  013B08  0E16               	movlw	22
  3552  013B0A  6FE4               	movwf	228,b	;volatile
  3553                           
  3554                           ;ETHxxJ6x_driver.c: 192: ETXND = ((8192)-1);
  3555  013B0C  0E1F               	movlw	31
  3556  013B0E  6FE7               	movwf	231,b	;volatile
  3557  013B10  69E6               	setf	230,b	;volatile
  3558                           
  3559                           ;ETHxxJ6x_driver.c: 193: ERXST = (0);
  3560  013B12  0E00               	movlw	0
  3561  013B14  6FE9               	movwf	233,b	;volatile
  3562  013B16  0E00               	movlw	0
  3563  013B18  6FE8               	movwf	232,b	;volatile
  3564                           
  3565                           ;ETHxxJ6x_driver.c: 194: ERXND = (((8192) - (((1518) + (7)) << 1)) - 1);
  3566  013B1A  0E14               	movlw	20
  3567  013B1C  6FEB               	movwf	235,b	;volatile
  3568  013B1E  0E15               	movlw	21
  3569  013B20  6FEA               	movwf	234,b	;volatile
  3570                           
  3571                           ;ETHxxJ6x_driver.c: 197: ERDPT = (0);
  3572  013B22  0E00               	movlw	0
  3573  013B24  6E7B               	movwf	3963,c	;volatile
  3574  013B26  0E00               	movlw	0
  3575  013B28  6E7A               	movwf	3962,c	;volatile
  3576                           
  3577                           ;ETHxxJ6x_driver.c: 198: EWRPT = ((8192) - (((1518) + (7)) << 1));
  3578  013B2A  0E14               	movlw	20
  3579  013B2C  6FE3               	movwf	227,b	;volatile
  3580  013B2E  0E16               	movlw	22
  3581  013B30  6FE2               	movwf	226,b	;volatile
  3582                           
  3583                           ;ETHxxJ6x_driver.c: 201: ERXRDPT = (((8192) - (((1518) + (7)) << 1)) - 1);
  3584  013B32  0E14               	movlw	20
  3585  013B34  6FED               	movwf	237,b	;volatile
  3586  013B36  0E15               	movlw	21
  3587  013B38  6FEC               	movwf	236,b	;volatile
  3588                           
  3589                           ;ETHxxJ6x_driver.c: 205: MAMXFL = (1518);
  3590  013B3A  0E05               	movlw	5
  3591  013B3C  6FAB               	movwf	171,b	;volatile
  3592  013B3E  0EEE               	movlw	238
  3593  013B40  6FAA               	movwf	170,b	;volatile
  3594                           
  3595                           ; BSR set to: 14
  3596                           ;ETHxxJ6x_driver.c: 208: mac = MAC_getAddress();
  3597  013B42  EC75  F0B5         	call	_MAC_getAddress	;wreg free
  3598  013B46  C013  F087         	movff	?_MAC_getAddress,ETH_Init@mac
  3599  013B4A  C014  F088         	movff	?_MAC_getAddress+1,ETH_Init@mac+1
  3600                           
  3601                           ;ETHxxJ6x_driver.c: 210: printf("MAC Address from EEPROM: %.2X:%.2X:%.2X:%.2X:%.2X:%.2X 
      +                          \r\n", mac->s.byte1, mac->s.byte2,mac->s.byte3,mac->s.byte4,mac->s.byte5,mac->s.byte6);
  3602  013B4E  0E4B               	movlw	low STR_1
  3603  013B50  0100               	movlb	0	; () banked
  3604  013B52  6F6D               	movwf	printf@f& (0+255),b
  3605  013B54  0EFF               	movlw	high STR_1
  3606  013B56  6F6E               	movwf	(printf@f+1)& (0+255),b
  3607  013B58  C087  FFF6         	movff	ETH_Init@mac,tblptrl
  3608  013B5C  C088  FFF7         	movff	ETH_Init@mac+1,tblptrh
  3609  013B60                     	if	0	;tblptru may be non-zero
  3610  013B60                     	endif
  3611  013B60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3612  013B60  0E00               	movlw	low (__mediumconst shr (0+16))
  3613  013B62  6EF8               	movwf	tblptru,c
  3614  013B64                     	endif
  3615  013B64  0008               	tblrd		*
  3616  013B66  50F5               	movf	tablat,w,c
  3617  013B68  6F6F               	movwf	(?_printf+2)& (0+255),b
  3618  013B6A  6B70               	clrf	(?_printf+3)& (0+255),b
  3619  013B6C  0E01               	movlw	1
  3620  013B6E  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3621  013B70  6F7B               	movwf	??_ETH_Init& (0+255),b
  3622  013B72  0E00               	movlw	0
  3623  013B74  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3624  013B76  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3625  013B78  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3626  013B7C  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3627  013B80                     	if	0	;tblptru may be non-zero
  3628  013B80                     	endif
  3629  013B80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3630  013B80  0E00               	movlw	low (__mediumconst shr (0+16))
  3631  013B82  6EF8               	movwf	tblptru,c
  3632  013B84                     	endif
  3633  013B84  0008               	tblrd		*
  3634  013B86  50F5               	movf	tablat,w,c
  3635  013B88  6F71               	movwf	(?_printf+4)& (0+255),b
  3636  013B8A  6B72               	clrf	(?_printf+5)& (0+255),b
  3637  013B8C  0E02               	movlw	2
  3638  013B8E  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3639  013B90  6F7D               	movwf	(??_ETH_Init+2)& (0+255),b
  3640  013B92  0E00               	movlw	0
  3641  013B94  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3642  013B96  6F7E               	movwf	(??_ETH_Init+3)& (0+255),b
  3643  013B98  C07D  FFF6         	movff	??_ETH_Init+2,tblptrl
  3644  013B9C  C07E  FFF7         	movff	??_ETH_Init+3,tblptrh
  3645  013BA0                     	if	0	;tblptru may be non-zero
  3646  013BA0                     	endif
  3647  013BA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3648  013BA0  0E00               	movlw	low (__mediumconst shr (0+16))
  3649  013BA2  6EF8               	movwf	tblptru,c
  3650  013BA4                     	endif
  3651  013BA4  0008               	tblrd		*
  3652  013BA6  50F5               	movf	tablat,w,c
  3653  013BA8  6F73               	movwf	(?_printf+6)& (0+255),b
  3654  013BAA  6B74               	clrf	(?_printf+7)& (0+255),b
  3655  013BAC  0E03               	movlw	3
  3656  013BAE  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3657  013BB0  6F7F               	movwf	(??_ETH_Init+4)& (0+255),b
  3658  013BB2  0E00               	movlw	0
  3659  013BB4  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3660  013BB6  6F80               	movwf	(??_ETH_Init+5)& (0+255),b
  3661  013BB8  C07F  FFF6         	movff	??_ETH_Init+4,tblptrl
  3662  013BBC  C080  FFF7         	movff	??_ETH_Init+5,tblptrh
  3663  013BC0                     	if	0	;tblptru may be non-zero
  3664  013BC0                     	endif
  3665  013BC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3666  013BC0  0E00               	movlw	low (__mediumconst shr (0+16))
  3667  013BC2  6EF8               	movwf	tblptru,c
  3668  013BC4                     	endif
  3669  013BC4  0008               	tblrd		*
  3670  013BC6  50F5               	movf	tablat,w,c
  3671  013BC8  6F75               	movwf	(?_printf+8)& (0+255),b
  3672  013BCA  6B76               	clrf	(?_printf+9)& (0+255),b
  3673  013BCC  0E04               	movlw	4
  3674  013BCE  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3675  013BD0  6F81               	movwf	(??_ETH_Init+6)& (0+255),b
  3676  013BD2  0E00               	movlw	0
  3677  013BD4  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3678  013BD6  6F82               	movwf	(??_ETH_Init+7)& (0+255),b
  3679  013BD8  C081  FFF6         	movff	??_ETH_Init+6,tblptrl
  3680  013BDC  C082  FFF7         	movff	??_ETH_Init+7,tblptrh
  3681  013BE0                     	if	0	;tblptru may be non-zero
  3682  013BE0                     	endif
  3683  013BE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3684  013BE0  0E00               	movlw	low (__mediumconst shr (0+16))
  3685  013BE2  6EF8               	movwf	tblptru,c
  3686  013BE4                     	endif
  3687  013BE4  0008               	tblrd		*
  3688  013BE6  50F5               	movf	tablat,w,c
  3689  013BE8  6F77               	movwf	(?_printf+10)& (0+255),b
  3690  013BEA  6B78               	clrf	(?_printf+11)& (0+255),b
  3691  013BEC  0E05               	movlw	5
  3692  013BEE  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3693  013BF0  6F83               	movwf	(??_ETH_Init+8)& (0+255),b
  3694  013BF2  0E00               	movlw	0
  3695  013BF4  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3696  013BF6  6F84               	movwf	(??_ETH_Init+9)& (0+255),b
  3697  013BF8  C083  FFF6         	movff	??_ETH_Init+8,tblptrl
  3698  013BFC  C084  FFF7         	movff	??_ETH_Init+9,tblptrh
  3699  013C00                     	if	0	;tblptru may be non-zero
  3700  013C00                     	endif
  3701  013C00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3702  013C00  0E00               	movlw	low (__mediumconst shr (0+16))
  3703  013C02  6EF8               	movwf	tblptru,c
  3704  013C04                     	endif
  3705  013C04  0008               	tblrd		*
  3706  013C06  50F5               	movf	tablat,w,c
  3707  013C08  6F79               	movwf	(?_printf+12)& (0+255),b
  3708  013C0A  6B7A               	clrf	(?_printf+13)& (0+255),b
  3709  013C0C  EC9B  F0B2         	call	_printf	;wreg free
  3710                           
  3711                           ;ETHxxJ6x_driver.c: 213: MAADR1 = mac->mac_array[0];__nop();
  3712  013C10  C087  FFF6         	movff	ETH_Init@mac,tblptrl
  3713  013C14  C088  FFF7         	movff	ETH_Init@mac+1,tblptrh
  3714  013C18                     	if	0	;tblptru may be non-zero
  3715  013C18                     	endif
  3716  013C18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3717  013C18  0E00               	movlw	low (__mediumconst shr (0+16))
  3718  013C1A  6EF8               	movwf	tblptru,c
  3719  013C1C                     	endif
  3720  013C1C  0008               	tblrd		*
  3721  013C1E  CFF5 FE84          	movff	tablat,3716	;volatile
  3722  013C22  F000               	nop	
  3723                           
  3724                           ;ETHxxJ6x_driver.c: 214: MAADR2 = mac->mac_array[1];__nop();
  3725  013C24  0E01               	movlw	1
  3726  013C26  0100               	movlb	0	; () banked
  3727  013C28  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3728  013C2A  6F7B               	movwf	??_ETH_Init& (0+255),b
  3729  013C2C  0E00               	movlw	0
  3730  013C2E  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3731  013C30  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3732  013C32  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3733  013C36  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3734  013C3A                     	if	0	;tblptru may be non-zero
  3735  013C3A                     	endif
  3736  013C3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3737  013C3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3738  013C3C  6EF8               	movwf	tblptru,c
  3739  013C3E                     	endif
  3740  013C3E  0008               	tblrd		*
  3741  013C40  CFF5 FE85          	movff	tablat,3717	;volatile
  3742                           
  3743                           ; BSR set to: 0
  3744  013C44  F000               	nop	
  3745                           
  3746                           ;ETHxxJ6x_driver.c: 215: MAADR3 = mac->mac_array[2];__nop();
  3747  013C46  0E02               	movlw	2
  3748  013C48  0100               	movlb	0	; () banked
  3749  013C4A  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3750  013C4C  6F7B               	movwf	??_ETH_Init& (0+255),b
  3751  013C4E  0E00               	movlw	0
  3752  013C50  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3753  013C52  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3754  013C54  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3755  013C58  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3756  013C5C                     	if	0	;tblptru may be non-zero
  3757  013C5C                     	endif
  3758  013C5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3759  013C5C  0E00               	movlw	low (__mediumconst shr (0+16))
  3760  013C5E  6EF8               	movwf	tblptru,c
  3761  013C60                     	endif
  3762  013C60  0008               	tblrd		*
  3763  013C62  CFF5 FE82          	movff	tablat,3714	;volatile
  3764                           
  3765                           ; BSR set to: 0
  3766  013C66  F000               	nop	
  3767                           
  3768                           ;ETHxxJ6x_driver.c: 216: MAADR4 = mac->mac_array[3];__nop();
  3769  013C68  0E03               	movlw	3
  3770  013C6A  0100               	movlb	0	; () banked
  3771  013C6C  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3772  013C6E  6F7B               	movwf	??_ETH_Init& (0+255),b
  3773  013C70  0E00               	movlw	0
  3774  013C72  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3775  013C74  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3776  013C76  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3777  013C7A  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3778  013C7E                     	if	0	;tblptru may be non-zero
  3779  013C7E                     	endif
  3780  013C7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3781  013C7E  0E00               	movlw	low (__mediumconst shr (0+16))
  3782  013C80  6EF8               	movwf	tblptru,c
  3783  013C82                     	endif
  3784  013C82  0008               	tblrd		*
  3785  013C84  CFF5 FE83          	movff	tablat,3715	;volatile
  3786                           
  3787                           ; BSR set to: 0
  3788  013C88  F000               	nop	
  3789                           
  3790                           ;ETHxxJ6x_driver.c: 217: MAADR5 = mac->mac_array[4];__nop();
  3791  013C8A  0E04               	movlw	4
  3792  013C8C  0100               	movlb	0	; () banked
  3793  013C8E  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3794  013C90  6F7B               	movwf	??_ETH_Init& (0+255),b
  3795  013C92  0E00               	movlw	0
  3796  013C94  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3797  013C96  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3798  013C98  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3799  013C9C  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3800  013CA0                     	if	0	;tblptru may be non-zero
  3801  013CA0                     	endif
  3802  013CA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3803  013CA0  0E00               	movlw	low (__mediumconst shr (0+16))
  3804  013CA2  6EF8               	movwf	tblptru,c
  3805  013CA4                     	endif
  3806  013CA4  0008               	tblrd		*
  3807  013CA6  CFF5 FE80          	movff	tablat,3712	;volatile
  3808                           
  3809                           ; BSR set to: 0
  3810  013CAA  F000               	nop	
  3811                           
  3812                           ;ETHxxJ6x_driver.c: 218: MAADR6 = mac->mac_array[5];__nop();
  3813  013CAC  0E05               	movlw	5
  3814  013CAE  0100               	movlb	0	; () banked
  3815  013CB0  2587               	addwf	ETH_Init@mac& (0+255),w,b
  3816  013CB2  6F7B               	movwf	??_ETH_Init& (0+255),b
  3817  013CB4  0E00               	movlw	0
  3818  013CB6  2188               	addwfc	(ETH_Init@mac+1)& (0+255),w,b
  3819  013CB8  6F7C               	movwf	(??_ETH_Init+1)& (0+255),b
  3820  013CBA  C07B  FFF6         	movff	??_ETH_Init,tblptrl
  3821  013CBE  C07C  FFF7         	movff	??_ETH_Init+1,tblptrh
  3822  013CC2                     	if	0	;tblptru may be non-zero
  3823  013CC2                     	endif
  3824  013CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3825  013CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  3826  013CC4  6EF8               	movwf	tblptru,c
  3827  013CC6                     	endif
  3828  013CC6  0008               	tblrd		*
  3829  013CC8  CFF5 FE81          	movff	tablat,3713	;volatile
  3830                           
  3831                           ; BSR set to: 0
  3832  013CCC  F000               	nop	
  3833                           
  3834                           ;ETHxxJ6x_driver.c: 224: ERXFCON = 0b10101011;
  3835  013CCE  0EAB               	movlw	171
  3836  013CD0  010E               	movlb	14	; () banked
  3837  013CD2  6FD8               	movwf	216,b	;volatile
  3838                           
  3839                           ; BSR set to: 14
  3840                           ;ETHxxJ6x_driver.c: 227: ECON1=0x04;
  3841  013CD4  0E04               	movlw	4
  3842  013CD6  6ED2               	movwf	4050,c	;volatile
  3843                           
  3844                           ; BSR set to: 14
  3845                           ;ETHxxJ6x_driver.c: 230: PHY_Write(PHCON1, phycon1_value);
  3846  013CD8  C085  F015         	movff	ETH_Init@phycon1_value,PHY_Write@data
  3847  013CDC  C086  F016         	movff	ETH_Init@phycon1_value+1,PHY_Write@data+1
  3848  013CE0  0E00               	movlw	0
  3849  013CE2  EC38  F0B4         	call	_PHY_Write
  3850                           
  3851                           ;ETHxxJ6x_driver.c: 231: PHY_Write(PHCON2, 0x0110);
  3852  013CE6  0E01               	movlw	1
  3853  013CE8  6E16               	movwf	PHY_Write@data+1,c
  3854  013CEA  0E10               	movlw	16
  3855  013CEC  6E15               	movwf	PHY_Write@data,c
  3856  013CEE  0E10               	movlw	16
  3857  013CF0  EC38  F0B4         	call	_PHY_Write
  3858                           
  3859                           ;ETHxxJ6x_driver.c: 232: PHY_Write(PHLCON, 0b01110101001010);
  3860  013CF4  0E1D               	movlw	29
  3861  013CF6  6E16               	movwf	PHY_Write@data+1,c
  3862  013CF8  0E4A               	movlw	74
  3863  013CFA  6E15               	movwf	PHY_Write@data,c
  3864  013CFC  0E14               	movlw	20
  3865  013CFE  EC38  F0B4         	call	_PHY_Write
  3866                           
  3867                           ;ETHxxJ6x_driver.c: 235: ETH_CheckLinkUp();
  3868  013D02  EC23  F0B4         	call	_ETH_CheckLinkUp	;wreg free
  3869                           
  3870                           ;ETHxxJ6x_driver.c: 238: EIE = 0b01011001;
  3871  013D06  0E59               	movlw	89
  3872  013D08  010E               	movlb	14	; () banked
  3873  013D0A  6FFB               	movwf	251,b	;volatile
  3874                           
  3875                           ; BSR set to: 14
  3876                           ;ETHxxJ6x_driver.c: 239: PHY_Write(PHIE,0x0012);
  3877  013D0C  0E00               	movlw	0
  3878  013D0E  6E16               	movwf	PHY_Write@data+1,c
  3879  013D10  0E12               	movlw	18
  3880  013D12  6E15               	movwf	PHY_Write@data,c
  3881  013D14  0E12               	movlw	18
  3882  013D16  EC38  F0B4         	call	_PHY_Write
  3883  013D1A  0012               	return		;funcret
  3884  013D1C                     __end_of_ETH_Init:
  3885                           	opt stack 0
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           prodh	equ	0xFF4
  3891                           prodl	equ	0xFF3
  3892                           intcon	equ	0xFF2
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           postdec1	equ	0xFE5
  3896                           fsr1l	equ	0xFE1
  3897                           postinc2	equ	0xFDE
  3898                           postdec2	equ	0xFDD
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8
  3902                           
  3903 ;; *************** function _printf *****************
  3904 ;; Defined at:
  3905 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\printf.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  3908 ;;		 -> STR_6(10), STR_5(29), STR_1(58), 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  pb              5   52[COMRAM] struct __prbuf
  3911 ;;  ap              2   50[COMRAM] PTR void [1]
  3912 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  2   13[BANK0 ] int 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3922 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Totals:         7      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;Total ram usage:       21 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    6
  3929 ;; This function calls:
  3930 ;;		__doprnt
  3931 ;; This function is called by:
  3932 ;;		_ETH_Init
  3933 ;;		_SYSLOG_Init
  3934 ;;		_SYSLOG_Write
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text18
  3939  016536                     __ptext18:
  3940                           	opt stack 0
  3941  016536                     _printf:
  3942                           	opt stack 21
  3943                           
  3944                           ;incstack = 0
  3945  016536  0E00               	movlw	0
  3946  016538  6E35               	movwf	printf@pb,c
  3947  01653A  0E00               	movlw	0
  3948  01653C  6E36               	movwf	printf@pb+1,c
  3949  01653E  0E5E               	movlw	low _putch
  3950  016540  6E37               	movwf	printf@pb+2,c
  3951  016542  0E6B               	movlw	high _putch
  3952  016544  6E38               	movwf	printf@pb+3,c
  3953  016546  0E01               	movlw	low (_putch shr (0+16))
  3954  016548  6E39               	movwf	printf@pb+4,c
  3955  01654A  0E6F               	movlw	low (?_printf+2)
  3956  01654C  6E33               	movwf	printf@ap,c
  3957  01654E  0E00               	movlw	high (?_printf+2)
  3958  016550  6E34               	movwf	printf@ap+1,c
  3959                           
  3960                           ;	Return value of _printf is never used
  3961  016552  0E35               	movlw	low printf@pb
  3962  016554  6E29               	movwf	__doprnt@pb,c
  3963  016556  0E00               	movlw	high printf@pb
  3964  016558  6E2A               	movwf	__doprnt@pb+1,c
  3965  01655A  C06D  F02B         	movff	printf@f,__doprnt@f
  3966  01655E  C06E  F02C         	movff	printf@f+1,__doprnt@f+1
  3967  016562  0E33               	movlw	low printf@ap
  3968  016564  6E2D               	movwf	__doprnt@ap,c
  3969  016566  0E00               	movlw	high printf@ap
  3970  016568  6E2E               	movwf	__doprnt@ap+1,c
  3971  01656A  EC04  F08A         	call	__doprnt	;wreg free
  3972  01656E  0012               	return	
  3973  016570                     __end_of_printf:
  3974                           	opt stack 0
  3975                           tblptru	equ	0xFF8
  3976                           tblptrh	equ	0xFF7
  3977                           tblptrl	equ	0xFF6
  3978                           tablat	equ	0xFF5
  3979                           prodh	equ	0xFF4
  3980                           prodl	equ	0xFF3
  3981                           intcon	equ	0xFF2
  3982                           postinc0	equ	0xFEE
  3983                           wreg	equ	0xFE8
  3984                           postdec1	equ	0xFE5
  3985                           fsr1l	equ	0xFE1
  3986                           postinc2	equ	0xFDE
  3987                           postdec2	equ	0xFDD
  3988                           fsr2h	equ	0xFDA
  3989                           fsr2l	equ	0xFD9
  3990                           status	equ	0xFD8
  3991                           
  3992 ;; *************** function __doprnt *****************
  3993 ;; Defined at:
  3994 ;;		line 458 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\doprnt.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  pb              2   40[COMRAM] PTR struct __prbuf
  3997 ;;		 -> sprintf@pb(5), printf@pb(5), 
  3998 ;;  f               2   42[COMRAM] PTR const unsigned char 
  3999 ;;		 -> STR_7(26), STR_6(10), STR_5(29), STR_4(12), 
  4000 ;;		 -> STR_1(58), 
  4001 ;;  ap              2   44[COMRAM] PTR PTR void 
  4002 ;;		 -> sprintf@ap(2), printf@ap(2), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  idx             1    0[BANK0 ] unsigned char 
  4005 ;;  val             4    6[BANK0 ] unsigned long 
  4006 ;;  tmpval          4    0        struct .
  4007 ;;  prec            2   10[BANK0 ] int 
  4008 ;;  cp              2    3[BANK0 ] PTR const unsigned char 
  4009 ;;		 -> ?_sprintf(2), ?_printf(2), STR_9(7), DNS_Lookup@str(80), 
  4010 ;;		 -> makeIpv4AddresstoStr@ip_str(15), NULL(0), 
  4011 ;;  len             2    1[BANK0 ] unsigned int 
  4012 ;;  c               1   12[BANK0 ] char 
  4013 ;;  flag            1    5[BANK0 ] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  2   40[COMRAM] int 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4023 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;Total ram usage:       23 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    5
  4030 ;; This function calls:
  4031 ;;		Absolute function
  4032 ;;		___lldiv
  4033 ;;		___llmod
  4034 ;;		___wmul
  4035 ;;		_isdigit
  4036 ;;		_putch
  4037 ;; This function is called by:
  4038 ;;		_printf
  4039 ;;		_sprintf
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text19
  4044  011408                     __ptext19:
  4045                           	opt stack 0
  4046  011408                     __doprnt:
  4047                           	opt stack 21
  4048                           
  4049                           ;doprnt.c: 499: signed char c;
  4050                           ;doprnt.c: 504: int prec;
  4051                           ;doprnt.c: 508: unsigned char flag;
  4052                           ;doprnt.c: 523: union {
  4053                           ;doprnt.c: 524: unsigned long vd;
  4054                           ;doprnt.c: 525: double integ;
  4055                           ;doprnt.c: 526: } tmpval;
  4056                           ;doprnt.c: 528: unsigned long val;
  4057                           ;doprnt.c: 529: unsigned len;
  4058                           ;doprnt.c: 530: const char * cp;
  4059                           ;doprnt.c: 536: while(c = *f++) {
  4060                           
  4061                           ;incstack = 0
  4062  011408  D348               	goto	u11230
  4063  01140A                     
  4064                           ;doprnt.c: 538: if(c != '%')
  4065  01140A  0E25               	movlw	37
  4066  01140C  0100               	movlb	0	; () banked
  4067  01140E  196C               	xorwf	__doprnt@c& (0+255),w,b
  4068  011410  B4D8               	btfsc	status,2,c
  4069  011412  D034               	goto	l1939
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;doprnt.c: 540: {
  4073                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4074  011414  EE20 F002          	lfsr	2,2
  4075  011418  5029               	movf	__doprnt@pb,w,c
  4076  01141A  26D9               	addwf	fsr2l,f,c
  4077  01141C  502A               	movf	__doprnt@pb+1,w,c
  4078  01141E  22DA               	addwfc	fsr2h,f,c
  4079  011420  50DE               	movf	postinc2,w,c
  4080  011422  10DE               	iorwf	postinc2,w,c
  4081  011424  10DE               	iorwf	postinc2,w,c
  4082  011426  B4D8               	btfsc	status,2,c
  4083  011428  D013               	goto	l1940
  4084                           
  4085                           ; BSR set to: 0
  4086  01142A  EE20 F002          	lfsr	2,2
  4087  01142E  5029               	movf	__doprnt@pb,w,c
  4088  011430  26D9               	addwf	fsr2l,f,c
  4089  011432  502A               	movf	__doprnt@pb+1,w,c
  4090  011434  22DA               	addwfc	fsr2h,f,c
  4091  011436  D801               	call	u10918
  4092  011438  D330               	goto	u11230
  4093  01143A                     u10918:
  4094  01143A  0005               	push	
  4095  01143C  6EFA               	movwf	pclath,c
  4096  01143E  50DE               	movf	postinc2,w,c
  4097  011440  6EFD               	movwf	tosl,c
  4098  011442  50DE               	movf	postinc2,w,c
  4099  011444  6EFE               	movwf	tosh,c
  4100  011446  50DE               	movf	postinc2,w,c
  4101  011448  6EFF               	movwf	tosu,c
  4102  01144A  50FA               	movf	pclath,w,c
  4103  01144C  516C               	movf	__doprnt@c& (0+255),w,b
  4104  01144E  0012               	return		;indir
  4105  011450                     l1940:
  4106  011450  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4107  011454  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4108  011458  CFDE F02F          	movff	postinc2,??__doprnt
  4109  01145C  CFDD F030          	movff	postdec2,??__doprnt+1
  4110  011460  C02F  FFD9         	movff	??__doprnt,fsr2l
  4111  011464  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4112  011468  C06C  FFDF         	movff	__doprnt@c,indf2
  4113  01146C  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4114  011470  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4115  011474  2ADE               	incf	postinc2,f,c
  4116  011476  0E00               	movlw	0
  4117  011478  22DD               	addwfc	postdec2,f,c
  4118                           
  4119                           ;doprnt.c: 542: continue;
  4120  01147A  D30F               	goto	u11230
  4121  01147C                     l1939:
  4122                           
  4123                           ;doprnt.c: 543: }
  4124                           ;doprnt.c: 548: flag = 0;
  4125  01147C  0E00               	movlw	0
  4126  01147E  0100               	movlb	0	; () banked
  4127  011480  6F65               	movwf	__doprnt@flag& (0+255),b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;doprnt.c: 611: if(*f == '.') {
  4131  011482  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4132  011486  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4133  01148A                     	if	0	;tblptru may be non-zero
  4134  01148A                     	endif
  4135  01148A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4136  01148A  0E00               	movlw	low (__mediumconst shr (0+16))
  4137  01148C  6EF8               	movwf	tblptru,c
  4138  01148E                     	endif
  4139  01148E  0008               	tblrd		*
  4140  011490  50F5               	movf	tablat,w,c
  4141  011492  0A2E               	xorlw	46
  4142  011494  A4D8               	btfss	status,2,c
  4143  011496  D032               	goto	l1942
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;doprnt.c: 613: f++;
  4147  011498  4A2B               	infsnz	__doprnt@f,f,c
  4148  01149A  2A2C               	incf	__doprnt@f+1,f,c
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;doprnt.c: 620: {
  4152                           ;doprnt.c: 621: prec = 0;
  4153  01149C  0E00               	movlw	0
  4154  01149E  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  4155  0114A0  0E00               	movlw	0
  4156  0114A2  6F6A               	movwf	__doprnt@prec& (0+255),b
  4157                           
  4158                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4159  0114A4  D01E               	goto	l1943
  4160  0114A6                     
  4161                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4162                           
  4163                           ; BSR set to: 0
  4164  0114A6  C06A  F013         	movff	__doprnt@prec,___wmul@multiplier
  4165  0114AA  C06B  F014         	movff	__doprnt@prec+1,___wmul@multiplier+1
  4166  0114AE  0E00               	movlw	0
  4167  0114B0  6E16               	movwf	___wmul@multiplicand+1,c
  4168  0114B2  0E0A               	movlw	10
  4169  0114B4  6E15               	movwf	___wmul@multiplicand,c
  4170  0114B6  EC5F  F0B4         	call	___wmul
  4171  0114BA  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4172  0114BE  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4173  0114C2                     	if	0	;tblptru may be non-zero
  4174  0114C2                     	endif
  4175  0114C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4176  0114C2  0E00               	movlw	low (__mediumconst shr (0+16))
  4177  0114C4  6EF8               	movwf	tblptru,c
  4178  0114C6                     	endif
  4179  0114C6  0008               	tblrd		*
  4180  0114C8  50F5               	movf	tablat,w,c
  4181  0114CA  2613               	addwf	?___wmul,f,c
  4182  0114CC  0E00               	movlw	0
  4183  0114CE  2214               	addwfc	?___wmul+1,f,c
  4184  0114D0  0ED0               	movlw	208
  4185  0114D2  2413               	addwf	?___wmul,w,c
  4186  0114D4  0100               	movlb	0	; () banked
  4187  0114D6  6F6A               	movwf	__doprnt@prec& (0+255),b
  4188  0114D8  0EFF               	movlw	255
  4189  0114DA  2014               	addwfc	?___wmul+1,w,c
  4190  0114DC  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  4191                           
  4192                           ; BSR set to: 0
  4193  0114DE  4A2B               	infsnz	__doprnt@f,f,c
  4194  0114E0  2A2C               	incf	__doprnt@f+1,f,c
  4195  0114E2                     l1943:
  4196                           
  4197                           ; BSR set to: 0
  4198                           
  4199                           ; BSR set to: 0
  4200  0114E2  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4201  0114E6  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4202  0114EA                     	if	0	;tblptru may be non-zero
  4203  0114EA                     	endif
  4204  0114EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4205  0114EA  0E00               	movlw	low (__mediumconst shr (0+16))
  4206  0114EC  6EF8               	movwf	tblptru,c
  4207  0114EE                     	endif
  4208  0114EE  0008               	tblrd		*
  4209  0114F0  50F5               	movf	tablat,w,c
  4210  0114F2  ECC9  F0B4         	call	_isdigit
  4211  0114F6  A0D8               	btfss	status,0,c
  4212  0114F8  D0BF               	goto	l1948
  4213  0114FA  D7D5               	goto	l1944
  4214  0114FC                     l1942:
  4215                           
  4216                           ;doprnt.c: 626: prec = 0;
  4217  0114FC  0E00               	movlw	0
  4218  0114FE  0100               	movlb	0	; () banked
  4219  011500  6F6B               	movwf	(__doprnt@prec+1)& (0+255),b
  4220  011502  0E00               	movlw	0
  4221  011504  6F6A               	movwf	__doprnt@prec& (0+255),b
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;doprnt.c: 635: switch(c = *f++) {
  4225                           
  4226                           ;doprnt.c: 630: }
  4227                           ;doprnt.c: 633: loop:
  4228                           
  4229                           ; BSR set to: 0
  4230  011506  D0B8               	goto	l1948
  4231  011508                     
  4232                           ; BSR set to: 0
  4233                           ;doprnt.c: 643: flag |= 0x10;
  4234                           
  4235                           ; BSR set to: 0
  4236  011508  8965               	bsf	__doprnt@flag& (0+255),4,b
  4237                           
  4238                           ;doprnt.c: 644: goto loop;
  4239  01150A  D0B6               	goto	l1948
  4240  01150C                     
  4241                           ; BSR set to: 0
  4242                           ;doprnt.c: 718: case 'x':
  4243                           ;doprnt.c: 721: flag |= 0x80;
  4244                           
  4245                           ; BSR set to: 0
  4246                           
  4247                           ; BSR set to: 0
  4248  01150C  8F65               	bsf	__doprnt@flag& (0+255),7,b
  4249                           
  4250                           ;doprnt.c: 723: break;
  4251  01150E  D0DA               	goto	l1954
  4252  011510                     
  4253                           ; BSR set to: 0
  4254                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4255                           
  4256                           ; BSR set to: 0
  4257  011510  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4258  011514  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4259  011518  CFDF F02F          	movff	indf2,??__doprnt
  4260  01151C  0E02               	movlw	2
  4261  01151E  26DE               	addwf	postinc2,f,c
  4262  011520  CFDF F030          	movff	indf2,??__doprnt+1
  4263  011524  0E00               	movlw	0
  4264  011526  22DD               	addwfc	postdec2,f,c
  4265  011528  C02F  FFD9         	movff	??__doprnt,fsr2l
  4266  01152C  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4267  011530  CFDE F063          	movff	postinc2,__doprnt@cp
  4268  011534  CFDD F064          	movff	postdec2,__doprnt@cp+1
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;doprnt.c: 740: if(!cp)
  4272  011538  5163               	movf	__doprnt@cp& (0+255),w,b
  4273  01153A  1164               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  4274  01153C  A4D8               	btfss	status,2,c
  4275  01153E  D004               	goto	l1958
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;doprnt.c: 741: cp = "(null)";
  4279  011540  0EF5               	movlw	low STR_9
  4280  011542  6F63               	movwf	__doprnt@cp& (0+255),b
  4281  011544  0EFF               	movlw	high STR_9
  4282  011546  6F64               	movwf	(__doprnt@cp+1)& (0+255),b
  4283  011548                     l1958:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;doprnt.c: 745: len = 0;
  4287                           
  4288                           ; BSR set to: 0
  4289  011548  0E00               	movlw	0
  4290  01154A  6F62               	movwf	(__doprnt@len+1)& (0+255),b
  4291  01154C  0E00               	movlw	0
  4292  01154E  6F61               	movwf	__doprnt@len& (0+255),b
  4293                           
  4294                           ;doprnt.c: 746: while(cp[len])
  4295  011550  D003               	goto	l1959
  4296  011552                     
  4297                           ;doprnt.c: 747: len++;
  4298                           
  4299                           ; BSR set to: 0
  4300  011552  0100               	movlb	0	; () banked
  4301  011554  4B61               	infsnz	__doprnt@len& (0+255),f,b
  4302  011556  2B62               	incf	(__doprnt@len+1)& (0+255),f,b
  4303  011558                     l1959:
  4304                           
  4305                           ; BSR set to: 0
  4306                           
  4307                           ; BSR set to: 0
  4308  011558  5161               	movf	__doprnt@len& (0+255),w,b
  4309  01155A  2563               	addwf	__doprnt@cp& (0+255),w,b
  4310  01155C  6E2F               	movwf	??__doprnt& (0+255),c
  4311  01155E  5162               	movf	(__doprnt@len+1)& (0+255),w,b
  4312  011560  2164               	addwfc	(__doprnt@cp+1)& (0+255),w,b
  4313  011562  6E30               	movwf	(??__doprnt+1)& (0+255),c
  4314  011564  C02F  FFF6         	movff	??__doprnt,tblptrl
  4315  011568  C030  FFF7         	movff	??__doprnt+1,tblptrh
  4316  01156C  0E00               	movlw	low (__mediumconst shr (0+16))
  4317  01156E  6EF8               	movwf	tblptru,c
  4318  011570  0E0F               	movlw	(high __ramtop+-1)
  4319  011572  64F7               	cpfsgt	tblptrh,c
  4320  011574  D003               	bra	u10957
  4321  011576  0008               	tblrd		*
  4322  011578  50F5               	movf	tablat,w,c
  4323  01157A  D005               	bra	u10950
  4324  01157C                     u10957:
  4325  01157C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4326  011580  CFF7 FFEA          	movff	tblptrh,fsr0h
  4327  011584  50EF               	movf	indf0,w,c
  4328  011586                     u10950:
  4329  011586  0900               	iorlw	0
  4330  011588  A4D8               	btfss	status,2,c
  4331  01158A  D7E3               	goto	l1960
  4332                           
  4333                           ;doprnt.c: 753: if(prec && prec < len)
  4334  01158C  0100               	movlb	0	; () banked
  4335  01158E  516A               	movf	__doprnt@prec& (0+255),w,b
  4336  011590  116B               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  4337  011592  B4D8               	btfsc	status,2,c
  4338  011594  D065               	goto	l1966
  4339                           
  4340                           ; BSR set to: 0
  4341  011596  5161               	movf	__doprnt@len& (0+255),w,b
  4342  011598  5D6A               	subwf	__doprnt@prec& (0+255),w,b
  4343  01159A  5162               	movf	(__doprnt@len+1)& (0+255),w,b
  4344  01159C  596B               	subwfb	(__doprnt@prec+1)& (0+255),w,b
  4345  01159E  B0D8               	btfsc	status,0,c
  4346  0115A0  D05F               	goto	l1966
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;doprnt.c: 754: len = prec;
  4350  0115A2  C06A  F061         	movff	__doprnt@prec,__doprnt@len
  4351  0115A6  C06B  F062         	movff	__doprnt@prec+1,__doprnt@len+1
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;doprnt.c: 767: while(len--)
  4355  0115AA  D05A               	goto	l1966
  4356  0115AC                     l11216:
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4360  0115AC  EE20 F002          	lfsr	2,2
  4361  0115B0  5029               	movf	__doprnt@pb,w,c
  4362  0115B2  26D9               	addwf	fsr2l,f,c
  4363  0115B4  502A               	movf	__doprnt@pb+1,w,c
  4364  0115B6  22DA               	addwfc	fsr2h,f,c
  4365  0115B8  50DE               	movf	postinc2,w,c
  4366  0115BA  10DE               	iorwf	postinc2,w,c
  4367  0115BC  10DE               	iorwf	postinc2,w,c
  4368  0115BE  B4D8               	btfsc	status,2,c
  4369  0115C0  D027               	goto	l1965
  4370                           
  4371                           ; BSR set to: 0
  4372  0115C2  EE20 F002          	lfsr	2,2
  4373  0115C6  5029               	movf	__doprnt@pb,w,c
  4374  0115C8  26D9               	addwf	fsr2l,f,c
  4375  0115CA  502A               	movf	__doprnt@pb+1,w,c
  4376  0115CC  22DA               	addwfc	fsr2h,f,c
  4377  0115CE  D801               	call	u11008
  4378  0115D0  D01B               	goto	u11009
  4379  0115D2                     u11008:
  4380  0115D2  0005               	push	
  4381  0115D4  6EFA               	movwf	pclath,c
  4382  0115D6  50DE               	movf	postinc2,w,c
  4383  0115D8  6EFD               	movwf	tosl,c
  4384  0115DA  50DE               	movf	postinc2,w,c
  4385  0115DC  6EFE               	movwf	tosh,c
  4386  0115DE  50DE               	movf	postinc2,w,c
  4387  0115E0  6EFF               	movwf	tosu,c
  4388  0115E2  50FA               	movf	pclath,w,c
  4389  0115E4  C063  FFF6         	movff	__doprnt@cp,tblptrl
  4390  0115E8  C064  FFF7         	movff	__doprnt@cp+1,tblptrh
  4391  0115EC  0E00               	movlw	low (__mediumconst shr (0+16))
  4392  0115EE  6EF8               	movwf	tblptru,c
  4393  0115F0  0E0F               	movlw	(high __ramtop+-1)
  4394  0115F2  64F7               	cpfsgt	tblptrh,c
  4395  0115F4  D003               	bra	u11017
  4396  0115F6  0008               	tblrd		*
  4397  0115F8  50F5               	movf	tablat,w,c
  4398  0115FA  D005               	bra	u11010
  4399  0115FC                     u11017:
  4400  0115FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  4401  011600  CFF7 FFEA          	movff	tblptrh,fsr0h
  4402  011604  50EF               	movf	indf0,w,c
  4403  011606                     u11010:
  4404  011606  0012               	return		;indir
  4405  011608                     u11009:
  4406  011608  0100               	movlb	0	; () banked
  4407  01160A  4B63               	infsnz	__doprnt@cp& (0+255),f,b
  4408  01160C  2B64               	incf	(__doprnt@cp+1)& (0+255),f,b
  4409  01160E  D028               	goto	l1966
  4410  011610                     l1965:
  4411                           
  4412                           ; BSR set to: 0
  4413                           
  4414                           ; BSR set to: 0
  4415  011610  C063  FFF6         	movff	__doprnt@cp,tblptrl
  4416  011614  C064  FFF7         	movff	__doprnt@cp+1,tblptrh
  4417  011618  0E00               	movlw	low (__mediumconst shr (0+16))
  4418  01161A  6EF8               	movwf	tblptru,c
  4419  01161C  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4420  011620  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4421  011624  CFDE F02F          	movff	postinc2,??__doprnt
  4422  011628  CFDD F030          	movff	postdec2,??__doprnt+1
  4423  01162C  C02F  FFD9         	movff	??__doprnt,fsr2l
  4424  011630  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4425  011634  0E0F               	movlw	(high __ramtop+-1)
  4426  011636  64F7               	cpfsgt	tblptrh,c
  4427  011638  D003               	bra	u11027
  4428  01163A  0008               	tblrd		*
  4429  01163C  50F5               	movf	tablat,w,c
  4430  01163E  D005               	bra	u11020
  4431  011640                     u11027:
  4432  011640  CFF6 FFE9          	movff	tblptrl,fsr0l
  4433  011644  CFF7 FFEA          	movff	tblptrh,fsr0h
  4434  011648  50EF               	movf	indf0,w,c
  4435  01164A                     u11020:
  4436  01164A  6EDF               	movwf	indf2,c
  4437  01164C  0100               	movlb	0	; () banked
  4438  01164E  4B63               	infsnz	__doprnt@cp& (0+255),f,b
  4439  011650  2B64               	incf	(__doprnt@cp+1)& (0+255),f,b
  4440                           
  4441                           ; BSR set to: 0
  4442  011652  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4443  011656  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4444  01165A  2ADE               	incf	postinc2,f,c
  4445  01165C  0E00               	movlw	0
  4446  01165E  22DD               	addwfc	postdec2,f,c
  4447  011660                     l1966:
  4448                           
  4449                           ; BSR set to: 0
  4450                           
  4451                           ; BSR set to: 0
  4452                           
  4453                           ; BSR set to: 0
  4454  011660  0761               	decf	__doprnt@len& (0+255),f,b
  4455  011662  A0D8               	btfss	status,0,c
  4456  011664  0762               	decf	(__doprnt@len+1)& (0+255),f,b
  4457  011666  2961               	incf	__doprnt@len& (0+255),w,b
  4458  011668  E1A1               	bnz	l11216
  4459  01166A  2962               	incf	(__doprnt@len+1)& (0+255),w,b
  4460  01166C  B4D8               	btfsc	status,2,c
  4461  01166E  D215               	goto	u11230
  4462  011670  D79D               	goto	l1964
  4463  011672                     
  4464                           ; BSR set to: 0
  4465                           ;doprnt.c: 818: flag |= 0xC0;
  4466                           
  4467                           ; BSR set to: 0
  4468  011672  0EC0               	movlw	192
  4469  011674  1365               	iorwf	__doprnt@flag& (0+255),f,b
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;doprnt.c: 822: }
  4473                           
  4474                           ;doprnt.c: 819: break;
  4475  011676  D026               	goto	l1954
  4476  011678                     l1948:
  4477                           
  4478                           ; BSR set to: 0
  4479  011678  C02B  FFF6         	movff	__doprnt@f,tblptrl
  4480  01167C  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  4481  011680  4A2B               	infsnz	__doprnt@f,f,c
  4482  011682  2A2C               	incf	__doprnt@f+1,f,c
  4483  011684                     	if	0	;tblptru may be non-zero
  4484  011684                     	endif
  4485  011684                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4486  011684  0E00               	movlw	low (__mediumconst shr (0+16))
  4487  011686  6EF8               	movwf	tblptru,c
  4488  011688                     	endif
  4489  011688  0008               	tblrd		*
  4490  01168A  CFF5 F06C          	movff	tablat,__doprnt@c
  4491  01168E  0100               	movlb	0	; () banked
  4492  011690  516C               	movf	__doprnt@c& (0+255),w,b
  4493                           
  4494                           ; Switch size 1, requested type "space"
  4495                           ; Number of cases is 8, Range of values is 0 to 120
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte           25    13 (average)
  4499                           ;	Chosen strategy is simple_byte
  4500  011692  0A00               	xorlw	0	; case 0
  4501  011694  B4D8               	btfsc	status,2,c
  4502  011696  D210               	goto	u11240
  4503  011698  0A58               	xorlw	88	; case 88
  4504  01169A  B4D8               	btfsc	status,2,c
  4505  01169C  D737               	goto	l1955
  4506  01169E  0A3C               	xorlw	60	; case 100
  4507  0116A0  B4D8               	btfsc	status,2,c
  4508  0116A2  D010               	goto	l1954
  4509  0116A4  0A0D               	xorlw	13	; case 105
  4510  0116A6  B4D8               	btfsc	status,2,c
  4511  0116A8  D00D               	goto	l1954
  4512  0116AA  0A05               	xorlw	5	; case 108
  4513  0116AC  B4D8               	btfsc	status,2,c
  4514  0116AE  D72C               	goto	l1951
  4515  0116B0  0A1F               	xorlw	31	; case 115
  4516  0116B2  B4D8               	btfsc	status,2,c
  4517  0116B4  D72D               	goto	l1957
  4518  0116B6  0A06               	xorlw	6	; case 117
  4519  0116B8  B4D8               	btfsc	status,2,c
  4520  0116BA  D7DB               	goto	l1969
  4521  0116BC  0A0D               	xorlw	13	; case 120
  4522  0116BE  B4D8               	btfsc	status,2,c
  4523  0116C0  D725               	goto	l1955
  4524  0116C2  D1EB               	goto	u11230
  4525  0116C4                     l1954:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  4529                           
  4530                           ; BSR set to: 0
  4531  0116C4  C065  F02F         	movff	__doprnt@flag,??__doprnt
  4532  0116C8  0EC0               	movlw	192
  4533  0116CA  162F               	andwf	??__doprnt,f,c
  4534  0116CC  A4D8               	btfss	status,2,c
  4535  0116CE  D041               	goto	l1970
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;doprnt.c: 1253: {
  4539                           ;doprnt.c: 1255: if(flag & 0x10)
  4540  0116D0  A965               	btfss	__doprnt@flag& (0+255),4,b
  4541  0116D2  D019               	goto	l1971
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  4545  0116D4  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4546  0116D8  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4547  0116DC  CFDF F02F          	movff	indf2,??__doprnt
  4548  0116E0  0E04               	movlw	4
  4549  0116E2  26DE               	addwf	postinc2,f,c
  4550  0116E4  CFDF F030          	movff	indf2,??__doprnt+1
  4551  0116E8  0E00               	movlw	0
  4552  0116EA  22DD               	addwfc	postdec2,f,c
  4553  0116EC  C02F  FFD9         	movff	??__doprnt,fsr2l
  4554  0116F0  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4555  0116F4  CFDE F066          	movff	postinc2,__doprnt@val
  4556  0116F8  CFDE F067          	movff	postinc2,__doprnt@val+1
  4557  0116FC  CFDE F068          	movff	postinc2,__doprnt@val+2
  4558  011700  CFDE F069          	movff	postinc2,__doprnt@val+3
  4559  011704  D019               	goto	l1972
  4560  011706                     l1971:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;doprnt.c: 1257: else
  4564                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4565                           
  4566                           ; BSR set to: 0
  4567  011706  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4568  01170A  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4569  01170E  CFDF F02F          	movff	indf2,??__doprnt
  4570  011712  0E02               	movlw	2
  4571  011714  26DE               	addwf	postinc2,f,c
  4572  011716  CFDF F030          	movff	indf2,??__doprnt+1
  4573  01171A  0E00               	movlw	0
  4574  01171C  22DD               	addwfc	postdec2,f,c
  4575  01171E  C02F  FFD9         	movff	??__doprnt,fsr2l
  4576  011722  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4577  011726  CFDE F066          	movff	postinc2,__doprnt@val
  4578  01172A  CFDD F067          	movff	postdec2,__doprnt@val+1
  4579  01172E  0E00               	movlw	0
  4580  011730  BF67               	btfsc	(__doprnt@val+1)& (0+255),7,b
  4581  011732  0EFF               	movlw	-1
  4582  011734  6F68               	movwf	(__doprnt@val+2)& (0+255),b
  4583  011736  6F69               	movwf	(__doprnt@val+3)& (0+255),b
  4584  011738                     l1972:
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;doprnt.c: 1261: if((long)val < 0) {
  4588                           
  4589                           ; BSR set to: 0
  4590  011738  AF69               	btfss	(__doprnt@val+3)& (0+255),7,b
  4591  01173A  D040               	goto	l1976
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;doprnt.c: 1262: flag |= 0x03;
  4595  01173C  0E03               	movlw	3
  4596  01173E  1365               	iorwf	__doprnt@flag& (0+255),f,b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;doprnt.c: 1263: val = -val;
  4600  011740  1F69               	comf	(__doprnt@val+3)& (0+255),f,b
  4601  011742  1F68               	comf	(__doprnt@val+2)& (0+255),f,b
  4602  011744  1F67               	comf	(__doprnt@val+1)& (0+255),f,b
  4603  011746  6D66               	negf	__doprnt@val& (0+255),b
  4604  011748  0E00               	movlw	0
  4605  01174A  2367               	addwfc	(__doprnt@val+1)& (0+255),f,b
  4606  01174C  2368               	addwfc	(__doprnt@val+2)& (0+255),f,b
  4607  01174E  2369               	addwfc	(__doprnt@val+3)& (0+255),f,b
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;doprnt.c: 1264: }
  4611                           ;doprnt.c: 1266: }
  4612  011750  D035               	goto	l1976
  4613  011752                     l1970:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;doprnt.c: 1268: else
  4617                           ;doprnt.c: 1273: {
  4618                           ;doprnt.c: 1281: if(flag & 0x10)
  4619  011752  A965               	btfss	__doprnt@flag& (0+255),4,b
  4620  011754  D019               	goto	l1975
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4624  011756  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4625  01175A  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4626  01175E  CFDF F02F          	movff	indf2,??__doprnt
  4627  011762  0E04               	movlw	4
  4628  011764  26DE               	addwf	postinc2,f,c
  4629  011766  CFDF F030          	movff	indf2,??__doprnt+1
  4630  01176A  0E00               	movlw	0
  4631  01176C  22DD               	addwfc	postdec2,f,c
  4632  01176E  C02F  FFD9         	movff	??__doprnt,fsr2l
  4633  011772  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4634  011776  CFDE F066          	movff	postinc2,__doprnt@val
  4635  01177A  CFDE F067          	movff	postinc2,__doprnt@val+1
  4636  01177E  CFDE F068          	movff	postinc2,__doprnt@val+2
  4637  011782  CFDE F069          	movff	postinc2,__doprnt@val+3
  4638  011786  D01A               	goto	l1976
  4639  011788                     l1975:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;doprnt.c: 1283: else
  4643                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4644                           
  4645                           ; BSR set to: 0
  4646  011788  C02D  FFD9         	movff	__doprnt@ap,fsr2l
  4647  01178C  C02E  FFDA         	movff	__doprnt@ap+1,fsr2h
  4648  011790  CFDF F02F          	movff	indf2,??__doprnt
  4649  011794  0E02               	movlw	2
  4650  011796  26DE               	addwf	postinc2,f,c
  4651  011798  CFDF F030          	movff	indf2,??__doprnt+1
  4652  01179C  0E00               	movlw	0
  4653  01179E  22DD               	addwfc	postdec2,f,c
  4654  0117A0  C02F  FFD9         	movff	??__doprnt,fsr2l
  4655  0117A4  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4656  0117A8  CFDE F031          	movff	postinc2,??__doprnt+2
  4657  0117AC  CFDD F032          	movff	postdec2,??__doprnt+3
  4658  0117B0  C031  F066         	movff	??__doprnt+2,__doprnt@val
  4659  0117B4  C032  F067         	movff	??__doprnt+3,__doprnt@val+1
  4660  0117B8  6B68               	clrf	(__doprnt@val+2)& (0+255),b
  4661  0117BA  6B69               	clrf	(__doprnt@val+3)& (0+255),b
  4662  0117BC                     l1976:
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;doprnt.c: 1287: }
  4666                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4667                           
  4668                           ; BSR set to: 0
  4669                           
  4670                           ; BSR set to: 0
  4671  0117BC  516A               	movf	__doprnt@prec& (0+255),w,b
  4672  0117BE  116B               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  4673  0117C0  A4D8               	btfss	status,2,c
  4674  0117C2  D04B               	goto	l1978
  4675                           
  4676                           ; BSR set to: 0
  4677  0117C4  5166               	movf	__doprnt@val& (0+255),w,b
  4678  0117C6  1167               	iorwf	(__doprnt@val+1)& (0+255),w,b
  4679  0117C8  1168               	iorwf	(__doprnt@val+2)& (0+255),w,b
  4680  0117CA  1169               	iorwf	(__doprnt@val+3)& (0+255),w,b
  4681  0117CC  A4D8               	btfss	status,2,c
  4682  0117CE  D045               	goto	l1978
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;doprnt.c: 1291: prec++;
  4686  0117D0  4B6A               	infsnz	__doprnt@prec& (0+255),f,b
  4687  0117D2  2B6B               	incf	(__doprnt@prec+1)& (0+255),f,b
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  4691  0117D4  D042               	goto	l1978
  4692  0117D6                     
  4693                           ; BSR set to: 0
  4694                           ;doprnt.c: 1302: case 0xC0:
  4695                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4696                           
  4697                           ; BSR set to: 0
  4698                           
  4699                           ; BSR set to: 0
  4700  0117D6  0E01               	movlw	1
  4701  0117D8  6F6C               	movwf	__doprnt@c& (0+255),b
  4702  0117DA                     l11262:
  4703                           
  4704                           ; BSR set to: 0
  4705  0117DA  0E0A               	movlw	10
  4706  0117DC  196C               	xorwf	__doprnt@c& (0+255),w,b
  4707  0117DE  B4D8               	btfsc	status,2,c
  4708  0117E0  D047               	goto	l1984
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;doprnt.c: 1306: if(val < dpowers[c])
  4712                           
  4713                           ; BSR set to: 0
  4714                           
  4715                           ; BSR set to: 0
  4716  0117E2  516C               	movf	__doprnt@c& (0+255),w,b
  4717  0117E4  0D04               	mullw	4
  4718  0117E6  0EC7               	movlw	low _dpowers
  4719  0117E8  24F3               	addwf	prodl,w,c
  4720  0117EA  6EF6               	movwf	tblptrl,c
  4721  0117EC  0EFE               	movlw	high _dpowers
  4722  0117EE  20F4               	addwfc	prodh,w,c
  4723  0117F0  6EF7               	movwf	tblptrh,c
  4724  0117F2                     	if	1	;There are 3 active tblptr bytes
  4725  0117F2  6AF8               	clrf	tblptru,c
  4726  0117F4  0E00               	movlw	low (__mediumconst shr (0+16))
  4727  0117F6  22F8               	addwfc	tblptru,f,c
  4728  0117F8                     	endif
  4729  0117F8  0009               	tblrd		*+
  4730  0117FA  50F5               	movf	tablat,w,c
  4731  0117FC  5D66               	subwf	__doprnt@val& (0+255),w,b
  4732  0117FE  0009               	tblrd		*+
  4733  011800  50F5               	movf	tablat,w,c
  4734  011802  5967               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4735  011804  0009               	tblrd		*+
  4736  011806  50F5               	movf	tablat,w,c
  4737  011808  5968               	subwfb	(__doprnt@val+2)& (0+255),w,b
  4738  01180A  0009               	tblrd		*+
  4739  01180C  50F5               	movf	tablat,w,c
  4740  01180E  5969               	subwfb	(__doprnt@val+3)& (0+255),w,b
  4741  011810  A0D8               	btfss	status,0,c
  4742  011812  D02E               	goto	l1984
  4743                           
  4744                           ; BSR set to: 0
  4745                           
  4746                           ; BSR set to: 0
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;doprnt.c: 1307: break;
  4750  011814  2B6C               	incf	__doprnt@c& (0+255),f,b
  4751  011816  D7E1               	goto	l11262
  4752  011818                     
  4753                           ; BSR set to: 0
  4754                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4755                           
  4756                           ; BSR set to: 0
  4757  011818  0E01               	movlw	1
  4758  01181A  6F6C               	movwf	__doprnt@c& (0+255),b
  4759  01181C                     l11276:
  4760                           
  4761                           ; BSR set to: 0
  4762  01181C  0E08               	movlw	8
  4763  01181E  196C               	xorwf	__doprnt@c& (0+255),w,b
  4764  011820  B4D8               	btfsc	status,2,c
  4765  011822  D026               	goto	l1984
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4769                           
  4770                           ; BSR set to: 0
  4771                           
  4772                           ; BSR set to: 0
  4773  011824  516C               	movf	__doprnt@c& (0+255),w,b
  4774  011826  0D04               	mullw	4
  4775  011828  0EEF               	movlw	low _hexpowers
  4776  01182A  24F3               	addwf	prodl,w,c
  4777  01182C  6EF6               	movwf	tblptrl,c
  4778  01182E  0EFE               	movlw	high _hexpowers
  4779  011830  20F4               	addwfc	prodh,w,c
  4780  011832  6EF7               	movwf	tblptrh,c
  4781  011834                     	if	1	;There are 3 active tblptr bytes
  4782  011834  6AF8               	clrf	tblptru,c
  4783  011836  0E00               	movlw	low (__mediumconst shr (0+16))
  4784  011838  22F8               	addwfc	tblptru,f,c
  4785  01183A                     	endif
  4786  01183A  0009               	tblrd		*+
  4787  01183C  50F5               	movf	tablat,w,c
  4788  01183E  5D66               	subwf	__doprnt@val& (0+255),w,b
  4789  011840  0009               	tblrd		*+
  4790  011842  50F5               	movf	tablat,w,c
  4791  011844  5967               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4792  011846  0009               	tblrd		*+
  4793  011848  50F5               	movf	tablat,w,c
  4794  01184A  5968               	subwfb	(__doprnt@val+2)& (0+255),w,b
  4795  01184C  0009               	tblrd		*+
  4796  01184E  50F5               	movf	tablat,w,c
  4797  011850  5969               	subwfb	(__doprnt@val+3)& (0+255),w,b
  4798  011852  A0D8               	btfss	status,0,c
  4799  011854  D00D               	goto	l1984
  4800                           
  4801                           ; BSR set to: 0
  4802                           
  4803                           ; BSR set to: 0
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;doprnt.c: 1318: break;
  4807  011856  2B6C               	incf	__doprnt@c& (0+255),f,b
  4808  011858  D7E1               	goto	l11276
  4809  01185A                     l1978:
  4810                           
  4811                           ; BSR set to: 0
  4812                           
  4813                           ; BSR set to: 0
  4814  01185A  5165               	movf	__doprnt@flag& (0+255),w,b
  4815  01185C  0BC0               	andlw	192
  4816                           
  4817                           ; Switch size 1, requested type "space"
  4818                           ; Number of cases is 3, Range of values is 0 to 192
  4819                           ; switch strategies available:
  4820                           ; Name         Instructions Cycles
  4821                           ; simple_byte           10     6 (average)
  4822                           ;	Chosen strategy is simple_byte
  4823  01185E  0A00               	xorlw	0	; case 0
  4824  011860  B4D8               	btfsc	status,2,c
  4825  011862  D7B9               	goto	l1979
  4826  011864  0A80               	xorlw	128	; case 128
  4827  011866  B4D8               	btfsc	status,2,c
  4828  011868  D7D7               	goto	l1985
  4829  01186A  0A40               	xorlw	64	; case 192
  4830  01186C  B4D8               	btfsc	status,2,c
  4831  01186E  D7B3               	goto	l1979
  4832  011870                     l1984:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;doprnt.c: 1339: if(c < prec)
  4836                           
  4837                           ; BSR set to: 0
  4838  011870  0E80               	movlw	128
  4839  011872  BF6C               	btfsc	__doprnt@c& (0+255),7,b
  4840  011874  0E7F               	movlw	127
  4841  011876  6E2F               	movwf	??__doprnt& (0+255),c
  4842  011878  516A               	movf	__doprnt@prec& (0+255),w,b
  4843  01187A  5D6C               	subwf	__doprnt@c& (0+255),w,b
  4844  01187C  516B               	movf	(__doprnt@prec+1)& (0+255),w,b
  4845  01187E  0A80               	xorlw	128
  4846  011880  582F               	subwfb	??__doprnt& (0+255),w,c
  4847  011882  B0D8               	btfsc	status,0,c
  4848  011884  D003               	goto	l1989
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;doprnt.c: 1340: c = prec;
  4852  011886  C06A  F06C         	movff	__doprnt@prec,__doprnt@c
  4853  01188A  D010               	goto	l1991
  4854  01188C                     l1989:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;doprnt.c: 1341: else if(prec < c)
  4858                           
  4859                           ; BSR set to: 0
  4860  01188C  516B               	movf	(__doprnt@prec+1)& (0+255),w,b
  4861  01188E  0A80               	xorlw	128
  4862  011890  6E2F               	movwf	??__doprnt& (0+255),c
  4863  011892  516C               	movf	__doprnt@c& (0+255),w,b
  4864  011894  5D6A               	subwf	__doprnt@prec& (0+255),w,b
  4865  011896  0E80               	movlw	128
  4866  011898  BF6C               	btfsc	__doprnt@c& (0+255),7,b
  4867  01189A  0E7F               	movlw	127
  4868  01189C  582F               	subwfb	??__doprnt& (0+255),w,c
  4869  01189E  B0D8               	btfsc	status,0,c
  4870  0118A0  D005               	goto	l1991
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;doprnt.c: 1342: prec = c;
  4874  0118A2  516C               	movf	__doprnt@c& (0+255),w,b
  4875  0118A4  6F6A               	movwf	__doprnt@prec& (0+255),b
  4876  0118A6  6B6B               	clrf	(__doprnt@prec+1)& (0+255),b
  4877  0118A8  BF6A               	btfsc	__doprnt@prec& (0+255),7,b
  4878  0118AA  076B               	decf	(__doprnt@prec+1)& (0+255),f,b
  4879  0118AC                     l1991:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;doprnt.c: 1422: {
  4883                           ;doprnt.c: 1438: if(flag & 0x03)
  4884                           
  4885                           ; BSR set to: 0
  4886                           
  4887                           ; BSR set to: 0
  4888  0118AC  C065  F02F         	movff	__doprnt@flag,??__doprnt
  4889  0118B0  0E03               	movlw	3
  4890  0118B2  162F               	andwf	??__doprnt,f,c
  4891  0118B4  B4D8               	btfsc	status,2,c
  4892  0118B6  D0E8               	goto	l2003
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4896  0118B8  EE20 F002          	lfsr	2,2
  4897  0118BC  5029               	movf	__doprnt@pb,w,c
  4898  0118BE  26D9               	addwf	fsr2l,f,c
  4899  0118C0  502A               	movf	__doprnt@pb+1,w,c
  4900  0118C2  22DA               	addwfc	fsr2h,f,c
  4901  0118C4  50DE               	movf	postinc2,w,c
  4902  0118C6  10DE               	iorwf	postinc2,w,c
  4903  0118C8  10DE               	iorwf	postinc2,w,c
  4904  0118CA  B4D8               	btfsc	status,2,c
  4905  0118CC  D013               	goto	l1993
  4906                           
  4907                           ; BSR set to: 0
  4908  0118CE  EE20 F002          	lfsr	2,2
  4909  0118D2  5029               	movf	__doprnt@pb,w,c
  4910  0118D4  26D9               	addwf	fsr2l,f,c
  4911  0118D6  502A               	movf	__doprnt@pb+1,w,c
  4912  0118D8  22DA               	addwfc	fsr2h,f,c
  4913  0118DA  D801               	call	u11208
  4914  0118DC  D0D5               	goto	l2003
  4915  0118DE                     u11208:
  4916  0118DE  0005               	push	
  4917  0118E0  6EFA               	movwf	pclath,c
  4918  0118E2  50DE               	movf	postinc2,w,c
  4919  0118E4  6EFD               	movwf	tosl,c
  4920  0118E6  50DE               	movf	postinc2,w,c
  4921  0118E8  6EFE               	movwf	tosh,c
  4922  0118EA  50DE               	movf	postinc2,w,c
  4923  0118EC  6EFF               	movwf	tosu,c
  4924  0118EE  50FA               	movf	pclath,w,c
  4925  0118F0  0E2D               	movlw	45
  4926  0118F2  0012               	return		;indir
  4927  0118F4                     l1993:
  4928  0118F4  C029  FFD9         	movff	__doprnt@pb,fsr2l
  4929  0118F8  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4930  0118FC  CFDE F02F          	movff	postinc2,??__doprnt
  4931  011900  CFDD F030          	movff	postdec2,??__doprnt+1
  4932  011904  C02F  FFD9         	movff	??__doprnt,fsr2l
  4933  011908  C030  FFDA         	movff	??__doprnt+1,fsr2h
  4934  01190C  0E2D               	movlw	45
  4935  01190E  6EDF               	movwf	indf2,c
  4936  011910  D0B4               	goto	l11326
  4937  011912                     
  4938                           ;doprnt.c: 1486: case 0xC0:
  4939                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4940  011912  C06A  F02F         	movff	__doprnt@prec,??__doprnt
  4941  011916  C06B  F030         	movff	__doprnt@prec+1,??__doprnt+1
  4942  01191A  90D8               	bcf	status,0,c
  4943  01191C  362F               	rlcf	??__doprnt,f,c
  4944  01191E  3630               	rlcf	??__doprnt+1,f,c
  4945  011920  90D8               	bcf	status,0,c
  4946  011922  362F               	rlcf	??__doprnt,f,c
  4947  011924  3630               	rlcf	??__doprnt+1,f,c
  4948  011926  0EC7               	movlw	low _dpowers
  4949  011928  242F               	addwf	??__doprnt,w,c
  4950  01192A  6EF6               	movwf	tblptrl,c
  4951  01192C  0EFE               	movlw	high _dpowers
  4952  01192E  2030               	addwfc	??__doprnt+1,w,c
  4953  011930  6EF7               	movwf	tblptrh,c
  4954  011932                     	if	1	;There are 3 active tblptr bytes
  4955  011932  6AF8               	clrf	tblptru,c
  4956  011934  0E00               	movlw	low (__mediumconst shr (0+16))
  4957  011936  22F8               	addwfc	tblptru,f,c
  4958  011938                     	endif
  4959  011938  0009               	tblrd		*+
  4960  01193A  CFF5 F017          	movff	tablat,___lldiv@divisor
  4961  01193E  0009               	tblrd		*+
  4962  011940  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  4963  011944  0009               	tblrd		*+
  4964  011946  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  4965  01194A  000A               	tblrd		*-
  4966  01194C  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  4967  011950  C066  F013         	movff	__doprnt@val,___lldiv@dividend
  4968  011954  C067  F014         	movff	__doprnt@val+1,___lldiv@dividend+1
  4969  011958  C068  F015         	movff	__doprnt@val+2,___lldiv@dividend+2
  4970  01195C  C069  F016         	movff	__doprnt@val+3,___lldiv@dividend+3
  4971  011960  EC15  F0AE         	call	___lldiv
  4972  011964  C013  F020         	movff	?___lldiv,___llmod@dividend
  4973  011968  C014  F021         	movff	?___lldiv+1,___llmod@dividend+1
  4974  01196C  C015  F022         	movff	?___lldiv+2,___llmod@dividend+2
  4975  011970  C016  F023         	movff	?___lldiv+3,___llmod@dividend+3
  4976  011974  0E0A               	movlw	10
  4977  011976  6E24               	movwf	___llmod@divisor,c
  4978  011978  0E00               	movlw	0
  4979  01197A  6E25               	movwf	___llmod@divisor+1,c
  4980  01197C  0E00               	movlw	0
  4981  01197E  6E26               	movwf	___llmod@divisor+2,c
  4982  011980  0E00               	movlw	0
  4983  011982  6E27               	movwf	___llmod@divisor+3,c
  4984  011984  ECC1  F0AF         	call	___llmod	;wreg free
  4985  011988  5020               	movf	?___llmod,w,c
  4986  01198A  0F30               	addlw	48
  4987  01198C  0100               	movlb	0	; () banked
  4988  01198E  6F6C               	movwf	__doprnt@c& (0+255),b
  4989                           
  4990                           ;doprnt.c: 1491: break;
  4991  011990  D048               	goto	l2000
  4992  011992                     
  4993                           ; BSR set to: 0
  4994                           ;doprnt.c: 1499: {
  4995                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4996                           
  4997                           ; BSR set to: 0
  4998  011992  C066  F013         	movff	__doprnt@val,___lldiv@dividend
  4999  011996  C067  F014         	movff	__doprnt@val+1,___lldiv@dividend+1
  5000  01199A  C068  F015         	movff	__doprnt@val+2,___lldiv@dividend+2
  5001  01199E  C069  F016         	movff	__doprnt@val+3,___lldiv@dividend+3
  5002  0119A2  C06A  F02F         	movff	__doprnt@prec,??__doprnt
  5003  0119A6  C06B  F030         	movff	__doprnt@prec+1,??__doprnt+1
  5004  0119AA  90D8               	bcf	status,0,c
  5005  0119AC  362F               	rlcf	??__doprnt,f,c
  5006  0119AE  3630               	rlcf	??__doprnt+1,f,c
  5007  0119B0  90D8               	bcf	status,0,c
  5008  0119B2  362F               	rlcf	??__doprnt,f,c
  5009  0119B4  3630               	rlcf	??__doprnt+1,f,c
  5010  0119B6  0EEF               	movlw	low _hexpowers
  5011  0119B8  242F               	addwf	??__doprnt,w,c
  5012  0119BA  6EF6               	movwf	tblptrl,c
  5013  0119BC  0EFE               	movlw	high _hexpowers
  5014  0119BE  2030               	addwfc	??__doprnt+1,w,c
  5015  0119C0  6EF7               	movwf	tblptrh,c
  5016  0119C2                     	if	1	;There are 3 active tblptr bytes
  5017  0119C2  6AF8               	clrf	tblptru,c
  5018  0119C4  0E00               	movlw	low (__mediumconst shr (0+16))
  5019  0119C6  22F8               	addwfc	tblptru,f,c
  5020  0119C8                     	endif
  5021  0119C8  0009               	tblrd		*+
  5022  0119CA  CFF5 F017          	movff	tablat,___lldiv@divisor
  5023  0119CE  0009               	tblrd		*+
  5024  0119D0  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  5025  0119D4  0009               	tblrd		*+
  5026  0119D6  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  5027  0119DA  000A               	tblrd		*-
  5028  0119DC  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  5029  0119E0  EC15  F0AE         	call	___lldiv	;wreg free
  5030  0119E4  5013               	movf	?___lldiv,w,c
  5031  0119E6  0B0F               	andlw	15
  5032  0119E8  0100               	movlb	0	; () banked
  5033  0119EA  6F60               	movwf	__doprnt@idx& (0+255),b
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  5037  0119EC  5160               	movf	__doprnt@idx& (0+255),w,b
  5038  0119EE  0D01               	mullw	1
  5039  0119F0  0ECE               	movlw	low STR_10
  5040  0119F2  24F3               	addwf	prodl,w,c
  5041  0119F4  6EF6               	movwf	tblptrl,c
  5042  0119F6  0EFF               	movlw	high STR_10
  5043  0119F8  20F4               	addwfc	prodh,w,c
  5044  0119FA  6EF7               	movwf	tblptrh,c
  5045  0119FC                     	if	1	;There are 3 active tblptr bytes
  5046  0119FC  6AF8               	clrf	tblptru,c
  5047  0119FE  0E00               	movlw	low (__mediumconst shr (0+16))
  5048  011A00  22F8               	addwfc	tblptru,f,c
  5049  011A02                     	endif
  5050  011A02  0008               	tblrd		*
  5051  011A04  CFF5 F06C          	movff	tablat,__doprnt@c
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;doprnt.c: 1523: }
  5055                           
  5056                           ;doprnt.c: 1508: }
  5057                           ;doprnt.c: 1510: break;
  5058  011A08  D00C               	goto	l2000
  5059  011A0A                     l11318:
  5060  011A0A  0100               	movlb	0	; () banked
  5061  011A0C  5165               	movf	__doprnt@flag& (0+255),w,b
  5062  011A0E  0BC0               	andlw	192
  5063                           
  5064                           ; Switch size 1, requested type "space"
  5065                           ; Number of cases is 3, Range of values is 0 to 192
  5066                           ; switch strategies available:
  5067                           ; Name         Instructions Cycles
  5068                           ; simple_byte           10     6 (average)
  5069                           ;	Chosen strategy is simple_byte
  5070  011A10  0A00               	xorlw	0	; case 0
  5071  011A12  B4D8               	btfsc	status,2,c
  5072  011A14  D77E               	goto	l1998
  5073  011A16  0A80               	xorlw	128	; case 128
  5074  011A18  B4D8               	btfsc	status,2,c
  5075  011A1A  D7BB               	goto	l2001
  5076  011A1C  0A40               	xorlw	64	; case 192
  5077  011A1E  B4D8               	btfsc	status,2,c
  5078  011A20  D778               	goto	l1998
  5079  011A22                     l2000:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  5083                           
  5084                           ; BSR set to: 0
  5085  011A22  EE20 F002          	lfsr	2,2
  5086  011A26  5029               	movf	__doprnt@pb,w,c
  5087  011A28  26D9               	addwf	fsr2l,f,c
  5088  011A2A  502A               	movf	__doprnt@pb+1,w,c
  5089  011A2C  22DA               	addwfc	fsr2h,f,c
  5090  011A2E  50DE               	movf	postinc2,w,c
  5091  011A30  10DE               	iorwf	postinc2,w,c
  5092  011A32  10DE               	iorwf	postinc2,w,c
  5093  011A34  B4D8               	btfsc	status,2,c
  5094  011A36  D013               	goto	l2002
  5095                           
  5096                           ; BSR set to: 0
  5097  011A38  EE20 F002          	lfsr	2,2
  5098  011A3C  5029               	movf	__doprnt@pb,w,c
  5099  011A3E  26D9               	addwf	fsr2l,f,c
  5100  011A40  502A               	movf	__doprnt@pb+1,w,c
  5101  011A42  22DA               	addwfc	fsr2h,f,c
  5102  011A44  D801               	call	u11228
  5103  011A46  D020               	goto	l2003
  5104  011A48                     u11228:
  5105  011A48  0005               	push	
  5106  011A4A  6EFA               	movwf	pclath,c
  5107  011A4C  50DE               	movf	postinc2,w,c
  5108  011A4E  6EFD               	movwf	tosl,c
  5109  011A50  50DE               	movf	postinc2,w,c
  5110  011A52  6EFE               	movwf	tosh,c
  5111  011A54  50DE               	movf	postinc2,w,c
  5112  011A56  6EFF               	movwf	tosu,c
  5113  011A58  50FA               	movf	pclath,w,c
  5114  011A5A  516C               	movf	__doprnt@c& (0+255),w,b
  5115  011A5C  0012               	return		;indir
  5116  011A5E                     l2002:
  5117  011A5E  C029  FFD9         	movff	__doprnt@pb,fsr2l
  5118  011A62  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  5119  011A66  CFDE F02F          	movff	postinc2,??__doprnt
  5120  011A6A  CFDD F030          	movff	postdec2,??__doprnt+1
  5121  011A6E  C02F  FFD9         	movff	??__doprnt,fsr2l
  5122  011A72  C030  FFDA         	movff	??__doprnt+1,fsr2h
  5123  011A76  C06C  FFDF         	movff	__doprnt@c,indf2
  5124  011A7A                     l11326:
  5125  011A7A  C029  FFD9         	movff	__doprnt@pb,fsr2l
  5126  011A7E  C02A  FFDA         	movff	__doprnt@pb+1,fsr2h
  5127  011A82  2ADE               	incf	postinc2,f,c
  5128  011A84  0E00               	movlw	0
  5129  011A86  22DD               	addwfc	postdec2,f,c
  5130  011A88                     l2003:
  5131  011A88  0100               	movlb	0	; () banked
  5132  011A8A  076A               	decf	__doprnt@prec& (0+255),f,b
  5133  011A8C  A0D8               	btfss	status,0,c
  5134  011A8E  076B               	decf	(__doprnt@prec+1)& (0+255),f,b
  5135  011A90  296A               	incf	__doprnt@prec& (0+255),w,b
  5136  011A92  E1BB               	bnz	l11318
  5137  011A94  296B               	incf	(__doprnt@prec+1)& (0+255),w,b
  5138  011A96  A4D8               	btfss	status,2,c
  5139  011A98  D7B8               	goto	l1997
  5140  011A9A                     u11230:
  5141                           
  5142                           ; BSR set to: 0
  5143                           
  5144                           ; BSR set to: 0
  5145  011A9A  C02B  FFF6         	movff	__doprnt@f,tblptrl
  5146  011A9E  C02C  FFF7         	movff	__doprnt@f+1,tblptrh
  5147  011AA2  4A2B               	infsnz	__doprnt@f,f,c
  5148  011AA4  2A2C               	incf	__doprnt@f+1,f,c
  5149  011AA6                     	if	0	;tblptru may be non-zero
  5150  011AA6                     	endif
  5151  011AA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5152  011AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  5153  011AA8  6EF8               	movwf	tblptru,c
  5154  011AAA                     	endif
  5155  011AAA  0008               	tblrd		*
  5156  011AAC  CFF5 F06C          	movff	tablat,__doprnt@c
  5157  011AB0  0100               	movlb	0	; () banked
  5158  011AB2  516C               	movf	__doprnt@c& (0+255),w,b
  5159  011AB4  A4D8               	btfss	status,2,c
  5160  011AB6  D4A9               	goto	l1938
  5161  011AB8                     u11240:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;doprnt.c: 1540: return 0;
  5165                           
  5166                           ; BSR set to: 0
  5167                           
  5168                           ;doprnt.c: 1525: }
  5169                           ;doprnt.c: 1533: }
  5170                           ;doprnt.c: 1535: alldone:
  5171                           
  5172                           ; BSR set to: 0
  5173  011AB8  0E00               	movlw	0
  5174  011ABA  6E2A               	movwf	?__doprnt+1,c
  5175  011ABC  0E00               	movlw	0
  5176  011ABE  6E29               	movwf	?__doprnt,c
  5177  011AC0  0012               	return	
  5178  011AC2                     __end_of__doprnt:
  5179                           	opt stack 0
  5180                           tosu	equ	0xFFF
  5181                           tosh	equ	0xFFE
  5182                           tosl	equ	0xFFD
  5183                           pclath	equ	0xFFA
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           intcon	equ	0xFF2
  5191                           indf0	equ	0xFEF
  5192                           postinc0	equ	0xFEE
  5193                           fsr0h	equ	0xFEA
  5194                           fsr0l	equ	0xFE9
  5195                           wreg	equ	0xFE8
  5196                           postdec1	equ	0xFE5
  5197                           fsr1l	equ	0xFE1
  5198                           indf2	equ	0xFDF
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function _isdigit *****************
  5206 ;; Defined at:
  5207 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\isdigit.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  c               1    wreg     unsigned char 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  c               1   20[COMRAM] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;		None               void
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;Total ram usage:        3 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    4
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		__doprnt
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text20
  5236  016992                     __ptext20:
  5237                           	opt stack 0
  5238  016992                     _isdigit:
  5239                           	opt stack 21
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;incstack = 0
  5243                           ;isdigit@c stored from wreg
  5244  016992  6E15               	movwf	isdigit@c,c
  5245  016994  0E00               	movlw	0
  5246  016996  6E14               	movwf	_isdigit$4802,c
  5247  016998  0E3A               	movlw	58
  5248  01699A  6015               	cpfslt	isdigit@c,c
  5249  01699C  D005               	goto	l2351
  5250  01699E  0E2F               	movlw	47
  5251  0169A0  6415               	cpfsgt	isdigit@c,c
  5252  0169A2  D002               	goto	l2351
  5253  0169A4  0E01               	movlw	1
  5254  0169A6  6E14               	movwf	_isdigit$4802,c
  5255  0169A8                     l2351:
  5256  0169A8  C014  F013         	movff	_isdigit$4802,??_isdigit
  5257  0169AC  3013               	rrcf	??_isdigit,w,c
  5258  0169AE  0012               	return	
  5259  0169B0                     __end_of_isdigit:
  5260                           	opt stack 0
  5261                           tosu	equ	0xFFF
  5262                           tosh	equ	0xFFE
  5263                           tosl	equ	0xFFD
  5264                           pclath	equ	0xFFA
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           indf0	equ	0xFEF
  5273                           postinc0	equ	0xFEE
  5274                           fsr0h	equ	0xFEA
  5275                           fsr0l	equ	0xFE9
  5276                           wreg	equ	0xFE8
  5277                           postdec1	equ	0xFE5
  5278                           fsr1l	equ	0xFE1
  5279                           indf2	equ	0xFDF
  5280                           postinc2	equ	0xFDE
  5281                           postdec2	equ	0xFDD
  5282                           fsr2h	equ	0xFDA
  5283                           fsr2l	equ	0xFD9
  5284                           status	equ	0xFD8
  5285                           
  5286 ;; *************** function ___llmod *****************
  5287 ;; Defined at:
  5288 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\llmod.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  dividend        4   31[COMRAM] unsigned long 
  5291 ;;  divisor         4   35[COMRAM] unsigned long 
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  counter         1   39[COMRAM] unsigned char 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  4   31[COMRAM] unsigned long 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5303 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;Total ram usage:        9 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    4
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		__doprnt
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text21
  5318  015F82                     __ptext21:
  5319                           	opt stack 0
  5320  015F82                     ___llmod:
  5321                           	opt stack 21
  5322                           
  5323                           ;incstack = 0
  5324  015F82  5024               	movf	___llmod@divisor,w,c
  5325  015F84  1025               	iorwf	___llmod@divisor+1,w,c
  5326  015F86  1026               	iorwf	___llmod@divisor+2,w,c
  5327  015F88  1027               	iorwf	___llmod@divisor+3,w,c
  5328  015F8A  B4D8               	btfsc	status,2,c
  5329  015F8C  D024               	goto	l2392
  5330  015F8E  0E01               	movlw	1
  5331  015F90  6E28               	movwf	___llmod@counter,c
  5332  015F92  D006               	goto	l2387
  5333  015F94  90D8               	bcf	status,0,c
  5334  015F96  3624               	rlcf	___llmod@divisor,f,c
  5335  015F98  3625               	rlcf	___llmod@divisor+1,f,c
  5336  015F9A  3626               	rlcf	___llmod@divisor+2,f,c
  5337  015F9C  3627               	rlcf	___llmod@divisor+3,f,c
  5338  015F9E  2A28               	incf	___llmod@counter,f,c
  5339  015FA0                     l2387:
  5340  015FA0  AE27               	btfss	___llmod@divisor+3,7,c
  5341  015FA2  D7F8               	goto	l2388
  5342  015FA4                     u9850:
  5343  015FA4  5024               	movf	___llmod@divisor,w,c
  5344  015FA6  5C20               	subwf	___llmod@dividend,w,c
  5345  015FA8  5025               	movf	___llmod@divisor+1,w,c
  5346  015FAA  5821               	subwfb	___llmod@dividend+1,w,c
  5347  015FAC  5026               	movf	___llmod@divisor+2,w,c
  5348  015FAE  5822               	subwfb	___llmod@dividend+2,w,c
  5349  015FB0  5027               	movf	___llmod@divisor+3,w,c
  5350  015FB2  5823               	subwfb	___llmod@dividend+3,w,c
  5351  015FB4  A0D8               	btfss	status,0,c
  5352  015FB6  D008               	goto	l2391
  5353  015FB8  5024               	movf	___llmod@divisor,w,c
  5354  015FBA  5E20               	subwf	___llmod@dividend,f,c
  5355  015FBC  5025               	movf	___llmod@divisor+1,w,c
  5356  015FBE  5A21               	subwfb	___llmod@dividend+1,f,c
  5357  015FC0  5026               	movf	___llmod@divisor+2,w,c
  5358  015FC2  5A22               	subwfb	___llmod@dividend+2,f,c
  5359  015FC4  5027               	movf	___llmod@divisor+3,w,c
  5360  015FC6  5A23               	subwfb	___llmod@dividend+3,f,c
  5361  015FC8                     l2391:
  5362  015FC8  90D8               	bcf	status,0,c
  5363  015FCA  3227               	rrcf	___llmod@divisor+3,f,c
  5364  015FCC  3226               	rrcf	___llmod@divisor+2,f,c
  5365  015FCE  3225               	rrcf	___llmod@divisor+1,f,c
  5366  015FD0  3224               	rrcf	___llmod@divisor,f,c
  5367  015FD2  2E28               	decfsz	___llmod@counter,f,c
  5368  015FD4  D7E7               	goto	u9850
  5369  015FD6                     l2392:
  5370  015FD6  C020  F020         	movff	___llmod@dividend,?___llmod
  5371  015FDA  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  5372  015FDE  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  5373  015FE2  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  5374  015FE6  0012               	return		;funcret
  5375  015FE8                     __end_of___llmod:
  5376                           	opt stack 0
  5377                           tosu	equ	0xFFF
  5378                           tosh	equ	0xFFE
  5379                           tosl	equ	0xFFD
  5380                           pclath	equ	0xFFA
  5381                           tblptru	equ	0xFF8
  5382                           tblptrh	equ	0xFF7
  5383                           tblptrl	equ	0xFF6
  5384                           tablat	equ	0xFF5
  5385                           prodh	equ	0xFF4
  5386                           prodl	equ	0xFF3
  5387                           intcon	equ	0xFF2
  5388                           indf0	equ	0xFEF
  5389                           postinc0	equ	0xFEE
  5390                           fsr0h	equ	0xFEA
  5391                           fsr0l	equ	0xFE9
  5392                           wreg	equ	0xFE8
  5393                           postdec1	equ	0xFE5
  5394                           fsr1l	equ	0xFE1
  5395                           indf2	equ	0xFDF
  5396                           postinc2	equ	0xFDE
  5397                           postdec2	equ	0xFDD
  5398                           fsr2h	equ	0xFDA
  5399                           fsr2l	equ	0xFD9
  5400                           status	equ	0xFD8
  5401                           
  5402 ;; *************** function ___lldiv *****************
  5403 ;; Defined at:
  5404 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\lldiv.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  dividend        4   18[COMRAM] unsigned long 
  5407 ;;  divisor         4   22[COMRAM] unsigned long 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  quotient        4   26[COMRAM] unsigned long 
  5410 ;;  counter         1   30[COMRAM] unsigned char 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  4   18[COMRAM] unsigned long 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2, status,0
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:       13 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    4
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		__doprnt
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text22
  5435  015C2A                     __ptext22:
  5436                           	opt stack 0
  5437  015C2A                     ___lldiv:
  5438                           	opt stack 21
  5439                           
  5440                           ;incstack = 0
  5441  015C2A  0E00               	movlw	0
  5442  015C2C  6E1B               	movwf	___lldiv@quotient,c
  5443  015C2E  0E00               	movlw	0
  5444  015C30  6E1C               	movwf	___lldiv@quotient+1,c
  5445  015C32  0E00               	movlw	0
  5446  015C34  6E1D               	movwf	___lldiv@quotient+2,c
  5447  015C36  0E00               	movlw	0
  5448  015C38  6E1E               	movwf	___lldiv@quotient+3,c
  5449  015C3A  5017               	movf	___lldiv@divisor,w,c
  5450  015C3C  1018               	iorwf	___lldiv@divisor+1,w,c
  5451  015C3E  1019               	iorwf	___lldiv@divisor+2,w,c
  5452  015C40  101A               	iorwf	___lldiv@divisor+3,w,c
  5453  015C42  B4D8               	btfsc	status,2,c
  5454  015C44  D02A               	goto	l2382
  5455  015C46  0E01               	movlw	1
  5456  015C48  6E1F               	movwf	___lldiv@counter,c
  5457  015C4A  D006               	goto	l2377
  5458  015C4C  90D8               	bcf	status,0,c
  5459  015C4E  3617               	rlcf	___lldiv@divisor,f,c
  5460  015C50  3618               	rlcf	___lldiv@divisor+1,f,c
  5461  015C52  3619               	rlcf	___lldiv@divisor+2,f,c
  5462  015C54  361A               	rlcf	___lldiv@divisor+3,f,c
  5463  015C56  2A1F               	incf	___lldiv@counter,f,c
  5464  015C58                     l2377:
  5465  015C58  AE1A               	btfss	___lldiv@divisor+3,7,c
  5466  015C5A  D7F8               	goto	l2378
  5467  015C5C                     u9820:
  5468  015C5C  90D8               	bcf	status,0,c
  5469  015C5E  361B               	rlcf	___lldiv@quotient,f,c
  5470  015C60  361C               	rlcf	___lldiv@quotient+1,f,c
  5471  015C62  361D               	rlcf	___lldiv@quotient+2,f,c
  5472  015C64  361E               	rlcf	___lldiv@quotient+3,f,c
  5473  015C66  5017               	movf	___lldiv@divisor,w,c
  5474  015C68  5C13               	subwf	___lldiv@dividend,w,c
  5475  015C6A  5018               	movf	___lldiv@divisor+1,w,c
  5476  015C6C  5814               	subwfb	___lldiv@dividend+1,w,c
  5477  015C6E  5019               	movf	___lldiv@divisor+2,w,c
  5478  015C70  5815               	subwfb	___lldiv@dividend+2,w,c
  5479  015C72  501A               	movf	___lldiv@divisor+3,w,c
  5480  015C74  5816               	subwfb	___lldiv@dividend+3,w,c
  5481  015C76  A0D8               	btfss	status,0,c
  5482  015C78  D009               	goto	l2381
  5483  015C7A  5017               	movf	___lldiv@divisor,w,c
  5484  015C7C  5E13               	subwf	___lldiv@dividend,f,c
  5485  015C7E  5018               	movf	___lldiv@divisor+1,w,c
  5486  015C80  5A14               	subwfb	___lldiv@dividend+1,f,c
  5487  015C82  5019               	movf	___lldiv@divisor+2,w,c
  5488  015C84  5A15               	subwfb	___lldiv@dividend+2,f,c
  5489  015C86  501A               	movf	___lldiv@divisor+3,w,c
  5490  015C88  5A16               	subwfb	___lldiv@dividend+3,f,c
  5491  015C8A  801B               	bsf	___lldiv@quotient,0,c
  5492  015C8C                     l2381:
  5493  015C8C  90D8               	bcf	status,0,c
  5494  015C8E  321A               	rrcf	___lldiv@divisor+3,f,c
  5495  015C90  3219               	rrcf	___lldiv@divisor+2,f,c
  5496  015C92  3218               	rrcf	___lldiv@divisor+1,f,c
  5497  015C94  3217               	rrcf	___lldiv@divisor,f,c
  5498  015C96  2E1F               	decfsz	___lldiv@counter,f,c
  5499  015C98  D7E1               	goto	u9820
  5500  015C9A                     l2382:
  5501  015C9A  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5502  015C9E  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5503  015CA2  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5504  015CA6  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5505  015CAA  0012               	return		;funcret
  5506  015CAC                     __end_of___lldiv:
  5507                           	opt stack 0
  5508                           tosu	equ	0xFFF
  5509                           tosh	equ	0xFFE
  5510                           tosl	equ	0xFFD
  5511                           pclath	equ	0xFFA
  5512                           tblptru	equ	0xFF8
  5513                           tblptrh	equ	0xFF7
  5514                           tblptrl	equ	0xFF6
  5515                           tablat	equ	0xFF5
  5516                           prodh	equ	0xFF4
  5517                           prodl	equ	0xFF3
  5518                           intcon	equ	0xFF2
  5519                           indf0	equ	0xFEF
  5520                           postinc0	equ	0xFEE
  5521                           fsr0h	equ	0xFEA
  5522                           fsr0l	equ	0xFE9
  5523                           wreg	equ	0xFE8
  5524                           postdec1	equ	0xFE5
  5525                           fsr1l	equ	0xFE1
  5526                           indf2	equ	0xFDF
  5527                           postinc2	equ	0xFDE
  5528                           postdec2	equ	0xFDD
  5529                           fsr2h	equ	0xFDA
  5530                           fsr2l	equ	0xFD9
  5531                           status	equ	0xFD8
  5532                           
  5533 ;; *************** function _PHY_Write *****************
  5534 ;; Defined at:
  5535 ;;		line 370 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  reg             1    wreg     enum E5175
  5538 ;;  data            2   20[COMRAM] unsigned int 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  reg             1   22[COMRAM] enum E5175
  5541 ;;  GIESave         1   23[COMRAM] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      enum E5184
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;Total ram usage:        4 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    5
  5558 ;; This function calls:
  5559 ;;		_PHY_WaitForBusy
  5560 ;; This function is called by:
  5561 ;;		_ETH_Init
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text23
  5566  016870                     __ptext23:
  5567                           	opt stack 0
  5568  016870                     _PHY_Write:
  5569                           	opt stack 22
  5570                           
  5571                           ;incstack = 0
  5572                           ;PHY_Write@reg stored from wreg
  5573  016870  6E17               	movwf	PHY_Write@reg,c
  5574                           
  5575                           ;ETHxxJ6x_driver.c: 372: uint8_t GIESave;
  5576                           ;ETHxxJ6x_driver.c: 374: MIREGADR = reg;
  5577  016872  C017  FEB4         	movff	PHY_Write@reg,3764	;volatile
  5578                           
  5579                           ;ETHxxJ6x_driver.c: 386: errataTemp = data;
  5580  016876  C015  FE7E         	movff	PHY_Write@data,3710
  5581  01687A  C016  FE7F         	movff	PHY_Write@data+1,3711
  5582                           
  5583                           ;ETHxxJ6x_driver.c: 387: GIESave = INTCON;
  5584  01687E  CFF2 F018          	movff	intcon,PHY_Write@GIESave	;volatile
  5585                           
  5586                           ;ETHxxJ6x_driver.c: 388: INTCON = 0;
  5587  016882  0E00               	movlw	0
  5588  016884  6EF2               	movwf	intcon,c	;volatile
  5589                           
  5590                           ;ETHxxJ6x_driver.c: 389: MIWR = errataTemp;
  5591  016886  CE7E FEB6          	movff	3710,3766	;volatile
  5592  01688A  CE7F FEB7          	movff	3711,3767	;volatile
  5593                           
  5594                           ;ETHxxJ6x_driver.c: 390: INTCON = GIESave;
  5595  01688E  C018  FFF2         	movff	PHY_Write@GIESave,intcon	;volatile
  5596                           
  5597                           ;ETHxxJ6x_driver.c: 394: return PHY_WaitForBusy();
  5598                           ;	Return value of _PHY_Write is never used
  5599  016892  EC40  F0B3         	call	_PHY_WaitForBusy
  5600  016896  0012               	return	
  5601  016898                     __end_of_PHY_Write:
  5602                           	opt stack 0
  5603                           tosu	equ	0xFFF
  5604                           tosh	equ	0xFFE
  5605                           tosl	equ	0xFFD
  5606                           pclath	equ	0xFFA
  5607                           tblptru	equ	0xFF8
  5608                           tblptrh	equ	0xFF7
  5609                           tblptrl	equ	0xFF6
  5610                           tablat	equ	0xFF5
  5611                           prodh	equ	0xFF4
  5612                           prodl	equ	0xFF3
  5613                           intcon	equ	0xFF2
  5614                           indf0	equ	0xFEF
  5615                           postinc0	equ	0xFEE
  5616                           fsr0h	equ	0xFEA
  5617                           fsr0l	equ	0xFE9
  5618                           wreg	equ	0xFE8
  5619                           postdec1	equ	0xFE5
  5620                           fsr1l	equ	0xFE1
  5621                           indf2	equ	0xFDF
  5622                           postinc2	equ	0xFDE
  5623                           postdec2	equ	0xFDD
  5624                           fsr2h	equ	0xFDA
  5625                           fsr2l	equ	0xFD9
  5626                           status	equ	0xFD8
  5627                           
  5628 ;; *************** function _MAC_getAddress *****************
  5629 ;; Defined at:
  5630 ;;		line 46 in file "mcc_generated_files/TCPIPLibrary/mac_address.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;		None
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  2   18[COMRAM] PTR const struct .
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;Total ram usage:        2 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    4
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_ETH_Init
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text24
  5659  016AEA                     __ptext24:
  5660                           	opt stack 0
  5661  016AEA                     _MAC_getAddress:
  5662                           	opt stack 23
  5663                           
  5664                           ;mac_address.c: 48: return &macAddress;
  5665                           
  5666                           ;incstack = 0
  5667  016AEA  0E3F               	movlw	low _macAddress
  5668  016AEC  6E13               	movwf	?_MAC_getAddress,c
  5669  016AEE  0EFF               	movlw	high _macAddress
  5670  016AF0  6E14               	movwf	?_MAC_getAddress+1,c
  5671  016AF2  0012               	return	
  5672  016AF4                     __end_of_MAC_getAddress:
  5673                           	opt stack 0
  5674                           tosu	equ	0xFFF
  5675                           tosh	equ	0xFFE
  5676                           tosl	equ	0xFFD
  5677                           pclath	equ	0xFFA
  5678                           tblptru	equ	0xFF8
  5679                           tblptrh	equ	0xFF7
  5680                           tblptrl	equ	0xFF6
  5681                           tablat	equ	0xFF5
  5682                           prodh	equ	0xFF4
  5683                           prodl	equ	0xFF3
  5684                           intcon	equ	0xFF2
  5685                           indf0	equ	0xFEF
  5686                           postinc0	equ	0xFEE
  5687                           fsr0h	equ	0xFEA
  5688                           fsr0l	equ	0xFE9
  5689                           wreg	equ	0xFE8
  5690                           postdec1	equ	0xFE5
  5691                           fsr1l	equ	0xFE1
  5692                           indf2	equ	0xFDF
  5693                           postinc2	equ	0xFDE
  5694                           postdec2	equ	0xFDD
  5695                           fsr2h	equ	0xFDA
  5696                           fsr2l	equ	0xFD9
  5697                           status	equ	0xFD8
  5698                           
  5699 ;; *************** function _ETH_PacketListReset *****************
  5700 ;; Defined at:
  5701 ;;		line 1156 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  index           2   20[COMRAM] unsigned int 
  5706 ;;  ptr             2   18[COMRAM] PTR unsigned char 
  5707 ;;		 -> txData(200), 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;Total ram usage:        4 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    4
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_ETH_Init
  5728 ;;		_ETH_TxReset
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text25
  5733  01635C                     __ptext25:
  5734                           	opt stack 0
  5735  01635C                     _ETH_PacketListReset:
  5736                           	opt stack 23
  5737                           
  5738                           ;ETHxxJ6x_driver.c: 1158: uint16_t index = 0;
  5739                           
  5740                           ;incstack = 0
  5741  01635C  0E00               	movlw	0
  5742  01635E  6E16               	movwf	ETH_PacketListReset@index+1,c
  5743  016360  0E00               	movlw	0
  5744  016362  6E15               	movwf	ETH_PacketListReset@index,c
  5745                           
  5746                           ;ETHxxJ6x_driver.c: 1159: uint8_t* ptr = (uint8_t*)txData;
  5747  016364  0E00               	movlw	low _txData
  5748  016366  6E13               	movwf	ETH_PacketListReset@ptr,c
  5749  016368  0E04               	movlw	high _txData
  5750  01636A  6E14               	movwf	ETH_PacketListReset@ptr+1,c
  5751                           
  5752                           ;ETHxxJ6x_driver.c: 1160: ethListSize = 0;
  5753  01636C  0E00               	movlw	0
  5754  01636E  6E46               	movwf	_ethListSize,c
  5755                           
  5756                           ;ETHxxJ6x_driver.c: 1162: pHead = (0);
  5757  016370  0E00               	movlw	0
  5758  016372  6E43               	movwf	_pHead,c
  5759  016374  0E00               	movlw	0
  5760  016376  6E44               	movwf	_pHead+1,c
  5761                           
  5762                           ;ETHxxJ6x_driver.c: 1163: pTail = (0);
  5763  016378  0E00               	movlw	0
  5764  01637A  6E41               	movwf	_pTail,c
  5765  01637C  0E00               	movlw	0
  5766  01637E  6E42               	movwf	_pTail+1,c
  5767                           
  5768                           ;ETHxxJ6x_driver.c: 1165: while( index < ((20) * sizeof(txPacket_t)) )
  5769  016380  D00A               	goto	l765
  5770  016382                     
  5771                           ;ETHxxJ6x_driver.c: 1166: {
  5772                           ;ETHxxJ6x_driver.c: 1167: ptr[index] = 0;
  5773  016382  5015               	movf	ETH_PacketListReset@index,w,c
  5774  016384  2413               	addwf	ETH_PacketListReset@ptr,w,c
  5775  016386  6ED9               	movwf	fsr2l,c
  5776  016388  5016               	movf	ETH_PacketListReset@index+1,w,c
  5777  01638A  2014               	addwfc	ETH_PacketListReset@ptr+1,w,c
  5778  01638C  6EDA               	movwf	fsr2h,c
  5779  01638E  0E00               	movlw	0
  5780  016390  6EDF               	movwf	indf2,c
  5781                           
  5782                           ;ETHxxJ6x_driver.c: 1168: index++;
  5783  016392  4A15               	infsnz	ETH_PacketListReset@index,f,c
  5784  016394  2A16               	incf	ETH_PacketListReset@index+1,f,c
  5785  016396                     l765:
  5786  016396  5016               	movf	ETH_PacketListReset@index+1,w,c
  5787  016398  E105               	bnz	l768
  5788  01639A  0EC8               	movlw	200
  5789  01639C  5C15               	subwf	ETH_PacketListReset@index,w,c
  5790  01639E  B0D8               	btfsc	status,0,c
  5791  0163A0  0012               	return	
  5792  0163A2  D7EF               	goto	l766
  5793  0163A4                     l768:
  5794  0163A4  0012               	return		;funcret
  5795  0163A6                     __end_of_ETH_PacketListReset:
  5796                           	opt stack 0
  5797                           tosu	equ	0xFFF
  5798                           tosh	equ	0xFFE
  5799                           tosl	equ	0xFFD
  5800                           pclath	equ	0xFFA
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           prodh	equ	0xFF4
  5806                           prodl	equ	0xFF3
  5807                           intcon	equ	0xFF2
  5808                           indf0	equ	0xFEF
  5809                           postinc0	equ	0xFEE
  5810                           fsr0h	equ	0xFEA
  5811                           fsr0l	equ	0xFE9
  5812                           wreg	equ	0xFE8
  5813                           postdec1	equ	0xFE5
  5814                           fsr1l	equ	0xFE1
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _DHCP_init *****************
  5823 ;; Defined at:
  5824 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		None
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    4
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_Network_Init
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text26
  5853  016B5C                     __ptext26:
  5854                           	opt stack 0
  5855  016B5C                     _DHCP_init:
  5856                           	opt stack 24
  5857                           
  5858                           ;incstack = 0
  5859  016B5C  0012               	return		;funcret
  5860  016B5E                     __end_of_DHCP_init:
  5861                           	opt stack 0
  5862                           tosu	equ	0xFFF
  5863                           tosh	equ	0xFFE
  5864                           tosl	equ	0xFFD
  5865                           pclath	equ	0xFFA
  5866                           tblptru	equ	0xFF8
  5867                           tblptrh	equ	0xFF7
  5868                           tblptrl	equ	0xFF6
  5869                           tablat	equ	0xFF5
  5870                           prodh	equ	0xFF4
  5871                           prodl	equ	0xFF3
  5872                           intcon	equ	0xFF2
  5873                           indf0	equ	0xFEF
  5874                           postinc0	equ	0xFEE
  5875                           fsr0h	equ	0xFEA
  5876                           fsr0l	equ	0xFE9
  5877                           wreg	equ	0xFE8
  5878                           postdec1	equ	0xFE5
  5879                           fsr1l	equ	0xFE1
  5880                           indf2	equ	0xFDF
  5881                           postinc2	equ	0xFDE
  5882                           postdec2	equ	0xFDD
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _ARPV4_Init *****************
  5888 ;; Defined at:
  5889 ;;		line 87 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  x               1   20[COMRAM] unsigned char 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;Total ram usage:        1 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    5
  5910 ;; This function calls:
  5911 ;;		_ETH_GetMAC
  5912 ;; This function is called by:
  5913 ;;		_Network_Init
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text27
  5918  01664E                     __ptext27:
  5919                           	opt stack 0
  5920  01664E                     _ARPV4_Init:
  5921                           	opt stack 23
  5922                           
  5923                           ;arpv4.c: 89: for(uint8_t x= 0 ; x < 8; x++)
  5924                           
  5925                           ;incstack = 0
  5926  01664E  0E00               	movlw	0
  5927  016650  6E15               	movwf	ARPV4_Init@x,c
  5928  016652                     l8394:
  5929  016652  0E07               	movlw	7
  5930  016654  6415               	cpfsgt	ARPV4_Init@x,c
  5931  016656  D001               	goto	l312
  5932  016658  D00C               	goto	u7410
  5933  01665A                     l312:
  5934                           
  5935                           ;arpv4.c: 90: {
  5936                           ;arpv4.c: 91: ((char *)arpMap)[x] = 0;
  5937  01665A  5015               	movf	ARPV4_Init@x,w,c
  5938  01665C  0D01               	mullw	1
  5939  01665E  0E04               	movlw	low _arpMap
  5940  016660  24F3               	addwf	prodl,w,c
  5941  016662  6ED9               	movwf	fsr2l,c
  5942  016664  0E03               	movlw	high _arpMap
  5943  016666  20F4               	addwfc	prodh,w,c
  5944  016668  6EDA               	movwf	fsr2h,c
  5945  01666A  0E00               	movlw	0
  5946  01666C  6EDF               	movwf	indf2,c
  5947  01666E  2A15               	incf	ARPV4_Init@x,f,c
  5948  016670  D7F0               	goto	l8394
  5949  016672                     u7410:
  5950                           
  5951                           ;arpv4.c: 92: }
  5952                           ;arpv4.c: 93: ETH_GetMAC((char*)&hostMacAddress);
  5953  016672  0E84               	movlw	low _hostMacAddress
  5954  016674  6E13               	movwf	ETH_GetMAC@mac,c
  5955  016676  0E02               	movlw	high _hostMacAddress
  5956  016678  6E14               	movwf	ETH_GetMAC@mac+1,c
  5957  01667A  EC24  F0B0         	call	_ETH_GetMAC	;wreg free
  5958  01667E  0012               	return		;funcret
  5959  016680                     __end_of_ARPV4_Init:
  5960                           	opt stack 0
  5961                           tosu	equ	0xFFF
  5962                           tosh	equ	0xFFE
  5963                           tosl	equ	0xFFD
  5964                           pclath	equ	0xFFA
  5965                           tblptru	equ	0xFF8
  5966                           tblptrh	equ	0xFF7
  5967                           tblptrl	equ	0xFF6
  5968                           tablat	equ	0xFF5
  5969                           prodh	equ	0xFF4
  5970                           prodl	equ	0xFF3
  5971                           intcon	equ	0xFF2
  5972                           indf0	equ	0xFEF
  5973                           postinc0	equ	0xFEE
  5974                           fsr0h	equ	0xFEA
  5975                           fsr0l	equ	0xFE9
  5976                           wreg	equ	0xFE8
  5977                           postdec1	equ	0xFE5
  5978                           fsr1l	equ	0xFE1
  5979                           indf2	equ	0xFDF
  5980                           postinc2	equ	0xFDE
  5981                           postdec2	equ	0xFDD
  5982                           fsr2h	equ	0xFDA
  5983                           fsr2l	equ	0xFD9
  5984                           status	equ	0xFD8
  5985                           
  5986 ;; *************** function _ETH_GetMAC *****************
  5987 ;; Defined at:
  5988 ;;		line 1047 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  mac             2   18[COMRAM] PTR unsigned char 
  5991 ;;		 -> hostMacAddress(6), 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;		None
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  1    wreg      void 
  5996 ;; Registers used:
  5997 ;;		fsr2l, fsr2h, status,2, status,0
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;Total ram usage:        2 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; Hardware stack levels required when called:    4
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_ARPV4_Init
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text28
  6018  016048                     __ptext28:
  6019                           	opt stack 0
  6020  016048                     _ETH_GetMAC:
  6021                           	opt stack 23
  6022                           
  6023                           ;ETHxxJ6x_driver.c: 1050: *mac++ = MAADR1;
  6024                           
  6025                           ;incstack = 0
  6026  016048  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6027  01604C  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6028  016050  CE84 FFDF          	movff	3716,indf2	;volatile
  6029  016054  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6030  016056  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6031                           
  6032                           ;ETHxxJ6x_driver.c: 1051: *mac++ = MAADR2;
  6033  016058  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6034  01605C  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6035  016060  CE85 FFDF          	movff	3717,indf2	;volatile
  6036  016064  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6037  016066  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6038                           
  6039                           ;ETHxxJ6x_driver.c: 1052: *mac++ = MAADR3;
  6040  016068  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6041  01606C  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6042  016070  CE82 FFDF          	movff	3714,indf2	;volatile
  6043  016074  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6044  016076  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6045                           
  6046                           ;ETHxxJ6x_driver.c: 1053: *mac++ = MAADR4;
  6047  016078  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6048  01607C  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6049  016080  CE83 FFDF          	movff	3715,indf2	;volatile
  6050  016084  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6051  016086  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6052                           
  6053                           ;ETHxxJ6x_driver.c: 1054: *mac++ = MAADR5;
  6054  016088  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6055  01608C  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6056  016090  CE80 FFDF          	movff	3712,indf2	;volatile
  6057  016094  4A13               	infsnz	ETH_GetMAC@mac,f,c
  6058  016096  2A14               	incf	ETH_GetMAC@mac+1,f,c
  6059                           
  6060                           ;ETHxxJ6x_driver.c: 1055: *mac = MAADR6;
  6061  016098  C013  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  6062  01609C  C014  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  6063  0160A0  CE81 FFDF          	movff	3713,indf2	;volatile
  6064  0160A4  0012               	return		;funcret
  6065  0160A6                     __end_of_ETH_GetMAC:
  6066                           	opt stack 0
  6067                           tosu	equ	0xFFF
  6068                           tosh	equ	0xFFE
  6069                           tosl	equ	0xFFD
  6070                           pclath	equ	0xFFA
  6071                           tblptru	equ	0xFF8
  6072                           tblptrh	equ	0xFF7
  6073                           tblptrl	equ	0xFF6
  6074                           tablat	equ	0xFF5
  6075                           prodh	equ	0xFF4
  6076                           prodl	equ	0xFF3
  6077                           intcon	equ	0xFF2
  6078                           indf0	equ	0xFEF
  6079                           postinc0	equ	0xFEE
  6080                           fsr0h	equ	0xFEA
  6081                           fsr0l	equ	0xFE9
  6082                           wreg	equ	0xFE8
  6083                           postdec1	equ	0xFE5
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           postdec2	equ	0xFDD
  6088                           fsr2h	equ	0xFDA
  6089                           fsr2l	equ	0xFD9
  6090                           status	equ	0xFD8
  6091                           
  6092 ;; *************** function _INTERRUPT_Initialize *****************
  6093 ;; Defined at:
  6094 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		None
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    4
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_SYSTEM_Initialize
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text29
  6123  016B56                     __ptext29:
  6124                           	opt stack 0
  6125  016B56                     _INTERRUPT_Initialize:
  6126                           	opt stack 25
  6127                           
  6128                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  6129                           
  6130                           ;incstack = 0
  6131  016B56  9ED0               	bcf	4048,7,c	;volatile
  6132  016B58  0012               	return		;funcret
  6133  016B5A                     __end_of_INTERRUPT_Initialize:
  6134                           	opt stack 0
  6135                           tosu	equ	0xFFF
  6136                           tosh	equ	0xFFE
  6137                           tosl	equ	0xFFD
  6138                           pclath	equ	0xFFA
  6139                           tblptru	equ	0xFF8
  6140                           tblptrh	equ	0xFF7
  6141                           tblptrl	equ	0xFF6
  6142                           tablat	equ	0xFF5
  6143                           prodh	equ	0xFF4
  6144                           prodl	equ	0xFF3
  6145                           intcon	equ	0xFF2
  6146                           indf0	equ	0xFEF
  6147                           postinc0	equ	0xFEE
  6148                           fsr0h	equ	0xFEA
  6149                           fsr0l	equ	0xFE9
  6150                           wreg	equ	0xFE8
  6151                           postdec1	equ	0xFE5
  6152                           fsr1l	equ	0xFE1
  6153                           indf2	equ	0xFDF
  6154                           postinc2	equ	0xFDE
  6155                           postdec2	equ	0xFDD
  6156                           fsr2h	equ	0xFDA
  6157                           fsr2l	equ	0xFD9
  6158                           status	equ	0xFD8
  6159                           
  6160 ;; *************** function _ECCP1_Initialize *****************
  6161 ;; Defined at:
  6162 ;;		line 57 in file "mcc_generated_files/eccp1.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;Total ram usage:        0 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    4
  6183 ;; This function calls:
  6184 ;;		Nothing
  6185 ;; This function is called by:
  6186 ;;		_SYSTEM_Initialize
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text30
  6191  016A18                     __ptext30:
  6192                           	opt stack 0
  6193  016A18                     _ECCP1_Initialize:
  6194                           	opt stack 25
  6195                           
  6196                           ;eccp1.c: 60: CCP1CON = 0x00;
  6197                           
  6198                           ;incstack = 0
  6199  016A18  0E00               	movlw	0
  6200  016A1A  6EBD               	movwf	4029,c	;volatile
  6201                           
  6202                           ;eccp1.c: 62: ECCP1DEL = 0x00;
  6203  016A1C  0E00               	movlw	0
  6204  016A1E  6E79               	movwf	3961,c	;volatile
  6205                           
  6206                           ;eccp1.c: 64: ECCP1AS = 0x00;
  6207  016A20  0E00               	movlw	0
  6208  016A22  6EB6               	movwf	4022,c	;volatile
  6209                           
  6210                           ;eccp1.c: 66: CCPR1L = 0x00;
  6211  016A24  0E00               	movlw	0
  6212  016A26  6EBE               	movwf	4030,c	;volatile
  6213                           
  6214                           ;eccp1.c: 68: CCPR1H = 0x00;
  6215  016A28  0E00               	movlw	0
  6216  016A2A  6EBF               	movwf	4031,c	;volatile
  6217  016A2C  0012               	return		;funcret
  6218  016A2E                     __end_of_ECCP1_Initialize:
  6219                           	opt stack 0
  6220                           tosu	equ	0xFFF
  6221                           tosh	equ	0xFFE
  6222                           tosl	equ	0xFFD
  6223                           pclath	equ	0xFFA
  6224                           tblptru	equ	0xFF8
  6225                           tblptrh	equ	0xFF7
  6226                           tblptrl	equ	0xFF6
  6227                           tablat	equ	0xFF5
  6228                           prodh	equ	0xFF4
  6229                           prodl	equ	0xFF3
  6230                           intcon	equ	0xFF2
  6231                           indf0	equ	0xFEF
  6232                           postinc0	equ	0xFEE
  6233                           fsr0h	equ	0xFEA
  6234                           fsr0l	equ	0xFE9
  6235                           wreg	equ	0xFE8
  6236                           postdec1	equ	0xFE5
  6237                           fsr1l	equ	0xFE1
  6238                           indf2	equ	0xFDF
  6239                           postinc2	equ	0xFDE
  6240                           postdec2	equ	0xFDD
  6241                           fsr2h	equ	0xFDA
  6242                           fsr2l	equ	0xFD9
  6243                           status	equ	0xFD8
  6244                           
  6245 ;; *************** function _ADC_Initialize *****************
  6246 ;; Defined at:
  6247 ;;		line 58 in file "mcc_generated_files/adc.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;Total ram usage:        0 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    4
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_SYSTEM_Initialize
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text31
  6276  016A2E                     __ptext31:
  6277                           	opt stack 0
  6278  016A2E                     _ADC_Initialize:
  6279                           	opt stack 25
  6280                           
  6281                           ;adc.c: 63: ADCON0 = 0x01;
  6282                           
  6283                           ;incstack = 0
  6284  016A2E  0E01               	movlw	1
  6285  016A30  6EC2               	movwf	4034,c	;volatile
  6286                           
  6287                           ;adc.c: 66: ADCON1 = 0x10;
  6288  016A32  0E10               	movlw	16
  6289  016A34  6EC1               	movwf	4033,c	;volatile
  6290                           
  6291                           ;adc.c: 69: ADCON2 = 0x86;
  6292  016A36  0E86               	movlw	134
  6293  016A38  6EC0               	movwf	4032,c	;volatile
  6294                           
  6295                           ;adc.c: 72: ADRESL = 0x00;
  6296  016A3A  0E00               	movlw	0
  6297  016A3C  6EC3               	movwf	4035,c	;volatile
  6298                           
  6299                           ;adc.c: 75: ADRESH = 0x00;
  6300  016A3E  0E00               	movlw	0
  6301  016A40  6EC4               	movwf	4036,c	;volatile
  6302  016A42  0012               	return		;funcret
  6303  016A44                     __end_of_ADC_Initialize:
  6304                           	opt stack 0
  6305                           tosu	equ	0xFFF
  6306                           tosh	equ	0xFFE
  6307                           tosl	equ	0xFFD
  6308                           pclath	equ	0xFFA
  6309                           tblptru	equ	0xFF8
  6310                           tblptrh	equ	0xFF7
  6311                           tblptrl	equ	0xFF6
  6312                           tablat	equ	0xFF5
  6313                           prodh	equ	0xFF4
  6314                           prodl	equ	0xFF3
  6315                           intcon	equ	0xFF2
  6316                           indf0	equ	0xFEF
  6317                           postinc0	equ	0xFEE
  6318                           fsr0h	equ	0xFEA
  6319                           fsr0l	equ	0xFE9
  6320                           wreg	equ	0xFE8
  6321                           postdec1	equ	0xFE5
  6322                           fsr1l	equ	0xFE1
  6323                           indf2	equ	0xFDF
  6324                           postinc2	equ	0xFDE
  6325                           postdec2	equ	0xFDD
  6326                           fsr2h	equ	0xFDA
  6327                           fsr2l	equ	0xFD9
  6328                           status	equ	0xFD8
  6329                           
  6330 ;; *************** function _Network_Manage *****************
  6331 ;; Defined at:
  6332 ;;		line 78 in file "mcc_generated_files/TCPIPLibrary/network.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  now             4   52[BANK2 ] long 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;Total ram usage:        5 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:   16
  6353 ;; This function calls:
  6354 ;;		_ARPV4_Update
  6355 ;;		_DHCP_Manage
  6356 ;;		_ETH_EventHandler
  6357 ;;		_Network_Read
  6358 ;;		_TCP_Update
  6359 ;;		_time
  6360 ;; This function is called by:
  6361 ;;		_main
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text32
  6366  015E28                     __ptext32:
  6367                           	opt stack 0
  6368  015E28                     _Network_Manage:
  6369                           	opt stack 14
  6370                           
  6371                           ;network.c: 80: time_t now;
  6372                           ;network.c: 81: static time_t nowPv = 0;
  6373                           ;network.c: 83: ETH_EventHandler();
  6374                           
  6375                           ;incstack = 0
  6376  015E28  EC81  F0B0         	call	_ETH_EventHandler	;wreg free
  6377                           
  6378                           ;network.c: 84: Network_Read();
  6379  015E2C  EC2C  F0AD         	call	_Network_Read	;wreg free
  6380                           
  6381                           ;network.c: 85: DHCP_Manage();
  6382  015E30  ECAD  F0A6         	call	_DHCP_Manage	;wreg free
  6383                           
  6384                           ;network.c: 88: time(&now);
  6385  015E34  0EC2               	movlw	low Network_Manage@now
  6386  015E36  6E13               	movwf	time@t,c
  6387  015E38  0E02               	movlw	high Network_Manage@now
  6388  015E3A  6E14               	movwf	time@t+1,c
  6389  015E3C  EC07  F0B1         	call	_time	;wreg free
  6390                           
  6391                           ;network.c: 89: if(now >= arpTimer)
  6392  015E40  0102               	movlb	2	; () banked
  6393  015E42  518A               	movf	_arpTimer& (0+255),w,b
  6394  015E44  5DC2               	subwf	Network_Manage@now& (0+255),w,b
  6395  015E46  518B               	movf	(_arpTimer+1)& (0+255),w,b
  6396  015E48  59C3               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  6397  015E4A  518C               	movf	(_arpTimer+2)& (0+255),w,b
  6398  015E4C  59C4               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  6399  015E4E  51C5               	movf	(Network_Manage@now+3)& (0+255),w,b
  6400  015E50  0A80               	xorlw	128
  6401  015E52  6FC1               	movwf	??_Network_Manage& (0+255),b
  6402  015E54  518D               	movf	(_arpTimer+3)& (0+255),w,b
  6403  015E56  0A80               	xorlw	128
  6404  015E58  59C1               	subwfb	??_Network_Manage& (0+255),w,b
  6405  015E5A  A0D8               	btfss	status,0,c
  6406  015E5C  D009               	goto	l993
  6407                           
  6408                           ; BSR set to: 2
  6409                           ;network.c: 90: {
  6410                           ;network.c: 91: ARPV4_Update();
  6411  015E5E  ECA0  F0B3         	call	_ARPV4_Update	;wreg free
  6412                           
  6413                           ;network.c: 92: arpTimer += 10;
  6414  015E62  0E0A               	movlw	10
  6415  015E64  0102               	movlb	2	; () banked
  6416  015E66  278A               	addwf	_arpTimer& (0+255),f,b
  6417  015E68  0E00               	movlw	0
  6418  015E6A  238B               	addwfc	(_arpTimer+1)& (0+255),f,b
  6419  015E6C  238C               	addwfc	(_arpTimer+2)& (0+255),f,b
  6420  015E6E  238D               	addwfc	(_arpTimer+3)& (0+255),f,b
  6421  015E70                     l993:
  6422                           
  6423                           ; BSR set to: 2
  6424                           ;network.c: 93: }
  6425                           ;network.c: 94: if(now > nowPv)
  6426                           
  6427                           ; BSR set to: 2
  6428  015E70  51C2               	movf	Network_Manage@now& (0+255),w,b
  6429  015E72  5D36               	subwf	Network_Manage@nowPv& (0+255),w,b
  6430  015E74  51C3               	movf	(Network_Manage@now+1)& (0+255),w,b
  6431  015E76  5937               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  6432  015E78  51C4               	movf	(Network_Manage@now+2)& (0+255),w,b
  6433  015E7A  5938               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  6434  015E7C  5139               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  6435  015E7E  0A80               	xorlw	128
  6436  015E80  6FC1               	movwf	??_Network_Manage& (0+255),b
  6437  015E82  51C5               	movf	(Network_Manage@now+3)& (0+255),w,b
  6438  015E84  0A80               	xorlw	128
  6439  015E86  59C1               	subwfb	??_Network_Manage& (0+255),w,b
  6440  015E88  A0D8               	btfss	status,0,c
  6441                           
  6442                           ; BSR set to: 2
  6443                           ;network.c: 95: {
  6444                           ;network.c: 97: TCP_Update();
  6445  015E8A  EC77  F0A4         	call	_TCP_Update	;wreg free
  6446                           
  6447                           ;network.c: 99: }
  6448                           ;network.c: 100: nowPv = now;
  6449  015E8E  C2C2  F236         	movff	Network_Manage@now,Network_Manage@nowPv
  6450  015E92  C2C3  F237         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  6451  015E96  C2C4  F238         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  6452  015E9A  C2C5  F239         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  6453  015E9E  0012               	return		;funcret
  6454  015EA0                     __end_of_Network_Manage:
  6455                           	opt stack 0
  6456                           tosu	equ	0xFFF
  6457                           tosh	equ	0xFFE
  6458                           tosl	equ	0xFFD
  6459                           pclath	equ	0xFFA
  6460                           tblptru	equ	0xFF8
  6461                           tblptrh	equ	0xFF7
  6462                           tblptrl	equ	0xFF6
  6463                           tablat	equ	0xFF5
  6464                           prodh	equ	0xFF4
  6465                           prodl	equ	0xFF3
  6466                           intcon	equ	0xFF2
  6467                           indf0	equ	0xFEF
  6468                           postinc0	equ	0xFEE
  6469                           fsr0h	equ	0xFEA
  6470                           fsr0l	equ	0xFE9
  6471                           wreg	equ	0xFE8
  6472                           postdec1	equ	0xFE5
  6473                           fsr1l	equ	0xFE1
  6474                           indf2	equ	0xFDF
  6475                           postinc2	equ	0xFDE
  6476                           postdec2	equ	0xFDD
  6477                           fsr2h	equ	0xFDA
  6478                           fsr2l	equ	0xFD9
  6479                           status	equ	0xFD8
  6480                           
  6481 ;; *************** function _TCP_Update *****************
  6482 ;; Defined at:
  6483 ;;		line 1392 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;		None
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  tcbPtr          2    7[BANK1 ] PTR struct .
  6488 ;;		 -> NULL(0), 
  6489 ;;  count           2    5[BANK1 ] int 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;Total ram usage:        8 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:   12
  6506 ;; This function calls:
  6507 ;;		_TCP_FiniteStateMachine
  6508 ;; This function is called by:
  6509 ;;		_Network_Manage
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text33
  6514  0148EE                     __ptext33:
  6515                           	opt stack 0
  6516  0148EE                     _TCP_Update:
  6517                           	opt stack 17
  6518                           
  6519                           ;tcpv4.c: 1394: tcpTCB_t *tcbPtr;
  6520                           ;tcpv4.c: 1395: tcbPtr = (0);
  6521                           
  6522                           ;incstack = 0
  6523  0148EE  0E00               	movlw	0
  6524  0148F0  0101               	movlb	1	; () banked
  6525  0148F2  6F07               	movwf	TCP_Update@tcbPtr& (0+255),b
  6526  0148F4  0E00               	movlw	0
  6527  0148F6  6F08               	movwf	(TCP_Update@tcbPtr+1)& (0+255),b
  6528                           
  6529                           ; BSR set to: 1
  6530                           ;tcpv4.c: 1396: int count = 0;
  6531  0148F8  0E00               	movlw	0
  6532  0148FA  6F06               	movwf	(TCP_Update@count+1)& (0+255),b
  6533  0148FC  0E00               	movlw	0
  6534  0148FE  6F05               	movwf	TCP_Update@count& (0+255),b
  6535                           
  6536                           ; BSR set to: 1
  6537                           ;tcpv4.c: 1400: nextSequenceNumber++;
  6538  014900  0E01               	movlw	1
  6539  014902  0103               	movlb	3	; () banked
  6540  014904  2700               	addwf	_nextSequenceNumber& (0+255),f,b
  6541  014906  0E00               	movlw	0
  6542  014908  2301               	addwfc	(_nextSequenceNumber+1)& (0+255),f,b
  6543  01490A  2302               	addwfc	(_nextSequenceNumber+2)& (0+255),f,b
  6544  01490C  2303               	addwfc	(_nextSequenceNumber+3)& (0+255),f,b
  6545                           
  6546                           ; BSR set to: 3
  6547                           ;tcpv4.c: 1403: nextAvailablePort = nextAvailablePort + 1;
  6548  01490E  0E01               	movlw	1
  6549  014910  0102               	movlb	2	; () banked
  6550  014912  2546               	addwf	_nextAvailablePort& (0+255),w,b
  6551  014914  6F46               	movwf	_nextAvailablePort& (0+255),b
  6552  014916  0E00               	movlw	0
  6553  014918  2147               	addwfc	(_nextAvailablePort+1)& (0+255),w,b
  6554  01491A  6F47               	movwf	(_nextAvailablePort+1)& (0+255),b
  6555                           
  6556                           ; BSR set to: 2
  6557                           ;tcpv4.c: 1404: if (nextAvailablePort < (1024u))
  6558  01491C  0E04               	movlw	4
  6559  01491E  5D47               	subwf	(_nextAvailablePort+1)& (0+255),w,b
  6560  014920  B0D8               	btfsc	status,0,c
  6561  014922  D004               	goto	l1869
  6562                           
  6563                           ; BSR set to: 2
  6564                           ;tcpv4.c: 1405: {
  6565                           ;tcpv4.c: 1406: nextAvailablePort = (1024u);
  6566  014924  0E04               	movlw	4
  6567  014926  6F47               	movwf	(_nextAvailablePort+1)& (0+255),b
  6568  014928  0E00               	movlw	0
  6569  01492A  6F46               	movwf	_nextAvailablePort& (0+255),b
  6570  01492C                     l1869:
  6571                           
  6572                           ; BSR set to: 2
  6573                           ;tcpv4.c: 1407: }
  6574                           ;tcpv4.c: 1410: tcbPtr = tcbList;
  6575                           
  6576                           ; BSR set to: 2
  6577  01492C  C03D  F107         	movff	_tcbList,TCP_Update@tcbPtr
  6578  014930  C03E  F108         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  6579                           
  6580                           ;tcpv4.c: 1411: while((tcbPtr != (0)) && (count < tcbListSize))
  6581  014934  D085               	goto	l1870
  6582  014936                     
  6583                           ;tcpv4.c: 1412: {
  6584                           ;tcpv4.c: 1413: if (tcbPtr->timeout > 0)
  6585                           
  6586                           ; BSR set to: 2
  6587  014936  0101               	movlb	1	; () banked
  6588  014938  EE20 F033          	lfsr	2,51
  6589  01493C  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6590  01493E  26D9               	addwf	fsr2l,f,c
  6591  014940  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6592  014942  22DA               	addwfc	fsr2h,f,c
  6593  014944  50DE               	movf	postinc2,w,c
  6594  014946  10DE               	iorwf	postinc2,w,c
  6595  014948  B4D8               	btfsc	status,2,c
  6596  01494A  D06D               	goto	l1875
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;tcpv4.c: 1414: {
  6600                           ;tcpv4.c: 1415: tcbPtr->timeout = tcbPtr->timeout - 1;
  6601  01494C  0EFF               	movlw	255
  6602  01494E  0100               	movlb	0	; () banked
  6603  014950  6FFC               	movwf	??_TCP_Update& (0+255),b
  6604  014952  0EFF               	movlw	255
  6605  014954  6FFD               	movwf	(??_TCP_Update+1)& (0+255),b
  6606  014956  0101               	movlb	1	; () banked
  6607  014958  EE20 F033          	lfsr	2,51
  6608  01495C  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6609  01495E  26D9               	addwf	fsr2l,f,c
  6610  014960  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6611  014962  22DA               	addwfc	fsr2h,f,c
  6612  014964  CFDE F0FE          	movff	postinc2,??_TCP_Update+2
  6613  014968  CFDD F0FF          	movff	postdec2,??_TCP_Update+3
  6614  01496C  0100               	movlb	0	; () banked
  6615  01496E  51FC               	movf	??_TCP_Update& (0+255),w,b
  6616  014970  27FE               	addwf	(??_TCP_Update+2)& (0+255),f,b
  6617  014972  51FD               	movf	(??_TCP_Update+1)& (0+255),w,b
  6618  014974  23FF               	addwfc	(??_TCP_Update+3)& (0+255),f,b
  6619  014976  0101               	movlb	1	; () banked
  6620  014978  EE20 F033          	lfsr	2,51
  6621  01497C  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6622  01497E  26D9               	addwf	fsr2l,f,c
  6623  014980  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6624  014982  22DA               	addwfc	fsr2h,f,c
  6625  014984  C0FE  FFDE         	movff	??_TCP_Update+2,postinc2
  6626  014988  C0FF  FFDD         	movff	??_TCP_Update+3,postdec2
  6627                           
  6628                           ;tcpv4.c: 1418: {
  6629                           ;tcpv4.c: 1422: if (tcbPtr->timeoutsCount >= 0)
  6630  01498C  EE20 F033          	lfsr	2,51
  6631  014990  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6632  014992  26D9               	addwf	fsr2l,f,c
  6633  014994  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6634  014996  22DA               	addwfc	fsr2h,f,c
  6635  014998  50DE               	movf	postinc2,w,c
  6636  01499A  10DE               	iorwf	postinc2,w,c
  6637  01499C  A4D8               	btfss	status,2,c
  6638  01499E  D043               	goto	l1875
  6639                           
  6640                           ; BSR set to: 1
  6641                           ;tcpv4.c: 1423: {
  6642                           ;tcpv4.c: 1425: if (tcbPtr->connectionEvent == NOP)
  6643  0149A0  EE20 F02E          	lfsr	2,46
  6644  0149A4  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6645  0149A6  26D9               	addwf	fsr2l,f,c
  6646  0149A8  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6647  0149AA  22DA               	addwfc	fsr2h,f,c
  6648  0149AC  0E0D               	movlw	13
  6649  0149AE  18DE               	xorwf	postinc2,w,c
  6650  0149B0  A4D8               	btfss	status,2,c
  6651  0149B2  D039               	goto	l1875
  6652                           
  6653                           ; BSR set to: 1
  6654                           ;tcpv4.c: 1426: {
  6655                           ;tcpv4.c: 1427: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  6656  0149B4  EE20 F035          	lfsr	2,53
  6657  0149B8  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6658  0149BA  26D9               	addwf	fsr2l,f,c
  6659  0149BC  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6660  0149BE  22DA               	addwfc	fsr2h,f,c
  6661  0149C0  EE10 F033          	lfsr	1,51
  6662  0149C4  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6663  0149C6  26E1               	addwf	fsr1l,f,c
  6664  0149C8  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6665  0149CA  22E2               	addwfc	fsr1h,f,c
  6666  0149CC  CFDE FFE6          	movff	postinc2,postinc1
  6667  0149D0  CFDD FFE5          	movff	postdec2,postdec1
  6668                           
  6669                           ; BSR set to: 1
  6670                           ;tcpv4.c: 1429: if (tcbPtr->timeoutsCount != 0)
  6671  0149D4  EE20 F037          	lfsr	2,55
  6672  0149D8  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6673  0149DA  26D9               	addwf	fsr2l,f,c
  6674  0149DC  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6675  0149DE  22DA               	addwfc	fsr2h,f,c
  6676  0149E0  50DF               	movf	indf2,w,c
  6677  0149E2  B4D8               	btfsc	status,2,c
  6678  0149E4  D011               	goto	l1876
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;tcpv4.c: 1430: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  6682  0149E6  EE20 F037          	lfsr	2,55
  6683  0149EA  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6684  0149EC  26D9               	addwf	fsr2l,f,c
  6685  0149EE  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6686  0149F0  22DA               	addwfc	fsr2h,f,c
  6687  0149F2  EE10 F037          	lfsr	1,55
  6688  0149F6  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6689  0149F8  26E1               	addwf	fsr1l,f,c
  6690  0149FA  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6691  0149FC  22E2               	addwfc	fsr1h,f,c
  6692  0149FE  50E7               	movf	indf1,w,c
  6693  014A00  0100               	movlb	0	; () banked
  6694  014A02  6FFC               	movwf	??_TCP_Update& (0+255),b
  6695  014A04  05FC               	decf	??_TCP_Update& (0+255),w,b
  6696  014A06  6EDF               	movwf	indf2,c
  6697  014A08                     l1876:
  6698                           
  6699                           ;tcpv4.c: 1431: tcbPtr->connectionEvent = TIMEOUT;
  6700                           
  6701                           ; BSR set to: 0
  6702  014A08  0101               	movlb	1	; () banked
  6703  014A0A  EE20 F02E          	lfsr	2,46
  6704  014A0E  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6705  014A10  26D9               	addwf	fsr2l,f,c
  6706  014A12  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6707  014A14  22DA               	addwfc	fsr2h,f,c
  6708  014A16  0E0C               	movlw	12
  6709  014A18  6EDF               	movwf	indf2,c
  6710                           
  6711                           ; BSR set to: 1
  6712                           ;tcpv4.c: 1432: currentTCB = tcbPtr;
  6713  014A1A  C107  F03B         	movff	TCP_Update@tcbPtr,_currentTCB
  6714  014A1E  C108  F03C         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  6715                           
  6716                           ; BSR set to: 1
  6717                           ;tcpv4.c: 1433: TCP_FiniteStateMachine();
  6718  014A22  EC00  F080         	call	_TCP_FiniteStateMachine	;wreg free
  6719  014A26                     l1875:
  6720                           
  6721                           ;tcpv4.c: 1434: }
  6722                           ;tcpv4.c: 1435: }
  6723                           ;tcpv4.c: 1436: }
  6724                           ;tcpv4.c: 1437: }
  6725                           ;tcpv4.c: 1438: tcbPtr = tcbPtr->nextTCB;
  6726  014A26  0101               	movlb	1	; () banked
  6727  014A28  EE20 F02F          	lfsr	2,47
  6728  014A2C  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6729  014A2E  26D9               	addwf	fsr2l,f,c
  6730  014A30  5108               	movf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6731  014A32  22DA               	addwfc	fsr2h,f,c
  6732  014A34  CFDE F107          	movff	postinc2,TCP_Update@tcbPtr
  6733  014A38  CFDD F108          	movff	postdec2,TCP_Update@tcbPtr+1
  6734                           
  6735                           ; BSR set to: 1
  6736                           ;tcpv4.c: 1439: count ++;
  6737  014A3C  4B05               	infsnz	TCP_Update@count& (0+255),f,b
  6738  014A3E  2B06               	incf	(TCP_Update@count+1)& (0+255),f,b
  6739  014A40                     l1870:
  6740                           
  6741                           ; BSR set to: 1
  6742  014A40  0101               	movlb	1	; () banked
  6743  014A42  5107               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6744  014A44  1108               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6745  014A46  B4D8               	btfsc	status,2,c
  6746  014A48  0012               	return	
  6747                           
  6748                           ; BSR set to: 1
  6749  014A4A  C045  F0FC         	movff	_tcbListSize,??_TCP_Update
  6750  014A4E  0100               	movlb	0	; () banked
  6751  014A50  6BFD               	clrf	(??_TCP_Update+1)& (0+255),b
  6752  014A52  BFFC               	btfsc	??_TCP_Update& (0+255),7,b
  6753  014A54  07FD               	decf	(??_TCP_Update+1)& (0+255),f,b
  6754  014A56  51FC               	movf	??_TCP_Update& (0+255),w,b
  6755  014A58  0101               	movlb	1	; () banked
  6756  014A5A  5D05               	subwf	TCP_Update@count& (0+255),w,b
  6757  014A5C  5106               	movf	(TCP_Update@count+1)& (0+255),w,b
  6758  014A5E  0A80               	xorlw	128
  6759  014A60  0100               	movlb	0	; () banked
  6760  014A62  6FFE               	movwf	(??_TCP_Update+2)& (0+255),b
  6761  014A64  51FD               	movf	(??_TCP_Update+1)& (0+255),w,b
  6762  014A66  0A80               	xorlw	128
  6763  014A68  59FE               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  6764  014A6A  B0D8               	btfsc	status,0,c
  6765  014A6C  0012               	return	
  6766  014A6E  D763               	goto	l1871
  6767  014A70                     __end_of_TCP_Update:
  6768                           	opt stack 0
  6769                           tosu	equ	0xFFF
  6770                           tosh	equ	0xFFE
  6771                           tosl	equ	0xFFD
  6772                           pclath	equ	0xFFA
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           indf0	equ	0xFEF
  6781                           postinc0	equ	0xFEE
  6782                           fsr0h	equ	0xFEA
  6783                           fsr0l	equ	0xFE9
  6784                           wreg	equ	0xFE8
  6785                           indf1	equ	0xFE7
  6786                           postinc1	equ	0xFE6
  6787                           postdec1	equ	0xFE5
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           postdec2	equ	0xFDD
  6793                           fsr2h	equ	0xFDA
  6794                           fsr2l	equ	0xFD9
  6795                           status	equ	0xFD8
  6796                           
  6797 ;; *************** function _Network_Read *****************
  6798 ;; Defined at:
  6799 ;;		line 103 in file "mcc_generated_files/TCPIPLibrary/network.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  debug_str      80    0        unsigned char [80]
  6804 ;;  header         14   37[BANK2 ] struct .
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;Total ram usage:       18 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:   15
  6821 ;; This function calls:
  6822 ;;		_ARPV4_Packet
  6823 ;;		_ETH_Flush
  6824 ;;		_ETH_NextPacketUpdate
  6825 ;;		_ETH_ReadBlock
  6826 ;;		_IPV4_Packet
  6827 ;; This function is called by:
  6828 ;;		_Network_Manage
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text34
  6833  015A58                     __ptext34:
  6834                           	opt stack 0
  6835  015A58                     _Network_Read:
  6836                           	opt stack 14
  6837                           
  6838                           ;network.c: 105: ethernetFrame_t header;
  6839                           ;network.c: 106: char debug_str[80];
  6840                           ;network.c: 108: if(ethData.pktReady)
  6841                           
  6842                           ;incstack = 0
  6843  015A58  0102               	movlb	2	; () banked
  6844  015A5A  A324               	btfss	_ethData& (0+255),1,b	;volatile
  6845  015A5C  0012               	return	
  6846                           
  6847                           ; BSR set to: 2
  6848                           ;network.c: 109: {
  6849                           ;network.c: 110: ETH_NextPacketUpdate();
  6850  015A5E  EC5E  F0B2         	call	_ETH_NextPacketUpdate	;wreg free
  6851                           
  6852                           ;network.c: 111: ETH_ReadBlock((char *)&header, sizeof(header));
  6853  015A62  0EB3               	movlw	low Network_Read@header
  6854  015A64  6E13               	movwf	ETH_ReadBlock@buffer,c
  6855  015A66  0E02               	movlw	high Network_Read@header
  6856  015A68  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  6857  015A6A  0E00               	movlw	0
  6858  015A6C  6E16               	movwf	ETH_ReadBlock@length+1,c
  6859  015A6E  0E0E               	movlw	14
  6860  015A70  6E15               	movwf	ETH_ReadBlock@length,c
  6861  015A72  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
  6862                           
  6863                           ;network.c: 112: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  6864  015A76  0102               	movlb	2	; () banked
  6865  015A78  51BF               	movf	(Network_Read@header+12)& (0+255),w,b
  6866  015A7A  6FB0               	movwf	(??_Network_Read+1)& (0+255),b
  6867  015A7C  6BAF               	clrf	??_Network_Read& (0+255),b
  6868  015A7E  EE22  F0BF         	lfsr	2,Network_Read@header+12
  6869  015A82  CFDE F2B1          	movff	postinc2,??_Network_Read+2
  6870  015A86  CFDD F2B2          	movff	postdec2,??_Network_Read+3
  6871  015A8A  C2B2  F2B1         	movff	??_Network_Read+3,??_Network_Read+2
  6872  015A8E  6BB2               	clrf	(??_Network_Read+3)& (0+255),b
  6873  015A90  0EFF               	movlw	255
  6874  015A92  17B1               	andwf	(??_Network_Read+2)& (0+255),f,b
  6875  015A94  0E00               	movlw	0
  6876  015A96  17B2               	andwf	(??_Network_Read+3)& (0+255),f,b
  6877  015A98  51AF               	movf	??_Network_Read& (0+255),w,b
  6878  015A9A  11B1               	iorwf	(??_Network_Read+2)& (0+255),w,b
  6879  015A9C  6FBF               	movwf	(Network_Read@header+12)& (0+255),b
  6880  015A9E  51B0               	movf	(??_Network_Read+1)& (0+255),w,b
  6881  015AA0  11B2               	iorwf	(??_Network_Read+3)& (0+255),w,b
  6882  015AA2  6FC0               	movwf	(Network_Read@header+13)& (0+255),b
  6883                           
  6884                           ;network.c: 113: switch (header.id.type)
  6885  015AA4  D006               	goto	l999
  6886  015AA6                     
  6887                           ; BSR set to: 2
  6888                           ;network.c: 118: ARPV4_Packet();
  6889                           
  6890                           ; BSR set to: 2
  6891  015AA6  EC31  F093         	call	_ARPV4_Packet	;wreg free
  6892                           
  6893                           ;network.c: 119: break;
  6894  015AAA  D022               	goto	l1001
  6895  015AAC                     
  6896                           ;network.c: 121: IPV4_Packet();
  6897  015AAC  EC90  F090         	call	_IPV4_Packet	;wreg free
  6898                           
  6899                           ;network.c: 127: }
  6900                           
  6901                           ;network.c: 126: break;
  6902                           
  6903                           ;network.c: 125: default:
  6904                           
  6905                           ;network.c: 124: break;
  6906                           
  6907                           ;network.c: 123: case 0x86DD:
  6908                           
  6909                           ;network.c: 122: break;
  6910  015AB0  D01F               	goto	l1001
  6911  015AB2                     l999:
  6912  015AB2  EE22  F0BF         	lfsr	2,Network_Read@header+12
  6913  015AB6  CFDE F2AF          	movff	postinc2,??_Network_Read
  6914  015ABA  CFDD F2B0          	movff	postdec2,??_Network_Read+1
  6915                           
  6916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  6917                           ; Switch size 1, requested type "space"
  6918                           ; Number of cases is 3, Range of values is 8 to 134
  6919                           ; switch strategies available:
  6920                           ; Name         Instructions Cycles
  6921                           ; simple_byte           10     6 (average)
  6922                           ;	Chosen strategy is simple_byte
  6923  015ABE  0102               	movlb	2	; () banked
  6924  015AC0  51B0               	movf	(??_Network_Read+1)& (0+255),w,b
  6925  015AC2  0A08               	xorlw	8	; case 8
  6926  015AC4  B4D8               	btfsc	status,2,c
  6927  015AC6  D007               	goto	l12368
  6928  015AC8  0A89               	xorlw	137	; case 129
  6929  015ACA  B4D8               	btfsc	status,2,c
  6930  015ACC  D00C               	goto	l12370
  6931  015ACE  0A07               	xorlw	7	; case 134
  6932  015AD0  B4D8               	btfsc	status,2,c
  6933  015AD2  D00C               	goto	l12372
  6934  015AD4  D00D               	goto	l1001
  6935  015AD6                     l12368:
  6936                           
  6937                           ; BSR set to: 2
  6938                           ; Switch size 1, requested type "space"
  6939                           ; Number of cases is 2, Range of values is 0 to 6
  6940                           ; switch strategies available:
  6941                           ; Name         Instructions Cycles
  6942                           ; simple_byte            7     4 (average)
  6943                           ;	Chosen strategy is simple_byte
  6944  015AD6  51AF               	movf	??_Network_Read& (0+255),w,b
  6945  015AD8  0A00               	xorlw	0	; case 0
  6946  015ADA  B4D8               	btfsc	status,2,c
  6947  015ADC  D7E7               	goto	l1003
  6948  015ADE  0A06               	xorlw	6	; case 6
  6949  015AE0  B4D8               	btfsc	status,2,c
  6950  015AE2  D7E1               	goto	l1002
  6951  015AE4  D005               	goto	l1001
  6952  015AE6                     l12370:
  6953                           
  6954                           ; BSR set to: 2
  6955                           ; Switch size 1, requested type "space"
  6956                           ; Number of cases is 1, Range of values is 0 to 0
  6957                           ; switch strategies available:
  6958                           ; Name         Instructions Cycles
  6959                           ; simple_byte            4     3 (average)
  6960                           ;	Chosen strategy is simple_byte
  6961  015AE6  51AF               	movf	??_Network_Read& (0+255),w,b
  6962  015AE8  0A00               	xorlw	0	; case 0
  6963  015AEA  D002               	goto	l1001
  6964  015AEC                     l12372:
  6965                           
  6966                           ; BSR set to: 2
  6967                           ; Switch size 1, requested type "space"
  6968                           ; Number of cases is 1, Range of values is 221 to 221
  6969                           ; switch strategies available:
  6970                           ; Name         Instructions Cycles
  6971                           ; simple_byte            4     3 (average)
  6972                           ;	Chosen strategy is simple_byte
  6973  015AEC  51AF               	movf	??_Network_Read& (0+255),w,b
  6974  015AEE  0ADD               	xorlw	221	; case 221
  6975  015AF0                     l1001:
  6976                           
  6977                           ;network.c: 128: ETH_Flush();
  6978                           
  6979                           ; BSR set to: 2
  6980  015AF0  EC8A  F0AF         	call	_ETH_Flush	;wreg free
  6981  015AF4  0012               	return	
  6982  015AF6                     __end_of_Network_Read:
  6983                           	opt stack 0
  6984                           tosu	equ	0xFFF
  6985                           tosh	equ	0xFFE
  6986                           tosl	equ	0xFFD
  6987                           pclath	equ	0xFFA
  6988                           tblptru	equ	0xFF8
  6989                           tblptrh	equ	0xFF7
  6990                           tblptrl	equ	0xFF6
  6991                           tablat	equ	0xFF5
  6992                           prodh	equ	0xFF4
  6993                           prodl	equ	0xFF3
  6994                           intcon	equ	0xFF2
  6995                           indf0	equ	0xFEF
  6996                           postinc0	equ	0xFEE
  6997                           fsr0h	equ	0xFEA
  6998                           fsr0l	equ	0xFE9
  6999                           wreg	equ	0xFE8
  7000                           indf1	equ	0xFE7
  7001                           postinc1	equ	0xFE6
  7002                           postdec1	equ	0xFE5
  7003                           fsr1h	equ	0xFE2
  7004                           fsr1l	equ	0xFE1
  7005                           indf2	equ	0xFDF
  7006                           postinc2	equ	0xFDE
  7007                           postdec2	equ	0xFDD
  7008                           fsr2h	equ	0xFDA
  7009                           fsr2l	equ	0xFD9
  7010                           status	equ	0xFD8
  7011                           
  7012 ;; *************** function _IPV4_Packet *****************
  7013 ;; Defined at:
  7014 ;;		line 102 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;		None
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;  msg            40    0        unsigned char [40]
  7019 ;;  cksm            2   31[BANK2 ] unsigned int 
  7020 ;;  length          2   29[BANK2 ] unsigned int 
  7021 ;;  hdrLen          1   28[BANK2 ] unsigned char 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      enum E392
  7024 ;; Registers used:
  7025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Temps:          0       0       0      28       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Totals:         0       0       0      33       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;Total ram usage:       33 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; Hardware stack levels required when called:   14
  7038 ;; This function calls:
  7039 ;;		_ETH_Dump
  7040 ;;		_ETH_ReadBlock
  7041 ;;		_ETH_RxComputeChecksum
  7042 ;;		_ICMP_Receive
  7043 ;;		_IPV4_PseudoHeaderChecksum
  7044 ;;		_IPV4_SaveStartPosition
  7045 ;;		_TCP_Recv
  7046 ;;		_UDP_Receive
  7047 ;; This function is called by:
  7048 ;;		_Network_Read
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text35
  7053  012120                     __ptext35:
  7054                           	opt stack 0
  7055  012120                     _IPV4_Packet:
  7056                           	opt stack 14
  7057                           
  7058                           ;ipv4.c: 104: uint16_t cksm = 0;
  7059                           
  7060                           ;incstack = 0
  7061  012120  0E00               	movlw	0
  7062  012122  0102               	movlb	2	; () banked
  7063  012124  6FAE               	movwf	(IPV4_Packet@cksm+1)& (0+255),b
  7064  012126  0E00               	movlw	0
  7065  012128  6FAD               	movwf	IPV4_Packet@cksm& (0+255),b
  7066                           
  7067                           ;ipv4.c: 105: uint16_t length = 0;
  7068  01212A  0E00               	movlw	0
  7069  01212C  6FAC               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7070  01212E  0E00               	movlw	0
  7071  012130  6FAB               	movwf	IPV4_Packet@length& (0+255),b
  7072                           
  7073                           ; BSR set to: 2
  7074                           ;ipv4.c: 106: char msg[40];
  7075                           ;ipv4.c: 107: uint8_t hdrLen;
  7076                           ;ipv4.c: 110: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  7077  012132  0E00               	movlw	0
  7078  012134  6E26               	movwf	ETH_RxComputeChecksum@len+1,c
  7079  012136  0E14               	movlw	20
  7080  012138  6E25               	movwf	ETH_RxComputeChecksum@len,c
  7081  01213A  0E00               	movlw	0
  7082  01213C  6E28               	movwf	ETH_RxComputeChecksum@seed+1,c
  7083  01213E  0E00               	movlw	0
  7084  012140  6E27               	movwf	ETH_RxComputeChecksum@seed,c
  7085  012142  EC86  F0B1         	call	_ETH_RxComputeChecksum	;wreg free
  7086  012146  C025  F2AD         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7087  01214A  C026  F2AE         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7088                           
  7089                           ;ipv4.c: 111: if (cksm != 0)
  7090  01214E  0102               	movlb	2	; () banked
  7091  012150  51AD               	movf	IPV4_Packet@cksm& (0+255),w,b
  7092  012152  11AE               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  7093  012154  A4D8               	btfss	status,2,c
  7094  012156  0012               	return	
  7095                           
  7096                           ; BSR set to: 2
  7097                           ;ipv4.c: 114: }
  7098                           ;ipv4.c: 116: IPV4_SaveStartPosition();
  7099                           
  7100                           ; BSR set to: 2
  7101                           
  7102                           ; BSR set to: 2
  7103                           ;ipv4.c: 112: {
  7104                           ;ipv4.c: 113: return IPV4_CHECKSUM_FAILS;
  7105                           ;	Return value of _IPV4_Packet is never used
  7106  012158  EC56  F0B5         	call	_IPV4_SaveStartPosition	;wreg free
  7107                           
  7108                           ;ipv4.c: 117: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  7109  01215C  0E68               	movlw	low _ipv4Header
  7110  01215E  6E13               	movwf	ETH_ReadBlock@buffer,c
  7111  012160  0E02               	movlw	high _ipv4Header
  7112  012162  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  7113  012164  0E00               	movlw	0
  7114  012166  6E16               	movwf	ETH_ReadBlock@length+1,c
  7115  012168  0E14               	movlw	20
  7116  01216A  6E15               	movwf	ETH_ReadBlock@length,c
  7117  01216C  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
  7118                           
  7119                           ;ipv4.c: 118: if(ipv4Header.version != 4)
  7120  012170  0102               	movlb	2	; () banked
  7121  012172  3968               	swapf	_ipv4Header& (0+255),w,b
  7122  012174  0B0F               	andlw	15
  7123  012176  0A04               	xorlw	4
  7124  012178  A4D8               	btfss	status,2,c
  7125  01217A  0012               	return	
  7126                           
  7127                           ; BSR set to: 2
  7128                           ;ipv4.c: 121: }
  7129                           ;ipv4.c: 123: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  7130                           
  7131                           ; BSR set to: 2
  7132                           
  7133                           ; BSR set to: 2
  7134                           ;ipv4.c: 119: {
  7135                           ;ipv4.c: 120: return IP_WRONG_VERSION;
  7136                           ;	Return value of _IPV4_Packet is never used
  7137  01217C  0EFF               	movlw	255
  7138  01217E  1578               	andwf	(_ipv4Header+16)& (0+255),w,b
  7139  012180  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7140  012182  0E00               	movlw	0
  7141  012184  1579               	andwf	(_ipv4Header+17)& (0+255),w,b
  7142  012186  6F8F               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7143  012188  0E00               	movlw	0
  7144  01218A  157A               	andwf	(_ipv4Header+18)& (0+255),w,b
  7145  01218C  6F90               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7146  01218E  0E00               	movlw	0
  7147  012190  157B               	andwf	(_ipv4Header+19)& (0+255),w,b
  7148  012192  6F91               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7149  012194  C28E  F291         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  7150  012198  6B90               	clrf	(??_IPV4_Packet+2)& (0+255),b
  7151  01219A  6B8F               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7152  01219C  6B8E               	clrf	??_IPV4_Packet& (0+255),b
  7153  01219E  EE22  F078         	lfsr	2,_ipv4Header+16
  7154  0121A2  0E00               	movlw	0
  7155  0121A4  14DE               	andwf	postinc2,w,c
  7156  0121A6  6F92               	movwf	(??_IPV4_Packet+4)& (0+255),b
  7157  0121A8  0EFF               	movlw	255
  7158  0121AA  14DE               	andwf	postinc2,w,c
  7159  0121AC  6F93               	movwf	(??_IPV4_Packet+5)& (0+255),b
  7160  0121AE  0E00               	movlw	0
  7161  0121B0  14DE               	andwf	postinc2,w,c
  7162  0121B2  6F94               	movwf	(??_IPV4_Packet+6)& (0+255),b
  7163  0121B4  0E00               	movlw	0
  7164  0121B6  14DE               	andwf	postinc2,w,c
  7165  0121B8  6F95               	movwf	(??_IPV4_Packet+7)& (0+255),b
  7166  0121BA  C294  F295         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  7167  0121BE  C293  F294         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  7168  0121C2  C292  F293         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  7169  0121C6  6B92               	clrf	(??_IPV4_Packet+4)& (0+255),b
  7170  0121C8  C278  F296         	movff	_ipv4Header+16,??_IPV4_Packet+8
  7171  0121CC  C279  F297         	movff	_ipv4Header+17,??_IPV4_Packet+9
  7172  0121D0  C27A  F298         	movff	_ipv4Header+18,??_IPV4_Packet+10
  7173  0121D4  C27B  F299         	movff	_ipv4Header+19,??_IPV4_Packet+11
  7174  0121D8  C297  F296         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  7175  0121DC  C298  F297         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  7176  0121E0  C299  F298         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  7177  0121E4  6B99               	clrf	(??_IPV4_Packet+11)& (0+255),b
  7178  0121E6  0E00               	movlw	0
  7179  0121E8  1596               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
  7180  0121EA  6F9A               	movwf	(??_IPV4_Packet+12)& (0+255),b
  7181  0121EC  0EFF               	movlw	255
  7182  0121EE  1597               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
  7183  0121F0  6F9B               	movwf	(??_IPV4_Packet+13)& (0+255),b
  7184  0121F2  0E00               	movlw	0
  7185  0121F4  1598               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
  7186  0121F6  6F9C               	movwf	(??_IPV4_Packet+14)& (0+255),b
  7187  0121F8  0E00               	movlw	0
  7188  0121FA  1599               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
  7189  0121FC  6F9D               	movwf	(??_IPV4_Packet+15)& (0+255),b
  7190  0121FE  EE22  F078         	lfsr	2,_ipv4Header+16
  7191  012202  0E00               	movlw	0
  7192  012204  14DE               	andwf	postinc2,w,c
  7193  012206  6F9E               	movwf	(??_IPV4_Packet+16)& (0+255),b
  7194  012208  0E00               	movlw	0
  7195  01220A  14DE               	andwf	postinc2,w,c
  7196  01220C  6F9F               	movwf	(??_IPV4_Packet+17)& (0+255),b
  7197  01220E  0E00               	movlw	0
  7198  012210  14DE               	andwf	postinc2,w,c
  7199  012212  6FA0               	movwf	(??_IPV4_Packet+18)& (0+255),b
  7200  012214  0EFF               	movlw	255
  7201  012216  14DE               	andwf	postinc2,w,c
  7202  012218  6FA1               	movwf	(??_IPV4_Packet+19)& (0+255),b
  7203  01221A  0E19               	movlw	25
  7204  01221C  D005               	goto	u11810
  7205  01221E                     u11815:
  7206  01221E  90D8               	bcf	status,0,c
  7207  012220  33A1               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  7208  012222  33A0               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  7209  012224  339F               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  7210  012226  339E               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  7211  012228                     u11810:
  7212  012228  2EE8               	decfsz	wreg,f,c
  7213  01222A  D7F9               	goto	u11815
  7214  01222C  519A               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  7215  01222E  119E               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  7216  012230  6FA2               	movwf	(??_IPV4_Packet+20)& (0+255),b
  7217  012232  519B               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  7218  012234  119F               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  7219  012236  6FA3               	movwf	(??_IPV4_Packet+21)& (0+255),b
  7220  012238  519C               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  7221  01223A  11A0               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  7222  01223C  6FA4               	movwf	(??_IPV4_Packet+22)& (0+255),b
  7223  01223E  519D               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  7224  012240  11A1               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  7225  012242  6FA5               	movwf	(??_IPV4_Packet+23)& (0+255),b
  7226  012244  5192               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  7227  012246  11A2               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  7228  012248  6FA6               	movwf	(??_IPV4_Packet+24)& (0+255),b
  7229  01224A  5193               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  7230  01224C  11A3               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  7231  01224E  6FA7               	movwf	(??_IPV4_Packet+25)& (0+255),b
  7232  012250  5194               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  7233  012252  11A4               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  7234  012254  6FA8               	movwf	(??_IPV4_Packet+26)& (0+255),b
  7235  012256  5195               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  7236  012258  11A5               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  7237  01225A  6FA9               	movwf	(??_IPV4_Packet+27)& (0+255),b
  7238  01225C  518E               	movf	??_IPV4_Packet& (0+255),w,b
  7239  01225E  11A6               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  7240  012260  6F78               	movwf	(_ipv4Header+16)& (0+255),b
  7241  012262  518F               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  7242  012264  11A7               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  7243  012266  6F79               	movwf	(_ipv4Header+17)& (0+255),b
  7244  012268  5190               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  7245  01226A  11A8               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  7246  01226C  6F7A               	movwf	(_ipv4Header+18)& (0+255),b
  7247  01226E  5191               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  7248  012270  11A9               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  7249  012272  6F7B               	movwf	(_ipv4Header+19)& (0+255),b
  7250                           
  7251                           ;ipv4.c: 124: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  7252  012274  0EFF               	movlw	255
  7253  012276  1574               	andwf	(_ipv4Header+12)& (0+255),w,b
  7254  012278  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7255  01227A  0E00               	movlw	0
  7256  01227C  1575               	andwf	(_ipv4Header+13)& (0+255),w,b
  7257  01227E  6F8F               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7258  012280  0E00               	movlw	0
  7259  012282  1576               	andwf	(_ipv4Header+14)& (0+255),w,b
  7260  012284  6F90               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7261  012286  0E00               	movlw	0
  7262  012288  1577               	andwf	(_ipv4Header+15)& (0+255),w,b
  7263  01228A  6F91               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7264  01228C  C28E  F291         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  7265  012290  6B90               	clrf	(??_IPV4_Packet+2)& (0+255),b
  7266  012292  6B8F               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7267  012294  6B8E               	clrf	??_IPV4_Packet& (0+255),b
  7268  012296  EE22  F074         	lfsr	2,_ipv4Header+12
  7269  01229A  0E00               	movlw	0
  7270  01229C  14DE               	andwf	postinc2,w,c
  7271  01229E  6F92               	movwf	(??_IPV4_Packet+4)& (0+255),b
  7272  0122A0  0EFF               	movlw	255
  7273  0122A2  14DE               	andwf	postinc2,w,c
  7274  0122A4  6F93               	movwf	(??_IPV4_Packet+5)& (0+255),b
  7275  0122A6  0E00               	movlw	0
  7276  0122A8  14DE               	andwf	postinc2,w,c
  7277  0122AA  6F94               	movwf	(??_IPV4_Packet+6)& (0+255),b
  7278  0122AC  0E00               	movlw	0
  7279  0122AE  14DE               	andwf	postinc2,w,c
  7280  0122B0  6F95               	movwf	(??_IPV4_Packet+7)& (0+255),b
  7281  0122B2  C294  F295         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  7282  0122B6  C293  F294         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  7283  0122BA  C292  F293         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  7284  0122BE  6B92               	clrf	(??_IPV4_Packet+4)& (0+255),b
  7285  0122C0  C274  F296         	movff	_ipv4Header+12,??_IPV4_Packet+8
  7286  0122C4  C275  F297         	movff	_ipv4Header+13,??_IPV4_Packet+9
  7287  0122C8  C276  F298         	movff	_ipv4Header+14,??_IPV4_Packet+10
  7288  0122CC  C277  F299         	movff	_ipv4Header+15,??_IPV4_Packet+11
  7289  0122D0  C297  F296         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  7290  0122D4  C298  F297         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  7291  0122D8  C299  F298         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  7292  0122DC  6B99               	clrf	(??_IPV4_Packet+11)& (0+255),b
  7293  0122DE  0E00               	movlw	0
  7294  0122E0  1596               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
  7295  0122E2  6F9A               	movwf	(??_IPV4_Packet+12)& (0+255),b
  7296  0122E4  0EFF               	movlw	255
  7297  0122E6  1597               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
  7298  0122E8  6F9B               	movwf	(??_IPV4_Packet+13)& (0+255),b
  7299  0122EA  0E00               	movlw	0
  7300  0122EC  1598               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
  7301  0122EE  6F9C               	movwf	(??_IPV4_Packet+14)& (0+255),b
  7302  0122F0  0E00               	movlw	0
  7303  0122F2  1599               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
  7304  0122F4  6F9D               	movwf	(??_IPV4_Packet+15)& (0+255),b
  7305  0122F6  EE22  F074         	lfsr	2,_ipv4Header+12
  7306  0122FA  0E00               	movlw	0
  7307  0122FC  14DE               	andwf	postinc2,w,c
  7308  0122FE  6F9E               	movwf	(??_IPV4_Packet+16)& (0+255),b
  7309  012300  0E00               	movlw	0
  7310  012302  14DE               	andwf	postinc2,w,c
  7311  012304  6F9F               	movwf	(??_IPV4_Packet+17)& (0+255),b
  7312  012306  0E00               	movlw	0
  7313  012308  14DE               	andwf	postinc2,w,c
  7314  01230A  6FA0               	movwf	(??_IPV4_Packet+18)& (0+255),b
  7315  01230C  0EFF               	movlw	255
  7316  01230E  14DE               	andwf	postinc2,w,c
  7317  012310  6FA1               	movwf	(??_IPV4_Packet+19)& (0+255),b
  7318  012312  0E19               	movlw	25
  7319  012314  D005               	goto	u11820
  7320  012316                     u11825:
  7321  012316  90D8               	bcf	status,0,c
  7322  012318  33A1               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  7323  01231A  33A0               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  7324  01231C  339F               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  7325  01231E  339E               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  7326  012320                     u11820:
  7327  012320  2EE8               	decfsz	wreg,f,c
  7328  012322  D7F9               	goto	u11825
  7329  012324  519A               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  7330  012326  119E               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  7331  012328  6FA2               	movwf	(??_IPV4_Packet+20)& (0+255),b
  7332  01232A  519B               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  7333  01232C  119F               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  7334  01232E  6FA3               	movwf	(??_IPV4_Packet+21)& (0+255),b
  7335  012330  519C               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  7336  012332  11A0               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  7337  012334  6FA4               	movwf	(??_IPV4_Packet+22)& (0+255),b
  7338  012336  519D               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  7339  012338  11A1               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  7340  01233A  6FA5               	movwf	(??_IPV4_Packet+23)& (0+255),b
  7341  01233C  5192               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  7342  01233E  11A2               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  7343  012340  6FA6               	movwf	(??_IPV4_Packet+24)& (0+255),b
  7344  012342  5193               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  7345  012344  11A3               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  7346  012346  6FA7               	movwf	(??_IPV4_Packet+25)& (0+255),b
  7347  012348  5194               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  7348  01234A  11A4               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  7349  01234C  6FA8               	movwf	(??_IPV4_Packet+26)& (0+255),b
  7350  01234E  5195               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  7351  012350  11A5               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  7352  012352  6FA9               	movwf	(??_IPV4_Packet+27)& (0+255),b
  7353  012354  518E               	movf	??_IPV4_Packet& (0+255),w,b
  7354  012356  11A6               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  7355  012358  6F74               	movwf	(_ipv4Header+12)& (0+255),b
  7356  01235A  518F               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  7357  01235C  11A7               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  7358  01235E  6F75               	movwf	(_ipv4Header+13)& (0+255),b
  7359  012360  5190               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  7360  012362  11A8               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  7361  012364  6F76               	movwf	(_ipv4Header+14)& (0+255),b
  7362  012366  5191               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  7363  012368  11A9               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  7364  01236A  6F77               	movwf	(_ipv4Header+15)& (0+255),b
  7365                           
  7366                           ; BSR set to: 2
  7367                           ;ipv4.c: 126: if(ipv4Header.srcIpAddress == 0xFFFFFFFF)
  7368  01236C  2974               	incf	(_ipv4Header+12)& (0+255),w,b
  7369  01236E  E107               	bnz	l11742
  7370  012370  2975               	incf	(_ipv4Header+13)& (0+255),w,b
  7371  012372  E105               	bnz	l11742
  7372  012374  2976               	incf	(_ipv4Header+14)& (0+255),w,b
  7373  012376  E103               	bnz	l11742
  7374  012378  2977               	incf	(_ipv4Header+15)& (0+255),w,b
  7375  01237A  B4D8               	btfsc	status,2,c
  7376  01237C  0012               	return	
  7377  01237E                     l11742:
  7378                           
  7379                           ; BSR set to: 2
  7380                           ;ipv4.c: 130: if(ipv4Header.dstIpAddress == (ip_database_info.ipv4_myAddress) || (ipv4He
      +                          ader.dstIpAddress == 0)||
  7381                           ;ipv4.c: 131: ((ipv4Header.dstIpAddress == 0xFFFFFFFF)
  7382                           ;ipv4.c: 132: ||((ipv4Header.dstIpAddress|0XFF000000 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0x00FFFFFF)== ipv4Header.dstIpAddress)))
  7383                           ;ipv4.c: 133: ||((ipv4Header.dstIpAddress|0xFFFF0000 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0x0000FFFF)== ipv4Header.dstIpAddress)))
  7384                           ;ipv4.c: 134: ||((ipv4Header.dstIpAddress|0xFFFFFF00 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0X000000FF)== ipv4Header.dstIpAddress))))
  7385  01237E  5100               	movf	_ip_database_info& (0+255),w,b
  7386  012380  1978               	xorwf	(_ipv4Header+16)& (0+255),w,b
  7387  012382  E10A               	bnz	u11840
  7388  012384  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  7389  012386  1979               	xorwf	(_ipv4Header+17)& (0+255),w,b
  7390  012388  E107               	bnz	u11840
  7391  01238A  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  7392  01238C  197A               	xorwf	(_ipv4Header+18)& (0+255),w,b
  7393  01238E  E104               	bnz	u11840
  7394  012390  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  7395  012392  197B               	xorwf	(_ipv4Header+19)& (0+255),w,b
  7396  012394  B4D8               	btfsc	status,2,c
  7397  012396  D071               	goto	u11930
  7398  012398                     u11840:
  7399                           
  7400                           ; BSR set to: 2
  7401  012398  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7402  01239A  1179               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7403  01239C  117A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7404  01239E  117B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7405  0123A0  B4D8               	btfsc	status,2,c
  7406  0123A2  D06B               	goto	u11930
  7407                           
  7408                           ; BSR set to: 2
  7409  0123A4  2978               	incf	(_ipv4Header+16)& (0+255),w,b
  7410  0123A6  E107               	bnz	u11860
  7411  0123A8  2979               	incf	(_ipv4Header+17)& (0+255),w,b
  7412  0123AA  E105               	bnz	u11860
  7413  0123AC  297A               	incf	(_ipv4Header+18)& (0+255),w,b
  7414  0123AE  E103               	bnz	u11860
  7415  0123B0  297B               	incf	(_ipv4Header+19)& (0+255),w,b
  7416  0123B2  B4D8               	btfsc	status,2,c
  7417  0123B4  D062               	goto	u11930
  7418  0123B6                     u11860:
  7419                           
  7420                           ; BSR set to: 2
  7421  0123B6  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7422  0123B8  1179               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7423  0123BA  117A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7424  0123BC  117B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7425  0123BE  B4D8               	btfsc	status,2,c
  7426  0123C0  D019               	goto	u11880
  7427                           
  7428                           ; BSR set to: 2
  7429  0123C2  0EFF               	movlw	255
  7430  0123C4  1100               	iorwf	_ip_database_info& (0+255),w,b
  7431  0123C6  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7432  0123C8  0EFF               	movlw	255
  7433  0123CA  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  7434  0123CC  6F8F               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7435  0123CE  0EFF               	movlw	255
  7436  0123D0  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  7437  0123D2  6F90               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7438  0123D4  0E00               	movlw	0
  7439  0123D6  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  7440  0123D8  6F91               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7441  0123DA  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7442  0123DC  198E               	xorwf	??_IPV4_Packet& (0+255),w,b
  7443  0123DE  E10A               	bnz	l11752
  7444  0123E0  5179               	movf	(_ipv4Header+17)& (0+255),w,b
  7445  0123E2  198F               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  7446  0123E4  E107               	bnz	l11752
  7447  0123E6  517A               	movf	(_ipv4Header+18)& (0+255),w,b
  7448  0123E8  1990               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7449  0123EA  E104               	bnz	l11752
  7450  0123EC  517B               	movf	(_ipv4Header+19)& (0+255),w,b
  7451  0123EE  1991               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7452  0123F0  B4D8               	btfsc	status,2,c
  7453  0123F2  D043               	goto	u11930
  7454  0123F4                     u11880:
  7455  0123F4                     l11752:
  7456                           
  7457                           ; BSR set to: 2
  7458  0123F4  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7459  0123F6  1179               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7460  0123F8  117A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7461  0123FA  117B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7462  0123FC  B4D8               	btfsc	status,2,c
  7463  0123FE  D019               	goto	u11900
  7464                           
  7465                           ; BSR set to: 2
  7466  012400  0EFF               	movlw	255
  7467  012402  1100               	iorwf	_ip_database_info& (0+255),w,b
  7468  012404  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7469  012406  0EFF               	movlw	255
  7470  012408  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  7471  01240A  6F8F               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7472  01240C  0E00               	movlw	0
  7473  01240E  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  7474  012410  6F90               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7475  012412  0E00               	movlw	0
  7476  012414  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  7477  012416  6F91               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7478  012418  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7479  01241A  198E               	xorwf	??_IPV4_Packet& (0+255),w,b
  7480  01241C  E10A               	bnz	l11756
  7481  01241E  5179               	movf	(_ipv4Header+17)& (0+255),w,b
  7482  012420  198F               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  7483  012422  E107               	bnz	l11756
  7484  012424  517A               	movf	(_ipv4Header+18)& (0+255),w,b
  7485  012426  1990               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7486  012428  E104               	bnz	l11756
  7487  01242A  517B               	movf	(_ipv4Header+19)& (0+255),w,b
  7488  01242C  1991               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7489  01242E  B4D8               	btfsc	status,2,c
  7490  012430  D024               	goto	u11930
  7491  012432                     u11900:
  7492  012432                     l11756:
  7493                           
  7494                           ; BSR set to: 2
  7495  012432  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7496  012434  1179               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7497  012436  117A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7498  012438  117B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7499  01243A  B4D8               	btfsc	status,2,c
  7500  01243C  D016               	goto	u11920
  7501                           
  7502                           ; BSR set to: 2
  7503  01243E  0EFF               	movlw	255
  7504  012440  1100               	iorwf	_ip_database_info& (0+255),w,b
  7505  012442  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7506  012444  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  7507  012446  6F8F               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7508  012448  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  7509  01244A  6F90               	movwf	(??_IPV4_Packet+2)& (0+255),b
  7510  01244C  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  7511  01244E  6F91               	movwf	(??_IPV4_Packet+3)& (0+255),b
  7512  012450  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7513  012452  198E               	xorwf	??_IPV4_Packet& (0+255),w,b
  7514  012454  E10A               	bnz	l11760
  7515  012456  5179               	movf	(_ipv4Header+17)& (0+255),w,b
  7516  012458  198F               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  7517  01245A  E107               	bnz	l11760
  7518  01245C  517A               	movf	(_ipv4Header+18)& (0+255),w,b
  7519  01245E  1990               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7520  012460  E104               	bnz	l11760
  7521  012462  517B               	movf	(_ipv4Header+19)& (0+255),w,b
  7522  012464  1991               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7523  012466  B4D8               	btfsc	status,2,c
  7524  012468  D008               	goto	u11930
  7525  01246A                     u11920:
  7526  01246A                     l11760:
  7527                           
  7528                           ; BSR set to: 2
  7529  01246A  0578               	decf	(_ipv4Header+16)& (0+255),w,b
  7530  01246C  E105               	bnz	u11931
  7531  01246E  0EE0               	movlw	224
  7532  012470  197B               	xorwf	(_ipv4Header+19)& (0+255),w,b
  7533  012472  1179               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7534  012474  117A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7535  012476  A4D8               	btfss	status,2,c
  7536  012478                     u11931:
  7537  012478  0012               	return	
  7538  01247A                     u11930:
  7539                           
  7540                           ; BSR set to: 2
  7541                           ;ipv4.c: 136: {
  7542                           ;ipv4.c: 137: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  7543                           
  7544                           ; BSR set to: 2
  7545  01247A  516A               	movf	(_ipv4Header+2)& (0+255),w,b
  7546  01247C  6F8F               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7547  01247E  6B8E               	clrf	??_IPV4_Packet& (0+255),b
  7548  012480  EE22  F06A         	lfsr	2,_ipv4Header+2
  7549  012484  CFDE F290          	movff	postinc2,??_IPV4_Packet+2
  7550  012488  CFDD F291          	movff	postdec2,??_IPV4_Packet+3
  7551  01248C  C291  F290         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  7552  012490  6B91               	clrf	(??_IPV4_Packet+3)& (0+255),b
  7553  012492  0EFF               	movlw	255
  7554  012494  1790               	andwf	(??_IPV4_Packet+2)& (0+255),f,b
  7555  012496  0E00               	movlw	0
  7556  012498  1791               	andwf	(??_IPV4_Packet+3)& (0+255),f,b
  7557  01249A  518E               	movf	??_IPV4_Packet& (0+255),w,b
  7558  01249C  1190               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7559  01249E  6F6A               	movwf	(_ipv4Header+2)& (0+255),b
  7560  0124A0  518F               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  7561  0124A2  1191               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7562  0124A4  6F6B               	movwf	(_ipv4Header+3)& (0+255),b
  7563                           
  7564                           ; BSR set to: 2
  7565                           ;ipv4.c: 139: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  7566  0124A6  5168               	movf	_ipv4Header& (0+255),w,b
  7567  0124A8  0B0F               	andlw	15
  7568  0124AA  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7569  0124AC  90D8               	bcf	status,0,c
  7570  0124AE  378E               	rlcf	??_IPV4_Packet& (0+255),f,b
  7571  0124B0  90D8               	bcf	status,0,c
  7572  0124B2  358E               	rlcf	??_IPV4_Packet& (0+255),w,b
  7573  0124B4  6FAA               	movwf	IPV4_Packet@hdrLen& (0+255),b
  7574                           
  7575                           ; BSR set to: 2
  7576                           ;ipv4.c: 141: if(ipv4Header.ihl < 5)
  7577  0124B6  5168               	movf	_ipv4Header& (0+255),w,b
  7578  0124B8  0B0F               	andlw	15
  7579  0124BA  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7580  0124BC  0E05               	movlw	5
  7581  0124BE  618E               	cpfslt	??_IPV4_Packet& (0+255),b
  7582  0124C0  D001               	goto	l866
  7583  0124C2  0012               	return	
  7584  0124C4                     l866:
  7585                           
  7586                           ; BSR set to: 2
  7587                           ;ipv4.c: 144: if (ipv4Header.ihl > 5)
  7588                           
  7589                           ; BSR set to: 2
  7590  0124C4  5168               	movf	_ipv4Header& (0+255),w,b
  7591  0124C6  0B0F               	andlw	15
  7592  0124C8  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7593  0124CA  0E05               	movlw	5
  7594  0124CC  658E               	cpfsgt	??_IPV4_Packet& (0+255),b
  7595  0124CE  D0BD               	goto	l868
  7596                           
  7597                           ; BSR set to: 2
  7598                           ;ipv4.c: 145: {
  7599                           ;ipv4.c: 147: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  7600  0124D0  0EEC               	movlw	236
  7601  0124D2  25AA               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  7602  0124D4  6E13               	movwf	ETH_Dump@length,c
  7603  0124D6  6A14               	clrf	ETH_Dump@length+1,c
  7604  0124D8  0EFF               	movlw	255
  7605  0124DA  2214               	addwfc	ETH_Dump@length+1,f,c
  7606  0124DC  EC71  F0B3         	call	_ETH_Dump	;wreg free
  7607                           
  7608                           ;ipv4.c: 148: return IPV4_NO_OPTIONS;
  7609                           ;	Return value of _IPV4_Packet is never used
  7610  0124E0  0012               	return	
  7611  0124E2                     
  7612                           ;ipv4.c: 154: {
  7613                           ;ipv4.c: 156: if((ipv4Header.dstIpAddress == 0))
  7614  0124E2  0102               	movlb	2	; () banked
  7615  0124E4  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7616  0124E6  1179               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7617  0124E8  117A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7618  0124EA  117B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7619  0124EC  B4D8               	btfsc	status,2,c
  7620  0124EE  0012               	return	
  7621                           
  7622                           ; BSR set to: 2
  7623                           ;ipv4.c: 159: }
  7624                           ;ipv4.c: 160: length = ipv4Header.length - hdrLen;
  7625                           
  7626                           ; BSR set to: 2
  7627                           
  7628                           ; BSR set to: 2
  7629                           ;ipv4.c: 157: {
  7630                           ;ipv4.c: 158: return DEST_IP_NOT_MATCHED;
  7631                           ;	Return value of _IPV4_Packet is never used
  7632  0124F0  51AA               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7633  0124F2  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7634  0124F4  6B8F               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7635  0124F6  1F8E               	comf	??_IPV4_Packet& (0+255),f,b
  7636  0124F8  1F8F               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  7637  0124FA  4B8E               	infsnz	??_IPV4_Packet& (0+255),f,b
  7638  0124FC  2B8F               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  7639  0124FE  516A               	movf	(_ipv4Header+2)& (0+255),w,b
  7640  012500  258E               	addwf	??_IPV4_Packet& (0+255),w,b
  7641  012502  6FAB               	movwf	IPV4_Packet@length& (0+255),b
  7642  012504  516B               	movf	(_ipv4Header+3)& (0+255),w,b
  7643  012506  218F               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  7644  012508  6FAC               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7645                           
  7646                           ; BSR set to: 2
  7647                           ;ipv4.c: 161: cksm = ETH_RxComputeChecksum(length, 0);
  7648  01250A  C2AB  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7649  01250E  C2AC  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7650  012512  0E00               	movlw	0
  7651  012514  6E28               	movwf	ETH_RxComputeChecksum@seed+1,c
  7652  012516  0E00               	movlw	0
  7653  012518  6E27               	movwf	ETH_RxComputeChecksum@seed,c
  7654  01251A  EC86  F0B1         	call	_ETH_RxComputeChecksum	;wreg free
  7655  01251E  C025  F2AD         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7656  012522  C026  F2AE         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7657                           
  7658                           ;ipv4.c: 163: if (cksm == 0)
  7659  012526  0102               	movlb	2	; () banked
  7660  012528  51AD               	movf	IPV4_Packet@cksm& (0+255),w,b
  7661  01252A  11AE               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  7662  01252C  A4D8               	btfss	status,2,c
  7663  01252E  0012               	return	
  7664                           
  7665                           ; BSR set to: 2
  7666                           ;ipv4.c: 164: {
  7667                           ;ipv4.c: 165: ICMP_Receive(&ipv4Header);
  7668  012530  0E68               	movlw	low _ipv4Header
  7669  012532  0100               	movlb	0	; () banked
  7670  012534  6FB9               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
  7671  012536  0E02               	movlw	high _ipv4Header
  7672  012538  6FBA               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
  7673  01253A  EC19  F0AA         	call	_ICMP_Receive	;wreg free
  7674                           
  7675                           ;ipv4.c: 170: }
  7676                           ;ipv4.c: 171: }
  7677                           ;ipv4.c: 172: break;
  7678                           
  7679                           ;ipv4.c: 167: else
  7680                           ;ipv4.c: 168: {
  7681                           ;ipv4.c: 169: return ICMP_CHECKSUM_FAILS;
  7682                           ;	Return value of _IPV4_Packet is never used
  7683                           
  7684                           ;ipv4.c: 166: }
  7685  01253E  0012               	return	
  7686  012540                     
  7687                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  7688  012540  0102               	movlb	2	; () banked
  7689  012542  51AA               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7690  012544  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7691  012546  6B8F               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7692  012548  1F8E               	comf	??_IPV4_Packet& (0+255),f,b
  7693  01254A  1F8F               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  7694  01254C  4B8E               	infsnz	??_IPV4_Packet& (0+255),f,b
  7695  01254E  2B8F               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  7696  012550  516A               	movf	(_ipv4Header+2)& (0+255),w,b
  7697  012552  258E               	addwf	??_IPV4_Packet& (0+255),w,b
  7698  012554  6FAB               	movwf	IPV4_Packet@length& (0+255),b
  7699  012556  516B               	movf	(_ipv4Header+3)& (0+255),w,b
  7700  012558  218F               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  7701  01255A  6FAC               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7702                           
  7703                           ; BSR set to: 2
  7704                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  7705  01255C  C2AB  F013         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  7706  012560  C2AC  F014         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  7707  012564  ECFD  F0AA         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  7708  012568  C013  F2AD         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  7709  01256C  C014  F2AE         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  7710                           
  7711                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  7712  012570  C2AB  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7713  012574  C2AC  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7714  012578  C2AD  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  7715  01257C  C2AE  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  7716  012580  EC86  F0B1         	call	_ETH_RxComputeChecksum	;wreg free
  7717  012584  C025  F2AD         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7718  012588  C026  F2AE         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7719                           
  7720                           ;ipv4.c: 178: UDP_Receive(cksm);
  7721  01258C  C2AD  F0D5         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  7722  012590  C2AE  F0D6         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  7723  012594  ECC6  F0A2         	call	_UDP_Receive	;wreg free
  7724                           
  7725                           ;ipv4.c: 179: break;
  7726  012598  0012               	return	
  7727  01259A                     
  7728                           ;ipv4.c: 183: length = ipv4Header.length - hdrLen;
  7729  01259A  0102               	movlb	2	; () banked
  7730  01259C  51AA               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7731  01259E  6F8E               	movwf	??_IPV4_Packet& (0+255),b
  7732  0125A0  6B8F               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7733  0125A2  1F8E               	comf	??_IPV4_Packet& (0+255),f,b
  7734  0125A4  1F8F               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  7735  0125A6  4B8E               	infsnz	??_IPV4_Packet& (0+255),f,b
  7736  0125A8  2B8F               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  7737  0125AA  516A               	movf	(_ipv4Header+2)& (0+255),w,b
  7738  0125AC  258E               	addwf	??_IPV4_Packet& (0+255),w,b
  7739  0125AE  6FAB               	movwf	IPV4_Packet@length& (0+255),b
  7740  0125B0  516B               	movf	(_ipv4Header+3)& (0+255),w,b
  7741  0125B2  218F               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  7742  0125B4  6FAC               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7743                           
  7744                           ; BSR set to: 2
  7745                           ;ipv4.c: 184: cksm = IPV4_PseudoHeaderChecksum(length);
  7746  0125B6  C2AB  F013         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  7747  0125BA  C2AC  F014         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  7748  0125BE  ECFD  F0AA         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  7749  0125C2  C013  F2AD         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  7750  0125C6  C014  F2AE         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  7751                           
  7752                           ;ipv4.c: 185: cksm = ETH_RxComputeChecksum(length, cksm);
  7753  0125CA  C2AB  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7754  0125CE  C2AC  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7755  0125D2  C2AD  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  7756  0125D6  C2AE  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  7757  0125DA  EC86  F0B1         	call	_ETH_RxComputeChecksum	;wreg free
  7758  0125DE  C025  F2AD         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7759  0125E2  C026  F2AE         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7760                           
  7761                           ;ipv4.c: 188: if (cksm == 0 && (ipv4Header.dstIpAddress != 0xFFFFFFFF) && (ipv4Header.ds
      +                          tIpAddress != 0))
  7762  0125E6  0102               	movlb	2	; () banked
  7763  0125E8  51AD               	movf	IPV4_Packet@cksm& (0+255),w,b
  7764  0125EA  11AE               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  7765  0125EC  A4D8               	btfss	status,2,c
  7766  0125EE  0012               	return	
  7767                           
  7768                           ; BSR set to: 2
  7769  0125F0  2978               	incf	(_ipv4Header+16)& (0+255),w,b
  7770  0125F2  E107               	bnz	u11990
  7771  0125F4  2979               	incf	(_ipv4Header+17)& (0+255),w,b
  7772  0125F6  E105               	bnz	u11990
  7773  0125F8  297A               	incf	(_ipv4Header+18)& (0+255),w,b
  7774  0125FA  E103               	bnz	u11990
  7775  0125FC  297B               	incf	(_ipv4Header+19)& (0+255),w,b
  7776  0125FE  B4D8               	btfsc	status,2,c
  7777  012600  0012               	return	
  7778  012602                     u11990:
  7779                           
  7780                           ; BSR set to: 2
  7781  012602  5178               	movf	(_ipv4Header+16)& (0+255),w,b
  7782  012604  1179               	iorwf	(_ipv4Header+17)& (0+255),w,b
  7783  012606  117A               	iorwf	(_ipv4Header+18)& (0+255),w,b
  7784  012608  117B               	iorwf	(_ipv4Header+19)& (0+255),w,b
  7785  01260A  B4D8               	btfsc	status,2,c
  7786  01260C  0012               	return	
  7787                           
  7788                           ; BSR set to: 2
  7789                           ;ipv4.c: 189: {
  7790                           ;ipv4.c: 190: remoteIpv4Address = ipv4Header.srcIpAddress;
  7791  01260E  C274  F23A         	movff	_ipv4Header+12,_remoteIpv4Address
  7792  012612  C275  F23B         	movff	_ipv4Header+13,_remoteIpv4Address+1
  7793  012616  C276  F23C         	movff	_ipv4Header+14,_remoteIpv4Address+2
  7794  01261A  C277  F23D         	movff	_ipv4Header+15,_remoteIpv4Address+3
  7795                           
  7796                           ; BSR set to: 2
  7797                           ;ipv4.c: 191: TCP_Recv(remoteIpv4Address, length);
  7798  01261E  C23A  F105         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  7799  012622  C23B  F106         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  7800  012626  C23C  F107         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  7801  01262A  C23D  F108         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  7802  01262E  C2AB  F109         	movff	IPV4_Packet@length,TCP_Recv@length
  7803  012632  C2AC  F10A         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  7804  012636  EC61  F098         	call	_TCP_Recv	;wreg free
  7805                           
  7806                           ;ipv4.c: 192: }
  7807                           ;ipv4.c: 193: break;
  7808  01263A  0012               	return	
  7809  01263C                     
  7810                           ;ipv4.c: 195: ETH_Dump(ipv4Header.length);
  7811  01263C  C26A  F013         	movff	_ipv4Header+2,ETH_Dump@length
  7812  012640  C26B  F014         	movff	_ipv4Header+3,ETH_Dump@length+1
  7813  012644  EC71  F0B3         	call	_ETH_Dump	;wreg free
  7814                           
  7815                           ;ipv4.c: 197: }
  7816                           
  7817                           ;ipv4.c: 196: break;
  7818  012648  0012               	return	
  7819  01264A                     l868:
  7820  01264A  0102               	movlb	2	; () banked
  7821  01264C  5171               	movf	(_ipv4Header+9)& (0+255),w,b
  7822                           
  7823                           ; Switch size 1, requested type "space"
  7824                           ; Number of cases is 3, Range of values is 1 to 17
  7825                           ; switch strategies available:
  7826                           ; Name         Instructions Cycles
  7827                           ; simple_byte           10     6 (average)
  7828                           ;	Chosen strategy is simple_byte
  7829  01264E  0A01               	xorlw	1	; case 1
  7830  012650  B4D8               	btfsc	status,2,c
  7831  012652  D747               	goto	l869
  7832  012654  0A07               	xorlw	7	; case 6
  7833  012656  B4D8               	btfsc	status,2,c
  7834  012658  D7A0               	goto	l875
  7835  01265A  0A17               	xorlw	23	; case 17
  7836  01265C  B4D8               	btfsc	status,2,c
  7837  01265E  D770               	goto	l874
  7838  012660  D7ED               	goto	l877
  7839  012662                     __end_of_IPV4_Packet:
  7840                           	opt stack 0
  7841                           tosu	equ	0xFFF
  7842                           tosh	equ	0xFFE
  7843                           tosl	equ	0xFFD
  7844                           pclath	equ	0xFFA
  7845                           tblptru	equ	0xFF8
  7846                           tblptrh	equ	0xFF7
  7847                           tblptrl	equ	0xFF6
  7848                           tablat	equ	0xFF5
  7849                           prodh	equ	0xFF4
  7850                           prodl	equ	0xFF3
  7851                           intcon	equ	0xFF2
  7852                           indf0	equ	0xFEF
  7853                           postinc0	equ	0xFEE
  7854                           fsr0h	equ	0xFEA
  7855                           fsr0l	equ	0xFE9
  7856                           wreg	equ	0xFE8
  7857                           indf1	equ	0xFE7
  7858                           postinc1	equ	0xFE6
  7859                           postdec1	equ	0xFE5
  7860                           fsr1h	equ	0xFE2
  7861                           fsr1l	equ	0xFE1
  7862                           indf2	equ	0xFDF
  7863                           postinc2	equ	0xFDE
  7864                           postdec2	equ	0xFDD
  7865                           fsr2h	equ	0xFDA
  7866                           fsr2l	equ	0xFD9
  7867                           status	equ	0xFD8
  7868                           
  7869 ;; *************** function _UDP_Receive *****************
  7870 ;; Defined at:
  7871 ;;		line 121 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  udpcksm         2  117[BANK0 ] unsigned int 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  hptr            2  124[BANK0 ] PTR struct .
  7876 ;;		 -> UDP_CallBackTable(15), NULL(0), 
  7877 ;;  x               2    0        unsigned int 
  7878 ;;  ret             1  123[BANK0 ] enum E393
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      enum E392
  7881 ;; Registers used:
  7882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7889 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7890 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7891 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7892 ;;Total ram usage:        9 bytes
  7893 ;; Hardware stack levels used:    1
  7894 ;; Hardware stack levels required when called:   13
  7895 ;; This function calls:
  7896 ;;		_DHCP_Handler
  7897 ;;		_DNS_Handler
  7898 ;;		_ETH_ReadBlock
  7899 ;;		_ICMP_PortUnreachable
  7900 ;;		_IPV4_GetDatagramLength
  7901 ;;		_NTP_Handler
  7902 ;;		_udp_table_getIterator
  7903 ;;		_udp_table_nextEntry
  7904 ;; This function is called by:
  7905 ;;		_IPV4_Packet
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text36
  7910  01458C                     __ptext36:
  7911                           	opt stack 0
  7912  01458C                     _UDP_Receive:
  7913                           	opt stack 14
  7914                           
  7915                           ;udpv4.c: 123: error_msg ret = ERROR;
  7916                           
  7917                           ;incstack = 0
  7918  01458C  0E00               	movlw	0
  7919  01458E  0100               	movlb	0	; () banked
  7920  014590  6FDB               	movwf	UDP_Receive@ret& (0+255),b
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;udpv4.c: 124: udp_table_iterator_t hptr;
  7924                           ;udpv4.c: 125: uint16_t x;
  7925                           ;udpv4.c: 127: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  7926  014592  0E7C               	movlw	low _udpHeader
  7927  014594  6E13               	movwf	ETH_ReadBlock@buffer,c
  7928  014596  0E02               	movlw	high _udpHeader
  7929  014598  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  7930  01459A  0E00               	movlw	0
  7931  01459C  6E16               	movwf	ETH_ReadBlock@length+1,c
  7932  01459E  0E08               	movlw	8
  7933  0145A0  6E15               	movwf	ETH_ReadBlock@length,c
  7934  0145A2  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
  7935                           
  7936                           ;udpv4.c: 129: if((udpHeader.checksum == 0) || (udpcksm == 0))
  7937  0145A6  0102               	movlb	2	; () banked
  7938  0145A8  5182               	movf	(_udpHeader+6)& (0+255),w,b
  7939  0145AA  1183               	iorwf	(_udpHeader+7)& (0+255),w,b
  7940  0145AC  B4D8               	btfsc	status,2,c
  7941  0145AE  D005               	goto	u11320
  7942                           
  7943                           ; BSR set to: 2
  7944  0145B0  0100               	movlb	0	; () banked
  7945  0145B2  51D5               	movf	UDP_Receive@udpcksm& (0+255),w,b
  7946  0145B4  11D6               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  7947  0145B6  A4D8               	btfss	status,2,c
  7948  0145B8  D0C9               	goto	l1235
  7949  0145BA                     u11320:
  7950                           
  7951                           ;udpv4.c: 130: {
  7952                           ;udpv4.c: 131: udpHeader.dstPort = ((((uint16_t)udpHeader.dstPort & (uint16_t)0xFF00) >>
      +                           8) | (((uint16_t)udpHeader.dstPort & (uint16_t)0x00FF) << 8));
  7953                           
  7954                           ; BSR set to: 0
  7955  0145BA  0102               	movlb	2	; () banked
  7956  0145BC  517E               	movf	(_udpHeader+2)& (0+255),w,b
  7957  0145BE  0100               	movlb	0	; () banked
  7958  0145C0  6FD8               	movwf	(??_UDP_Receive+1)& (0+255),b
  7959  0145C2  6BD7               	clrf	??_UDP_Receive& (0+255),b
  7960  0145C4  EE22  F07E         	lfsr	2,_udpHeader+2
  7961  0145C8  CFDE F0D9          	movff	postinc2,??_UDP_Receive+2
  7962  0145CC  CFDD F0DA          	movff	postdec2,??_UDP_Receive+3
  7963  0145D0  C0DA  F0D9         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  7964  0145D4  6BDA               	clrf	(??_UDP_Receive+3)& (0+255),b
  7965  0145D6  0EFF               	movlw	255
  7966  0145D8  17D9               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  7967  0145DA  0E00               	movlw	0
  7968  0145DC  17DA               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  7969  0145DE  51D7               	movf	??_UDP_Receive& (0+255),w,b
  7970  0145E0  11D9               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  7971  0145E2  0102               	movlb	2	; () banked
  7972  0145E4  6F7E               	movwf	(_udpHeader+2)& (0+255),b
  7973  0145E6  0100               	movlb	0	; () banked
  7974  0145E8  51D8               	movf	(??_UDP_Receive+1)& (0+255),w,b
  7975  0145EA  11DA               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  7976  0145EC  0102               	movlb	2	; () banked
  7977  0145EE  6F7F               	movwf	(_udpHeader+3)& (0+255),b
  7978                           
  7979                           ; BSR set to: 2
  7980                           ;udpv4.c: 132: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  7981  0145F0  517C               	movf	_udpHeader& (0+255),w,b
  7982  0145F2  0100               	movlb	0	; () banked
  7983  0145F4  6FD8               	movwf	(??_UDP_Receive+1)& (0+255),b
  7984  0145F6  6BD7               	clrf	??_UDP_Receive& (0+255),b
  7985  0145F8  C27C  F0D9         	movff	_udpHeader,??_UDP_Receive+2
  7986  0145FC  C27D  F0DA         	movff	_udpHeader+1,??_UDP_Receive+3
  7987  014600  C0DA  F0D9         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  7988  014604  6BDA               	clrf	(??_UDP_Receive+3)& (0+255),b
  7989  014606  0EFF               	movlw	255
  7990  014608  17D9               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  7991  01460A  0E00               	movlw	0
  7992  01460C  17DA               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  7993  01460E  51D7               	movf	??_UDP_Receive& (0+255),w,b
  7994  014610  11D9               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  7995  014612  0102               	movlb	2	; () banked
  7996  014614  6F4A               	movwf	_destPort& (0+255),b
  7997  014616  0100               	movlb	0	; () banked
  7998  014618  51D8               	movf	(??_UDP_Receive+1)& (0+255),w,b
  7999  01461A  11DA               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  8000  01461C  0102               	movlb	2	; () banked
  8001  01461E  6F4B               	movwf	(_destPort+1)& (0+255),b
  8002                           
  8003                           ; BSR set to: 2
  8004                           ;udpv4.c: 133: udpHeader.length = ((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8
      +                          ) | (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8));
  8005  014620  5180               	movf	(_udpHeader+4)& (0+255),w,b
  8006  014622  0100               	movlb	0	; () banked
  8007  014624  6FD8               	movwf	(??_UDP_Receive+1)& (0+255),b
  8008  014626  6BD7               	clrf	??_UDP_Receive& (0+255),b
  8009  014628  EE22  F080         	lfsr	2,_udpHeader+4
  8010  01462C  CFDE F0D9          	movff	postinc2,??_UDP_Receive+2
  8011  014630  CFDD F0DA          	movff	postdec2,??_UDP_Receive+3
  8012  014634  C0DA  F0D9         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  8013  014638  6BDA               	clrf	(??_UDP_Receive+3)& (0+255),b
  8014  01463A  0EFF               	movlw	255
  8015  01463C  17D9               	andwf	(??_UDP_Receive+2)& (0+255),f,b
  8016  01463E  0E00               	movlw	0
  8017  014640  17DA               	andwf	(??_UDP_Receive+3)& (0+255),f,b
  8018  014642  51D7               	movf	??_UDP_Receive& (0+255),w,b
  8019  014644  11D9               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  8020  014646  0102               	movlb	2	; () banked
  8021  014648  6F80               	movwf	(_udpHeader+4)& (0+255),b
  8022  01464A  0100               	movlb	0	; () banked
  8023  01464C  51D8               	movf	(??_UDP_Receive+1)& (0+255),w,b
  8024  01464E  11DA               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  8025  014650  0102               	movlb	2	; () banked
  8026  014652  6F81               	movwf	(_udpHeader+5)& (0+255),b
  8027                           
  8028                           ; BSR set to: 2
  8029                           ;udpv4.c: 134: ret = PORT_NOT_AVAILABLE;
  8030  014654  0E0D               	movlw	13
  8031  014656  0100               	movlb	0	; () banked
  8032  014658  6FDB               	movwf	UDP_Receive@ret& (0+255),b
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;udpv4.c: 137: hptr = udp_table_getIterator();
  8036  01465A  EC7A  F0B5         	call	_udp_table_getIterator	;wreg free
  8037  01465E  C013  F0DC         	movff	?_udp_table_getIterator,UDP_Receive@hptr
  8038  014662  C014  F0DD         	movff	?_udp_table_getIterator+1,UDP_Receive@hptr+1
  8039                           
  8040                           ;udpv4.c: 139: while(hptr != (0))
  8041  014666  D04C               	goto	l1238
  8042  014668                     
  8043                           ;udpv4.c: 140: {
  8044                           ;udpv4.c: 141: if(hptr->portNumber == udpHeader.dstPort)
  8045  014668  C0DC  FFF6         	movff	UDP_Receive@hptr,tblptrl
  8046  01466C  C0DD  FFF7         	movff	UDP_Receive@hptr+1,tblptrh
  8047  014670                     	if	0	;tblptru may be non-zero
  8048  014670                     	endif
  8049  014670                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8050  014670  0E00               	movlw	low (__mediumconst shr (0+16))
  8051  014672  6EF8               	movwf	tblptru,c
  8052  014674                     	endif
  8053  014674  0102               	movlb	2	; () banked
  8054  014676  517E               	movf	(_udpHeader+2)& (0+255),w,b
  8055  014678  0009               	tblrd		*+
  8056  01467A  18F5               	xorwf	tablat,w,c
  8057  01467C  E137               	bnz	l11466
  8058  01467E  517F               	movf	(_udpHeader+3)& (0+255),w,b
  8059  014680  0009               	tblrd		*+
  8060  014682  18F5               	xorwf	tablat,w,c
  8061  014684  A4D8               	btfss	status,2,c
  8062  014686  D032               	goto	l1240
  8063                           
  8064                           ; BSR set to: 2
  8065                           ;udpv4.c: 142: {
  8066                           ;udpv4.c: 143: if(udpHeader.length == IPV4_GetDatagramLength())
  8067  014688  EC2A  F0B5         	call	_IPV4_GetDatagramLength	;wreg free
  8068  01468C  0102               	movlb	2	; () banked
  8069  01468E  5180               	movf	(_udpHeader+4)& (0+255),w,b
  8070  014690  1813               	xorwf	?_IPV4_GetDatagramLength,w,c
  8071  014692  E128               	bnz	l11464
  8072  014694  5181               	movf	(_udpHeader+5)& (0+255),w,b
  8073  014696  1814               	xorwf	?_IPV4_GetDatagramLength+1,w,c
  8074  014698  A4D8               	btfss	status,2,c
  8075  01469A  D024               	goto	u11359
  8076                           
  8077                           ; BSR set to: 2
  8078                           ;udpv4.c: 144: {
  8079                           ;udpv4.c: 145: hptr->callBack(udpHeader.length - sizeof(udpHeader));
  8080  01469C  0EF8               	movlw	248
  8081  01469E  2580               	addwf	(_udpHeader+4)& (0+255),w,b
  8082  0146A0  0100               	movlb	0	; () banked
  8083  0146A2  6FB0               	movwf	NTP_Handler@length& (0+255),b
  8084  0146A4  0EFF               	movlw	255
  8085  0146A6  0102               	movlb	2	; () banked
  8086  0146A8  2181               	addwfc	(_udpHeader+5)& (0+255),w,b
  8087  0146AA  0100               	movlb	0	; () banked
  8088  0146AC  6FB1               	movwf	(NTP_Handler@length+1)& (0+255),b
  8089  0146AE  0E02               	movlw	2
  8090  0146B0  25DC               	addwf	UDP_Receive@hptr& (0+255),w,b
  8091  0146B2  6FD7               	movwf	??_UDP_Receive& (0+255),b
  8092  0146B4  0E00               	movlw	0
  8093  0146B6  21DD               	addwfc	(UDP_Receive@hptr+1)& (0+255),w,b
  8094  0146B8  6FD8               	movwf	(??_UDP_Receive+1)& (0+255),b
  8095  0146BA  C0D7  FFF6         	movff	??_UDP_Receive,tblptrl
  8096  0146BE  C0D8  FFF7         	movff	??_UDP_Receive+1,tblptrh
  8097  0146C2                     	if	0	;tblptru may be non-zero
  8098  0146C2                     	endif
  8099  0146C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8100  0146C2  0E00               	movlw	low (__mediumconst shr (0+16))
  8101  0146C4  6EF8               	movwf	tblptru,c
  8102  0146C6                     	endif
  8103  0146C6  D801               	call	u11358
  8104  0146C8  D00D               	goto	u11359
  8105  0146CA                     u11358:
  8106  0146CA  0005               	push	
  8107  0146CC  6EFA               	movwf	pclath,c
  8108  0146CE  0009               	tblrd		*+
  8109  0146D0  50F5               	movf	tablat,w,c
  8110  0146D2  6EFD               	movwf	tosl,c
  8111  0146D4  0009               	tblrd		*+
  8112  0146D6  50F5               	movf	tablat,w,c
  8113  0146D8  6EFE               	movwf	tosh,c
  8114  0146DA  0009               	tblrd		*+
  8115  0146DC  50F5               	movf	tablat,w,c
  8116  0146DE  6EFF               	movwf	tosu,c
  8117  0146E0  50FA               	movf	pclath,w,c
  8118  0146E2  0012               	return		;indir
  8119  0146E4                     u11359:
  8120  0146E4                     l11464:
  8121                           
  8122                           ;udpv4.c: 146: }
  8123                           ;udpv4.c: 147: ret = SUCCESS;
  8124  0146E4  0E01               	movlw	1
  8125  0146E6  0100               	movlb	0	; () banked
  8126  0146E8  6FDB               	movwf	UDP_Receive@ret& (0+255),b
  8127                           
  8128                           ;udpv4.c: 148: break;
  8129  0146EA  D00F               	goto	u11360
  8130  0146EC                     l1240:
  8131  0146EC                     l11466:
  8132                           
  8133                           ;udpv4.c: 149: }
  8134                           ;udpv4.c: 150: hptr = udp_table_nextEntry(hptr);
  8135  0146EC  C0DC  F015         	movff	UDP_Receive@hptr,udp_table_nextEntry@i
  8136  0146F0  C0DD  F016         	movff	UDP_Receive@hptr+1,udp_table_nextEntry@i+1
  8137  0146F4  ECF1  F0B2         	call	_udp_table_nextEntry	;wreg free
  8138  0146F8  C015  F0DC         	movff	?_udp_table_nextEntry,UDP_Receive@hptr
  8139  0146FC  C016  F0DD         	movff	?_udp_table_nextEntry+1,UDP_Receive@hptr+1
  8140  014700                     l1238:
  8141  014700  0100               	movlb	0	; () banked
  8142  014702  51DC               	movf	UDP_Receive@hptr& (0+255),w,b
  8143  014704  11DD               	iorwf	(UDP_Receive@hptr+1)& (0+255),w,b
  8144  014706  A4D8               	btfss	status,2,c
  8145  014708  D7AF               	goto	l1239
  8146  01470A                     u11360:
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;udpv4.c: 151: }
  8150                           ;udpv4.c: 152: if(ret== PORT_NOT_AVAILABLE)
  8151                           
  8152                           ; BSR set to: 0
  8153  01470A  0E0D               	movlw	13
  8154  01470C  19DB               	xorwf	UDP_Receive@ret& (0+255),w,b
  8155  01470E  A4D8               	btfss	status,2,c
  8156  014710  0012               	return	
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;udpv4.c: 153: {
  8160                           ;udpv4.c: 156: ICMP_PortUnreachable((ipv4Header.dstIpAddress), (ipv4Header.srcIpAddress)
      +                          ,(sizeof(udp_handler_t) + (udpHeader.length)));
  8161  014712  C278  F0A8         	movff	_ipv4Header+16,ICMP_PortUnreachable@srcIPAddress
  8162  014716  C279  F0A9         	movff	_ipv4Header+17,ICMP_PortUnreachable@srcIPAddress+1
  8163  01471A  C27A  F0AA         	movff	_ipv4Header+18,ICMP_PortUnreachable@srcIPAddress+2
  8164  01471E  C27B  F0AB         	movff	_ipv4Header+19,ICMP_PortUnreachable@srcIPAddress+3
  8165  014722  C274  F0AC         	movff	_ipv4Header+12,ICMP_PortUnreachable@destIPAddress
  8166  014726  C275  F0AD         	movff	_ipv4Header+13,ICMP_PortUnreachable@destIPAddress+1
  8167  01472A  C276  F0AE         	movff	_ipv4Header+14,ICMP_PortUnreachable@destIPAddress+2
  8168  01472E  C277  F0AF         	movff	_ipv4Header+15,ICMP_PortUnreachable@destIPAddress+3
  8169  014732  0E05               	movlw	5
  8170  014734  0102               	movlb	2	; () banked
  8171  014736  2580               	addwf	(_udpHeader+4)& (0+255),w,b
  8172  014738  0100               	movlb	0	; () banked
  8173  01473A  6FB0               	movwf	ICMP_PortUnreachable@length& (0+255),b
  8174  01473C  0E00               	movlw	0
  8175  01473E  0102               	movlb	2	; () banked
  8176  014740  2181               	addwfc	(_udpHeader+5)& (0+255),w,b
  8177  014742  0100               	movlb	0	; () banked
  8178  014744  6FB1               	movwf	(ICMP_PortUnreachable@length+1)& (0+255),b
  8179  014746  EC1D  F0A9         	call	_ICMP_PortUnreachable	;wreg free
  8180                           
  8181                           ;udpv4.c: 157: }
  8182                           ;udpv4.c: 158: }
  8183  01474A  0012               	return	
  8184  01474C                     l1235:
  8185                           
  8186                           ;udpv4.c: 159: else
  8187                           ;udpv4.c: 160: {
  8188                           ;udpv4.c: 161: ret = UDP_CHECKSUM_FAILS;
  8189  01474C  0E0A               	movlw	10
  8190  01474E  0100               	movlb	0	; () banked
  8191  014750  6FDB               	movwf	UDP_Receive@ret& (0+255),b
  8192                           
  8193                           ; BSR set to: 0
  8194  014752  0012               	return	
  8195  014754                     __end_of_UDP_Receive:
  8196                           	opt stack 0
  8197                           tosu	equ	0xFFF
  8198                           tosh	equ	0xFFE
  8199                           tosl	equ	0xFFD
  8200                           pclath	equ	0xFFA
  8201                           tblptru	equ	0xFF8
  8202                           tblptrh	equ	0xFF7
  8203                           tblptrl	equ	0xFF6
  8204                           tablat	equ	0xFF5
  8205                           prodh	equ	0xFF4
  8206                           prodl	equ	0xFF3
  8207                           intcon	equ	0xFF2
  8208                           indf0	equ	0xFEF
  8209                           postinc0	equ	0xFEE
  8210                           fsr0h	equ	0xFEA
  8211                           fsr0l	equ	0xFE9
  8212                           wreg	equ	0xFE8
  8213                           indf1	equ	0xFE7
  8214                           postinc1	equ	0xFE6
  8215                           postdec1	equ	0xFE5
  8216                           fsr1h	equ	0xFE2
  8217                           fsr1l	equ	0xFE1
  8218                           indf2	equ	0xFDF
  8219                           postinc2	equ	0xFDE
  8220                           postdec2	equ	0xFDD
  8221                           fsr2h	equ	0xFDA
  8222                           fsr2l	equ	0xFD9
  8223                           status	equ	0xFD8
  8224                           
  8225 ;; *************** function _udp_table_nextEntry *****************
  8226 ;; Defined at:
  8227 ;;		line 65 in file "mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  i               2   20[COMRAM] PTR struct .
  8230 ;;		 -> UDP_CallBackTable(15), NULL(0), 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  j               2   22[COMRAM] PTR struct .
  8233 ;;		 -> UDP_CallBackTable(15), 
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  2   20[COMRAM] PTR struct .
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;Total ram usage:        4 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    5
  8250 ;; This function calls:
  8251 ;;		_udp_table_getIterator
  8252 ;; This function is called by:
  8253 ;;		_UDP_Receive
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text37
  8258  0165E2                     __ptext37:
  8259                           	opt stack 0
  8260  0165E2                     _udp_table_nextEntry:
  8261                           	opt stack 21
  8262                           
  8263                           ;udpv4_port_handler_table.c: 67: udp_table_iterator_t j;
  8264                           ;udpv4_port_handler_table.c: 69: j = udp_table_getIterator() +sizeof(UDP_CallBackTable);
  8265                           
  8266                           ;incstack = 0
  8267  0165E2  EC7A  F0B5         	call	_udp_table_getIterator	;wreg free
  8268  0165E6  0E4B               	movlw	75
  8269  0165E8  2413               	addwf	?_udp_table_getIterator,w,c
  8270  0165EA  6E17               	movwf	udp_table_nextEntry@j,c
  8271  0165EC  0E00               	movlw	0
  8272  0165EE  2014               	addwfc	?_udp_table_getIterator+1,w,c
  8273  0165F0  6E18               	movwf	udp_table_nextEntry@j+1,c
  8274                           
  8275                           ;udpv4_port_handler_table.c: 71: i ++;
  8276  0165F2  0E05               	movlw	5
  8277  0165F4  2615               	addwf	udp_table_nextEntry@i,f,c
  8278  0165F6  0E00               	movlw	0
  8279  0165F8  2216               	addwfc	udp_table_nextEntry@i+1,f,c
  8280                           
  8281                           ;udpv4_port_handler_table.c: 72: if(i < j )
  8282  0165FA  5017               	movf	udp_table_nextEntry@j,w,c
  8283  0165FC  5C15               	subwf	udp_table_nextEntry@i,w,c
  8284  0165FE  5018               	movf	udp_table_nextEntry@j+1,w,c
  8285  016600  5816               	subwfb	udp_table_nextEntry@i+1,w,c
  8286  016602  B0D8               	btfsc	status,0,c
  8287  016604  D005               	goto	l1186
  8288                           
  8289                           ;udpv4_port_handler_table.c: 73: {
  8290                           ;udpv4_port_handler_table.c: 74: return (udp_table_iterator_t) i;
  8291  016606  C015  F015         	movff	udp_table_nextEntry@i,?_udp_table_nextEntry
  8292  01660A  C016  F016         	movff	udp_table_nextEntry@i+1,?_udp_table_nextEntry+1
  8293                           
  8294                           ;udpv4_port_handler_table.c: 75: }
  8295  01660E  0012               	return	
  8296  016610                     l1186:
  8297                           
  8298                           ;udpv4_port_handler_table.c: 76: else
  8299                           ;udpv4_port_handler_table.c: 77: return (udp_table_iterator_t) (0);
  8300  016610  0E00               	movlw	0
  8301  016612  6E15               	movwf	?_udp_table_nextEntry,c
  8302  016614  0E00               	movlw	0
  8303  016616  6E16               	movwf	?_udp_table_nextEntry+1,c
  8304  016618  0012               	return	
  8305  01661A                     __end_of_udp_table_nextEntry:
  8306                           	opt stack 0
  8307                           tosu	equ	0xFFF
  8308                           tosh	equ	0xFFE
  8309                           tosl	equ	0xFFD
  8310                           pclath	equ	0xFFA
  8311                           tblptru	equ	0xFF8
  8312                           tblptrh	equ	0xFF7
  8313                           tblptrl	equ	0xFF6
  8314                           tablat	equ	0xFF5
  8315                           prodh	equ	0xFF4
  8316                           prodl	equ	0xFF3
  8317                           intcon	equ	0xFF2
  8318                           indf0	equ	0xFEF
  8319                           postinc0	equ	0xFEE
  8320                           fsr0h	equ	0xFEA
  8321                           fsr0l	equ	0xFE9
  8322                           wreg	equ	0xFE8
  8323                           indf1	equ	0xFE7
  8324                           postinc1	equ	0xFE6
  8325                           postdec1	equ	0xFE5
  8326                           fsr1h	equ	0xFE2
  8327                           fsr1l	equ	0xFE1
  8328                           indf2	equ	0xFDF
  8329                           postinc2	equ	0xFDE
  8330                           postdec2	equ	0xFDD
  8331                           fsr2h	equ	0xFDA
  8332                           fsr2l	equ	0xFD9
  8333                           status	equ	0xFD8
  8334                           
  8335 ;; *************** function _udp_table_getIterator *****************
  8336 ;; Defined at:
  8337 ;;		line 60 in file "mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;		None
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;		None
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  2   18[COMRAM] PTR struct .
  8344 ;; Registers used:
  8345 ;;		wreg, status,2, status,0
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;Total ram usage:        2 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:    4
  8358 ;; This function calls:
  8359 ;;		Nothing
  8360 ;; This function is called by:
  8361 ;;		_udp_table_nextEntry
  8362 ;;		_UDP_Receive
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text38
  8367  016AF4                     __ptext38:
  8368                           	opt stack 0
  8369  016AF4                     _udp_table_getIterator:
  8370                           	opt stack 21
  8371                           
  8372                           ;udpv4_port_handler_table.c: 62: return (udp_table_iterator_t) UDP_CallBackTable;
  8373                           
  8374                           ;incstack = 0
  8375  016AF4  0E23               	movlw	low _UDP_CallBackTable
  8376  016AF6  6E13               	movwf	?_udp_table_getIterator,c
  8377  016AF8  0EFF               	movlw	high _UDP_CallBackTable
  8378  016AFA  6E14               	movwf	?_udp_table_getIterator+1,c
  8379  016AFC  0012               	return	
  8380  016AFE                     __end_of_udp_table_getIterator:
  8381                           	opt stack 0
  8382                           tosu	equ	0xFFF
  8383                           tosh	equ	0xFFE
  8384                           tosl	equ	0xFFD
  8385                           pclath	equ	0xFFA
  8386                           tblptru	equ	0xFF8
  8387                           tblptrh	equ	0xFF7
  8388                           tblptrl	equ	0xFF6
  8389                           tablat	equ	0xFF5
  8390                           prodh	equ	0xFF4
  8391                           prodl	equ	0xFF3
  8392                           intcon	equ	0xFF2
  8393                           indf0	equ	0xFEF
  8394                           postinc0	equ	0xFEE
  8395                           fsr0h	equ	0xFEA
  8396                           fsr0l	equ	0xFE9
  8397                           wreg	equ	0xFE8
  8398                           indf1	equ	0xFE7
  8399                           postinc1	equ	0xFE6
  8400                           postdec1	equ	0xFE5
  8401                           fsr1h	equ	0xFE2
  8402                           fsr1l	equ	0xFE1
  8403                           indf2	equ	0xFDF
  8404                           postinc2	equ	0xFDE
  8405                           postdec2	equ	0xFDD
  8406                           fsr2h	equ	0xFDA
  8407                           fsr2l	equ	0xFD9
  8408                           status	equ	0xFD8
  8409                           
  8410 ;; *************** function _DHCP_Handler *****************
  8411 ;; Defined at:
  8412 ;;		line 255 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  length          2   80[BANK0 ] int 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  a               4   20[BANK1 ] unsigned long 
  8417 ;;  a               4   16[BANK1 ] unsigned long 
  8418 ;;  count           1   32[BANK1 ] unsigned char 
  8419 ;;  count           1   31[BANK1 ] unsigned char 
  8420 ;;  optionLength    1   36[BANK1 ] unsigned char 
  8421 ;;  option          1   25[BANK1 ] unsigned char 
  8422 ;;  localData      48   37[BANK1 ] struct .
  8423 ;;  chaddr         16    0[BANK1 ] unsigned char [16]
  8424 ;;  siaddr          4   26[BANK1 ] unsigned long 
  8425 ;;  acceptACK       1   35[BANK1 ] unsigned char 
  8426 ;;  acceptNACK      1   34[BANK1 ] unsigned char 
  8427 ;;  acceptOffers    1   33[BANK1 ] unsigned char 
  8428 ;;  declineOffer    1   30[BANK1 ] unsigned char 
  8429 ;;  messageType     1   24[BANK1 ] unsigned char 
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1    wreg      void 
  8432 ;; Registers used:
  8433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;      Locals:         0       0      85       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Totals:         0       6      85       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;Total ram usage:       91 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:   12
  8446 ;; This function calls:
  8447 ;;		_ETH_Dump
  8448 ;;		_ETH_Read16
  8449 ;;		_ETH_Read32
  8450 ;;		_ETH_Read8
  8451 ;;		_ETH_ReadBlock
  8452 ;;		_memcmp
  8453 ;;		_sendDHCPDECLINE
  8454 ;;		_sendDHCPREQUEST
  8455 ;;		_strlen
  8456 ;; This function is called by:
  8457 ;;		_UDP_Receive
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text39
  8462  012BA4                     __ptext39:
  8463                           	opt stack 0
  8464  012BA4                     _DHCP_Handler:
  8465                           	opt stack 14
  8466                           
  8467                           ;dhcp_client.c: 258: uint8_t chaddr[16];
  8468                           ;dhcp_client.c: 259: uint8_t messageType;
  8469                           ;dhcp_client.c: 261: bool acceptOffers;
  8470                           ;dhcp_client.c: 262: bool declineOffers;
  8471                           ;dhcp_client.c: 263: bool acceptNACK;
  8472                           ;dhcp_client.c: 264: bool acceptACK;
  8473                           ;dhcp_client.c: 266: uint32_t siaddr;
  8474                           ;dhcp_client.c: 270: switch(dhcpState.rxClientState)
  8475                           
  8476                           ;incstack = 0
  8477  012BA4  D01C               	goto	l1344
  8478  012BA6                     
  8479                           ;dhcp_client.c: 274: acceptOffers = 1;
  8480                           
  8481                           ;dhcp_client.c: 273: case SELECTING:
  8482  012BA6  0E01               	movlw	1
  8483  012BA8  0101               	movlb	1	; () banked
  8484  012BAA  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8485                           
  8486                           ;dhcp_client.c: 275: declineOffers = 0;
  8487  012BAC  0E00               	movlw	0
  8488  012BAE  6F1E               	movwf	DHCP_Handler@declineOffers& (0+255),b
  8489  012BB0  D012               	goto	L3
  8490  012BB2                     
  8491                           ;dhcp_client.c: 280: acceptOffers = 0;
  8492                           
  8493                           ; BSR set to: 1
  8494  012BB2  0E00               	movlw	0
  8495  012BB4  0101               	movlb	1	; () banked
  8496  012BB6  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8497                           
  8498                           ;dhcp_client.c: 281: declineOffers = 1;
  8499  012BB8  0E01               	movlw	1
  8500  012BBA  6F1E               	movwf	DHCP_Handler@declineOffers& (0+255),b
  8501  012BBC  D005               	goto	L2
  8502  012BBE                     L1:
  8503  012BBE  6F23               	movwf	DHCP_Handler@acceptACK& (0+255),b
  8504                           
  8505                           ;dhcp_client.c: 284: break;
  8506  012BC0  D01D               	goto	l1347
  8507  012BC2                     
  8508                           ;dhcp_client.c: 286: acceptOffers = 0;
  8509                           
  8510                           ; BSR set to: 1
  8511  012BC2  0E00               	movlw	0
  8512  012BC4  0101               	movlb	1	; () banked
  8513  012BC6  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8514  012BC8                     L2:
  8515                           
  8516                           ;dhcp_client.c: 287: acceptNACK = 1;
  8517  012BC8  0E01               	movlw	1
  8518  012BCA  6F22               	movwf	DHCP_Handler@acceptNACK& (0+255),b
  8519                           
  8520                           ;dhcp_client.c: 288: acceptACK = 1;
  8521  012BCC  0E01               	movlw	1
  8522  012BCE  D7F7               	goto	L1
  8523  012BD0                     
  8524                           ;dhcp_client.c: 291: acceptOffers = 0;
  8525                           
  8526                           ; BSR set to: 1
  8527  012BD0  0E00               	movlw	0
  8528  012BD2  0101               	movlb	1	; () banked
  8529  012BD4  6F21               	movwf	DHCP_Handler@acceptOffers& (0+255),b
  8530  012BD6                     L3:
  8531                           
  8532                           ;dhcp_client.c: 292: acceptNACK = 0;
  8533  012BD6  0E00               	movlw	0
  8534  012BD8  6F22               	movwf	DHCP_Handler@acceptNACK& (0+255),b
  8535                           
  8536                           ;dhcp_client.c: 293: acceptACK = 0;
  8537  012BDA  0E00               	movlw	0
  8538  012BDC  D7F0               	goto	L1
  8539  012BDE                     l1344:
  8540                           
  8541                           ; BSR set to: 1
  8542  012BDE  0102               	movlb	2	; () banked
  8543  012BE0  5148               	movf	_dhcpState& (0+255),w,b
  8544                           
  8545                           ; Switch size 1, requested type "space"
  8546                           ; Number of cases is 4, Range of values is 0 to 3
  8547                           ; switch strategies available:
  8548                           ; Name         Instructions Cycles
  8549                           ; simple_byte           13     7 (average)
  8550                           ;	Chosen strategy is simple_byte
  8551  012BE2  0A00               	xorlw	0	; case 0
  8552  012BE4  B4D8               	btfsc	status,2,c
  8553  012BE6  D7DF               	goto	l1345
  8554  012BE8  0A01               	xorlw	1	; case 1
  8555  012BEA  B4D8               	btfsc	status,2,c
  8556  012BEC  D7E2               	goto	l1348
  8557  012BEE  0A03               	xorlw	3	; case 2
  8558  012BF0  B4D8               	btfsc	status,2,c
  8559  012BF2  D7E7               	goto	l1349
  8560  012BF4  0A01               	xorlw	1	; case 3
  8561  012BF6  B4D8               	btfsc	status,2,c
  8562  012BF8  D7EB               	goto	l1350
  8563  012BFA  D7D5               	goto	l1345
  8564  012BFC                     l1347:
  8565                           
  8566                           ;dhcp_client.c: 297: if(acceptOffers || declineOffers || acceptNACK || acceptACK)
  8567                           
  8568                           ; BSR set to: 2
  8569  012BFC  0101               	movlb	1	; () banked
  8570  012BFE  5121               	movf	DHCP_Handler@acceptOffers& (0+255),w,b
  8571  012C00  A4D8               	btfss	status,2,c
  8572  012C02  D009               	goto	u9960
  8573                           
  8574                           ; BSR set to: 1
  8575  012C04  511E               	movf	DHCP_Handler@declineOffers& (0+255),w,b
  8576  012C06  A4D8               	btfss	status,2,c
  8577  012C08  D006               	goto	u9960
  8578                           
  8579                           ; BSR set to: 1
  8580  012C0A  5122               	movf	DHCP_Handler@acceptNACK& (0+255),w,b
  8581  012C0C  A4D8               	btfss	status,2,c
  8582  012C0E  D003               	goto	u9960
  8583                           
  8584                           ; BSR set to: 1
  8585  012C10  5123               	movf	DHCP_Handler@acceptACK& (0+255),w,b
  8586  012C12  B4D8               	btfsc	status,2,c
  8587  012C14  0012               	return	
  8588  012C16                     u9960:
  8589                           
  8590                           ; BSR set to: 1
  8591                           ;dhcp_client.c: 298: {
  8592                           ;dhcp_client.c: 299: dhcp_data_t localData = {0,0,0,0,0,0,0,0,0,3600,3600,0};
  8593                           
  8594                           ; BSR set to: 1
  8595  012C16  EE23  F07B         	lfsr	2,DHCP_Handler@F840
  8596  012C1A  EE11  F025         	lfsr	1,DHCP_Handler@localData
  8597  012C1E  0E2F               	movlw	47
  8598  012C20                     u9971:
  8599  012C20  CFDB FFE3          	movff	plusw2,plusw1
  8600  012C24  06E8               	decf	wreg,f,c
  8601  012C26  E2FC               	bc	u9971
  8602                           
  8603                           ; BSR set to: 1
  8604                           ;dhcp_client.c: 300: localData.xidValue = dhcpData.xidValue;
  8605  012C28  C2E6  F145         	movff	_dhcpData+32,DHCP_Handler@localData+32
  8606  012C2C  C2E7  F146         	movff	_dhcpData+33,DHCP_Handler@localData+33
  8607  012C30  C2E8  F147         	movff	_dhcpData+34,DHCP_Handler@localData+34
  8608  012C34  C2E9  F148         	movff	_dhcpData+35,DHCP_Handler@localData+35
  8609                           
  8610                           ; BSR set to: 1
  8611                           ;dhcp_client.c: 302: if(length > 240)
  8612  012C38  0100               	movlb	0	; () banked
  8613  012C3A  BFB1               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  8614  012C3C  D236               	goto	l1396
  8615  012C3E  51B1               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  8616  012C40  E104               	bnz	u9980
  8617  012C42  0EF1               	movlw	241
  8618  012C44  5DB0               	subwf	DHCP_Handler@length& (0+255),w,b
  8619  012C46  A0D8               	btfss	status,0,c
  8620  012C48  D230               	goto	l1396
  8621  012C4A                     u9980:
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;dhcp_client.c: 303: {
  8625                           ;dhcp_client.c: 304: if(0x0201 == ETH_Read16())
  8626  012C4A  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  8627  012C4E  0413               	decf	?_ETH_Read16,w,c
  8628  012C50  E103               	bnz	u9991
  8629  012C52  0E02               	movlw	2
  8630  012C54  1814               	xorwf	?_ETH_Read16+1,w,c
  8631  012C56  A4D8               	btfss	status,2,c
  8632  012C58                     u9991:
  8633  012C58  D228               	goto	l1396
  8634                           
  8635                           ;dhcp_client.c: 305: {
  8636                           ;dhcp_client.c: 306: if(0x06 == ETH_Read8())
  8637  012C5A  EC4C  F0B4         	call	_ETH_Read8	;wreg free
  8638  012C5E  0A06               	xorlw	6
  8639  012C60  A4D8               	btfss	status,2,c
  8640  012C62  D223               	goto	l1396
  8641                           
  8642                           ;dhcp_client.c: 307: {
  8643                           ;dhcp_client.c: 308: ETH_Read8();
  8644  012C64  EC4C  F0B4         	call	_ETH_Read8	;wreg free
  8645                           
  8646                           ;dhcp_client.c: 309: if(dhcpData.xidValue == ETH_Read32())
  8647  012C68  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8648  012C6C  0102               	movlb	2	; () banked
  8649  012C6E  51E6               	movf	(_dhcpData+32)& (0+255),w,b
  8650  012C70  1813               	xorwf	?_ETH_Read32,w,c
  8651  012C72  E109               	bnz	u10011
  8652  012C74  51E7               	movf	(_dhcpData+33)& (0+255),w,b
  8653  012C76  1814               	xorwf	?_ETH_Read32+1,w,c
  8654  012C78  E106               	bnz	u10011
  8655  012C7A  51E8               	movf	(_dhcpData+34)& (0+255),w,b
  8656  012C7C  1815               	xorwf	?_ETH_Read32+2,w,c
  8657  012C7E  E103               	bnz	u10011
  8658  012C80  51E9               	movf	(_dhcpData+35)& (0+255),w,b
  8659  012C82  1816               	xorwf	?_ETH_Read32+3,w,c
  8660  012C84  A4D8               	btfss	status,2,c
  8661  012C86                     u10011:
  8662  012C86  D211               	goto	l1396
  8663                           
  8664                           ; BSR set to: 2
  8665                           ;dhcp_client.c: 310: {
  8666                           ;dhcp_client.c: 311: ETH_Read16();
  8667  012C88  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  8668                           
  8669                           ;dhcp_client.c: 312: ETH_Read16();
  8670  012C8C  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  8671                           
  8672                           ;dhcp_client.c: 313: ETH_Read32();
  8673  012C90  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8674                           
  8675                           ;dhcp_client.c: 314: localData.dhcpIPAddress = ETH_Read32();
  8676  012C94  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8677  012C98  C013  F125         	movff	?_ETH_Read32,DHCP_Handler@localData
  8678  012C9C  C014  F126         	movff	?_ETH_Read32+1,DHCP_Handler@localData+1
  8679  012CA0  C015  F127         	movff	?_ETH_Read32+2,DHCP_Handler@localData+2
  8680  012CA4  C016  F128         	movff	?_ETH_Read32+3,DHCP_Handler@localData+3
  8681                           
  8682                           ;dhcp_client.c: 315: if((localData.dhcpIPAddress != 0xFFFFFFFF) && (localData.dhcpIPAddr
      +                          ess != 0x7F000001))
  8683  012CA8  0101               	movlb	1	; () banked
  8684  012CAA  2925               	incf	DHCP_Handler@localData& (0+255),w,b
  8685  012CAC  E107               	bnz	u10020
  8686  012CAE  2926               	incf	(DHCP_Handler@localData+1)& (0+255),w,b
  8687  012CB0  E105               	bnz	u10020
  8688  012CB2  2927               	incf	(DHCP_Handler@localData+2)& (0+255),w,b
  8689  012CB4  E103               	bnz	u10020
  8690  012CB6  2928               	incf	(DHCP_Handler@localData+3)& (0+255),w,b
  8691  012CB8  B4D8               	btfsc	status,2,c
  8692  012CBA  D1F7               	goto	l1396
  8693  012CBC                     u10020:
  8694                           
  8695                           ; BSR set to: 1
  8696  012CBC  0525               	decf	DHCP_Handler@localData& (0+255),w,b
  8697  012CBE  E106               	bnz	u10030
  8698  012CC0  0E7F               	movlw	127
  8699  012CC2  1928               	xorwf	(DHCP_Handler@localData+3)& (0+255),w,b
  8700  012CC4  1126               	iorwf	(DHCP_Handler@localData+1)& (0+255),w,b
  8701  012CC6  1127               	iorwf	(DHCP_Handler@localData+2)& (0+255),w,b
  8702  012CC8  B4D8               	btfsc	status,2,c
  8703  012CCA  D1EF               	goto	l1396
  8704  012CCC                     u10030:
  8705                           
  8706                           ; BSR set to: 1
  8707                           ;dhcp_client.c: 316: {
  8708                           ;dhcp_client.c: 317: siaddr = ETH_Read32();
  8709  012CCC  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8710  012CD0  C013  F11A         	movff	?_ETH_Read32,DHCP_Handler@siaddr
  8711  012CD4  C014  F11B         	movff	?_ETH_Read32+1,DHCP_Handler@siaddr+1
  8712  012CD8  C015  F11C         	movff	?_ETH_Read32+2,DHCP_Handler@siaddr+2
  8713  012CDC  C016  F11D         	movff	?_ETH_Read32+3,DHCP_Handler@siaddr+3
  8714                           
  8715                           ;dhcp_client.c: 318: if((siaddr != 0xFFFFFFFF) && (siaddr != 0x7F000001))
  8716  012CE0  0101               	movlb	1	; () banked
  8717  012CE2  291A               	incf	DHCP_Handler@siaddr& (0+255),w,b
  8718  012CE4  E107               	bnz	u10040
  8719  012CE6  291B               	incf	(DHCP_Handler@siaddr+1)& (0+255),w,b
  8720  012CE8  E105               	bnz	u10040
  8721  012CEA  291C               	incf	(DHCP_Handler@siaddr+2)& (0+255),w,b
  8722  012CEC  E103               	bnz	u10040
  8723  012CEE  291D               	incf	(DHCP_Handler@siaddr+3)& (0+255),w,b
  8724  012CF0  B4D8               	btfsc	status,2,c
  8725  012CF2  D1DB               	goto	l1396
  8726  012CF4                     u10040:
  8727                           
  8728                           ; BSR set to: 1
  8729  012CF4  051A               	decf	DHCP_Handler@siaddr& (0+255),w,b
  8730  012CF6  E106               	bnz	u10050
  8731  012CF8  0E7F               	movlw	127
  8732  012CFA  191D               	xorwf	(DHCP_Handler@siaddr+3)& (0+255),w,b
  8733  012CFC  111B               	iorwf	(DHCP_Handler@siaddr+1)& (0+255),w,b
  8734  012CFE  111C               	iorwf	(DHCP_Handler@siaddr+2)& (0+255),w,b
  8735  012D00  B4D8               	btfsc	status,2,c
  8736  012D02  D1D3               	goto	l1396
  8737  012D04                     u10050:
  8738                           
  8739                           ; BSR set to: 1
  8740                           ;dhcp_client.c: 319: {
  8741                           ;dhcp_client.c: 320: ETH_Read32();
  8742  012D04  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8743                           
  8744                           ;dhcp_client.c: 321: ETH_ReadBlock(chaddr,sizeof(chaddr));
  8745  012D08  0E00               	movlw	low DHCP_Handler@chaddr
  8746  012D0A  6E13               	movwf	ETH_ReadBlock@buffer,c
  8747  012D0C  0E01               	movlw	high DHCP_Handler@chaddr
  8748  012D0E  6E14               	movwf	ETH_ReadBlock@buffer+1,c
  8749  012D10  0E00               	movlw	0
  8750  012D12  6E16               	movwf	ETH_ReadBlock@length+1,c
  8751  012D14  0E10               	movlw	16
  8752  012D16  6E15               	movwf	ETH_ReadBlock@length,c
  8753  012D18  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
  8754                           
  8755                           ;dhcp_client.c: 322: if(memcmp(chaddr, &hostMacAddress.s, 6)== 0 || memcmp(chaddr, &broa
      +                          dcastMAC.s, 6)== 0 || (strlen(chaddr)== 0))
  8756  012D1C  0E00               	movlw	low DHCP_Handler@chaddr
  8757  012D1E  6E13               	movwf	memcmp@s1,c
  8758  012D20  0E01               	movlw	high DHCP_Handler@chaddr
  8759  012D22  6E14               	movwf	memcmp@s1+1,c
  8760  012D24  0E84               	movlw	low _hostMacAddress
  8761  012D26  6E15               	movwf	memcmp@s2,c
  8762  012D28  0E02               	movlw	high _hostMacAddress
  8763  012D2A  6E16               	movwf	memcmp@s2+1,c
  8764  012D2C  0E00               	movlw	0
  8765  012D2E  6E18               	movwf	memcmp@n+1,c
  8766  012D30  0E06               	movlw	6
  8767  012D32  6E17               	movwf	memcmp@n,c
  8768  012D34  ECDC  F0AC         	call	_memcmp	;wreg free
  8769  012D38  5013               	movf	?_memcmp,w,c
  8770  012D3A  1014               	iorwf	?_memcmp+1,w,c
  8771  012D3C  B4D8               	btfsc	status,2,c
  8772  012D3E  D01C               	goto	u10080
  8773  012D40  0E00               	movlw	low DHCP_Handler@chaddr
  8774  012D42  6E13               	movwf	memcmp@s1,c
  8775  012D44  0E01               	movlw	high DHCP_Handler@chaddr
  8776  012D46  6E14               	movwf	memcmp@s1+1,c
  8777  012D48  0E45               	movlw	low _broadcastMAC
  8778  012D4A  6E15               	movwf	memcmp@s2,c
  8779  012D4C  0EFF               	movlw	high _broadcastMAC
  8780  012D4E  6E16               	movwf	memcmp@s2+1,c
  8781  012D50  0E00               	movlw	0
  8782  012D52  6E18               	movwf	memcmp@n+1,c
  8783  012D54  0E06               	movlw	6
  8784  012D56  6E17               	movwf	memcmp@n,c
  8785  012D58  ECDC  F0AC         	call	_memcmp	;wreg free
  8786  012D5C  5013               	movf	?_memcmp,w,c
  8787  012D5E  1014               	iorwf	?_memcmp+1,w,c
  8788  012D60  B4D8               	btfsc	status,2,c
  8789  012D62  D00A               	goto	u10080
  8790  012D64  0E00               	movlw	low DHCP_Handler@chaddr
  8791  012D66  6E13               	movwf	strlen@s,c
  8792  012D68  0E01               	movlw	high DHCP_Handler@chaddr
  8793  012D6A  6E14               	movwf	strlen@s+1,c
  8794  012D6C  EC5C  F0B1         	call	_strlen	;wreg free
  8795  012D70  5013               	movf	?_strlen,w,c
  8796  012D72  1014               	iorwf	?_strlen+1,w,c
  8797  012D74  A4D8               	btfss	status,2,c
  8798  012D76  D199               	goto	l1396
  8799  012D78                     u10080:
  8800                           
  8801                           ;dhcp_client.c: 323: {
  8802                           ;dhcp_client.c: 324: ETH_Dump(64);
  8803  012D78  0E00               	movlw	0
  8804  012D7A  6E14               	movwf	ETH_Dump@length+1,c
  8805  012D7C  0E40               	movlw	64
  8806  012D7E  6E13               	movwf	ETH_Dump@length,c
  8807  012D80  EC71  F0B3         	call	_ETH_Dump	;wreg free
  8808                           
  8809                           ;dhcp_client.c: 325: ETH_Dump(128);
  8810  012D84  0E00               	movlw	0
  8811  012D86  6E14               	movwf	ETH_Dump@length+1,c
  8812  012D88  0E80               	movlw	128
  8813  012D8A  6E13               	movwf	ETH_Dump@length,c
  8814  012D8C  EC71  F0B3         	call	_ETH_Dump	;wreg free
  8815                           
  8816                           ;dhcp_client.c: 326: if(ETH_Read32() == 0x63825363)
  8817  012D90  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8818  012D94  0E63               	movlw	99
  8819  012D96  1813               	xorwf	?_ETH_Read32,w,c
  8820  012D98  E109               	bnz	u10091
  8821  012D9A  0E53               	movlw	83
  8822  012D9C  1814               	xorwf	?_ETH_Read32+1,w,c
  8823  012D9E  E106               	bnz	u10091
  8824  012DA0  0E82               	movlw	130
  8825  012DA2  1815               	xorwf	?_ETH_Read32+2,w,c
  8826  012DA4  E103               	bnz	u10091
  8827  012DA6  0E63               	movlw	99
  8828  012DA8  1816               	xorwf	?_ETH_Read32+3,w,c
  8829  012DAA  A4D8               	btfss	status,2,c
  8830  012DAC                     u10091:
  8831  012DAC  D17E               	goto	l1396
  8832                           
  8833                           ;dhcp_client.c: 327: {
  8834                           ;dhcp_client.c: 328: length -= 240;
  8835  012DAE  0100               	movlb	0	; () banked
  8836  012DB0  0E10               	movlw	16
  8837  012DB2  27B0               	addwf	DHCP_Handler@length& (0+255),f,b
  8838  012DB4  0EFF               	movlw	255
  8839  012DB6  23B1               	addwfc	(DHCP_Handler@length+1)& (0+255),f,b
  8840                           
  8841                           ;dhcp_client.c: 329: while(length>0)
  8842  012DB8  D0DA               	goto	l1370
  8843  012DBA                     
  8844                           ; BSR set to: 0
  8845                           ;dhcp_client.c: 330: {
  8846                           ;dhcp_client.c: 332: uint8_t option, optionLength;
  8847                           ;dhcp_client.c: 333: option = ETH_Read8();
  8848                           
  8849                           ; BSR set to: 0
  8850  012DBA  EC4C  F0B4         	call	_ETH_Read8	;wreg free
  8851  012DBE  0101               	movlb	1	; () banked
  8852  012DC0  6F19               	movwf	DHCP_Handler@option& (0+255),b
  8853                           
  8854                           ;dhcp_client.c: 334: optionLength = ETH_Read8();
  8855  012DC2  EC4C  F0B4         	call	_ETH_Read8	;wreg free
  8856  012DC6  0101               	movlb	1	; () banked
  8857  012DC8  6F24               	movwf	DHCP_Handler@optionLength& (0+255),b
  8858                           
  8859                           ; BSR set to: 1
  8860                           ;dhcp_client.c: 335: length -= 2 + optionLength;
  8861  012DCA  5124               	movf	DHCP_Handler@optionLength& (0+255),w,b
  8862  012DCC  0100               	movlb	0	; () banked
  8863  012DCE  6FB2               	movwf	??_DHCP_Handler& (0+255),b
  8864  012DD0  6BB3               	clrf	(??_DHCP_Handler+1)& (0+255),b
  8865  012DD2  0E02               	movlw	2
  8866  012DD4  27B2               	addwf	??_DHCP_Handler& (0+255),f,b
  8867  012DD6  0E00               	movlw	0
  8868  012DD8  23B3               	addwfc	(??_DHCP_Handler+1)& (0+255),f,b
  8869  012DDA  51B2               	movf	??_DHCP_Handler& (0+255),w,b
  8870  012DDC  5FB0               	subwf	DHCP_Handler@length& (0+255),f,b
  8871  012DDE  51B3               	movf	(??_DHCP_Handler+1)& (0+255),w,b
  8872  012DE0  5BB1               	subwfb	(DHCP_Handler@length+1)& (0+255),f,b
  8873                           
  8874                           ;dhcp_client.c: 336: switch(option)
  8875  012DE2  D0AD               	goto	l1368
  8876  012DE4                     
  8877                           ;dhcp_client.c: 339: localData.subnetMask = ETH_Read32();
  8878                           
  8879                           ; BSR set to: 0
  8880  012DE4  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8881  012DE8  C013  F129         	movff	?_ETH_Read32,DHCP_Handler@localData+4
  8882  012DEC  C014  F12A         	movff	?_ETH_Read32+1,DHCP_Handler@localData+5
  8883  012DF0  C015  F12B         	movff	?_ETH_Read32+2,DHCP_Handler@localData+6
  8884  012DF4  C016  F12C         	movff	?_ETH_Read32+3,DHCP_Handler@localData+7
  8885                           
  8886                           ;dhcp_client.c: 340: break;
  8887  012DF8  D0BA               	goto	l1370
  8888  012DFA                     
  8889                           ;dhcp_client.c: 342: localData.routerAddress = ETH_Read32();
  8890  012DFA  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8891  012DFE  C013  F12D         	movff	?_ETH_Read32,DHCP_Handler@localData+8
  8892  012E02  C014  F12E         	movff	?_ETH_Read32+1,DHCP_Handler@localData+9
  8893  012E06  C015  F12F         	movff	?_ETH_Read32+2,DHCP_Handler@localData+10
  8894  012E0A  C016  F130         	movff	?_ETH_Read32+3,DHCP_Handler@localData+11
  8895                           
  8896                           ;dhcp_client.c: 343: break;
  8897  012E0E  D0AF               	goto	l1370
  8898  012E10                     
  8899                           ;dhcp_client.c: 345: {
  8900                           ;dhcp_client.c: 346: uint8_t count=0;
  8901  012E10  0E00               	movlw	0
  8902  012E12  0101               	movlb	1	; () banked
  8903  012E14  6F1F               	movwf	DHCP_Handler@count& (0+255),b
  8904                           
  8905                           ;dhcp_client.c: 347: while(optionLength >= 4)
  8906  012E16  D025               	goto	l1373
  8907  012E18                     
  8908                           ; BSR set to: 1
  8909                           ;dhcp_client.c: 348: {
  8910                           ;dhcp_client.c: 349: uint32_t a = ETH_Read32();
  8911                           
  8912                           ; BSR set to: 1
  8913  012E18  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8914  012E1C  C013  F110         	movff	?_ETH_Read32,DHCP_Handler@a
  8915  012E20  C014  F111         	movff	?_ETH_Read32+1,DHCP_Handler@a+1
  8916  012E24  C015  F112         	movff	?_ETH_Read32+2,DHCP_Handler@a+2
  8917  012E28  C016  F113         	movff	?_ETH_Read32+3,DHCP_Handler@a+3
  8918                           
  8919                           ;dhcp_client.c: 350: if(count < 2)
  8920  012E2C  0E02               	movlw	2
  8921  012E2E  0101               	movlb	1	; () banked
  8922  012E30  611F               	cpfslt	DHCP_Handler@count& (0+255),b
  8923  012E32  D015               	goto	l1375
  8924                           
  8925                           ; BSR set to: 1
  8926                           ;dhcp_client.c: 351: localData.dnsAddress[count++] = a;
  8927  012E34  511F               	movf	DHCP_Handler@count& (0+255),w,b
  8928  012E36  0D04               	mullw	4
  8929  012E38  0E0C               	movlw	12
  8930  012E3A  26F3               	addwf	prodl,f,c
  8931  012E3C  0E00               	movlw	0
  8932  012E3E  22F4               	addwfc	prodh,f,c
  8933  012E40  0E25               	movlw	low DHCP_Handler@localData
  8934  012E42  24F3               	addwf	prodl,w,c
  8935  012E44  6ED9               	movwf	fsr2l,c
  8936  012E46  0E01               	movlw	high DHCP_Handler@localData
  8937  012E48  20F4               	addwfc	prodh,w,c
  8938  012E4A  6EDA               	movwf	fsr2h,c
  8939  012E4C  C110  FFDE         	movff	DHCP_Handler@a,postinc2
  8940  012E50  C111  FFDE         	movff	DHCP_Handler@a+1,postinc2
  8941  012E54  C112  FFDE         	movff	DHCP_Handler@a+2,postinc2
  8942  012E58  C113  FFDE         	movff	DHCP_Handler@a+3,postinc2
  8943                           
  8944                           ; BSR set to: 1
  8945  012E5C  2B1F               	incf	DHCP_Handler@count& (0+255),f,b
  8946  012E5E                     l1375:
  8947                           
  8948                           ; BSR set to: 1
  8949                           ;dhcp_client.c: 353: optionLength -= 4;
  8950                           
  8951                           ; BSR set to: 1
  8952  012E5E  0E04               	movlw	4
  8953  012E60  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  8954  012E62                     l1373:
  8955                           
  8956                           ; BSR set to: 1
  8957                           
  8958                           ; BSR set to: 1
  8959  012E62  0E04               	movlw	4
  8960  012E64  6124               	cpfslt	DHCP_Handler@optionLength& (0+255),b
  8961  012E66  D7D8               	goto	l1374
  8962  012E68  D082               	goto	l1370
  8963  012E6A                     
  8964                           ; BSR set to: 1
  8965                           ;dhcp_client.c: 358: {
  8966                           ;dhcp_client.c: 359: uint8_t count=0;
  8967                           
  8968                           ; BSR set to: 1
  8969  012E6A  0E00               	movlw	0
  8970  012E6C  6F20               	movwf	DHCP_Handler@count_3183& (0+255),b
  8971                           
  8972                           ;dhcp_client.c: 360: while(optionLength >= 4)
  8973  012E6E  D025               	goto	l1378
  8974  012E70                     
  8975                           ; BSR set to: 1
  8976                           ;dhcp_client.c: 361: {
  8977                           ;dhcp_client.c: 362: uint32_t a = ETH_Read32();
  8978                           
  8979                           ; BSR set to: 1
  8980  012E70  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  8981  012E74  C013  F114         	movff	?_ETH_Read32,DHCP_Handler@a_3184
  8982  012E78  C014  F115         	movff	?_ETH_Read32+1,DHCP_Handler@a_3184+1
  8983  012E7C  C015  F116         	movff	?_ETH_Read32+2,DHCP_Handler@a_3184+2
  8984  012E80  C016  F117         	movff	?_ETH_Read32+3,DHCP_Handler@a_3184+3
  8985                           
  8986                           ;dhcp_client.c: 363: if(count < 2)
  8987  012E84  0E02               	movlw	2
  8988  012E86  0101               	movlb	1	; () banked
  8989  012E88  6120               	cpfslt	DHCP_Handler@count_3183& (0+255),b
  8990  012E8A  D015               	goto	l1380
  8991                           
  8992                           ; BSR set to: 1
  8993                           ;dhcp_client.c: 364: localData.ntpAddress[count++] = a;
  8994  012E8C  5120               	movf	DHCP_Handler@count_3183& (0+255),w,b
  8995  012E8E  0D04               	mullw	4
  8996  012E90  0E14               	movlw	20
  8997  012E92  26F3               	addwf	prodl,f,c
  8998  012E94  0E00               	movlw	0
  8999  012E96  22F4               	addwfc	prodh,f,c
  9000  012E98  0E25               	movlw	low DHCP_Handler@localData
  9001  012E9A  24F3               	addwf	prodl,w,c
  9002  012E9C  6ED9               	movwf	fsr2l,c
  9003  012E9E  0E01               	movlw	high DHCP_Handler@localData
  9004  012EA0  20F4               	addwfc	prodh,w,c
  9005  012EA2  6EDA               	movwf	fsr2h,c
  9006  012EA4  C114  FFDE         	movff	DHCP_Handler@a_3184,postinc2
  9007  012EA8  C115  FFDE         	movff	DHCP_Handler@a_3184+1,postinc2
  9008  012EAC  C116  FFDE         	movff	DHCP_Handler@a_3184+2,postinc2
  9009  012EB0  C117  FFDE         	movff	DHCP_Handler@a_3184+3,postinc2
  9010                           
  9011                           ; BSR set to: 1
  9012  012EB4  2B20               	incf	DHCP_Handler@count_3183& (0+255),f,b
  9013  012EB6                     l1380:
  9014                           
  9015                           ; BSR set to: 1
  9016                           ;dhcp_client.c: 366: optionLength -= 4;
  9017                           
  9018                           ; BSR set to: 1
  9019  012EB6  0E04               	movlw	4
  9020  012EB8  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  9021  012EBA                     l1378:
  9022                           
  9023                           ; BSR set to: 1
  9024                           
  9025                           ; BSR set to: 1
  9026  012EBA  0E04               	movlw	4
  9027  012EBC  6124               	cpfslt	DHCP_Handler@optionLength& (0+255),b
  9028  012EBE  D7D8               	goto	l1379
  9029  012EC0  D056               	goto	l1370
  9030  012EC2                     
  9031                           ; BSR set to: 1
  9032                           ;dhcp_client.c: 371: if(optionLength >= 4)
  9033                           
  9034                           ; BSR set to: 1
  9035  012EC2  0E03               	movlw	3
  9036  012EC4  6524               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  9037  012EC6  D053               	goto	l1370
  9038                           
  9039                           ; BSR set to: 1
  9040                           ;dhcp_client.c: 372: {
  9041                           ;dhcp_client.c: 373: localData.t1 = ETH_Read32();
  9042  012EC8  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  9043  012ECC  C013  F149         	movff	?_ETH_Read32,DHCP_Handler@localData+36
  9044  012ED0  C014  F14A         	movff	?_ETH_Read32+1,DHCP_Handler@localData+37
  9045  012ED4  C015  F14B         	movff	?_ETH_Read32+2,DHCP_Handler@localData+38
  9046  012ED8  C016  F14C         	movff	?_ETH_Read32+3,DHCP_Handler@localData+39
  9047                           
  9048                           ;dhcp_client.c: 374: localData.t2 = localData.t1 >> 1;
  9049  012EDC  C149  F0B2         	movff	DHCP_Handler@localData+36,??_DHCP_Handler
  9050  012EE0  C14A  F0B3         	movff	DHCP_Handler@localData+37,??_DHCP_Handler+1
  9051  012EE4  C14B  F0B4         	movff	DHCP_Handler@localData+38,??_DHCP_Handler+2
  9052  012EE8  C14C  F0B5         	movff	DHCP_Handler@localData+39,??_DHCP_Handler+3
  9053  012EEC  0100               	movlb	0	; () banked
  9054  012EEE  90D8               	bcf	status,0,c
  9055  012EF0  33B5               	rrcf	(??_DHCP_Handler+3)& (0+255),f,b
  9056  012EF2  33B4               	rrcf	(??_DHCP_Handler+2)& (0+255),f,b
  9057  012EF4  33B3               	rrcf	(??_DHCP_Handler+1)& (0+255),f,b
  9058  012EF6  33B2               	rrcf	??_DHCP_Handler& (0+255),f,b
  9059  012EF8  C0B2  F14D         	movff	??_DHCP_Handler,DHCP_Handler@localData+40
  9060  012EFC  C0B3  F14E         	movff	??_DHCP_Handler+1,DHCP_Handler@localData+41
  9061  012F00  C0B4  F14F         	movff	??_DHCP_Handler+2,DHCP_Handler@localData+42
  9062  012F04  C0B5  F150         	movff	??_DHCP_Handler+3,DHCP_Handler@localData+43
  9063  012F08  D00A               	goto	l10554
  9064  012F0A                     
  9065                           ; BSR set to: 1
  9066                           ;dhcp_client.c: 379: localData.leasee_ip = ETH_Read32();
  9067                           
  9068                           ; BSR set to: 1
  9069  012F0A  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  9070  012F0E  C013  F151         	movff	?_ETH_Read32,DHCP_Handler@localData+44
  9071  012F12  C014  F152         	movff	?_ETH_Read32+1,DHCP_Handler@localData+45
  9072  012F16  C015  F153         	movff	?_ETH_Read32+2,DHCP_Handler@localData+46
  9073  012F1A  C016  F154         	movff	?_ETH_Read32+3,DHCP_Handler@localData+47
  9074  012F1E                     l10554:
  9075                           
  9076                           ;dhcp_client.c: 380: optionLength -= 4;
  9077  012F1E  0E04               	movlw	4
  9078  012F20  0101               	movlb	1	; () banked
  9079  012F22  5F24               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  9080                           
  9081                           ;dhcp_client.c: 381: break;
  9082  012F24  D024               	goto	l1370
  9083  012F26                     
  9084                           ; BSR set to: 1
  9085                           ;dhcp_client.c: 383: messageType=ETH_Read8();
  9086                           
  9087                           ; BSR set to: 1
  9088  012F26  EC4C  F0B4         	call	_ETH_Read8	;wreg free
  9089  012F2A  0101               	movlb	1	; () banked
  9090  012F2C  6F18               	movwf	DHCP_Handler@messageType& (0+255),b
  9091                           
  9092                           ; BSR set to: 1
  9093                           ;dhcp_client.c: 384: optionLength -=1;
  9094  012F2E  0724               	decf	DHCP_Handler@optionLength& (0+255),f,b
  9095                           
  9096                           ;dhcp_client.c: 385: break;
  9097  012F30  D01E               	goto	l1370
  9098  012F32                     
  9099                           ; BSR set to: 1
  9100                           ;dhcp_client.c: 387: ETH_Dump(optionLength);
  9101                           
  9102                           ; BSR set to: 1
  9103  012F32  C124  F013         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  9104  012F36  6A14               	clrf	ETH_Dump@length+1,c
  9105  012F38  EC71  F0B3         	call	_ETH_Dump	;wreg free
  9106                           
  9107                           ;dhcp_client.c: 389: }
  9108                           
  9109                           ;dhcp_client.c: 388: break;
  9110  012F3C  D018               	goto	l1370
  9111  012F3E                     l1368:
  9112  012F3E  0101               	movlb	1	; () banked
  9113  012F40  5119               	movf	DHCP_Handler@option& (0+255),w,b
  9114                           
  9115                           ; Switch size 1, requested type "space"
  9116                           ; Number of cases is 7, Range of values is 1 to 54
  9117                           ; switch strategies available:
  9118                           ; Name         Instructions Cycles
  9119                           ; simple_byte           22    12 (average)
  9120                           ;	Chosen strategy is simple_byte
  9121  012F42  0A01               	xorlw	1	; case 1
  9122  012F44  B4D8               	btfsc	status,2,c
  9123  012F46  D74E               	goto	l1369
  9124  012F48  0A02               	xorlw	2	; case 3
  9125  012F4A  B4D8               	btfsc	status,2,c
  9126  012F4C  D756               	goto	l1371
  9127  012F4E  0A05               	xorlw	5	; case 6
  9128  012F50  B4D8               	btfsc	status,2,c
  9129  012F52  D75E               	goto	l1372
  9130  012F54  0A2C               	xorlw	44	; case 42
  9131  012F56  B4D8               	btfsc	status,2,c
  9132  012F58  D788               	goto	l1377
  9133  012F5A  0A19               	xorlw	25	; case 51
  9134  012F5C  B4D8               	btfsc	status,2,c
  9135  012F5E  D7B1               	goto	l1382
  9136  012F60  0A06               	xorlw	6	; case 53
  9137  012F62  B4D8               	btfsc	status,2,c
  9138  012F64  D7E0               	goto	l1385
  9139  012F66  0A03               	xorlw	3	; case 54
  9140  012F68  B4D8               	btfsc	status,2,c
  9141  012F6A  D7CF               	goto	l1384
  9142  012F6C  D7E2               	goto	l1386
  9143  012F6E                     l1370:
  9144                           
  9145                           ; BSR set to: 1
  9146                           
  9147                           ; BSR set to: 1
  9148  012F6E  0100               	movlb	0	; () banked
  9149  012F70  BFB1               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  9150  012F72  D09B               	goto	l1396
  9151  012F74  51B1               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  9152  012F76  E103               	bnz	u10151
  9153  012F78  05B0               	decf	DHCP_Handler@length& (0+255),w,b
  9154  012F7A  A0D8               	btfss	status,0,c
  9155  012F7C  D096               	goto	l1396
  9156  012F7E                     u10151:
  9157  012F7E  D71D               	goto	l1367
  9158  012F80                     
  9159                           ;dhcp_client.c: 434: if(acceptOffers)
  9160                           
  9161                           ; BSR set to: 0
  9162  012F80  0101               	movlb	1	; () banked
  9163  012F82  5121               	movf	DHCP_Handler@acceptOffers& (0+255),w,b
  9164  012F84  B4D8               	btfsc	status,2,c
  9165  012F86  D00E               	goto	l1398
  9166                           
  9167                           ; BSR set to: 1
  9168                           ;dhcp_client.c: 435: {
  9169                           ;dhcp_client.c: 436: dhcpData = localData;
  9170  012F88  EE21  F025         	lfsr	2,DHCP_Handler@localData
  9171  012F8C  EE12  F0C6         	lfsr	1,_dhcpData
  9172  012F90  0E2F               	movlw	47
  9173  012F92                     u10171:
  9174  012F92  CFDB FFE3          	movff	plusw2,plusw1
  9175  012F96  06E8               	decf	wreg,f,c
  9176  012F98  E2FC               	bc	u10171
  9177                           
  9178                           ; BSR set to: 1
  9179                           ;dhcp_client.c: 437: sendDHCPREQUEST();
  9180  012F9A  ECA1  F0B5         	call	_sendDHCPREQUEST	;wreg free
  9181                           
  9182                           ;dhcp_client.c: 438: dhcpState.rxClientState = REQUESTING;
  9183  012F9E  0E01               	movlw	1
  9184  012FA0  0102               	movlb	2	; () banked
  9185  012FA2  6F48               	movwf	_dhcpState& (0+255),b
  9186  012FA4                     l1398:
  9187                           
  9188                           ;dhcp_client.c: 439: }
  9189                           ;dhcp_client.c: 440: if(declineOffers)
  9190                           
  9191                           ; BSR set to: 2
  9192  012FA4  0101               	movlb	1	; () banked
  9193  012FA6  511E               	movf	DHCP_Handler@declineOffers& (0+255),w,b
  9194  012FA8  B4D8               	btfsc	status,2,c
  9195  012FAA  0012               	return	
  9196                           
  9197                           ; BSR set to: 1
  9198                           ;dhcp_client.c: 441: {
  9199                           ;dhcp_client.c: 442: sendDHCPDECLINE();
  9200  012FAC  EC9D  F0B5         	call	_sendDHCPDECLINE	;wreg free
  9201                           
  9202                           ;dhcp_client.c: 443: }
  9203                           ;dhcp_client.c: 444: break;
  9204  012FB0  0012               	return	
  9205  012FB2                     
  9206                           ;dhcp_client.c: 446: if(acceptACK)
  9207  012FB2  0101               	movlb	1	; () banked
  9208  012FB4  5123               	movf	DHCP_Handler@acceptACK& (0+255),w,b
  9209  012FB6  B4D8               	btfsc	status,2,c
  9210  012FB8  0012               	return	
  9211                           
  9212                           ; BSR set to: 1
  9213                           ;dhcp_client.c: 447: {
  9214                           ;dhcp_client.c: 448: dhcpData.t1 = localData.t1;
  9215  012FBA  C149  F2EA         	movff	DHCP_Handler@localData+36,_dhcpData+36
  9216  012FBE  C14A  F2EB         	movff	DHCP_Handler@localData+37,_dhcpData+37
  9217  012FC2  C14B  F2EC         	movff	DHCP_Handler@localData+38,_dhcpData+38
  9218  012FC6  C14C  F2ED         	movff	DHCP_Handler@localData+39,_dhcpData+39
  9219                           
  9220                           ;dhcp_client.c: 449: dhcpData.t2 = localData.t2;
  9221  012FCA  C14D  F2EE         	movff	DHCP_Handler@localData+40,_dhcpData+40
  9222  012FCE  C14E  F2EF         	movff	DHCP_Handler@localData+41,_dhcpData+41
  9223  012FD2  C14F  F2F0         	movff	DHCP_Handler@localData+42,_dhcpData+42
  9224  012FD6  C150  F2F1         	movff	DHCP_Handler@localData+43,_dhcpData+43
  9225                           
  9226                           ; BSR set to: 1
  9227                           
  9228                           ;dhcp_client.c: 450: do{ ip_database_info.ipv4_myAddress = dhcpData.dhcpIPAddress; } whi
      +                          le(0);
  9229  012FDA  C2C6  F200         	movff	_dhcpData,_ip_database_info
  9230  012FDE  C2C7  F201         	movff	_dhcpData+1,_ip_database_info+1
  9231  012FE2  C2C8  F202         	movff	_dhcpData+2,_ip_database_info+2
  9232  012FE6  C2C9  F203         	movff	_dhcpData+3,_ip_database_info+3
  9233                           
  9234                           ; BSR set to: 1
  9235                           
  9236                           ; BSR set to: 1
  9237                           ;dhcp_client.c: 451: do{ if(0 < 2) ip_database_info.ipv4_dns[0] = dhcpData.dnsAddress[0]
      +                          ; } while(0);
  9238  012FEA  C2D2  F204         	movff	_dhcpData+12,_ip_database_info+4
  9239  012FEE  C2D3  F205         	movff	_dhcpData+13,_ip_database_info+5
  9240  012FF2  C2D4  F206         	movff	_dhcpData+14,_ip_database_info+6
  9241  012FF6  C2D5  F207         	movff	_dhcpData+15,_ip_database_info+7
  9242                           
  9243                           ; BSR set to: 1
  9244                           
  9245                           ; BSR set to: 1
  9246                           ;dhcp_client.c: 452: do{ if(1 < 2) ip_database_info.ipv4_dns[1] = dhcpData.dnsAddress[1]
      +                          ; } while(0);
  9247                           
  9248                           ; BSR set to: 1
  9249  012FFA  C2D6  F208         	movff	_dhcpData+16,_ip_database_info+8
  9250  012FFE  C2D7  F209         	movff	_dhcpData+17,_ip_database_info+9
  9251  013002  C2D8  F20A         	movff	_dhcpData+18,_ip_database_info+10
  9252  013006  C2D9  F20B         	movff	_dhcpData+19,_ip_database_info+11
  9253                           
  9254                           ; BSR set to: 1
  9255                           
  9256                           ; BSR set to: 1
  9257                           ;dhcp_client.c: 453: do{ ip_database_info.ipv4_router = dhcpData.routerAddress; } while(
      +                          0);
  9258                           
  9259                           ; BSR set to: 1
  9260  01300A  C2CE  F210         	movff	_dhcpData+8,_ip_database_info+16
  9261  01300E  C2CF  F211         	movff	_dhcpData+9,_ip_database_info+17
  9262  013012  C2D0  F212         	movff	_dhcpData+10,_ip_database_info+18
  9263  013016  C2D1  F213         	movff	_dhcpData+11,_ip_database_info+19
  9264                           
  9265                           ; BSR set to: 1
  9266                           
  9267                           ; BSR set to: 1
  9268                           ;dhcp_client.c: 454: do{ ip_database_info.ipv4_gateway = dhcpData.gatewayAddress; } whil
      +                          e(0);
  9269  01301A  C2E2  F214         	movff	_dhcpData+28,_ip_database_info+20
  9270  01301E  C2E3  F215         	movff	_dhcpData+29,_ip_database_info+21
  9271  013022  C2E4  F216         	movff	_dhcpData+30,_ip_database_info+22
  9272  013026  C2E5  F217         	movff	_dhcpData+31,_ip_database_info+23
  9273                           
  9274                           ; BSR set to: 1
  9275                           
  9276                           ; BSR set to: 1
  9277                           ;dhcp_client.c: 455: do{ ip_database_info.ipv4_subnetMask = dhcpData.subnetMask; } while
      +                          (0);
  9278  01302A  C2CA  F20C         	movff	_dhcpData+4,_ip_database_info+12
  9279  01302E  C2CB  F20D         	movff	_dhcpData+5,_ip_database_info+13
  9280  013032  C2CC  F20E         	movff	_dhcpData+6,_ip_database_info+14
  9281  013036  C2CD  F20F         	movff	_dhcpData+7,_ip_database_info+15
  9282                           
  9283                           ; BSR set to: 1
  9284                           ;dhcp_client.c: 456: if(dhcpData.ntpAddress[0])
  9285                           
  9286                           ; BSR set to: 1
  9287  01303A  0102               	movlb	2	; () banked
  9288  01303C  51DA               	movf	(_dhcpData+20)& (0+255),w,b
  9289  01303E  11DB               	iorwf	(_dhcpData+21)& (0+255),w,b
  9290  013040  11DC               	iorwf	(_dhcpData+22)& (0+255),w,b
  9291  013042  11DD               	iorwf	(_dhcpData+23)& (0+255),w,b
  9292  013044  B4D8               	btfsc	status,2,c
  9293  013046  D016               	goto	l1423
  9294                           
  9295                           ; BSR set to: 2
  9296                           
  9297                           ;dhcp_client.c: 457: {
  9298                           ;dhcp_client.c: 458: do{ if(0 < 2) ip_database_info.ipv4_ntpAddress[0] = dhcpData.ntpAdd
      +                          ress[0]; } while(0);
  9299  013048  C2DA  F218         	movff	_dhcpData+20,_ip_database_info+24
  9300  01304C  C2DB  F219         	movff	_dhcpData+21,_ip_database_info+25
  9301  013050  C2DC  F21A         	movff	_dhcpData+22,_ip_database_info+26
  9302  013054  C2DD  F21B         	movff	_dhcpData+23,_ip_database_info+27
  9303                           
  9304                           ; BSR set to: 2
  9305                           ;dhcp_client.c: 459: if(dhcpData.ntpAddress[1])
  9306                           
  9307                           ; BSR set to: 2
  9308                           
  9309                           ; BSR set to: 2
  9310  013058  51DE               	movf	(_dhcpData+24)& (0+255),w,b
  9311  01305A  11DF               	iorwf	(_dhcpData+25)& (0+255),w,b
  9312  01305C  11E0               	iorwf	(_dhcpData+26)& (0+255),w,b
  9313  01305E  11E1               	iorwf	(_dhcpData+27)& (0+255),w,b
  9314  013060  B4D8               	btfsc	status,2,c
  9315  013062  D008               	goto	l1423
  9316                           
  9317                           ; BSR set to: 2
  9318                           
  9319                           ;dhcp_client.c: 460: do{ if(1 < 2) ip_database_info.ipv4_ntpAddress[1] = dhcpData.ntpAdd
      +                          ress[1]; } while(0);
  9320  013064  C2DE  F21C         	movff	_dhcpData+24,_ip_database_info+28
  9321  013068  C2DF  F21D         	movff	_dhcpData+25,_ip_database_info+29
  9322  01306C  C2E0  F21E         	movff	_dhcpData+26,_ip_database_info+30
  9323  013070  C2E1  F21F         	movff	_dhcpData+27,_ip_database_info+31
  9324  013074                     l1423:
  9325                           
  9326                           ; BSR set to: 2
  9327                           ;dhcp_client.c: 461: }
  9328                           ;dhcp_client.c: 462: dhcpState.rxClientState = BOUND;
  9329                           
  9330                           ; BSR set to: 2
  9331                           
  9332                           ; BSR set to: 2
  9333                           
  9334                           ; BSR set to: 2
  9335                           
  9336                           ; BSR set to: 2
  9337  013074  0E03               	movlw	3
  9338  013076  6F48               	movwf	_dhcpState& (0+255),b
  9339                           
  9340                           ; BSR set to: 2
  9341                           ;dhcp_client.c: 463: }
  9342                           ;dhcp_client.c: 464: break;
  9343  013078  0012               	return	
  9344  01307A                     
  9345                           ;dhcp_client.c: 466: if(acceptNACK)
  9346                           
  9347                           ; BSR set to: 2
  9348  01307A  0101               	movlb	1	; () banked
  9349  01307C  5122               	movf	DHCP_Handler@acceptNACK& (0+255),w,b
  9350  01307E  B4D8               	btfsc	status,2,c
  9351  013080  0012               	return	
  9352                           
  9353                           ; BSR set to: 1
  9354                           ;dhcp_client.c: 467: {
  9355                           ;dhcp_client.c: 468: dhcpData.t1 = 0;
  9356  013082  0E00               	movlw	0
  9357  013084  0102               	movlb	2	; () banked
  9358  013086  6FEA               	movwf	(_dhcpData+36)& (0+255),b
  9359  013088  0E00               	movlw	0
  9360  01308A  6FEB               	movwf	(_dhcpData+37)& (0+255),b
  9361  01308C  0E00               	movlw	0
  9362  01308E  6FEC               	movwf	(_dhcpData+38)& (0+255),b
  9363  013090  0E00               	movlw	0
  9364  013092  6FED               	movwf	(_dhcpData+39)& (0+255),b
  9365                           
  9366                           ;dhcp_client.c: 469: dhcpData.t2 = 0;
  9367  013094  0E00               	movlw	0
  9368  013096  6FEE               	movwf	(_dhcpData+40)& (0+255),b
  9369  013098  0E00               	movlw	0
  9370  01309A  6FEF               	movwf	(_dhcpData+41)& (0+255),b
  9371  01309C  0E00               	movlw	0
  9372  01309E  6FF0               	movwf	(_dhcpData+42)& (0+255),b
  9373  0130A0  0E00               	movlw	0
  9374  0130A2  6FF1               	movwf	(_dhcpData+43)& (0+255),b
  9375                           
  9376                           ;dhcp_client.c: 470: dhcpState.rxClientState = SELECTING;
  9377  0130A4  0E00               	movlw	0
  9378  0130A6  6F48               	movwf	_dhcpState& (0+255),b
  9379                           
  9380                           ; BSR set to: 2
  9381                           ;dhcp_client.c: 475: }
  9382                           
  9383                           ; BSR set to: 2
  9384                           ;dhcp_client.c: 474: break;
  9385                           
  9386                           ;dhcp_client.c: 473: default:
  9387                           
  9388                           ; BSR set to: 2
  9389                           ;dhcp_client.c: 471: }
  9390                           ;dhcp_client.c: 472: break;
  9391  0130A8  0012               	return	
  9392  0130AA                     l1396:
  9393                           
  9394                           ; BSR set to: 2
  9395  0130AA  0101               	movlb	1	; () banked
  9396  0130AC  5118               	movf	DHCP_Handler@messageType& (0+255),w,b
  9397                           
  9398                           ; Switch size 1, requested type "space"
  9399                           ; Number of cases is 3, Range of values is 2 to 6
  9400                           ; switch strategies available:
  9401                           ; Name         Instructions Cycles
  9402                           ; simple_byte           10     6 (average)
  9403                           ;	Chosen strategy is simple_byte
  9404  0130AE  0A02               	xorlw	2	; case 2
  9405  0130B0  B4D8               	btfsc	status,2,c
  9406  0130B2  D766               	goto	l1397
  9407  0130B4  0A07               	xorlw	7	; case 5
  9408  0130B6  B4D8               	btfsc	status,2,c
  9409  0130B8  D77C               	goto	l1401
  9410  0130BA  0A03               	xorlw	3	; case 6
  9411  0130BC  A4D8               	btfss	status,2,c
  9412                           
  9413                           ; BSR set to: 1
  9414                           
  9415                           ; BSR set to: 1
  9416                           ;dhcp_client.c: 476: }
  9417  0130BE  0012               	return	
  9418  0130C0  D7DC               	goto	l1425
  9419  0130C2                     __end_of_DHCP_Handler:
  9420                           	opt stack 0
  9421                           tosu	equ	0xFFF
  9422                           tosh	equ	0xFFE
  9423                           tosl	equ	0xFFD
  9424                           pclath	equ	0xFFA
  9425                           tblptru	equ	0xFF8
  9426                           tblptrh	equ	0xFF7
  9427                           tblptrl	equ	0xFF6
  9428                           tablat	equ	0xFF5
  9429                           prodh	equ	0xFF4
  9430                           prodl	equ	0xFF3
  9431                           intcon	equ	0xFF2
  9432                           indf0	equ	0xFEF
  9433                           postinc0	equ	0xFEE
  9434                           fsr0h	equ	0xFEA
  9435                           fsr0l	equ	0xFE9
  9436                           wreg	equ	0xFE8
  9437                           indf1	equ	0xFE7
  9438                           postinc1	equ	0xFE6
  9439                           postdec1	equ	0xFE5
  9440                           plusw1	equ	0xFE3
  9441                           fsr1h	equ	0xFE2
  9442                           fsr1l	equ	0xFE1
  9443                           indf2	equ	0xFDF
  9444                           postinc2	equ	0xFDE
  9445                           postdec2	equ	0xFDD
  9446                           plusw2	equ	0xFDB
  9447                           fsr2h	equ	0xFDA
  9448                           fsr2l	equ	0xFD9
  9449                           status	equ	0xFD8
  9450                           
  9451 ;; *************** function _DNS_Handler *****************
  9452 ;; Defined at:
  9453 ;;		line 142 in file "mcc_generated_files/TCPIPLibrary/dns_client.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  length          2   80[BANK0 ] int 
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;  x               1  113[BANK0 ] unsigned char 
  9458 ;;  dnsPtr          2  110[BANK0 ] PTR struct .
  9459 ;;		 -> dnsCache(128), 
  9460 ;;  dnsR          255    0[BANK1 ] unsigned char [255]
  9461 ;;  ttl             4   97[BANK0 ] unsigned long 
  9462 ;;  ipAddress       4   93[BANK0 ] unsigned long 
  9463 ;;  entryPointer    2  115[BANK0 ] PTR struct .
  9464 ;;		 -> dnsCache(128), 
  9465 ;;  dataLength      2  108[BANK0 ] unsigned int 
  9466 ;;  answer          2  106[BANK0 ] unsigned int 
  9467 ;;  type            2  103[BANK0 ] unsigned int 
  9468 ;;  v               2  101[BANK0 ] unsigned int 
  9469 ;;  authorityRR     2   91[BANK0 ] unsigned int 
  9470 ;;  lock            1  114[BANK0 ] unsigned char 
  9471 ;;  i               1  112[BANK0 ] unsigned char 
  9472 ;;  nameLen         1  105[BANK0 ] unsigned char 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Locals:         0      26     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9485 ;;      Totals:         0      37     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9486 ;;Total ram usage:      292 bytes
  9487 ;; Hardware stack levels used:    1
  9488 ;; Hardware stack levels required when called:    6
  9489 ;; This function calls:
  9490 ;;		_ETH_Read16
  9491 ;;		_ETH_Read32
  9492 ;;		_ETH_Read8
  9493 ;;		_strcmp
  9494 ;;		_time
  9495 ;; This function is called by:
  9496 ;;		_UDP_Receive
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text40
  9501  0137D0                     __ptext40:
  9502                           	opt stack 0
  9503  0137D0                     _DNS_Handler:
  9504                           	opt stack 20
  9505                           
  9506                           ;dns_client.c: 144: uint16_t v;
  9507                           ;dns_client.c: 145: unsigned char dnsR[255];
  9508                           ;dns_client.c: 146: uint16_t answer, authorityRR;
  9509                           ;dns_client.c: 147: uint32_t ipAddress;
  9510                           ;dns_client.c: 148: uint32_t ttl;
  9511                           ;dns_client.c: 149: uint16_t type, dataLength;
  9512                           ;dns_client.c: 151: dns_map_t *entryPointer;
  9513                           ;dns_client.c: 152: uint8_t i, nameLen,lock =0;
  9514                           
  9515                           ;incstack = 0
  9516  0137D0  0E00               	movlw	0
  9517  0137D2  0100               	movlb	0	; () banked
  9518  0137D4  6FD2               	movwf	DNS_Handler@lock& (0+255),b
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;dns_client.c: 154: entryPointer = dnsCache;
  9522  0137D6  0E00               	movlw	low _dnsCache
  9523  0137D8  6FD3               	movwf	DNS_Handler@entryPointer& (0+255),b
  9524  0137DA  0E05               	movlw	high _dnsCache
  9525  0137DC  6FD4               	movwf	(DNS_Handler@entryPointer+1)& (0+255),b
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;dns_client.c: 156: if(length > 12)
  9529  0137DE  BFB1               	btfsc	(DNS_Handler@length+1)& (0+255),7,b
  9530  0137E0  0012               	return	
  9531  0137E2  51B1               	movf	(DNS_Handler@length+1)& (0+255),w,b
  9532  0137E4  E104               	bnz	u10230
  9533  0137E6  0E0D               	movlw	13
  9534  0137E8  5DB0               	subwf	DNS_Handler@length& (0+255),w,b
  9535  0137EA  A0D8               	btfss	status,0,c
  9536  0137EC  0012               	return	
  9537  0137EE                     u10230:
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;dns_client.c: 157: {
  9541                           ;dns_client.c: 158: v = ETH_Read16();
  9542  0137EE  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  9543  0137F2  C013  F0C5         	movff	?_ETH_Read16,DNS_Handler@v
  9544  0137F6  C014  F0C6         	movff	?_ETH_Read16+1,DNS_Handler@v+1
  9545                           
  9546                           ;dns_client.c: 159: if(v == dnsXidValue)
  9547  0137FA  0E21               	movlw	low _dnsXidValue
  9548  0137FC  6EF6               	movwf	tblptrl,c
  9549  0137FE                     	if	1	;There is more than 1 active tblptr byte
  9550  0137FE  0EFF               	movlw	high _dnsXidValue
  9551  013800  6EF7               	movwf	tblptrh,c
  9552  013802                     	endif
  9553  013802                     	if	1	;There are 3 active tblptr bytes
  9554  013802  0E00               	movlw	low (_dnsXidValue shr (0+16))
  9555  013804  6EF8               	movwf	tblptru,c
  9556  013806                     	endif
  9557  013806  0009               	tblrd		*+
  9558  013808  50F5               	movf	tablat,w,c
  9559  01380A  0100               	movlb	0	; () banked
  9560  01380C  19C5               	xorwf	DNS_Handler@v& (0+255),w,b
  9561  01380E  E104               	bnz	u10241
  9562  013810  0009               	tblrd		*+
  9563  013812  50F5               	movf	tablat,w,c
  9564  013814  19C6               	xorwf	(DNS_Handler@v+1)& (0+255),w,b
  9565  013816  A4D8               	btfss	status,2,c
  9566  013818                     u10241:
  9567  013818  D0A9               	goto	u10300
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;dns_client.c: 160: {
  9571                           ;dns_client.c: 161: ETH_Read32();
  9572  01381A  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  9573                           
  9574                           ;dns_client.c: 162: answer = ETH_Read16();
  9575  01381E  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  9576  013822  C013  F0CA         	movff	?_ETH_Read16,DNS_Handler@answer
  9577  013826  C014  F0CB         	movff	?_ETH_Read16+1,DNS_Handler@answer+1
  9578                           
  9579                           ;dns_client.c: 163: authorityRR = ETH_Read16();
  9580  01382A  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  9581  01382E  C013  F0BB         	movff	?_ETH_Read16,DNS_Handler@authorityRR
  9582  013832  C014  F0BC         	movff	?_ETH_Read16+1,DNS_Handler@authorityRR+1
  9583                           
  9584                           ;dns_client.c: 164: ETH_Read16();
  9585  013836  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  9586                           
  9587                           ;dns_client.c: 165: length -= 12;
  9588  01383A  0100               	movlb	0	; () banked
  9589  01383C  0EF4               	movlw	244
  9590  01383E  27B0               	addwf	DNS_Handler@length& (0+255),f,b
  9591  013840  0EFF               	movlw	255
  9592  013842  23B1               	addwfc	(DNS_Handler@length+1)& (0+255),f,b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;dns_client.c: 167: if(length > 0)
  9596  013844  BFB1               	btfsc	(DNS_Handler@length+1)& (0+255),7,b
  9597  013846  D092               	goto	u10300
  9598  013848  51B1               	movf	(DNS_Handler@length+1)& (0+255),w,b
  9599  01384A  E120               	bnz	l10626
  9600  01384C  05B0               	decf	DNS_Handler@length& (0+255),w,b
  9601  01384E  B0D8               	btfsc	status,0,c
  9602  013850  D01D               	goto	l1492
  9603  013852  D08C               	goto	u10300
  9604  013854                     
  9605                           ; BSR set to: 0
  9606                           ;dns_client.c: 172: {
  9607                           ;dns_client.c: 173: dnsR[lock] = ETH_Read8();
  9608                           
  9609                           ; BSR set to: 0
  9610  013854  51D2               	movf	DNS_Handler@lock& (0+255),w,b
  9611  013856  0D01               	mullw	1
  9612  013858  0E00               	movlw	low DNS_Handler@dnsR
  9613  01385A  24F3               	addwf	prodl,w,c
  9614  01385C  6ED9               	movwf	fsr2l,c
  9615  01385E  0E01               	movlw	high DNS_Handler@dnsR
  9616  013860  20F4               	addwfc	prodh,w,c
  9617  013862  6EDA               	movwf	fsr2h,c
  9618  013864  EC4C  F0B4         	call	_ETH_Read8	;wreg free
  9619  013868  6EDF               	movwf	indf2,c
  9620                           
  9621                           ;dns_client.c: 174: lock++;
  9622  01386A  0100               	movlb	0	; () banked
  9623  01386C  2BD2               	incf	DNS_Handler@lock& (0+255),f,b
  9624  01386E                     
  9625                           ; BSR set to: 0
  9626                           
  9627                           ; BSR set to: 0
  9628  01386E  07C9               	decf	DNS_Handler@nameLen& (0+255),f,b
  9629  013870  29C9               	incf	DNS_Handler@nameLen& (0+255),w,b
  9630  013872  A4D8               	btfss	status,2,c
  9631  013874  D7EF               	goto	l1495
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;dns_client.c: 175: }
  9635                           ;dns_client.c: 176: dnsR[lock] = '.';
  9636                           
  9637                           ; BSR set to: 0
  9638  013876  51D2               	movf	DNS_Handler@lock& (0+255),w,b
  9639  013878  0D01               	mullw	1
  9640  01387A  0E00               	movlw	low DNS_Handler@dnsR
  9641  01387C  24F3               	addwf	prodl,w,c
  9642  01387E  6ED9               	movwf	fsr2l,c
  9643  013880  0E01               	movlw	high DNS_Handler@dnsR
  9644  013882  20F4               	addwfc	prodh,w,c
  9645  013884  6EDA               	movwf	fsr2h,c
  9646  013886  0E2E               	movlw	46
  9647  013888  6EDF               	movwf	indf2,c
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;dns_client.c: 177: lock++;
  9651  01388A  2BD2               	incf	DNS_Handler@lock& (0+255),f,b
  9652  01388C                     l1492:
  9653  01388C                     l10626:
  9654                           
  9655                           ; BSR set to: 0
  9656  01388C  EC4C  F0B4         	call	_ETH_Read8	;wreg free
  9657  013890  0100               	movlb	0	; () banked
  9658  013892  6FC9               	movwf	DNS_Handler@nameLen& (0+255),b
  9659  013894  51C9               	movf	DNS_Handler@nameLen& (0+255),w,b
  9660  013896  A4D8               	btfss	status,2,c
  9661  013898  D7EA               	goto	l1494
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;dns_client.c: 178: }
  9665                           ;dns_client.c: 179: dnsR[lock-1] ='\0';
  9666                           
  9667                           ; BSR set to: 0
  9668  01389A  0EFF               	movlw	255
  9669  01389C  6FB2               	movwf	??_DNS_Handler& (0+255),b
  9670  01389E  0EFF               	movlw	255
  9671  0138A0  6FB3               	movwf	(??_DNS_Handler+1)& (0+255),b
  9672  0138A2  51D2               	movf	DNS_Handler@lock& (0+255),w,b
  9673  0138A4  6FB4               	movwf	(??_DNS_Handler+2)& (0+255),b
  9674  0138A6  6BB5               	clrf	(??_DNS_Handler+3)& (0+255),b
  9675  0138A8  51B2               	movf	??_DNS_Handler& (0+255),w,b
  9676  0138AA  27B4               	addwf	(??_DNS_Handler+2)& (0+255),f,b
  9677  0138AC  51B3               	movf	(??_DNS_Handler+1)& (0+255),w,b
  9678  0138AE  23B5               	addwfc	(??_DNS_Handler+3)& (0+255),f,b
  9679  0138B0  0E00               	movlw	low DNS_Handler@dnsR
  9680  0138B2  25B4               	addwf	(??_DNS_Handler+2)& (0+255),w,b
  9681  0138B4  6ED9               	movwf	fsr2l,c
  9682  0138B6  0E01               	movlw	high DNS_Handler@dnsR
  9683  0138B8  21B5               	addwfc	(??_DNS_Handler+3)& (0+255),w,b
  9684  0138BA  6EDA               	movwf	fsr2h,c
  9685  0138BC  0E00               	movlw	0
  9686  0138BE  6EDF               	movwf	indf2,c
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;dns_client.c: 181: ETH_Read32();
  9690  0138C0  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  9691                           
  9692                           ;dns_client.c: 182: length -= lock + 5;
  9693  0138C4  0100               	movlb	0	; () banked
  9694  0138C6  51D2               	movf	DNS_Handler@lock& (0+255),w,b
  9695  0138C8  6FB2               	movwf	??_DNS_Handler& (0+255),b
  9696  0138CA  6BB3               	clrf	(??_DNS_Handler+1)& (0+255),b
  9697  0138CC  0E05               	movlw	5
  9698  0138CE  27B2               	addwf	??_DNS_Handler& (0+255),f,b
  9699  0138D0  0E00               	movlw	0
  9700  0138D2  23B3               	addwfc	(??_DNS_Handler+1)& (0+255),f,b
  9701  0138D4  51B2               	movf	??_DNS_Handler& (0+255),w,b
  9702  0138D6  5FB0               	subwf	DNS_Handler@length& (0+255),f,b
  9703  0138D8  51B3               	movf	(??_DNS_Handler+1)& (0+255),w,b
  9704  0138DA  5BB1               	subwfb	(DNS_Handler@length+1)& (0+255),f,b
  9705                           
  9706                           ;dns_client.c: 184: while(answer)
  9707  0138DC  D043               	goto	l1498
  9708  0138DE                     
  9709                           ; BSR set to: 0
  9710                           ;dns_client.c: 185: {
  9711                           ;dns_client.c: 186: ETH_Read16();
  9712                           
  9713                           ; BSR set to: 0
  9714  0138DE  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  9715                           
  9716                           ;dns_client.c: 187: type = ETH_Read16();
  9717  0138E2  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  9718  0138E6  C013  F0C7         	movff	?_ETH_Read16,DNS_Handler@type
  9719  0138EA  C014  F0C8         	movff	?_ETH_Read16+1,DNS_Handler@type+1
  9720                           
  9721                           ;dns_client.c: 188: ETH_Read16();
  9722  0138EE  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  9723                           
  9724                           ;dns_client.c: 189: ttl = ETH_Read32();
  9725  0138F2  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  9726  0138F6  C013  F0C1         	movff	?_ETH_Read32,DNS_Handler@ttl
  9727  0138FA  C014  F0C2         	movff	?_ETH_Read32+1,DNS_Handler@ttl+1
  9728  0138FE  C015  F0C3         	movff	?_ETH_Read32+2,DNS_Handler@ttl+2
  9729  013902  C016  F0C4         	movff	?_ETH_Read32+3,DNS_Handler@ttl+3
  9730                           
  9731                           ;dns_client.c: 190: dataLength = ETH_Read16();
  9732  013906  EC7D  F0B2         	call	_ETH_Read16	;wreg free
  9733  01390A  C013  F0CC         	movff	?_ETH_Read16,DNS_Handler@dataLength
  9734  01390E  C014  F0CD         	movff	?_ETH_Read16+1,DNS_Handler@dataLength+1
  9735                           
  9736                           ;dns_client.c: 191: if(type == 0x0001)
  9737  013912  0100               	movlb	0	; () banked
  9738  013914  05C7               	decf	DNS_Handler@type& (0+255),w,b
  9739  013916  11C8               	iorwf	(DNS_Handler@type+1)& (0+255),w,b
  9740  013918  A4D8               	btfss	status,2,c
  9741  01391A  D00D               	goto	l1502
  9742                           
  9743                           ; BSR set to: 0
  9744                           ;dns_client.c: 192: {
  9745                           ;dns_client.c: 193: ipAddress = ETH_Read32();
  9746  01391C  ECDB  F0B0         	call	_ETH_Read32	;wreg free
  9747  013920  C013  F0BD         	movff	?_ETH_Read32,DNS_Handler@ipAddress
  9748  013924  C014  F0BE         	movff	?_ETH_Read32+1,DNS_Handler@ipAddress+1
  9749  013928  C015  F0BF         	movff	?_ETH_Read32+2,DNS_Handler@ipAddress+2
  9750  01392C  C016  F0C0         	movff	?_ETH_Read32+3,DNS_Handler@ipAddress+3
  9751                           
  9752                           ;dns_client.c: 194: }
  9753  013930  D015               	goto	l1501
  9754  013932                     l10640:
  9755  013932  EC4C  F0B4         	call	_ETH_Read8	;wreg free
  9756  013936                     l1502:
  9757  013936  0100               	movlb	0	; () banked
  9758  013938  07CC               	decf	DNS_Handler@dataLength& (0+255),f,b
  9759  01393A  A0D8               	btfss	status,0,c
  9760  01393C  07CD               	decf	(DNS_Handler@dataLength+1)& (0+255),f,b
  9761  01393E  29CC               	incf	DNS_Handler@dataLength& (0+255),w,b
  9762  013940  E1F8               	bnz	l10640
  9763  013942  29CD               	incf	(DNS_Handler@dataLength+1)& (0+255),w,b
  9764  013944  A4D8               	btfss	status,2,c
  9765  013946  D7F5               	goto	l1503
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;dns_client.c: 198: length -=14+dataLength;
  9769                           
  9770                           ; BSR set to: 0
  9771  013948  0E0E               	movlw	14
  9772  01394A  25CC               	addwf	DNS_Handler@dataLength& (0+255),w,b
  9773  01394C  6FB2               	movwf	??_DNS_Handler& (0+255),b
  9774  01394E  0E00               	movlw	0
  9775  013950  21CD               	addwfc	(DNS_Handler@dataLength+1)& (0+255),w,b
  9776  013952  6FB3               	movwf	(??_DNS_Handler+1)& (0+255),b
  9777  013954  51B2               	movf	??_DNS_Handler& (0+255),w,b
  9778  013956  5FB0               	subwf	DNS_Handler@length& (0+255),f,b
  9779  013958  51B3               	movf	(??_DNS_Handler+1)& (0+255),w,b
  9780  01395A  5BB1               	subwfb	(DNS_Handler@length+1)& (0+255),f,b
  9781  01395C                     l1501:
  9782                           
  9783                           ;dns_client.c: 199: }
  9784                           ;dns_client.c: 205: answer--;
  9785                           
  9786                           ; BSR set to: 0
  9787  01395C  0100               	movlb	0	; () banked
  9788  01395E  07CA               	decf	DNS_Handler@answer& (0+255),f,b
  9789  013960  A0D8               	btfss	status,0,c
  9790  013962  07CB               	decf	(DNS_Handler@answer+1)& (0+255),f,b
  9791  013964                     l1498:
  9792                           
  9793                           ; BSR set to: 0
  9794                           
  9795                           ; BSR set to: 0
  9796  013964  51CA               	movf	DNS_Handler@answer& (0+255),w,b
  9797  013966  11CB               	iorwf	(DNS_Handler@answer+1)& (0+255),w,b
  9798  013968  A4D8               	btfss	status,2,c
  9799  01396A  D7B9               	goto	l1499
  9800  01396C                     u10300:
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;dns_client.c: 206: }
  9804                           ;dns_client.c: 207: }
  9805                           ;dns_client.c: 208: }
  9806                           ;dns_client.c: 210: dns_map_t *dnsPtr = dnsCache;
  9807                           
  9808                           ; BSR set to: 0
  9809                           
  9810                           ; BSR set to: 0
  9811                           
  9812                           ; BSR set to: 0
  9813  01396C  0E00               	movlw	low _dnsCache
  9814  01396E  6FCE               	movwf	DNS_Handler@dnsPtr& (0+255),b
  9815  013970  0E05               	movlw	high _dnsCache
  9816  013972  6FCF               	movwf	(DNS_Handler@dnsPtr+1)& (0+255),b
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;dns_client.c: 211: for(uint8_t x=8; x !=0; x--)
  9820  013974  0E08               	movlw	8
  9821  013976  6FD1               	movwf	DNS_Handler@x& (0+255),b
  9822  013978                     l10654:
  9823                           
  9824                           ; BSR set to: 0
  9825  013978  51D1               	movf	DNS_Handler@x& (0+255),w,b
  9826  01397A  B4D8               	btfsc	status,2,c
  9827  01397C  D024               	goto	u10330
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;dns_client.c: 212: {
  9831                           ;dns_client.c: 213: if(entryPointer->birthSecond < dnsPtr->birthSecond)
  9832                           
  9833                           ; BSR set to: 0
  9834                           
  9835                           ; BSR set to: 0
  9836  01397E  EE20 F00C          	lfsr	2,12
  9837  013982  51CE               	movf	DNS_Handler@dnsPtr& (0+255),w,b
  9838  013984  26D9               	addwf	fsr2l,f,c
  9839  013986  51CF               	movf	(DNS_Handler@dnsPtr+1)& (0+255),w,b
  9840  013988  22DA               	addwfc	fsr2h,f,c
  9841  01398A  EE10 F00C          	lfsr	1,12
  9842  01398E  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9843  013990  26E1               	addwf	fsr1l,f,c
  9844  013992  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9845  013994  22E2               	addwfc	fsr1h,f,c
  9846  013996  50DE               	movf	postinc2,w,c
  9847  013998  5CE6               	subwf	postinc1,w,c
  9848  01399A  50DE               	movf	postinc2,w,c
  9849  01399C  58E6               	subwfb	postinc1,w,c
  9850  01399E  50DE               	movf	postinc2,w,c
  9851  0139A0  58E6               	subwfb	postinc1,w,c
  9852  0139A2  50E6               	movf	postinc1,w,c
  9853  0139A4  0A80               	xorlw	128
  9854  0139A6  6FBA               	movwf	(??_DNS_Handler+8)& (0+255),b
  9855  0139A8  50DE               	movf	postinc2,w,c
  9856  0139AA  0A80               	xorlw	128
  9857  0139AC  59BA               	subwfb	(??_DNS_Handler+8)& (0+255),w,b
  9858  0139AE  B0D8               	btfsc	status,0,c
  9859  0139B0  D004               	goto	l1508
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;dns_client.c: 214: {
  9863                           ;dns_client.c: 215: entryPointer = dnsPtr;
  9864  0139B2  C0CE  F0D3         	movff	DNS_Handler@dnsPtr,DNS_Handler@entryPointer
  9865  0139B6  C0CF  F0D4         	movff	DNS_Handler@dnsPtr+1,DNS_Handler@entryPointer+1
  9866  0139BA                     l1508:
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;dns_client.c: 216: }
  9870                           ;dns_client.c: 218: dnsPtr++;
  9871  0139BA  0E10               	movlw	16
  9872  0139BC  27CE               	addwf	DNS_Handler@dnsPtr& (0+255),f,b
  9873  0139BE  0E00               	movlw	0
  9874  0139C0  23CF               	addwfc	(DNS_Handler@dnsPtr+1)& (0+255),f,b
  9875                           
  9876                           ; BSR set to: 0
  9877  0139C2  07D1               	decf	DNS_Handler@x& (0+255),f,b
  9878  0139C4  D7D9               	goto	l10654
  9879  0139C6                     u10330:
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;dns_client.c: 219: }
  9883                           ;dns_client.c: 220: for(i = 0; i < (sizeof(dnsCache) / sizeof(*(dnsCache)));i++)
  9884                           
  9885                           ; BSR set to: 0
  9886  0139C6  0E00               	movlw	0
  9887  0139C8  6FD0               	movwf	DNS_Handler@i& (0+255),b
  9888  0139CA                     l10668:
  9889                           
  9890                           ; BSR set to: 0
  9891  0139CA  0E07               	movlw	7
  9892  0139CC  65D0               	cpfsgt	DNS_Handler@i& (0+255),b
  9893  0139CE  D001               	goto	l1509
  9894  0139D0  0012               	return	
  9895  0139D2                     l1509:
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;dns_client.c: 221: {
  9899                           ;dns_client.c: 222: if(strcmp(entryPointer->dnsName, dnsR) == 0)
  9900                           
  9901                           ; BSR set to: 0
  9902  0139D2  C0D3  FFD9         	movff	DNS_Handler@entryPointer,fsr2l
  9903  0139D6  C0D4  FFDA         	movff	DNS_Handler@entryPointer+1,fsr2h
  9904  0139DA  CFDE F013          	movff	postinc2,strcmp@s1
  9905  0139DE  CFDD F014          	movff	postdec2,strcmp@s1+1
  9906  0139E2  0E00               	movlw	low DNS_Handler@dnsR
  9907  0139E4  6E15               	movwf	strcmp@s2,c
  9908  0139E6  0E01               	movlw	high DNS_Handler@dnsR
  9909  0139E8  6E16               	movwf	strcmp@s2+1,c
  9910  0139EA  ECF8  F0B1         	call	_strcmp	;wreg free
  9911  0139EE  5013               	movf	?_strcmp,w,c
  9912  0139F0  1014               	iorwf	?_strcmp+1,w,c
  9913  0139F2  A4D8               	btfss	status,2,c
  9914  0139F4  D03A               	goto	l1511
  9915                           
  9916                           ;dns_client.c: 223: {
  9917                           ;dns_client.c: 226: entryPointer->birthSecond = time(0);
  9918  0139F6  0E00               	movlw	0
  9919  0139F8  6E13               	movwf	time@t,c
  9920  0139FA  0E00               	movlw	0
  9921  0139FC  6E14               	movwf	time@t+1,c
  9922  0139FE  EC07  F0B1         	call	_time	;wreg free
  9923  013A02  0100               	movlb	0	; () banked
  9924  013A04  EE20 F00C          	lfsr	2,12
  9925  013A08  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9926  013A0A  26D9               	addwf	fsr2l,f,c
  9927  013A0C  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9928  013A0E  22DA               	addwfc	fsr2h,f,c
  9929  013A10  C013  FFDE         	movff	?_time,postinc2
  9930  013A14  C014  FFDE         	movff	?_time+1,postinc2
  9931  013A18  C015  FFDE         	movff	?_time+2,postinc2
  9932  013A1C  C016  FFDE         	movff	?_time+3,postinc2
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;dns_client.c: 227: entryPointer->ipAddress = ipAddress;
  9936  013A20  EE20 F003          	lfsr	2,3
  9937  013A24  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9938  013A26  26D9               	addwf	fsr2l,f,c
  9939  013A28  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9940  013A2A  22DA               	addwfc	fsr2h,f,c
  9941  013A2C  C0BD  FFDE         	movff	DNS_Handler@ipAddress,postinc2
  9942  013A30  C0BE  FFDE         	movff	DNS_Handler@ipAddress+1,postinc2
  9943  013A34  C0BF  FFDE         	movff	DNS_Handler@ipAddress+2,postinc2
  9944  013A38  C0C0  FFDE         	movff	DNS_Handler@ipAddress+3,postinc2
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;dns_client.c: 228: entryPointer->ttl = ttl;
  9948  013A3C  EE20 F007          	lfsr	2,7
  9949  013A40  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9950  013A42  26D9               	addwf	fsr2l,f,c
  9951  013A44  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9952  013A46  22DA               	addwfc	fsr2h,f,c
  9953  013A48  C0C1  FFDE         	movff	DNS_Handler@ttl,postinc2
  9954  013A4C  C0C2  FFDE         	movff	DNS_Handler@ttl+1,postinc2
  9955  013A50  C0C3  FFDE         	movff	DNS_Handler@ttl+2,postinc2
  9956  013A54  C0C4  FFDE         	movff	DNS_Handler@ttl+3,postinc2
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;dns_client.c: 229: entryPointer->isValid = 1;
  9960  013A58  EE20 F00B          	lfsr	2,11
  9961  013A5C  51D3               	movf	DNS_Handler@entryPointer& (0+255),w,b
  9962  013A5E  26D9               	addwf	fsr2l,f,c
  9963  013A60  51D4               	movf	(DNS_Handler@entryPointer+1)& (0+255),w,b
  9964  013A62  22DA               	addwfc	fsr2h,f,c
  9965  013A64  0E01               	movlw	1
  9966  013A66  6EDF               	movwf	indf2,c
  9967                           
  9968                           ;dns_client.c: 230: break;
  9969  013A68  0012               	return	
  9970  013A6A                     l1511:
  9971                           
  9972                           ;dns_client.c: 231: }
  9973                           ;dns_client.c: 232: entryPointer ++;
  9974                           
  9975                           ; BSR set to: 0
  9976  013A6A  0E10               	movlw	16
  9977  013A6C  0100               	movlb	0	; () banked
  9978  013A6E  27D3               	addwf	DNS_Handler@entryPointer& (0+255),f,b
  9979  013A70  0E00               	movlw	0
  9980  013A72  23D4               	addwfc	(DNS_Handler@entryPointer+1)& (0+255),f,b
  9981                           
  9982                           ; BSR set to: 0
  9983  013A74  2BD0               	incf	DNS_Handler@i& (0+255),f,b
  9984  013A76  D7A9               	goto	l10668
  9985  013A78                     __end_of_DNS_Handler:
  9986                           	opt stack 0
  9987                           tosu	equ	0xFFF
  9988                           tosh	equ	0xFFE
  9989                           tosl	equ	0xFFD
  9990                           pclath	equ	0xFFA
  9991                           tblptru	equ	0xFF8
  9992                           tblptrh	equ	0xFF7
  9993                           tblptrl	equ	0xFF6
  9994                           tablat	equ	0xFF5
  9995                           prodh	equ	0xFF4
  9996                           prodl	equ	0xFF3
  9997                           intcon	equ	0xFF2
  9998                           indf0	equ	0xFEF
  9999                           postinc0	equ	0xFEE
 10000                           fsr0h	equ	0xFEA
 10001                           fsr0l	equ	0xFE9
 10002                           wreg	equ	0xFE8
 10003                           indf1	equ	0xFE7
 10004                           postinc1	equ	0xFE6
 10005                           postdec1	equ	0xFE5
 10006                           plusw1	equ	0xFE3
 10007                           fsr1h	equ	0xFE2
 10008                           fsr1l	equ	0xFE1
 10009                           indf2	equ	0xFDF
 10010                           postinc2	equ	0xFDE
 10011                           postdec2	equ	0xFDD
 10012                           plusw2	equ	0xFDB
 10013                           fsr2h	equ	0xFDA
 10014                           fsr2l	equ	0xFD9
 10015                           status	equ	0xFD8
 10016                           
 10017 ;; *************** function _NTP_Handler *****************
 10018 ;; Defined at:
 10019 ;;		line 96 in file "mcc_generated_files/TCPIPLibrary/ntp.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  length          2   80[BANK0 ] int 
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;  timeIntegral    4   86[BANK0 ] unsigned long 
 10024 ;;  timeFraction    4   82[BANK0 ] unsigned long 
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  1    wreg      void 
 10027 ;; Registers used:
 10028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;Total ram usage:       10 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:    6
 10041 ;; This function calls:
 10042 ;;		_ETH_Read32
 10043 ;;		_ETH_Read8
 10044 ;;		_rtcc_set
 10045 ;; This function is called by:
 10046 ;;		_UDP_Receive
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text41
 10051  015DAC                     __ptext41:
 10052                           	opt stack 0
 10053  015DAC                     _NTP_Handler:
 10054                           	opt stack 20
 10055                           
 10056                           ;ntp.c: 98: uint32_t timeIntegralPart,timeFractionalPart;
 10057                           ;ntp.c: 100: ETH_Read8();
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;incstack = 0
 10061  015DAC  EC4C  F0B4         	call	_ETH_Read8	;wreg free
 10062                           
 10063                           ;ntp.c: 101: ETH_Read8();
 10064  015DB0  EC4C  F0B4         	call	_ETH_Read8	;wreg free
 10065                           
 10066                           ;ntp.c: 102: ETH_Read8();
 10067  015DB4  EC4C  F0B4         	call	_ETH_Read8	;wreg free
 10068                           
 10069                           ;ntp.c: 103: ETH_Read8();
 10070  015DB8  EC4C  F0B4         	call	_ETH_Read8	;wreg free
 10071                           
 10072                           ;ntp.c: 104: ETH_Read32();
 10073  015DBC  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10074                           
 10075                           ;ntp.c: 105: ETH_Read32();
 10076  015DC0  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10077                           
 10078                           ;ntp.c: 106: ETH_Read32();
 10079  015DC4  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10080                           
 10081                           ;ntp.c: 109: ETH_Read32();
 10082  015DC8  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10083                           
 10084                           ;ntp.c: 110: ETH_Read32();
 10085  015DCC  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10086                           
 10087                           ;ntp.c: 113: ETH_Read32();
 10088  015DD0  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10089                           
 10090                           ;ntp.c: 114: ETH_Read32();
 10091  015DD4  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10092                           
 10093                           ;ntp.c: 117: timeIntegralPart = ETH_Read32();
 10094  015DD8  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10095  015DDC  C013  F0B6         	movff	?_ETH_Read32,NTP_Handler@timeIntegralPart
 10096  015DE0  C014  F0B7         	movff	?_ETH_Read32+1,NTP_Handler@timeIntegralPart+1
 10097  015DE4  C015  F0B8         	movff	?_ETH_Read32+2,NTP_Handler@timeIntegralPart+2
 10098  015DE8  C016  F0B9         	movff	?_ETH_Read32+3,NTP_Handler@timeIntegralPart+3
 10099                           
 10100                           ;ntp.c: 118: timeFractionalPart = ETH_Read32();
 10101  015DEC  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10102  015DF0  C013  F0B2         	movff	?_ETH_Read32,NTP_Handler@timeFractionalPart
 10103  015DF4  C014  F0B3         	movff	?_ETH_Read32+1,NTP_Handler@timeFractionalPart+1
 10104  015DF8  C015  F0B4         	movff	?_ETH_Read32+2,NTP_Handler@timeFractionalPart+2
 10105  015DFC  C016  F0B5         	movff	?_ETH_Read32+3,NTP_Handler@timeFractionalPart+3
 10106                           
 10107                           ;ntp.c: 121: ETH_Read32();
 10108  015E00  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10109                           
 10110                           ;ntp.c: 122: ETH_Read32();
 10111  015E04  ECDB  F0B0         	call	_ETH_Read32	;wreg free
 10112                           
 10113                           ;ntp.c: 124: timeIntegralPart -= 2208988800;
 10114  015E08  0E80               	movlw	128
 10115  015E0A  0100               	movlb	0	; () banked
 10116  015E0C  5FB6               	subwf	NTP_Handler@timeIntegralPart& (0+255),f,b
 10117  015E0E  0E7E               	movlw	126
 10118  015E10  5BB7               	subwfb	(NTP_Handler@timeIntegralPart+1)& (0+255),f,b
 10119  015E12  0EAA               	movlw	170
 10120  015E14  5BB8               	subwfb	(NTP_Handler@timeIntegralPart+2)& (0+255),f,b
 10121  015E16  0E83               	movlw	131
 10122  015E18  5BB9               	subwfb	(NTP_Handler@timeIntegralPart+3)& (0+255),f,b
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;ntp.c: 126: rtcc_set(timeIntegralPart);
 10126  015E1A  C0B6  F013         	movff	NTP_Handler@timeIntegralPart,rtcc_set@t
 10127  015E1E  C0B7  F014         	movff	NTP_Handler@timeIntegralPart+1,rtcc_set@t+1
 10128  015E22  EC89  F0B3         	call	_rtcc_set	;wreg free
 10129  015E26  0012               	return		;funcret
 10130  015E28                     __end_of_NTP_Handler:
 10131                           	opt stack 0
 10132                           tosu	equ	0xFFF
 10133                           tosh	equ	0xFFE
 10134                           tosl	equ	0xFFD
 10135                           pclath	equ	0xFFA
 10136                           tblptru	equ	0xFF8
 10137                           tblptrh	equ	0xFF7
 10138                           tblptrl	equ	0xFF6
 10139                           tablat	equ	0xFF5
 10140                           prodh	equ	0xFF4
 10141                           prodl	equ	0xFF3
 10142                           intcon	equ	0xFF2
 10143                           indf0	equ	0xFEF
 10144                           postinc0	equ	0xFEE
 10145                           fsr0h	equ	0xFEA
 10146                           fsr0l	equ	0xFE9
 10147                           wreg	equ	0xFE8
 10148                           indf1	equ	0xFE7
 10149                           postinc1	equ	0xFE6
 10150                           postdec1	equ	0xFE5
 10151                           plusw1	equ	0xFE3
 10152                           fsr1h	equ	0xFE2
 10153                           fsr1l	equ	0xFE1
 10154                           indf2	equ	0xFDF
 10155                           postinc2	equ	0xFDE
 10156                           postdec2	equ	0xFDD
 10157                           plusw2	equ	0xFDB
 10158                           fsr2h	equ	0xFDA
 10159                           fsr2l	equ	0xFD9
 10160                           status	equ	0xFD8
 10161                           
 10162 ;; *************** function _rtcc_set *****************
 10163 ;; Defined at:
 10164 ;;		line 126 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  t               2   18[COMRAM] PTR long 
 10167 ;;		 -> RAM(3935), 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  gie_val         1   20[COMRAM] unsigned char 
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		wreg, fsr2l, fsr2h, status,2
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;Total ram usage:        3 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; Hardware stack levels required when called:    4
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_NTP_Handler
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text42
 10194  016712                     __ptext42:
 10195                           	opt stack 0
 10196  016712                     _rtcc_set:
 10197                           	opt stack 21
 10198                           
 10199                           ;rtcc.c: 128: bool gie_val;
 10200                           ;rtcc.c: 129: gie_val = GIE;
 10201                           
 10202                           ;incstack = 0
 10203  016712  0E00               	movlw	0
 10204  016714  BEF2               	btfsc	intcon,7,c	;volatile
 10205  016716  0E01               	movlw	1
 10206  016718  6E15               	movwf	rtcc_set@gie_val,c
 10207                           
 10208                           ;rtcc.c: 130: GIE = 0;
 10209  01671A  9EF2               	bcf	intcon,7,c	;volatile
 10210                           
 10211                           ;rtcc.c: 131: device_time = *t;
 10212  01671C  C013  FFD9         	movff	rtcc_set@t,fsr2l
 10213  016720  C014  FFDA         	movff	rtcc_set@t+1,fsr2h
 10214  016724  CFDE F232          	movff	postinc2,_device_time	;volatile
 10215  016728  CFDE F233          	movff	postinc2,_device_time+1	;volatile
 10216  01672C  CFDE F234          	movff	postinc2,_device_time+2	;volatile
 10217  016730  CFDE F235          	movff	postinc2,_device_time+3	;volatile
 10218                           
 10219                           ;rtcc.c: 132: GIE = gie_val;
 10220  016734  A015               	btfss	rtcc_set@gie_val,0,c
 10221  016736  D002               	goto	u5440
 10222  016738  8EF2               	bsf	intcon,7,c	;volatile
 10223  01673A  0012               	return	
 10224  01673C                     u5440:
 10225  01673C  9EF2               	bcf	intcon,7,c	;volatile
 10226  01673E  0012               	return		;funcret
 10227  016740                     __end_of_rtcc_set:
 10228                           	opt stack 0
 10229                           tosu	equ	0xFFF
 10230                           tosh	equ	0xFFE
 10231                           tosl	equ	0xFFD
 10232                           pclath	equ	0xFFA
 10233                           tblptru	equ	0xFF8
 10234                           tblptrh	equ	0xFF7
 10235                           tblptrl	equ	0xFF6
 10236                           tablat	equ	0xFF5
 10237                           prodh	equ	0xFF4
 10238                           prodl	equ	0xFF3
 10239                           intcon	equ	0xFF2
 10240                           indf0	equ	0xFEF
 10241                           postinc0	equ	0xFEE
 10242                           fsr0h	equ	0xFEA
 10243                           fsr0l	equ	0xFE9
 10244                           wreg	equ	0xFE8
 10245                           indf1	equ	0xFE7
 10246                           postinc1	equ	0xFE6
 10247                           postdec1	equ	0xFE5
 10248                           plusw1	equ	0xFE3
 10249                           fsr1h	equ	0xFE2
 10250                           fsr1l	equ	0xFE1
 10251                           indf2	equ	0xFDF
 10252                           postinc2	equ	0xFDE
 10253                           postdec2	equ	0xFDD
 10254                           plusw2	equ	0xFDB
 10255                           fsr2h	equ	0xFDA
 10256                           fsr2l	equ	0xFD9
 10257                           status	equ	0xFD8
 10258                           
 10259 ;; *************** function _IPV4_GetDatagramLength *****************
 10260 ;; Defined at:
 10261 ;;		line 293 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;		None
 10264 ;; Auto vars:     Size  Location     Type
 10265 ;;		None
 10266 ;; Return value:  Size  Location     Type
 10267 ;;                  2   18[COMRAM] unsigned int 
 10268 ;; Registers used:
 10269 ;;		wreg, status,2, status,0
 10270 ;; Tracked objects:
 10271 ;;		On entry : 0/0
 10272 ;;		On exit  : 0/0
 10273 ;;		Unchanged: 0/0
 10274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;Total ram usage:        2 bytes
 10280 ;; Hardware stack levels used:    1
 10281 ;; Hardware stack levels required when called:    4
 10282 ;; This function calls:
 10283 ;;		Nothing
 10284 ;; This function is called by:
 10285 ;;		_UDP_Receive
 10286 ;; This function uses a non-reentrant model
 10287 ;;
 10288                           
 10289                           	psect	text43
 10290  016A54                     __ptext43:
 10291                           	opt stack 0
 10292  016A54                     _IPV4_GetDatagramLength:
 10293                           	opt stack 22
 10294                           
 10295                           ;ipv4.c: 295: return ((ipv4Header.length) - sizeof(ipv4Header_t));
 10296                           
 10297                           ;incstack = 0
 10298  016A54  0EEC               	movlw	236
 10299  016A56  0102               	movlb	2	; () banked
 10300  016A58  256A               	addwf	(_ipv4Header+2)& (0+255),w,b
 10301  016A5A  6E13               	movwf	?_IPV4_GetDatagramLength,c
 10302  016A5C  0EFF               	movlw	255
 10303  016A5E  216B               	addwfc	(_ipv4Header+3)& (0+255),w,b
 10304  016A60  6E14               	movwf	?_IPV4_GetDatagramLength+1,c
 10305  016A62  0012               	return	
 10306  016A64                     __end_of_IPV4_GetDatagramLength:
 10307                           	opt stack 0
 10308                           tosu	equ	0xFFF
 10309                           tosh	equ	0xFFE
 10310                           tosl	equ	0xFFD
 10311                           pclath	equ	0xFFA
 10312                           tblptru	equ	0xFF8
 10313                           tblptrh	equ	0xFF7
 10314                           tblptrl	equ	0xFF6
 10315                           tablat	equ	0xFF5
 10316                           prodh	equ	0xFF4
 10317                           prodl	equ	0xFF3
 10318                           intcon	equ	0xFF2
 10319                           indf0	equ	0xFEF
 10320                           postinc0	equ	0xFEE
 10321                           fsr0h	equ	0xFEA
 10322                           fsr0l	equ	0xFE9
 10323                           wreg	equ	0xFE8
 10324                           indf1	equ	0xFE7
 10325                           postinc1	equ	0xFE6
 10326                           postdec1	equ	0xFE5
 10327                           plusw1	equ	0xFE3
 10328                           fsr1h	equ	0xFE2
 10329                           fsr1l	equ	0xFE1
 10330                           indf2	equ	0xFDF
 10331                           postinc2	equ	0xFDE
 10332                           postdec2	equ	0xFDD
 10333                           plusw2	equ	0xFDB
 10334                           fsr2h	equ	0xFDA
 10335                           fsr2l	equ	0xFD9
 10336                           status	equ	0xFD8
 10337                           
 10338 ;; *************** function _ICMP_PortUnreachable *****************
 10339 ;; Defined at:
 10340 ;;		line 137 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;  srcIPAddress    4   72[BANK0 ] unsigned long 
 10343 ;;  destIPAddres    4   76[BANK0 ] unsigned long 
 10344 ;;  length          2   80[BANK0 ] unsigned int 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;  cksm            2   82[BANK0 ] unsigned int 
 10347 ;;  ret             1   84[BANK0 ] enum E392
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      enum E392
 10350 ;; Registers used:
 10351 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10357 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;Total ram usage:       13 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    9
 10364 ;; This function calls:
 10365 ;;		_ETH_Copy
 10366 ;;		_ETH_Insert
 10367 ;;		_ETH_SetReadPtr
 10368 ;;		_ETH_TxComputeChecksum
 10369 ;;		_ETH_Write16
 10370 ;;		_ETH_Write32
 10371 ;;		_IPV4_GetStartPosition
 10372 ;;		_IPV4_Send
 10373 ;;		_IPv4_Start
 10374 ;; This function is called by:
 10375 ;;		_UDP_Receive
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text44
 10380  01523A                     __ptext44:
 10381                           	opt stack 0
 10382  01523A                     _ICMP_PortUnreachable:
 10383                           	opt stack 17
 10384                           
 10385                           ;icmp.c: 139: error_msg ret = ERROR;
 10386                           
 10387                           ; BSR set to: 2
 10388                           ;incstack = 0
 10389  01523A  0E00               	movlw	0
 10390  01523C  0100               	movlb	0	; () banked
 10391  01523E  6FB4               	movwf	ICMP_PortUnreachable@ret& (0+255),b
 10392                           
 10393                           ;icmp.c: 140: uint16_t cksm = 0;
 10394  015240  0E00               	movlw	0
 10395  015242  6FB3               	movwf	(ICMP_PortUnreachable@cksm+1)& (0+255),b
 10396  015244  0E00               	movlw	0
 10397  015246  6FB2               	movwf	ICMP_PortUnreachable@cksm& (0+255),b
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;icmp.c: 142: if(srcIPAddress!=(ip_database_info.ipv4_myAddress))
 10401  015248  51A8               	movf	ICMP_PortUnreachable@srcIPAddress& (0+255),w,b
 10402  01524A  0102               	movlb	2	; () banked
 10403  01524C  1900               	xorwf	_ip_database_info& (0+255),w,b
 10404  01524E  E177               	bnz	l1114
 10405  015250  0100               	movlb	0	; () banked
 10406  015252  51A9               	movf	(ICMP_PortUnreachable@srcIPAddress+1)& (0+255),w,b
 10407  015254  0102               	movlb	2	; () banked
 10408  015256  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
 10409  015258  E172               	bnz	l1114
 10410  01525A  0100               	movlb	0	; () banked
 10411  01525C  51AA               	movf	(ICMP_PortUnreachable@srcIPAddress+2)& (0+255),w,b
 10412  01525E  0102               	movlb	2	; () banked
 10413  015260  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
 10414  015262  E16D               	bnz	l1114
 10415  015264  0100               	movlb	0	; () banked
 10416  015266  51AB               	movf	(ICMP_PortUnreachable@srcIPAddress+3)& (0+255),w,b
 10417  015268  0102               	movlb	2	; () banked
 10418  01526A  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 10419  01526C  A4D8               	btfss	status,2,c
 10420  01526E  0012               	return	
 10421                           
 10422                           ; BSR set to: 2
 10423                           ;icmp.c: 145: }
 10424                           ;icmp.c: 147: ret = IPv4_Start(destIPAddress, ICMP_TCPIP);
 10425                           
 10426                           ; BSR set to: 2
 10427                           
 10428                           ; BSR set to: 2
 10429                           ;icmp.c: 143: {
 10430                           ;icmp.c: 144: return DEST_IP_NOT_MATCHED;
 10431                           ;	Return value of _ICMP_PortUnreachable is never used
 10432  015270  C0AC  F031         	movff	ICMP_PortUnreachable@destIPAddress,IPv4_Start@destAddress
 10433  015274  C0AD  F032         	movff	ICMP_PortUnreachable@destIPAddress+1,IPv4_Start@destAddress+1
 10434  015278  C0AE  F033         	movff	ICMP_PortUnreachable@destIPAddress+2,IPv4_Start@destAddress+2
 10435  01527C  C0AF  F034         	movff	ICMP_PortUnreachable@destIPAddress+3,IPv4_Start@destAddress+3
 10436  015280  0E01               	movlw	1
 10437  015282  6E35               	movwf	IPv4_Start@protocol,c
 10438  015284  EC8E  F09E         	call	_IPv4_Start	;wreg free
 10439  015288  0100               	movlb	0	; () banked
 10440  01528A  6FB4               	movwf	ICMP_PortUnreachable@ret& (0+255),b
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;icmp.c: 148: if(ret == SUCCESS)
 10444  01528C  05B4               	decf	ICMP_PortUnreachable@ret& (0+255),w,b
 10445  01528E  A4D8               	btfss	status,2,c
 10446  015290  0012               	return	
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;icmp.c: 149: {
 10450                           ;icmp.c: 150: ETH_Write16(DEST_PORT_UNREACHABLE);
 10451  015292  0E03               	movlw	3
 10452  015294  6E14               	movwf	ETH_Write16@data+1,c
 10453  015296  0E03               	movlw	3
 10454  015298  6E13               	movwf	ETH_Write16@data,c
 10455  01529A  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 10456                           
 10457                           ;icmp.c: 151: ETH_Write16(0);
 10458  01529E  0E00               	movlw	0
 10459  0152A0  6E14               	movwf	ETH_Write16@data+1,c
 10460  0152A2  0E00               	movlw	0
 10461  0152A4  6E13               	movwf	ETH_Write16@data,c
 10462  0152A6  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 10463                           
 10464                           ;icmp.c: 152: ETH_Write32(0);
 10465  0152AA  0E00               	movlw	0
 10466  0152AC  6E13               	movwf	ETH_Write32@data,c
 10467  0152AE  0E00               	movlw	0
 10468  0152B0  6E14               	movwf	ETH_Write32@data+1,c
 10469  0152B2  0E00               	movlw	0
 10470  0152B4  6E15               	movwf	ETH_Write32@data+2,c
 10471  0152B6  0E00               	movlw	0
 10472  0152B8  6E16               	movwf	ETH_Write32@data+3,c
 10473  0152BA  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 10474                           
 10475                           ;icmp.c: 153: ETH_SetReadPtr(IPV4_GetStartPosition());
 10476  0152BE  EC7F  F0B5         	call	_IPV4_GetStartPosition	;wreg free
 10477  0152C2  C013  F015         	movff	?_IPV4_GetStartPosition,ETH_SetReadPtr@rdptr
 10478  0152C6  C014  F016         	movff	?_IPV4_GetStartPosition+1,ETH_SetReadPtr@rdptr+1
 10479  0152CA  EC84  F0B5         	call	_ETH_SetReadPtr	;wreg free
 10480                           
 10481                           ;icmp.c: 154: ETH_Copy(sizeof(ipv4Header_t) + length);
 10482  0152CE  0E14               	movlw	20
 10483  0152D0  0100               	movlb	0	; () banked
 10484  0152D2  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 10485  0152D4  6E19               	movwf	ETH_Copy@len,c
 10486  0152D6  0E00               	movlw	0
 10487  0152D8  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 10488  0152DA  6E1A               	movwf	ETH_Copy@len+1,c
 10489  0152DC  EC31  F0AC         	call	_ETH_Copy	;wreg free
 10490                           
 10491                           ;icmp.c: 155: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_t
      +                          ), sizeof(icmpHeader_t)+ sizeof(ipv4Header_t) + length, 0);
 10492  0152E0  0E00               	movlw	0
 10493  0152E2  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 10494  0152E4  0E22               	movlw	34
 10495  0152E6  6E25               	movwf	ETH_TxComputeChecksum@position,c
 10496  0152E8  0E18               	movlw	24
 10497  0152EA  0100               	movlb	0	; () banked
 10498  0152EC  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 10499  0152EE  6E27               	movwf	ETH_TxComputeChecksum@len,c
 10500  0152F0  0E00               	movlw	0
 10501  0152F2  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 10502  0152F4  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 10503  0152F6  0E00               	movlw	0
 10504  0152F8  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
 10505  0152FA  0E00               	movlw	0
 10506  0152FC  6E29               	movwf	ETH_TxComputeChecksum@seed,c
 10507  0152FE  EC6D  F0AB         	call	_ETH_TxComputeChecksum	;wreg free
 10508  015302  C025  F0B2         	movff	?_ETH_TxComputeChecksum,ICMP_PortUnreachable@cksm
 10509  015306  C026  F0B3         	movff	?_ETH_TxComputeChecksum+1,ICMP_PortUnreachable@cksm+1
 10510                           
 10511                           ;icmp.c: 156: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
 10512  01530A  0EB2               	movlw	low ICMP_PortUnreachable@cksm
 10513  01530C  6E13               	movwf	ETH_Insert@data,c
 10514  01530E  0E00               	movlw	high ICMP_PortUnreachable@cksm
 10515  015310  6E14               	movwf	ETH_Insert@data+1,c
 10516  015312  0E00               	movlw	0
 10517  015314  6E16               	movwf	ETH_Insert@len+1,c
 10518  015316  0E02               	movlw	2
 10519  015318  6E15               	movwf	ETH_Insert@len,c
 10520  01531A  0E00               	movlw	0
 10521  01531C  6E18               	movwf	ETH_Insert@offset+1,c
 10522  01531E  0E24               	movlw	36
 10523  015320  6E17               	movwf	ETH_Insert@offset,c
 10524  015322  ECF4  F0AF         	call	_ETH_Insert	;wreg free
 10525                           
 10526                           ;icmp.c: 157: ret = IPV4_Send(sizeof(icmpHeader_t)+sizeof(ipv4Header_t)+length);
 10527  015326  0E18               	movlw	24
 10528  015328  0100               	movlb	0	; () banked
 10529  01532A  25B0               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 10530  01532C  6E37               	movwf	IPV4_Send@payloadLength,c
 10531  01532E  0E00               	movlw	0
 10532  015330  21B1               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 10533  015332  6E38               	movwf	IPV4_Send@payloadLength+1,c
 10534  015334  EC7B  F0AD         	call	_IPV4_Send	;wreg free
 10535  015338  0100               	movlb	0	; () banked
 10536  01533A  6FB4               	movwf	ICMP_PortUnreachable@ret& (0+255),b
 10537                           
 10538                           ; BSR set to: 0
 10539  01533C  0012               	return	
 10540  01533E                     l1114:
 10541  01533E  0012               	return		;funcret
 10542  015340                     __end_of_ICMP_PortUnreachable:
 10543                           	opt stack 0
 10544                           tosu	equ	0xFFF
 10545                           tosh	equ	0xFFE
 10546                           tosl	equ	0xFFD
 10547                           pclath	equ	0xFFA
 10548                           tblptru	equ	0xFF8
 10549                           tblptrh	equ	0xFF7
 10550                           tblptrl	equ	0xFF6
 10551                           tablat	equ	0xFF5
 10552                           prodh	equ	0xFF4
 10553                           prodl	equ	0xFF3
 10554                           intcon	equ	0xFF2
 10555                           indf0	equ	0xFEF
 10556                           postinc0	equ	0xFEE
 10557                           fsr0h	equ	0xFEA
 10558                           fsr0l	equ	0xFE9
 10559                           wreg	equ	0xFE8
 10560                           indf1	equ	0xFE7
 10561                           postinc1	equ	0xFE6
 10562                           postdec1	equ	0xFE5
 10563                           plusw1	equ	0xFE3
 10564                           fsr1h	equ	0xFE2
 10565                           fsr1l	equ	0xFE1
 10566                           indf2	equ	0xFDF
 10567                           postinc2	equ	0xFDE
 10568                           postdec2	equ	0xFDD
 10569                           plusw2	equ	0xFDB
 10570                           fsr2h	equ	0xFDA
 10571                           fsr2l	equ	0xFD9
 10572                           status	equ	0xFD8
 10573                           
 10574 ;; *************** function _IPV4_GetStartPosition *****************
 10575 ;; Defined at:
 10576 ;;		line 287 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;		None
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  2   18[COMRAM] unsigned int 
 10583 ;; Registers used:
 10584 ;;		None
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;Total ram usage:        2 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    4
 10597 ;; This function calls:
 10598 ;;		Nothing
 10599 ;; This function is called by:
 10600 ;;		_ICMP_PortUnreachable
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text45
 10605  016AFE                     __ptext45:
 10606                           	opt stack 0
 10607  016AFE                     _IPV4_GetStartPosition:
 10608                           	opt stack 21
 10609                           
 10610                           ;ipv4.c: 289: return ipv4StartPosition;
 10611                           
 10612                           ;incstack = 0
 10613  016AFE  C24E  F013         	movff	_ipv4StartPosition,?_IPV4_GetStartPosition
 10614  016B02  C24F  F014         	movff	_ipv4StartPosition+1,?_IPV4_GetStartPosition+1
 10615  016B06  0012               	return		;funcret
 10616  016B08                     __end_of_IPV4_GetStartPosition:
 10617                           	opt stack 0
 10618                           tosu	equ	0xFFF
 10619                           tosh	equ	0xFFE
 10620                           tosl	equ	0xFFD
 10621                           pclath	equ	0xFFA
 10622                           tblptru	equ	0xFF8
 10623                           tblptrh	equ	0xFF7
 10624                           tblptrl	equ	0xFF6
 10625                           tablat	equ	0xFF5
 10626                           prodh	equ	0xFF4
 10627                           prodl	equ	0xFF3
 10628                           intcon	equ	0xFF2
 10629                           indf0	equ	0xFEF
 10630                           postinc0	equ	0xFEE
 10631                           fsr0h	equ	0xFEA
 10632                           fsr0l	equ	0xFE9
 10633                           wreg	equ	0xFE8
 10634                           indf1	equ	0xFE7
 10635                           postinc1	equ	0xFE6
 10636                           postdec1	equ	0xFE5
 10637                           plusw1	equ	0xFE3
 10638                           fsr1h	equ	0xFE2
 10639                           fsr1l	equ	0xFE1
 10640                           indf2	equ	0xFDF
 10641                           postinc2	equ	0xFDE
 10642                           postdec2	equ	0xFDD
 10643                           plusw2	equ	0xFDB
 10644                           fsr2h	equ	0xFDA
 10645                           fsr2l	equ	0xFD9
 10646                           status	equ	0xFD8
 10647                           
 10648 ;; *************** function _ETH_SetReadPtr *****************
 10649 ;; Defined at:
 10650 ;;		line 1085 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;  rdptr           2   20[COMRAM] unsigned int 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		None
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;Total ram usage:        2 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; Hardware stack levels required when called:    4
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_ICMP_PortUnreachable
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text46
 10679  016B08                     __ptext46:
 10680                           	opt stack 0
 10681  016B08                     _ETH_SetReadPtr:
 10682                           	opt stack 21
 10683                           
 10684                           ;ETHxxJ6x_driver.c: 1087: ERDPT = rdptr;
 10685                           
 10686                           ;incstack = 0
 10687  016B08  C015  FF7A         	movff	ETH_SetReadPtr@rdptr,3962	;volatile
 10688  016B0C  C016  FF7B         	movff	ETH_SetReadPtr@rdptr+1,3963	;volatile
 10689  016B10  0012               	return		;funcret
 10690  016B12                     __end_of_ETH_SetReadPtr:
 10691                           	opt stack 0
 10692                           tosu	equ	0xFFF
 10693                           tosh	equ	0xFFE
 10694                           tosl	equ	0xFFD
 10695                           pclath	equ	0xFFA
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           prodh	equ	0xFF4
 10701                           prodl	equ	0xFF3
 10702                           intcon	equ	0xFF2
 10703                           indf0	equ	0xFEF
 10704                           postinc0	equ	0xFEE
 10705                           fsr0h	equ	0xFEA
 10706                           fsr0l	equ	0xFE9
 10707                           wreg	equ	0xFE8
 10708                           indf1	equ	0xFE7
 10709                           postinc1	equ	0xFE6
 10710                           postdec1	equ	0xFE5
 10711                           plusw1	equ	0xFE3
 10712                           fsr1h	equ	0xFE2
 10713                           fsr1l	equ	0xFE1
 10714                           indf2	equ	0xFDF
 10715                           postinc2	equ	0xFDE
 10716                           postdec2	equ	0xFDD
 10717                           plusw2	equ	0xFDB
 10718                           fsr2h	equ	0xFDA
 10719                           fsr2l	equ	0xFD9
 10720                           status	equ	0xFD8
 10721                           
 10722 ;; *************** function _strcmp *****************
 10723 ;; Defined at:
 10724 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\strcmp.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  s1              2   18[COMRAM] PTR const unsigned char 
 10727 ;;  s2              2   20[COMRAM] PTR const unsigned char 
 10728 ;;		 -> DNS_Handler@dnsR(255), 
 10729 ;; Auto vars:     Size  Location     Type
 10730 ;;  r               1   23[COMRAM] char 
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  2   18[COMRAM] int 
 10733 ;; Registers used:
 10734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10744 ;;Total ram usage:        6 bytes
 10745 ;; Hardware stack levels used:    1
 10746 ;; Hardware stack levels required when called:    4
 10747 ;; This function calls:
 10748 ;;		Nothing
 10749 ;; This function is called by:
 10750 ;;		_DNS_Handler
 10751 ;;		_DNS_Lookup
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text47
 10756  0163F0                     __ptext47:
 10757                           	opt stack 0
 10758  0163F0                     _strcmp:
 10759                           	opt stack 21
 10760                           
 10761                           ;incstack = 0
 10762  0163F0  D004               	goto	l2612
 10763  0163F2  4A13               	infsnz	strcmp@s1,f,c
 10764  0163F4  2A14               	incf	strcmp@s1+1,f,c
 10765  0163F6  4A15               	infsnz	strcmp@s2,f,c
 10766  0163F8  2A16               	incf	strcmp@s2+1,f,c
 10767  0163FA                     l2612:
 10768  0163FA  C013  FFD9         	movff	strcmp@s1,fsr2l
 10769  0163FE  C014  FFDA         	movff	strcmp@s1+1,fsr2h
 10770  016402  50DF               	movf	indf2,w,c
 10771  016404  6E17               	movwf	??_strcmp& (0+255),c
 10772  016406  C015  FFD9         	movff	strcmp@s2,fsr2l
 10773  01640A  C016  FFDA         	movff	strcmp@s2+1,fsr2h
 10774  01640E  50DF               	movf	indf2,w,c
 10775  016410  0800               	sublw	0
 10776  016412  2417               	addwf	??_strcmp,w,c
 10777  016414  6E18               	movwf	strcmp@r,c
 10778  016416  5018               	movf	strcmp@r,w,c
 10779  016418  A4D8               	btfss	status,2,c
 10780  01641A  D007               	goto	u5520
 10781  01641C  C013  FFD9         	movff	strcmp@s1,fsr2l
 10782  016420  C014  FFDA         	movff	strcmp@s1+1,fsr2h
 10783  016424  50DF               	movf	indf2,w,c
 10784  016426  A4D8               	btfss	status,2,c
 10785  016428  D7E4               	goto	l2613
 10786  01642A                     u5520:
 10787  01642A  5018               	movf	strcmp@r,w,c
 10788  01642C  6E13               	movwf	?_strcmp,c
 10789  01642E  6A14               	clrf	?_strcmp+1,c
 10790  016430  BE13               	btfsc	?_strcmp,7,c
 10791  016432  0614               	decf	?_strcmp+1,f,c
 10792  016434  0012               	return	
 10793  016436                     __end_of_strcmp:
 10794                           	opt stack 0
 10795                           tosu	equ	0xFFF
 10796                           tosh	equ	0xFFE
 10797                           tosl	equ	0xFFD
 10798                           pclath	equ	0xFFA
 10799                           tblptru	equ	0xFF8
 10800                           tblptrh	equ	0xFF7
 10801                           tblptrl	equ	0xFF6
 10802                           tablat	equ	0xFF5
 10803                           prodh	equ	0xFF4
 10804                           prodl	equ	0xFF3
 10805                           intcon	equ	0xFF2
 10806                           indf0	equ	0xFEF
 10807                           postinc0	equ	0xFEE
 10808                           fsr0h	equ	0xFEA
 10809                           fsr0l	equ	0xFE9
 10810                           wreg	equ	0xFE8
 10811                           indf1	equ	0xFE7
 10812                           postinc1	equ	0xFE6
 10813                           postdec1	equ	0xFE5
 10814                           plusw1	equ	0xFE3
 10815                           fsr1h	equ	0xFE2
 10816                           fsr1l	equ	0xFE1
 10817                           indf2	equ	0xFDF
 10818                           postinc2	equ	0xFDE
 10819                           postdec2	equ	0xFDD
 10820                           plusw2	equ	0xFDB
 10821                           fsr2h	equ	0xFDA
 10822                           fsr2l	equ	0xFD9
 10823                           status	equ	0xFD8
 10824                           
 10825 ;; *************** function _sendDHCPDECLINE *****************
 10826 ;; Defined at:
 10827 ;;		line 136 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;		None
 10830 ;; Auto vars:     Size  Location     Type
 10831 ;;		None
 10832 ;; Return value:  Size  Location     Type
 10833 ;;                  1    wreg      unsigned char 
 10834 ;; Registers used:
 10835 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10836 ;; Tracked objects:
 10837 ;;		On entry : 0/0
 10838 ;;		On exit  : 0/0
 10839 ;;		Unchanged: 0/0
 10840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;Total ram usage:        0 bytes
 10846 ;; Hardware stack levels used:    1
 10847 ;; Hardware stack levels required when called:   11
 10848 ;; This function calls:
 10849 ;;		_sendRequest
 10850 ;; This function is called by:
 10851 ;;		_DHCP_Handler
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855                           	psect	text48
 10856  016B3A                     __ptext48:
 10857                           	opt stack 0
 10858  016B3A                     _sendDHCPDECLINE:
 10859                           	opt stack 14
 10860                           
 10861                           ;dhcp_client.c: 138: return sendRequest(DHCP_DECLINE);
 10862                           ;	Return value of _sendDHCPDECLINE is never used
 10863                           
 10864                           ;incstack = 0
 10865  016B3A  0E04               	movlw	4
 10866  016B3C  ECBD  F0A0         	call	_sendRequest
 10867  016B40  0012               	return	
 10868  016B42                     __end_of_sendDHCPDECLINE:
 10869                           	opt stack 0
 10870                           tosu	equ	0xFFF
 10871                           tosh	equ	0xFFE
 10872                           tosl	equ	0xFFD
 10873                           pclath	equ	0xFFA
 10874                           tblptru	equ	0xFF8
 10875                           tblptrh	equ	0xFF7
 10876                           tblptrl	equ	0xFF6
 10877                           tablat	equ	0xFF5
 10878                           prodh	equ	0xFF4
 10879                           prodl	equ	0xFF3
 10880                           intcon	equ	0xFF2
 10881                           indf0	equ	0xFEF
 10882                           postinc0	equ	0xFEE
 10883                           fsr0h	equ	0xFEA
 10884                           fsr0l	equ	0xFE9
 10885                           wreg	equ	0xFE8
 10886                           indf1	equ	0xFE7
 10887                           postinc1	equ	0xFE6
 10888                           postdec1	equ	0xFE5
 10889                           plusw1	equ	0xFE3
 10890                           fsr1h	equ	0xFE2
 10891                           fsr1l	equ	0xFE1
 10892                           indf2	equ	0xFDF
 10893                           postinc2	equ	0xFDE
 10894                           postdec2	equ	0xFDD
 10895                           plusw2	equ	0xFDB
 10896                           fsr2h	equ	0xFDA
 10897                           fsr2l	equ	0xFD9
 10898                           status	equ	0xFD8
 10899                           
 10900 ;; *************** function _memcmp *****************
 10901 ;; Defined at:
 10902 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\memcmp.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;  s1              2   18[COMRAM] PTR const void 
 10905 ;;		 -> DHCP_Handler@chaddr(16), 
 10906 ;;  s2              2   20[COMRAM] PTR const void 
 10907 ;;		 -> broadcastMAC(6), hostMacAddress(6), 
 10908 ;;  n               2   22[COMRAM] unsigned int 
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;		None
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  2   18[COMRAM] int 
 10913 ;; Registers used:
 10914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10920 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;Total ram usage:        9 bytes
 10925 ;; Hardware stack levels used:    1
 10926 ;; Hardware stack levels required when called:    4
 10927 ;; This function calls:
 10928 ;;		Nothing
 10929 ;; This function is called by:
 10930 ;;		_DHCP_Handler
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           	psect	text49
 10935  0159B8                     __ptext49:
 10936                           	opt stack 0
 10937  0159B8                     _memcmp:
 10938                           	opt stack 21
 10939                           
 10940                           ;incstack = 0
 10941  0159B8  D042               	goto	l2454
 10942  0159BA                     l6988:
 10943  0159BA  C013  FFD9         	movff	memcmp@s1,fsr2l
 10944  0159BE  C014  FFDA         	movff	memcmp@s1+1,fsr2h
 10945  0159C2  50DF               	movf	indf2,w,c
 10946  0159C4  6E19               	movwf	??_memcmp& (0+255),c
 10947  0159C6  C015  FFF6         	movff	memcmp@s2,tblptrl
 10948  0159CA  C016  FFF7         	movff	memcmp@s2+1,tblptrh
 10949  0159CE  0E00               	movlw	low (__mediumconst shr (0+16))
 10950  0159D0  6EF8               	movwf	tblptru,c
 10951  0159D2  0E0F               	movlw	(high __ramtop+-1)
 10952  0159D4  64F7               	cpfsgt	tblptrh,c
 10953  0159D6  D003               	bra	u5477
 10954  0159D8  0008               	tblrd		*
 10955  0159DA  50F5               	movf	tablat,w,c
 10956  0159DC  D005               	bra	u5470
 10957  0159DE                     u5477:
 10958  0159DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 10959  0159E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10960  0159E6  50EF               	movf	indf0,w,c
 10961  0159E8                     u5470:
 10962  0159E8  1819               	xorwf	??_memcmp,w,c
 10963  0159EA  B4D8               	btfsc	status,2,c
 10964  0159EC  D024               	goto	l2456
 10965  0159EE  C015  FFF6         	movff	memcmp@s2,tblptrl
 10966  0159F2  C016  FFF7         	movff	memcmp@s2+1,tblptrh
 10967  0159F6  0E00               	movlw	low (__mediumconst shr (0+16))
 10968  0159F8  6EF8               	movwf	tblptru,c
 10969  0159FA  0E0F               	movlw	(high __ramtop+-1)
 10970  0159FC  64F7               	cpfsgt	tblptrh,c
 10971  0159FE  D003               	bra	u5497
 10972  015A00  0008               	tblrd		*
 10973  015A02  50F5               	movf	tablat,w,c
 10974  015A04  D005               	bra	u5490
 10975  015A06                     u5497:
 10976  015A06  CFF6 FFE9          	movff	tblptrl,fsr0l
 10977  015A0A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10978  015A0E  50EF               	movf	indf0,w,c
 10979  015A10                     u5490:
 10980  015A10  6E19               	movwf	??_memcmp& (0+255),c
 10981  015A12  6A1A               	clrf	(??_memcmp+1)& (0+255),c
 10982  015A14  1E19               	comf	??_memcmp,f,c
 10983  015A16  1E1A               	comf	??_memcmp+1,f,c
 10984  015A18  4A19               	infsnz	??_memcmp,f,c
 10985  015A1A  2A1A               	incf	??_memcmp+1,f,c
 10986  015A1C  C013  FFD9         	movff	memcmp@s1,fsr2l
 10987  015A20  C014  FFDA         	movff	memcmp@s1+1,fsr2h
 10988  015A24  50DF               	movf	indf2,w,c
 10989  015A26  6E1B               	movwf	(??_memcmp+2)& (0+255),c
 10990  015A28  501B               	movf	??_memcmp+2,w,c
 10991  015A2A  2419               	addwf	??_memcmp,w,c
 10992  015A2C  6E13               	movwf	?_memcmp,c
 10993  015A2E  0E00               	movlw	0
 10994  015A30  201A               	addwfc	??_memcmp+1,w,c
 10995  015A32  6E14               	movwf	?_memcmp+1,c
 10996  015A34  0012               	return	
 10997  015A36                     l2456:
 10998  015A36  4A13               	infsnz	memcmp@s1,f,c
 10999  015A38  2A14               	incf	memcmp@s1+1,f,c
 11000  015A3A  4A15               	infsnz	memcmp@s2,f,c
 11001  015A3C  2A16               	incf	memcmp@s2+1,f,c
 11002  015A3E                     l2454:
 11003  015A3E  0617               	decf	memcmp@n,f,c
 11004  015A40  A0D8               	btfss	status,0,c
 11005  015A42  0618               	decf	memcmp@n+1,f,c
 11006  015A44  2817               	incf	memcmp@n,w,c
 11007  015A46  E1B9               	bnz	l6988
 11008  015A48  2818               	incf	memcmp@n+1,w,c
 11009  015A4A  A4D8               	btfss	status,2,c
 11010  015A4C  D7B6               	goto	l2455
 11011  015A4E  0E00               	movlw	0
 11012  015A50  6E14               	movwf	?_memcmp+1,c
 11013  015A52  0E00               	movlw	0
 11014  015A54  6E13               	movwf	?_memcmp,c
 11015  015A56  0012               	return	
 11016  015A58                     __end_of_memcmp:
 11017                           	opt stack 0
 11018                           tosu	equ	0xFFF
 11019                           tosh	equ	0xFFE
 11020                           tosl	equ	0xFFD
 11021                           pclath	equ	0xFFA
 11022                           tblptru	equ	0xFF8
 11023                           tblptrh	equ	0xFF7
 11024                           tblptrl	equ	0xFF6
 11025                           tablat	equ	0xFF5
 11026                           prodh	equ	0xFF4
 11027                           prodl	equ	0xFF3
 11028                           intcon	equ	0xFF2
 11029                           indf0	equ	0xFEF
 11030                           postinc0	equ	0xFEE
 11031                           fsr0h	equ	0xFEA
 11032                           fsr0l	equ	0xFE9
 11033                           wreg	equ	0xFE8
 11034                           indf1	equ	0xFE7
 11035                           postinc1	equ	0xFE6
 11036                           postdec1	equ	0xFE5
 11037                           plusw1	equ	0xFE3
 11038                           fsr1h	equ	0xFE2
 11039                           fsr1l	equ	0xFE1
 11040                           indf2	equ	0xFDF
 11041                           postinc2	equ	0xFDE
 11042                           postdec2	equ	0xFDD
 11043                           plusw2	equ	0xFDB
 11044                           fsr2h	equ	0xFDA
 11045                           fsr2l	equ	0xFD9
 11046                           status	equ	0xFD8
 11047                           
 11048 ;; *************** function _ETH_Read32 *****************
 11049 ;; Defined at:
 11050 ;;		line 495 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;		None
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  ret             4   22[COMRAM] unsigned long 
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  4   18[COMRAM] unsigned long 
 11057 ;; Registers used:
 11058 ;;		wreg, status,2, status,0, cstack
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11067 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;Total ram usage:        8 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; Hardware stack levels required when called:    5
 11071 ;; This function calls:
 11072 ;;		_ETH_EdataRead
 11073 ;; This function is called by:
 11074 ;;		_DHCP_Handler
 11075 ;;		_DNS_Handler
 11076 ;;		_NTP_Handler
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text50
 11081  0161B6                     __ptext50:
 11082                           	opt stack 0
 11083  0161B6                     _ETH_Read32:
 11084                           	opt stack 20
 11085                           
 11086                           ;ETHxxJ6x_driver.c: 497: uint32_t ret = 0;
 11087                           
 11088                           ;incstack = 0
 11089  0161B6  0E00               	movlw	0
 11090  0161B8  6E17               	movwf	ETH_Read32@ret,c
 11091  0161BA  0E00               	movlw	0
 11092  0161BC  6E18               	movwf	ETH_Read32@ret+1,c
 11093  0161BE  0E00               	movlw	0
 11094  0161C0  6E19               	movwf	ETH_Read32@ret+2,c
 11095  0161C2  0E00               	movlw	0
 11096  0161C4  6E1A               	movwf	ETH_Read32@ret+3,c
 11097                           
 11098                           ;ETHxxJ6x_driver.c: 498: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 11099  0161C6  0102               	movlb	2	; () banked
 11100  0161C8  513F               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 11101  0161CA  E104               	bnz	u9680
 11102  0161CC  0E04               	movlw	4
 11103  0161CE  5D3E               	subwf	_rxPacketStatusVector& (0+255),w,b
 11104  0161D0  A0D8               	btfss	status,0,c
 11105  0161D2  D013               	goto	l567
 11106  0161D4                     u9680:
 11107                           
 11108                           ; BSR set to: 2
 11109                           ;ETHxxJ6x_driver.c: 499: {
 11110                           ;ETHxxJ6x_driver.c: 500: ((uint8_t *)&ret)[3] = ETH_EdataRead();
 11111  0161D4  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 11112  0161D8  6E1A               	movwf	ETH_Read32@ret+3,c
 11113                           
 11114                           ;ETHxxJ6x_driver.c: 501: ((uint8_t *)&ret)[2] = ETH_EdataRead();
 11115  0161DA  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 11116  0161DE  6E19               	movwf	ETH_Read32@ret+2,c
 11117                           
 11118                           ;ETHxxJ6x_driver.c: 502: ((uint8_t *)&ret)[1] = ETH_EdataRead();
 11119  0161E0  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 11120  0161E4  6E18               	movwf	ETH_Read32@ret+1,c
 11121                           
 11122                           ;ETHxxJ6x_driver.c: 503: ((uint8_t *)&ret)[0] = ETH_EdataRead();
 11123  0161E6  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 11124  0161EA  6E17               	movwf	ETH_Read32@ret,c
 11125                           
 11126                           ;ETHxxJ6x_driver.c: 504: rxPacketStatusVector.byteCount -= sizeof(ret);
 11127  0161EC  0E04               	movlw	4
 11128  0161EE  0102               	movlb	2	; () banked
 11129  0161F0  5F3E               	subwf	_rxPacketStatusVector& (0+255),f,b
 11130  0161F2  0E00               	movlw	0
 11131  0161F4  5B3F               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 11132                           
 11133                           ; BSR set to: 2
 11134                           ;ETHxxJ6x_driver.c: 505: ethData.error = 0;
 11135  0161F6  9124               	bcf	_ethData& (0+255),0,b	;volatile
 11136                           
 11137                           ;ETHxxJ6x_driver.c: 506: }
 11138  0161F8  D001               	goto	l568
 11139  0161FA                     l567:
 11140                           
 11141                           ; BSR set to: 2
 11142                           ;ETHxxJ6x_driver.c: 507: else
 11143                           ;ETHxxJ6x_driver.c: 508: {
 11144                           ;ETHxxJ6x_driver.c: 509: ethData.error = 1;
 11145  0161FA  8124               	bsf	_ethData& (0+255),0,b	;volatile
 11146  0161FC                     l568:
 11147                           
 11148                           ; BSR set to: 2
 11149                           ;ETHxxJ6x_driver.c: 510: }
 11150                           ;ETHxxJ6x_driver.c: 511: return ret;
 11151  0161FC  C017  F013         	movff	ETH_Read32@ret,?_ETH_Read32
 11152  016200  C018  F014         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
 11153  016204  C019  F015         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
 11154  016208  C01A  F016         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
 11155                           
 11156                           ; BSR set to: 2
 11157  01620C  0012               	return		;funcret
 11158  01620E                     __end_of_ETH_Read32:
 11159                           	opt stack 0
 11160                           tosu	equ	0xFFF
 11161                           tosh	equ	0xFFE
 11162                           tosl	equ	0xFFD
 11163                           pclath	equ	0xFFA
 11164                           tblptru	equ	0xFF8
 11165                           tblptrh	equ	0xFF7
 11166                           tblptrl	equ	0xFF6
 11167                           tablat	equ	0xFF5
 11168                           prodh	equ	0xFF4
 11169                           prodl	equ	0xFF3
 11170                           intcon	equ	0xFF2
 11171                           indf0	equ	0xFEF
 11172                           postinc0	equ	0xFEE
 11173                           fsr0h	equ	0xFEA
 11174                           fsr0l	equ	0xFE9
 11175                           wreg	equ	0xFE8
 11176                           indf1	equ	0xFE7
 11177                           postinc1	equ	0xFE6
 11178                           postdec1	equ	0xFE5
 11179                           plusw1	equ	0xFE3
 11180                           fsr1h	equ	0xFE2
 11181                           fsr1l	equ	0xFE1
 11182                           indf2	equ	0xFDF
 11183                           postinc2	equ	0xFDE
 11184                           postdec2	equ	0xFDD
 11185                           plusw2	equ	0xFDB
 11186                           fsr2h	equ	0xFDA
 11187                           fsr2l	equ	0xFD9
 11188                           status	equ	0xFD8
 11189                           
 11190 ;; *************** function _TCP_Recv *****************
 11191 ;; Defined at:
 11192 ;;		line 486 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  remoteAddres    4    5[BANK1 ] unsigned long 
 11195 ;;  length          2    9[BANK1 ] unsigned int 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  tcbPtr          2  157[BANK0 ] PTR struct .
 11198 ;;		 -> NULL(0), 
 11199 ;;  count           1  156[BANK0 ] char 
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  1    wreg      void 
 11202 ;; Registers used:
 11203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11209 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11210 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11211 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11212 ;;      Totals:         0       3      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11213 ;;Total ram usage:       37 bytes
 11214 ;; Hardware stack levels used:    1
 11215 ;; Hardware stack levels required when called:   12
 11216 ;; This function calls:
 11217 ;;		_ETH_ReadBlock
 11218 ;;		_TCP_FiniteStateMachine
 11219 ;;		_TCP_ParseTCPOptions
 11220 ;; This function is called by:
 11221 ;;		_IPV4_Packet
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text51
 11226  0130C2                     __ptext51:
 11227                           	opt stack 0
 11228  0130C2                     _TCP_Recv:
 11229                           	opt stack 15
 11230                           
 11231                           ;tcpv4.c: 488: tcpTCB_t *tcbPtr;
 11232                           ;tcpv4.c: 489: socklistsize_t count = 0;
 11233                           
 11234                           ; BSR set to: 2
 11235                           ;incstack = 0
 11236  0130C2  0E00               	movlw	0
 11237  0130C4  0100               	movlb	0	; () banked
 11238  0130C6  6FFC               	movwf	TCP_Recv@count& (0+255),b
 11239                           
 11240                           ; BSR set to: 0
 11241                           ;tcpv4.c: 491: tcbPtr = (0);
 11242  0130C8  0E00               	movlw	0
 11243  0130CA  6FFD               	movwf	TCP_Recv@tcbPtr& (0+255),b
 11244  0130CC  0E00               	movlw	0
 11245  0130CE  6FFE               	movwf	(TCP_Recv@tcbPtr+1)& (0+255),b
 11246                           
 11247                           ; BSR set to: 0
 11248                           ;tcpv4.c: 493: receivedRemoteAddress = 0;
 11249  0130D0  0E00               	movlw	0
 11250  0130D2  0102               	movlb	2	; () banked
 11251  0130D4  6F2A               	movwf	_receivedRemoteAddress& (0+255),b
 11252  0130D6  0E00               	movlw	0
 11253  0130D8  6F2B               	movwf	(_receivedRemoteAddress+1)& (0+255),b
 11254  0130DA  0E00               	movlw	0
 11255  0130DC  6F2C               	movwf	(_receivedRemoteAddress+2)& (0+255),b
 11256  0130DE  0E00               	movlw	0
 11257  0130E0  6F2D               	movwf	(_receivedRemoteAddress+3)& (0+255),b
 11258                           
 11259                           ; BSR set to: 2
 11260                           ;tcpv4.c: 494: rcvPayloadLen = 0;
 11261  0130E2  0E00               	movlw	0
 11262  0130E4  6F45               	movwf	(_rcvPayloadLen+1)& (0+255),b
 11263  0130E6  0E00               	movlw	0
 11264  0130E8  6F44               	movwf	_rcvPayloadLen& (0+255),b
 11265                           
 11266                           ; BSR set to: 2
 11267                           ;tcpv4.c: 496: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
 11268  0130EA  0E54               	movlw	low _tcpHeader
 11269  0130EC  6E13               	movwf	ETH_ReadBlock@buffer,c
 11270  0130EE  0E02               	movlw	high _tcpHeader
 11271  0130F0  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 11272  0130F2  0E00               	movlw	0
 11273  0130F4  6E16               	movwf	ETH_ReadBlock@length+1,c
 11274  0130F6  0E14               	movlw	20
 11275  0130F8  6E15               	movwf	ETH_ReadBlock@length,c
 11276  0130FA  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
 11277                           
 11278                           ;tcpv4.c: 498: currentTCB = (0);
 11279  0130FE  0E00               	movlw	0
 11280  013100  6E3B               	movwf	_currentTCB,c
 11281  013102  0E00               	movlw	0
 11282  013104  6E3C               	movwf	_currentTCB+1,c
 11283                           
 11284                           ;tcpv4.c: 501: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
 11285  013106  0102               	movlb	2	; () banked
 11286  013108  5156               	movf	(_tcpHeader+2)& (0+255),w,b
 11287  01310A  1157               	iorwf	(_tcpHeader+3)& (0+255),w,b
 11288  01310C  B4D8               	btfsc	status,2,c
 11289  01310E  0012               	return	
 11290                           
 11291                           ; BSR set to: 2
 11292  013110  5154               	movf	_tcpHeader& (0+255),w,b
 11293  013112  1155               	iorwf	(_tcpHeader+1)& (0+255),w,b
 11294  013114  B4D8               	btfsc	status,2,c
 11295  013116  0012               	return	
 11296                           
 11297                           ; BSR set to: 2
 11298                           ;tcpv4.c: 502: {
 11299                           ;tcpv4.c: 503: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
 11300  013118  5154               	movf	_tcpHeader& (0+255),w,b
 11301  01311A  0101               	movlb	1	; () banked
 11302  01311C  6F0C               	movwf	(??_TCP_Recv+1)& (0+255),b
 11303  01311E  6B0B               	clrf	??_TCP_Recv& (0+255),b
 11304  013120  C254  F10D         	movff	_tcpHeader,??_TCP_Recv+2
 11305  013124  C255  F10E         	movff	_tcpHeader+1,??_TCP_Recv+3
 11306  013128  C10E  F10D         	movff	??_TCP_Recv+3,??_TCP_Recv+2
 11307  01312C  6B0E               	clrf	(??_TCP_Recv+3)& (0+255),b
 11308  01312E  0EFF               	movlw	255
 11309  013130  170D               	andwf	(??_TCP_Recv+2)& (0+255),f,b
 11310  013132  0E00               	movlw	0
 11311  013134  170E               	andwf	(??_TCP_Recv+3)& (0+255),f,b
 11312  013136  510B               	movf	??_TCP_Recv& (0+255),w,b
 11313  013138  110D               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
 11314  01313A  0102               	movlb	2	; () banked
 11315  01313C  6F54               	movwf	_tcpHeader& (0+255),b
 11316  01313E  0101               	movlb	1	; () banked
 11317  013140  510C               	movf	(??_TCP_Recv+1)& (0+255),w,b
 11318  013142  110E               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
 11319  013144  0102               	movlb	2	; () banked
 11320  013146  6F55               	movwf	(_tcpHeader+1)& (0+255),b
 11321                           
 11322                           ; BSR set to: 2
 11323                           ;tcpv4.c: 504: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
 11324  013148  5156               	movf	(_tcpHeader+2)& (0+255),w,b
 11325  01314A  0101               	movlb	1	; () banked
 11326  01314C  6F0C               	movwf	(??_TCP_Recv+1)& (0+255),b
 11327  01314E  6B0B               	clrf	??_TCP_Recv& (0+255),b
 11328  013150  EE22  F056         	lfsr	2,_tcpHeader+2
 11329  013154  CFDE F10D          	movff	postinc2,??_TCP_Recv+2
 11330  013158  CFDD F10E          	movff	postdec2,??_TCP_Recv+3
 11331  01315C  C10E  F10D         	movff	??_TCP_Recv+3,??_TCP_Recv+2
 11332  013160  6B0E               	clrf	(??_TCP_Recv+3)& (0+255),b
 11333  013162  0EFF               	movlw	255
 11334  013164  170D               	andwf	(??_TCP_Recv+2)& (0+255),f,b
 11335  013166  0E00               	movlw	0
 11336  013168  170E               	andwf	(??_TCP_Recv+3)& (0+255),f,b
 11337  01316A  510B               	movf	??_TCP_Recv& (0+255),w,b
 11338  01316C  110D               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
 11339  01316E  0102               	movlb	2	; () banked
 11340  013170  6F56               	movwf	(_tcpHeader+2)& (0+255),b
 11341  013172  0101               	movlb	1	; () banked
 11342  013174  510C               	movf	(??_TCP_Recv+1)& (0+255),w,b
 11343  013176  110E               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
 11344  013178  0102               	movlb	2	; () banked
 11345  01317A  6F57               	movwf	(_tcpHeader+3)& (0+255),b
 11346                           
 11347                           ; BSR set to: 2
 11348                           ;tcpv4.c: 507: tcbPtr = tcbList;
 11349  01317C  C03D  F0FD         	movff	_tcbList,TCP_Recv@tcbPtr
 11350  013180  C03E  F0FE         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
 11351                           
 11352                           ;tcpv4.c: 508: while((tcbPtr != (0)) && (count < tcbListSize))
 11353  013184  D01D               	goto	l1653
 11354  013186                     
 11355                           ;tcpv4.c: 509: {
 11356                           ;tcpv4.c: 510: if (tcpHeader.destPort == tcbPtr->localPort)
 11357                           
 11358                           ; BSR set to: 2
 11359  013186  C0FD  FFD9         	movff	TCP_Recv@tcbPtr,fsr2l
 11360  01318A  C0FE  FFDA         	movff	TCP_Recv@tcbPtr+1,fsr2h
 11361  01318E  50DE               	movf	postinc2,w,c
 11362  013190  0102               	movlb	2	; () banked
 11363  013192  1956               	xorwf	(_tcpHeader+2)& (0+255),w,b
 11364  013194  E109               	bnz	l11506
 11365  013196  50DE               	movf	postinc2,w,c
 11366  013198  1957               	xorwf	(_tcpHeader+3)& (0+255),w,b
 11367  01319A  A4D8               	btfss	status,2,c
 11368  01319C  D005               	goto	l1651
 11369                           
 11370                           ; BSR set to: 2
 11371                           ;tcpv4.c: 511: {
 11372                           ;tcpv4.c: 512: currentTCB = tcbPtr;
 11373  01319E  C0FD  F03B         	movff	TCP_Recv@tcbPtr,_currentTCB
 11374  0131A2  C0FE  F03C         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
 11375                           
 11376                           ;tcpv4.c: 513: break;
 11377  0131A6  D01A               	goto	u11420
 11378  0131A8                     l1651:
 11379  0131A8                     l11506:
 11380                           
 11381                           ; BSR set to: 2
 11382                           ;tcpv4.c: 515: else
 11383                           ;tcpv4.c: 516: {
 11384                           ;tcpv4.c: 517: tcbPtr = tcbPtr->nextTCB;
 11385  0131A8  0100               	movlb	0	; () banked
 11386  0131AA  EE20 F02F          	lfsr	2,47
 11387  0131AE  51FD               	movf	TCP_Recv@tcbPtr& (0+255),w,b
 11388  0131B0  26D9               	addwf	fsr2l,f,c
 11389  0131B2  51FE               	movf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
 11390  0131B4  22DA               	addwfc	fsr2h,f,c
 11391  0131B6  CFDE F0FD          	movff	postinc2,TCP_Recv@tcbPtr
 11392  0131BA  CFDD F0FE          	movff	postdec2,TCP_Recv@tcbPtr+1
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;tcpv4.c: 518: count ++;
 11396  0131BE  2BFC               	incf	TCP_Recv@count& (0+255),f,b
 11397  0131C0                     l1653:
 11398                           
 11399                           ; BSR set to: 0
 11400                           
 11401                           ; BSR set to: 0
 11402  0131C0  0100               	movlb	0	; () banked
 11403  0131C2  51FD               	movf	TCP_Recv@tcbPtr& (0+255),w,b
 11404  0131C4  11FE               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
 11405  0131C6  B4D8               	btfsc	status,2,c
 11406  0131C8  D009               	goto	u11420
 11407                           
 11408                           ; BSR set to: 0
 11409  0131CA  51FC               	movf	TCP_Recv@count& (0+255),w,b
 11410  0131CC  0A80               	xorlw	128
 11411  0131CE  0101               	movlb	1	; () banked
 11412  0131D0  6F0B               	movwf	??_TCP_Recv& (0+255),b
 11413  0131D2  5045               	movf	_tcbListSize,w,c
 11414  0131D4  0A80               	xorlw	128
 11415  0131D6  5D0B               	subwf	??_TCP_Recv& (0+255),w,b
 11416  0131D8  A0D8               	btfss	status,0,c
 11417  0131DA  D7D5               	goto	l1650
 11418  0131DC                     u11420:
 11419                           
 11420                           ;tcpv4.c: 519: }
 11421                           ;tcpv4.c: 520: }
 11422                           ;tcpv4.c: 522: if (currentTCB != (0))
 11423                           
 11424                           ; BSR set to: 1
 11425                           
 11426                           ; BSR set to: 1
 11427  0131DC  503B               	movf	_currentTCB,w,c
 11428  0131DE  103C               	iorwf	_currentTCB+1,w,c
 11429  0131E0  B4D8               	btfsc	status,2,c
 11430  0131E2  0012               	return	
 11431                           
 11432                           ;tcpv4.c: 523: {
 11433                           ;tcpv4.c: 524: if((tcpHeader.sourcePort == currentTCB->destPort) ||
 11434                           ;tcpv4.c: 525: (currentTCB->destIP == 0))
 11435  0131E4  EE20 F006          	lfsr	2,6
 11436  0131E8  503B               	movf	_currentTCB,w,c
 11437  0131EA  26D9               	addwf	fsr2l,f,c
 11438  0131EC  503C               	movf	_currentTCB+1,w,c
 11439  0131EE  22DA               	addwfc	fsr2h,f,c
 11440  0131F0  0102               	movlb	2	; () banked
 11441  0131F2  5154               	movf	_tcpHeader& (0+255),w,b
 11442  0131F4  18DE               	xorwf	postinc2,w,c
 11443  0131F6  E104               	bnz	u11440
 11444  0131F8  5155               	movf	(_tcpHeader+1)& (0+255),w,b
 11445  0131FA  18DE               	xorwf	postinc2,w,c
 11446  0131FC  B4D8               	btfsc	status,2,c
 11447  0131FE  D00C               	goto	u11450
 11448  013200                     u11440:
 11449                           
 11450                           ; BSR set to: 2
 11451  013200  EE20 F002          	lfsr	2,2
 11452  013204  503B               	movf	_currentTCB,w,c
 11453  013206  26D9               	addwf	fsr2l,f,c
 11454  013208  503C               	movf	_currentTCB+1,w,c
 11455  01320A  22DA               	addwfc	fsr2h,f,c
 11456  01320C  50DE               	movf	postinc2,w,c
 11457  01320E  10DE               	iorwf	postinc2,w,c
 11458  013210  10DE               	iorwf	postinc2,w,c
 11459  013212  10DE               	iorwf	postinc2,w,c
 11460  013214  A4D8               	btfss	status,2,c
 11461  013216  0012               	return	
 11462  013218                     u11450:
 11463                           
 11464                           ; BSR set to: 2
 11465                           ;tcpv4.c: 526: {
 11466                           ;tcpv4.c: 529: receivedRemoteAddress = remoteAddress;
 11467  013218  C105  F22A         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
 11468  01321C  C106  F22B         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
 11469  013220  C107  F22C         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
 11470  013224  C108  F22D         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
 11471                           
 11472                           ; BSR set to: 2
 11473                           ;tcpv4.c: 530: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
 11474  013228  3960               	swapf	(_tcpHeader+12)& (0+255),w,b
 11475  01322A  0B0F               	andlw	15
 11476  01322C  0101               	movlb	1	; () banked
 11477  01322E  6F0B               	movwf	??_TCP_Recv& (0+255),b
 11478  013230  6B0C               	clrf	(??_TCP_Recv+1)& (0+255),b
 11479  013232  90D8               	bcf	status,0,c
 11480  013234  370B               	rlcf	??_TCP_Recv& (0+255),f,b
 11481  013236  370C               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
 11482  013238  90D8               	bcf	status,0,c
 11483  01323A  370B               	rlcf	??_TCP_Recv& (0+255),f,b
 11484  01323C  370C               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
 11485  01323E  1F0B               	comf	??_TCP_Recv& (0+255),f,b
 11486  013240  1F0C               	comf	(??_TCP_Recv+1)& (0+255),f,b
 11487  013242  4B0B               	infsnz	??_TCP_Recv& (0+255),f,b
 11488  013244  2B0C               	incf	(??_TCP_Recv+1)& (0+255),f,b
 11489  013246  5109               	movf	TCP_Recv@length& (0+255),w,b
 11490  013248  250B               	addwf	??_TCP_Recv& (0+255),w,b
 11491  01324A  0102               	movlb	2	; () banked
 11492  01324C  6F44               	movwf	_rcvPayloadLen& (0+255),b
 11493  01324E  0101               	movlb	1	; () banked
 11494  013250  510A               	movf	(TCP_Recv@length+1)& (0+255),w,b
 11495  013252  210C               	addwfc	(??_TCP_Recv+1)& (0+255),w,b
 11496  013254  0102               	movlb	2	; () banked
 11497  013256  6F45               	movwf	(_rcvPayloadLen+1)& (0+255),b
 11498                           
 11499                           ; BSR set to: 2
 11500                           ;tcpv4.c: 533: if (TCP_ParseTCPOptions() == 1)
 11501  013258  EC5A  F0A7         	call	_TCP_ParseTCPOptions	;wreg free
 11502  01325C  06E8               	decf	wreg,f,c
 11503  01325E  A4D8               	btfss	status,2,c
 11504  013260  0012               	return	
 11505                           
 11506                           ;tcpv4.c: 534: {
 11507                           ;tcpv4.c: 537: if(tcpHeader.syn)
 11508  013262  0102               	movlb	2	; () banked
 11509  013264  A361               	btfss	(_tcpHeader+13)& (0+255),1,b
 11510  013266  D012               	goto	l1661
 11511                           
 11512                           ; BSR set to: 2
 11513                           ;tcpv4.c: 538: {
 11514                           ;tcpv4.c: 539: if(tcpHeader.ack)
 11515  013268  A961               	btfss	(_tcpHeader+13)& (0+255),4,b
 11516  01326A  D008               	goto	l1662
 11517                           
 11518                           ; BSR set to: 2
 11519                           ;tcpv4.c: 540: {
 11520                           ;tcpv4.c: 541: currentTCB->connectionEvent = RCV_SYNACK;
 11521  01326C  EE20 F02E          	lfsr	2,46
 11522  013270  503B               	movf	_currentTCB,w,c
 11523  013272  26D9               	addwf	fsr2l,f,c
 11524  013274  503C               	movf	_currentTCB+1,w,c
 11525  013276  22DA               	addwfc	fsr2h,f,c
 11526  013278  0E05               	movlw	5
 11527  01327A  D039               	goto	L9
 11528  01327C                     l1662:
 11529                           
 11530                           ; BSR set to: 2
 11531                           ;tcpv4.c: 543: {
 11532                           ;tcpv4.c: 544: currentTCB->connectionEvent = RCV_SYN;
 11533                           
 11534                           ; BSR set to: 2
 11535  01327C  EE20 F02E          	lfsr	2,46
 11536  013280  503B               	movf	_currentTCB,w,c
 11537  013282  26D9               	addwf	fsr2l,f,c
 11538  013284  503C               	movf	_currentTCB+1,w,c
 11539  013286  22DA               	addwfc	fsr2h,f,c
 11540  013288  0E03               	movlw	3
 11541  01328A  D031               	goto	L9
 11542  01328C                     l1661:
 11543                           
 11544                           ; BSR set to: 2
 11545  01328C  A161               	btfss	(_tcpHeader+13)& (0+255),0,b
 11546  01328E  D012               	goto	l1665
 11547                           
 11548                           ; BSR set to: 2
 11549                           ;tcpv4.c: 547: {
 11550                           ;tcpv4.c: 548: if(tcpHeader.ack)
 11551  013290  A961               	btfss	(_tcpHeader+13)& (0+255),4,b
 11552  013292  D008               	goto	l1666
 11553                           
 11554                           ; BSR set to: 2
 11555                           ;tcpv4.c: 549: {
 11556                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
 11557  013294  EE20 F02E          	lfsr	2,46
 11558  013298  503B               	movf	_currentTCB,w,c
 11559  01329A  26D9               	addwf	fsr2l,f,c
 11560  01329C  503C               	movf	_currentTCB+1,w,c
 11561  01329E  22DA               	addwfc	fsr2h,f,c
 11562  0132A0  0E07               	movlw	7
 11563  0132A2  D025               	goto	L9
 11564  0132A4                     l1666:
 11565                           
 11566                           ; BSR set to: 2
 11567                           ;tcpv4.c: 552: {
 11568                           ;tcpv4.c: 553: currentTCB->connectionEvent = RCV_FIN;
 11569                           
 11570                           ; BSR set to: 2
 11571  0132A4  EE20 F02E          	lfsr	2,46
 11572  0132A8  503B               	movf	_currentTCB,w,c
 11573  0132AA  26D9               	addwf	fsr2l,f,c
 11574  0132AC  503C               	movf	_currentTCB+1,w,c
 11575  0132AE  22DA               	addwfc	fsr2h,f,c
 11576  0132B0  0E06               	movlw	6
 11577  0132B2  D01D               	goto	L9
 11578  0132B4                     l1665:
 11579                           
 11580                           ; BSR set to: 2
 11581  0132B4  A561               	btfss	(_tcpHeader+13)& (0+255),2,b
 11582  0132B6  D012               	goto	l1669
 11583                           
 11584                           ; BSR set to: 2
 11585                           ;tcpv4.c: 556: {
 11586                           ;tcpv4.c: 557: if(tcpHeader.ack)
 11587  0132B8  A961               	btfss	(_tcpHeader+13)& (0+255),4,b
 11588  0132BA  D008               	goto	l1670
 11589                           
 11590                           ; BSR set to: 2
 11591                           ;tcpv4.c: 558: {
 11592                           ;tcpv4.c: 559: currentTCB->connectionEvent = RCV_RSTACK;
 11593  0132BC  EE20 F02E          	lfsr	2,46
 11594  0132C0  503B               	movf	_currentTCB,w,c
 11595  0132C2  26D9               	addwf	fsr2l,f,c
 11596  0132C4  503C               	movf	_currentTCB+1,w,c
 11597  0132C6  22DA               	addwfc	fsr2h,f,c
 11598  0132C8  0E0A               	movlw	10
 11599  0132CA  D011               	goto	L9
 11600  0132CC                     l1670:
 11601                           
 11602                           ; BSR set to: 2
 11603                           ;tcpv4.c: 561: {
 11604                           ;tcpv4.c: 562: currentTCB->connectionEvent = RCV_RST;
 11605                           
 11606                           ; BSR set to: 2
 11607  0132CC  EE20 F02E          	lfsr	2,46
 11608  0132D0  503B               	movf	_currentTCB,w,c
 11609  0132D2  26D9               	addwf	fsr2l,f,c
 11610  0132D4  503C               	movf	_currentTCB+1,w,c
 11611  0132D6  22DA               	addwfc	fsr2h,f,c
 11612  0132D8  0E09               	movlw	9
 11613  0132DA  D009               	goto	L9
 11614  0132DC                     l1669:
 11615                           
 11616                           ; BSR set to: 2
 11617  0132DC  A961               	btfss	(_tcpHeader+13)& (0+255),4,b
 11618  0132DE  D008               	goto	l1673
 11619                           
 11620                           ; BSR set to: 2
 11621                           ;tcpv4.c: 565: {
 11622                           ;tcpv4.c: 566: currentTCB->connectionEvent = RCV_ACK;
 11623  0132E0  EE20 F02E          	lfsr	2,46
 11624  0132E4  503B               	movf	_currentTCB,w,c
 11625  0132E6  26D9               	addwf	fsr2l,f,c
 11626  0132E8  503C               	movf	_currentTCB+1,w,c
 11627  0132EA  22DA               	addwfc	fsr2h,f,c
 11628  0132EC  0E04               	movlw	4
 11629  0132EE                     L9:
 11630  0132EE  6EDF               	movwf	indf2,c
 11631  0132F0                     l1673:
 11632                           
 11633                           ; BSR set to: 2
 11634                           ;tcpv4.c: 570: }
 11635                           ;tcpv4.c: 572: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
 11636                           
 11637                           ; BSR set to: 2
 11638                           
 11639                           ; BSR set to: 2
 11640                           
 11641                           ; BSR set to: 2
 11642                           
 11643                           ; BSR set to: 2
 11644                           
 11645                           ;tcpv4.c: 568: else
 11646                           ;tcpv4.c: 569: {
 11647                           
 11648                           ; BSR set to: 2
 11649  0132F0  0EFF               	movlw	255
 11650  0132F2  155C               	andwf	(_tcpHeader+8)& (0+255),w,b
 11651  0132F4  0101               	movlb	1	; () banked
 11652  0132F6  6F0B               	movwf	??_TCP_Recv& (0+255),b
 11653  0132F8  0E00               	movlw	0
 11654  0132FA  0102               	movlb	2	; () banked
 11655  0132FC  155D               	andwf	(_tcpHeader+9)& (0+255),w,b
 11656  0132FE  0101               	movlb	1	; () banked
 11657  013300  6F0C               	movwf	(??_TCP_Recv+1)& (0+255),b
 11658  013302  0E00               	movlw	0
 11659  013304  0102               	movlb	2	; () banked
 11660  013306  155E               	andwf	(_tcpHeader+10)& (0+255),w,b
 11661  013308  0101               	movlb	1	; () banked
 11662  01330A  6F0D               	movwf	(??_TCP_Recv+2)& (0+255),b
 11663  01330C  0E00               	movlw	0
 11664  01330E  0102               	movlb	2	; () banked
 11665  013310  155F               	andwf	(_tcpHeader+11)& (0+255),w,b
 11666  013312  0101               	movlb	1	; () banked
 11667  013314  6F0E               	movwf	(??_TCP_Recv+3)& (0+255),b
 11668  013316  C10B  F10E         	movff	??_TCP_Recv,??_TCP_Recv+3
 11669  01331A  6B0D               	clrf	(??_TCP_Recv+2)& (0+255),b
 11670  01331C  6B0C               	clrf	(??_TCP_Recv+1)& (0+255),b
 11671  01331E  6B0B               	clrf	??_TCP_Recv& (0+255),b
 11672  013320  EE22  F05C         	lfsr	2,_tcpHeader+8
 11673  013324  0E00               	movlw	0
 11674  013326  14DE               	andwf	postinc2,w,c
 11675  013328  6F0F               	movwf	(??_TCP_Recv+4)& (0+255),b
 11676  01332A  0EFF               	movlw	255
 11677  01332C  14DE               	andwf	postinc2,w,c
 11678  01332E  6F10               	movwf	(??_TCP_Recv+5)& (0+255),b
 11679  013330  0E00               	movlw	0
 11680  013332  14DE               	andwf	postinc2,w,c
 11681  013334  6F11               	movwf	(??_TCP_Recv+6)& (0+255),b
 11682  013336  0E00               	movlw	0
 11683  013338  14DE               	andwf	postinc2,w,c
 11684  01333A  6F12               	movwf	(??_TCP_Recv+7)& (0+255),b
 11685  01333C  C111  F112         	movff	??_TCP_Recv+6,??_TCP_Recv+7
 11686  013340  C110  F111         	movff	??_TCP_Recv+5,??_TCP_Recv+6
 11687  013344  C10F  F110         	movff	??_TCP_Recv+4,??_TCP_Recv+5
 11688  013348  6B0F               	clrf	(??_TCP_Recv+4)& (0+255),b
 11689  01334A  C25C  F113         	movff	_tcpHeader+8,??_TCP_Recv+8
 11690  01334E  C25D  F114         	movff	_tcpHeader+9,??_TCP_Recv+9
 11691  013352  C25E  F115         	movff	_tcpHeader+10,??_TCP_Recv+10
 11692  013356  C25F  F116         	movff	_tcpHeader+11,??_TCP_Recv+11
 11693  01335A  C114  F113         	movff	??_TCP_Recv+9,??_TCP_Recv+8
 11694  01335E  C115  F114         	movff	??_TCP_Recv+10,??_TCP_Recv+9
 11695  013362  C116  F115         	movff	??_TCP_Recv+11,??_TCP_Recv+10
 11696  013366  6B16               	clrf	(??_TCP_Recv+11)& (0+255),b
 11697  013368  0E00               	movlw	0
 11698  01336A  1513               	andwf	(??_TCP_Recv+8)& (0+255),w,b
 11699  01336C  6F17               	movwf	(??_TCP_Recv+12)& (0+255),b
 11700  01336E  0EFF               	movlw	255
 11701  013370  1514               	andwf	(??_TCP_Recv+9)& (0+255),w,b
 11702  013372  6F18               	movwf	(??_TCP_Recv+13)& (0+255),b
 11703  013374  0E00               	movlw	0
 11704  013376  1515               	andwf	(??_TCP_Recv+10)& (0+255),w,b
 11705  013378  6F19               	movwf	(??_TCP_Recv+14)& (0+255),b
 11706  01337A  0E00               	movlw	0
 11707  01337C  1516               	andwf	(??_TCP_Recv+11)& (0+255),w,b
 11708  01337E  6F1A               	movwf	(??_TCP_Recv+15)& (0+255),b
 11709  013380  EE22  F05C         	lfsr	2,_tcpHeader+8
 11710  013384  0E00               	movlw	0
 11711  013386  14DE               	andwf	postinc2,w,c
 11712  013388  6F1B               	movwf	(??_TCP_Recv+16)& (0+255),b
 11713  01338A  0E00               	movlw	0
 11714  01338C  14DE               	andwf	postinc2,w,c
 11715  01338E  6F1C               	movwf	(??_TCP_Recv+17)& (0+255),b
 11716  013390  0E00               	movlw	0
 11717  013392  14DE               	andwf	postinc2,w,c
 11718  013394  6F1D               	movwf	(??_TCP_Recv+18)& (0+255),b
 11719  013396  0EFF               	movlw	255
 11720  013398  14DE               	andwf	postinc2,w,c
 11721  01339A  6F1E               	movwf	(??_TCP_Recv+19)& (0+255),b
 11722  01339C  0E19               	movlw	25
 11723  01339E  D005               	goto	u11540
 11724  0133A0                     u11545:
 11725  0133A0  90D8               	bcf	status,0,c
 11726  0133A2  331E               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
 11727  0133A4  331D               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
 11728  0133A6  331C               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
 11729  0133A8  331B               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
 11730  0133AA                     u11540:
 11731  0133AA  2EE8               	decfsz	wreg,f,c
 11732  0133AC  D7F9               	goto	u11545
 11733  0133AE  5117               	movf	(??_TCP_Recv+12)& (0+255),w,b
 11734  0133B0  111B               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
 11735  0133B2  6F1F               	movwf	(??_TCP_Recv+20)& (0+255),b
 11736  0133B4  5118               	movf	(??_TCP_Recv+13)& (0+255),w,b
 11737  0133B6  111C               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
 11738  0133B8  6F20               	movwf	(??_TCP_Recv+21)& (0+255),b
 11739  0133BA  5119               	movf	(??_TCP_Recv+14)& (0+255),w,b
 11740  0133BC  111D               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
 11741  0133BE  6F21               	movwf	(??_TCP_Recv+22)& (0+255),b
 11742  0133C0  511A               	movf	(??_TCP_Recv+15)& (0+255),w,b
 11743  0133C2  111E               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
 11744  0133C4  6F22               	movwf	(??_TCP_Recv+23)& (0+255),b
 11745  0133C6  510F               	movf	(??_TCP_Recv+4)& (0+255),w,b
 11746  0133C8  111F               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
 11747  0133CA  6F23               	movwf	(??_TCP_Recv+24)& (0+255),b
 11748  0133CC  5110               	movf	(??_TCP_Recv+5)& (0+255),w,b
 11749  0133CE  1120               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
 11750  0133D0  6F24               	movwf	(??_TCP_Recv+25)& (0+255),b
 11751  0133D2  5111               	movf	(??_TCP_Recv+6)& (0+255),w,b
 11752  0133D4  1121               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
 11753  0133D6  6F25               	movwf	(??_TCP_Recv+26)& (0+255),b
 11754  0133D8  5112               	movf	(??_TCP_Recv+7)& (0+255),w,b
 11755  0133DA  1122               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
 11756  0133DC  6F26               	movwf	(??_TCP_Recv+27)& (0+255),b
 11757  0133DE  510B               	movf	??_TCP_Recv& (0+255),w,b
 11758  0133E0  1123               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
 11759  0133E2  0102               	movlb	2	; () banked
 11760  0133E4  6F5C               	movwf	(_tcpHeader+8)& (0+255),b
 11761  0133E6  0101               	movlb	1	; () banked
 11762  0133E8  510C               	movf	(??_TCP_Recv+1)& (0+255),w,b
 11763  0133EA  1124               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
 11764  0133EC  0102               	movlb	2	; () banked
 11765  0133EE  6F5D               	movwf	(_tcpHeader+9)& (0+255),b
 11766  0133F0  0101               	movlb	1	; () banked
 11767  0133F2  510D               	movf	(??_TCP_Recv+2)& (0+255),w,b
 11768  0133F4  1125               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
 11769  0133F6  0102               	movlb	2	; () banked
 11770  0133F8  6F5E               	movwf	(_tcpHeader+10)& (0+255),b
 11771  0133FA  0101               	movlb	1	; () banked
 11772  0133FC  510E               	movf	(??_TCP_Recv+3)& (0+255),w,b
 11773  0133FE  1126               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
 11774  013400  0102               	movlb	2	; () banked
 11775  013402  6F5F               	movwf	(_tcpHeader+11)& (0+255),b
 11776                           
 11777                           ;tcpv4.c: 573: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
 11778  013404  0EFF               	movlw	255
 11779  013406  1558               	andwf	(_tcpHeader+4)& (0+255),w,b
 11780  013408  0101               	movlb	1	; () banked
 11781  01340A  6F0B               	movwf	??_TCP_Recv& (0+255),b
 11782  01340C  0E00               	movlw	0
 11783  01340E  0102               	movlb	2	; () banked
 11784  013410  1559               	andwf	(_tcpHeader+5)& (0+255),w,b
 11785  013412  0101               	movlb	1	; () banked
 11786  013414  6F0C               	movwf	(??_TCP_Recv+1)& (0+255),b
 11787  013416  0E00               	movlw	0
 11788  013418  0102               	movlb	2	; () banked
 11789  01341A  155A               	andwf	(_tcpHeader+6)& (0+255),w,b
 11790  01341C  0101               	movlb	1	; () banked
 11791  01341E  6F0D               	movwf	(??_TCP_Recv+2)& (0+255),b
 11792  013420  0E00               	movlw	0
 11793  013422  0102               	movlb	2	; () banked
 11794  013424  155B               	andwf	(_tcpHeader+7)& (0+255),w,b
 11795  013426  0101               	movlb	1	; () banked
 11796  013428  6F0E               	movwf	(??_TCP_Recv+3)& (0+255),b
 11797  01342A  C10B  F10E         	movff	??_TCP_Recv,??_TCP_Recv+3
 11798  01342E  6B0D               	clrf	(??_TCP_Recv+2)& (0+255),b
 11799  013430  6B0C               	clrf	(??_TCP_Recv+1)& (0+255),b
 11800  013432  6B0B               	clrf	??_TCP_Recv& (0+255),b
 11801  013434  EE22  F058         	lfsr	2,_tcpHeader+4
 11802  013438  0E00               	movlw	0
 11803  01343A  14DE               	andwf	postinc2,w,c
 11804  01343C  6F0F               	movwf	(??_TCP_Recv+4)& (0+255),b
 11805  01343E  0EFF               	movlw	255
 11806  013440  14DE               	andwf	postinc2,w,c
 11807  013442  6F10               	movwf	(??_TCP_Recv+5)& (0+255),b
 11808  013444  0E00               	movlw	0
 11809  013446  14DE               	andwf	postinc2,w,c
 11810  013448  6F11               	movwf	(??_TCP_Recv+6)& (0+255),b
 11811  01344A  0E00               	movlw	0
 11812  01344C  14DE               	andwf	postinc2,w,c
 11813  01344E  6F12               	movwf	(??_TCP_Recv+7)& (0+255),b
 11814  013450  C111  F112         	movff	??_TCP_Recv+6,??_TCP_Recv+7
 11815  013454  C110  F111         	movff	??_TCP_Recv+5,??_TCP_Recv+6
 11816  013458  C10F  F110         	movff	??_TCP_Recv+4,??_TCP_Recv+5
 11817  01345C  6B0F               	clrf	(??_TCP_Recv+4)& (0+255),b
 11818  01345E  C258  F113         	movff	_tcpHeader+4,??_TCP_Recv+8
 11819  013462  C259  F114         	movff	_tcpHeader+5,??_TCP_Recv+9
 11820  013466  C25A  F115         	movff	_tcpHeader+6,??_TCP_Recv+10
 11821  01346A  C25B  F116         	movff	_tcpHeader+7,??_TCP_Recv+11
 11822  01346E  C114  F113         	movff	??_TCP_Recv+9,??_TCP_Recv+8
 11823  013472  C115  F114         	movff	??_TCP_Recv+10,??_TCP_Recv+9
 11824  013476  C116  F115         	movff	??_TCP_Recv+11,??_TCP_Recv+10
 11825  01347A  6B16               	clrf	(??_TCP_Recv+11)& (0+255),b
 11826  01347C  0E00               	movlw	0
 11827  01347E  1513               	andwf	(??_TCP_Recv+8)& (0+255),w,b
 11828  013480  6F17               	movwf	(??_TCP_Recv+12)& (0+255),b
 11829  013482  0EFF               	movlw	255
 11830  013484  1514               	andwf	(??_TCP_Recv+9)& (0+255),w,b
 11831  013486  6F18               	movwf	(??_TCP_Recv+13)& (0+255),b
 11832  013488  0E00               	movlw	0
 11833  01348A  1515               	andwf	(??_TCP_Recv+10)& (0+255),w,b
 11834  01348C  6F19               	movwf	(??_TCP_Recv+14)& (0+255),b
 11835  01348E  0E00               	movlw	0
 11836  013490  1516               	andwf	(??_TCP_Recv+11)& (0+255),w,b
 11837  013492  6F1A               	movwf	(??_TCP_Recv+15)& (0+255),b
 11838  013494  EE22  F058         	lfsr	2,_tcpHeader+4
 11839  013498  0E00               	movlw	0
 11840  01349A  14DE               	andwf	postinc2,w,c
 11841  01349C  6F1B               	movwf	(??_TCP_Recv+16)& (0+255),b
 11842  01349E  0E00               	movlw	0
 11843  0134A0  14DE               	andwf	postinc2,w,c
 11844  0134A2  6F1C               	movwf	(??_TCP_Recv+17)& (0+255),b
 11845  0134A4  0E00               	movlw	0
 11846  0134A6  14DE               	andwf	postinc2,w,c
 11847  0134A8  6F1D               	movwf	(??_TCP_Recv+18)& (0+255),b
 11848  0134AA  0EFF               	movlw	255
 11849  0134AC  14DE               	andwf	postinc2,w,c
 11850  0134AE  6F1E               	movwf	(??_TCP_Recv+19)& (0+255),b
 11851  0134B0  0E19               	movlw	25
 11852  0134B2  D005               	goto	u11550
 11853  0134B4                     u11555:
 11854  0134B4  90D8               	bcf	status,0,c
 11855  0134B6  331E               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
 11856  0134B8  331D               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
 11857  0134BA  331C               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
 11858  0134BC  331B               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
 11859  0134BE                     u11550:
 11860  0134BE  2EE8               	decfsz	wreg,f,c
 11861  0134C0  D7F9               	goto	u11555
 11862  0134C2  5117               	movf	(??_TCP_Recv+12)& (0+255),w,b
 11863  0134C4  111B               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
 11864  0134C6  6F1F               	movwf	(??_TCP_Recv+20)& (0+255),b
 11865  0134C8  5118               	movf	(??_TCP_Recv+13)& (0+255),w,b
 11866  0134CA  111C               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
 11867  0134CC  6F20               	movwf	(??_TCP_Recv+21)& (0+255),b
 11868  0134CE  5119               	movf	(??_TCP_Recv+14)& (0+255),w,b
 11869  0134D0  111D               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
 11870  0134D2  6F21               	movwf	(??_TCP_Recv+22)& (0+255),b
 11871  0134D4  511A               	movf	(??_TCP_Recv+15)& (0+255),w,b
 11872  0134D6  111E               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
 11873  0134D8  6F22               	movwf	(??_TCP_Recv+23)& (0+255),b
 11874  0134DA  510F               	movf	(??_TCP_Recv+4)& (0+255),w,b
 11875  0134DC  111F               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
 11876  0134DE  6F23               	movwf	(??_TCP_Recv+24)& (0+255),b
 11877  0134E0  5110               	movf	(??_TCP_Recv+5)& (0+255),w,b
 11878  0134E2  1120               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
 11879  0134E4  6F24               	movwf	(??_TCP_Recv+25)& (0+255),b
 11880  0134E6  5111               	movf	(??_TCP_Recv+6)& (0+255),w,b
 11881  0134E8  1121               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
 11882  0134EA  6F25               	movwf	(??_TCP_Recv+26)& (0+255),b
 11883  0134EC  5112               	movf	(??_TCP_Recv+7)& (0+255),w,b
 11884  0134EE  1122               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
 11885  0134F0  6F26               	movwf	(??_TCP_Recv+27)& (0+255),b
 11886  0134F2  510B               	movf	??_TCP_Recv& (0+255),w,b
 11887  0134F4  1123               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
 11888  0134F6  0102               	movlb	2	; () banked
 11889  0134F8  6F58               	movwf	(_tcpHeader+4)& (0+255),b
 11890  0134FA  0101               	movlb	1	; () banked
 11891  0134FC  510C               	movf	(??_TCP_Recv+1)& (0+255),w,b
 11892  0134FE  1124               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
 11893  013500  0102               	movlb	2	; () banked
 11894  013502  6F59               	movwf	(_tcpHeader+5)& (0+255),b
 11895  013504  0101               	movlb	1	; () banked
 11896  013506  510D               	movf	(??_TCP_Recv+2)& (0+255),w,b
 11897  013508  1125               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
 11898  01350A  0102               	movlb	2	; () banked
 11899  01350C  6F5A               	movwf	(_tcpHeader+6)& (0+255),b
 11900  01350E  0101               	movlb	1	; () banked
 11901  013510  510E               	movf	(??_TCP_Recv+3)& (0+255),w,b
 11902  013512  1126               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
 11903  013514  0102               	movlb	2	; () banked
 11904  013516  6F5B               	movwf	(_tcpHeader+7)& (0+255),b
 11905                           
 11906                           ; BSR set to: 2
 11907                           ;tcpv4.c: 575: TCP_FiniteStateMachine();
 11908  013518  EC00  F080         	call	_TCP_FiniteStateMachine	;wreg free
 11909                           
 11910                           ;tcpv4.c: 577: {
 11911                           
 11912                           ;tcpv4.c: 576: }else
 11913  01351C  0012               	return	
 11914  01351E                     __end_of_TCP_Recv:
 11915                           	opt stack 0
 11916                           tosu	equ	0xFFF
 11917                           tosh	equ	0xFFE
 11918                           tosl	equ	0xFFD
 11919                           pclath	equ	0xFFA
 11920                           tblptru	equ	0xFF8
 11921                           tblptrh	equ	0xFF7
 11922                           tblptrl	equ	0xFF6
 11923                           tablat	equ	0xFF5
 11924                           prodh	equ	0xFF4
 11925                           prodl	equ	0xFF3
 11926                           intcon	equ	0xFF2
 11927                           indf0	equ	0xFEF
 11928                           postinc0	equ	0xFEE
 11929                           fsr0h	equ	0xFEA
 11930                           fsr0l	equ	0xFE9
 11931                           wreg	equ	0xFE8
 11932                           indf1	equ	0xFE7
 11933                           postinc1	equ	0xFE6
 11934                           postdec1	equ	0xFE5
 11935                           plusw1	equ	0xFE3
 11936                           fsr1h	equ	0xFE2
 11937                           fsr1l	equ	0xFE1
 11938                           indf2	equ	0xFDF
 11939                           postinc2	equ	0xFDE
 11940                           postdec2	equ	0xFDD
 11941                           plusw2	equ	0xFDB
 11942                           fsr2h	equ	0xFDA
 11943                           fsr2l	equ	0xFD9
 11944                           status	equ	0xFD8
 11945                           
 11946 ;; *************** function _TCP_ParseTCPOptions *****************
 11947 ;; Defined at:
 11948 ;;		line 362 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 11949 ;; Parameters:    Size  Location     Type
 11950 ;;		None
 11951 ;; Auto vars:     Size  Location     Type
 11952 ;;  tcpOptionsSi    2   26[COMRAM] unsigned int 
 11953 ;;  opt             1   25[COMRAM] unsigned char 
 11954 ;;  ret             1   24[COMRAM] unsigned char 
 11955 ;; Return value:  Size  Location     Type
 11956 ;;                  1    wreg      unsigned char 
 11957 ;; Registers used:
 11958 ;;		wreg, status,2, status,0, cstack
 11959 ;; Tracked objects:
 11960 ;;		On entry : 0/0
 11961 ;;		On exit  : 0/0
 11962 ;;		Unchanged: 0/0
 11963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11966 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11967 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11968 ;;Total ram usage:        6 bytes
 11969 ;; Hardware stack levels used:    1
 11970 ;; Hardware stack levels required when called:    6
 11971 ;; This function calls:
 11972 ;;		_ETH_Dump
 11973 ;;		_ETH_Read16
 11974 ;;		_ETH_Read8
 11975 ;; This function is called by:
 11976 ;;		_TCP_Recv
 11977 ;; This function uses a non-reentrant model
 11978 ;;
 11979                           
 11980                           	psect	text52
 11981  014EB4                     __ptext52:
 11982                           	opt stack 0
 11983  014EB4                     _TCP_ParseTCPOptions:
 11984                           	opt stack 20
 11985                           
 11986                           ;tcpv4.c: 364: uint8_t opt;
 11987                           ;tcpv4.c: 365: uint16_t tcpOptionsSize;
 11988                           ;tcpv4.c: 366: bool ret;
 11989                           ;tcpv4.c: 368: ret = 0;
 11990                           
 11991                           ;incstack = 0
 11992  014EB4  0E00               	movlw	0
 11993  014EB6  6E19               	movwf	TCP_ParseTCPOptions@ret,c
 11994                           
 11995                           ;tcpv4.c: 370: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
 11996  014EB8  0102               	movlb	2	; () banked
 11997  014EBA  3960               	swapf	(_tcpHeader+12)& (0+255),w,b
 11998  014EBC  0B0F               	andlw	15
 11999  014EBE  6E17               	movwf	??_TCP_ParseTCPOptions& (0+255),c
 12000  014EC0  6A18               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
 12001  014EC2  90D8               	bcf	status,0,c
 12002  014EC4  3617               	rlcf	??_TCP_ParseTCPOptions,f,c
 12003  014EC6  3618               	rlcf	??_TCP_ParseTCPOptions+1,f,c
 12004  014EC8  90D8               	bcf	status,0,c
 12005  014ECA  3617               	rlcf	??_TCP_ParseTCPOptions,f,c
 12006  014ECC  3618               	rlcf	??_TCP_ParseTCPOptions+1,f,c
 12007  014ECE  0EEC               	movlw	236
 12008  014ED0  2417               	addwf	??_TCP_ParseTCPOptions,w,c
 12009  014ED2  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 12010  014ED4  0EFF               	movlw	255
 12011  014ED6  2018               	addwfc	??_TCP_ParseTCPOptions+1,w,c
 12012  014ED8  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 12013                           
 12014                           ; BSR set to: 2
 12015                           ;tcpv4.c: 372: if (tcpOptionsSize > 0)
 12016  014EDA  501B               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 12017  014EDC  101C               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 12018  014EDE  B4D8               	btfsc	status,2,c
 12019  014EE0  D089               	goto	l1622
 12020                           
 12021                           ; BSR set to: 2
 12022                           ;tcpv4.c: 373: {
 12023                           ;tcpv4.c: 376: tcpMss = 536;
 12024  014EE2  0E02               	movlw	2
 12025  014EE4  6E4C               	movwf	_tcpMss+1,c
 12026  014EE6  0E18               	movlw	24
 12027  014EE8  6E4B               	movwf	_tcpMss,c
 12028                           
 12029                           ; BSR set to: 2
 12030                           ;tcpv4.c: 378: if(tcpHeader.syn)
 12031  014EEA  B361               	btfsc	(_tcpHeader+13)& (0+255),1,b
 12032  014EEC  D074               	goto	l1629
 12033  014EEE  D07C               	goto	l1623
 12034  014EF0                     
 12035                           ;tcpv4.c: 382: {
 12036                           ;tcpv4.c: 383: opt = ETH_Read8();
 12037                           
 12038                           ; BSR set to: 2
 12039  014EF0  EC4C  F0B4         	call	_ETH_Read8	;wreg free
 12040  014EF4  6E1A               	movwf	TCP_ParseTCPOptions@opt,c
 12041                           
 12042                           ;tcpv4.c: 384: switch (opt)
 12043  014EF6  D064               	goto	l1626
 12044  014EF8                     
 12045                           ;tcpv4.c: 388: if (tcpOptionsSize)
 12046  014EF8  501B               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 12047  014EFA  101C               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 12048  014EFC  B4D8               	btfsc	status,2,c
 12049  014EFE  D058               	goto	l10740
 12050                           
 12051                           ;tcpv4.c: 389: {
 12052                           ;tcpv4.c: 391: ETH_Dump(tcpOptionsSize);
 12053  014F00  C01B  F013         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
 12054  014F04  C01C  F014         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
 12055  014F08  EC71  F0B3         	call	_ETH_Dump	;wreg free
 12056                           
 12057                           ;tcpv4.c: 392: tcpOptionsSize = 0;
 12058  014F0C  0E00               	movlw	0
 12059  014F0E  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 12060  014F10  0E00               	movlw	0
 12061  014F12  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 12062  014F14  D04D               	goto	l10740
 12063  014F16                     
 12064                           ;tcpv4.c: 400: if (tcpOptionsSize >= 3)
 12065  014F16  501C               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 12066  014F18  E104               	bnz	u10400
 12067  014F1A  0E03               	movlw	3
 12068  014F1C  5C1B               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 12069  014F1E  A0D8               	btfss	status,0,c
 12070  014F20  D049               	goto	l1638
 12071  014F22                     u10400:
 12072                           
 12073                           ;tcpv4.c: 401: {
 12074                           ;tcpv4.c: 402: opt = ETH_Read8();
 12075  014F22  EC4C  F0B4         	call	_ETH_Read8	;wreg free
 12076  014F26  6E1A               	movwf	TCP_ParseTCPOptions@opt,c
 12077                           
 12078                           ;tcpv4.c: 403: if (opt == 0x04)
 12079  014F28  0E04               	movlw	4
 12080  014F2A  181A               	xorwf	TCP_ParseTCPOptions@opt,w,c
 12081  014F2C  A4D8               	btfss	status,2,c
 12082  014F2E  D042               	goto	l1638
 12083                           
 12084                           ;tcpv4.c: 404: {
 12085                           ;tcpv4.c: 406: tcpMss = ETH_Read16();
 12086  014F30  EC7D  F0B2         	call	_ETH_Read16	;wreg free
 12087  014F34  C013  F04B         	movff	?_ETH_Read16,_tcpMss
 12088  014F38  C014  F04C         	movff	?_ETH_Read16+1,_tcpMss+1
 12089                           
 12090                           ;tcpv4.c: 408: tcpOptionsSize = tcpOptionsSize - 3;
 12091  014F3C  0EFD               	movlw	253
 12092  014F3E  241B               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 12093  014F40  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 12094  014F42  0EFF               	movlw	255
 12095  014F44  201C               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 12096  014F46  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 12097                           
 12098                           ;tcpv4.c: 411: if (tcpMss > 1460u)
 12099  014F48  0EB5               	movlw	181
 12100  014F4A  5C4B               	subwf	_tcpMss,w,c
 12101  014F4C  0E05               	movlw	5
 12102  014F4E  584C               	subwfb	_tcpMss+1,w,c
 12103  014F50  A0D8               	btfss	status,0,c
 12104  014F52  D02E               	goto	l10740
 12105                           
 12106                           ;tcpv4.c: 412: {
 12107                           ;tcpv4.c: 413: tcpMss = 1460u;
 12108  014F54  0E05               	movlw	5
 12109  014F56  6E4C               	movwf	_tcpMss+1,c
 12110  014F58  0EB4               	movlw	180
 12111  014F5A  6E4B               	movwf	_tcpMss,c
 12112  014F5C  D029               	goto	l10740
 12113  014F5E                     L10:
 12114  014F5E  6E19               	movwf	TCP_ParseTCPOptions@ret,c
 12115                           
 12116                           ;tcpv4.c: 423: }
 12117                           ;tcpv4.c: 424: }else
 12118  014F60  D03A               	goto	l1629
 12119  014F62                     
 12120                           ;tcpv4.c: 432: opt = ETH_Read8();
 12121  014F62  EC4C  F0B4         	call	_ETH_Read8	;wreg free
 12122  014F66  6E1A               	movwf	TCP_ParseTCPOptions@opt,c
 12123                           
 12124                           ;tcpv4.c: 433: tcpOptionsSize--;
 12125  014F68  061B               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
 12126  014F6A  A0D8               	btfss	status,0,c
 12127  014F6C  061C               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
 12128                           
 12129                           ;tcpv4.c: 435: if (opt > 1)
 12130  014F6E  0E01               	movlw	1
 12131  014F70  641A               	cpfsgt	TCP_ParseTCPOptions@opt,c
 12132  014F72  D020               	goto	l1638
 12133                           
 12134                           ;tcpv4.c: 436: {
 12135                           ;tcpv4.c: 438: opt = opt - 2;
 12136  014F74  501A               	movf	TCP_ParseTCPOptions@opt,w,c
 12137  014F76  0FFE               	addlw	254
 12138  014F78  6E1A               	movwf	TCP_ParseTCPOptions@opt,c
 12139                           
 12140                           ;tcpv4.c: 439: if (opt <= tcpOptionsSize)
 12141  014F7A  501A               	movf	TCP_ParseTCPOptions@opt,w,c
 12142  014F7C  6E17               	movwf	??_TCP_ParseTCPOptions& (0+255),c
 12143  014F7E  6A18               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
 12144  014F80  5017               	movf	??_TCP_ParseTCPOptions,w,c
 12145  014F82  5C1B               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 12146  014F84  5018               	movf	??_TCP_ParseTCPOptions+1,w,c
 12147  014F86  581C               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 12148  014F88  A0D8               	btfss	status,0,c
 12149  014F8A  D014               	goto	l1638
 12150                           
 12151                           ;tcpv4.c: 440: {
 12152                           ;tcpv4.c: 442: ETH_Dump(opt);
 12153  014F8C  C01A  F013         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
 12154  014F90  6A14               	clrf	ETH_Dump@length+1,c
 12155  014F92  EC71  F0B3         	call	_ETH_Dump	;wreg free
 12156                           
 12157                           ;tcpv4.c: 443: tcpOptionsSize = tcpOptionsSize - opt;
 12158  014F96  501A               	movf	TCP_ParseTCPOptions@opt,w,c
 12159  014F98  6E17               	movwf	??_TCP_ParseTCPOptions& (0+255),c
 12160  014F9A  6A18               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
 12161  014F9C  1E17               	comf	??_TCP_ParseTCPOptions,f,c
 12162  014F9E  1E18               	comf	??_TCP_ParseTCPOptions+1,f,c
 12163  014FA0  4A17               	infsnz	??_TCP_ParseTCPOptions,f,c
 12164  014FA2  2A18               	incf	??_TCP_ParseTCPOptions+1,f,c
 12165  014FA4  501B               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 12166  014FA6  2417               	addwf	??_TCP_ParseTCPOptions,w,c
 12167  014FA8  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 12168  014FAA  501C               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 12169  014FAC  2018               	addwfc	??_TCP_ParseTCPOptions+1,w,c
 12170  014FAE  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 12171  014FB0                     l10740:
 12172                           
 12173                           ;tcpv4.c: 444: ret = 1;
 12174  014FB0  0E01               	movlw	1
 12175  014FB2  D7D5               	goto	L10
 12176  014FB4                     l1638:
 12177                           
 12178                           ;tcpv4.c: 452: {
 12179                           ;tcpv4.c: 455: tcpOptionsSize = 0;
 12180  014FB4  0E00               	movlw	0
 12181  014FB6  6E1C               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
 12182  014FB8  0E00               	movlw	0
 12183  014FBA  6E1B               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
 12184                           
 12185                           ;tcpv4.c: 456: ret = 0;
 12186  014FBC  0E00               	movlw	0
 12187  014FBE  D7CF               	goto	L10
 12188  014FC0                     l1626:
 12189  014FC0  501A               	movf	TCP_ParseTCPOptions@opt,w,c
 12190                           
 12191                           ; Switch size 1, requested type "space"
 12192                           ; Number of cases is 3, Range of values is 0 to 2
 12193                           ; switch strategies available:
 12194                           ; Name         Instructions Cycles
 12195                           ; simple_byte           10     6 (average)
 12196                           ;	Chosen strategy is simple_byte
 12197  014FC2  0A00               	xorlw	0	; case 0
 12198  014FC4  B4D8               	btfsc	status,2,c
 12199  014FC6  D798               	goto	l1627
 12200  014FC8  0A01               	xorlw	1	; case 1
 12201  014FCA  B4D8               	btfsc	status,2,c
 12202  014FCC  D004               	goto	l1629
 12203  014FCE  0A03               	xorlw	3	; case 2
 12204  014FD0  B4D8               	btfsc	status,2,c
 12205  014FD2  D7A1               	goto	l1631
 12206  014FD4  D7C6               	goto	l1637
 12207  014FD6                     l1629:
 12208  014FD6  061B               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
 12209  014FD8  A0D8               	btfss	status,0,c
 12210  014FDA  061C               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
 12211  014FDC  281B               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
 12212  014FDE  E188               	bnz	l1625
 12213  014FE0  281C               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
 12214  014FE2  B4D8               	btfsc	status,2,c
 12215  014FE4  D009               	goto	l1644
 12216  014FE6  D784               	goto	l1625
 12217  014FE8                     l1623:
 12218                           
 12219                           ;tcpv4.c: 462: {
 12220                           ;tcpv4.c: 463: ETH_Dump(tcpOptionsSize);
 12221  014FE8  C01B  F013         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
 12222  014FEC  C01C  F014         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
 12223  014FF0  EC71  F0B3         	call	_ETH_Dump	;wreg free
 12224  014FF4                     l1622:
 12225                           
 12226                           ;tcpv4.c: 467: {
 12227                           ;tcpv4.c: 468: ret = 1;
 12228  014FF4  0E01               	movlw	1
 12229  014FF6  6E19               	movwf	TCP_ParseTCPOptions@ret,c
 12230  014FF8                     l1644:
 12231                           
 12232                           ;tcpv4.c: 469: }
 12233                           ;tcpv4.c: 471: return ret;
 12234  014FF8  5019               	movf	TCP_ParseTCPOptions@ret,w,c
 12235  014FFA  0012               	return	
 12236  014FFC                     __end_of_TCP_ParseTCPOptions:
 12237                           	opt stack 0
 12238                           tosu	equ	0xFFF
 12239                           tosh	equ	0xFFE
 12240                           tosl	equ	0xFFD
 12241                           pclath	equ	0xFFA
 12242                           tblptru	equ	0xFF8
 12243                           tblptrh	equ	0xFF7
 12244                           tblptrl	equ	0xFF6
 12245                           tablat	equ	0xFF5
 12246                           prodh	equ	0xFF4
 12247                           prodl	equ	0xFF3
 12248                           intcon	equ	0xFF2
 12249                           indf0	equ	0xFEF
 12250                           postinc0	equ	0xFEE
 12251                           fsr0h	equ	0xFEA
 12252                           fsr0l	equ	0xFE9
 12253                           wreg	equ	0xFE8
 12254                           indf1	equ	0xFE7
 12255                           postinc1	equ	0xFE6
 12256                           postdec1	equ	0xFE5
 12257                           plusw1	equ	0xFE3
 12258                           fsr1h	equ	0xFE2
 12259                           fsr1l	equ	0xFE1
 12260                           indf2	equ	0xFDF
 12261                           postinc2	equ	0xFDE
 12262                           postdec2	equ	0xFDD
 12263                           plusw2	equ	0xFDB
 12264                           fsr2h	equ	0xFDA
 12265                           fsr2l	equ	0xFD9
 12266                           status	equ	0xFD8
 12267                           
 12268 ;; *************** function _ETH_Read8 *****************
 12269 ;; Defined at:
 12270 ;;		line 433 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;		None
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;  ret             1   18[COMRAM] unsigned char 
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      unsigned char 
 12277 ;; Registers used:
 12278 ;;		wreg, status,2, status,0, cstack
 12279 ;; Tracked objects:
 12280 ;;		On entry : 0/0
 12281 ;;		On exit  : 0/0
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;Total ram usage:        1 bytes
 12289 ;; Hardware stack levels used:    1
 12290 ;; Hardware stack levels required when called:    5
 12291 ;; This function calls:
 12292 ;;		_ETH_EdataRead
 12293 ;; This function is called by:
 12294 ;;		_DHCP_Handler
 12295 ;;		_DNS_Handler
 12296 ;;		_TCP_ParseTCPOptions
 12297 ;;		_NTP_Handler
 12298 ;;		_udp_test
 12299 ;; This function uses a non-reentrant model
 12300 ;;
 12301                           
 12302                           	psect	text53
 12303  016898                     __ptext53:
 12304                           	opt stack 0
 12305  016898                     _ETH_Read8:
 12306                           	opt stack 20
 12307                           
 12308                           ;ETHxxJ6x_driver.c: 435: uint8_t ret = 0;
 12309                           
 12310                           ;incstack = 0
 12311  016898  0E00               	movlw	0
 12312  01689A  6E13               	movwf	ETH_Read8@ret,c
 12313                           
 12314                           ;ETHxxJ6x_driver.c: 436: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 12315  01689C  0102               	movlb	2	; () banked
 12316  01689E  513E               	movf	_rxPacketStatusVector& (0+255),w,b
 12317  0168A0  113F               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 12318  0168A2  B4D8               	btfsc	status,2,c
 12319  0168A4  D009               	goto	l552
 12320                           
 12321                           ; BSR set to: 2
 12322                           ;ETHxxJ6x_driver.c: 437: {
 12323                           ;ETHxxJ6x_driver.c: 438: ret = ETH_EdataRead();
 12324  0168A6  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 12325  0168AA  6E13               	movwf	ETH_Read8@ret,c
 12326                           
 12327                           ;ETHxxJ6x_driver.c: 439: rxPacketStatusVector.byteCount -= sizeof(ret);
 12328  0168AC  0102               	movlb	2	; () banked
 12329  0168AE  073E               	decf	_rxPacketStatusVector& (0+255),f,b
 12330  0168B0  A0D8               	btfss	status,0,c
 12331  0168B2  073F               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
 12332                           
 12333                           ; BSR set to: 2
 12334                           ;ETHxxJ6x_driver.c: 440: ethData.error = 0;
 12335  0168B4  9124               	bcf	_ethData& (0+255),0,b	;volatile
 12336                           
 12337                           ;ETHxxJ6x_driver.c: 441: }
 12338  0168B6  D001               	goto	l553
 12339  0168B8                     l552:
 12340                           
 12341                           ; BSR set to: 2
 12342                           ;ETHxxJ6x_driver.c: 442: else
 12343                           ;ETHxxJ6x_driver.c: 443: {
 12344                           ;ETHxxJ6x_driver.c: 444: ethData.error = 1;
 12345  0168B8  8124               	bsf	_ethData& (0+255),0,b	;volatile
 12346  0168BA                     l553:
 12347                           
 12348                           ; BSR set to: 2
 12349                           ;ETHxxJ6x_driver.c: 445: }
 12350                           ;ETHxxJ6x_driver.c: 446: return ret;
 12351                           
 12352                           ; BSR set to: 2
 12353  0168BA  5013               	movf	ETH_Read8@ret,w,c
 12354  0168BC  0012               	return	
 12355  0168BE                     __end_of_ETH_Read8:
 12356                           	opt stack 0
 12357                           tosu	equ	0xFFF
 12358                           tosh	equ	0xFFE
 12359                           tosl	equ	0xFFD
 12360                           pclath	equ	0xFFA
 12361                           tblptru	equ	0xFF8
 12362                           tblptrh	equ	0xFF7
 12363                           tblptrl	equ	0xFF6
 12364                           tablat	equ	0xFF5
 12365                           prodh	equ	0xFF4
 12366                           prodl	equ	0xFF3
 12367                           intcon	equ	0xFF2
 12368                           indf0	equ	0xFEF
 12369                           postinc0	equ	0xFEE
 12370                           fsr0h	equ	0xFEA
 12371                           fsr0l	equ	0xFE9
 12372                           wreg	equ	0xFE8
 12373                           indf1	equ	0xFE7
 12374                           postinc1	equ	0xFE6
 12375                           postdec1	equ	0xFE5
 12376                           plusw1	equ	0xFE3
 12377                           fsr1h	equ	0xFE2
 12378                           fsr1l	equ	0xFE1
 12379                           indf2	equ	0xFDF
 12380                           postinc2	equ	0xFDE
 12381                           postdec2	equ	0xFDD
 12382                           plusw2	equ	0xFDB
 12383                           fsr2h	equ	0xFDA
 12384                           fsr2l	equ	0xFD9
 12385                           status	equ	0xFD8
 12386                           
 12387 ;; *************** function _TCP_FiniteStateMachine *****************
 12388 ;; Defined at:
 12389 ;;		line 596 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 12390 ;; Parameters:    Size  Location     Type
 12391 ;;		None
 12392 ;; Auto vars:     Size  Location     Type
 12393 ;;  notAckBytes     2    1[BANK1 ] unsigned int 
 12394 ;;  nextState       1    4[BANK1 ] enum E663
 12395 ;;  event           1    3[BANK1 ] enum E676
 12396 ;;  ret             1    0[BANK1 ] unsigned char 
 12397 ;; Return value:  Size  Location     Type
 12398 ;;                  1    wreg      unsigned char 
 12399 ;; Registers used:
 12400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12401 ;; Tracked objects:
 12402 ;;		On entry : 0/0
 12403 ;;		On exit  : 0/0
 12404 ;;		Unchanged: 0/0
 12405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12407 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12408 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12409 ;;      Totals:         0       8       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12410 ;;Total ram usage:       13 bytes
 12411 ;; Hardware stack levels used:    1
 12412 ;; Hardware stack levels required when called:   11
 12413 ;; This function calls:
 12414 ;;		_TCB_Reset
 12415 ;;		_TCP_PayloadSave
 12416 ;;		_TCP_Snd
 12417 ;;		_isPortUnreachable
 12418 ;;		_resetPortUnreachable
 12419 ;; This function is called by:
 12420 ;;		_TCP_Recv
 12421 ;;		_TCP_Update
 12422 ;;		_TCP_Listen
 12423 ;;		_TCP_Connect
 12424 ;;		_TCP_Close
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text54
 12429  010000                     __ptext54:
 12430                           	opt stack 0
 12431  010000                     _TCP_FiniteStateMachine:
 12432                           	opt stack 17
 12433                           
 12434                           ;tcpv4.c: 598: uint16_t notAckBytes;
 12435                           ;tcpv4.c: 599: bool ret = 0;
 12436                           
 12437                           ; BSR set to: 2
 12438                           ;incstack = 0
 12439  010000  0E00               	movlw	0
 12440  010002  0101               	movlb	1	; () banked
 12441  010004  6F00               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 12442                           
 12443                           ; BSR set to: 1
 12444                           ;tcpv4.c: 601: tcp_fsm_states_t nextState = currentTCB->fsmState;
 12445  010006  EE20 F02D          	lfsr	2,45
 12446  01000A  503B               	movf	_currentTCB,w,c
 12447  01000C  26D9               	addwf	fsr2l,f,c
 12448  01000E  503C               	movf	_currentTCB+1,w,c
 12449  010010  22DA               	addwfc	fsr2h,f,c
 12450  010012  50DF               	movf	indf2,w,c
 12451  010014  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 12452                           
 12453                           ; BSR set to: 1
 12454                           ;tcpv4.c: 602: tcpEvent_t event = currentTCB->connectionEvent;
 12455  010016  EE20 F02E          	lfsr	2,46
 12456  01001A  503B               	movf	_currentTCB,w,c
 12457  01001C  26D9               	addwf	fsr2l,f,c
 12458  01001E  503C               	movf	_currentTCB+1,w,c
 12459  010020  22DA               	addwfc	fsr2h,f,c
 12460  010022  50DF               	movf	indf2,w,c
 12461  010024  6F03               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 12462                           
 12463                           ; BSR set to: 1
 12464                           ;tcpv4.c: 603: if(isPortUnreachable(currentTCB->localPort))
 12465  010026  C03B  FFD9         	movff	_currentTCB,fsr2l
 12466  01002A  C03C  FFDA         	movff	_currentTCB+1,fsr2h
 12467  01002E  CFDE F013          	movff	postinc2,isPortUnreachable@port
 12468  010032  CFDD F014          	movff	postdec2,isPortUnreachable@port+1
 12469  010036  EC00  F0B5         	call	_isPortUnreachable	;wreg free
 12470  01003A  0900               	iorlw	0
 12471  01003C  B4D8               	btfsc	status,2,c
 12472  01003E  EFC7  F089         	goto	l1680
 12473                           
 12474                           ;tcpv4.c: 604: {
 12475                           ;tcpv4.c: 605: event = RCV_RST;
 12476  010042  0E09               	movlw	9
 12477  010044  0101               	movlb	1	; () banked
 12478  010046  6F03               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 12479                           
 12480                           ; BSR set to: 1
 12481                           ;tcpv4.c: 606: resetPortUnreachable();
 12482  010048  EC6A  F0B5         	call	_resetPortUnreachable	;wreg free
 12483                           
 12484                           ;tcpv4.c: 607: }
 12485                           ;tcpv4.c: 608: switch (currentTCB->fsmState)
 12486  01004C  EFC7  F089         	goto	l1680
 12487  010050                     
 12488                           ;tcpv4.c: 616: currentTCB->destIP = receivedRemoteAddress;
 12489  010050  EE20 F002          	lfsr	2,2
 12490  010054  503B               	movf	_currentTCB,w,c
 12491  010056  26D9               	addwf	fsr2l,f,c
 12492  010058  503C               	movf	_currentTCB+1,w,c
 12493  01005A  22DA               	addwfc	fsr2h,f,c
 12494  01005C  C22A  FFDE         	movff	_receivedRemoteAddress,postinc2
 12495  010060  C22B  FFDE         	movff	_receivedRemoteAddress+1,postinc2
 12496  010064  C22C  FFDE         	movff	_receivedRemoteAddress+2,postinc2
 12497  010068  C22D  FFDE         	movff	_receivedRemoteAddress+3,postinc2
 12498                           
 12499                           ;tcpv4.c: 617: currentTCB->destPort = tcpHeader.sourcePort;
 12500  01006C  EE20 F006          	lfsr	2,6
 12501  010070  503B               	movf	_currentTCB,w,c
 12502  010072  26D9               	addwf	fsr2l,f,c
 12503  010074  503C               	movf	_currentTCB+1,w,c
 12504  010076  22DA               	addwfc	fsr2h,f,c
 12505  010078  C254  FFDE         	movff	_tcpHeader,postinc2
 12506  01007C  C255  FFDD         	movff	_tcpHeader+1,postdec2
 12507                           
 12508                           ;tcpv4.c: 620: currentTCB->localLastAck = 0;
 12509  010080  EE20 F014          	lfsr	2,20
 12510  010084  503B               	movf	_currentTCB,w,c
 12511  010086  26D9               	addwf	fsr2l,f,c
 12512  010088  503C               	movf	_currentTCB+1,w,c
 12513  01008A  22DA               	addwfc	fsr2h,f,c
 12514  01008C  6ADE               	clrf	postinc2,c
 12515  01008E  6ADE               	clrf	postinc2,c
 12516  010090  6ADE               	clrf	postinc2,c
 12517  010092  6ADD               	clrf	postdec2,c
 12518                           
 12519                           ;tcpv4.c: 622: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 12520  010094  EE22  F058         	lfsr	2,_tcpHeader+4
 12521  010098  EE10 F008          	lfsr	1,8
 12522  01009C  503B               	movf	_currentTCB,w,c
 12523  01009E  26E1               	addwf	fsr1l,f,c
 12524  0100A0  503C               	movf	_currentTCB+1,w,c
 12525  0100A2  22E2               	addwfc	fsr1h,f,c
 12526  0100A4  CFDE FFE6          	movff	postinc2,postinc1
 12527  0100A8  CFDE FFE6          	movff	postinc2,postinc1
 12528  0100AC  CFDE FFE6          	movff	postinc2,postinc1
 12529  0100B0  CFDE FFE6          	movff	postinc2,postinc1
 12530                           
 12531                           ;tcpv4.c: 623: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 12532  0100B4  EE20 F008          	lfsr	2,8
 12533  0100B8  503B               	movf	_currentTCB,w,c
 12534  0100BA  26D9               	addwf	fsr2l,f,c
 12535  0100BC  503C               	movf	_currentTCB+1,w,c
 12536  0100BE  22DA               	addwfc	fsr2h,f,c
 12537  0100C0  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 12538  0100C4  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 12539  0100C8  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 12540  0100CC  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 12541  0100D0  0E01               	movlw	1
 12542  0100D2  0100               	movlb	0	; () banked
 12543  0100D4  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 12544  0100D6  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 12545  0100D8  0E00               	movlw	0
 12546  0100DA  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 12547  0100DC  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 12548  0100DE  0E00               	movlw	0
 12549  0100E0  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12550  0100E2  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 12551  0100E4  0E00               	movlw	0
 12552  0100E6  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12553  0100E8  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 12554  0100EA  EE20 F00C          	lfsr	2,12
 12555  0100EE  503B               	movf	_currentTCB,w,c
 12556  0100F0  26D9               	addwf	fsr2l,f,c
 12557  0100F2  503C               	movf	_currentTCB+1,w,c
 12558  0100F4  22DA               	addwfc	fsr2h,f,c
 12559  0100F6  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 12560  0100FA  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 12561  0100FE  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 12562  010102  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;tcpv4.c: 626: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 12566  010106  0102               	movlb	2	; () banked
 12567  010108  5162               	movf	(_tcpHeader+14)& (0+255),w,b
 12568  01010A  0100               	movlb	0	; () banked
 12569  01010C  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12570  01010E  6BF4               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 12571  010110  EE22  F062         	lfsr	2,_tcpHeader+14
 12572  010114  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 12573  010118  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 12574  01011C  C0F7  F0F6         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 12575  010120  6BF7               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12576  010122  0EFF               	movlw	255
 12577  010124  17F6               	andwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 12578  010126  0E00               	movlw	0
 12579  010128  17F7               	andwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 12580  01012A  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 12581  01012C  13F6               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 12582  01012E  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 12583  010130  13F7               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 12584  010132  EE20 F018          	lfsr	2,24
 12585  010136  503B               	movf	_currentTCB,w,c
 12586  010138  26D9               	addwf	fsr2l,f,c
 12587  01013A  503C               	movf	_currentTCB+1,w,c
 12588  01013C  22DA               	addwfc	fsr2h,f,c
 12589  01013E  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 12590  010142  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;tcpv4.c: 627: currentTCB->mss = tcpMss;
 12594  010146  EE20 F01C          	lfsr	2,28
 12595  01014A  503B               	movf	_currentTCB,w,c
 12596  01014C  26D9               	addwf	fsr2l,f,c
 12597  01014E  503C               	movf	_currentTCB+1,w,c
 12598  010150  22DA               	addwfc	fsr2h,f,c
 12599  010152  C04B  FFDE         	movff	_tcpMss,postinc2
 12600  010156  C04C  FFDD         	movff	_tcpMss+1,postdec2
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;tcpv4.c: 630: currentTCB->flags = 0x02U | 0x10U;
 12604  01015A  EE20 F038          	lfsr	2,56
 12605  01015E  503B               	movf	_currentTCB,w,c
 12606  010160  26D9               	addwf	fsr2l,f,c
 12607  010162  503C               	movf	_currentTCB+1,w,c
 12608  010164  22DA               	addwfc	fsr2h,f,c
 12609  010166  0E12               	movlw	18
 12610  010168  6EDF               	movwf	indf2,c
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;tcpv4.c: 631: currentTCB->timeout = ((unsigned long)1*2);
 12614  01016A  EE20 F033          	lfsr	2,51
 12615  01016E  503B               	movf	_currentTCB,w,c
 12616  010170  26D9               	addwf	fsr2l,f,c
 12617  010172  503C               	movf	_currentTCB+1,w,c
 12618  010174  22DA               	addwfc	fsr2h,f,c
 12619  010176  0E02               	movlw	2
 12620  010178  6EDE               	movwf	postinc2,c
 12621  01017A  0E00               	movlw	0
 12622  01017C  6EDD               	movwf	postdec2,c
 12623                           
 12624                           ; BSR set to: 0
 12625                           ;tcpv4.c: 632: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 12626  01017E  EE20 F035          	lfsr	2,53
 12627  010182  503B               	movf	_currentTCB,w,c
 12628  010184  26D9               	addwf	fsr2l,f,c
 12629  010186  503C               	movf	_currentTCB+1,w,c
 12630  010188  22DA               	addwfc	fsr2h,f,c
 12631  01018A  0E02               	movlw	2
 12632  01018C  6EDE               	movwf	postinc2,c
 12633  01018E  0E00               	movlw	0
 12634  010190  6EDD               	movwf	postdec2,c
 12635                           
 12636                           ; BSR set to: 0
 12637                           ;tcpv4.c: 633: currentTCB->timeoutsCount = (3u);
 12638  010192  EE20 F037          	lfsr	2,55
 12639  010196  503B               	movf	_currentTCB,w,c
 12640  010198  26D9               	addwf	fsr2l,f,c
 12641  01019A  503C               	movf	_currentTCB+1,w,c
 12642  01019C  22DA               	addwfc	fsr2h,f,c
 12643  01019E  0E03               	movlw	3
 12644  0101A0  6EDF               	movwf	indf2,c
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;tcpv4.c: 635: TCP_Snd(currentTCB);
 12648  0101A2  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 12649  0101A6  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 12650  0101AA  EC61  F08D         	call	_TCP_Snd	;wreg free
 12651  0101AE  D09A               	goto	l10820
 12652  0101B0                     
 12653                           ; BSR set to: 1
 12654                           ;tcpv4.c: 639: nextState = CLOSE;
 12655                           
 12656                           ; BSR set to: 1
 12657  0101B0  0E00               	movlw	0
 12658  0101B2  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 12659                           
 12660                           ; BSR set to: 1
 12661                           ;tcpv4.c: 640: TCB_Reset(currentTCB);
 12662  0101B4  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 12663  0101B8  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 12664  0101BC  EC90  F0A8         	call	_TCB_Reset	;wreg free
 12665                           
 12666                           ;tcpv4.c: 645: }
 12667                           
 12668                           ;tcpv4.c: 644: break;
 12669                           
 12670                           ;tcpv4.c: 642: default:
 12671                           
 12672                           ;tcpv4.c: 641: break;
 12673  0101C0  EFF1  F089         	goto	l1687
 12674  0101C4  0101               	movlb	1	; () banked
 12675  0101C6  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12676                           
 12677                           ; Switch size 1, requested type "space"
 12678                           ; Number of cases is 2, Range of values is 0 to 3
 12679                           ; switch strategies available:
 12680                           ; Name         Instructions Cycles
 12681                           ; simple_byte            7     4 (average)
 12682                           ;	Chosen strategy is simple_byte
 12683  0101C8  0A00               	xorlw	0	; case 0
 12684  0101CA  B4D8               	btfsc	status,2,c
 12685  0101CC  D7F1               	goto	l1685
 12686  0101CE  0A03               	xorlw	3	; case 3
 12687  0101D0  B4D8               	btfsc	status,2,c
 12688  0101D2  D73E               	goto	l1683
 12689                           
 12690                           ; BSR set to: 1
 12691                           ;tcpv4.c: 646: break;
 12692  0101D4  EFF1  F089         	goto	l1687
 12693  0101D8                     
 12694                           ; BSR set to: 1
 12695                           ;tcpv4.c: 652: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 12696                           
 12697                           ; BSR set to: 1
 12698  0101D8  EE22  F058         	lfsr	2,_tcpHeader+4
 12699  0101DC  EE10 F008          	lfsr	1,8
 12700  0101E0  503B               	movf	_currentTCB,w,c
 12701  0101E2  26E1               	addwf	fsr1l,f,c
 12702  0101E4  503C               	movf	_currentTCB+1,w,c
 12703  0101E6  22E2               	addwfc	fsr1h,f,c
 12704  0101E8  CFDE FFE6          	movff	postinc2,postinc1
 12705  0101EC  CFDE FFE6          	movff	postinc2,postinc1
 12706  0101F0  CFDE FFE6          	movff	postinc2,postinc1
 12707  0101F4  CFDE FFE6          	movff	postinc2,postinc1
 12708                           
 12709                           ; BSR set to: 1
 12710                           ;tcpv4.c: 653: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 12711  0101F8  0E01               	movlw	1
 12712  0101FA  0102               	movlb	2	; () banked
 12713  0101FC  2558               	addwf	(_tcpHeader+4)& (0+255),w,b
 12714  0101FE  0100               	movlb	0	; () banked
 12715  010200  6FF4               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 12716  010202  0E00               	movlw	0
 12717  010204  0102               	movlb	2	; () banked
 12718  010206  2159               	addwfc	(_tcpHeader+5)& (0+255),w,b
 12719  010208  0100               	movlb	0	; () banked
 12720  01020A  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12721  01020C  0E00               	movlw	0
 12722  01020E  0102               	movlb	2	; () banked
 12723  010210  215A               	addwfc	(_tcpHeader+6)& (0+255),w,b
 12724  010212  0100               	movlb	0	; () banked
 12725  010214  6FF6               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 12726  010216  0E00               	movlw	0
 12727  010218  0102               	movlb	2	; () banked
 12728  01021A  215B               	addwfc	(_tcpHeader+7)& (0+255),w,b
 12729  01021C  0100               	movlb	0	; () banked
 12730  01021E  6FF7               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12731  010220  EE20 F00C          	lfsr	2,12
 12732  010224  503B               	movf	_currentTCB,w,c
 12733  010226  26D9               	addwf	fsr2l,f,c
 12734  010228  503C               	movf	_currentTCB+1,w,c
 12735  01022A  22DA               	addwfc	fsr2h,f,c
 12736  01022C  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 12737  010230  C0F5  FFDE         	movff	??_TCP_FiniteStateMachine+1,postinc2
 12738  010234  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 12739  010238  C0F7  FFDE         	movff	??_TCP_FiniteStateMachine+3,postinc2
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;tcpv4.c: 656: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 12743  01023C  0102               	movlb	2	; () banked
 12744  01023E  5162               	movf	(_tcpHeader+14)& (0+255),w,b
 12745  010240  0100               	movlb	0	; () banked
 12746  010242  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12747  010244  6BF4               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 12748  010246  EE22  F062         	lfsr	2,_tcpHeader+14
 12749  01024A  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 12750  01024E  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 12751  010252  C0F7  F0F6         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 12752  010256  6BF7               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12753  010258  0EFF               	movlw	255
 12754  01025A  17F6               	andwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 12755  01025C  0E00               	movlw	0
 12756  01025E  17F7               	andwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 12757  010260  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 12758  010262  13F6               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 12759  010264  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 12760  010266  13F7               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 12761  010268  EE20 F018          	lfsr	2,24
 12762  01026C  503B               	movf	_currentTCB,w,c
 12763  01026E  26D9               	addwf	fsr2l,f,c
 12764  010270  503C               	movf	_currentTCB+1,w,c
 12765  010272  22DA               	addwfc	fsr2h,f,c
 12766  010274  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 12767  010278  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;tcpv4.c: 657: currentTCB->mss = tcpMss;
 12771  01027C  EE20 F01C          	lfsr	2,28
 12772  010280  503B               	movf	_currentTCB,w,c
 12773  010282  26D9               	addwf	fsr2l,f,c
 12774  010284  503C               	movf	_currentTCB+1,w,c
 12775  010286  22DA               	addwfc	fsr2h,f,c
 12776  010288  C04B  FFDE         	movff	_tcpMss,postinc2
 12777  01028C  C04C  FFDD         	movff	_tcpMss+1,postdec2
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;tcpv4.c: 660: currentTCB->timeout = ((unsigned long)1*2);
 12781  010290  EE20 F033          	lfsr	2,51
 12782  010294  503B               	movf	_currentTCB,w,c
 12783  010296  26D9               	addwf	fsr2l,f,c
 12784  010298  503C               	movf	_currentTCB+1,w,c
 12785  01029A  22DA               	addwfc	fsr2h,f,c
 12786  01029C  0E02               	movlw	2
 12787  01029E  6EDE               	movwf	postinc2,c
 12788  0102A0  0E00               	movlw	0
 12789  0102A2  6EDD               	movwf	postdec2,c
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;tcpv4.c: 661: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 12793  0102A4  EE20 F035          	lfsr	2,53
 12794  0102A8  503B               	movf	_currentTCB,w,c
 12795  0102AA  26D9               	addwf	fsr2l,f,c
 12796  0102AC  503C               	movf	_currentTCB+1,w,c
 12797  0102AE  22DA               	addwfc	fsr2h,f,c
 12798  0102B0  0E02               	movlw	2
 12799  0102B2  6EDE               	movwf	postinc2,c
 12800  0102B4  0E00               	movlw	0
 12801  0102B6  6EDD               	movwf	postdec2,c
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;tcpv4.c: 662: currentTCB->timeoutsCount = (3u);
 12805  0102B8  EE20 F037          	lfsr	2,55
 12806  0102BC  503B               	movf	_currentTCB,w,c
 12807  0102BE  26D9               	addwf	fsr2l,f,c
 12808  0102C0  503C               	movf	_currentTCB+1,w,c
 12809  0102C2  22DA               	addwfc	fsr2h,f,c
 12810  0102C4  0E03               	movlw	3
 12811  0102C6  6EDF               	movwf	indf2,c
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;tcpv4.c: 663: currentTCB->flags = 0x02U | 0x10U;
 12815  0102C8  EE20 F038          	lfsr	2,56
 12816  0102CC  503B               	movf	_currentTCB,w,c
 12817  0102CE  26D9               	addwf	fsr2l,f,c
 12818  0102D0  503C               	movf	_currentTCB+1,w,c
 12819  0102D2  22DA               	addwfc	fsr2h,f,c
 12820  0102D4  0E12               	movlw	18
 12821  0102D6  6EDF               	movwf	indf2,c
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;tcpv4.c: 665: TCP_Snd(currentTCB);
 12825  0102D8  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 12826  0102DC  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 12827  0102E0  EC61  F08D         	call	_TCP_Snd	;wreg free
 12828  0102E4                     l10820:
 12829                           
 12830                           ;tcpv4.c: 668: nextState = SYN_RECEIVED;
 12831  0102E4  0E03               	movlw	3
 12832  0102E6  EFCC  F088         	goto	L23
 12833  0102EA                     
 12834                           ; BSR set to: 1
 12835                           ;tcpv4.c: 672: currentTCB->timeout = 0;
 12836                           
 12837                           ; BSR set to: 1
 12838  0102EA  EE20 F033          	lfsr	2,51
 12839  0102EE  503B               	movf	_currentTCB,w,c
 12840  0102F0  26D9               	addwf	fsr2l,f,c
 12841  0102F2  503C               	movf	_currentTCB+1,w,c
 12842  0102F4  22DA               	addwfc	fsr2h,f,c
 12843  0102F6  0E00               	movlw	0
 12844  0102F8  6EDE               	movwf	postinc2,c
 12845  0102FA  0E00               	movlw	0
 12846  0102FC  6EDD               	movwf	postdec2,c
 12847                           
 12848                           ;tcpv4.c: 674: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 12849  0102FE  EE20 F010          	lfsr	2,16
 12850  010302  503B               	movf	_currentTCB,w,c
 12851  010304  26D9               	addwf	fsr2l,f,c
 12852  010306  503C               	movf	_currentTCB+1,w,c
 12853  010308  22DA               	addwfc	fsr2h,f,c
 12854  01030A  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 12855  01030E  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 12856  010312  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 12857  010316  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 12858  01031A  0E01               	movlw	1
 12859  01031C  0100               	movlb	0	; () banked
 12860  01031E  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 12861  010320  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 12862  010322  0E00               	movlw	0
 12863  010324  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 12864  010326  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 12865  010328  0E00               	movlw	0
 12866  01032A  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12867  01032C  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 12868  01032E  0E00               	movlw	0
 12869  010330  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12870  010332  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 12871  010334  0102               	movlb	2	; () banked
 12872  010336  515C               	movf	(_tcpHeader+8)& (0+255),w,b
 12873  010338  0100               	movlb	0	; () banked
 12874  01033A  19F8               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 12875  01033C  E10F               	bnz	u10471
 12876  01033E  0102               	movlb	2	; () banked
 12877  010340  515D               	movf	(_tcpHeader+9)& (0+255),w,b
 12878  010342  0100               	movlb	0	; () banked
 12879  010344  19F9               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 12880  010346  E10A               	bnz	u10471
 12881  010348  0102               	movlb	2	; () banked
 12882  01034A  515E               	movf	(_tcpHeader+10)& (0+255),w,b
 12883  01034C  0100               	movlb	0	; () banked
 12884  01034E  19FA               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 12885  010350  E105               	bnz	u10471
 12886  010352  0102               	movlb	2	; () banked
 12887  010354  515F               	movf	(_tcpHeader+11)& (0+255),w,b
 12888  010356  0100               	movlb	0	; () banked
 12889  010358  19FB               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 12890  01035A  A4D8               	btfss	status,2,c
 12891  01035C                     u10471:
 12892  01035C  D0A1               	goto	l1693
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;tcpv4.c: 675: {
 12896                           ;tcpv4.c: 677: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 12897  01035E  EE20 F010          	lfsr	2,16
 12898  010362  503B               	movf	_currentTCB,w,c
 12899  010364  26D9               	addwf	fsr2l,f,c
 12900  010366  503C               	movf	_currentTCB+1,w,c
 12901  010368  22DA               	addwfc	fsr2h,f,c
 12902  01036A  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 12903  01036E  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 12904  010372  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 12905  010376  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 12906  01037A  0E01               	movlw	1
 12907  01037C  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 12908  01037E  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 12909  010380  0E00               	movlw	0
 12910  010382  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 12911  010384  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 12912  010386  0E00               	movlw	0
 12913  010388  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12914  01038A  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 12915  01038C  0E00               	movlw	0
 12916  01038E  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12917  010390  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 12918  010392  EE20 F010          	lfsr	2,16
 12919  010396  503B               	movf	_currentTCB,w,c
 12920  010398  26D9               	addwf	fsr2l,f,c
 12921  01039A  503C               	movf	_currentTCB+1,w,c
 12922  01039C  22DA               	addwfc	fsr2h,f,c
 12923  01039E  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 12924  0103A2  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 12925  0103A6  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 12926  0103AA  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 12927                           
 12928                           ;tcpv4.c: 678: currentTCB->flags = 0x10U;
 12929  0103AE  EE20 F038          	lfsr	2,56
 12930  0103B2  503B               	movf	_currentTCB,w,c
 12931  0103B4  26D9               	addwf	fsr2l,f,c
 12932  0103B6  503C               	movf	_currentTCB+1,w,c
 12933  0103B8  22DA               	addwfc	fsr2h,f,c
 12934  0103BA  0E10               	movlw	16
 12935  0103BC  6EDF               	movwf	indf2,c
 12936                           
 12937                           ; BSR set to: 0
 12938                           ;tcpv4.c: 681: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 12939  0103BE  EE22  F058         	lfsr	2,_tcpHeader+4
 12940  0103C2  EE10 F008          	lfsr	1,8
 12941  0103C6  503B               	movf	_currentTCB,w,c
 12942  0103C8  26E1               	addwf	fsr1l,f,c
 12943  0103CA  503C               	movf	_currentTCB+1,w,c
 12944  0103CC  22E2               	addwfc	fsr1h,f,c
 12945  0103CE  CFDE FFE6          	movff	postinc2,postinc1
 12946  0103D2  CFDE FFE6          	movff	postinc2,postinc1
 12947  0103D6  CFDE FFE6          	movff	postinc2,postinc1
 12948  0103DA  CFDE FFE6          	movff	postinc2,postinc1
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;tcpv4.c: 683: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 12952  0103DE  0E01               	movlw	1
 12953  0103E0  0102               	movlb	2	; () banked
 12954  0103E2  2558               	addwf	(_tcpHeader+4)& (0+255),w,b
 12955  0103E4  0100               	movlb	0	; () banked
 12956  0103E6  6FF4               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 12957  0103E8  0E00               	movlw	0
 12958  0103EA  0102               	movlb	2	; () banked
 12959  0103EC  2159               	addwfc	(_tcpHeader+5)& (0+255),w,b
 12960  0103EE  0100               	movlb	0	; () banked
 12961  0103F0  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12962  0103F2  0E00               	movlw	0
 12963  0103F4  0102               	movlb	2	; () banked
 12964  0103F6  215A               	addwfc	(_tcpHeader+6)& (0+255),w,b
 12965  0103F8  0100               	movlb	0	; () banked
 12966  0103FA  6FF6               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 12967  0103FC  0E00               	movlw	0
 12968  0103FE  0102               	movlb	2	; () banked
 12969  010400  215B               	addwfc	(_tcpHeader+7)& (0+255),w,b
 12970  010402  0100               	movlb	0	; () banked
 12971  010404  6FF7               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12972  010406  EE20 F00C          	lfsr	2,12
 12973  01040A  503B               	movf	_currentTCB,w,c
 12974  01040C  26D9               	addwf	fsr2l,f,c
 12975  01040E  503C               	movf	_currentTCB+1,w,c
 12976  010410  22DA               	addwfc	fsr2h,f,c
 12977  010412  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 12978  010416  C0F5  FFDE         	movff	??_TCP_FiniteStateMachine+1,postinc2
 12979  01041A  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 12980  01041E  C0F7  FFDE         	movff	??_TCP_FiniteStateMachine+3,postinc2
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;tcpv4.c: 685: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 12984  010422  0102               	movlb	2	; () banked
 12985  010424  5162               	movf	(_tcpHeader+14)& (0+255),w,b
 12986  010426  0100               	movlb	0	; () banked
 12987  010428  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12988  01042A  6BF4               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 12989  01042C  EE22  F062         	lfsr	2,_tcpHeader+14
 12990  010430  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 12991  010434  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 12992  010438  C0F7  F0F6         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 12993  01043C  6BF7               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12994  01043E  0EFF               	movlw	255
 12995  010440  17F6               	andwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 12996  010442  0E00               	movlw	0
 12997  010444  17F7               	andwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 12998  010446  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 12999  010448  13F6               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 13000  01044A  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13001  01044C  13F7               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 13002  01044E  EE20 F018          	lfsr	2,24
 13003  010452  503B               	movf	_currentTCB,w,c
 13004  010454  26D9               	addwf	fsr2l,f,c
 13005  010456  503C               	movf	_currentTCB+1,w,c
 13006  010458  22DA               	addwfc	fsr2h,f,c
 13007  01045A  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 13008  01045E  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;tcpv4.c: 686: currentTCB->mss = tcpMss;
 13012  010462  EE20 F01C          	lfsr	2,28
 13013  010466  503B               	movf	_currentTCB,w,c
 13014  010468  26D9               	addwf	fsr2l,f,c
 13015  01046A  503C               	movf	_currentTCB+1,w,c
 13016  01046C  22DA               	addwfc	fsr2h,f,c
 13017  01046E  C04B  FFDE         	movff	_tcpMss,postinc2
 13018  010472  C04C  FFDD         	movff	_tcpMss+1,postdec2
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;tcpv4.c: 688: if(TCP_Snd(currentTCB))
 13022  010476  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 13023  01047A  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 13024  01047E  EC61  F08D         	call	_TCP_Snd	;wreg free
 13025  010482  0900               	iorlw	0
 13026  010484  B4D8               	btfsc	status,2,c
 13027  010486  EFF1  F089         	goto	l1687
 13028  01048A  D2AA               	goto	l10934
 13029  01048C                     l10838:
 13030                           
 13031                           ; BSR set to: 1
 13032                           ;tcpv4.c: 691: currentTCB->socketState = SOCKET_CONNECTED;
 13033  01048C  EE20 F039          	lfsr	2,57
 13034  010490  503B               	movf	_currentTCB,w,c
 13035  010492  26D9               	addwf	fsr2l,f,c
 13036  010494  503C               	movf	_currentTCB+1,w,c
 13037  010496  22DA               	addwfc	fsr2h,f,c
 13038  010498  0E03               	movlw	3
 13039  01049A  6EDF               	movwf	indf2,c
 13040                           
 13041                           ; BSR set to: 1
 13042                           ;tcpv4.c: 692: }
 13043                           ;tcpv4.c: 693: }
 13044  01049C  EFF1  F089         	goto	l1687
 13045  0104A0                     l1693:
 13046                           
 13047                           ;tcpv4.c: 694: else
 13048                           ;tcpv4.c: 695: {
 13049                           ;tcpv4.c: 697: currentTCB->localSeqno = tcpHeader.ackNumber;
 13050                           
 13051                           ; BSR set to: 1
 13052  0104A0  EE22  F05C         	lfsr	2,_tcpHeader+8
 13053  0104A4  EE10 F010          	lfsr	1,16
 13054  0104A8  503B               	movf	_currentTCB,w,c
 13055  0104AA  26E1               	addwf	fsr1l,f,c
 13056  0104AC  503C               	movf	_currentTCB+1,w,c
 13057  0104AE  22E2               	addwfc	fsr1h,f,c
 13058  0104B0  CFDE FFE6          	movff	postinc2,postinc1
 13059  0104B4  CFDE FFE6          	movff	postinc2,postinc1
 13060  0104B8  CFDE FFE6          	movff	postinc2,postinc1
 13061  0104BC  CFDE FFE6          	movff	postinc2,postinc1
 13062                           
 13063                           ;tcpv4.c: 698: currentTCB->flags = 0x04U | 0x10U;
 13064  0104C0  EE20 F038          	lfsr	2,56
 13065  0104C4  503B               	movf	_currentTCB,w,c
 13066  0104C6  26D9               	addwf	fsr2l,f,c
 13067  0104C8  503C               	movf	_currentTCB+1,w,c
 13068  0104CA  22DA               	addwfc	fsr2h,f,c
 13069  0104CC  0E14               	movlw	20
 13070  0104CE  6EDF               	movwf	indf2,c
 13071                           
 13072                           ;tcpv4.c: 699: if(TCP_Snd(currentTCB))
 13073  0104D0  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 13074  0104D4  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 13075  0104D8  EC61  F08D         	call	_TCP_Snd	;wreg free
 13076  0104DC  0900               	iorlw	0
 13077  0104DE  B4D8               	btfsc	status,2,c
 13078  0104E0  EFF1  F089         	goto	l1687
 13079                           
 13080                           ;tcpv4.c: 700: {
 13081                           ;tcpv4.c: 701: nextState = CLOSE;
 13082  0104E4  0E00               	movlw	0
 13083  0104E6  0101               	movlb	1	; () banked
 13084  0104E8  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13085                           
 13086                           ; BSR set to: 1
 13087                           ;tcpv4.c: 702: TCB_Reset(currentTCB);
 13088  0104EA  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 13089  0104EE  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 13090  0104F2  EC90  F0A8         	call	_TCB_Reset	;wreg free
 13091                           
 13092                           ;tcpv4.c: 703: }
 13093                           ;tcpv4.c: 704: }
 13094                           ;tcpv4.c: 705: break;
 13095  0104F6  EFF1  F089         	goto	l1687
 13096  0104FA                     
 13097                           ;tcpv4.c: 708: currentTCB->timeout = 0;
 13098  0104FA  EE20 F033          	lfsr	2,51
 13099  0104FE  503B               	movf	_currentTCB,w,c
 13100  010500  26D9               	addwf	fsr2l,f,c
 13101  010502  503C               	movf	_currentTCB+1,w,c
 13102  010504  22DA               	addwfc	fsr2h,f,c
 13103  010506  0E00               	movlw	0
 13104  010508  6EDE               	movwf	postinc2,c
 13105  01050A  0E00               	movlw	0
 13106  01050C  6EDD               	movwf	postdec2,c
 13107                           
 13108                           ;tcpv4.c: 710: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 13109  01050E  EE20 F010          	lfsr	2,16
 13110  010512  503B               	movf	_currentTCB,w,c
 13111  010514  26D9               	addwf	fsr2l,f,c
 13112  010516  503C               	movf	_currentTCB+1,w,c
 13113  010518  22DA               	addwfc	fsr2h,f,c
 13114  01051A  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 13115  01051E  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 13116  010522  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13117  010526  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 13118  01052A  0E01               	movlw	1
 13119  01052C  0100               	movlb	0	; () banked
 13120  01052E  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 13121  010530  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 13122  010532  0E00               	movlw	0
 13123  010534  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13124  010536  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 13125  010538  0E00               	movlw	0
 13126  01053A  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 13127  01053C  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 13128  01053E  0E00               	movlw	0
 13129  010540  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 13130  010542  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 13131  010544  0102               	movlb	2	; () banked
 13132  010546  515C               	movf	(_tcpHeader+8)& (0+255),w,b
 13133  010548  0100               	movlb	0	; () banked
 13134  01054A  19F8               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 13135  01054C  E10F               	bnz	u10501
 13136  01054E  0102               	movlb	2	; () banked
 13137  010550  515D               	movf	(_tcpHeader+9)& (0+255),w,b
 13138  010552  0100               	movlb	0	; () banked
 13139  010554  19F9               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 13140  010556  E10A               	bnz	u10501
 13141  010558  0102               	movlb	2	; () banked
 13142  01055A  515E               	movf	(_tcpHeader+10)& (0+255),w,b
 13143  01055C  0100               	movlb	0	; () banked
 13144  01055E  19FA               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 13145  010560  E105               	bnz	u10501
 13146  010562  0102               	movlb	2	; () banked
 13147  010564  515F               	movf	(_tcpHeader+11)& (0+255),w,b
 13148  010566  0100               	movlb	0	; () banked
 13149  010568  19FB               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 13150  01056A  A4D8               	btfss	status,2,c
 13151  01056C                     u10501:
 13152  01056C  D08D               	goto	l1698
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;tcpv4.c: 711: {
 13156                           ;tcpv4.c: 713: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 13157  01056E  EE20 F010          	lfsr	2,16
 13158  010572  503B               	movf	_currentTCB,w,c
 13159  010574  26D9               	addwf	fsr2l,f,c
 13160  010576  503C               	movf	_currentTCB+1,w,c
 13161  010578  22DA               	addwfc	fsr2h,f,c
 13162  01057A  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 13163  01057E  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 13164  010582  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13165  010586  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 13166  01058A  0E01               	movlw	1
 13167  01058C  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 13168  01058E  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 13169  010590  0E00               	movlw	0
 13170  010592  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13171  010594  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 13172  010596  0E00               	movlw	0
 13173  010598  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 13174  01059A  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 13175  01059C  0E00               	movlw	0
 13176  01059E  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 13177  0105A0  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 13178  0105A2  EE20 F010          	lfsr	2,16
 13179  0105A6  503B               	movf	_currentTCB,w,c
 13180  0105A8  26D9               	addwf	fsr2l,f,c
 13181  0105AA  503C               	movf	_currentTCB+1,w,c
 13182  0105AC  22DA               	addwfc	fsr2h,f,c
 13183  0105AE  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 13184  0105B2  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 13185  0105B6  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 13186  0105BA  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 13187                           
 13188                           ;tcpv4.c: 714: currentTCB->flags = 0x10U;
 13189  0105BE  EE20 F038          	lfsr	2,56
 13190  0105C2  503B               	movf	_currentTCB,w,c
 13191  0105C4  26D9               	addwf	fsr2l,f,c
 13192  0105C6  503C               	movf	_currentTCB+1,w,c
 13193  0105C8  22DA               	addwfc	fsr2h,f,c
 13194  0105CA  0E10               	movlw	16
 13195  0105CC  6EDF               	movwf	indf2,c
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;tcpv4.c: 717: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 13199  0105CE  EE22  F058         	lfsr	2,_tcpHeader+4
 13200  0105D2  EE10 F008          	lfsr	1,8
 13201  0105D6  503B               	movf	_currentTCB,w,c
 13202  0105D8  26E1               	addwf	fsr1l,f,c
 13203  0105DA  503C               	movf	_currentTCB+1,w,c
 13204  0105DC  22E2               	addwfc	fsr1h,f,c
 13205  0105DE  CFDE FFE6          	movff	postinc2,postinc1
 13206  0105E2  CFDE FFE6          	movff	postinc2,postinc1
 13207  0105E6  CFDE FFE6          	movff	postinc2,postinc1
 13208  0105EA  CFDE FFE6          	movff	postinc2,postinc1
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;tcpv4.c: 718: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 13212  0105EE  0E01               	movlw	1
 13213  0105F0  0102               	movlb	2	; () banked
 13214  0105F2  2558               	addwf	(_tcpHeader+4)& (0+255),w,b
 13215  0105F4  0100               	movlb	0	; () banked
 13216  0105F6  6FF4               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 13217  0105F8  0E00               	movlw	0
 13218  0105FA  0102               	movlb	2	; () banked
 13219  0105FC  2159               	addwfc	(_tcpHeader+5)& (0+255),w,b
 13220  0105FE  0100               	movlb	0	; () banked
 13221  010600  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 13222  010602  0E00               	movlw	0
 13223  010604  0102               	movlb	2	; () banked
 13224  010606  215A               	addwfc	(_tcpHeader+6)& (0+255),w,b
 13225  010608  0100               	movlb	0	; () banked
 13226  01060A  6FF6               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 13227  01060C  0E00               	movlw	0
 13228  01060E  0102               	movlb	2	; () banked
 13229  010610  215B               	addwfc	(_tcpHeader+7)& (0+255),w,b
 13230  010612  0100               	movlb	0	; () banked
 13231  010614  6FF7               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 13232  010616  EE20 F00C          	lfsr	2,12
 13233  01061A  503B               	movf	_currentTCB,w,c
 13234  01061C  26D9               	addwf	fsr2l,f,c
 13235  01061E  503C               	movf	_currentTCB+1,w,c
 13236  010620  22DA               	addwfc	fsr2h,f,c
 13237  010622  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 13238  010626  C0F5  FFDE         	movff	??_TCP_FiniteStateMachine+1,postinc2
 13239  01062A  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 13240  01062E  C0F7  FFDE         	movff	??_TCP_FiniteStateMachine+3,postinc2
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;tcpv4.c: 720: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 13244  010632  0102               	movlb	2	; () banked
 13245  010634  5162               	movf	(_tcpHeader+14)& (0+255),w,b
 13246  010636  0100               	movlb	0	; () banked
 13247  010638  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 13248  01063A  6BF4               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 13249  01063C  EE22  F062         	lfsr	2,_tcpHeader+14
 13250  010640  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13251  010644  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 13252  010648  C0F7  F0F6         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 13253  01064C  6BF7               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 13254  01064E  0EFF               	movlw	255
 13255  010650  17F6               	andwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 13256  010652  0E00               	movlw	0
 13257  010654  17F7               	andwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 13258  010656  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 13259  010658  13F6               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 13260  01065A  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13261  01065C  13F7               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 13262  01065E  EE20 F018          	lfsr	2,24
 13263  010662  503B               	movf	_currentTCB,w,c
 13264  010664  26D9               	addwf	fsr2l,f,c
 13265  010666  503C               	movf	_currentTCB+1,w,c
 13266  010668  22DA               	addwfc	fsr2h,f,c
 13267  01066A  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 13268  01066E  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;tcpv4.c: 721: currentTCB->mss = tcpMss;
 13272  010672  EE20 F01C          	lfsr	2,28
 13273  010676  503B               	movf	_currentTCB,w,c
 13274  010678  26D9               	addwf	fsr2l,f,c
 13275  01067A  503C               	movf	_currentTCB+1,w,c
 13276  01067C  22DA               	addwfc	fsr2h,f,c
 13277  01067E  C04B  FFDE         	movff	_tcpMss,postinc2
 13278  010682  C04C  FFDD         	movff	_tcpMss+1,postdec2
 13279  010686  D1AC               	goto	l10934
 13280  010688                     l1698:
 13281                           
 13282                           ;tcpv4.c: 726: else
 13283                           ;tcpv4.c: 727: {
 13284                           ;tcpv4.c: 729: currentTCB->localSeqno = tcpHeader.ackNumber;
 13285                           
 13286                           ; BSR set to: 1
 13287  010688  EE22  F05C         	lfsr	2,_tcpHeader+8
 13288  01068C  EE10 F010          	lfsr	1,16
 13289  010690  503B               	movf	_currentTCB,w,c
 13290  010692  26E1               	addwf	fsr1l,f,c
 13291  010694  503C               	movf	_currentTCB+1,w,c
 13292  010696  22E2               	addwfc	fsr1h,f,c
 13293  010698  CFDE FFE6          	movff	postinc2,postinc1
 13294  01069C  CFDE FFE6          	movff	postinc2,postinc1
 13295  0106A0  CFDE FFE6          	movff	postinc2,postinc1
 13296  0106A4  CFDE FFE6          	movff	postinc2,postinc1
 13297                           
 13298                           ;tcpv4.c: 730: currentTCB->flags = 0x04U;
 13299  0106A8  EE20 F038          	lfsr	2,56
 13300  0106AC  503B               	movf	_currentTCB,w,c
 13301  0106AE  26D9               	addwf	fsr2l,f,c
 13302  0106B0  503C               	movf	_currentTCB+1,w,c
 13303  0106B2  22DA               	addwfc	fsr2h,f,c
 13304  0106B4  0E04               	movlw	4
 13305  0106B6  6EDF               	movwf	indf2,c
 13306                           
 13307                           ;tcpv4.c: 731: if(TCP_Snd(currentTCB))
 13308  0106B8  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 13309  0106BC  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 13310  0106C0  EC61  F08D         	call	_TCP_Snd	;wreg free
 13311  0106C4  0900               	iorlw	0
 13312  0106C6  B4D8               	btfsc	status,2,c
 13313  0106C8  EFF1  F089         	goto	l1687
 13314                           
 13315                           ;tcpv4.c: 732: {
 13316                           ;tcpv4.c: 733: nextState = CLOSE;
 13317  0106CC  0E00               	movlw	0
 13318  0106CE  0101               	movlb	1	; () banked
 13319  0106D0  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13320                           
 13321                           ; BSR set to: 1
 13322                           ;tcpv4.c: 734: TCB_Reset(currentTCB);
 13323  0106D2  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 13324  0106D6  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 13325  0106DA  EC90  F0A8         	call	_TCB_Reset	;wreg free
 13326                           
 13327                           ;tcpv4.c: 735: }
 13328                           ;tcpv4.c: 736: }
 13329                           ;tcpv4.c: 737: break;
 13330  0106DE  EFF1  F089         	goto	l1687
 13331  0106E2                     
 13332                           ;tcpv4.c: 740: nextState = CLOSED;
 13333  0106E2  0E00               	movlw	0
 13334  0106E4  0101               	movlb	1	; () banked
 13335  0106E6  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13336                           
 13337                           ; BSR set to: 1
 13338                           ;tcpv4.c: 741: TCB_Reset(currentTCB);
 13339  0106E8  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 13340  0106EC  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 13341  0106F0  EC90  F0A8         	call	_TCB_Reset	;wreg free
 13342                           
 13343                           ;tcpv4.c: 742: break;
 13344  0106F4  EFF1  F089         	goto	l1687
 13345  0106F8                     
 13346                           ;tcpv4.c: 746: if (currentTCB->timeoutsCount)
 13347  0106F8  EE20 F037          	lfsr	2,55
 13348  0106FC  503B               	movf	_currentTCB,w,c
 13349  0106FE  26D9               	addwf	fsr2l,f,c
 13350  010700  503C               	movf	_currentTCB+1,w,c
 13351  010702  22DA               	addwfc	fsr2h,f,c
 13352  010704  50DF               	movf	indf2,w,c
 13353  010706  B4D8               	btfsc	status,2,c
 13354  010708  D027               	goto	l1703
 13355                           
 13356                           ;tcpv4.c: 747: {
 13357                           ;tcpv4.c: 748: if(TCP_Snd(currentTCB))
 13358  01070A  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 13359  01070E  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 13360  010712  EC61  F08D         	call	_TCP_Snd	;wreg free
 13361  010716  0900               	iorlw	0
 13362  010718  B4D8               	btfsc	status,2,c
 13363  01071A  EFF1  F089         	goto	l1687
 13364                           
 13365                           ;tcpv4.c: 749: {
 13366                           ;tcpv4.c: 750: if (currentTCB->flags & 0x04U)
 13367  01071E  EE20 F038          	lfsr	2,56
 13368  010722  503B               	movf	_currentTCB,w,c
 13369  010724  26D9               	addwf	fsr2l,f,c
 13370  010726  503C               	movf	_currentTCB+1,w,c
 13371  010728  22DA               	addwfc	fsr2h,f,c
 13372  01072A  A4DF               	btfss	indf2,2,c
 13373  01072C  D00B               	goto	l1705
 13374                           
 13375                           ;tcpv4.c: 751: {
 13376                           ;tcpv4.c: 752: nextState = CLOSE;
 13377  01072E  0E00               	movlw	0
 13378  010730  0101               	movlb	1	; () banked
 13379  010732  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13380                           
 13381                           ; BSR set to: 1
 13382                           ;tcpv4.c: 753: TCB_Reset(currentTCB);
 13383  010734  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 13384  010738  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 13385  01073C  EC90  F0A8         	call	_TCB_Reset	;wreg free
 13386                           
 13387                           ;tcpv4.c: 754: }else
 13388  010740  EFF1  F089         	goto	l1687
 13389  010744                     l1705:
 13390                           
 13391                           ;tcpv4.c: 755: if(currentTCB->flags & 0x10U)
 13392  010744  EE20 F038          	lfsr	2,56
 13393  010748  503B               	movf	_currentTCB,w,c
 13394  01074A  26D9               	addwf	fsr2l,f,c
 13395  01074C  503C               	movf	_currentTCB+1,w,c
 13396  01074E  22DA               	addwfc	fsr2h,f,c
 13397  010750  A8DF               	btfss	indf2,4,c
 13398  010752  EFF1  F089         	goto	l1687
 13399  010756  D144               	goto	l10934
 13400  010758                     l1703:
 13401                           
 13402                           ;tcpv4.c: 762: {
 13403                           ;tcpv4.c: 764: currentTCB->flags = 0x04U;
 13404                           
 13405                           ; BSR set to: 1
 13406  010758  EE20 F038          	lfsr	2,56
 13407  01075C  503B               	movf	_currentTCB,w,c
 13408  01075E  26D9               	addwf	fsr2l,f,c
 13409  010760  503C               	movf	_currentTCB+1,w,c
 13410  010762  22DA               	addwfc	fsr2h,f,c
 13411  010764  0E04               	movlw	4
 13412  010766  6EDF               	movwf	indf2,c
 13413                           
 13414                           ;tcpv4.c: 765: if(TCP_Snd(currentTCB))
 13415  010768  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 13416  01076C  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 13417  010770  EC61  F08D         	call	_TCP_Snd	;wreg free
 13418  010774  0900               	iorlw	0
 13419  010776  B4D8               	btfsc	status,2,c
 13420  010778  EFF1  F089         	goto	l1687
 13421                           
 13422                           ;tcpv4.c: 766: {
 13423                           ;tcpv4.c: 767: nextState = CLOSE;
 13424  01077C  0E00               	movlw	0
 13425  01077E  0101               	movlb	1	; () banked
 13426  010780  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13427                           
 13428                           ; BSR set to: 1
 13429                           ;tcpv4.c: 768: TCB_Reset(currentTCB);
 13430  010782  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 13431  010786  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 13432  01078A  EC90  F0A8         	call	_TCB_Reset	;wreg free
 13433                           
 13434                           ;tcpv4.c: 769: }
 13435                           ;tcpv4.c: 770: }
 13436                           ;tcpv4.c: 771: break;
 13437  01078E  EFF1  F089         	goto	l1687
 13438  010792                     
 13439                           ;tcpv4.c: 773: case RCV_RSTACK:
 13440                           ;tcpv4.c: 775: nextState = CLOSED;
 13441  010792  0E00               	movlw	0
 13442  010794  0101               	movlb	1	; () banked
 13443  010796  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13444                           
 13445                           ; BSR set to: 1
 13446                           ;tcpv4.c: 776: TCB_Reset(currentTCB);
 13447  010798  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 13448  01079C  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 13449  0107A0  EC90  F0A8         	call	_TCB_Reset	;wreg free
 13450                           
 13451                           ;tcpv4.c: 781: }
 13452                           
 13453                           ;tcpv4.c: 780: break;
 13454                           
 13455                           ;tcpv4.c: 778: default:
 13456                           
 13457                           ;tcpv4.c: 777: break;
 13458  0107A4  EFF1  F089         	goto	l1687
 13459  0107A8  0101               	movlb	1	; () banked
 13460  0107AA  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 13461                           
 13462                           ; Switch size 1, requested type "space"
 13463                           ; Number of cases is 7, Range of values is 0 to 12
 13464                           ; switch strategies available:
 13465                           ; Name         Instructions Cycles
 13466                           ; simple_byte           22    12 (average)
 13467                           ;	Chosen strategy is simple_byte
 13468  0107AC  0A00               	xorlw	0	; case 0
 13469  0107AE  B4D8               	btfsc	status,2,c
 13470  0107B0  D798               	goto	l1701
 13471  0107B2  0A03               	xorlw	3	; case 3
 13472  0107B4  B4D8               	btfsc	status,2,c
 13473  0107B6  D510               	goto	l1690
 13474  0107B8  0A07               	xorlw	7	; case 4
 13475  0107BA  B4D8               	btfsc	status,2,c
 13476  0107BC  D69E               	goto	l1697
 13477  0107BE  0A01               	xorlw	1	; case 5
 13478  0107C0  B4D8               	btfsc	status,2,c
 13479  0107C2  D593               	goto	l1692
 13480  0107C4  0A0C               	xorlw	12	; case 9
 13481  0107C6  B4D8               	btfsc	status,2,c
 13482  0107C8  D7E4               	goto	l1710
 13483  0107CA  0A03               	xorlw	3	; case 10
 13484  0107CC  B4D8               	btfsc	status,2,c
 13485  0107CE  D7E1               	goto	l1710
 13486  0107D0  0A06               	xorlw	6	; case 12
 13487  0107D2  B4D8               	btfsc	status,2,c
 13488  0107D4  D791               	goto	l1702
 13489                           
 13490                           ; BSR set to: 1
 13491                           ;tcpv4.c: 782: break;
 13492  0107D6  EFF1  F089         	goto	l1687
 13493  0107DA                     
 13494                           ; BSR set to: 1
 13495                           ;tcpv4.c: 787: if (currentTCB->localPort == tcpHeader.destPort)
 13496                           
 13497                           ; BSR set to: 1
 13498  0107DA  C03B  FFD9         	movff	_currentTCB,fsr2l
 13499  0107DE  C03C  FFDA         	movff	_currentTCB+1,fsr2h
 13500  0107E2  0102               	movlb	2	; () banked
 13501  0107E4  5156               	movf	(_tcpHeader+2)& (0+255),w,b
 13502  0107E6  18DE               	xorwf	postinc2,w,c
 13503  0107E8  E103               	bnz	u10571
 13504  0107EA  5157               	movf	(_tcpHeader+3)& (0+255),w,b
 13505  0107EC  18DE               	xorwf	postinc2,w,c
 13506  0107EE  A4D8               	btfss	status,2,c
 13507  0107F0                     u10571:
 13508  0107F0  EFF1  F089         	goto	l1687
 13509                           
 13510                           ; BSR set to: 2
 13511                           ;tcpv4.c: 788: {
 13512                           ;tcpv4.c: 790: currentTCB->timeout = 0;
 13513  0107F4  EE20 F033          	lfsr	2,51
 13514  0107F8  503B               	movf	_currentTCB,w,c
 13515  0107FA  26D9               	addwf	fsr2l,f,c
 13516  0107FC  503C               	movf	_currentTCB+1,w,c
 13517  0107FE  22DA               	addwfc	fsr2h,f,c
 13518  010800  0E00               	movlw	0
 13519  010802  6EDE               	movwf	postinc2,c
 13520  010804  0E00               	movlw	0
 13521  010806  6EDD               	movwf	postdec2,c
 13522                           
 13523                           ;tcpv4.c: 794: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 13524  010808  EE20 F002          	lfsr	2,2
 13525  01080C  503B               	movf	_currentTCB,w,c
 13526  01080E  26D9               	addwf	fsr2l,f,c
 13527  010810  503C               	movf	_currentTCB+1,w,c
 13528  010812  22DA               	addwfc	fsr2h,f,c
 13529  010814  512A               	movf	_receivedRemoteAddress& (0+255),w,b
 13530  010816  18DE               	xorwf	postinc2,w,c
 13531  010818  E148               	bnz	l10922
 13532  01081A  512B               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 13533  01081C  18DE               	xorwf	postinc2,w,c
 13534  01081E  E145               	bnz	l10922
 13535  010820  512C               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 13536  010822  18DE               	xorwf	postinc2,w,c
 13537  010824  E142               	bnz	l10922
 13538  010826  512D               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 13539  010828  18DE               	xorwf	postinc2,w,c
 13540  01082A  A4D8               	btfss	status,2,c
 13541  01082C  D62F               	goto	l10838
 13542                           
 13543                           ; BSR set to: 2
 13544  01082E  EE20 F006          	lfsr	2,6
 13545  010832  503B               	movf	_currentTCB,w,c
 13546  010834  26D9               	addwf	fsr2l,f,c
 13547  010836  503C               	movf	_currentTCB+1,w,c
 13548  010838  22DA               	addwfc	fsr2h,f,c
 13549  01083A  5154               	movf	_tcpHeader& (0+255),w,b
 13550  01083C  18DE               	xorwf	postinc2,w,c
 13551  01083E  E135               	bnz	l10922
 13552  010840  5155               	movf	(_tcpHeader+1)& (0+255),w,b
 13553  010842  18DE               	xorwf	postinc2,w,c
 13554  010844  A4D8               	btfss	status,2,c
 13555  010846  D622               	goto	l10838
 13556                           
 13557                           ; BSR set to: 2
 13558                           ;tcpv4.c: 795: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 13559  010848  EE20 F010          	lfsr	2,16
 13560  01084C  503B               	movf	_currentTCB,w,c
 13561  01084E  26D9               	addwf	fsr2l,f,c
 13562  010850  503C               	movf	_currentTCB+1,w,c
 13563  010852  22DA               	addwfc	fsr2h,f,c
 13564  010854  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 13565  010858  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 13566  01085C  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13567  010860  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 13568  010864  0E01               	movlw	1
 13569  010866  0100               	movlb	0	; () banked
 13570  010868  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 13571  01086A  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 13572  01086C  0E00               	movlw	0
 13573  01086E  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13574  010870  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 13575  010872  0E00               	movlw	0
 13576  010874  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 13577  010876  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 13578  010878  0E00               	movlw	0
 13579  01087A  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 13580  01087C  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 13581  01087E  0102               	movlb	2	; () banked
 13582  010880  515C               	movf	(_tcpHeader+8)& (0+255),w,b
 13583  010882  0100               	movlb	0	; () banked
 13584  010884  19F8               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 13585  010886  E111               	bnz	l10922
 13586  010888  0102               	movlb	2	; () banked
 13587  01088A  515D               	movf	(_tcpHeader+9)& (0+255),w,b
 13588  01088C  0100               	movlb	0	; () banked
 13589  01088E  19F9               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 13590  010890  E10C               	bnz	l10922
 13591  010892  0102               	movlb	2	; () banked
 13592  010894  515E               	movf	(_tcpHeader+10)& (0+255),w,b
 13593  010896  0100               	movlb	0	; () banked
 13594  010898  19FA               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 13595  01089A  E107               	bnz	l10922
 13596  01089C  0102               	movlb	2	; () banked
 13597  01089E  515F               	movf	(_tcpHeader+11)& (0+255),w,b
 13598  0108A0  0100               	movlb	0	; () banked
 13599  0108A2  19FB               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 13600  0108A4  A4D8               	btfss	status,2,c
 13601  0108A6  D5F2               	goto	l10838
 13602  0108A8  D09B               	goto	l10934
 13603  0108AA                     l10922:
 13604  0108AA  D5F0               	goto	l10838
 13605  0108AC                     
 13606                           ;tcpv4.c: 805: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 13607  0108AC  EE20 F002          	lfsr	2,2
 13608  0108B0  503B               	movf	_currentTCB,w,c
 13609  0108B2  26D9               	addwf	fsr2l,f,c
 13610  0108B4  503C               	movf	_currentTCB+1,w,c
 13611  0108B6  22DA               	addwfc	fsr2h,f,c
 13612  0108B8  0102               	movlb	2	; () banked
 13613  0108BA  512A               	movf	_receivedRemoteAddress& (0+255),w,b
 13614  0108BC  18DE               	xorwf	postinc2,w,c
 13615  0108BE  E109               	bnz	u10611
 13616  0108C0  512B               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 13617  0108C2  18DE               	xorwf	postinc2,w,c
 13618  0108C4  E106               	bnz	u10611
 13619  0108C6  512C               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 13620  0108C8  18DE               	xorwf	postinc2,w,c
 13621  0108CA  E103               	bnz	u10611
 13622  0108CC  512D               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 13623  0108CE  18DE               	xorwf	postinc2,w,c
 13624  0108D0  A4D8               	btfss	status,2,c
 13625  0108D2                     u10611:
 13626  0108D2  EFF1  F089         	goto	l1687
 13627                           
 13628                           ; BSR set to: 2
 13629  0108D6  EE20 F006          	lfsr	2,6
 13630  0108DA  503B               	movf	_currentTCB,w,c
 13631  0108DC  26D9               	addwf	fsr2l,f,c
 13632  0108DE  503C               	movf	_currentTCB+1,w,c
 13633  0108E0  22DA               	addwfc	fsr2h,f,c
 13634  0108E2  5154               	movf	_tcpHeader& (0+255),w,b
 13635  0108E4  18DE               	xorwf	postinc2,w,c
 13636  0108E6  E103               	bnz	u10621
 13637  0108E8  5155               	movf	(_tcpHeader+1)& (0+255),w,b
 13638  0108EA  18DE               	xorwf	postinc2,w,c
 13639  0108EC  A4D8               	btfss	status,2,c
 13640  0108EE                     u10621:
 13641  0108EE  EFF1  F089         	goto	l1687
 13642                           
 13643                           ; BSR set to: 2
 13644                           ;tcpv4.c: 806: {
 13645                           ;tcpv4.c: 809: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 13646  0108F2  EE20 F00C          	lfsr	2,12
 13647  0108F6  503B               	movf	_currentTCB,w,c
 13648  0108F8  26D9               	addwf	fsr2l,f,c
 13649  0108FA  503C               	movf	_currentTCB+1,w,c
 13650  0108FC  22DA               	addwfc	fsr2h,f,c
 13651  0108FE  5158               	movf	(_tcpHeader+4)& (0+255),w,b
 13652  010900  18DE               	xorwf	postinc2,w,c
 13653  010902  E109               	bnz	u10631
 13654  010904  5159               	movf	(_tcpHeader+5)& (0+255),w,b
 13655  010906  18DE               	xorwf	postinc2,w,c
 13656  010908  E106               	bnz	u10631
 13657  01090A  515A               	movf	(_tcpHeader+6)& (0+255),w,b
 13658  01090C  18DE               	xorwf	postinc2,w,c
 13659  01090E  E103               	bnz	u10631
 13660  010910  515B               	movf	(_tcpHeader+7)& (0+255),w,b
 13661  010912  18DE               	xorwf	postinc2,w,c
 13662  010914  A4D8               	btfss	status,2,c
 13663  010916                     u10631:
 13664  010916  EFF1  F089         	goto	l1687
 13665                           
 13666                           ; BSR set to: 2
 13667                           ;tcpv4.c: 810: {
 13668                           ;tcpv4.c: 812: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 13669  01091A  EE20 F010          	lfsr	2,16
 13670  01091E  503B               	movf	_currentTCB,w,c
 13671  010920  26D9               	addwf	fsr2l,f,c
 13672  010922  503C               	movf	_currentTCB+1,w,c
 13673  010924  22DA               	addwfc	fsr2h,f,c
 13674  010926  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 13675  01092A  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 13676  01092E  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13677  010932  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 13678  010936  0E01               	movlw	1
 13679  010938  0100               	movlb	0	; () banked
 13680  01093A  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 13681  01093C  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 13682  01093E  0E00               	movlw	0
 13683  010940  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13684  010942  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 13685  010944  0E00               	movlw	0
 13686  010946  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 13687  010948  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 13688  01094A  0E00               	movlw	0
 13689  01094C  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 13690  01094E  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 13691  010950  0102               	movlb	2	; () banked
 13692  010952  515C               	movf	(_tcpHeader+8)& (0+255),w,b
 13693  010954  0100               	movlb	0	; () banked
 13694  010956  19F8               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 13695  010958  E10F               	bnz	u10641
 13696  01095A  0102               	movlb	2	; () banked
 13697  01095C  515D               	movf	(_tcpHeader+9)& (0+255),w,b
 13698  01095E  0100               	movlb	0	; () banked
 13699  010960  19F9               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 13700  010962  E10A               	bnz	u10641
 13701  010964  0102               	movlb	2	; () banked
 13702  010966  515E               	movf	(_tcpHeader+10)& (0+255),w,b
 13703  010968  0100               	movlb	0	; () banked
 13704  01096A  19FA               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 13705  01096C  E105               	bnz	u10641
 13706  01096E  0102               	movlb	2	; () banked
 13707  010970  515F               	movf	(_tcpHeader+11)& (0+255),w,b
 13708  010972  0100               	movlb	0	; () banked
 13709  010974  19FB               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 13710  010976  A4D8               	btfss	status,2,c
 13711  010978                     u10641:
 13712  010978  EFF1  F089         	goto	l1687
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;tcpv4.c: 813: {
 13716                           ;tcpv4.c: 814: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 13717  01097C  EE20 F010          	lfsr	2,16
 13718  010980  503B               	movf	_currentTCB,w,c
 13719  010982  26D9               	addwf	fsr2l,f,c
 13720  010984  503C               	movf	_currentTCB+1,w,c
 13721  010986  22DA               	addwfc	fsr2h,f,c
 13722  010988  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 13723  01098C  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 13724  010990  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 13725  010994  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 13726  010998  0E01               	movlw	1
 13727  01099A  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 13728  01099C  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 13729  01099E  0E00               	movlw	0
 13730  0109A0  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 13731  0109A2  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 13732  0109A4  0E00               	movlw	0
 13733  0109A6  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 13734  0109A8  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 13735  0109AA  0E00               	movlw	0
 13736  0109AC  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 13737  0109AE  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 13738  0109B0  EE20 F010          	lfsr	2,16
 13739  0109B4  503B               	movf	_currentTCB,w,c
 13740  0109B6  26D9               	addwf	fsr2l,f,c
 13741  0109B8  503C               	movf	_currentTCB+1,w,c
 13742  0109BA  22DA               	addwfc	fsr2h,f,c
 13743  0109BC  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 13744  0109C0  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 13745  0109C4  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 13746  0109C8  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 13747                           
 13748                           ;tcpv4.c: 816: currentTCB->timeout = 0;
 13749  0109CC  EE20 F033          	lfsr	2,51
 13750  0109D0  503B               	movf	_currentTCB,w,c
 13751  0109D2  26D9               	addwf	fsr2l,f,c
 13752  0109D4  503C               	movf	_currentTCB+1,w,c
 13753  0109D6  22DA               	addwfc	fsr2h,f,c
 13754  0109D8  0E00               	movlw	0
 13755  0109DA  6EDE               	movwf	postinc2,c
 13756  0109DC  0E00               	movlw	0
 13757  0109DE  6EDD               	movwf	postdec2,c
 13758  0109E0                     l10934:
 13759                           
 13760                           ; BSR set to: 0
 13761                           ;tcpv4.c: 818: nextState = ESTABLISHED;
 13762  0109E0  0E04               	movlw	4
 13763  0109E2  0101               	movlb	1	; () banked
 13764  0109E4  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13765  0109E6  D552               	goto	l10838
 13766  0109E8                     
 13767                           ; BSR set to: 1
 13768                           ;tcpv4.c: 826: currentTCB->timeout = 0;
 13769                           
 13770                           ; BSR set to: 1
 13771  0109E8  EE20 F033          	lfsr	2,51
 13772  0109EC  503B               	movf	_currentTCB,w,c
 13773  0109EE  26D9               	addwf	fsr2l,f,c
 13774  0109F0  503C               	movf	_currentTCB+1,w,c
 13775  0109F2  22DA               	addwfc	fsr2h,f,c
 13776  0109F4  0E00               	movlw	0
 13777  0109F6  6EDE               	movwf	postinc2,c
 13778  0109F8  0E00               	movlw	0
 13779  0109FA  6EDD               	movwf	postdec2,c
 13780                           
 13781                           ;tcpv4.c: 828: currentTCB->flags = 0x01U;
 13782  0109FC  EE20 F038          	lfsr	2,56
 13783  010A00  503B               	movf	_currentTCB,w,c
 13784  010A02  26D9               	addwf	fsr2l,f,c
 13785  010A04  503C               	movf	_currentTCB+1,w,c
 13786  010A06  22DA               	addwfc	fsr2h,f,c
 13787  010A08  0E01               	movlw	1
 13788  010A0A  6EDF               	movwf	indf2,c
 13789                           
 13790                           ;tcpv4.c: 829: currentTCB->timeout = ((unsigned long)1*2);
 13791  010A0C  EE20 F033          	lfsr	2,51
 13792  010A10  503B               	movf	_currentTCB,w,c
 13793  010A12  26D9               	addwf	fsr2l,f,c
 13794  010A14  503C               	movf	_currentTCB+1,w,c
 13795  010A16  22DA               	addwfc	fsr2h,f,c
 13796  010A18  0E02               	movlw	2
 13797  010A1A  6EDE               	movwf	postinc2,c
 13798  010A1C  0E00               	movlw	0
 13799  010A1E  6EDD               	movwf	postdec2,c
 13800                           
 13801                           ;tcpv4.c: 830: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 13802  010A20  EE20 F035          	lfsr	2,53
 13803  010A24  503B               	movf	_currentTCB,w,c
 13804  010A26  26D9               	addwf	fsr2l,f,c
 13805  010A28  503C               	movf	_currentTCB+1,w,c
 13806  010A2A  22DA               	addwfc	fsr2h,f,c
 13807  010A2C  0E02               	movlw	2
 13808  010A2E  6EDE               	movwf	postinc2,c
 13809  010A30  0E00               	movlw	0
 13810  010A32  6EDD               	movwf	postdec2,c
 13811                           
 13812                           ;tcpv4.c: 831: currentTCB->timeoutsCount = (5u);
 13813  010A34  EE20 F037          	lfsr	2,55
 13814  010A38  503B               	movf	_currentTCB,w,c
 13815  010A3A  26D9               	addwf	fsr2l,f,c
 13816  010A3C  503C               	movf	_currentTCB+1,w,c
 13817  010A3E  22DA               	addwfc	fsr2h,f,c
 13818  010A40  0E05               	movlw	5
 13819  010A42  6EDF               	movwf	indf2,c
 13820                           
 13821                           ; BSR set to: 1
 13822                           ;tcpv4.c: 833: nextState = FIN_WAIT_1;
 13823  010A44  0E05               	movlw	5
 13824  010A46  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 13825                           
 13826                           ; BSR set to: 1
 13827                           ;tcpv4.c: 834: TCP_Snd(currentTCB);
 13828  010A48  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 13829  010A4C  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 13830  010A50  EC61  F08D         	call	_TCP_Snd	;wreg free
 13831                           
 13832                           ;tcpv4.c: 835: break;
 13833  010A54  EFF1  F089         	goto	l1687
 13834  010A58                     
 13835                           ;tcpv4.c: 837: case RCV_RST:
 13836                           ;tcpv4.c: 840: if (currentTCB->localPort == tcpHeader.destPort)
 13837  010A58  C03B  FFD9         	movff	_currentTCB,fsr2l
 13838  010A5C  C03C  FFDA         	movff	_currentTCB+1,fsr2h
 13839  010A60  0102               	movlb	2	; () banked
 13840  010A62  5156               	movf	(_tcpHeader+2)& (0+255),w,b
 13841  010A64  18DE               	xorwf	postinc2,w,c
 13842  010A66  E103               	bnz	u10651
 13843  010A68  5157               	movf	(_tcpHeader+3)& (0+255),w,b
 13844  010A6A  18DE               	xorwf	postinc2,w,c
 13845  010A6C  A4D8               	btfss	status,2,c
 13846  010A6E                     u10651:
 13847  010A6E  EFF1  F089         	goto	l1687
 13848                           
 13849                           ; BSR set to: 2
 13850                           ;tcpv4.c: 841: {
 13851                           ;tcpv4.c: 842: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 13852  010A72  EE20 F00C          	lfsr	2,12
 13853  010A76  503B               	movf	_currentTCB,w,c
 13854  010A78  26D9               	addwf	fsr2l,f,c
 13855  010A7A  503C               	movf	_currentTCB+1,w,c
 13856  010A7C  22DA               	addwfc	fsr2h,f,c
 13857  010A7E  5158               	movf	(_tcpHeader+4)& (0+255),w,b
 13858  010A80  18DE               	xorwf	postinc2,w,c
 13859  010A82  E109               	bnz	u10661
 13860  010A84  5159               	movf	(_tcpHeader+5)& (0+255),w,b
 13861  010A86  18DE               	xorwf	postinc2,w,c
 13862  010A88  E106               	bnz	u10661
 13863  010A8A  515A               	movf	(_tcpHeader+6)& (0+255),w,b
 13864  010A8C  18DE               	xorwf	postinc2,w,c
 13865  010A8E  E103               	bnz	u10661
 13866  010A90  515B               	movf	(_tcpHeader+7)& (0+255),w,b
 13867  010A92  18DE               	xorwf	postinc2,w,c
 13868  010A94  A4D8               	btfss	status,2,c
 13869  010A96                     u10661:
 13870  010A96  EFF1  F089         	goto	l1687
 13871                           
 13872                           ; BSR set to: 2
 13873                           ;tcpv4.c: 843: {
 13874                           ;tcpv4.c: 844: currentTCB->destIP = 0;
 13875  010A9A  EE20 F002          	lfsr	2,2
 13876  010A9E  503B               	movf	_currentTCB,w,c
 13877  010AA0  26D9               	addwf	fsr2l,f,c
 13878  010AA2  503C               	movf	_currentTCB+1,w,c
 13879  010AA4  22DA               	addwfc	fsr2h,f,c
 13880  010AA6  6ADE               	clrf	postinc2,c
 13881  010AA8  6ADE               	clrf	postinc2,c
 13882  010AAA  6ADE               	clrf	postinc2,c
 13883  010AAC  6ADD               	clrf	postdec2,c
 13884                           
 13885                           ;tcpv4.c: 845: currentTCB->destPort = 0;
 13886  010AAE  EE20 F006          	lfsr	2,6
 13887  010AB2  503B               	movf	_currentTCB,w,c
 13888  010AB4  26D9               	addwf	fsr2l,f,c
 13889  010AB6  503C               	movf	_currentTCB+1,w,c
 13890  010AB8  22DA               	addwfc	fsr2h,f,c
 13891  010ABA  0E00               	movlw	0
 13892  010ABC  6EDE               	movwf	postinc2,c
 13893  010ABE  0E00               	movlw	0
 13894  010AC0  6EDD               	movwf	postdec2,c
 13895                           
 13896                           ;tcpv4.c: 846: currentTCB->localSeqno = 0;
 13897  010AC2  EE20 F010          	lfsr	2,16
 13898  010AC6  503B               	movf	_currentTCB,w,c
 13899  010AC8  26D9               	addwf	fsr2l,f,c
 13900  010ACA  503C               	movf	_currentTCB+1,w,c
 13901  010ACC  22DA               	addwfc	fsr2h,f,c
 13902  010ACE  6ADE               	clrf	postinc2,c
 13903  010AD0  6ADE               	clrf	postinc2,c
 13904  010AD2  6ADE               	clrf	postinc2,c
 13905  010AD4  6ADD               	clrf	postdec2,c
 13906                           
 13907                           ;tcpv4.c: 847: currentTCB->localLastAck = 0;
 13908  010AD6  EE20 F014          	lfsr	2,20
 13909  010ADA  503B               	movf	_currentTCB,w,c
 13910  010ADC  26D9               	addwf	fsr2l,f,c
 13911  010ADE  503C               	movf	_currentTCB+1,w,c
 13912  010AE0  22DA               	addwfc	fsr2h,f,c
 13913  010AE2  6ADE               	clrf	postinc2,c
 13914  010AE4  6ADE               	clrf	postinc2,c
 13915  010AE6  6ADE               	clrf	postinc2,c
 13916  010AE8  6ADD               	clrf	postdec2,c
 13917                           
 13918                           ;tcpv4.c: 848: currentTCB->remoteSeqno = 0;
 13919  010AEA  EE20 F008          	lfsr	2,8
 13920  010AEE  503B               	movf	_currentTCB,w,c
 13921  010AF0  26D9               	addwf	fsr2l,f,c
 13922  010AF2  503C               	movf	_currentTCB+1,w,c
 13923  010AF4  22DA               	addwfc	fsr2h,f,c
 13924  010AF6  6ADE               	clrf	postinc2,c
 13925  010AF8  6ADE               	clrf	postinc2,c
 13926  010AFA  6ADE               	clrf	postinc2,c
 13927  010AFC  6ADD               	clrf	postdec2,c
 13928                           
 13929                           ;tcpv4.c: 849: currentTCB->remoteAck = 0;
 13930  010AFE  EE20 F00C          	lfsr	2,12
 13931  010B02  503B               	movf	_currentTCB,w,c
 13932  010B04  26D9               	addwf	fsr2l,f,c
 13933  010B06  503C               	movf	_currentTCB+1,w,c
 13934  010B08  22DA               	addwfc	fsr2h,f,c
 13935  010B0A  6ADE               	clrf	postinc2,c
 13936  010B0C  6ADE               	clrf	postinc2,c
 13937  010B0E  6ADE               	clrf	postinc2,c
 13938  010B10  6ADD               	clrf	postdec2,c
 13939                           
 13940                           ;tcpv4.c: 850: currentTCB->remoteWnd = 0;
 13941  010B12  EE20 F018          	lfsr	2,24
 13942  010B16  503B               	movf	_currentTCB,w,c
 13943  010B18  26D9               	addwf	fsr2l,f,c
 13944  010B1A  503C               	movf	_currentTCB+1,w,c
 13945  010B1C  22DA               	addwfc	fsr2h,f,c
 13946  010B1E  0E00               	movlw	0
 13947  010B20  6EDE               	movwf	postinc2,c
 13948  010B22  0E00               	movlw	0
 13949  010B24  6EDD               	movwf	postdec2,c
 13950                           
 13951                           ;tcpv4.c: 852: currentTCB->mss = 1460u;
 13952  010B26  EE20 F01C          	lfsr	2,28
 13953  010B2A  503B               	movf	_currentTCB,w,c
 13954  010B2C  26D9               	addwf	fsr2l,f,c
 13955  010B2E  503C               	movf	_currentTCB+1,w,c
 13956  010B30  22DA               	addwfc	fsr2h,f,c
 13957  010B32  0EB4               	movlw	180
 13958  010B34  6EDE               	movwf	postinc2,c
 13959  010B36  0E05               	movlw	5
 13960  010B38  6EDD               	movwf	postdec2,c
 13961                           
 13962                           ; BSR set to: 2
 13963                           ;tcpv4.c: 854: nextState = LISTEN;
 13964  010B3A  0E01               	movlw	1
 13965  010B3C  D32D               	goto	L23
 13966  010B3E                     
 13967                           ; BSR set to: 1
 13968                           ;tcpv4.c: 859: if (currentTCB->timeoutsCount)
 13969                           
 13970                           ; BSR set to: 1
 13971  010B3E  EE20 F037          	lfsr	2,55
 13972  010B42  503B               	movf	_currentTCB,w,c
 13973  010B44  26D9               	addwf	fsr2l,f,c
 13974  010B46  503C               	movf	_currentTCB+1,w,c
 13975  010B48  22DA               	addwfc	fsr2h,f,c
 13976  010B4A  50DF               	movf	indf2,w,c
 13977  010B4C  B4D8               	btfsc	status,2,c
 13978  010B4E  D008               	goto	l1730
 13979                           
 13980                           ; BSR set to: 1
 13981                           ;tcpv4.c: 860: {
 13982                           ;tcpv4.c: 861: TCP_Snd(currentTCB);
 13983  010B50  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 13984  010B54  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 13985  010B58  EC61  F08D         	call	_TCP_Snd	;wreg free
 13986                           
 13987                           ;tcpv4.c: 862: }
 13988  010B5C  EFF1  F089         	goto	l1687
 13989  010B60                     l1730:
 13990                           
 13991                           ;tcpv4.c: 863: else
 13992                           ;tcpv4.c: 864: {
 13993                           ;tcpv4.c: 866: currentTCB->flags = 0x04U;
 13994  010B60  EE20 F038          	lfsr	2,56
 13995  010B64  503B               	movf	_currentTCB,w,c
 13996  010B66  26D9               	addwf	fsr2l,f,c
 13997  010B68  503C               	movf	_currentTCB+1,w,c
 13998  010B6A  22DA               	addwfc	fsr2h,f,c
 13999  010B6C  0E04               	movlw	4
 14000  010B6E  6EDF               	movwf	indf2,c
 14001                           
 14002                           ;tcpv4.c: 867: if(TCP_Snd(currentTCB))
 14003  010B70  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14004  010B74  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14005  010B78  EC61  F08D         	call	_TCP_Snd	;wreg free
 14006  010B7C  0900               	iorlw	0
 14007  010B7E  B4D8               	btfsc	status,2,c
 14008  010B80  EFF1  F089         	goto	l1687
 14009                           
 14010                           ;tcpv4.c: 868: {
 14011                           ;tcpv4.c: 869: currentTCB->destIP = 0;
 14012  010B84  EE20 F002          	lfsr	2,2
 14013  010B88  503B               	movf	_currentTCB,w,c
 14014  010B8A  26D9               	addwf	fsr2l,f,c
 14015  010B8C  503C               	movf	_currentTCB+1,w,c
 14016  010B8E  22DA               	addwfc	fsr2h,f,c
 14017  010B90  6ADE               	clrf	postinc2,c
 14018  010B92  6ADE               	clrf	postinc2,c
 14019  010B94  6ADE               	clrf	postinc2,c
 14020  010B96  6ADD               	clrf	postdec2,c
 14021                           
 14022                           ;tcpv4.c: 870: currentTCB->destPort = 0;
 14023  010B98  EE20 F006          	lfsr	2,6
 14024  010B9C  503B               	movf	_currentTCB,w,c
 14025  010B9E  26D9               	addwf	fsr2l,f,c
 14026  010BA0  503C               	movf	_currentTCB+1,w,c
 14027  010BA2  22DA               	addwfc	fsr2h,f,c
 14028  010BA4  0E00               	movlw	0
 14029  010BA6  6EDE               	movwf	postinc2,c
 14030  010BA8  0E00               	movlw	0
 14031  010BAA  6EDD               	movwf	postdec2,c
 14032                           
 14033                           ;tcpv4.c: 871: currentTCB->localSeqno = 0;
 14034  010BAC  EE20 F010          	lfsr	2,16
 14035  010BB0  503B               	movf	_currentTCB,w,c
 14036  010BB2  26D9               	addwf	fsr2l,f,c
 14037  010BB4  503C               	movf	_currentTCB+1,w,c
 14038  010BB6  22DA               	addwfc	fsr2h,f,c
 14039  010BB8  6ADE               	clrf	postinc2,c
 14040  010BBA  6ADE               	clrf	postinc2,c
 14041  010BBC  6ADE               	clrf	postinc2,c
 14042  010BBE  6ADD               	clrf	postdec2,c
 14043                           
 14044                           ;tcpv4.c: 872: currentTCB->localLastAck = 0;
 14045  010BC0  EE20 F014          	lfsr	2,20
 14046  010BC4  503B               	movf	_currentTCB,w,c
 14047  010BC6  26D9               	addwf	fsr2l,f,c
 14048  010BC8  503C               	movf	_currentTCB+1,w,c
 14049  010BCA  22DA               	addwfc	fsr2h,f,c
 14050  010BCC  6ADE               	clrf	postinc2,c
 14051  010BCE  6ADE               	clrf	postinc2,c
 14052  010BD0  6ADE               	clrf	postinc2,c
 14053  010BD2  6ADD               	clrf	postdec2,c
 14054                           
 14055                           ;tcpv4.c: 873: currentTCB->remoteSeqno = 0;
 14056  010BD4  EE20 F008          	lfsr	2,8
 14057  010BD8  503B               	movf	_currentTCB,w,c
 14058  010BDA  26D9               	addwf	fsr2l,f,c
 14059  010BDC  503C               	movf	_currentTCB+1,w,c
 14060  010BDE  22DA               	addwfc	fsr2h,f,c
 14061  010BE0  6ADE               	clrf	postinc2,c
 14062  010BE2  6ADE               	clrf	postinc2,c
 14063  010BE4  6ADE               	clrf	postinc2,c
 14064  010BE6  6ADD               	clrf	postdec2,c
 14065                           
 14066                           ;tcpv4.c: 874: currentTCB->remoteAck = 0;
 14067  010BE8  EE20 F00C          	lfsr	2,12
 14068  010BEC  503B               	movf	_currentTCB,w,c
 14069  010BEE  26D9               	addwf	fsr2l,f,c
 14070  010BF0  503C               	movf	_currentTCB+1,w,c
 14071  010BF2  22DA               	addwfc	fsr2h,f,c
 14072  010BF4  6ADE               	clrf	postinc2,c
 14073  010BF6  6ADE               	clrf	postinc2,c
 14074  010BF8  6ADE               	clrf	postinc2,c
 14075  010BFA  6ADD               	clrf	postdec2,c
 14076                           
 14077                           ;tcpv4.c: 875: currentTCB->remoteWnd = 0;
 14078  010BFC  EE20 F018          	lfsr	2,24
 14079  010C00  503B               	movf	_currentTCB,w,c
 14080  010C02  26D9               	addwf	fsr2l,f,c
 14081  010C04  503C               	movf	_currentTCB+1,w,c
 14082  010C06  22DA               	addwfc	fsr2h,f,c
 14083  010C08  0E00               	movlw	0
 14084  010C0A  6EDE               	movwf	postinc2,c
 14085  010C0C  0E00               	movlw	0
 14086  010C0E  6EDD               	movwf	postdec2,c
 14087                           
 14088                           ;tcpv4.c: 877: currentTCB->mss = 1460u;
 14089  010C10  EE20 F01C          	lfsr	2,28
 14090  010C14  503B               	movf	_currentTCB,w,c
 14091  010C16  26D9               	addwf	fsr2l,f,c
 14092  010C18  503C               	movf	_currentTCB+1,w,c
 14093  010C1A  22DA               	addwfc	fsr2h,f,c
 14094  010C1C  0EB4               	movlw	180
 14095  010C1E  6EDE               	movwf	postinc2,c
 14096  010C20  0E05               	movlw	5
 14097  010C22  6EDD               	movwf	postdec2,c
 14098                           
 14099                           ;tcpv4.c: 878: nextState = LISTEN;
 14100  010C24  0E01               	movlw	1
 14101  010C26  D2B8               	goto	L23
 14102  010C28                     
 14103                           ; BSR set to: 1
 14104  010C28  0101               	movlb	1	; () banked
 14105  010C2A  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 14106                           
 14107                           ; Switch size 1, requested type "space"
 14108                           ; Number of cases is 6, Range of values is 0 to 12
 14109                           ; switch strategies available:
 14110                           ; Name         Instructions Cycles
 14111                           ; simple_byte           19    10 (average)
 14112                           ;	Chosen strategy is simple_byte
 14113  010C2C  0A00               	xorlw	0	; case 0
 14114  010C2E  B4D8               	btfsc	status,2,c
 14115  010C30  D6DB               	goto	l1724
 14116  010C32  0A04               	xorlw	4	; case 4
 14117  010C34  B4D8               	btfsc	status,2,c
 14118  010C36  D63A               	goto	l1720
 14119  010C38  0A01               	xorlw	1	; case 5
 14120  010C3A  B4D8               	btfsc	status,2,c
 14121  010C3C  D5CE               	goto	l1715
 14122  010C3E  0A0C               	xorlw	12	; case 9
 14123  010C40  B4D8               	btfsc	status,2,c
 14124  010C42  D70A               	goto	l1725
 14125  010C44  0A03               	xorlw	3	; case 10
 14126  010C46  B4D8               	btfsc	status,2,c
 14127  010C48  D707               	goto	l1725
 14128  010C4A  0A06               	xorlw	6	; case 12
 14129  010C4C  B4D8               	btfsc	status,2,c
 14130  010C4E  D777               	goto	l1729
 14131                           
 14132                           ; BSR set to: 1
 14133                           ;tcpv4.c: 886: break;
 14134  010C50  D3C8               	goto	l1687
 14135  010C52                     
 14136                           ; BSR set to: 1
 14137                           ;tcpv4.c: 891: if (currentTCB->destIP == receivedRemoteAddress)
 14138                           
 14139                           ; BSR set to: 1
 14140  010C52  EE20 F002          	lfsr	2,2
 14141  010C56  503B               	movf	_currentTCB,w,c
 14142  010C58  26D9               	addwf	fsr2l,f,c
 14143  010C5A  503C               	movf	_currentTCB+1,w,c
 14144  010C5C  22DA               	addwfc	fsr2h,f,c
 14145  010C5E  0102               	movlb	2	; () banked
 14146  010C60  512A               	movf	_receivedRemoteAddress& (0+255),w,b
 14147  010C62  18DE               	xorwf	postinc2,w,c
 14148  010C64  E109               	bnz	u10691
 14149  010C66  512B               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 14150  010C68  18DE               	xorwf	postinc2,w,c
 14151  010C6A  E106               	bnz	u10691
 14152  010C6C  512C               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 14153  010C6E  18DE               	xorwf	postinc2,w,c
 14154  010C70  E103               	bnz	u10691
 14155  010C72  512D               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 14156  010C74  18DE               	xorwf	postinc2,w,c
 14157  010C76  A4D8               	btfss	status,2,c
 14158  010C78                     u10691:
 14159  010C78  D3B4               	goto	l1687
 14160                           
 14161                           ; BSR set to: 2
 14162                           ;tcpv4.c: 892: {
 14163                           ;tcpv4.c: 896: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 14164  010C7A  EE20 F00C          	lfsr	2,12
 14165  010C7E  503B               	movf	_currentTCB,w,c
 14166  010C80  26D9               	addwf	fsr2l,f,c
 14167  010C82  503C               	movf	_currentTCB+1,w,c
 14168  010C84  22DA               	addwfc	fsr2h,f,c
 14169  010C86  5158               	movf	(_tcpHeader+4)& (0+255),w,b
 14170  010C88  18DE               	xorwf	postinc2,w,c
 14171  010C8A  E109               	bnz	u10701
 14172  010C8C  5159               	movf	(_tcpHeader+5)& (0+255),w,b
 14173  010C8E  18DE               	xorwf	postinc2,w,c
 14174  010C90  E106               	bnz	u10701
 14175  010C92  515A               	movf	(_tcpHeader+6)& (0+255),w,b
 14176  010C94  18DE               	xorwf	postinc2,w,c
 14177  010C96  E103               	bnz	u10701
 14178  010C98  515B               	movf	(_tcpHeader+7)& (0+255),w,b
 14179  010C9A  18DE               	xorwf	postinc2,w,c
 14180  010C9C  A4D8               	btfss	status,2,c
 14181  010C9E                     u10701:
 14182  010C9E  D3A1               	goto	l1687
 14183                           
 14184                           ; BSR set to: 2
 14185                           ;tcpv4.c: 897: {
 14186                           ;tcpv4.c: 901: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 14187  010CA0  EE20 F014          	lfsr	2,20
 14188  010CA4  503B               	movf	_currentTCB,w,c
 14189  010CA6  26D9               	addwf	fsr2l,f,c
 14190  010CA8  503C               	movf	_currentTCB+1,w,c
 14191  010CAA  22DA               	addwfc	fsr2h,f,c
 14192  010CAC  515C               	movf	(_tcpHeader+8)& (0+255),w,b
 14193  010CAE  5CDE               	subwf	postinc2,w,c
 14194  010CB0  515D               	movf	(_tcpHeader+9)& (0+255),w,b
 14195  010CB2  58DE               	subwfb	postinc2,w,c
 14196  010CB4  515E               	movf	(_tcpHeader+10)& (0+255),w,b
 14197  010CB6  58DE               	subwfb	postinc2,w,c
 14198  010CB8  515F               	movf	(_tcpHeader+11)& (0+255),w,b
 14199  010CBA  58DE               	subwfb	postinc2,w,c
 14200  010CBC  B0D8               	btfsc	status,0,c
 14201  010CBE  D391               	goto	l1687
 14202                           
 14203                           ; BSR set to: 2
 14204                           ;tcpv4.c: 902: {
 14205                           ;tcpv4.c: 904: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 14206  010CC0  EE20 F010          	lfsr	2,16
 14207  010CC4  503B               	movf	_currentTCB,w,c
 14208  010CC6  26D9               	addwf	fsr2l,f,c
 14209  010CC8  503C               	movf	_currentTCB+1,w,c
 14210  010CCA  22DA               	addwfc	fsr2h,f,c
 14211  010CCC  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14212  010CD0  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14213  010CD4  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14214  010CD8  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14215  010CDC  0E01               	movlw	1
 14216  010CDE  0100               	movlb	0	; () banked
 14217  010CE0  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14218  010CE2  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14219  010CE4  0E00               	movlw	0
 14220  010CE6  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14221  010CE8  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14222  010CEA  0E00               	movlw	0
 14223  010CEC  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14224  010CEE  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14225  010CF0  0E00               	movlw	0
 14226  010CF2  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14227  010CF4  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14228  010CF6  0102               	movlb	2	; () banked
 14229  010CF8  515C               	movf	(_tcpHeader+8)& (0+255),w,b
 14230  010CFA  0100               	movlb	0	; () banked
 14231  010CFC  5DF8               	subwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 14232  010CFE  0102               	movlb	2	; () banked
 14233  010D00  515D               	movf	(_tcpHeader+9)& (0+255),w,b
 14234  010D02  0100               	movlb	0	; () banked
 14235  010D04  59F9               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 14236  010D06  0102               	movlb	2	; () banked
 14237  010D08  515E               	movf	(_tcpHeader+10)& (0+255),w,b
 14238  010D0A  0100               	movlb	0	; () banked
 14239  010D0C  59FA               	subwfb	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 14240  010D0E  0102               	movlb	2	; () banked
 14241  010D10  515F               	movf	(_tcpHeader+11)& (0+255),w,b
 14242  010D12  0100               	movlb	0	; () banked
 14243  010D14  59FB               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 14244  010D16  A0D8               	btfss	status,0,c
 14245  010D18  D364               	goto	l1687
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;tcpv4.c: 905: {
 14249                           ;tcpv4.c: 906: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 14250  010D1A  EE20 F010          	lfsr	2,16
 14251  010D1E  503B               	movf	_currentTCB,w,c
 14252  010D20  26D9               	addwf	fsr2l,f,c
 14253  010D22  503C               	movf	_currentTCB+1,w,c
 14254  010D24  22DA               	addwfc	fsr2h,f,c
 14255  010D26  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14256  010D2A  CFDD F0F5          	movff	postdec2,??_TCP_FiniteStateMachine+1
 14257  010D2E  EE22  F05C         	lfsr	2,_tcpHeader+8
 14258  010D32  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14259  010D36  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 14260  010D3A  1FF6               	comf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14261  010D3C  1FF7               	comf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14262  010D3E  4BF6               	infsnz	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14263  010D40  2BF7               	incf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14264  010D42  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 14265  010D44  25F6               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14266  010D46  0101               	movlb	1	; () banked
 14267  010D48  6F01               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 14268  010D4A  0100               	movlb	0	; () banked
 14269  010D4C  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14270  010D4E  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14271  010D50  0101               	movlb	1	; () banked
 14272  010D52  6F02               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 14273                           
 14274                           ;tcpv4.c: 909: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 14275  010D54  C101  F0F4         	movff	TCP_FiniteStateMachine@notAckBytes,??_TCP_FiniteStateMachine
 14276  010D58  C102  F0F5         	movff	TCP_FiniteStateMachine@notAckBytes+1,??_TCP_FiniteStateMachine+1
 14277  010D5C  0100               	movlb	0	; () banked
 14278  010D5E  1FF4               	comf	??_TCP_FiniteStateMachine& (0+255),f,b
 14279  010D60  1FF5               	comf	(??_TCP_FiniteStateMachine+1)& (0+255),f,b
 14280  010D62  4BF4               	infsnz	??_TCP_FiniteStateMachine& (0+255),f,b
 14281  010D64  2BF5               	incf	(??_TCP_FiniteStateMachine+1)& (0+255),f,b
 14282  010D66  EE20 F025          	lfsr	2,37
 14283  010D6A  503B               	movf	_currentTCB,w,c
 14284  010D6C  26D9               	addwf	fsr2l,f,c
 14285  010D6E  503C               	movf	_currentTCB+1,w,c
 14286  010D70  22DA               	addwfc	fsr2h,f,c
 14287  010D72  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14288  010D76  CFDD F0F7          	movff	postdec2,??_TCP_FiniteStateMachine+3
 14289  010D7A  51F4               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 14290  010D7C  27F6               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14291  010D7E  51F5               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14292  010D80  23F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14293  010D82  EE20 F025          	lfsr	2,37
 14294  010D86  503B               	movf	_currentTCB,w,c
 14295  010D88  26D9               	addwf	fsr2l,f,c
 14296  010D8A  503C               	movf	_currentTCB+1,w,c
 14297  010D8C  22DA               	addwfc	fsr2h,f,c
 14298  010D8E  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 14299  010D92  C0F7  FFDD         	movff	??_TCP_FiniteStateMachine+3,postdec2
 14300                           
 14301                           ;tcpv4.c: 910: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 14302  010D96  EE20 F027          	lfsr	2,39
 14303  010D9A  503B               	movf	_currentTCB,w,c
 14304  010D9C  26D9               	addwf	fsr2l,f,c
 14305  010D9E  503C               	movf	_currentTCB+1,w,c
 14306  010DA0  22DA               	addwfc	fsr2h,f,c
 14307  010DA2  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14308  010DA6  CFDD F0F5          	movff	postdec2,??_TCP_FiniteStateMachine+1
 14309  010DAA  0101               	movlb	1	; () banked
 14310  010DAC  5101               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 14311  010DAE  0100               	movlb	0	; () banked
 14312  010DB0  27F4               	addwf	??_TCP_FiniteStateMachine& (0+255),f,b
 14313  010DB2  0101               	movlb	1	; () banked
 14314  010DB4  5102               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 14315  010DB6  0100               	movlb	0	; () banked
 14316  010DB8  23F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),f,b
 14317  010DBA  EE20 F027          	lfsr	2,39
 14318  010DBE  503B               	movf	_currentTCB,w,c
 14319  010DC0  26D9               	addwf	fsr2l,f,c
 14320  010DC2  503C               	movf	_currentTCB+1,w,c
 14321  010DC4  22DA               	addwfc	fsr2h,f,c
 14322  010DC6  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 14323  010DCA  C0F5  FFDD         	movff	??_TCP_FiniteStateMachine+1,postdec2
 14324                           
 14325                           ;tcpv4.c: 912: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 14326  010DCE  EE22  F05C         	lfsr	2,_tcpHeader+8
 14327  010DD2  0EFF               	movlw	255
 14328  010DD4  24DE               	addwf	postinc2,w,c
 14329  010DD6  6FF4               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14330  010DD8  0EFF               	movlw	255
 14331  010DDA  20DE               	addwfc	postinc2,w,c
 14332  010DDC  6FF5               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14333  010DDE  0EFF               	movlw	255
 14334  010DE0  20DE               	addwfc	postinc2,w,c
 14335  010DE2  6FF6               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 14336  010DE4  0EFF               	movlw	255
 14337  010DE6  20DE               	addwfc	postinc2,w,c
 14338  010DE8  6FF7               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14339  010DEA  EE20 F014          	lfsr	2,20
 14340  010DEE  503B               	movf	_currentTCB,w,c
 14341  010DF0  26D9               	addwf	fsr2l,f,c
 14342  010DF2  503C               	movf	_currentTCB+1,w,c
 14343  010DF4  22DA               	addwfc	fsr2h,f,c
 14344  010DF6  C0F4  FFDE         	movff	??_TCP_FiniteStateMachine,postinc2
 14345  010DFA  C0F5  FFDE         	movff	??_TCP_FiniteStateMachine+1,postinc2
 14346  010DFE  C0F6  FFDE         	movff	??_TCP_FiniteStateMachine+2,postinc2
 14347  010E02  C0F7  FFDE         	movff	??_TCP_FiniteStateMachine+3,postinc2
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;tcpv4.c: 913: currentTCB->localSeqno = tcpHeader.ackNumber;
 14351  010E06  EE22  F05C         	lfsr	2,_tcpHeader+8
 14352  010E0A  EE10 F010          	lfsr	1,16
 14353  010E0E  503B               	movf	_currentTCB,w,c
 14354  010E10  26E1               	addwf	fsr1l,f,c
 14355  010E12  503C               	movf	_currentTCB+1,w,c
 14356  010E14  22E2               	addwfc	fsr1h,f,c
 14357  010E16  CFDE FFE6          	movff	postinc2,postinc1
 14358  010E1A  CFDE FFE6          	movff	postinc2,postinc1
 14359  010E1E  CFDE FFE6          	movff	postinc2,postinc1
 14360  010E22  CFDE FFE6          	movff	postinc2,postinc1
 14361                           
 14362                           ; BSR set to: 0
 14363                           ;tcpv4.c: 916: if(currentTCB->bytesToSend == 0)
 14364  010E26  EE20 F027          	lfsr	2,39
 14365  010E2A  503B               	movf	_currentTCB,w,c
 14366  010E2C  26D9               	addwf	fsr2l,f,c
 14367  010E2E  503C               	movf	_currentTCB+1,w,c
 14368  010E30  22DA               	addwfc	fsr2h,f,c
 14369  010E32  50DE               	movf	postinc2,w,c
 14370  010E34  10DE               	iorwf	postinc2,w,c
 14371  010E36  A4D8               	btfss	status,2,c
 14372  010E38  D01D               	goto	l1741
 14373                           
 14374                           ; BSR set to: 0
 14375                           ;tcpv4.c: 917: {
 14376                           ;tcpv4.c: 918: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 14377  010E3A  EE20 F029          	lfsr	2,41
 14378  010E3E  503B               	movf	_currentTCB,w,c
 14379  010E40  26D9               	addwf	fsr2l,f,c
 14380  010E42  503C               	movf	_currentTCB+1,w,c
 14381  010E44  22DA               	addwfc	fsr2h,f,c
 14382  010E46  0E02               	movlw	2
 14383  010E48  18DE               	xorwf	postinc2,w,c
 14384  010E4A  A4D8               	btfss	status,2,c
 14385  010E4C  D029               	goto	l1743
 14386                           
 14387                           ; BSR set to: 0
 14388                           ;tcpv4.c: 919: {
 14389                           ;tcpv4.c: 920: currentTCB->txBufState = NO_BUFF;
 14390  010E4E  EE20 F029          	lfsr	2,41
 14391  010E52  503B               	movf	_currentTCB,w,c
 14392  010E54  26D9               	addwf	fsr2l,f,c
 14393  010E56  503C               	movf	_currentTCB+1,w,c
 14394  010E58  22DA               	addwfc	fsr2h,f,c
 14395  010E5A  0E00               	movlw	0
 14396  010E5C  6EDF               	movwf	indf2,c
 14397                           
 14398                           ;tcpv4.c: 922: currentTCB->timeout = 0;
 14399  010E5E  EE20 F033          	lfsr	2,51
 14400  010E62  503B               	movf	_currentTCB,w,c
 14401  010E64  26D9               	addwf	fsr2l,f,c
 14402  010E66  503C               	movf	_currentTCB+1,w,c
 14403  010E68  22DA               	addwfc	fsr2h,f,c
 14404  010E6A  0E00               	movlw	0
 14405  010E6C  6EDE               	movwf	postinc2,c
 14406  010E6E  0E00               	movlw	0
 14407  010E70  6EDD               	movwf	postdec2,c
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;tcpv4.c: 923: }
 14411                           ;tcpv4.c: 924: }
 14412  010E72  D016               	goto	l1743
 14413  010E74                     l1741:
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;tcpv4.c: 925: else
 14417                           ;tcpv4.c: 926: {
 14418                           ;tcpv4.c: 927: currentTCB->bytesSent = currentTCB->bytesToSend;
 14419                           
 14420                           ; BSR set to: 0
 14421  010E74  EE20 F027          	lfsr	2,39
 14422  010E78  503B               	movf	_currentTCB,w,c
 14423  010E7A  26D9               	addwf	fsr2l,f,c
 14424  010E7C  503C               	movf	_currentTCB+1,w,c
 14425  010E7E  22DA               	addwfc	fsr2h,f,c
 14426  010E80  EE10 F02A          	lfsr	1,42
 14427  010E84  503B               	movf	_currentTCB,w,c
 14428  010E86  26E1               	addwf	fsr1l,f,c
 14429  010E88  503C               	movf	_currentTCB+1,w,c
 14430  010E8A  22E2               	addwfc	fsr1h,f,c
 14431  010E8C  CFDE FFE6          	movff	postinc2,postinc1
 14432  010E90  CFDD FFE5          	movff	postdec2,postdec1
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;tcpv4.c: 928: TCP_Snd(currentTCB);
 14436  010E94  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14437  010E98  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14438  010E9C  EC61  F08D         	call	_TCP_Snd	;wreg free
 14439  010EA0                     l1743:
 14440                           
 14441                           ;tcpv4.c: 929: }
 14442                           ;tcpv4.c: 933: if(rcvPayloadLen > 0)
 14443  010EA0  0102               	movlb	2	; () banked
 14444  010EA2  5144               	movf	_rcvPayloadLen& (0+255),w,b
 14445  010EA4  1145               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 14446  010EA6  B4D8               	btfsc	status,2,c
 14447  010EA8  D29C               	goto	l1687
 14448                           
 14449                           ; BSR set to: 2
 14450                           ;tcpv4.c: 934: {
 14451                           ;tcpv4.c: 935: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 14452  010EAA  EE22  F058         	lfsr	2,_tcpHeader+4
 14453  010EAE  EE10 F008          	lfsr	1,8
 14454  010EB2  503B               	movf	_currentTCB,w,c
 14455  010EB4  26E1               	addwf	fsr1l,f,c
 14456  010EB6  503C               	movf	_currentTCB+1,w,c
 14457  010EB8  22E2               	addwfc	fsr1h,f,c
 14458  010EBA  CFDE FFE6          	movff	postinc2,postinc1
 14459  010EBE  CFDE FFE6          	movff	postinc2,postinc1
 14460  010EC2  CFDE FFE6          	movff	postinc2,postinc1
 14461  010EC6  CFDE FFE6          	movff	postinc2,postinc1
 14462                           
 14463                           ; BSR set to: 2
 14464                           ;tcpv4.c: 938: TCP_PayloadSave(rcvPayloadLen);
 14465  010ECA  C244  F0E7         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 14466  010ECE  C245  F0E8         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 14467  010ED2  ECF3  F0A5         	call	_TCP_PayloadSave	;wreg free
 14468                           
 14469                           ;tcpv4.c: 944: }
 14470                           ;tcpv4.c: 945: }
 14471                           ;tcpv4.c: 946: }
 14472                           ;tcpv4.c: 947: }
 14473                           ;tcpv4.c: 948: break;
 14474                           
 14475                           ;tcpv4.c: 941: {
 14476                           
 14477                           ;tcpv4.c: 939: }
 14478                           ;tcpv4.c: 940: }else
 14479  010ED6  D285               	goto	l1687
 14480  010ED8                     
 14481                           ;tcpv4.c: 950: currentTCB->flags = 0x01U;
 14482  010ED8  EE20 F038          	lfsr	2,56
 14483  010EDC  503B               	movf	_currentTCB,w,c
 14484  010EDE  26D9               	addwf	fsr2l,f,c
 14485  010EE0  503C               	movf	_currentTCB+1,w,c
 14486  010EE2  22DA               	addwfc	fsr2h,f,c
 14487  010EE4  0E01               	movlw	1
 14488  010EE6  6EDF               	movwf	indf2,c
 14489                           
 14490                           ;tcpv4.c: 951: nextState = FIN_WAIT_1;
 14491  010EE8  0E05               	movlw	5
 14492  010EEA  0101               	movlb	1	; () banked
 14493  010EEC  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14494                           
 14495                           ; BSR set to: 1
 14496                           ;tcpv4.c: 952: TCP_Snd(currentTCB);
 14497  010EEE  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14498  010EF2  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14499  010EF6  EC61  F08D         	call	_TCP_Snd	;wreg free
 14500                           
 14501                           ;tcpv4.c: 955: break;
 14502                           
 14503                           ;tcpv4.c: 954: case RCV_FIN:
 14504                           
 14505                           ;tcpv4.c: 953: break;
 14506  010EFA  D273               	goto	l1687
 14507  010EFC                     
 14508                           ;tcpv4.c: 957: currentTCB->bytesSent = 0;
 14509  010EFC  EE20 F02A          	lfsr	2,42
 14510  010F00  503B               	movf	_currentTCB,w,c
 14511  010F02  26D9               	addwf	fsr2l,f,c
 14512  010F04  503C               	movf	_currentTCB+1,w,c
 14513  010F06  22DA               	addwfc	fsr2h,f,c
 14514  010F08  0E00               	movlw	0
 14515  010F0A  6EDE               	movwf	postinc2,c
 14516  010F0C  0E00               	movlw	0
 14517  010F0E  6EDD               	movwf	postdec2,c
 14518                           
 14519                           ;tcpv4.c: 960: currentTCB->localSeqno = tcpHeader.ackNumber;
 14520  010F10  EE22  F05C         	lfsr	2,_tcpHeader+8
 14521  010F14  EE10 F010          	lfsr	1,16
 14522  010F18  503B               	movf	_currentTCB,w,c
 14523  010F1A  26E1               	addwf	fsr1l,f,c
 14524  010F1C  503C               	movf	_currentTCB+1,w,c
 14525  010F1E  22E2               	addwfc	fsr1h,f,c
 14526  010F20  CFDE FFE6          	movff	postinc2,postinc1
 14527  010F24  CFDE FFE6          	movff	postinc2,postinc1
 14528  010F28  CFDE FFE6          	movff	postinc2,postinc1
 14529  010F2C  CFDE FFE6          	movff	postinc2,postinc1
 14530                           
 14531                           ;tcpv4.c: 961: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 14532  010F30  EE20 F00C          	lfsr	2,12
 14533  010F34  503B               	movf	_currentTCB,w,c
 14534  010F36  26D9               	addwf	fsr2l,f,c
 14535  010F38  503C               	movf	_currentTCB+1,w,c
 14536  010F3A  22DA               	addwfc	fsr2h,f,c
 14537  010F3C  CFDE F0F4          	movff	postinc2,??_TCP_FiniteStateMachine
 14538  010F40  CFDE F0F5          	movff	postinc2,??_TCP_FiniteStateMachine+1
 14539  010F44  CFDE F0F6          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14540  010F48  CFDE F0F7          	movff	postinc2,??_TCP_FiniteStateMachine+3
 14541  010F4C  0E01               	movlw	1
 14542  010F4E  0100               	movlb	0	; () banked
 14543  010F50  25F4               	addwf	??_TCP_FiniteStateMachine& (0+255),w,b
 14544  010F52  6FF8               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14545  010F54  0E00               	movlw	0
 14546  010F56  21F5               	addwfc	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14547  010F58  6FF9               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14548  010F5A  0E00               	movlw	0
 14549  010F5C  21F6               	addwfc	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14550  010F5E  6FFA               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14551  010F60  0E00               	movlw	0
 14552  010F62  21F7               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14553  010F64  6FFB               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14554  010F66  EE20 F00C          	lfsr	2,12
 14555  010F6A  503B               	movf	_currentTCB,w,c
 14556  010F6C  26D9               	addwf	fsr2l,f,c
 14557  010F6E  503C               	movf	_currentTCB+1,w,c
 14558  010F70  22DA               	addwfc	fsr2h,f,c
 14559  010F72  C0F8  FFDE         	movff	??_TCP_FiniteStateMachine+4,postinc2
 14560  010F76  C0F9  FFDE         	movff	??_TCP_FiniteStateMachine+5,postinc2
 14561  010F7A  C0FA  FFDE         	movff	??_TCP_FiniteStateMachine+6,postinc2
 14562  010F7E  C0FB  FFDE         	movff	??_TCP_FiniteStateMachine+7,postinc2
 14563                           
 14564                           ; BSR set to: 0
 14565                           ;tcpv4.c: 963: currentTCB->socketState = SOCKET_CLOSING;
 14566  010F82  EE20 F039          	lfsr	2,57
 14567  010F86  503B               	movf	_currentTCB,w,c
 14568  010F88  26D9               	addwf	fsr2l,f,c
 14569  010F8A  503C               	movf	_currentTCB+1,w,c
 14570  010F8C  22DA               	addwfc	fsr2h,f,c
 14571  010F8E  0E04               	movlw	4
 14572  010F90  6EDF               	movwf	indf2,c
 14573                           
 14574                           ; BSR set to: 0
 14575                           ;tcpv4.c: 964: currentTCB->timeout = ((unsigned long)1*2);
 14576  010F92  EE20 F033          	lfsr	2,51
 14577  010F96  503B               	movf	_currentTCB,w,c
 14578  010F98  26D9               	addwf	fsr2l,f,c
 14579  010F9A  503C               	movf	_currentTCB+1,w,c
 14580  010F9C  22DA               	addwfc	fsr2h,f,c
 14581  010F9E  0E02               	movlw	2
 14582  010FA0  6EDE               	movwf	postinc2,c
 14583  010FA2  0E00               	movlw	0
 14584  010FA4  6EDD               	movwf	postdec2,c
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;tcpv4.c: 965: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 14588  010FA6  EE20 F035          	lfsr	2,53
 14589  010FAA  503B               	movf	_currentTCB,w,c
 14590  010FAC  26D9               	addwf	fsr2l,f,c
 14591  010FAE  503C               	movf	_currentTCB+1,w,c
 14592  010FB0  22DA               	addwfc	fsr2h,f,c
 14593  010FB2  0E02               	movlw	2
 14594  010FB4  6EDE               	movwf	postinc2,c
 14595  010FB6  0E00               	movlw	0
 14596  010FB8  6EDD               	movwf	postdec2,c
 14597                           
 14598                           ; BSR set to: 0
 14599                           ;tcpv4.c: 966: currentTCB->timeoutsCount = (5u);
 14600  010FBA  EE20 F037          	lfsr	2,55
 14601  010FBE  503B               	movf	_currentTCB,w,c
 14602  010FC0  26D9               	addwf	fsr2l,f,c
 14603  010FC2  503C               	movf	_currentTCB+1,w,c
 14604  010FC4  22DA               	addwfc	fsr2h,f,c
 14605  010FC6  0E05               	movlw	5
 14606  010FC8  6EDF               	movwf	indf2,c
 14607                           
 14608                           ; BSR set to: 0
 14609                           ;tcpv4.c: 968: currentTCB->flags = 0x01U | 0x10U;
 14610  010FCA  EE20 F038          	lfsr	2,56
 14611  010FCE  503B               	movf	_currentTCB,w,c
 14612  010FD0  26D9               	addwf	fsr2l,f,c
 14613  010FD2  503C               	movf	_currentTCB+1,w,c
 14614  010FD4  22DA               	addwfc	fsr2h,f,c
 14615  010FD6  0E11               	movlw	17
 14616  010FD8  6EDF               	movwf	indf2,c
 14617                           
 14618                           ; BSR set to: 0
 14619                           ;tcpv4.c: 970: nextState = LAST_ACK;
 14620  010FDA  0E09               	movlw	9
 14621  010FDC  0101               	movlb	1	; () banked
 14622  010FDE  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14623                           
 14624                           ; BSR set to: 1
 14625                           ;tcpv4.c: 971: TCP_Snd(currentTCB);
 14626  010FE0  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14627  010FE4  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14628  010FE8  EC61  F08D         	call	_TCP_Snd	;wreg free
 14629                           
 14630                           ;tcpv4.c: 972: break;
 14631  010FEC  D1FA               	goto	l1687
 14632  010FEE                     
 14633                           ;tcpv4.c: 974: case RCV_RSTACK:
 14634                           ;tcpv4.c: 975: currentTCB->flags = 0x04U;
 14635  010FEE  EE20 F038          	lfsr	2,56
 14636  010FF2  503B               	movf	_currentTCB,w,c
 14637  010FF4  26D9               	addwf	fsr2l,f,c
 14638  010FF6  503C               	movf	_currentTCB+1,w,c
 14639  010FF8  22DA               	addwfc	fsr2h,f,c
 14640  010FFA  0E04               	movlw	4
 14641  010FFC  6EDF               	movwf	indf2,c
 14642                           
 14643                           ;tcpv4.c: 976: TCP_Snd(currentTCB);
 14644  010FFE  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14645  011002  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14646  011006  EC61  F08D         	call	_TCP_Snd	;wreg free
 14647                           
 14648                           ;tcpv4.c: 977: nextState = CLOSED;
 14649  01100A  0E00               	movlw	0
 14650  01100C  0101               	movlb	1	; () banked
 14651  01100E  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14652                           
 14653                           ; BSR set to: 1
 14654                           ;tcpv4.c: 978: TCB_Reset(currentTCB);
 14655  011010  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14656  011014  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14657  011018  EC90  F0A8         	call	_TCB_Reset	;wreg free
 14658                           
 14659                           ;tcpv4.c: 979: break;
 14660  01101C  D1E2               	goto	l1687
 14661  01101E                     
 14662                           ;tcpv4.c: 981: if (currentTCB->timeoutsCount)
 14663  01101E  EE20 F037          	lfsr	2,55
 14664  011022  503B               	movf	_currentTCB,w,c
 14665  011024  26D9               	addwf	fsr2l,f,c
 14666  011026  503C               	movf	_currentTCB+1,w,c
 14667  011028  22DA               	addwfc	fsr2h,f,c
 14668  01102A  50DF               	movf	indf2,w,c
 14669  01102C  B4D8               	btfsc	status,2,c
 14670  01102E  D007               	goto	l1753
 14671                           
 14672                           ;tcpv4.c: 982: {
 14673                           ;tcpv4.c: 983: TCP_Snd(currentTCB);
 14674  011030  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14675  011034  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14676  011038  EC61  F08D         	call	_TCP_Snd	;wreg free
 14677                           
 14678                           ;tcpv4.c: 984: }else
 14679  01103C  D1D2               	goto	l1687
 14680  01103E                     l1753:
 14681                           
 14682                           ;tcpv4.c: 985: {
 14683                           ;tcpv4.c: 987: currentTCB->flags = 0x04U;
 14684  01103E  EE20 F038          	lfsr	2,56
 14685  011042  503B               	movf	_currentTCB,w,c
 14686  011044  26D9               	addwf	fsr2l,f,c
 14687  011046  503C               	movf	_currentTCB+1,w,c
 14688  011048  22DA               	addwfc	fsr2h,f,c
 14689  01104A  0E04               	movlw	4
 14690  01104C  6EDF               	movwf	indf2,c
 14691                           
 14692                           ;tcpv4.c: 988: if(TCP_Snd(currentTCB))
 14693  01104E  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14694  011052  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14695  011056  EC61  F08D         	call	_TCP_Snd	;wreg free
 14696  01105A  0900               	iorlw	0
 14697  01105C  B4D8               	btfsc	status,2,c
 14698  01105E  D1C1               	goto	l1687
 14699                           
 14700                           ;tcpv4.c: 989: {
 14701                           ;tcpv4.c: 990: nextState = CLOSE;
 14702  011060  0E00               	movlw	0
 14703  011062  0101               	movlb	1	; () banked
 14704  011064  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14705                           
 14706                           ; BSR set to: 1
 14707                           ;tcpv4.c: 991: TCB_Reset(currentTCB);
 14708  011066  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14709  01106A  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14710  01106E  EC90  F0A8         	call	_TCB_Reset	;wreg free
 14711                           
 14712                           ;tcpv4.c: 997: }
 14713                           
 14714                           ;tcpv4.c: 996: break;
 14715                           
 14716                           ;tcpv4.c: 995: default:
 14717                           
 14718                           ;tcpv4.c: 992: }
 14719                           ;tcpv4.c: 993: }
 14720                           ;tcpv4.c: 994: break;
 14721  011072  D1B7               	goto	l1687
 14722  011074  0101               	movlb	1	; () banked
 14723  011076  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 14724                           
 14725                           ; Switch size 1, requested type "space"
 14726                           ; Number of cases is 7, Range of values is 0 to 12
 14727                           ; switch strategies available:
 14728                           ; Name         Instructions Cycles
 14729                           ; simple_byte           22    12 (average)
 14730                           ;	Chosen strategy is simple_byte
 14731  011078  0A00               	xorlw	0	; case 0
 14732  01107A  B4D8               	btfsc	status,2,c
 14733  01107C  D72D               	goto	l1747
 14734  01107E  0A04               	xorlw	4	; case 4
 14735  011080  B4D8               	btfsc	status,2,c
 14736  011082  D5E7               	goto	l1736
 14737  011084  0A02               	xorlw	2	; case 6
 14738  011086  B4D8               	btfsc	status,2,c
 14739  011088  D1AC               	goto	l1687
 14740  01108A  0A01               	xorlw	1	; case 7
 14741  01108C  B4D8               	btfsc	status,2,c
 14742  01108E  D736               	goto	l1749
 14743  011090  0A0E               	xorlw	14	; case 9
 14744  011092  B4D8               	btfsc	status,2,c
 14745  011094  D7AC               	goto	l1750
 14746  011096  0A03               	xorlw	3	; case 10
 14747  011098  B4D8               	btfsc	status,2,c
 14748  01109A  D7A9               	goto	l1750
 14749  01109C  0A06               	xorlw	6	; case 12
 14750  01109E  B4D8               	btfsc	status,2,c
 14751  0110A0  D7BE               	goto	l1752
 14752                           
 14753                           ; BSR set to: 1
 14754                           ;tcpv4.c: 998: break;
 14755  0110A2  D19F               	goto	l1687
 14756  0110A4                     
 14757                           ; BSR set to: 1
 14758                           ;tcpv4.c: 1003: currentTCB->flags = 0x10U;
 14759                           
 14760                           ; BSR set to: 1
 14761  0110A4  EE20 F038          	lfsr	2,56
 14762  0110A8  503B               	movf	_currentTCB,w,c
 14763  0110AA  26D9               	addwf	fsr2l,f,c
 14764  0110AC  503C               	movf	_currentTCB+1,w,c
 14765  0110AE  22DA               	addwfc	fsr2h,f,c
 14766  0110B0  0E10               	movlw	16
 14767  0110B2  6EDF               	movwf	indf2,c
 14768                           
 14769                           ; BSR set to: 1
 14770                           ;tcpv4.c: 1004: if(TCP_Snd(currentTCB))
 14771  0110B4  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14772  0110B8  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14773  0110BC  EC61  F08D         	call	_TCP_Snd	;wreg free
 14774  0110C0  0900               	iorlw	0
 14775  0110C2  B4D8               	btfsc	status,2,c
 14776  0110C4  D18E               	goto	l1687
 14777                           
 14778                           ;tcpv4.c: 1005: {
 14779                           ;tcpv4.c: 1006: nextState = CLOSING;
 14780  0110C6  0E08               	movlw	8
 14781  0110C8  D067               	goto	L23
 14782  0110CA                     
 14783                           ; BSR set to: 1
 14784                           ;tcpv4.c: 1011: currentTCB->timeout = ((unsigned long)1*2);
 14785                           
 14786                           ; BSR set to: 1
 14787  0110CA  EE20 F033          	lfsr	2,51
 14788  0110CE  503B               	movf	_currentTCB,w,c
 14789  0110D0  26D9               	addwf	fsr2l,f,c
 14790  0110D2  503C               	movf	_currentTCB+1,w,c
 14791  0110D4  22DA               	addwfc	fsr2h,f,c
 14792  0110D6  0E02               	movlw	2
 14793  0110D8  6EDE               	movwf	postinc2,c
 14794  0110DA  0E00               	movlw	0
 14795  0110DC  6EDD               	movwf	postdec2,c
 14796                           
 14797                           ;tcpv4.c: 1012: currentTCB->timeoutsCount = 1;
 14798  0110DE  EE20 F037          	lfsr	2,55
 14799  0110E2  503B               	movf	_currentTCB,w,c
 14800  0110E4  26D9               	addwf	fsr2l,f,c
 14801  0110E6  503C               	movf	_currentTCB+1,w,c
 14802  0110E8  22DA               	addwfc	fsr2h,f,c
 14803  0110EA  0E01               	movlw	1
 14804  0110EC  6EDF               	movwf	indf2,c
 14805                           
 14806                           ; BSR set to: 1
 14807                           ;tcpv4.c: 1013: nextState = FIN_WAIT_2;
 14808  0110EE  0E06               	movlw	6
 14809  0110F0  D08A               	goto	L15
 14810  0110F2                     
 14811                           ; BSR set to: 1
 14812                           ;tcpv4.c: 1016: currentTCB->flags = 0x10U;
 14813                           
 14814                           ; BSR set to: 1
 14815  0110F2  EE20 F038          	lfsr	2,56
 14816  0110F6  503B               	movf	_currentTCB,w,c
 14817  0110F8  26D9               	addwf	fsr2l,f,c
 14818  0110FA  503C               	movf	_currentTCB+1,w,c
 14819  0110FC  22DA               	addwfc	fsr2h,f,c
 14820  0110FE  0E10               	movlw	16
 14821  011100  6EDF               	movwf	indf2,c
 14822                           
 14823                           ; BSR set to: 1
 14824                           ;tcpv4.c: 1017: if(TCP_Snd(currentTCB))
 14825  011102  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14826  011106  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14827  01110A  EC61  F08D         	call	_TCP_Snd	;wreg free
 14828  01110E  D040               	goto	L17
 14829  011110                     
 14830                           ; BSR set to: 1
 14831                           ;tcpv4.c: 1023: if (currentTCB->timeoutsCount)
 14832                           
 14833                           ; BSR set to: 1
 14834  011110  EE20 F037          	lfsr	2,55
 14835  011114  503B               	movf	_currentTCB,w,c
 14836  011116  26D9               	addwf	fsr2l,f,c
 14837  011118  503C               	movf	_currentTCB+1,w,c
 14838  01111A  22DA               	addwfc	fsr2h,f,c
 14839  01111C  50DF               	movf	indf2,w,c
 14840  01111E  B4D8               	btfsc	status,2,c
 14841  011120  D007               	goto	l1766
 14842                           
 14843                           ; BSR set to: 1
 14844                           ;tcpv4.c: 1024: {
 14845                           ;tcpv4.c: 1025: TCP_Snd(currentTCB);
 14846  011122  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14847  011126  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14848  01112A  EC61  F08D         	call	_TCP_Snd	;wreg free
 14849                           
 14850                           ;tcpv4.c: 1026: }else
 14851  01112E  D159               	goto	l1687
 14852  011130                     l1766:
 14853                           
 14854                           ;tcpv4.c: 1027: {
 14855                           ;tcpv4.c: 1029: currentTCB->flags = 0x04U;
 14856  011130  EE20 F038          	lfsr	2,56
 14857  011134  503B               	movf	_currentTCB,w,c
 14858  011136  26D9               	addwf	fsr2l,f,c
 14859  011138  503C               	movf	_currentTCB+1,w,c
 14860  01113A  22DA               	addwfc	fsr2h,f,c
 14861  01113C  0E04               	movlw	4
 14862  01113E  6EDF               	movwf	indf2,c
 14863                           
 14864                           ;tcpv4.c: 1030: if(TCP_Snd(currentTCB))
 14865  011140  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14866  011144  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14867  011148  EC61  F08D         	call	_TCP_Snd	;wreg free
 14868  01114C  0900               	iorlw	0
 14869  01114E  B4D8               	btfsc	status,2,c
 14870  011150  D148               	goto	l1687
 14871                           
 14872                           ;tcpv4.c: 1031: {
 14873                           ;tcpv4.c: 1032: nextState = CLOSE;
 14874  011152  0E00               	movlw	0
 14875  011154  0101               	movlb	1	; () banked
 14876  011156  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14877                           
 14878                           ; BSR set to: 1
 14879                           ;tcpv4.c: 1033: TCB_Reset(currentTCB);
 14880  011158  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14881  01115C  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14882  011160  EC90  F0A8         	call	_TCB_Reset	;wreg free
 14883                           
 14884                           ;tcpv4.c: 1039: }
 14885                           
 14886                           ;tcpv4.c: 1038: break;
 14887                           
 14888                           ;tcpv4.c: 1037: default:
 14889                           
 14890                           ;tcpv4.c: 1034: }
 14891                           ;tcpv4.c: 1035: }
 14892                           ;tcpv4.c: 1036: break;
 14893  011164  D13E               	goto	l1687
 14894  011166  0101               	movlb	1	; () banked
 14895  011168  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 14896                           
 14897                           ; Switch size 1, requested type "space"
 14898                           ; Number of cases is 4, Range of values is 4 to 12
 14899                           ; switch strategies available:
 14900                           ; Name         Instructions Cycles
 14901                           ; simple_byte           13     7 (average)
 14902                           ;	Chosen strategy is simple_byte
 14903  01116A  0A04               	xorlw	4	; case 4
 14904  01116C  B4D8               	btfsc	status,2,c
 14905  01116E  D7AD               	goto	l1762
 14906  011170  0A02               	xorlw	2	; case 6
 14907  011172  B4D8               	btfsc	status,2,c
 14908  011174  D797               	goto	l1759
 14909  011176  0A01               	xorlw	1	; case 7
 14910  011178  B4D8               	btfsc	status,2,c
 14911  01117A  D7BB               	goto	l1763
 14912  01117C  0A0B               	xorlw	11	; case 12
 14913  01117E  B4D8               	btfsc	status,2,c
 14914  011180  D7C7               	goto	l1765
 14915                           
 14916                           ; BSR set to: 1
 14917                           ;tcpv4.c: 1040: break;
 14918  011182  D12F               	goto	l1687
 14919  011184                     
 14920                           ; BSR set to: 1
 14921                           ;tcpv4.c: 1045: if(TCP_Snd(currentTCB))
 14922                           
 14923                           ; BSR set to: 1
 14924  011184  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14925  011188  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14926  01118C  EC61  F08D         	call	_TCP_Snd	;wreg free
 14927  011190                     L17:
 14928  011190  0900               	iorlw	0
 14929  011192  B4D8               	btfsc	status,2,c
 14930  011194  D126               	goto	l1687
 14931                           
 14932                           ;tcpv4.c: 1046: {
 14933                           ;tcpv4.c: 1047: nextState = TIME_WAIT;
 14934  011196  0E0A               	movlw	10
 14935  011198                     L23:
 14936  011198  0101               	movlb	1	; () banked
 14937  01119A  D035               	goto	L15
 14938  01119C                     
 14939                           ; BSR set to: 1
 14940                           ;tcpv4.c: 1051: if (currentTCB->timeoutsCount)
 14941                           
 14942                           ; BSR set to: 1
 14943  01119C  EE20 F037          	lfsr	2,55
 14944  0111A0  503B               	movf	_currentTCB,w,c
 14945  0111A2  26D9               	addwf	fsr2l,f,c
 14946  0111A4  503C               	movf	_currentTCB+1,w,c
 14947  0111A6  22DA               	addwfc	fsr2h,f,c
 14948  0111A8  50DF               	movf	indf2,w,c
 14949  0111AA  B4D8               	btfsc	status,2,c
 14950  0111AC  D007               	goto	l1776
 14951                           
 14952                           ; BSR set to: 1
 14953                           ;tcpv4.c: 1052: {
 14954                           ;tcpv4.c: 1053: TCP_Snd(currentTCB);
 14955  0111AE  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14956  0111B2  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14957  0111B6  EC61  F08D         	call	_TCP_Snd	;wreg free
 14958                           
 14959                           ;tcpv4.c: 1054: }else
 14960  0111BA  D113               	goto	l1687
 14961  0111BC                     l1776:
 14962                           
 14963                           ;tcpv4.c: 1055: {
 14964                           ;tcpv4.c: 1057: currentTCB->flags = 0x04U;
 14965  0111BC  EE20 F038          	lfsr	2,56
 14966  0111C0  503B               	movf	_currentTCB,w,c
 14967  0111C2  26D9               	addwf	fsr2l,f,c
 14968  0111C4  503C               	movf	_currentTCB+1,w,c
 14969  0111C6  22DA               	addwfc	fsr2h,f,c
 14970  0111C8  0E04               	movlw	4
 14971  0111CA  6EDF               	movwf	indf2,c
 14972                           
 14973                           ;tcpv4.c: 1058: if(TCP_Snd(currentTCB))
 14974  0111CC  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 14975  0111D0  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 14976  0111D4  EC61  F08D         	call	_TCP_Snd	;wreg free
 14977  0111D8  0900               	iorlw	0
 14978  0111DA  B4D8               	btfsc	status,2,c
 14979  0111DC  D102               	goto	l1687
 14980                           
 14981                           ;tcpv4.c: 1059: {
 14982                           ;tcpv4.c: 1060: nextState = CLOSE;
 14983  0111DE  0E00               	movlw	0
 14984  0111E0  0101               	movlb	1	; () banked
 14985  0111E2  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14986                           
 14987                           ; BSR set to: 1
 14988                           ;tcpv4.c: 1061: TCB_Reset(currentTCB);
 14989  0111E4  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 14990  0111E8  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 14991  0111EC  EC90  F0A8         	call	_TCB_Reset	;wreg free
 14992                           
 14993                           ;tcpv4.c: 1067: }
 14994                           
 14995                           ;tcpv4.c: 1066: break;
 14996                           
 14997                           ;tcpv4.c: 1065: default:
 14998                           
 14999                           ;tcpv4.c: 1062: }
 15000                           ;tcpv4.c: 1063: }
 15001                           ;tcpv4.c: 1064: break;
 15002  0111F0  D0F8               	goto	l1687
 15003  0111F2  0101               	movlb	1	; () banked
 15004  0111F4  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15005                           
 15006                           ; Switch size 1, requested type "space"
 15007                           ; Number of cases is 2, Range of values is 6 to 12
 15008                           ; switch strategies available:
 15009                           ; Name         Instructions Cycles
 15010                           ; simple_byte            7     4 (average)
 15011                           ;	Chosen strategy is simple_byte
 15012  0111F6  0A06               	xorlw	6	; case 6
 15013  0111F8  B4D8               	btfsc	status,2,c
 15014  0111FA  D7C4               	goto	l1772
 15015  0111FC  0A0A               	xorlw	10	; case 12
 15016  0111FE  B4D8               	btfsc	status,2,c
 15017  011200  D7CD               	goto	l1775
 15018                           
 15019                           ; BSR set to: 1
 15020                           ;tcpv4.c: 1071: break;
 15021                           
 15022                           ;tcpv4.c: 1069: case CLOSE_WAIT:
 15023                           
 15024                           ; BSR set to: 1
 15025                           ;tcpv4.c: 1068: break;
 15026  011202  D0EF               	goto	l1687
 15027  011204                     
 15028                           ; BSR set to: 1
 15029                           ;tcpv4.c: 1076: nextState = TIME_WAIT;
 15030                           
 15031                           ; BSR set to: 1
 15032  011204  0E0A               	movlw	10
 15033  011206                     L15:
 15034  011206  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15035                           
 15036                           ; BSR set to: 1
 15037                           ;tcpv4.c: 1080: }
 15038                           
 15039                           ; BSR set to: 1
 15040                           ;tcpv4.c: 1079: break;
 15041                           
 15042                           ;tcpv4.c: 1078: default:
 15043                           
 15044                           ;tcpv4.c: 1077: break;
 15045  011208  D0EC               	goto	l1687
 15046  01120A                     
 15047                           ; BSR set to: 1
 15048  01120A  0101               	movlb	1	; () banked
 15049  01120C  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15050                           
 15051                           ; Switch size 1, requested type "space"
 15052                           ; Number of cases is 1, Range of values is 4 to 4
 15053                           ; switch strategies available:
 15054                           ; Name         Instructions Cycles
 15055                           ; simple_byte            4     3 (average)
 15056                           ;	Chosen strategy is simple_byte
 15057  01120E  0A04               	xorlw	4	; case 4
 15058  011210  B4D8               	btfsc	status,2,c
 15059  011212  D7F8               	goto	l1783
 15060                           
 15061                           ; BSR set to: 1
 15062                           ;tcpv4.c: 1081: break;
 15063  011214  D0E6               	goto	l1687
 15064  011216                     
 15065                           ; BSR set to: 1
 15066                           ;tcpv4.c: 1087: case RCV_ACK:
 15067                           ;tcpv4.c: 1088: if ((currentTCB->destIP == receivedRemoteAddress) &&
 15068                           ;tcpv4.c: 1089: (currentTCB->destPort == tcpHeader.sourcePort))
 15069                           
 15070                           ; BSR set to: 1
 15071                           
 15072                           ; BSR set to: 1
 15073  011216  EE20 F002          	lfsr	2,2
 15074  01121A  503B               	movf	_currentTCB,w,c
 15075  01121C  26D9               	addwf	fsr2l,f,c
 15076  01121E  503C               	movf	_currentTCB+1,w,c
 15077  011220  22DA               	addwfc	fsr2h,f,c
 15078  011222  0102               	movlb	2	; () banked
 15079  011224  512A               	movf	_receivedRemoteAddress& (0+255),w,b
 15080  011226  18DE               	xorwf	postinc2,w,c
 15081  011228  E109               	bnz	u10851
 15082  01122A  512B               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 15083  01122C  18DE               	xorwf	postinc2,w,c
 15084  01122E  E106               	bnz	u10851
 15085  011230  512C               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 15086  011232  18DE               	xorwf	postinc2,w,c
 15087  011234  E103               	bnz	u10851
 15088  011236  512D               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 15089  011238  18DE               	xorwf	postinc2,w,c
 15090  01123A  A4D8               	btfss	status,2,c
 15091  01123C                     u10851:
 15092  01123C  D0D2               	goto	l1687
 15093                           
 15094                           ; BSR set to: 2
 15095  01123E  EE20 F006          	lfsr	2,6
 15096  011242  503B               	movf	_currentTCB,w,c
 15097  011244  26D9               	addwf	fsr2l,f,c
 15098  011246  503C               	movf	_currentTCB+1,w,c
 15099  011248  22DA               	addwfc	fsr2h,f,c
 15100  01124A  5154               	movf	_tcpHeader& (0+255),w,b
 15101  01124C  18DE               	xorwf	postinc2,w,c
 15102  01124E  E103               	bnz	u10861
 15103  011250  5155               	movf	(_tcpHeader+1)& (0+255),w,b
 15104  011252  18DE               	xorwf	postinc2,w,c
 15105  011254  A4D8               	btfss	status,2,c
 15106  011256                     u10861:
 15107  011256  D0C5               	goto	l1687
 15108                           
 15109                           ; BSR set to: 2
 15110                           ;tcpv4.c: 1090: {
 15111                           ;tcpv4.c: 1091: nextState = CLOSED;
 15112  011258  0E00               	movlw	0
 15113  01125A  0101               	movlb	1	; () banked
 15114  01125C  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15115                           
 15116                           ; BSR set to: 1
 15117                           ;tcpv4.c: 1092: TCB_Reset(currentTCB);
 15118  01125E  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 15119  011262  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 15120  011266  EC90  F0A8         	call	_TCB_Reset	;wreg free
 15121                           
 15122                           ;tcpv4.c: 1093: }
 15123                           ;tcpv4.c: 1094: break;
 15124  01126A  D0BB               	goto	l1687
 15125  01126C                     
 15126                           ;tcpv4.c: 1096: if (currentTCB->timeoutsCount)
 15127  01126C  EE20 F037          	lfsr	2,55
 15128  011270  503B               	movf	_currentTCB,w,c
 15129  011272  26D9               	addwf	fsr2l,f,c
 15130  011274  503C               	movf	_currentTCB+1,w,c
 15131  011276  22DA               	addwfc	fsr2h,f,c
 15132  011278  50DF               	movf	indf2,w,c
 15133  01127A  B4D8               	btfsc	status,2,c
 15134  01127C  D007               	goto	l1793
 15135                           
 15136                           ;tcpv4.c: 1097: {
 15137                           ;tcpv4.c: 1098: TCP_Snd(currentTCB);
 15138  01127E  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15139  011282  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15140  011286  EC61  F08D         	call	_TCP_Snd	;wreg free
 15141                           
 15142                           ;tcpv4.c: 1099: }else
 15143  01128A  D0AB               	goto	l1687
 15144  01128C                     l1793:
 15145                           
 15146                           ;tcpv4.c: 1100: {
 15147                           ;tcpv4.c: 1102: currentTCB->flags = 0x04U;
 15148  01128C  EE20 F038          	lfsr	2,56
 15149  011290  503B               	movf	_currentTCB,w,c
 15150  011292  26D9               	addwf	fsr2l,f,c
 15151  011294  503C               	movf	_currentTCB+1,w,c
 15152  011296  22DA               	addwfc	fsr2h,f,c
 15153  011298  0E04               	movlw	4
 15154  01129A  6EDF               	movwf	indf2,c
 15155                           
 15156                           ;tcpv4.c: 1103: if(TCP_Snd(currentTCB))
 15157  01129C  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15158  0112A0  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15159  0112A4  EC61  F08D         	call	_TCP_Snd	;wreg free
 15160  0112A8  0900               	iorlw	0
 15161  0112AA  B4D8               	btfsc	status,2,c
 15162  0112AC  D09A               	goto	l1687
 15163                           
 15164                           ;tcpv4.c: 1104: {
 15165                           ;tcpv4.c: 1105: nextState = CLOSE;
 15166  0112AE  0E00               	movlw	0
 15167  0112B0  0101               	movlb	1	; () banked
 15168  0112B2  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15169                           
 15170                           ; BSR set to: 1
 15171                           ;tcpv4.c: 1106: TCB_Reset(currentTCB);
 15172  0112B4  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 15173  0112B8  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 15174  0112BC  EC90  F0A8         	call	_TCB_Reset	;wreg free
 15175                           
 15176                           ;tcpv4.c: 1111: }
 15177                           
 15178                           ;tcpv4.c: 1110: break;
 15179                           
 15180                           ;tcpv4.c: 1107: }
 15181                           ;tcpv4.c: 1108: }
 15182                           ;tcpv4.c: 1109: default:
 15183  0112C0  D090               	goto	l1687
 15184  0112C2  0101               	movlb	1	; () banked
 15185  0112C4  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15186                           
 15187                           ; Switch size 1, requested type "space"
 15188                           ; Number of cases is 3, Range of values is 4 to 12
 15189                           ; switch strategies available:
 15190                           ; Name         Instructions Cycles
 15191                           ; simple_byte           10     6 (average)
 15192                           ;	Chosen strategy is simple_byte
 15193  0112C6  0A04               	xorlw	4	; case 4
 15194  0112C8  B4D8               	btfsc	status,2,c
 15195  0112CA  D7A5               	goto	l1788
 15196  0112CC  0A03               	xorlw	3	; case 7
 15197  0112CE  B4D8               	btfsc	status,2,c
 15198  0112D0  D7A2               	goto	l1788
 15199  0112D2  0A0B               	xorlw	11	; case 12
 15200  0112D4  B4D8               	btfsc	status,2,c
 15201  0112D6  D7CA               	goto	l1792
 15202                           
 15203                           ; BSR set to: 1
 15204                           ;tcpv4.c: 1112: break;
 15205  0112D8  D084               	goto	l1687
 15206  0112DA                     
 15207                           ;tcpv4.c: 1114: nextState = CLOSED;
 15208                           
 15209                           ; BSR set to: 1
 15210  0112DA  0E00               	movlw	0
 15211  0112DC  0101               	movlb	1	; () banked
 15212  0112DE  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15213                           
 15214                           ; BSR set to: 1
 15215                           ;tcpv4.c: 1115: TCB_Reset(currentTCB);
 15216  0112E0  C03B  F013         	movff	_currentTCB,TCB_Reset@tcbPtr
 15217  0112E4  C03C  F014         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 15218  0112E8  EC90  F0A8         	call	_TCB_Reset	;wreg free
 15219                           
 15220                           ;tcpv4.c: 1116: break;
 15221  0112EC  D07A               	goto	l1687
 15222  0112EE                     
 15223                           ;tcpv4.c: 1122: currentTCB->timeout = ((unsigned long)1*2);
 15224  0112EE  EE20 F033          	lfsr	2,51
 15225  0112F2  503B               	movf	_currentTCB,w,c
 15226  0112F4  26D9               	addwf	fsr2l,f,c
 15227  0112F6  503C               	movf	_currentTCB+1,w,c
 15228  0112F8  22DA               	addwfc	fsr2h,f,c
 15229  0112FA  0E02               	movlw	2
 15230  0112FC  6EDE               	movwf	postinc2,c
 15231  0112FE  0E00               	movlw	0
 15232  011300  6EDD               	movwf	postdec2,c
 15233                           
 15234                           ;tcpv4.c: 1123: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 15235  011302  EE20 F035          	lfsr	2,53
 15236  011306  503B               	movf	_currentTCB,w,c
 15237  011308  26D9               	addwf	fsr2l,f,c
 15238  01130A  503C               	movf	_currentTCB+1,w,c
 15239  01130C  22DA               	addwfc	fsr2h,f,c
 15240  01130E  0E02               	movlw	2
 15241  011310  6EDE               	movwf	postinc2,c
 15242  011312  0E00               	movlw	0
 15243  011314  6EDD               	movwf	postdec2,c
 15244                           
 15245                           ;tcpv4.c: 1124: currentTCB->timeoutsCount = (3u);
 15246  011316  EE20 F037          	lfsr	2,55
 15247  01131A  503B               	movf	_currentTCB,w,c
 15248  01131C  26D9               	addwf	fsr2l,f,c
 15249  01131E  503C               	movf	_currentTCB+1,w,c
 15250  011320  22DA               	addwfc	fsr2h,f,c
 15251  011322  0E03               	movlw	3
 15252  011324  6EDF               	movwf	indf2,c
 15253                           
 15254                           ;tcpv4.c: 1125: currentTCB->flags = 0x02U;
 15255  011326  EE20 F038          	lfsr	2,56
 15256  01132A  503B               	movf	_currentTCB,w,c
 15257  01132C  26D9               	addwf	fsr2l,f,c
 15258  01132E  503C               	movf	_currentTCB+1,w,c
 15259  011330  22DA               	addwfc	fsr2h,f,c
 15260  011332  0E02               	movlw	2
 15261  011334  6EDF               	movwf	indf2,c
 15262                           
 15263                           ;tcpv4.c: 1126: TCP_Snd(currentTCB);
 15264  011336  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15265  01133A  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15266  01133E  EC61  F08D         	call	_TCP_Snd	;wreg free
 15267                           
 15268                           ;tcpv4.c: 1127: nextState = SYN_SENT;
 15269  011342  0E02               	movlw	2
 15270  011344  0101               	movlb	1	; () banked
 15271  011346  D018               	goto	L16
 15272  011348                     l11138:
 15273                           
 15274                           ; BSR set to: 1
 15275                           ;tcpv4.c: 1128: ret = 1;
 15276  011348  0E01               	movlw	1
 15277  01134A  6F00               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 15278                           
 15279                           ;tcpv4.c: 1129: break;
 15280  01134C  D04A               	goto	l1687
 15281  01134E                     
 15282                           ; BSR set to: 1
 15283                           ;tcpv4.c: 1131: currentTCB->destIP = 0;
 15284                           
 15285                           ; BSR set to: 1
 15286  01134E  EE20 F002          	lfsr	2,2
 15287  011352  503B               	movf	_currentTCB,w,c
 15288  011354  26D9               	addwf	fsr2l,f,c
 15289  011356  503C               	movf	_currentTCB+1,w,c
 15290  011358  22DA               	addwfc	fsr2h,f,c
 15291  01135A  6ADE               	clrf	postinc2,c
 15292  01135C  6ADE               	clrf	postinc2,c
 15293  01135E  6ADE               	clrf	postinc2,c
 15294  011360  6ADD               	clrf	postdec2,c
 15295                           
 15296                           ;tcpv4.c: 1132: currentTCB->destPort = 0;
 15297  011362  EE20 F006          	lfsr	2,6
 15298  011366  503B               	movf	_currentTCB,w,c
 15299  011368  26D9               	addwf	fsr2l,f,c
 15300  01136A  503C               	movf	_currentTCB+1,w,c
 15301  01136C  22DA               	addwfc	fsr2h,f,c
 15302  01136E  0E00               	movlw	0
 15303  011370  6EDE               	movwf	postinc2,c
 15304  011372  0E00               	movlw	0
 15305  011374  6EDD               	movwf	postdec2,c
 15306                           
 15307                           ; BSR set to: 1
 15308                           ;tcpv4.c: 1133: nextState = LISTEN;
 15309  011376  0E01               	movlw	1
 15310  011378                     L16:
 15311  011378  6F04               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15312  01137A  D7E6               	goto	l11138
 15313  01137C                     
 15314                           ; BSR set to: 1
 15315  01137C  0101               	movlb	1	; () banked
 15316  01137E  5103               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15317                           
 15318                           ; Switch size 1, requested type "space"
 15319                           ; Number of cases is 2, Range of values is 1 to 2
 15320                           ; switch strategies available:
 15321                           ; Name         Instructions Cycles
 15322                           ; simple_byte            7     4 (average)
 15323                           ;	Chosen strategy is simple_byte
 15324  011380  0A01               	xorlw	1	; case 1
 15325  011382  B4D8               	btfsc	status,2,c
 15326  011384  D7B4               	goto	l1800
 15327  011386  0A03               	xorlw	3	; case 2
 15328  011388  B4D8               	btfsc	status,2,c
 15329  01138A  D7E1               	goto	l1802
 15330                           
 15331                           ; BSR set to: 1
 15332                           ;tcpv4.c: 1142: }
 15333                           
 15334                           ; BSR set to: 1
 15335                           ;tcpv4.c: 1141: break;
 15336                           
 15337                           ;tcpv4.c: 1140: default:
 15338                           
 15339                           ; BSR set to: 1
 15340                           ;tcpv4.c: 1139: break;
 15341  01138C  D02A               	goto	l1687
 15342  01138E                     l1680:
 15343                           
 15344                           ; BSR set to: 1
 15345  01138E  EE20 F02D          	lfsr	2,45
 15346  011392  503B               	movf	_currentTCB,w,c
 15347  011394  26D9               	addwf	fsr2l,f,c
 15348  011396  503C               	movf	_currentTCB+1,w,c
 15349  011398  22DA               	addwfc	fsr2h,f,c
 15350  01139A  50DF               	movf	indf2,w,c
 15351                           
 15352                           ; Switch size 1, requested type "space"
 15353                           ; Number of cases is 11, Range of values is 0 to 10
 15354                           ; switch strategies available:
 15355                           ; Name         Instructions Cycles
 15356                           ; simple_byte           34    18 (average)
 15357                           ;	Chosen strategy is simple_byte
 15358  01139C  0A00               	xorlw	0	; case 0
 15359  01139E  B4D8               	btfsc	status,2,c
 15360  0113A0  D7ED               	goto	l1799
 15361  0113A2  0A01               	xorlw	1	; case 1
 15362  0113A4  B4D8               	btfsc	status,2,c
 15363  0113A6  EFE2  F080         	goto	l1682
 15364  0113AA  0A03               	xorlw	3	; case 2
 15365  0113AC  B4D8               	btfsc	status,2,c
 15366  0113AE  EFD4  F083         	goto	l1689
 15367  0113B2  0A01               	xorlw	1	; case 3
 15368  0113B4  B4D8               	btfsc	status,2,c
 15369  0113B6  D438               	goto	l1714
 15370  0113B8  0A07               	xorlw	7	; case 4
 15371  0113BA  B4D8               	btfsc	status,2,c
 15372  0113BC  D65B               	goto	l1735
 15373  0113BE  0A01               	xorlw	1	; case 5
 15374  0113C0  B4D8               	btfsc	status,2,c
 15375  0113C2  D6D1               	goto	l1758
 15376  0113C4  0A03               	xorlw	3	; case 6
 15377  0113C6  B4D8               	btfsc	status,2,c
 15378  0113C8  D714               	goto	l1771
 15379  0113CA  0A01               	xorlw	1	; case 7
 15380  0113CC  B4D8               	btfsc	status,2,c
 15381  0113CE  D009               	goto	l1687
 15382  0113D0  0A0F               	xorlw	15	; case 8
 15383  0113D2  B4D8               	btfsc	status,2,c
 15384  0113D4  D71A               	goto	l1782
 15385  0113D6  0A01               	xorlw	1	; case 9
 15386  0113D8  B4D8               	btfsc	status,2,c
 15387  0113DA  D773               	goto	l1787
 15388  0113DC  0A03               	xorlw	3	; case 10
 15389  0113DE  B4D8               	btfsc	status,2,c
 15390  0113E0  D77C               	goto	l1797
 15391  0113E2                     l1687:
 15392                           
 15393                           ;tcpv4.c: 1143: currentTCB->connectionEvent = NOP;
 15394  0113E2  EE20 F02E          	lfsr	2,46
 15395  0113E6  503B               	movf	_currentTCB,w,c
 15396  0113E8  26D9               	addwf	fsr2l,f,c
 15397  0113EA  503C               	movf	_currentTCB+1,w,c
 15398  0113EC  22DA               	addwfc	fsr2h,f,c
 15399  0113EE  0E0D               	movlw	13
 15400  0113F0  6EDF               	movwf	indf2,c
 15401                           
 15402                           ;tcpv4.c: 1144: currentTCB->fsmState = nextState;
 15403  0113F2  EE20 F02D          	lfsr	2,45
 15404  0113F6  503B               	movf	_currentTCB,w,c
 15405  0113F8  26D9               	addwf	fsr2l,f,c
 15406  0113FA  503C               	movf	_currentTCB+1,w,c
 15407  0113FC  22DA               	addwfc	fsr2h,f,c
 15408  0113FE  C104  FFDF         	movff	TCP_FiniteStateMachine@nextState,indf2
 15409                           
 15410                           ;tcpv4.c: 1145: return ret;
 15411  011402  0101               	movlb	1	; () banked
 15412  011404  5100               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 15413  011406  0012               	return	
 15414  011408                     __end_of_TCP_FiniteStateMachine:
 15415                           	opt stack 0
 15416                           tosu	equ	0xFFF
 15417                           tosh	equ	0xFFE
 15418                           tosl	equ	0xFFD
 15419                           pclath	equ	0xFFA
 15420                           tblptru	equ	0xFF8
 15421                           tblptrh	equ	0xFF7
 15422                           tblptrl	equ	0xFF6
 15423                           tablat	equ	0xFF5
 15424                           prodh	equ	0xFF4
 15425                           prodl	equ	0xFF3
 15426                           intcon	equ	0xFF2
 15427                           indf0	equ	0xFEF
 15428                           postinc0	equ	0xFEE
 15429                           fsr0h	equ	0xFEA
 15430                           fsr0l	equ	0xFE9
 15431                           wreg	equ	0xFE8
 15432                           indf1	equ	0xFE7
 15433                           postinc1	equ	0xFE6
 15434                           postdec1	equ	0xFE5
 15435                           plusw1	equ	0xFE3
 15436                           fsr1h	equ	0xFE2
 15437                           fsr1l	equ	0xFE1
 15438                           indf2	equ	0xFDF
 15439                           postinc2	equ	0xFDE
 15440                           postdec2	equ	0xFDD
 15441                           plusw2	equ	0xFDB
 15442                           fsr2h	equ	0xFDA
 15443                           fsr2l	equ	0xFD9
 15444                           status	equ	0xFD8
 15445                           
 15446 ;; *************** function _resetPortUnreachable *****************
 15447 ;; Defined at:
 15448 ;;		line 171 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 15449 ;; Parameters:    Size  Location     Type
 15450 ;;		None
 15451 ;; Auto vars:     Size  Location     Type
 15452 ;;		None
 15453 ;; Return value:  Size  Location     Type
 15454 ;;                  1    wreg      void 
 15455 ;; Registers used:
 15456 ;;		wreg, status,2
 15457 ;; Tracked objects:
 15458 ;;		On entry : 0/0
 15459 ;;		On exit  : 0/0
 15460 ;;		Unchanged: 0/0
 15461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15466 ;;Total ram usage:        0 bytes
 15467 ;; Hardware stack levels used:    1
 15468 ;; Hardware stack levels required when called:    4
 15469 ;; This function calls:
 15470 ;;		Nothing
 15471 ;; This function is called by:
 15472 ;;		_TCP_FiniteStateMachine
 15473 ;; This function uses a non-reentrant model
 15474 ;;
 15475                           
 15476                           	psect	text55
 15477  016AD4                     __ptext55:
 15478                           	opt stack 0
 15479  016AD4                     _resetPortUnreachable:
 15480                           	opt stack 23
 15481                           
 15482                           ;icmp.c: 173: portUnreachable = 0;
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;incstack = 0
 15486  016AD4  0E00               	movlw	0
 15487  016AD6  0102               	movlb	2	; () banked
 15488  016AD8  6F4D               	movwf	(_portUnreachable+1)& (0+255),b
 15489  016ADA  0E00               	movlw	0
 15490  016ADC  6F4C               	movwf	_portUnreachable& (0+255),b
 15491                           
 15492                           ; BSR set to: 2
 15493  016ADE  0012               	return		;funcret
 15494  016AE0                     __end_of_resetPortUnreachable:
 15495                           	opt stack 0
 15496                           tosu	equ	0xFFF
 15497                           tosh	equ	0xFFE
 15498                           tosl	equ	0xFFD
 15499                           pclath	equ	0xFFA
 15500                           tblptru	equ	0xFF8
 15501                           tblptrh	equ	0xFF7
 15502                           tblptrl	equ	0xFF6
 15503                           tablat	equ	0xFF5
 15504                           prodh	equ	0xFF4
 15505                           prodl	equ	0xFF3
 15506                           intcon	equ	0xFF2
 15507                           indf0	equ	0xFEF
 15508                           postinc0	equ	0xFEE
 15509                           fsr0h	equ	0xFEA
 15510                           fsr0l	equ	0xFE9
 15511                           wreg	equ	0xFE8
 15512                           indf1	equ	0xFE7
 15513                           postinc1	equ	0xFE6
 15514                           postdec1	equ	0xFE5
 15515                           plusw1	equ	0xFE3
 15516                           fsr1h	equ	0xFE2
 15517                           fsr1l	equ	0xFE1
 15518                           indf2	equ	0xFDF
 15519                           postinc2	equ	0xFDE
 15520                           postdec2	equ	0xFDD
 15521                           plusw2	equ	0xFDB
 15522                           fsr2h	equ	0xFDA
 15523                           fsr2l	equ	0xFD9
 15524                           status	equ	0xFD8
 15525                           
 15526 ;; *************** function _isPortUnreachable *****************
 15527 ;; Defined at:
 15528 ;;		line 163 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;  port            2   18[COMRAM] unsigned int 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;		None
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1    wreg      unsigned char 
 15535 ;; Registers used:
 15536 ;;		wreg, status,2, status,0
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15546 ;;Total ram usage:        2 bytes
 15547 ;; Hardware stack levels used:    1
 15548 ;; Hardware stack levels required when called:    4
 15549 ;; This function calls:
 15550 ;;		Nothing
 15551 ;; This function is called by:
 15552 ;;		_TCP_FiniteStateMachine
 15553 ;; This function uses a non-reentrant model
 15554 ;;
 15555                           
 15556                           	psect	text56
 15557  016A00                     __ptext56:
 15558                           	opt stack 0
 15559  016A00                     _isPortUnreachable:
 15560                           	opt stack 23
 15561                           
 15562                           ;icmp.c: 165: if(portUnreachable==port)
 15563                           
 15564                           ; BSR set to: 2
 15565                           ;incstack = 0
 15566  016A00  5013               	movf	isPortUnreachable@port,w,c
 15567  016A02  0102               	movlb	2	; () banked
 15568  016A04  194C               	xorwf	_portUnreachable& (0+255),w,b
 15569  016A06  E106               	bnz	l10264
 15570  016A08  5014               	movf	isPortUnreachable@port+1,w,c
 15571  016A0A  194D               	xorwf	(_portUnreachable+1)& (0+255),w,b
 15572  016A0C  A4D8               	btfss	status,2,c
 15573  016A0E  D002               	goto	l1118
 15574                           
 15575                           ; BSR set to: 2
 15576                           ;icmp.c: 166: return 1;
 15577  016A10  0E01               	movlw	1
 15578                           
 15579                           ; BSR set to: 2
 15580                           
 15581                           ; BSR set to: 2
 15582  016A12  0012               	return	
 15583  016A14                     l1118:
 15584  016A14                     l10264:
 15585                           
 15586                           ; BSR set to: 2
 15587                           ;icmp.c: 167: else
 15588                           ;icmp.c: 168: return 0;
 15589  016A14  0E00               	movlw	0
 15590                           
 15591                           ; BSR set to: 2
 15592  016A16  0012               	return	
 15593  016A18                     __end_of_isPortUnreachable:
 15594                           	opt stack 0
 15595                           tosu	equ	0xFFF
 15596                           tosh	equ	0xFFE
 15597                           tosl	equ	0xFFD
 15598                           pclath	equ	0xFFA
 15599                           tblptru	equ	0xFF8
 15600                           tblptrh	equ	0xFF7
 15601                           tblptrl	equ	0xFF6
 15602                           tablat	equ	0xFF5
 15603                           prodh	equ	0xFF4
 15604                           prodl	equ	0xFF3
 15605                           intcon	equ	0xFF2
 15606                           indf0	equ	0xFEF
 15607                           postinc0	equ	0xFEE
 15608                           fsr0h	equ	0xFEA
 15609                           fsr0l	equ	0xFE9
 15610                           wreg	equ	0xFE8
 15611                           indf1	equ	0xFE7
 15612                           postinc1	equ	0xFE6
 15613                           postdec1	equ	0xFE5
 15614                           plusw1	equ	0xFE3
 15615                           fsr1h	equ	0xFE2
 15616                           fsr1l	equ	0xFE1
 15617                           indf2	equ	0xFDF
 15618                           postinc2	equ	0xFDE
 15619                           postdec2	equ	0xFDD
 15620                           plusw2	equ	0xFDB
 15621                           fsr2h	equ	0xFDA
 15622                           fsr2l	equ	0xFD9
 15623                           status	equ	0xFD8
 15624                           
 15625 ;; *************** function _TCP_PayloadSave *****************
 15626 ;; Defined at:
 15627 ;;		line 314 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;  len             2  135[BANK0 ] unsigned int 
 15630 ;; Auto vars:     Size  Location     Type
 15631 ;;  buffer_size     2  146[BANK0 ] unsigned int 
 15632 ;;  ret             1  145[BANK0 ] unsigned char 
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  1    wreg      unsigned char 
 15635 ;; Registers used:
 15636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15643 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15644 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15645 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15646 ;;Total ram usage:       13 bytes
 15647 ;; Hardware stack levels used:    1
 15648 ;; Hardware stack levels required when called:   10
 15649 ;; This function calls:
 15650 ;;		_ETH_ReadBlock
 15651 ;;		_TCP_Snd
 15652 ;; This function is called by:
 15653 ;;		_TCP_FiniteStateMachine
 15654 ;; This function uses a non-reentrant model
 15655 ;;
 15656                           
 15657                           	psect	text57
 15658  014BE6                     __ptext57:
 15659                           	opt stack 0
 15660  014BE6                     _TCP_PayloadSave:
 15661                           	opt stack 17
 15662                           
 15663                           ;tcpv4.c: 316: bool ret = 0;
 15664                           
 15665                           ; BSR set to: 2
 15666                           ;incstack = 0
 15667  014BE6  0E00               	movlw	0
 15668  014BE8  0100               	movlb	0	; () banked
 15669  014BEA  6FF1               	movwf	TCP_PayloadSave@ret& (0+255),b
 15670                           
 15671                           ; BSR set to: 0
 15672                           ;tcpv4.c: 317: uint16_t buffer_size;
 15673                           ;tcpv4.c: 320: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 15674  014BEC  EE20 F022          	lfsr	2,34
 15675  014BF0  503B               	movf	_currentTCB,w,c
 15676  014BF2  26D9               	addwf	fsr2l,f,c
 15677  014BF4  503C               	movf	_currentTCB+1,w,c
 15678  014BF6  22DA               	addwfc	fsr2h,f,c
 15679  014BF8  04DE               	decf	postinc2,w,c
 15680  014BFA  A4D8               	btfss	status,2,c
 15681  014BFC  0012               	return	
 15682                           
 15683                           ; BSR set to: 0
 15684                           ;tcpv4.c: 321: {
 15685                           ;tcpv4.c: 323: if (currentTCB->localWnd >= len)
 15686  014BFE  EE20 F01A          	lfsr	2,26
 15687  014C02  503B               	movf	_currentTCB,w,c
 15688  014C04  26D9               	addwf	fsr2l,f,c
 15689  014C06  503C               	movf	_currentTCB+1,w,c
 15690  014C08  22DA               	addwfc	fsr2h,f,c
 15691  014C0A  51E7               	movf	TCP_PayloadSave@len& (0+255),w,b
 15692  014C0C  5CDE               	subwf	postinc2,w,c
 15693  014C0E  51E8               	movf	(TCP_PayloadSave@len+1)& (0+255),w,b
 15694  014C10  58DE               	subwfb	postinc2,w,c
 15695  014C12  A0D8               	btfss	status,0,c
 15696  014C14  D005               	goto	l1617
 15697                           
 15698                           ; BSR set to: 0
 15699                           ;tcpv4.c: 324: {
 15700                           ;tcpv4.c: 325: buffer_size = len;
 15701  014C16  C0E7  F0F2         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 15702  014C1A  C0E8  F0F3         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 15703                           
 15704                           ;tcpv4.c: 326: }else
 15705  014C1E  D00A               	goto	l1618
 15706  014C20                     l1617:
 15707                           
 15708                           ; BSR set to: 0
 15709                           ;tcpv4.c: 327: {
 15710                           ;tcpv4.c: 328: buffer_size = currentTCB->localWnd;
 15711                           
 15712                           ; BSR set to: 0
 15713  014C20  EE20 F01A          	lfsr	2,26
 15714  014C24  503B               	movf	_currentTCB,w,c
 15715  014C26  26D9               	addwf	fsr2l,f,c
 15716  014C28  503C               	movf	_currentTCB+1,w,c
 15717  014C2A  22DA               	addwfc	fsr2h,f,c
 15718  014C2C  CFDE F0F2          	movff	postinc2,TCP_PayloadSave@buffer_size
 15719  014C30  CFDD F0F3          	movff	postdec2,TCP_PayloadSave@buffer_size+1
 15720  014C34                     l1618:
 15721                           
 15722                           ; BSR set to: 0
 15723                           ;tcpv4.c: 329: }
 15724                           ;tcpv4.c: 331: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 15725                           
 15726                           ; BSR set to: 0
 15727  014C34  EE20 F020          	lfsr	2,32
 15728  014C38  503B               	movf	_currentTCB,w,c
 15729  014C3A  26D9               	addwf	fsr2l,f,c
 15730  014C3C  503C               	movf	_currentTCB+1,w,c
 15731  014C3E  22DA               	addwfc	fsr2h,f,c
 15732  014C40  CFDE F013          	movff	postinc2,ETH_ReadBlock@buffer
 15733  014C44  CFDD F014          	movff	postdec2,ETH_ReadBlock@buffer+1
 15734  014C48  C0F2  F015         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 15735  014C4C  C0F3  F016         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 15736  014C50  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
 15737                           
 15738                           ;tcpv4.c: 332: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 15739  014C54  EE20 F020          	lfsr	2,32
 15740  014C58  503B               	movf	_currentTCB,w,c
 15741  014C5A  26D9               	addwf	fsr2l,f,c
 15742  014C5C  503C               	movf	_currentTCB+1,w,c
 15743  014C5E  22DA               	addwfc	fsr2h,f,c
 15744  014C60  CFDE F0E9          	movff	postinc2,??_TCP_PayloadSave
 15745  014C64  CFDD F0EA          	movff	postdec2,??_TCP_PayloadSave+1
 15746  014C68  0100               	movlb	0	; () banked
 15747  014C6A  51F2               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 15748  014C6C  27E9               	addwf	??_TCP_PayloadSave& (0+255),f,b
 15749  014C6E  51F3               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 15750  014C70  23EA               	addwfc	(??_TCP_PayloadSave+1)& (0+255),f,b
 15751  014C72  EE20 F020          	lfsr	2,32
 15752  014C76  503B               	movf	_currentTCB,w,c
 15753  014C78  26D9               	addwf	fsr2l,f,c
 15754  014C7A  503C               	movf	_currentTCB+1,w,c
 15755  014C7C  22DA               	addwfc	fsr2h,f,c
 15756  014C7E  C0E9  FFDE         	movff	??_TCP_PayloadSave,postinc2
 15757  014C82  C0EA  FFDD         	movff	??_TCP_PayloadSave+1,postdec2
 15758                           
 15759                           ; BSR set to: 0
 15760                           ;tcpv4.c: 335: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 15761  014C86  EE20 F01A          	lfsr	2,26
 15762  014C8A  503B               	movf	_currentTCB,w,c
 15763  014C8C  26D9               	addwf	fsr2l,f,c
 15764  014C8E  503C               	movf	_currentTCB+1,w,c
 15765  014C90  22DA               	addwfc	fsr2h,f,c
 15766  014C92  CFDE F0E9          	movff	postinc2,??_TCP_PayloadSave
 15767  014C96  CFDD F0EA          	movff	postdec2,??_TCP_PayloadSave+1
 15768  014C9A  C0F2  F0EB         	movff	TCP_PayloadSave@buffer_size,??_TCP_PayloadSave+2
 15769  014C9E  C0F3  F0EC         	movff	TCP_PayloadSave@buffer_size+1,??_TCP_PayloadSave+3
 15770  014CA2  1FEB               	comf	(??_TCP_PayloadSave+2)& (0+255),f,b
 15771  014CA4  1FEC               	comf	(??_TCP_PayloadSave+3)& (0+255),f,b
 15772  014CA6  4BEB               	infsnz	(??_TCP_PayloadSave+2)& (0+255),f,b
 15773  014CA8  2BEC               	incf	(??_TCP_PayloadSave+3)& (0+255),f,b
 15774  014CAA  51E9               	movf	??_TCP_PayloadSave& (0+255),w,b
 15775  014CAC  27EB               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 15776  014CAE  51EA               	movf	(??_TCP_PayloadSave+1)& (0+255),w,b
 15777  014CB0  23EC               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 15778  014CB2  EE20 F01A          	lfsr	2,26
 15779  014CB6  503B               	movf	_currentTCB,w,c
 15780  014CB8  26D9               	addwf	fsr2l,f,c
 15781  014CBA  503C               	movf	_currentTCB+1,w,c
 15782  014CBC  22DA               	addwfc	fsr2h,f,c
 15783  014CBE  C0EB  FFDE         	movff	??_TCP_PayloadSave+2,postinc2
 15784  014CC2  C0EC  FFDD         	movff	??_TCP_PayloadSave+3,postdec2
 15785                           
 15786                           ; BSR set to: 0
 15787                           ;tcpv4.c: 336: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 15788  014CC6  EE20 F008          	lfsr	2,8
 15789  014CCA  503B               	movf	_currentTCB,w,c
 15790  014CCC  26D9               	addwf	fsr2l,f,c
 15791  014CCE  503C               	movf	_currentTCB+1,w,c
 15792  014CD0  22DA               	addwfc	fsr2h,f,c
 15793  014CD2  CFDE F0E9          	movff	postinc2,??_TCP_PayloadSave
 15794  014CD6  CFDE F0EA          	movff	postinc2,??_TCP_PayloadSave+1
 15795  014CDA  CFDE F0EB          	movff	postinc2,??_TCP_PayloadSave+2
 15796  014CDE  CFDE F0EC          	movff	postinc2,??_TCP_PayloadSave+3
 15797  014CE2  51F2               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 15798  014CE4  25E9               	addwf	??_TCP_PayloadSave& (0+255),w,b
 15799  014CE6  6FED               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 15800  014CE8  51F3               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 15801  014CEA  21EA               	addwfc	(??_TCP_PayloadSave+1)& (0+255),w,b
 15802  014CEC  6FEE               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 15803  014CEE  0E00               	movlw	0
 15804  014CF0  21EB               	addwfc	(??_TCP_PayloadSave+2)& (0+255),w,b
 15805  014CF2  6FEF               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 15806  014CF4  0E00               	movlw	0
 15807  014CF6  21EC               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 15808  014CF8  6FF0               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 15809  014CFA  EE20 F00C          	lfsr	2,12
 15810  014CFE  503B               	movf	_currentTCB,w,c
 15811  014D00  26D9               	addwf	fsr2l,f,c
 15812  014D02  503C               	movf	_currentTCB+1,w,c
 15813  014D04  22DA               	addwfc	fsr2h,f,c
 15814  014D06  C0ED  FFDE         	movff	??_TCP_PayloadSave+4,postinc2
 15815  014D0A  C0EE  FFDE         	movff	??_TCP_PayloadSave+5,postinc2
 15816  014D0E  C0EF  FFDE         	movff	??_TCP_PayloadSave+6,postinc2
 15817  014D12  C0F0  FFDE         	movff	??_TCP_PayloadSave+7,postinc2
 15818                           
 15819                           ; BSR set to: 0
 15820                           ;tcpv4.c: 339: currentTCB->flags = 0x10U;
 15821  014D16  EE20 F038          	lfsr	2,56
 15822  014D1A  503B               	movf	_currentTCB,w,c
 15823  014D1C  26D9               	addwf	fsr2l,f,c
 15824  014D1E  503C               	movf	_currentTCB+1,w,c
 15825  014D20  22DA               	addwfc	fsr2h,f,c
 15826  014D22  0E10               	movlw	16
 15827  014D24  6EDF               	movwf	indf2,c
 15828                           
 15829                           ; BSR set to: 0
 15830                           ;tcpv4.c: 340: currentTCB->payloadSave = 1;
 15831  014D26  EE20 F02C          	lfsr	2,44
 15832  014D2A  503B               	movf	_currentTCB,w,c
 15833  014D2C  26D9               	addwf	fsr2l,f,c
 15834  014D2E  503C               	movf	_currentTCB+1,w,c
 15835  014D30  22DA               	addwfc	fsr2h,f,c
 15836  014D32  0E01               	movlw	1
 15837  014D34  6EDF               	movwf	indf2,c
 15838                           
 15839                           ; BSR set to: 0
 15840                           ;tcpv4.c: 341: TCP_Snd(currentTCB);
 15841  014D36  C03B  F0A8         	movff	_currentTCB,TCP_Snd@tcbPtr
 15842  014D3A  C03C  F0A9         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15843  014D3E  EC61  F08D         	call	_TCP_Snd	;wreg free
 15844                           
 15845                           ;tcpv4.c: 342: currentTCB->payloadSave = 0;
 15846  014D42  EE20 F02C          	lfsr	2,44
 15847  014D46  503B               	movf	_currentTCB,w,c
 15848  014D48  26D9               	addwf	fsr2l,f,c
 15849  014D4A  503C               	movf	_currentTCB+1,w,c
 15850  014D4C  22DA               	addwfc	fsr2h,f,c
 15851  014D4E  0E00               	movlw	0
 15852  014D50  6EDF               	movwf	indf2,c
 15853                           
 15854                           ;tcpv4.c: 343: ret = 1;
 15855  014D52  0E01               	movlw	1
 15856  014D54  0100               	movlb	0	; () banked
 15857  014D56  6FF1               	movwf	TCP_PayloadSave@ret& (0+255),b
 15858                           
 15859                           ; BSR set to: 0
 15860  014D58  0012               	return	
 15861  014D5A                     __end_of_TCP_PayloadSave:
 15862                           	opt stack 0
 15863                           tosu	equ	0xFFF
 15864                           tosh	equ	0xFFE
 15865                           tosl	equ	0xFFD
 15866                           pclath	equ	0xFFA
 15867                           tblptru	equ	0xFF8
 15868                           tblptrh	equ	0xFF7
 15869                           tblptrl	equ	0xFF6
 15870                           tablat	equ	0xFF5
 15871                           prodh	equ	0xFF4
 15872                           prodl	equ	0xFF3
 15873                           intcon	equ	0xFF2
 15874                           indf0	equ	0xFEF
 15875                           postinc0	equ	0xFEE
 15876                           fsr0h	equ	0xFEA
 15877                           fsr0l	equ	0xFE9
 15878                           wreg	equ	0xFE8
 15879                           indf1	equ	0xFE7
 15880                           postinc1	equ	0xFE6
 15881                           postdec1	equ	0xFE5
 15882                           plusw1	equ	0xFE3
 15883                           fsr1h	equ	0xFE2
 15884                           fsr1l	equ	0xFE1
 15885                           indf2	equ	0xFDF
 15886                           postinc2	equ	0xFDE
 15887                           postdec2	equ	0xFDD
 15888                           plusw2	equ	0xFDB
 15889                           fsr2h	equ	0xFDA
 15890                           fsr2l	equ	0xFD9
 15891                           status	equ	0xFD8
 15892                           
 15893 ;; *************** function _TCP_Snd *****************
 15894 ;; Defined at:
 15895 ;;		line 196 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15896 ;; Parameters:    Size  Location     Type
 15897 ;;  tcbPtr          2   72[BANK0 ] PTR struct .
 15898 ;;		 -> NULL(0), 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;  txHeader       20  115[BANK0 ] struct .
 15901 ;;  tcpDataLengt    2  113[BANK0 ] unsigned int 
 15902 ;;  payloadLengt    2  110[BANK0 ] unsigned int 
 15903 ;;  cksm            2  108[BANK0 ] unsigned int 
 15904 ;;  data            2  106[BANK0 ] PTR unsigned char 
 15905 ;;		 -> NULL(0), 
 15906 ;;  ret             1  112[BANK0 ] unsigned char 
 15907 ;; Return value:  Size  Location     Type
 15908 ;;                  1    wreg      unsigned char 
 15909 ;; Registers used:
 15910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15911 ;; Tracked objects:
 15912 ;;		On entry : 0/0
 15913 ;;		On exit  : 0/0
 15914 ;;		Unchanged: 0/0
 15915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15917 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15918 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15919 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15920 ;;Total ram usage:       63 bytes
 15921 ;; Hardware stack levels used:    1
 15922 ;; Hardware stack levels required when called:    9
 15923 ;; This function calls:
 15924 ;;		_ETH_Insert
 15925 ;;		_ETH_TxComputeChecksum
 15926 ;;		_ETH_WriteBlock
 15927 ;;		_IPV4_Send
 15928 ;;		_IPv4_Start
 15929 ;; This function is called by:
 15930 ;;		_TCP_PayloadSave
 15931 ;;		_TCP_FiniteStateMachine
 15932 ;;		_TCP_Send
 15933 ;; This function uses a non-reentrant model
 15934 ;;
 15935                           
 15936                           	psect	text58
 15937  011AC2                     __ptext58:
 15938                           	opt stack 0
 15939  011AC2                     _TCP_Snd:
 15940                           	opt stack 18
 15941                           
 15942                           ;tcpv4.c: 198: bool ret = 0;
 15943                           
 15944                           ; BSR set to: 0
 15945                           ;incstack = 0
 15946  011AC2  0E00               	movlw	0
 15947  011AC4  0100               	movlb	0	; () banked
 15948  011AC6  6FD0               	movwf	TCP_Snd@ret& (0+255),b
 15949                           
 15950                           ; BSR set to: 0
 15951                           ;tcpv4.c: 199: tcpHeader_t txHeader;
 15952                           ;tcpv4.c: 200: uint16_t payloadLength;
 15953                           ;tcpv4.c: 201: uint16_t cksm;
 15954                           ;tcpv4.c: 202: uint16_t tcpDataLength;
 15955                           ;tcpv4.c: 203: uint8_t *data;
 15956                           ;tcpv4.c: 205: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 15957  011AC8  C0A8  FFD9         	movff	TCP_Snd@tcbPtr,fsr2l
 15958  011ACC  C0A9  FFDA         	movff	TCP_Snd@tcbPtr+1,fsr2h
 15959  011AD0  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 15960  011AD4  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 15961  011AD8  51AA               	movf	??_TCP_Snd& (0+255),w,b
 15962  011ADA  6FAD               	movwf	(??_TCP_Snd+3)& (0+255),b
 15963  011ADC  6BAC               	clrf	(??_TCP_Snd+2)& (0+255),b
 15964  011ADE  C0A8  FFD9         	movff	TCP_Snd@tcbPtr,fsr2l
 15965  011AE2  C0A9  FFDA         	movff	TCP_Snd@tcbPtr+1,fsr2h
 15966  011AE6  CFDE F0AE          	movff	postinc2,??_TCP_Snd+4
 15967  011AEA  CFDD F0AF          	movff	postdec2,??_TCP_Snd+5
 15968  011AEE  C0AF  F0AE         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 15969  011AF2  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 15970  011AF4  0EFF               	movlw	255
 15971  011AF6  17AE               	andwf	(??_TCP_Snd+4)& (0+255),f,b
 15972  011AF8  0E00               	movlw	0
 15973  011AFA  17AF               	andwf	(??_TCP_Snd+5)& (0+255),f,b
 15974  011AFC  51AC               	movf	(??_TCP_Snd+2)& (0+255),w,b
 15975  011AFE  11AE               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 15976  011B00  6FD3               	movwf	TCP_Snd@txHeader& (0+255),b
 15977  011B02  51AD               	movf	(??_TCP_Snd+3)& (0+255),w,b
 15978  011B04  11AF               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 15979  011B06  6FD4               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;tcpv4.c: 206: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 15983  011B08  EE20 F006          	lfsr	2,6
 15984  011B0C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 15985  011B0E  26D9               	addwf	fsr2l,f,c
 15986  011B10  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 15987  011B12  22DA               	addwfc	fsr2h,f,c
 15988  011B14  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 15989  011B18  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 15990  011B1C  51AA               	movf	??_TCP_Snd& (0+255),w,b
 15991  011B1E  6FAD               	movwf	(??_TCP_Snd+3)& (0+255),b
 15992  011B20  6BAC               	clrf	(??_TCP_Snd+2)& (0+255),b
 15993  011B22  EE20 F006          	lfsr	2,6
 15994  011B26  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 15995  011B28  26D9               	addwf	fsr2l,f,c
 15996  011B2A  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 15997  011B2C  22DA               	addwfc	fsr2h,f,c
 15998  011B2E  CFDE F0AE          	movff	postinc2,??_TCP_Snd+4
 15999  011B32  CFDD F0AF          	movff	postdec2,??_TCP_Snd+5
 16000  011B36  C0AF  F0AE         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 16001  011B3A  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 16002  011B3C  0EFF               	movlw	255
 16003  011B3E  17AE               	andwf	(??_TCP_Snd+4)& (0+255),f,b
 16004  011B40  0E00               	movlw	0
 16005  011B42  17AF               	andwf	(??_TCP_Snd+5)& (0+255),f,b
 16006  011B44  51AC               	movf	(??_TCP_Snd+2)& (0+255),w,b
 16007  011B46  11AE               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 16008  011B48  6FD5               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 16009  011B4A  51AD               	movf	(??_TCP_Snd+3)& (0+255),w,b
 16010  011B4C  11AF               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 16011  011B4E  6FD6               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 16012                           
 16013                           ; BSR set to: 0
 16014                           ;tcpv4.c: 208: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 16015  011B50  EE20 F010          	lfsr	2,16
 16016  011B54  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16017  011B56  26D9               	addwf	fsr2l,f,c
 16018  011B58  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16019  011B5A  22DA               	addwfc	fsr2h,f,c
 16020  011B5C  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 16021  011B60  CFDE F0AB          	movff	postinc2,??_TCP_Snd+1
 16022  011B64  CFDE F0AC          	movff	postinc2,??_TCP_Snd+2
 16023  011B68  CFDE F0AD          	movff	postinc2,??_TCP_Snd+3
 16024  011B6C  0EFF               	movlw	255
 16025  011B6E  15AA               	andwf	??_TCP_Snd& (0+255),w,b
 16026  011B70  6FAE               	movwf	(??_TCP_Snd+4)& (0+255),b
 16027  011B72  0E00               	movlw	0
 16028  011B74  15AB               	andwf	(??_TCP_Snd+1)& (0+255),w,b
 16029  011B76  6FAF               	movwf	(??_TCP_Snd+5)& (0+255),b
 16030  011B78  0E00               	movlw	0
 16031  011B7A  15AC               	andwf	(??_TCP_Snd+2)& (0+255),w,b
 16032  011B7C  6FB0               	movwf	(??_TCP_Snd+6)& (0+255),b
 16033  011B7E  0E00               	movlw	0
 16034  011B80  15AD               	andwf	(??_TCP_Snd+3)& (0+255),w,b
 16035  011B82  6FB1               	movwf	(??_TCP_Snd+7)& (0+255),b
 16036  011B84  C0AE  F0B1         	movff	??_TCP_Snd+4,??_TCP_Snd+7
 16037  011B88  6BB0               	clrf	(??_TCP_Snd+6)& (0+255),b
 16038  011B8A  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 16039  011B8C  6BAE               	clrf	(??_TCP_Snd+4)& (0+255),b
 16040  011B8E  EE20 F010          	lfsr	2,16
 16041  011B92  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16042  011B94  26D9               	addwf	fsr2l,f,c
 16043  011B96  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16044  011B98  22DA               	addwfc	fsr2h,f,c
 16045  011B9A  0E00               	movlw	0
 16046  011B9C  14DE               	andwf	postinc2,w,c
 16047  011B9E  6FB2               	movwf	(??_TCP_Snd+8)& (0+255),b
 16048  011BA0  0EFF               	movlw	255
 16049  011BA2  14DE               	andwf	postinc2,w,c
 16050  011BA4  6FB3               	movwf	(??_TCP_Snd+9)& (0+255),b
 16051  011BA6  0E00               	movlw	0
 16052  011BA8  14DE               	andwf	postinc2,w,c
 16053  011BAA  6FB4               	movwf	(??_TCP_Snd+10)& (0+255),b
 16054  011BAC  0E00               	movlw	0
 16055  011BAE  14DE               	andwf	postinc2,w,c
 16056  011BB0  6FB5               	movwf	(??_TCP_Snd+11)& (0+255),b
 16057  011BB2  C0B4  F0B5         	movff	??_TCP_Snd+10,??_TCP_Snd+11
 16058  011BB6  C0B3  F0B4         	movff	??_TCP_Snd+9,??_TCP_Snd+10
 16059  011BBA  C0B2  F0B3         	movff	??_TCP_Snd+8,??_TCP_Snd+9
 16060  011BBE  6BB2               	clrf	(??_TCP_Snd+8)& (0+255),b
 16061  011BC0  EE20 F010          	lfsr	2,16
 16062  011BC4  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16063  011BC6  26D9               	addwf	fsr2l,f,c
 16064  011BC8  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16065  011BCA  22DA               	addwfc	fsr2h,f,c
 16066  011BCC  CFDE F0B6          	movff	postinc2,??_TCP_Snd+12
 16067  011BD0  CFDE F0B7          	movff	postinc2,??_TCP_Snd+13
 16068  011BD4  CFDE F0B8          	movff	postinc2,??_TCP_Snd+14
 16069  011BD8  CFDE F0B9          	movff	postinc2,??_TCP_Snd+15
 16070  011BDC  C0B7  F0B6         	movff	??_TCP_Snd+13,??_TCP_Snd+12
 16071  011BE0  C0B8  F0B7         	movff	??_TCP_Snd+14,??_TCP_Snd+13
 16072  011BE4  C0B9  F0B8         	movff	??_TCP_Snd+15,??_TCP_Snd+14
 16073  011BE8  6BB9               	clrf	(??_TCP_Snd+15)& (0+255),b
 16074  011BEA  0E00               	movlw	0
 16075  011BEC  15B6               	andwf	(??_TCP_Snd+12)& (0+255),w,b
 16076  011BEE  6FBA               	movwf	(??_TCP_Snd+16)& (0+255),b
 16077  011BF0  0EFF               	movlw	255
 16078  011BF2  15B7               	andwf	(??_TCP_Snd+13)& (0+255),w,b
 16079  011BF4  6FBB               	movwf	(??_TCP_Snd+17)& (0+255),b
 16080  011BF6  0E00               	movlw	0
 16081  011BF8  15B8               	andwf	(??_TCP_Snd+14)& (0+255),w,b
 16082  011BFA  6FBC               	movwf	(??_TCP_Snd+18)& (0+255),b
 16083  011BFC  0E00               	movlw	0
 16084  011BFE  15B9               	andwf	(??_TCP_Snd+15)& (0+255),w,b
 16085  011C00  6FBD               	movwf	(??_TCP_Snd+19)& (0+255),b
 16086  011C02  EE20 F010          	lfsr	2,16
 16087  011C06  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16088  011C08  26D9               	addwf	fsr2l,f,c
 16089  011C0A  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16090  011C0C  22DA               	addwfc	fsr2h,f,c
 16091  011C0E  0E00               	movlw	0
 16092  011C10  14DE               	andwf	postinc2,w,c
 16093  011C12  6FBE               	movwf	(??_TCP_Snd+20)& (0+255),b
 16094  011C14  0E00               	movlw	0
 16095  011C16  14DE               	andwf	postinc2,w,c
 16096  011C18  6FBF               	movwf	(??_TCP_Snd+21)& (0+255),b
 16097  011C1A  0E00               	movlw	0
 16098  011C1C  14DE               	andwf	postinc2,w,c
 16099  011C1E  6FC0               	movwf	(??_TCP_Snd+22)& (0+255),b
 16100  011C20  0EFF               	movlw	255
 16101  011C22  14DE               	andwf	postinc2,w,c
 16102  011C24  6FC1               	movwf	(??_TCP_Snd+23)& (0+255),b
 16103  011C26  0E19               	movlw	25
 16104  011C28  D005               	goto	u9490
 16105  011C2A                     u9495:
 16106  011C2A  90D8               	bcf	status,0,c
 16107  011C2C  33C1               	rrcf	(??_TCP_Snd+23)& (0+255),f,b
 16108  011C2E  33C0               	rrcf	(??_TCP_Snd+22)& (0+255),f,b
 16109  011C30  33BF               	rrcf	(??_TCP_Snd+21)& (0+255),f,b
 16110  011C32  33BE               	rrcf	(??_TCP_Snd+20)& (0+255),f,b
 16111  011C34                     u9490:
 16112  011C34  2EE8               	decfsz	wreg,f,c
 16113  011C36  D7F9               	goto	u9495
 16114  011C38  51BA               	movf	(??_TCP_Snd+16)& (0+255),w,b
 16115  011C3A  11BE               	iorwf	(??_TCP_Snd+20)& (0+255),w,b
 16116  011C3C  6FC2               	movwf	(??_TCP_Snd+24)& (0+255),b
 16117  011C3E  51BB               	movf	(??_TCP_Snd+17)& (0+255),w,b
 16118  011C40  11BF               	iorwf	(??_TCP_Snd+21)& (0+255),w,b
 16119  011C42  6FC3               	movwf	(??_TCP_Snd+25)& (0+255),b
 16120  011C44  51BC               	movf	(??_TCP_Snd+18)& (0+255),w,b
 16121  011C46  11C0               	iorwf	(??_TCP_Snd+22)& (0+255),w,b
 16122  011C48  6FC4               	movwf	(??_TCP_Snd+26)& (0+255),b
 16123  011C4A  51BD               	movf	(??_TCP_Snd+19)& (0+255),w,b
 16124  011C4C  11C1               	iorwf	(??_TCP_Snd+23)& (0+255),w,b
 16125  011C4E  6FC5               	movwf	(??_TCP_Snd+27)& (0+255),b
 16126  011C50  51B2               	movf	(??_TCP_Snd+8)& (0+255),w,b
 16127  011C52  11C2               	iorwf	(??_TCP_Snd+24)& (0+255),w,b
 16128  011C54  6FC6               	movwf	(??_TCP_Snd+28)& (0+255),b
 16129  011C56  51B3               	movf	(??_TCP_Snd+9)& (0+255),w,b
 16130  011C58  11C3               	iorwf	(??_TCP_Snd+25)& (0+255),w,b
 16131  011C5A  6FC7               	movwf	(??_TCP_Snd+29)& (0+255),b
 16132  011C5C  51B4               	movf	(??_TCP_Snd+10)& (0+255),w,b
 16133  011C5E  11C4               	iorwf	(??_TCP_Snd+26)& (0+255),w,b
 16134  011C60  6FC8               	movwf	(??_TCP_Snd+30)& (0+255),b
 16135  011C62  51B5               	movf	(??_TCP_Snd+11)& (0+255),w,b
 16136  011C64  11C5               	iorwf	(??_TCP_Snd+27)& (0+255),w,b
 16137  011C66  6FC9               	movwf	(??_TCP_Snd+31)& (0+255),b
 16138  011C68  51AE               	movf	(??_TCP_Snd+4)& (0+255),w,b
 16139  011C6A  11C6               	iorwf	(??_TCP_Snd+28)& (0+255),w,b
 16140  011C6C  6FD7               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 16141  011C6E  51AF               	movf	(??_TCP_Snd+5)& (0+255),w,b
 16142  011C70  11C7               	iorwf	(??_TCP_Snd+29)& (0+255),w,b
 16143  011C72  6FD8               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 16144  011C74  51B0               	movf	(??_TCP_Snd+6)& (0+255),w,b
 16145  011C76  11C8               	iorwf	(??_TCP_Snd+30)& (0+255),w,b
 16146  011C78  6FD9               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 16147  011C7A  51B1               	movf	(??_TCP_Snd+7)& (0+255),w,b
 16148  011C7C  11C9               	iorwf	(??_TCP_Snd+31)& (0+255),w,b
 16149  011C7E  6FDA               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 16150                           
 16151                           ; BSR set to: 0
 16152                           ;tcpv4.c: 210: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 16153  011C80  EE20 F00C          	lfsr	2,12
 16154  011C84  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16155  011C86  26D9               	addwf	fsr2l,f,c
 16156  011C88  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16157  011C8A  22DA               	addwfc	fsr2h,f,c
 16158  011C8C  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 16159  011C90  CFDE F0AB          	movff	postinc2,??_TCP_Snd+1
 16160  011C94  CFDE F0AC          	movff	postinc2,??_TCP_Snd+2
 16161  011C98  CFDE F0AD          	movff	postinc2,??_TCP_Snd+3
 16162  011C9C  0EFF               	movlw	255
 16163  011C9E  15AA               	andwf	??_TCP_Snd& (0+255),w,b
 16164  011CA0  6FAE               	movwf	(??_TCP_Snd+4)& (0+255),b
 16165  011CA2  0E00               	movlw	0
 16166  011CA4  15AB               	andwf	(??_TCP_Snd+1)& (0+255),w,b
 16167  011CA6  6FAF               	movwf	(??_TCP_Snd+5)& (0+255),b
 16168  011CA8  0E00               	movlw	0
 16169  011CAA  15AC               	andwf	(??_TCP_Snd+2)& (0+255),w,b
 16170  011CAC  6FB0               	movwf	(??_TCP_Snd+6)& (0+255),b
 16171  011CAE  0E00               	movlw	0
 16172  011CB0  15AD               	andwf	(??_TCP_Snd+3)& (0+255),w,b
 16173  011CB2  6FB1               	movwf	(??_TCP_Snd+7)& (0+255),b
 16174  011CB4  C0AE  F0B1         	movff	??_TCP_Snd+4,??_TCP_Snd+7
 16175  011CB8  6BB0               	clrf	(??_TCP_Snd+6)& (0+255),b
 16176  011CBA  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 16177  011CBC  6BAE               	clrf	(??_TCP_Snd+4)& (0+255),b
 16178  011CBE  EE20 F00C          	lfsr	2,12
 16179  011CC2  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16180  011CC4  26D9               	addwf	fsr2l,f,c
 16181  011CC6  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16182  011CC8  22DA               	addwfc	fsr2h,f,c
 16183  011CCA  0E00               	movlw	0
 16184  011CCC  14DE               	andwf	postinc2,w,c
 16185  011CCE  6FB2               	movwf	(??_TCP_Snd+8)& (0+255),b
 16186  011CD0  0EFF               	movlw	255
 16187  011CD2  14DE               	andwf	postinc2,w,c
 16188  011CD4  6FB3               	movwf	(??_TCP_Snd+9)& (0+255),b
 16189  011CD6  0E00               	movlw	0
 16190  011CD8  14DE               	andwf	postinc2,w,c
 16191  011CDA  6FB4               	movwf	(??_TCP_Snd+10)& (0+255),b
 16192  011CDC  0E00               	movlw	0
 16193  011CDE  14DE               	andwf	postinc2,w,c
 16194  011CE0  6FB5               	movwf	(??_TCP_Snd+11)& (0+255),b
 16195  011CE2  C0B4  F0B5         	movff	??_TCP_Snd+10,??_TCP_Snd+11
 16196  011CE6  C0B3  F0B4         	movff	??_TCP_Snd+9,??_TCP_Snd+10
 16197  011CEA  C0B2  F0B3         	movff	??_TCP_Snd+8,??_TCP_Snd+9
 16198  011CEE  6BB2               	clrf	(??_TCP_Snd+8)& (0+255),b
 16199  011CF0  EE20 F00C          	lfsr	2,12
 16200  011CF4  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16201  011CF6  26D9               	addwf	fsr2l,f,c
 16202  011CF8  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16203  011CFA  22DA               	addwfc	fsr2h,f,c
 16204  011CFC  CFDE F0B6          	movff	postinc2,??_TCP_Snd+12
 16205  011D00  CFDE F0B7          	movff	postinc2,??_TCP_Snd+13
 16206  011D04  CFDE F0B8          	movff	postinc2,??_TCP_Snd+14
 16207  011D08  CFDE F0B9          	movff	postinc2,??_TCP_Snd+15
 16208  011D0C  C0B7  F0B6         	movff	??_TCP_Snd+13,??_TCP_Snd+12
 16209  011D10  C0B8  F0B7         	movff	??_TCP_Snd+14,??_TCP_Snd+13
 16210  011D14  C0B9  F0B8         	movff	??_TCP_Snd+15,??_TCP_Snd+14
 16211  011D18  6BB9               	clrf	(??_TCP_Snd+15)& (0+255),b
 16212  011D1A  0E00               	movlw	0
 16213  011D1C  15B6               	andwf	(??_TCP_Snd+12)& (0+255),w,b
 16214  011D1E  6FBA               	movwf	(??_TCP_Snd+16)& (0+255),b
 16215  011D20  0EFF               	movlw	255
 16216  011D22  15B7               	andwf	(??_TCP_Snd+13)& (0+255),w,b
 16217  011D24  6FBB               	movwf	(??_TCP_Snd+17)& (0+255),b
 16218  011D26  0E00               	movlw	0
 16219  011D28  15B8               	andwf	(??_TCP_Snd+14)& (0+255),w,b
 16220  011D2A  6FBC               	movwf	(??_TCP_Snd+18)& (0+255),b
 16221  011D2C  0E00               	movlw	0
 16222  011D2E  15B9               	andwf	(??_TCP_Snd+15)& (0+255),w,b
 16223  011D30  6FBD               	movwf	(??_TCP_Snd+19)& (0+255),b
 16224  011D32  EE20 F00C          	lfsr	2,12
 16225  011D36  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16226  011D38  26D9               	addwf	fsr2l,f,c
 16227  011D3A  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16228  011D3C  22DA               	addwfc	fsr2h,f,c
 16229  011D3E  0E00               	movlw	0
 16230  011D40  14DE               	andwf	postinc2,w,c
 16231  011D42  6FBE               	movwf	(??_TCP_Snd+20)& (0+255),b
 16232  011D44  0E00               	movlw	0
 16233  011D46  14DE               	andwf	postinc2,w,c
 16234  011D48  6FBF               	movwf	(??_TCP_Snd+21)& (0+255),b
 16235  011D4A  0E00               	movlw	0
 16236  011D4C  14DE               	andwf	postinc2,w,c
 16237  011D4E  6FC0               	movwf	(??_TCP_Snd+22)& (0+255),b
 16238  011D50  0EFF               	movlw	255
 16239  011D52  14DE               	andwf	postinc2,w,c
 16240  011D54  6FC1               	movwf	(??_TCP_Snd+23)& (0+255),b
 16241  011D56  0E19               	movlw	25
 16242  011D58  D005               	goto	u9500
 16243  011D5A                     u9505:
 16244  011D5A  90D8               	bcf	status,0,c
 16245  011D5C  33C1               	rrcf	(??_TCP_Snd+23)& (0+255),f,b
 16246  011D5E  33C0               	rrcf	(??_TCP_Snd+22)& (0+255),f,b
 16247  011D60  33BF               	rrcf	(??_TCP_Snd+21)& (0+255),f,b
 16248  011D62  33BE               	rrcf	(??_TCP_Snd+20)& (0+255),f,b
 16249  011D64                     u9500:
 16250  011D64  2EE8               	decfsz	wreg,f,c
 16251  011D66  D7F9               	goto	u9505
 16252  011D68  51BA               	movf	(??_TCP_Snd+16)& (0+255),w,b
 16253  011D6A  11BE               	iorwf	(??_TCP_Snd+20)& (0+255),w,b
 16254  011D6C  6FC2               	movwf	(??_TCP_Snd+24)& (0+255),b
 16255  011D6E  51BB               	movf	(??_TCP_Snd+17)& (0+255),w,b
 16256  011D70  11BF               	iorwf	(??_TCP_Snd+21)& (0+255),w,b
 16257  011D72  6FC3               	movwf	(??_TCP_Snd+25)& (0+255),b
 16258  011D74  51BC               	movf	(??_TCP_Snd+18)& (0+255),w,b
 16259  011D76  11C0               	iorwf	(??_TCP_Snd+22)& (0+255),w,b
 16260  011D78  6FC4               	movwf	(??_TCP_Snd+26)& (0+255),b
 16261  011D7A  51BD               	movf	(??_TCP_Snd+19)& (0+255),w,b
 16262  011D7C  11C1               	iorwf	(??_TCP_Snd+23)& (0+255),w,b
 16263  011D7E  6FC5               	movwf	(??_TCP_Snd+27)& (0+255),b
 16264  011D80  51B2               	movf	(??_TCP_Snd+8)& (0+255),w,b
 16265  011D82  11C2               	iorwf	(??_TCP_Snd+24)& (0+255),w,b
 16266  011D84  6FC6               	movwf	(??_TCP_Snd+28)& (0+255),b
 16267  011D86  51B3               	movf	(??_TCP_Snd+9)& (0+255),w,b
 16268  011D88  11C3               	iorwf	(??_TCP_Snd+25)& (0+255),w,b
 16269  011D8A  6FC7               	movwf	(??_TCP_Snd+29)& (0+255),b
 16270  011D8C  51B4               	movf	(??_TCP_Snd+10)& (0+255),w,b
 16271  011D8E  11C4               	iorwf	(??_TCP_Snd+26)& (0+255),w,b
 16272  011D90  6FC8               	movwf	(??_TCP_Snd+30)& (0+255),b
 16273  011D92  51B5               	movf	(??_TCP_Snd+11)& (0+255),w,b
 16274  011D94  11C5               	iorwf	(??_TCP_Snd+27)& (0+255),w,b
 16275  011D96  6FC9               	movwf	(??_TCP_Snd+31)& (0+255),b
 16276  011D98  51AE               	movf	(??_TCP_Snd+4)& (0+255),w,b
 16277  011D9A  11C6               	iorwf	(??_TCP_Snd+28)& (0+255),w,b
 16278  011D9C  6FDB               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 16279  011D9E  51AF               	movf	(??_TCP_Snd+5)& (0+255),w,b
 16280  011DA0  11C7               	iorwf	(??_TCP_Snd+29)& (0+255),w,b
 16281  011DA2  6FDC               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 16282  011DA4  51B0               	movf	(??_TCP_Snd+6)& (0+255),w,b
 16283  011DA6  11C8               	iorwf	(??_TCP_Snd+30)& (0+255),w,b
 16284  011DA8  6FDD               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 16285  011DAA  51B1               	movf	(??_TCP_Snd+7)& (0+255),w,b
 16286  011DAC  11C9               	iorwf	(??_TCP_Snd+31)& (0+255),w,b
 16287  011DAE  6FDE               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 16288                           
 16289                           ; BSR set to: 0
 16290                           ;tcpv4.c: 212: txHeader.ns = 0;
 16291  011DB0  91DF               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 16292                           
 16293                           ; BSR set to: 0
 16294                           ;tcpv4.c: 213: txHeader.reserved = 0;
 16295  011DB2  93DF               	bcf	(TCP_Snd@txHeader+12)& (0+255),1,b
 16296  011DB4  95DF               	bcf	(TCP_Snd@txHeader+12)& (0+255),2,b
 16297  011DB6  97DF               	bcf	(TCP_Snd@txHeader+12)& (0+255),3,b
 16298                           
 16299                           ;tcpv4.c: 214: txHeader.dataOffset = 5;
 16300  011DB8  51DF               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 16301  011DBA  0B0F               	andlw	-241
 16302  011DBC  0950               	iorlw	80
 16303  011DBE  6FDF               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 16304                           
 16305                           ; BSR set to: 0
 16306                           ;tcpv4.c: 215: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 16307  011DC0  EE20 F01A          	lfsr	2,26
 16308  011DC4  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16309  011DC6  26D9               	addwf	fsr2l,f,c
 16310  011DC8  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16311  011DCA  22DA               	addwfc	fsr2h,f,c
 16312  011DCC  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 16313  011DD0  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 16314  011DD4  51AA               	movf	??_TCP_Snd& (0+255),w,b
 16315  011DD6  6FAD               	movwf	(??_TCP_Snd+3)& (0+255),b
 16316  011DD8  6BAC               	clrf	(??_TCP_Snd+2)& (0+255),b
 16317  011DDA  EE20 F01A          	lfsr	2,26
 16318  011DDE  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16319  011DE0  26D9               	addwf	fsr2l,f,c
 16320  011DE2  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16321  011DE4  22DA               	addwfc	fsr2h,f,c
 16322  011DE6  CFDE F0AE          	movff	postinc2,??_TCP_Snd+4
 16323  011DEA  CFDD F0AF          	movff	postdec2,??_TCP_Snd+5
 16324  011DEE  C0AF  F0AE         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 16325  011DF2  6BAF               	clrf	(??_TCP_Snd+5)& (0+255),b
 16326  011DF4  0EFF               	movlw	255
 16327  011DF6  17AE               	andwf	(??_TCP_Snd+4)& (0+255),f,b
 16328  011DF8  0E00               	movlw	0
 16329  011DFA  17AF               	andwf	(??_TCP_Snd+5)& (0+255),f,b
 16330  011DFC  51AC               	movf	(??_TCP_Snd+2)& (0+255),w,b
 16331  011DFE  11AE               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 16332  011E00  6FE1               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 16333  011E02  51AD               	movf	(??_TCP_Snd+3)& (0+255),w,b
 16334  011E04  11AF               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 16335  011E06  6FE2               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;tcpv4.c: 216: txHeader.checksum = 0;
 16339  011E08  0E00               	movlw	0
 16340  011E0A  6FE4               	movwf	(TCP_Snd@txHeader+17)& (0+255),b
 16341  011E0C  0E00               	movlw	0
 16342  011E0E  6FE3               	movwf	(TCP_Snd@txHeader+16)& (0+255),b
 16343                           
 16344                           ; BSR set to: 0
 16345                           ;tcpv4.c: 217: txHeader.urgentPtr = 0;
 16346  011E10  0E00               	movlw	0
 16347  011E12  6FE6               	movwf	(TCP_Snd@txHeader+19)& (0+255),b
 16348  011E14  0E00               	movlw	0
 16349  011E16  6FE5               	movwf	(TCP_Snd@txHeader+18)& (0+255),b
 16350                           
 16351                           ; BSR set to: 0
 16352                           ;tcpv4.c: 219: if ((tcbPtr->flags) & (0x02U | 0x04U))
 16353  011E18  EE20 F038          	lfsr	2,56
 16354  011E1C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16355  011E1E  26D9               	addwf	fsr2l,f,c
 16356  011E20  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16357  011E22  22DA               	addwfc	fsr2h,f,c
 16358  011E24  50DF               	movf	indf2,w,c
 16359  011E26  6FAA               	movwf	??_TCP_Snd& (0+255),b
 16360  011E28  0E06               	movlw	6
 16361  011E2A  17AA               	andwf	??_TCP_Snd& (0+255),f,b
 16362  011E2C  A4D8               	btfss	status,2,c
 16363  011E2E  D009               	goto	u9520
 16364                           
 16365                           ; BSR set to: 0
 16366                           ;tcpv4.c: 223: else if(tcbPtr->payloadSave == 1)
 16367                           
 16368                           ; BSR set to: 0
 16369                           
 16370                           ;tcpv4.c: 222: }
 16371                           
 16372                           ; BSR set to: 0
 16373                           ;tcpv4.c: 220: {
 16374                           ;tcpv4.c: 221: tcpDataLength = 0;
 16375  011E30  EE20 F02C          	lfsr	2,44
 16376  011E34  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16377  011E36  26D9               	addwf	fsr2l,f,c
 16378  011E38  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16379  011E3A  22DA               	addwfc	fsr2h,f,c
 16380  011E3C  04DE               	decf	postinc2,w,c
 16381  011E3E  A4D8               	btfss	status,2,c
 16382  011E40  D005               	goto	l1601
 16383  011E42                     u9520:
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;tcpv4.c: 224: {
 16387                           ;tcpv4.c: 225: tcpDataLength = 0;
 16388  011E42  0E00               	movlw	0
 16389  011E44  6FD2               	movwf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 16390  011E46  0E00               	movlw	0
 16391  011E48  6FD1               	movwf	TCP_Snd@tcpDataLength& (0+255),b
 16392                           
 16393                           ;tcpv4.c: 226: }else
 16394  011E4A  D0A9               	goto	l1607
 16395  011E4C                     l1601:
 16396                           
 16397                           ; BSR set to: 0
 16398                           ;tcpv4.c: 227: {
 16399                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesSent;
 16400                           
 16401                           ; BSR set to: 0
 16402  011E4C  EE20 F02A          	lfsr	2,42
 16403  011E50  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16404  011E52  26D9               	addwf	fsr2l,f,c
 16405  011E54  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16406  011E56  22DA               	addwfc	fsr2h,f,c
 16407  011E58  CFDE F0D1          	movff	postinc2,TCP_Snd@tcpDataLength
 16408  011E5C  CFDD F0D2          	movff	postdec2,TCP_Snd@tcpDataLength+1
 16409                           
 16410                           ; BSR set to: 0
 16411                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 16412  011E60  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 16413  011E62  11D2               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 16414  011E64  B4D8               	btfsc	status,2,c
 16415  011E66  D09B               	goto	l1607
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;tcpv4.c: 231: {
 16419                           ;tcpv4.c: 232: if(tcbPtr->remoteWnd == 0)
 16420  011E68  EE20 F018          	lfsr	2,24
 16421  011E6C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16422  011E6E  26D9               	addwf	fsr2l,f,c
 16423  011E70  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16424  011E72  22DA               	addwfc	fsr2h,f,c
 16425  011E74  50DE               	movf	postinc2,w,c
 16426  011E76  10DE               	iorwf	postinc2,w,c
 16427  011E78  A4D8               	btfss	status,2,c
 16428  011E7A  D00A               	goto	l1604
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;tcpv4.c: 233: {
 16432                           ;tcpv4.c: 234: tcbPtr->remoteWnd = 1;
 16433  011E7C  EE20 F018          	lfsr	2,24
 16434  011E80  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16435  011E82  26D9               	addwf	fsr2l,f,c
 16436  011E84  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16437  011E86  22DA               	addwfc	fsr2h,f,c
 16438  011E88  0E01               	movlw	1
 16439  011E8A  6EDE               	movwf	postinc2,c
 16440  011E8C  0E00               	movlw	0
 16441  011E8E  6EDD               	movwf	postdec2,c
 16442  011E90                     l1604:
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;tcpv4.c: 235: }
 16446                           ;tcpv4.c: 236: if(tcpDataLength > tcbPtr->remoteWnd)
 16447  011E90  EE20 F018          	lfsr	2,24
 16448  011E94  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16449  011E96  26D9               	addwf	fsr2l,f,c
 16450  011E98  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16451  011E9A  22DA               	addwfc	fsr2h,f,c
 16452  011E9C  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 16453  011E9E  5CDE               	subwf	postinc2,w,c
 16454  011EA0  51D2               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 16455  011EA2  58DE               	subwfb	postinc2,w,c
 16456  011EA4  B0D8               	btfsc	status,0,c
 16457  011EA6  D00A               	goto	l1605
 16458                           
 16459                           ; BSR set to: 0
 16460                           ;tcpv4.c: 237: {
 16461                           ;tcpv4.c: 238: tcpDataLength = tcbPtr->remoteWnd;
 16462  011EA8  EE20 F018          	lfsr	2,24
 16463  011EAC  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16464  011EAE  26D9               	addwf	fsr2l,f,c
 16465  011EB0  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16466  011EB2  22DA               	addwfc	fsr2h,f,c
 16467  011EB4  CFDE F0D1          	movff	postinc2,TCP_Snd@tcpDataLength
 16468  011EB8  CFDD F0D2          	movff	postdec2,TCP_Snd@tcpDataLength+1
 16469  011EBC                     l1605:
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;tcpv4.c: 239: }
 16473                           ;tcpv4.c: 241: if(tcpDataLength > tcbPtr->mss)
 16474  011EBC  EE20 F01C          	lfsr	2,28
 16475  011EC0  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16476  011EC2  26D9               	addwf	fsr2l,f,c
 16477  011EC4  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16478  011EC6  22DA               	addwfc	fsr2h,f,c
 16479  011EC8  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 16480  011ECA  5CDE               	subwf	postinc2,w,c
 16481  011ECC  51D2               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 16482  011ECE  58DE               	subwfb	postinc2,w,c
 16483  011ED0  B0D8               	btfsc	status,0,c
 16484  011ED2  D00A               	goto	l1606
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;tcpv4.c: 242: {
 16488                           ;tcpv4.c: 243: tcpDataLength = tcbPtr->mss;
 16489  011ED4  EE20 F01C          	lfsr	2,28
 16490  011ED8  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16491  011EDA  26D9               	addwf	fsr2l,f,c
 16492  011EDC  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16493  011EDE  22DA               	addwfc	fsr2h,f,c
 16494  011EE0  CFDE F0D1          	movff	postinc2,TCP_Snd@tcpDataLength
 16495  011EE4  CFDD F0D2          	movff	postdec2,TCP_Snd@tcpDataLength+1
 16496  011EE8                     l1606:
 16497                           
 16498                           ; BSR set to: 0
 16499                           ;tcpv4.c: 244: }
 16500                           ;tcpv4.c: 245: data = tcbPtr->txBufferPtr;
 16501  011EE8  EE20 F025          	lfsr	2,37
 16502  011EEC  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16503  011EEE  26D9               	addwf	fsr2l,f,c
 16504  011EF0  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16505  011EF2  22DA               	addwfc	fsr2h,f,c
 16506  011EF4  CFDE F0CA          	movff	postinc2,TCP_Snd@data
 16507  011EF8  CFDD F0CB          	movff	postdec2,TCP_Snd@data+1
 16508                           
 16509                           ;tcpv4.c: 248: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 16510  011EFC  EE20 F025          	lfsr	2,37
 16511  011F00  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16512  011F02  26D9               	addwf	fsr2l,f,c
 16513  011F04  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16514  011F06  22DA               	addwfc	fsr2h,f,c
 16515  011F08  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 16516  011F0C  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 16517  011F10  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 16518  011F12  27AA               	addwf	??_TCP_Snd& (0+255),f,b
 16519  011F14  51D2               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 16520  011F16  23AB               	addwfc	(??_TCP_Snd+1)& (0+255),f,b
 16521  011F18  EE20 F025          	lfsr	2,37
 16522  011F1C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16523  011F1E  26D9               	addwf	fsr2l,f,c
 16524  011F20  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16525  011F22  22DA               	addwfc	fsr2h,f,c
 16526  011F24  C0AA  FFDE         	movff	??_TCP_Snd,postinc2
 16527  011F28  C0AB  FFDD         	movff	??_TCP_Snd+1,postdec2
 16528                           
 16529                           ;tcpv4.c: 249: tcbPtr->bytesToSend = tcbPtr->bytesSent - tcpDataLength;
 16530  011F2C  EE20 F02A          	lfsr	2,42
 16531  011F30  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16532  011F32  26D9               	addwf	fsr2l,f,c
 16533  011F34  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16534  011F36  22DA               	addwfc	fsr2h,f,c
 16535  011F38  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 16536  011F3C  CFDD F0AB          	movff	postdec2,??_TCP_Snd+1
 16537  011F40  C0D1  F0AC         	movff	TCP_Snd@tcpDataLength,??_TCP_Snd+2
 16538  011F44  C0D2  F0AD         	movff	TCP_Snd@tcpDataLength+1,??_TCP_Snd+3
 16539  011F48  1FAC               	comf	(??_TCP_Snd+2)& (0+255),f,b
 16540  011F4A  1FAD               	comf	(??_TCP_Snd+3)& (0+255),f,b
 16541  011F4C  4BAC               	infsnz	(??_TCP_Snd+2)& (0+255),f,b
 16542  011F4E  2BAD               	incf	(??_TCP_Snd+3)& (0+255),f,b
 16543  011F50  51AA               	movf	??_TCP_Snd& (0+255),w,b
 16544  011F52  27AC               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 16545  011F54  51AB               	movf	(??_TCP_Snd+1)& (0+255),w,b
 16546  011F56  23AD               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 16547  011F58  EE20 F027          	lfsr	2,39
 16548  011F5C  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16549  011F5E  26D9               	addwf	fsr2l,f,c
 16550  011F60  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16551  011F62  22DA               	addwfc	fsr2h,f,c
 16552  011F64  C0AC  FFDE         	movff	??_TCP_Snd+2,postinc2
 16553  011F68  C0AD  FFDD         	movff	??_TCP_Snd+3,postdec2
 16554                           
 16555                           ;tcpv4.c: 251: if (tcbPtr->bytesToSend == 0)
 16556  011F6C  EE20 F027          	lfsr	2,39
 16557  011F70  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16558  011F72  26D9               	addwf	fsr2l,f,c
 16559  011F74  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16560  011F76  22DA               	addwfc	fsr2h,f,c
 16561  011F78  50DE               	movf	postinc2,w,c
 16562  011F7A  10DE               	iorwf	postinc2,w,c
 16563  011F7C  A4D8               	btfss	status,2,c
 16564  011F7E  D00F               	goto	l1607
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;tcpv4.c: 252: {
 16568                           ;tcpv4.c: 253: tcbPtr->flags = tcbPtr->flags | 0x08U;
 16569  011F80  EE20 F038          	lfsr	2,56
 16570  011F84  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16571  011F86  26D9               	addwf	fsr2l,f,c
 16572  011F88  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16573  011F8A  22DA               	addwfc	fsr2h,f,c
 16574  011F8C  EE10 F038          	lfsr	1,56
 16575  011F90  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16576  011F92  26E1               	addwf	fsr1l,f,c
 16577  011F94  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16578  011F96  22E2               	addwfc	fsr1h,f,c
 16579  011F98  50E7               	movf	indf1,w,c
 16580  011F9A  0908               	iorlw	8
 16581  011F9C  6EDF               	movwf	indf2,c
 16582  011F9E                     l1607:
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;tcpv4.c: 254: }
 16586                           ;tcpv4.c: 255: }
 16587                           ;tcpv4.c: 256: }
 16588                           ;tcpv4.c: 258: txHeader.flags = tcbPtr->flags;
 16589                           
 16590                           ; BSR set to: 0
 16591                           
 16592                           ; BSR set to: 0
 16593                           
 16594                           ; BSR set to: 0
 16595                           
 16596                           ; BSR set to: 0
 16597  011F9E  EE20 F038          	lfsr	2,56
 16598  011FA2  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16599  011FA4  26D9               	addwf	fsr2l,f,c
 16600  011FA6  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16601  011FA8  22DA               	addwfc	fsr2h,f,c
 16602  011FAA  50DF               	movf	indf2,w,c
 16603  011FAC  6FE0               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;tcpv4.c: 259: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 16607  011FAE  0E14               	movlw	20
 16608  011FB0  25D1               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 16609  011FB2  6FCE               	movwf	TCP_Snd@payloadLength& (0+255),b
 16610  011FB4  0E00               	movlw	0
 16611  011FB6  21D2               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 16612  011FB8  6FCF               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 16613                           
 16614                           ; BSR set to: 0
 16615                           ;tcpv4.c: 261: ret = IPv4_Start(tcbPtr->destIP, TCP_TCPIP);
 16616  011FBA  EE20 F002          	lfsr	2,2
 16617  011FBE  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16618  011FC0  26D9               	addwf	fsr2l,f,c
 16619  011FC2  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16620  011FC4  22DA               	addwfc	fsr2h,f,c
 16621  011FC6  CFDE F031          	movff	postinc2,IPv4_Start@destAddress
 16622  011FCA  CFDE F032          	movff	postinc2,IPv4_Start@destAddress+1
 16623  011FCE  CFDE F033          	movff	postinc2,IPv4_Start@destAddress+2
 16624  011FD2  CFDE F034          	movff	postinc2,IPv4_Start@destAddress+3
 16625  011FD6  0E06               	movlw	6
 16626  011FD8  6E35               	movwf	IPv4_Start@protocol,c
 16627  011FDA  EC8E  F09E         	call	_IPv4_Start	;wreg free
 16628  011FDE  0100               	movlb	0	; () banked
 16629  011FE0  6FD0               	movwf	TCP_Snd@ret& (0+255),b
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;tcpv4.c: 262: if (ret == SUCCESS)
 16633  011FE2  05D0               	decf	TCP_Snd@ret& (0+255),w,b
 16634  011FE4  A4D8               	btfss	status,2,c
 16635  011FE6  D04A               	goto	l1608
 16636                           
 16637                           ; BSR set to: 0
 16638                           ;tcpv4.c: 263: {
 16639                           ;tcpv4.c: 264: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 16640  011FE8  0ED3               	movlw	low TCP_Snd@txHeader
 16641  011FEA  6E13               	movwf	ETH_WriteBlock@buffer,c
 16642  011FEC  0E00               	movlw	high TCP_Snd@txHeader
 16643  011FEE  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 16644  011FF0  0E00               	movlw	0
 16645  011FF2  6E16               	movwf	ETH_WriteBlock@length+1,c
 16646  011FF4  0E14               	movlw	20
 16647  011FF6  6E15               	movwf	ETH_WriteBlock@length,c
 16648  011FF8  ECB8  F0B2         	call	_ETH_WriteBlock	;wreg free
 16649                           
 16650                           ;tcpv4.c: 266: if (tcpDataLength > 0)
 16651  011FFC  0100               	movlb	0	; () banked
 16652  011FFE  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 16653  012000  11D2               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 16654  012002  B4D8               	btfsc	status,2,c
 16655  012004  D00A               	goto	l1609
 16656                           
 16657                           ; BSR set to: 0
 16658                           ;tcpv4.c: 267: {
 16659                           ;tcpv4.c: 268: ETH_WriteBlock( data, tcpDataLength);
 16660  012006  C0CA  F013         	movff	TCP_Snd@data,ETH_WriteBlock@buffer
 16661  01200A  C0CB  F014         	movff	TCP_Snd@data+1,ETH_WriteBlock@buffer+1
 16662  01200E  C0D1  F015         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@length
 16663  012012  C0D2  F016         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@length+1
 16664  012016  ECB8  F0B2         	call	_ETH_WriteBlock	;wreg free
 16665  01201A                     l1609:
 16666                           
 16667                           ;tcpv4.c: 269: }
 16668                           ;tcpv4.c: 271: cksm = payloadLength + TCP_TCPIP;
 16669  01201A  0E06               	movlw	6
 16670  01201C  0100               	movlb	0	; () banked
 16671  01201E  25CE               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 16672  012020  6FCC               	movwf	TCP_Snd@cksm& (0+255),b
 16673  012022  0E00               	movlw	0
 16674  012024  21CF               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 16675  012026  6FCD               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 16676                           
 16677                           ; BSR set to: 0
 16678                           ;tcpv4.c: 273: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 16679  012028  0E00               	movlw	0
 16680  01202A  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 16681  01202C  0E1A               	movlw	26
 16682  01202E  6E25               	movwf	ETH_TxComputeChecksum@position,c
 16683  012030  0E08               	movlw	8
 16684  012032  25CE               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 16685  012034  6E27               	movwf	ETH_TxComputeChecksum@len,c
 16686  012036  0E00               	movlw	0
 16687  012038  21CF               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 16688  01203A  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 16689  01203C  C0CC  F029         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 16690  012040  C0CD  F02A         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 16691  012044  EC6D  F0AB         	call	_ETH_TxComputeChecksum	;wreg free
 16692  012048  C025  F0CC         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 16693  01204C  C026  F0CD         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 16694                           
 16695                           ;tcpv4.c: 274: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 16696  012050  0ECC               	movlw	low TCP_Snd@cksm
 16697  012052  6E13               	movwf	ETH_Insert@data,c
 16698  012054  0E00               	movlw	high TCP_Snd@cksm
 16699  012056  6E14               	movwf	ETH_Insert@data+1,c
 16700  012058  0E00               	movlw	0
 16701  01205A  6E16               	movwf	ETH_Insert@len+1,c
 16702  01205C  0E02               	movlw	2
 16703  01205E  6E15               	movwf	ETH_Insert@len,c
 16704  012060  0E00               	movlw	0
 16705  012062  6E18               	movwf	ETH_Insert@offset+1,c
 16706  012064  0E32               	movlw	50
 16707  012066  6E17               	movwf	ETH_Insert@offset,c
 16708  012068  ECF4  F0AF         	call	_ETH_Insert	;wreg free
 16709                           
 16710                           ;tcpv4.c: 276: ret = IPV4_Send(payloadLength);
 16711  01206C  C0CE  F037         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 16712  012070  C0CF  F038         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 16713  012074  EC7B  F0AD         	call	_IPV4_Send	;wreg free
 16714  012078  0100               	movlb	0	; () banked
 16715  01207A  6FD0               	movwf	TCP_Snd@ret& (0+255),b
 16716  01207C                     l1608:
 16717                           
 16718                           ; BSR set to: 0
 16719                           ;tcpv4.c: 278: }
 16720                           ;tcpv4.c: 282: if (ret != SUCCESS)
 16721  01207C  05D0               	decf	TCP_Snd@ret& (0+255),w,b
 16722  01207E  B4D8               	btfsc	status,2,c
 16723  012080  D025               	goto	l1610
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;tcpv4.c: 283: {
 16727                           ;tcpv4.c: 286: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 16728  012082  EE20 F037          	lfsr	2,55
 16729  012086  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16730  012088  26D9               	addwf	fsr2l,f,c
 16731  01208A  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16732  01208C  22DA               	addwfc	fsr2h,f,c
 16733  01208E  EE10 F037          	lfsr	1,55
 16734  012092  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16735  012094  26E1               	addwf	fsr1l,f,c
 16736  012096  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16737  012098  22E2               	addwfc	fsr1h,f,c
 16738  01209A  50E7               	movf	indf1,w,c
 16739  01209C  6FAA               	movwf	??_TCP_Snd& (0+255),b
 16740  01209E  29AA               	incf	??_TCP_Snd& (0+255),w,b
 16741  0120A0  6EDF               	movwf	indf2,c
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;tcpv4.c: 288: if (tcbPtr->timeout == 0)
 16745  0120A2  EE20 F033          	lfsr	2,51
 16746  0120A6  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16747  0120A8  26D9               	addwf	fsr2l,f,c
 16748  0120AA  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16749  0120AC  22DA               	addwfc	fsr2h,f,c
 16750  0120AE  50DE               	movf	postinc2,w,c
 16751  0120B0  10DE               	iorwf	postinc2,w,c
 16752  0120B2  A4D8               	btfss	status,2,c
 16753  0120B4  D033               	goto	l1612
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;tcpv4.c: 289: {
 16757                           ;tcpv4.c: 290: tcbPtr->timeout = ((unsigned long)1*2);
 16758  0120B6  EE20 F033          	lfsr	2,51
 16759  0120BA  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16760  0120BC  26D9               	addwf	fsr2l,f,c
 16761  0120BE  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16762  0120C0  22DA               	addwfc	fsr2h,f,c
 16763  0120C2  0E02               	movlw	2
 16764  0120C4  6EDE               	movwf	postinc2,c
 16765  0120C6  0E00               	movlw	0
 16766  0120C8  6EDD               	movwf	postdec2,c
 16767                           
 16768                           ; BSR set to: 0
 16769                           ;tcpv4.c: 291: }
 16770                           ;tcpv4.c: 292: }
 16771  0120CA  D028               	goto	l1612
 16772  0120CC                     l1610:
 16773                           
 16774                           ; BSR set to: 0
 16775                           ;tcpv4.c: 293: else
 16776                           ;tcpv4.c: 294: {
 16777                           ;tcpv4.c: 296: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 16778                           
 16779                           ; BSR set to: 0
 16780  0120CC  EE20 F010          	lfsr	2,16
 16781  0120D0  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16782  0120D2  26D9               	addwf	fsr2l,f,c
 16783  0120D4  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16784  0120D6  22DA               	addwfc	fsr2h,f,c
 16785  0120D8  CFDE F0AA          	movff	postinc2,??_TCP_Snd
 16786  0120DC  CFDE F0AB          	movff	postinc2,??_TCP_Snd+1
 16787  0120E0  CFDE F0AC          	movff	postinc2,??_TCP_Snd+2
 16788  0120E4  CFDE F0AD          	movff	postinc2,??_TCP_Snd+3
 16789  0120E8  51D1               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 16790  0120EA  25AA               	addwf	??_TCP_Snd& (0+255),w,b
 16791  0120EC  6FAE               	movwf	(??_TCP_Snd+4)& (0+255),b
 16792  0120EE  51D2               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 16793  0120F0  21AB               	addwfc	(??_TCP_Snd+1)& (0+255),w,b
 16794  0120F2  6FAF               	movwf	(??_TCP_Snd+5)& (0+255),b
 16795  0120F4  0E00               	movlw	0
 16796  0120F6  21AC               	addwfc	(??_TCP_Snd+2)& (0+255),w,b
 16797  0120F8  6FB0               	movwf	(??_TCP_Snd+6)& (0+255),b
 16798  0120FA  0E00               	movlw	0
 16799  0120FC  21AD               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 16800  0120FE  6FB1               	movwf	(??_TCP_Snd+7)& (0+255),b
 16801  012100  EE20 F010          	lfsr	2,16
 16802  012104  51A8               	movf	TCP_Snd@tcbPtr& (0+255),w,b
 16803  012106  26D9               	addwf	fsr2l,f,c
 16804  012108  51A9               	movf	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 16805  01210A  22DA               	addwfc	fsr2h,f,c
 16806  01210C  C0AE  FFDE         	movff	??_TCP_Snd+4,postinc2
 16807  012110  C0AF  FFDE         	movff	??_TCP_Snd+5,postinc2
 16808  012114  C0B0  FFDE         	movff	??_TCP_Snd+6,postinc2
 16809  012118  C0B1  FFDE         	movff	??_TCP_Snd+7,postinc2
 16810  01211C                     l1612:
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;tcpv4.c: 297: }
 16814                           ;tcpv4.c: 299: return ret;
 16815                           
 16816                           ; BSR set to: 0
 16817  01211C  51D0               	movf	TCP_Snd@ret& (0+255),w,b
 16818  01211E  0012               	return	
 16819  012120                     __end_of_TCP_Snd:
 16820                           	opt stack 0
 16821                           tosu	equ	0xFFF
 16822                           tosh	equ	0xFFE
 16823                           tosl	equ	0xFFD
 16824                           pclath	equ	0xFFA
 16825                           tblptru	equ	0xFF8
 16826                           tblptrh	equ	0xFF7
 16827                           tblptrl	equ	0xFF6
 16828                           tablat	equ	0xFF5
 16829                           prodh	equ	0xFF4
 16830                           prodl	equ	0xFF3
 16831                           intcon	equ	0xFF2
 16832                           indf0	equ	0xFEF
 16833                           postinc0	equ	0xFEE
 16834                           fsr0h	equ	0xFEA
 16835                           fsr0l	equ	0xFE9
 16836                           wreg	equ	0xFE8
 16837                           indf1	equ	0xFE7
 16838                           postinc1	equ	0xFE6
 16839                           postdec1	equ	0xFE5
 16840                           plusw1	equ	0xFE3
 16841                           fsr1h	equ	0xFE2
 16842                           fsr1l	equ	0xFE1
 16843                           indf2	equ	0xFDF
 16844                           postinc2	equ	0xFDE
 16845                           postdec2	equ	0xFDD
 16846                           plusw2	equ	0xFDB
 16847                           fsr2h	equ	0xFDA
 16848                           fsr2l	equ	0xFD9
 16849                           status	equ	0xFD8
 16850                           
 16851 ;; *************** function _TCB_Reset *****************
 16852 ;; Defined at:
 16853 ;;		line 128 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 16854 ;; Parameters:    Size  Location     Type
 16855 ;;  tcbPtr          2   18[COMRAM] PTR struct .
 16856 ;;		 -> NULL(0), 
 16857 ;; Auto vars:     Size  Location     Type
 16858 ;;		None
 16859 ;; Return value:  Size  Location     Type
 16860 ;;                  1    wreg      void 
 16861 ;; Registers used:
 16862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16863 ;; Tracked objects:
 16864 ;;		On entry : 0/0
 16865 ;;		On exit  : 0/0
 16866 ;;		Unchanged: 0/0
 16867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16872 ;;Total ram usage:        2 bytes
 16873 ;; Hardware stack levels used:    1
 16874 ;; Hardware stack levels required when called:    4
 16875 ;; This function calls:
 16876 ;;		Nothing
 16877 ;; This function is called by:
 16878 ;;		_TCP_FiniteStateMachine
 16879 ;;		_TCP_SocketInit
 16880 ;; This function uses a non-reentrant model
 16881 ;;
 16882                           
 16883                           	psect	text59
 16884  015120                     __ptext59:
 16885                           	opt stack 0
 16886  015120                     _TCB_Reset:
 16887                           	opt stack 23
 16888                           
 16889                           ;tcpv4.c: 130: tcbPtr->destIP = 0;
 16890                           
 16891                           ; BSR set to: 0
 16892                           ;incstack = 0
 16893  015120  EE20 F002          	lfsr	2,2
 16894  015124  5013               	movf	TCB_Reset@tcbPtr,w,c
 16895  015126  26D9               	addwf	fsr2l,f,c
 16896  015128  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16897  01512A  22DA               	addwfc	fsr2h,f,c
 16898  01512C  6ADE               	clrf	postinc2,c
 16899  01512E  6ADE               	clrf	postinc2,c
 16900  015130  6ADE               	clrf	postinc2,c
 16901  015132  6ADD               	clrf	postdec2,c
 16902                           
 16903                           ;tcpv4.c: 131: tcbPtr->destPort = 0;
 16904  015134  EE20 F006          	lfsr	2,6
 16905  015138  5013               	movf	TCB_Reset@tcbPtr,w,c
 16906  01513A  26D9               	addwf	fsr2l,f,c
 16907  01513C  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16908  01513E  22DA               	addwfc	fsr2h,f,c
 16909  015140  0E00               	movlw	0
 16910  015142  6EDE               	movwf	postinc2,c
 16911  015144  0E00               	movlw	0
 16912  015146  6EDD               	movwf	postdec2,c
 16913                           
 16914                           ;tcpv4.c: 132: tcbPtr->localSeqno = 0;
 16915  015148  EE20 F010          	lfsr	2,16
 16916  01514C  5013               	movf	TCB_Reset@tcbPtr,w,c
 16917  01514E  26D9               	addwf	fsr2l,f,c
 16918  015150  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16919  015152  22DA               	addwfc	fsr2h,f,c
 16920  015154  6ADE               	clrf	postinc2,c
 16921  015156  6ADE               	clrf	postinc2,c
 16922  015158  6ADE               	clrf	postinc2,c
 16923  01515A  6ADD               	clrf	postdec2,c
 16924                           
 16925                           ;tcpv4.c: 133: tcbPtr->localLastAck = 0;
 16926  01515C  EE20 F014          	lfsr	2,20
 16927  015160  5013               	movf	TCB_Reset@tcbPtr,w,c
 16928  015162  26D9               	addwf	fsr2l,f,c
 16929  015164  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16930  015166  22DA               	addwfc	fsr2h,f,c
 16931  015168  6ADE               	clrf	postinc2,c
 16932  01516A  6ADE               	clrf	postinc2,c
 16933  01516C  6ADE               	clrf	postinc2,c
 16934  01516E  6ADD               	clrf	postdec2,c
 16935                           
 16936                           ;tcpv4.c: 134: tcbPtr->remoteSeqno = 0;
 16937  015170  EE20 F008          	lfsr	2,8
 16938  015174  5013               	movf	TCB_Reset@tcbPtr,w,c
 16939  015176  26D9               	addwf	fsr2l,f,c
 16940  015178  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16941  01517A  22DA               	addwfc	fsr2h,f,c
 16942  01517C  6ADE               	clrf	postinc2,c
 16943  01517E  6ADE               	clrf	postinc2,c
 16944  015180  6ADE               	clrf	postinc2,c
 16945  015182  6ADD               	clrf	postdec2,c
 16946                           
 16947                           ;tcpv4.c: 135: tcbPtr->remoteAck = 0;
 16948  015184  EE20 F00C          	lfsr	2,12
 16949  015188  5013               	movf	TCB_Reset@tcbPtr,w,c
 16950  01518A  26D9               	addwf	fsr2l,f,c
 16951  01518C  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16952  01518E  22DA               	addwfc	fsr2h,f,c
 16953  015190  6ADE               	clrf	postinc2,c
 16954  015192  6ADE               	clrf	postinc2,c
 16955  015194  6ADE               	clrf	postinc2,c
 16956  015196  6ADD               	clrf	postdec2,c
 16957                           
 16958                           ;tcpv4.c: 136: tcbPtr->remoteWnd = 0;
 16959  015198  EE20 F018          	lfsr	2,24
 16960  01519C  5013               	movf	TCB_Reset@tcbPtr,w,c
 16961  01519E  26D9               	addwf	fsr2l,f,c
 16962  0151A0  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16963  0151A2  22DA               	addwfc	fsr2h,f,c
 16964  0151A4  0E00               	movlw	0
 16965  0151A6  6EDE               	movwf	postinc2,c
 16966  0151A8  0E00               	movlw	0
 16967  0151AA  6EDD               	movwf	postdec2,c
 16968                           
 16969                           ;tcpv4.c: 138: tcbPtr->timeout = 0;
 16970  0151AC  EE20 F033          	lfsr	2,51
 16971  0151B0  5013               	movf	TCB_Reset@tcbPtr,w,c
 16972  0151B2  26D9               	addwf	fsr2l,f,c
 16973  0151B4  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16974  0151B6  22DA               	addwfc	fsr2h,f,c
 16975  0151B8  0E00               	movlw	0
 16976  0151BA  6EDE               	movwf	postinc2,c
 16977  0151BC  0E00               	movlw	0
 16978  0151BE  6EDD               	movwf	postdec2,c
 16979                           
 16980                           ;tcpv4.c: 139: tcbPtr->timeoutReloadValue = 0;
 16981  0151C0  EE20 F035          	lfsr	2,53
 16982  0151C4  5013               	movf	TCB_Reset@tcbPtr,w,c
 16983  0151C6  26D9               	addwf	fsr2l,f,c
 16984  0151C8  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16985  0151CA  22DA               	addwfc	fsr2h,f,c
 16986  0151CC  0E00               	movlw	0
 16987  0151CE  6EDE               	movwf	postinc2,c
 16988  0151D0  0E00               	movlw	0
 16989  0151D2  6EDD               	movwf	postdec2,c
 16990                           
 16991                           ;tcpv4.c: 140: tcbPtr->timeoutsCount = 0;
 16992  0151D4  EE20 F037          	lfsr	2,55
 16993  0151D8  5013               	movf	TCB_Reset@tcbPtr,w,c
 16994  0151DA  26D9               	addwf	fsr2l,f,c
 16995  0151DC  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 16996  0151DE  22DA               	addwfc	fsr2h,f,c
 16997  0151E0  0E00               	movlw	0
 16998  0151E2  6EDF               	movwf	indf2,c
 16999                           
 17000                           ;tcpv4.c: 141: tcbPtr->flags = 0;
 17001  0151E4  EE20 F038          	lfsr	2,56
 17002  0151E8  5013               	movf	TCB_Reset@tcbPtr,w,c
 17003  0151EA  26D9               	addwf	fsr2l,f,c
 17004  0151EC  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 17005  0151EE  22DA               	addwfc	fsr2h,f,c
 17006  0151F0  0E00               	movlw	0
 17007  0151F2  6EDF               	movwf	indf2,c
 17008                           
 17009                           ;tcpv4.c: 143: tcbPtr->localPort = 0;
 17010  0151F4  C013  FFD9         	movff	TCB_Reset@tcbPtr,fsr2l
 17011  0151F8  C014  FFDA         	movff	TCB_Reset@tcbPtr+1,fsr2h
 17012  0151FC  0E00               	movlw	0
 17013  0151FE  6EDE               	movwf	postinc2,c
 17014  015200  0E00               	movlw	0
 17015  015202  6EDD               	movwf	postdec2,c
 17016                           
 17017                           ;tcpv4.c: 144: tcbPtr->bytesSent = 0;
 17018  015204  EE20 F02A          	lfsr	2,42
 17019  015208  5013               	movf	TCB_Reset@tcbPtr,w,c
 17020  01520A  26D9               	addwf	fsr2l,f,c
 17021  01520C  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 17022  01520E  22DA               	addwfc	fsr2h,f,c
 17023  015210  0E00               	movlw	0
 17024  015212  6EDE               	movwf	postinc2,c
 17025  015214  0E00               	movlw	0
 17026  015216  6EDD               	movwf	postdec2,c
 17027                           
 17028                           ;tcpv4.c: 145: tcbPtr->payloadSave = 0;
 17029  015218  EE20 F02C          	lfsr	2,44
 17030  01521C  5013               	movf	TCB_Reset@tcbPtr,w,c
 17031  01521E  26D9               	addwf	fsr2l,f,c
 17032  015220  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 17033  015222  22DA               	addwfc	fsr2h,f,c
 17034  015224  0E00               	movlw	0
 17035  015226  6EDF               	movwf	indf2,c
 17036                           
 17037                           ;tcpv4.c: 146: tcbPtr->socketState = SOCKET_CLOSING;
 17038  015228  EE20 F039          	lfsr	2,57
 17039  01522C  5013               	movf	TCB_Reset@tcbPtr,w,c
 17040  01522E  26D9               	addwf	fsr2l,f,c
 17041  015230  5014               	movf	TCB_Reset@tcbPtr+1,w,c
 17042  015232  22DA               	addwfc	fsr2h,f,c
 17043  015234  0E04               	movlw	4
 17044  015236  6EDF               	movwf	indf2,c
 17045  015238  0012               	return		;funcret
 17046  01523A                     __end_of_TCB_Reset:
 17047                           	opt stack 0
 17048                           tosu	equ	0xFFF
 17049                           tosh	equ	0xFFE
 17050                           tosl	equ	0xFFD
 17051                           pclath	equ	0xFFA
 17052                           tblptru	equ	0xFF8
 17053                           tblptrh	equ	0xFF7
 17054                           tblptrl	equ	0xFF6
 17055                           tablat	equ	0xFF5
 17056                           prodh	equ	0xFF4
 17057                           prodl	equ	0xFF3
 17058                           intcon	equ	0xFF2
 17059                           indf0	equ	0xFEF
 17060                           postinc0	equ	0xFEE
 17061                           fsr0h	equ	0xFEA
 17062                           fsr0l	equ	0xFE9
 17063                           wreg	equ	0xFE8
 17064                           indf1	equ	0xFE7
 17065                           postinc1	equ	0xFE6
 17066                           postdec1	equ	0xFE5
 17067                           plusw1	equ	0xFE3
 17068                           fsr1h	equ	0xFE2
 17069                           fsr1l	equ	0xFE1
 17070                           indf2	equ	0xFDF
 17071                           postinc2	equ	0xFDE
 17072                           postdec2	equ	0xFDD
 17073                           plusw2	equ	0xFDB
 17074                           fsr2h	equ	0xFDA
 17075                           fsr2l	equ	0xFD9
 17076                           status	equ	0xFD8
 17077                           
 17078 ;; *************** function _IPV4_SaveStartPosition *****************
 17079 ;; Defined at:
 17080 ;;		line 282 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 17081 ;; Parameters:    Size  Location     Type
 17082 ;;		None
 17083 ;; Auto vars:     Size  Location     Type
 17084 ;;		None
 17085 ;; Return value:  Size  Location     Type
 17086 ;;                  1    wreg      void 
 17087 ;; Registers used:
 17088 ;;		cstack
 17089 ;; Tracked objects:
 17090 ;;		On entry : 0/0
 17091 ;;		On exit  : 0/0
 17092 ;;		Unchanged: 0/0
 17093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17098 ;;Total ram usage:        0 bytes
 17099 ;; Hardware stack levels used:    1
 17100 ;; Hardware stack levels required when called:    5
 17101 ;; This function calls:
 17102 ;;		_ETH_GetReadPtr
 17103 ;; This function is called by:
 17104 ;;		_IPV4_Packet
 17105 ;; This function uses a non-reentrant model
 17106 ;;
 17107                           
 17108                           	psect	text60
 17109  016AAC                     __ptext60:
 17110                           	opt stack 0
 17111  016AAC                     _IPV4_SaveStartPosition:
 17112                           	opt stack 22
 17113                           
 17114                           ;ipv4.c: 284: ipv4StartPosition = ETH_GetReadPtr();
 17115                           
 17116                           ;incstack = 0
 17117  016AAC  EC89  F0B5         	call	_ETH_GetReadPtr	;wreg free
 17118  016AB0  C013  F24E         	movff	?_ETH_GetReadPtr,_ipv4StartPosition
 17119  016AB4  C014  F24F         	movff	?_ETH_GetReadPtr+1,_ipv4StartPosition+1
 17120  016AB8  0012               	return		;funcret
 17121  016ABA                     __end_of_IPV4_SaveStartPosition:
 17122                           	opt stack 0
 17123                           tosu	equ	0xFFF
 17124                           tosh	equ	0xFFE
 17125                           tosl	equ	0xFFD
 17126                           pclath	equ	0xFFA
 17127                           tblptru	equ	0xFF8
 17128                           tblptrh	equ	0xFF7
 17129                           tblptrl	equ	0xFF6
 17130                           tablat	equ	0xFF5
 17131                           prodh	equ	0xFF4
 17132                           prodl	equ	0xFF3
 17133                           intcon	equ	0xFF2
 17134                           indf0	equ	0xFEF
 17135                           postinc0	equ	0xFEE
 17136                           fsr0h	equ	0xFEA
 17137                           fsr0l	equ	0xFE9
 17138                           wreg	equ	0xFE8
 17139                           indf1	equ	0xFE7
 17140                           postinc1	equ	0xFE6
 17141                           postdec1	equ	0xFE5
 17142                           plusw1	equ	0xFE3
 17143                           fsr1h	equ	0xFE2
 17144                           fsr1l	equ	0xFE1
 17145                           indf2	equ	0xFDF
 17146                           postinc2	equ	0xFDE
 17147                           postdec2	equ	0xFDD
 17148                           plusw2	equ	0xFDB
 17149                           fsr2h	equ	0xFDA
 17150                           fsr2l	equ	0xFD9
 17151                           status	equ	0xFD8
 17152                           
 17153 ;; *************** function _ETH_GetReadPtr *****************
 17154 ;; Defined at:
 17155 ;;		line 1080 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 17156 ;; Parameters:    Size  Location     Type
 17157 ;;		None
 17158 ;; Auto vars:     Size  Location     Type
 17159 ;;		None
 17160 ;; Return value:  Size  Location     Type
 17161 ;;                  2   18[COMRAM] unsigned int 
 17162 ;; Registers used:
 17163 ;;		None
 17164 ;; Tracked objects:
 17165 ;;		On entry : 0/0
 17166 ;;		On exit  : 0/0
 17167 ;;		Unchanged: 0/0
 17168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17173 ;;Total ram usage:        2 bytes
 17174 ;; Hardware stack levels used:    1
 17175 ;; Hardware stack levels required when called:    4
 17176 ;; This function calls:
 17177 ;;		Nothing
 17178 ;; This function is called by:
 17179 ;;		_IPV4_SaveStartPosition
 17180 ;; This function uses a non-reentrant model
 17181 ;;
 17182                           
 17183                           	psect	text61
 17184  016B12                     __ptext61:
 17185                           	opt stack 0
 17186  016B12                     _ETH_GetReadPtr:
 17187                           	opt stack 22
 17188                           
 17189                           ;ETHxxJ6x_driver.c: 1082: return(ERDPT);
 17190                           
 17191                           ;incstack = 0
 17192  016B12  CF7A F013          	movff	3962,?_ETH_GetReadPtr	;volatile
 17193  016B16  CF7B F014          	movff	3963,?_ETH_GetReadPtr+1	;volatile
 17194  016B1A  0012               	return		;funcret
 17195  016B1C                     __end_of_ETH_GetReadPtr:
 17196                           	opt stack 0
 17197                           tosu	equ	0xFFF
 17198                           tosh	equ	0xFFE
 17199                           tosl	equ	0xFFD
 17200                           pclath	equ	0xFFA
 17201                           tblptru	equ	0xFF8
 17202                           tblptrh	equ	0xFF7
 17203                           tblptrl	equ	0xFF6
 17204                           tablat	equ	0xFF5
 17205                           prodh	equ	0xFF4
 17206                           prodl	equ	0xFF3
 17207                           intcon	equ	0xFF2
 17208                           indf0	equ	0xFEF
 17209                           postinc0	equ	0xFEE
 17210                           fsr0h	equ	0xFEA
 17211                           fsr0l	equ	0xFE9
 17212                           wreg	equ	0xFE8
 17213                           indf1	equ	0xFE7
 17214                           postinc1	equ	0xFE6
 17215                           postdec1	equ	0xFE5
 17216                           plusw1	equ	0xFE3
 17217                           fsr1h	equ	0xFE2
 17218                           fsr1l	equ	0xFE1
 17219                           indf2	equ	0xFDF
 17220                           postinc2	equ	0xFDE
 17221                           postdec2	equ	0xFDD
 17222                           plusw2	equ	0xFDB
 17223                           fsr2h	equ	0xFDA
 17224                           fsr2l	equ	0xFD9
 17225                           status	equ	0xFD8
 17226                           
 17227 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
 17228 ;; Defined at:
 17229 ;;		line 70 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 17230 ;; Parameters:    Size  Location     Type
 17231 ;;  payloadLen      2   18[COMRAM] unsigned int 
 17232 ;; Auto vars:     Size  Location     Type
 17233 ;;  tmp            12   35[COMRAM] struct .
 17234 ;;  cksm            4   31[COMRAM] unsigned long 
 17235 ;;  v               2   28[COMRAM] PTR unsigned int 
 17236 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
 17237 ;;  len             1   30[COMRAM] unsigned char 
 17238 ;; Return value:  Size  Location     Type
 17239 ;;                  2   18[COMRAM] unsigned int 
 17240 ;; Registers used:
 17241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17242 ;; Tracked objects:
 17243 ;;		On entry : 0/0
 17244 ;;		On exit  : 0/0
 17245 ;;		Unchanged: 0/0
 17246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17248 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17249 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17250 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17251 ;;Total ram usage:       29 bytes
 17252 ;; Hardware stack levels used:    1
 17253 ;; Hardware stack levels required when called:    4
 17254 ;; This function calls:
 17255 ;;		Nothing
 17256 ;; This function is called by:
 17257 ;;		_IPV4_Packet
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           
 17261                           	psect	text62
 17262  0155FA                     __ptext62:
 17263                           	opt stack 0
 17264  0155FA                     _IPV4_PseudoHeaderChecksum:
 17265                           	opt stack 23
 17266                           
 17267                           ;ipv4.c: 72: ipv4_pseudo_header_t tmp;
 17268                           ;ipv4.c: 73: uint8_t len;
 17269                           ;ipv4.c: 74: uint32_t cksm = 0;
 17270                           
 17271                           ;incstack = 0
 17272  0155FA  0E00               	movlw	0
 17273  0155FC  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
 17274  0155FE  0E00               	movlw	0
 17275  015600  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
 17276  015602  0E00               	movlw	0
 17277  015604  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
 17278  015606  0E00               	movlw	0
 17279  015608  6E23               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
 17280                           
 17281                           ;ipv4.c: 75: uint16_t *v;
 17282                           ;ipv4.c: 77: tmp.srcIpAddress = ipv4Header.srcIpAddress;
 17283  01560A  C274  F024         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
 17284  01560E  C275  F025         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
 17285  015612  C276  F026         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
 17286  015616  C277  F027         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
 17287                           
 17288                           ;ipv4.c: 78: tmp.dstIpAddress = ipv4Header.dstIpAddress;
 17289  01561A  C278  F028         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
 17290  01561E  C279  F029         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
 17291  015622  C27A  F02A         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
 17292  015626  C27B  F02B         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
 17293                           
 17294                           ;ipv4.c: 79: tmp.protocol = ipv4Header.protocol;
 17295  01562A  C271  F02C         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
 17296                           
 17297                           ;ipv4.c: 80: tmp.z = 0;
 17298  01562E  0E00               	movlw	0
 17299  015630  6E2D               	movwf	IPV4_PseudoHeaderChecksum@tmp+9,c
 17300                           
 17301                           ;ipv4.c: 81: tmp.length = payloadLen;
 17302  015632  C013  F02E         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
 17303  015636  C014  F02F         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
 17304                           
 17305                           ;ipv4.c: 83: len = sizeof(tmp);
 17306  01563A  0E0C               	movlw	12
 17307  01563C  6E1F               	movwf	IPV4_PseudoHeaderChecksum@len,c
 17308                           
 17309                           ;ipv4.c: 84: len = len >> 1;
 17310  01563E  90D8               	bcf	status,0,c
 17311  015640  301F               	rrcf	IPV4_PseudoHeaderChecksum@len,w,c
 17312  015642  6E1F               	movwf	IPV4_PseudoHeaderChecksum@len,c
 17313                           
 17314                           ;ipv4.c: 86: v = (uint16_t *) &tmp;
 17315  015644  0E24               	movlw	low IPV4_PseudoHeaderChecksum@tmp
 17316  015646  6E1D               	movwf	IPV4_PseudoHeaderChecksum@v,c
 17317  015648  0E00               	movlw	high IPV4_PseudoHeaderChecksum@tmp
 17318  01564A  6E1E               	movwf	IPV4_PseudoHeaderChecksum@v+1,c
 17319                           
 17320                           ;ipv4.c: 88: while(len)
 17321  01564C  D015               	goto	l847
 17322  01564E                     
 17323                           ;ipv4.c: 89: {
 17324                           ;ipv4.c: 90: cksm += *v;
 17325  01564E  C01D  FFD9         	movff	IPV4_PseudoHeaderChecksum@v,fsr2l
 17326  015652  C01E  FFDA         	movff	IPV4_PseudoHeaderChecksum@v+1,fsr2h
 17327  015656  CFDE F015          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
 17328  01565A  CFDD F016          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
 17329  01565E  5015               	movf	??_IPV4_PseudoHeaderChecksum,w,c
 17330  015660  2620               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
 17331  015662  5016               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
 17332  015664  2221               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
 17333  015666  0E00               	movlw	0
 17334  015668  2222               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
 17335  01566A  0E00               	movlw	0
 17336  01566C  2223               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
 17337                           
 17338                           ;ipv4.c: 91: len--;
 17339  01566E  061F               	decf	IPV4_PseudoHeaderChecksum@len,f,c
 17340                           
 17341                           ;ipv4.c: 92: v++;
 17342  015670  0E02               	movlw	2
 17343  015672  261D               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
 17344  015674  0E00               	movlw	0
 17345  015676  221E               	addwfc	IPV4_PseudoHeaderChecksum@v+1,f,c
 17346  015678                     l847:
 17347  015678  501F               	movf	IPV4_PseudoHeaderChecksum@len,w,c
 17348  01567A  A4D8               	btfss	status,2,c
 17349  01567C  D7E8               	goto	l848
 17350                           
 17351                           ;ipv4.c: 93: }
 17352                           ;ipv4.c: 96: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 17353  01567E  C020  F015         	movff	IPV4_PseudoHeaderChecksum@cksm,??_IPV4_PseudoHeaderChecksum
 17354  015682  C021  F016         	movff	IPV4_PseudoHeaderChecksum@cksm+1,??_IPV4_PseudoHeaderChecksum+1
 17355  015686  C022  F017         	movff	IPV4_PseudoHeaderChecksum@cksm+2,??_IPV4_PseudoHeaderChecksum+2
 17356  01568A  C023  F018         	movff	IPV4_PseudoHeaderChecksum@cksm+3,??_IPV4_PseudoHeaderChecksum+3
 17357  01568E  0E11               	movlw	17
 17358  015690  D005               	goto	u7110
 17359  015692                     u7115:
 17360  015692  90D8               	bcf	status,0,c
 17361  015694  3218               	rrcf	??_IPV4_PseudoHeaderChecksum+3,f,c
 17362  015696  3217               	rrcf	??_IPV4_PseudoHeaderChecksum+2,f,c
 17363  015698  3216               	rrcf	??_IPV4_PseudoHeaderChecksum+1,f,c
 17364  01569A  3215               	rrcf	??_IPV4_PseudoHeaderChecksum,f,c
 17365  01569C                     u7110:
 17366  01569C  2EE8               	decfsz	wreg,f,c
 17367  01569E  D7F9               	goto	u7115
 17368  0156A0  0EFF               	movlw	255
 17369  0156A2  1420               	andwf	IPV4_PseudoHeaderChecksum@cksm,w,c
 17370  0156A4  6E19               	movwf	(??_IPV4_PseudoHeaderChecksum+4)& (0+255),c
 17371  0156A6  0EFF               	movlw	255
 17372  0156A8  1421               	andwf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
 17373  0156AA  6E1A               	movwf	(??_IPV4_PseudoHeaderChecksum+5)& (0+255),c
 17374  0156AC  0E00               	movlw	0
 17375  0156AE  1422               	andwf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
 17376  0156B0  6E1B               	movwf	(??_IPV4_PseudoHeaderChecksum+6)& (0+255),c
 17377  0156B2  0E00               	movlw	0
 17378  0156B4  1423               	andwf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
 17379  0156B6  6E1C               	movwf	(??_IPV4_PseudoHeaderChecksum+7)& (0+255),c
 17380  0156B8  5015               	movf	??_IPV4_PseudoHeaderChecksum,w,c
 17381  0156BA  2419               	addwf	??_IPV4_PseudoHeaderChecksum+4,w,c
 17382  0156BC  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
 17383  0156BE  5016               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
 17384  0156C0  201A               	addwfc	??_IPV4_PseudoHeaderChecksum+5,w,c
 17385  0156C2  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
 17386  0156C4  5017               	movf	??_IPV4_PseudoHeaderChecksum+2,w,c
 17387  0156C6  201B               	addwfc	??_IPV4_PseudoHeaderChecksum+6,w,c
 17388  0156C8  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
 17389  0156CA  5018               	movf	??_IPV4_PseudoHeaderChecksum+3,w,c
 17390  0156CC  201C               	addwfc	??_IPV4_PseudoHeaderChecksum+7,w,c
 17391  0156CE  6E23               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
 17392                           
 17393                           ;ipv4.c: 99: return cksm;
 17394  0156D0  C020  F013         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
 17395  0156D4  C021  F014         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
 17396  0156D8  0012               	return	
 17397  0156DA                     __end_of_IPV4_PseudoHeaderChecksum:
 17398                           	opt stack 0
 17399                           tosu	equ	0xFFF
 17400                           tosh	equ	0xFFE
 17401                           tosl	equ	0xFFD
 17402                           pclath	equ	0xFFA
 17403                           tblptru	equ	0xFF8
 17404                           tblptrh	equ	0xFF7
 17405                           tblptrl	equ	0xFF6
 17406                           tablat	equ	0xFF5
 17407                           prodh	equ	0xFF4
 17408                           prodl	equ	0xFF3
 17409                           intcon	equ	0xFF2
 17410                           indf0	equ	0xFEF
 17411                           postinc0	equ	0xFEE
 17412                           fsr0h	equ	0xFEA
 17413                           fsr0l	equ	0xFE9
 17414                           wreg	equ	0xFE8
 17415                           indf1	equ	0xFE7
 17416                           postinc1	equ	0xFE6
 17417                           postdec1	equ	0xFE5
 17418                           plusw1	equ	0xFE3
 17419                           fsr1h	equ	0xFE2
 17420                           fsr1l	equ	0xFE1
 17421                           indf2	equ	0xFDF
 17422                           postinc2	equ	0xFDE
 17423                           postdec2	equ	0xFDD
 17424                           plusw2	equ	0xFDB
 17425                           fsr2h	equ	0xFDA
 17426                           fsr2l	equ	0xFD9
 17427                           status	equ	0xFD8
 17428                           
 17429 ;; *************** function _ICMP_Receive *****************
 17430 ;; Defined at:
 17431 ;;		line 58 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;  ipv4Hdr         2   89[BANK0 ] PTR struct .
 17434 ;;		 -> ipv4Header(20), 
 17435 ;; Auto vars:     Size  Location     Type
 17436 ;;  icmpHdr         4   96[BANK0 ] struct .
 17437 ;;  ret             1   95[BANK0 ] enum E392
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      enum E392
 17440 ;; Registers used:
 17441 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17448 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17449 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17450 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17451 ;;Total ram usage:       11 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; Hardware stack levels required when called:   10
 17454 ;; This function calls:
 17455 ;;		_ETH_Dump
 17456 ;;		_ETH_Read16
 17457 ;;		_ETH_ReadBlock
 17458 ;;		_ICMP_EchoReply
 17459 ;; This function is called by:
 17460 ;;		_IPV4_Packet
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464                           	psect	text63
 17465  015432                     __ptext63:
 17466                           	opt stack 0
 17467  015432                     _ICMP_Receive:
 17468                           	opt stack 17
 17469                           
 17470                           ;icmp.c: 60: icmpHeader_t icmpHdr;
 17471                           ;icmp.c: 61: error_msg ret = ERROR;
 17472                           
 17473                           ;incstack = 0
 17474  015432  0E00               	movlw	0
 17475  015434  0100               	movlb	0	; () banked
 17476  015436  6FBF               	movwf	ICMP_Receive@ret& (0+255),b
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;icmp.c: 62: ETH_ReadBlock(&icmpHdr, sizeof(icmpHeader_t));
 17480  015438  0EC0               	movlw	low ICMP_Receive@icmpHdr
 17481  01543A  6E13               	movwf	ETH_ReadBlock@buffer,c
 17482  01543C  0E00               	movlw	high ICMP_Receive@icmpHdr
 17483  01543E  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 17484  015440  0E00               	movlw	0
 17485  015442  6E16               	movwf	ETH_ReadBlock@length+1,c
 17486  015444  0E04               	movlw	4
 17487  015446  6E15               	movwf	ETH_ReadBlock@length,c
 17488  015448  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
 17489                           
 17490                           ;icmp.c: 64: if(ipv4Hdr->dstIpAddress == 0xFFFFFFFF)
 17491  01544C  0100               	movlb	0	; () banked
 17492  01544E  EE20 F010          	lfsr	2,16
 17493  015452  51B9               	movf	ICMP_Receive@ipv4Hdr& (0+255),w,b
 17494  015454  26D9               	addwf	fsr2l,f,c
 17495  015456  51BA               	movf	(ICMP_Receive@ipv4Hdr+1)& (0+255),w,b
 17496  015458  22DA               	addwfc	fsr2h,f,c
 17497  01545A  28DE               	incf	postinc2,w,c
 17498  01545C  E132               	bnz	l11430
 17499  01545E  28DE               	incf	postinc2,w,c
 17500  015460  E130               	bnz	l11430
 17501  015462  28DE               	incf	postinc2,w,c
 17502  015464  E12E               	bnz	l11430
 17503  015466  28DE               	incf	postinc2,w,c
 17504  015468  B4D8               	btfsc	status,2,c
 17505  01546A  0012               	return	
 17506  01546C  D02A               	goto	l1098
 17507  01546E                     
 17508                           ; BSR set to: 0
 17509                           ;icmp.c: 69: case UNASSIGNED_ECHO_TYPE_CODE_REQUEST_1:
 17510                           ;icmp.c: 70: case UNASSIGNED_ECHO_TYPE_CODE_REQUEST_2:
 17511                           ;icmp.c: 71: {
 17512                           ;icmp.c: 72: ret = ICMP_EchoReply(ipv4Hdr);
 17513                           
 17514                           ; BSR set to: 0
 17515                           
 17516                           ; BSR set to: 0
 17517                           
 17518                           ; BSR set to: 0
 17519  01546E  C0B9  F0A8         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
 17520  015472  C0BA  F0A9         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
 17521  015476  EC38  F0A5         	call	_ICMP_EchoReply	;wreg free
 17522  01547A  0100               	movlb	0	; () banked
 17523  01547C  6FBF               	movwf	ICMP_Receive@ret& (0+255),b
 17524                           
 17525                           ;icmp.c: 73: }
 17526                           ;icmp.c: 74: break;
 17527  01547E  0012               	return	
 17528  015480                     
 17529                           ; BSR set to: 0
 17530                           ;icmp.c: 76: ETH_Dump(4);
 17531                           
 17532                           ; BSR set to: 0
 17533  015480  0E00               	movlw	0
 17534  015482  6E14               	movwf	ETH_Dump@length+1,c
 17535  015484  0E04               	movlw	4
 17536  015486  6E13               	movwf	ETH_Dump@length,c
 17537  015488  EC71  F0B3         	call	_ETH_Dump	;wreg free
 17538                           
 17539                           ;icmp.c: 77: ETH_ReadBlock(ipv4Hdr,sizeof(ipv4Header_t));
 17540  01548C  C0B9  F013         	movff	ICMP_Receive@ipv4Hdr,ETH_ReadBlock@buffer
 17541  015490  C0BA  F014         	movff	ICMP_Receive@ipv4Hdr+1,ETH_ReadBlock@buffer+1
 17542  015494  0E00               	movlw	0
 17543  015496  6E16               	movwf	ETH_ReadBlock@length+1,c
 17544  015498  0E14               	movlw	20
 17545  01549A  6E15               	movwf	ETH_ReadBlock@length,c
 17546  01549C  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
 17547                           
 17548                           ;icmp.c: 78: if(5 == ipv4Hdr->ihl)
 17549  0154A0  C0B9  FFD9         	movff	ICMP_Receive@ipv4Hdr,fsr2l
 17550  0154A4  C0BA  FFDA         	movff	ICMP_Receive@ipv4Hdr+1,fsr2h
 17551  0154A8  0100               	movlb	0	; () banked
 17552  0154AA  50DF               	movf	223,w,c
 17553  0154AC  0B0F               	andlw	15
 17554  0154AE  0A05               	xorlw	5
 17555  0154B0  A4D8               	btfss	status,2,c
 17556  0154B2  0012               	return	
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;icmp.c: 79: {
 17560                           ;icmp.c: 80: portUnreachable = ETH_Read16();
 17561  0154B4  EC7D  F0B2         	call	_ETH_Read16	;wreg free
 17562  0154B8  C013  F24C         	movff	?_ETH_Read16,_portUnreachable
 17563  0154BC  C014  F24D         	movff	?_ETH_Read16+1,_portUnreachable+1
 17564                           
 17565                           ;icmp.c: 85: }
 17566                           
 17567                           ;icmp.c: 84: break;
 17568                           
 17569                           ;icmp.c: 83: default:
 17570                           
 17571                           ;icmp.c: 81: }
 17572                           ;icmp.c: 82: break;
 17573  0154C0  0012               	return	
 17574  0154C2                     l1098:
 17575  0154C2                     l11430:
 17576  0154C2  0100               	movlb	0	; () banked
 17577  0154C4  51C0               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
 17578  0154C6  6FBC               	movwf	(??_ICMP_Receive+1)& (0+255),b
 17579  0154C8  6BBB               	clrf	??_ICMP_Receive& (0+255),b
 17580  0154CA  C0C0  F0BD         	movff	ICMP_Receive@icmpHdr,??_ICMP_Receive+2
 17581  0154CE  C0C1  F0BE         	movff	ICMP_Receive@icmpHdr+1,??_ICMP_Receive+3
 17582  0154D2  C0BE  F0BD         	movff	??_ICMP_Receive+3,??_ICMP_Receive+2
 17583  0154D6  6BBE               	clrf	(??_ICMP_Receive+3)& (0+255),b
 17584  0154D8  0EFF               	movlw	255
 17585  0154DA  17BD               	andwf	(??_ICMP_Receive+2)& (0+255),f,b
 17586  0154DC  0E00               	movlw	0
 17587  0154DE  17BE               	andwf	(??_ICMP_Receive+3)& (0+255),f,b
 17588  0154E0  51BB               	movf	??_ICMP_Receive& (0+255),w,b
 17589  0154E2  13BD               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
 17590  0154E4  51BC               	movf	(??_ICMP_Receive+1)& (0+255),w,b
 17591  0154E6  13BE               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
 17592                           
 17593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 17594                           ; Switch size 1, requested type "space"
 17595                           ; Number of cases is 2, Range of values is 3 to 8
 17596                           ; switch strategies available:
 17597                           ; Name         Instructions Cycles
 17598                           ; simple_byte            7     4 (average)
 17599                           ;	Chosen strategy is simple_byte
 17600  0154E8  51BE               	movf	(??_ICMP_Receive+3)& (0+255),w,b
 17601  0154EA  0A03               	xorlw	3	; case 3
 17602  0154EC  B4D8               	btfsc	status,2,c
 17603  0154EE  D004               	goto	l12374
 17604  0154F0  0A0B               	xorlw	11	; case 8
 17605  0154F2  A4D8               	btfss	status,2,c
 17606  0154F4  0012               	return	
 17607  0154F6  D005               	goto	l12376
 17608  0154F8                     l12374:
 17609                           
 17610                           ; BSR set to: 0
 17611                           ; Switch size 1, requested type "space"
 17612                           ; Number of cases is 1, Range of values is 3 to 3
 17613                           ; switch strategies available:
 17614                           ; Name         Instructions Cycles
 17615                           ; simple_byte            4     3 (average)
 17616                           ;	Chosen strategy is simple_byte
 17617  0154F8  51BD               	movf	(??_ICMP_Receive+2)& (0+255),w,b
 17618  0154FA  0A03               	xorlw	3	; case 3
 17619  0154FC  A4D8               	btfss	status,2,c
 17620  0154FE  0012               	return	
 17621  015500  D7BF               	goto	l1103
 17622  015502                     l12376:
 17623                           
 17624                           ; BSR set to: 0
 17625                           ; Switch size 1, requested type "space"
 17626                           ; Number of cases is 3, Range of values is 0 to 252
 17627                           ; switch strategies available:
 17628                           ; Name         Instructions Cycles
 17629                           ; simple_byte           10     6 (average)
 17630                           ;	Chosen strategy is simple_byte
 17631  015502  51BD               	movf	(??_ICMP_Receive+2)& (0+255),w,b
 17632  015504  0A00               	xorlw	0	; case 0
 17633  015506  B4D8               	btfsc	status,2,c
 17634  015508  D7B2               	goto	l1099
 17635  01550A  0A2A               	xorlw	42	; case 42
 17636  01550C  B4D8               	btfsc	status,2,c
 17637  01550E  D7AF               	goto	l1099
 17638  015510  0AD6               	xorlw	214	; case 252
 17639  015512  A4D8               	btfss	status,2,c
 17640  015514  0012               	return	
 17641  015516  D7AB               	goto	l1099
 17642  015518                     __end_of_ICMP_Receive:
 17643                           	opt stack 0
 17644                           tosu	equ	0xFFF
 17645                           tosh	equ	0xFFE
 17646                           tosl	equ	0xFFD
 17647                           pclath	equ	0xFFA
 17648                           tblptru	equ	0xFF8
 17649                           tblptrh	equ	0xFF7
 17650                           tblptrl	equ	0xFF6
 17651                           tablat	equ	0xFF5
 17652                           prodh	equ	0xFF4
 17653                           prodl	equ	0xFF3
 17654                           intcon	equ	0xFF2
 17655                           indf0	equ	0xFEF
 17656                           postinc0	equ	0xFEE
 17657                           fsr0h	equ	0xFEA
 17658                           fsr0l	equ	0xFE9
 17659                           wreg	equ	0xFE8
 17660                           indf1	equ	0xFE7
 17661                           postinc1	equ	0xFE6
 17662                           postdec1	equ	0xFE5
 17663                           plusw1	equ	0xFE3
 17664                           fsr1h	equ	0xFE2
 17665                           fsr1l	equ	0xFE1
 17666                           indf2	equ	0xFDF
 17667                           postinc2	equ	0xFDE
 17668                           postdec2	equ	0xFDD
 17669                           plusw2	equ	0xFDB
 17670                           fsr2h	equ	0xFDA
 17671                           fsr2l	equ	0xFD9
 17672                           status	equ	0xFD8
 17673                           
 17674 ;; *************** function _ICMP_EchoReply *****************
 17675 ;; Defined at:
 17676 ;;		line 99 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 17677 ;; Parameters:    Size  Location     Type
 17678 ;;  ipv4Hdr         2   72[BANK0 ] PTR struct .
 17679 ;;		 -> ipv4Header(20), 
 17680 ;; Auto vars:     Size  Location     Type
 17681 ;;  ipv4PayloadL    2   86[BANK0 ] unsigned int 
 17682 ;;  icmp_cksm_st    2   82[BANK0 ] unsigned int 
 17683 ;;  cksm            2   84[BANK0 ] unsigned int 
 17684 ;;  sequence        2   80[BANK0 ] unsigned int 
 17685 ;;  identifier      2   78[BANK0 ] unsigned int 
 17686 ;;  ret             1   88[BANK0 ] enum E392
 17687 ;; Return value:  Size  Location     Type
 17688 ;;                  1    wreg      enum E392
 17689 ;; Registers used:
 17690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17691 ;; Tracked objects:
 17692 ;;		On entry : 0/0
 17693 ;;		On exit  : 0/0
 17694 ;;		Unchanged: 0/0
 17695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17697 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17698 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17699 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17700 ;;Total ram usage:       17 bytes
 17701 ;; Hardware stack levels used:    1
 17702 ;; Hardware stack levels required when called:    9
 17703 ;; This function calls:
 17704 ;;		_ETH_Copy
 17705 ;;		_ETH_Insert
 17706 ;;		_ETH_Read16
 17707 ;;		_ETH_TxComputeChecksum
 17708 ;;		_ETH_Write16
 17709 ;;		_IPV4_Send
 17710 ;;		_IPv4_Start
 17711 ;; This function is called by:
 17712 ;;		_ICMP_Receive
 17713 ;; This function uses a non-reentrant model
 17714 ;;
 17715                           
 17716                           	psect	text64
 17717  014A70                     __ptext64:
 17718                           	opt stack 0
 17719  014A70                     _ICMP_EchoReply:
 17720                           	opt stack 17
 17721                           
 17722                           ;icmp.c: 101: uint16_t cksm =0;
 17723                           
 17724                           ;incstack = 0
 17725  014A70  0E00               	movlw	0
 17726  014A72  0100               	movlb	0	; () banked
 17727  014A74  6FB5               	movwf	(ICMP_EchoReply@cksm+1)& (0+255),b
 17728  014A76  0E00               	movlw	0
 17729  014A78  6FB4               	movwf	ICMP_EchoReply@cksm& (0+255),b
 17730                           
 17731                           ;icmp.c: 102: error_msg ret = ERROR;
 17732  014A7A  0E00               	movlw	0
 17733  014A7C  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 17734                           
 17735                           ; BSR set to: 0
 17736                           ;icmp.c: 103: uint16_t identifier;
 17737                           ;icmp.c: 104: uint16_t sequence;
 17738                           ;icmp.c: 106: identifier = ETH_Read16();
 17739  014A7E  EC7D  F0B2         	call	_ETH_Read16	;wreg free
 17740  014A82  C013  F0AE         	movff	?_ETH_Read16,ICMP_EchoReply@identifier
 17741  014A86  C014  F0AF         	movff	?_ETH_Read16+1,ICMP_EchoReply@identifier+1
 17742                           
 17743                           ;icmp.c: 107: sequence = ETH_Read16();
 17744  014A8A  EC7D  F0B2         	call	_ETH_Read16	;wreg free
 17745  014A8E  C013  F0B0         	movff	?_ETH_Read16,ICMP_EchoReply@sequence
 17746  014A92  C014  F0B1         	movff	?_ETH_Read16+1,ICMP_EchoReply@sequence+1
 17747                           
 17748                           ;icmp.c: 108: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
 17749  014A96  0100               	movlb	0	; () banked
 17750  014A98  EE20 F00C          	lfsr	2,12
 17751  014A9C  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 17752  014A9E  26D9               	addwf	fsr2l,f,c
 17753  014AA0  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 17754  014AA2  22DA               	addwfc	fsr2h,f,c
 17755  014AA4  CFDE F031          	movff	postinc2,IPv4_Start@destAddress
 17756  014AA8  CFDE F032          	movff	postinc2,IPv4_Start@destAddress+1
 17757  014AAC  CFDE F033          	movff	postinc2,IPv4_Start@destAddress+2
 17758  014AB0  CFDE F034          	movff	postinc2,IPv4_Start@destAddress+3
 17759  014AB4  EE20 F009          	lfsr	2,9
 17760  014AB8  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 17761  014ABA  26D9               	addwf	fsr2l,f,c
 17762  014ABC  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 17763  014ABE  22DA               	addwfc	fsr2h,f,c
 17764  014AC0  50DF               	movf	indf2,w,c
 17765  014AC2  6E35               	movwf	IPv4_Start@protocol,c
 17766  014AC4  EC8E  F09E         	call	_IPv4_Start	;wreg free
 17767  014AC8  0100               	movlb	0	; () banked
 17768  014ACA  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 17769                           
 17770                           ; BSR set to: 0
 17771                           ;icmp.c: 109: if(ret == SUCCESS)
 17772  014ACC  05B8               	decf	ICMP_EchoReply@ret& (0+255),w,b
 17773  014ACE  A4D8               	btfss	status,2,c
 17774  014AD0  D088               	goto	l1109
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;icmp.c: 110: {
 17778                           ;icmp.c: 111: uint16_t icmp_cksm_start;
 17779                           ;icmp.c: 112: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
 17780  014AD2  EE20 F002          	lfsr	2,2
 17781  014AD6  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 17782  014AD8  26D9               	addwf	fsr2l,f,c
 17783  014ADA  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 17784  014ADC  22DA               	addwfc	fsr2h,f,c
 17785  014ADE  CFDE F0AA          	movff	postinc2,??_ICMP_EchoReply
 17786  014AE2  CFDD F0AB          	movff	postdec2,??_ICMP_EchoReply+1
 17787  014AE6  0EEC               	movlw	236
 17788  014AE8  25AA               	addwf	??_ICMP_EchoReply& (0+255),w,b
 17789  014AEA  6FB6               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 17790  014AEC  0EFF               	movlw	255
 17791  014AEE  21AB               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
 17792  014AF0  6FB7               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 17793                           
 17794                           ;icmp.c: 114: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
 17795  014AF2  EE20 F002          	lfsr	2,2
 17796  014AF6  51A8               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 17797  014AF8  26D9               	addwf	fsr2l,f,c
 17798  014AFA  51A9               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 17799  014AFC  22DA               	addwfc	fsr2h,f,c
 17800  014AFE  CFDE F0AA          	movff	postinc2,??_ICMP_EchoReply
 17801  014B02  CFDD F0AB          	movff	postdec2,??_ICMP_EchoReply+1
 17802  014B06  C0A8  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
 17803  014B0A  C0A9  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
 17804  014B0E  50DF               	movf	223,w,c
 17805  014B10  0B0F               	andlw	15
 17806  014B12  6FAC               	movwf	(??_ICMP_EchoReply+2)& (0+255),b
 17807  014B14  6BAD               	clrf	(??_ICMP_EchoReply+3)& (0+255),b
 17808  014B16  90D8               	bcf	status,0,c
 17809  014B18  37AC               	rlcf	(??_ICMP_EchoReply+2)& (0+255),f,b
 17810  014B1A  37AD               	rlcf	(??_ICMP_EchoReply+3)& (0+255),f,b
 17811  014B1C  90D8               	bcf	status,0,c
 17812  014B1E  37AC               	rlcf	(??_ICMP_EchoReply+2)& (0+255),f,b
 17813  014B20  37AD               	rlcf	(??_ICMP_EchoReply+3)& (0+255),f,b
 17814  014B22  1FAC               	comf	(??_ICMP_EchoReply+2)& (0+255),f,b
 17815  014B24  1FAD               	comf	(??_ICMP_EchoReply+3)& (0+255),f,b
 17816  014B26  4BAC               	infsnz	(??_ICMP_EchoReply+2)& (0+255),f,b
 17817  014B28  2BAD               	incf	(??_ICMP_EchoReply+3)& (0+255),f,b
 17818  014B2A  51AA               	movf	??_ICMP_EchoReply& (0+255),w,b
 17819  014B2C  25AC               	addwf	(??_ICMP_EchoReply+2)& (0+255),w,b
 17820  014B2E  6FB6               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 17821  014B30  51AB               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
 17822  014B32  21AD               	addwfc	(??_ICMP_EchoReply+3)& (0+255),w,b
 17823  014B34  6FB7               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 17824                           
 17825                           ; BSR set to: 0
 17826                           ;icmp.c: 116: ETH_Write16(ECHO_REPLY);
 17827  014B36  0E00               	movlw	0
 17828  014B38  6E14               	movwf	ETH_Write16@data+1,c
 17829  014B3A  0E00               	movlw	0
 17830  014B3C  6E13               	movwf	ETH_Write16@data,c
 17831  014B3E  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 17832                           
 17833                           ;icmp.c: 117: ETH_Write16(0);
 17834  014B42  0E00               	movlw	0
 17835  014B44  6E14               	movwf	ETH_Write16@data+1,c
 17836  014B46  0E00               	movlw	0
 17837  014B48  6E13               	movwf	ETH_Write16@data,c
 17838  014B4A  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 17839                           
 17840                           ;icmp.c: 119: ETH_Write16(identifier);
 17841  014B4E  C0AE  F013         	movff	ICMP_EchoReply@identifier,ETH_Write16@data
 17842  014B52  C0AF  F014         	movff	ICMP_EchoReply@identifier+1,ETH_Write16@data+1
 17843  014B56  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 17844                           
 17845                           ;icmp.c: 120: ETH_Write16(sequence);
 17846  014B5A  C0B0  F013         	movff	ICMP_EchoReply@sequence,ETH_Write16@data
 17847  014B5E  C0B1  F014         	movff	ICMP_EchoReply@sequence+1,ETH_Write16@data+1
 17848  014B62  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 17849                           
 17850                           ;icmp.c: 123: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t) - 4);
 17851  014B66  0EF8               	movlw	248
 17852  014B68  0100               	movlb	0	; () banked
 17853  014B6A  25B6               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
 17854  014B6C  6E19               	movwf	ETH_Copy@len,c
 17855  014B6E  0EFF               	movlw	255
 17856  014B70  21B7               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
 17857  014B72  6E1A               	movwf	ETH_Copy@len+1,c
 17858  014B74  EC31  F0AC         	call	_ETH_Copy	;wreg free
 17859  014B78  0100               	movlb	0	; () banked
 17860  014B7A  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;icmp.c: 124: if(ret==SUCCESS)
 17864  014B7C  05B8               	decf	ICMP_EchoReply@ret& (0+255),w,b
 17865  014B7E  A4D8               	btfss	status,2,c
 17866  014B80  D030               	goto	l1109
 17867                           
 17868                           ; BSR set to: 0
 17869                           ;icmp.c: 125: {
 17870                           ;icmp.c: 127: cksm = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
 17871  014B82  0E00               	movlw	0
 17872  014B84  6FB5               	movwf	(ICMP_EchoReply@cksm+1)& (0+255),b
 17873  014B86  0E22               	movlw	34
 17874  014B88  6FB4               	movwf	ICMP_EchoReply@cksm& (0+255),b
 17875                           
 17876                           ;icmp.c: 128: icmp_cksm_start = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
 17877  014B8A  0E00               	movlw	0
 17878  014B8C  6FB3               	movwf	(ICMP_EchoReply@icmp_cksm_start+1)& (0+255),b
 17879  014B8E  0E22               	movlw	34
 17880  014B90  6FB2               	movwf	ICMP_EchoReply@icmp_cksm_start& (0+255),b
 17881                           
 17882                           ; BSR set to: 0
 17883                           ;icmp.c: 129: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
 17884  014B92  C0B2  F025         	movff	ICMP_EchoReply@icmp_cksm_start,ETH_TxComputeChecksum@position
 17885  014B96  C0B3  F026         	movff	ICMP_EchoReply@icmp_cksm_start+1,ETH_TxComputeChecksum@position+1
 17886  014B9A  C0B6  F027         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
 17887  014B9E  C0B7  F028         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
 17888  014BA2  0E00               	movlw	0
 17889  014BA4  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
 17890  014BA6  0E00               	movlw	0
 17891  014BA8  6E29               	movwf	ETH_TxComputeChecksum@seed,c
 17892  014BAA  EC6D  F0AB         	call	_ETH_TxComputeChecksum	;wreg free
 17893  014BAE  C025  F0B4         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
 17894  014BB2  C026  F0B5         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
 17895                           
 17896                           ;icmp.c: 130: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
 17897  014BB6  0EB4               	movlw	low ICMP_EchoReply@cksm
 17898  014BB8  6E13               	movwf	ETH_Insert@data,c
 17899  014BBA  0E00               	movlw	high ICMP_EchoReply@cksm
 17900  014BBC  6E14               	movwf	ETH_Insert@data+1,c
 17901  014BBE  0E00               	movlw	0
 17902  014BC0  6E16               	movwf	ETH_Insert@len+1,c
 17903  014BC2  0E02               	movlw	2
 17904  014BC4  6E15               	movwf	ETH_Insert@len,c
 17905  014BC6  0E00               	movlw	0
 17906  014BC8  6E18               	movwf	ETH_Insert@offset+1,c
 17907  014BCA  0E24               	movlw	36
 17908  014BCC  6E17               	movwf	ETH_Insert@offset,c
 17909  014BCE  ECF4  F0AF         	call	_ETH_Insert	;wreg free
 17910                           
 17911                           ;icmp.c: 131: ret = IPV4_Send(ipv4PayloadLength);
 17912  014BD2  C0B6  F037         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
 17913  014BD6  C0B7  F038         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
 17914  014BDA  EC7B  F0AD         	call	_IPV4_Send	;wreg free
 17915  014BDE  0100               	movlb	0	; () banked
 17916  014BE0  6FB8               	movwf	ICMP_EchoReply@ret& (0+255),b
 17917  014BE2                     l1109:
 17918                           
 17919                           ; BSR set to: 0
 17920                           ;icmp.c: 132: }
 17921                           ;icmp.c: 133: }
 17922                           ;icmp.c: 134: return ret;
 17923                           
 17924                           ; BSR set to: 0
 17925                           
 17926                           ; BSR set to: 0
 17927  014BE2  51B8               	movf	ICMP_EchoReply@ret& (0+255),w,b
 17928  014BE4  0012               	return	
 17929  014BE6                     __end_of_ICMP_EchoReply:
 17930                           	opt stack 0
 17931                           tosu	equ	0xFFF
 17932                           tosh	equ	0xFFE
 17933                           tosl	equ	0xFFD
 17934                           pclath	equ	0xFFA
 17935                           tblptru	equ	0xFF8
 17936                           tblptrh	equ	0xFF7
 17937                           tblptrl	equ	0xFF6
 17938                           tablat	equ	0xFF5
 17939                           prodh	equ	0xFF4
 17940                           prodl	equ	0xFF3
 17941                           intcon	equ	0xFF2
 17942                           indf0	equ	0xFEF
 17943                           postinc0	equ	0xFEE
 17944                           fsr0h	equ	0xFEA
 17945                           fsr0l	equ	0xFE9
 17946                           wreg	equ	0xFE8
 17947                           indf1	equ	0xFE7
 17948                           postinc1	equ	0xFE6
 17949                           postdec1	equ	0xFE5
 17950                           plusw1	equ	0xFE3
 17951                           fsr1h	equ	0xFE2
 17952                           fsr1l	equ	0xFE1
 17953                           indf2	equ	0xFDF
 17954                           postinc2	equ	0xFDE
 17955                           postdec2	equ	0xFDD
 17956                           plusw2	equ	0xFDB
 17957                           fsr2h	equ	0xFDA
 17958                           fsr2l	equ	0xFD9
 17959                           status	equ	0xFD8
 17960                           
 17961 ;; *************** function _ETH_Read16 *****************
 17962 ;; Defined at:
 17963 ;;		line 452 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 17964 ;; Parameters:    Size  Location     Type
 17965 ;;		None
 17966 ;; Auto vars:     Size  Location     Type
 17967 ;;  ret             2   20[COMRAM] unsigned int 
 17968 ;; Return value:  Size  Location     Type
 17969 ;;                  2   18[COMRAM] unsigned int 
 17970 ;; Registers used:
 17971 ;;		wreg, status,2, status,0, cstack
 17972 ;; Tracked objects:
 17973 ;;		On entry : 0/0
 17974 ;;		On exit  : 0/0
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17981 ;;Total ram usage:        4 bytes
 17982 ;; Hardware stack levels used:    1
 17983 ;; Hardware stack levels required when called:    5
 17984 ;; This function calls:
 17985 ;;		_ETH_EdataRead
 17986 ;; This function is called by:
 17987 ;;		_ICMP_Receive
 17988 ;;		_ICMP_EchoReply
 17989 ;;		_DHCP_Handler
 17990 ;;		_DNS_Handler
 17991 ;;		_TCP_ParseTCPOptions
 17992 ;; This function uses a non-reentrant model
 17993 ;;
 17994                           
 17995                           	psect	text65
 17996  0164FA                     __ptext65:
 17997                           	opt stack 0
 17998  0164FA                     _ETH_Read16:
 17999                           	opt stack 20
 18000                           
 18001                           ;ETHxxJ6x_driver.c: 454: uint16_t ret = 0;
 18002                           
 18003                           ; BSR set to: 0
 18004                           ;incstack = 0
 18005  0164FA  0E00               	movlw	0
 18006  0164FC  6E16               	movwf	ETH_Read16@ret+1,c
 18007  0164FE  0E00               	movlw	0
 18008  016500  6E15               	movwf	ETH_Read16@ret,c
 18009                           
 18010                           ;ETHxxJ6x_driver.c: 455: if(rxPacketStatusVector.byteCount >= sizeof(ret))
 18011  016502  0102               	movlb	2	; () banked
 18012  016504  513F               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 18013  016506  E104               	bnz	u9670
 18014  016508  0E02               	movlw	2
 18015  01650A  5D3E               	subwf	_rxPacketStatusVector& (0+255),w,b
 18016  01650C  A0D8               	btfss	status,0,c
 18017  01650E  D00D               	goto	l557
 18018  016510                     u9670:
 18019                           
 18020                           ; BSR set to: 2
 18021                           ;ETHxxJ6x_driver.c: 456: {
 18022                           ;ETHxxJ6x_driver.c: 457: ((uint8_t *)&ret)[1] = ETH_EdataRead();
 18023  016510  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 18024  016514  6E16               	movwf	ETH_Read16@ret+1,c
 18025                           
 18026                           ;ETHxxJ6x_driver.c: 458: ((uint8_t *)&ret)[0] = ETH_EdataRead();
 18027  016516  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 18028  01651A  6E15               	movwf	ETH_Read16@ret,c
 18029                           
 18030                           ;ETHxxJ6x_driver.c: 459: rxPacketStatusVector.byteCount -= sizeof(ret);
 18031  01651C  0E02               	movlw	2
 18032  01651E  0102               	movlb	2	; () banked
 18033  016520  5F3E               	subwf	_rxPacketStatusVector& (0+255),f,b
 18034  016522  0E00               	movlw	0
 18035  016524  5B3F               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 18036                           
 18037                           ; BSR set to: 2
 18038                           ;ETHxxJ6x_driver.c: 460: ethData.error = 0;
 18039  016526  9124               	bcf	_ethData& (0+255),0,b	;volatile
 18040                           
 18041                           ;ETHxxJ6x_driver.c: 461: }
 18042  016528  D001               	goto	l558
 18043  01652A                     l557:
 18044                           
 18045                           ; BSR set to: 2
 18046                           ;ETHxxJ6x_driver.c: 462: else
 18047                           ;ETHxxJ6x_driver.c: 463: {
 18048                           ;ETHxxJ6x_driver.c: 464: ethData.error = 1;
 18049  01652A  8124               	bsf	_ethData& (0+255),0,b	;volatile
 18050  01652C                     l558:
 18051                           
 18052                           ; BSR set to: 2
 18053                           ;ETHxxJ6x_driver.c: 465: }
 18054                           ;ETHxxJ6x_driver.c: 466: return ret;
 18055  01652C  C015  F013         	movff	ETH_Read16@ret,?_ETH_Read16
 18056  016530  C016  F014         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
 18057                           
 18058                           ; BSR set to: 2
 18059  016534  0012               	return		;funcret
 18060  016536                     __end_of_ETH_Read16:
 18061                           	opt stack 0
 18062                           tosu	equ	0xFFF
 18063                           tosh	equ	0xFFE
 18064                           tosl	equ	0xFFD
 18065                           pclath	equ	0xFFA
 18066                           tblptru	equ	0xFF8
 18067                           tblptrh	equ	0xFF7
 18068                           tblptrl	equ	0xFF6
 18069                           tablat	equ	0xFF5
 18070                           prodh	equ	0xFF4
 18071                           prodl	equ	0xFF3
 18072                           intcon	equ	0xFF2
 18073                           indf0	equ	0xFEF
 18074                           postinc0	equ	0xFEE
 18075                           fsr0h	equ	0xFEA
 18076                           fsr0l	equ	0xFE9
 18077                           wreg	equ	0xFE8
 18078                           indf1	equ	0xFE7
 18079                           postinc1	equ	0xFE6
 18080                           postdec1	equ	0xFE5
 18081                           plusw1	equ	0xFE3
 18082                           fsr1h	equ	0xFE2
 18083                           fsr1l	equ	0xFE1
 18084                           indf2	equ	0xFDF
 18085                           postinc2	equ	0xFDE
 18086                           postdec2	equ	0xFDD
 18087                           plusw2	equ	0xFDB
 18088                           fsr2h	equ	0xFDA
 18089                           fsr2l	equ	0xFD9
 18090                           status	equ	0xFD8
 18091                           
 18092 ;; *************** function _ETH_Copy *****************
 18093 ;; Defined at:
 18094 ;;		line 866 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;  len             2   24[COMRAM] unsigned int 
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;  tmp_len         2   28[COMRAM] unsigned int 
 18099 ;;  timer           2   26[COMRAM] unsigned int 
 18100 ;; Return value:  Size  Location     Type
 18101 ;;                  1    wreg      enum E4853
 18102 ;; Registers used:
 18103 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18104 ;; Tracked objects:
 18105 ;;		On entry : 0/0
 18106 ;;		On exit  : 0/0
 18107 ;;		Unchanged: 0/0
 18108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18110 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18113 ;;Total ram usage:        6 bytes
 18114 ;; Hardware stack levels used:    1
 18115 ;; Hardware stack levels required when called:    5
 18116 ;; This function calls:
 18117 ;;		___wmul
 18118 ;; This function is called by:
 18119 ;;		_ICMP_EchoReply
 18120 ;;		_ICMP_PortUnreachable
 18121 ;; This function uses a non-reentrant model
 18122 ;;
 18123                           
 18124                           	psect	text66
 18125  015862                     __ptext66:
 18126                           	opt stack 0
 18127  015862                     _ETH_Copy:
 18128                           	opt stack 20
 18129                           
 18130                           ;ETHxxJ6x_driver.c: 868: uint16_t timer;
 18131                           ;ETHxxJ6x_driver.c: 869: uint16_t tmp_len;
 18132                           ;ETHxxJ6x_driver.c: 871: timer = 2 * len;
 18133                           
 18134                           ; BSR set to: 2
 18135                           ;incstack = 0
 18136  015862  90D8               	bcf	status,0,c
 18137  015864  3419               	rlcf	ETH_Copy@len,w,c
 18138  015866  6E1B               	movwf	ETH_Copy@timer,c
 18139  015868  341A               	rlcf	ETH_Copy@len+1,w,c
 18140  01586A  6E1C               	movwf	ETH_Copy@timer+1,c
 18141                           
 18142                           ;ETHxxJ6x_driver.c: 872: while(ECON1bits.DMAST!=0 && --timer) __nop();
 18143  01586C  D001               	goto	l666
 18144  01586E                     l667:
 18145  01586E  F000               	nop	
 18146  015870                     l666:
 18147  015870  AAD2               	btfss	4050,5,c	;volatile
 18148  015872  D007               	goto	u9700
 18149  015874  061B               	decf	ETH_Copy@timer,f,c
 18150  015876  A0D8               	btfss	status,0,c
 18151  015878  061C               	decf	ETH_Copy@timer+1,f,c
 18152  01587A  501B               	movf	ETH_Copy@timer,w,c
 18153  01587C  101C               	iorwf	ETH_Copy@timer+1,w,c
 18154  01587E  A4D8               	btfss	status,2,c
 18155  015880  D7F6               	goto	l667
 18156  015882                     u9700:
 18157                           
 18158                           ;ETHxxJ6x_driver.c: 873: if(ECON1bits.DMAST==0)
 18159  015882  BAD2               	btfsc	4050,5,c	;volatile
 18160  015884  D042               	goto	l679
 18161                           
 18162                           ;ETHxxJ6x_driver.c: 874: {
 18163                           ;ETHxxJ6x_driver.c: 875: EDMADST = EWRPT;
 18164  015886  CEE2 FEF4          	movff	3810,3828	;volatile
 18165  01588A  CEE3 FEF5          	movff	3811,3829	;volatile
 18166                           
 18167                           ;ETHxxJ6x_driver.c: 876: EDMAST = ERDPT;
 18168  01588E  CF7A FEF0          	movff	3962,3824	;volatile
 18169  015892  CF7B FEF1          	movff	3963,3825	;volatile
 18170                           
 18171                           ;ETHxxJ6x_driver.c: 878: tmp_len = ERDPT + len;
 18172  015896  5019               	movf	ETH_Copy@len,w,c
 18173  015898  247A               	addwf	3962,w,c	;volatile
 18174  01589A  6E1D               	movwf	ETH_Copy@tmp_len,c
 18175  01589C  501A               	movf	ETH_Copy@len+1,w,c
 18176  01589E  207B               	addwfc	3963,w,c	;volatile
 18177  0158A0  6E1E               	movwf	ETH_Copy@tmp_len+1,c
 18178                           
 18179                           ;ETHxxJ6x_driver.c: 880: if (tmp_len > ((((8192) - (((1518) + (7)) << 1)) - 1)) )
 18180  0158A2  0E16               	movlw	22
 18181  0158A4  5C1D               	subwf	ETH_Copy@tmp_len,w,c
 18182  0158A6  0E14               	movlw	20
 18183  0158A8  581E               	subwfb	ETH_Copy@tmp_len+1,w,c
 18184  0158AA  A0D8               	btfss	status,0,c
 18185  0158AC  D006               	goto	l10240
 18186                           
 18187                           ;ETHxxJ6x_driver.c: 881: {
 18188                           ;ETHxxJ6x_driver.c: 882: tmp_len = tmp_len - ((((8192) - (((1518) + (7)) << 1)) - 1));
 18189  0158AE  0EEB               	movlw	235
 18190  0158B0  241D               	addwf	ETH_Copy@tmp_len,w,c
 18191  0158B2  6E1D               	movwf	ETH_Copy@tmp_len,c
 18192  0158B4  0EEB               	movlw	235
 18193  0158B6  201E               	addwfc	ETH_Copy@tmp_len+1,w,c
 18194  0158B8  6E1E               	movwf	ETH_Copy@tmp_len+1,c
 18195  0158BA                     l10240:
 18196                           
 18197                           ;ETHxxJ6x_driver.c: 886: {
 18198                           ;ETHxxJ6x_driver.c: 887: EDMAND = tmp_len;
 18199                           
 18200                           ;ETHxxJ6x_driver.c: 885: }else
 18201                           
 18202                           ;ETHxxJ6x_driver.c: 883: EDMAND = (0) + tmp_len;
 18203  0158BA  C01D  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
 18204  0158BE  C01E  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
 18205                           
 18206                           ;ETHxxJ6x_driver.c: 888: }
 18207                           ;ETHxxJ6x_driver.c: 890: ECON1bits.CSUMEN = 0;
 18208  0158C2  98D2               	bcf	4050,4,c	;volatile
 18209                           
 18210                           ;ETHxxJ6x_driver.c: 891: ECON1bits.DMAST = 1;
 18211  0158C4  8AD2               	bsf	4050,5,c	;volatile
 18212                           
 18213                           ;ETHxxJ6x_driver.c: 893: timer = 40 * len;
 18214  0158C6  C019  F013         	movff	ETH_Copy@len,___wmul@multiplier
 18215  0158CA  C01A  F014         	movff	ETH_Copy@len+1,___wmul@multiplier+1
 18216  0158CE  0E00               	movlw	0
 18217  0158D0  6E16               	movwf	___wmul@multiplicand+1,c
 18218  0158D2  0E28               	movlw	40
 18219  0158D4  6E15               	movwf	___wmul@multiplicand,c
 18220  0158D6  EC5F  F0B4         	call	___wmul	;wreg free
 18221  0158DA  C013  F01B         	movff	?___wmul,ETH_Copy@timer
 18222  0158DE  C014  F01C         	movff	?___wmul+1,ETH_Copy@timer+1
 18223                           
 18224                           ;ETHxxJ6x_driver.c: 894: while(ECON1bits.DMAST!=0 && --timer) __nop();
 18225  0158E2  D001               	goto	l674
 18226  0158E4                     l675:
 18227  0158E4  F000               	nop	
 18228  0158E6                     l674:
 18229  0158E6  AAD2               	btfss	4050,5,c	;volatile
 18230  0158E8  D007               	goto	u9740
 18231  0158EA  061B               	decf	ETH_Copy@timer,f,c
 18232  0158EC  A0D8               	btfss	status,0,c
 18233  0158EE  061C               	decf	ETH_Copy@timer+1,f,c
 18234  0158F0  501B               	movf	ETH_Copy@timer,w,c
 18235  0158F2  101C               	iorwf	ETH_Copy@timer+1,w,c
 18236  0158F4  A4D8               	btfss	status,2,c
 18237  0158F6  D7F6               	goto	l675
 18238  0158F8                     u9740:
 18239                           
 18240                           ;ETHxxJ6x_driver.c: 895: if(ECON1bits.DMAST == 0)
 18241  0158F8  BAD2               	btfsc	4050,5,c	;volatile
 18242  0158FA  D007               	goto	l679
 18243                           
 18244                           ;ETHxxJ6x_driver.c: 896: {
 18245                           ;ETHxxJ6x_driver.c: 897: EWRPT += len;
 18246  0158FC  5019               	movf	ETH_Copy@len,w,c
 18247  0158FE  010E               	movlb	14	; () banked
 18248  015900  27E2               	addwf	226,f,b	;volatile
 18249  015902  501A               	movf	ETH_Copy@len+1,w,c
 18250  015904  23E3               	addwfc	227,f,b	;volatile
 18251                           
 18252                           ; BSR set to: 14
 18253                           ;ETHxxJ6x_driver.c: 898: return SUCCESS;
 18254  015906  0E01               	movlw	1
 18255                           
 18256                           ; BSR set to: 14
 18257  015908  0012               	return	
 18258  01590A                     l679:
 18259                           
 18260                           ; BSR set to: 14
 18261  01590A  00FF               	reset		;# 
 18262                           
 18263                           ;ETHxxJ6x_driver.c: 903: return DMA_TIMEOUT;
 18264  01590C  0E0C               	movlw	12
 18265  01590E  0012               	return	
 18266  015910                     __end_of_ETH_Copy:
 18267                           	opt stack 0
 18268                           tosu	equ	0xFFF
 18269                           tosh	equ	0xFFE
 18270                           tosl	equ	0xFFD
 18271                           pclath	equ	0xFFA
 18272                           tblptru	equ	0xFF8
 18273                           tblptrh	equ	0xFF7
 18274                           tblptrl	equ	0xFF6
 18275                           tablat	equ	0xFF5
 18276                           prodh	equ	0xFF4
 18277                           prodl	equ	0xFF3
 18278                           intcon	equ	0xFF2
 18279                           indf0	equ	0xFEF
 18280                           postinc0	equ	0xFEE
 18281                           fsr0h	equ	0xFEA
 18282                           fsr0l	equ	0xFE9
 18283                           wreg	equ	0xFE8
 18284                           indf1	equ	0xFE7
 18285                           postinc1	equ	0xFE6
 18286                           postdec1	equ	0xFE5
 18287                           plusw1	equ	0xFE3
 18288                           fsr1h	equ	0xFE2
 18289                           fsr1l	equ	0xFE1
 18290                           indf2	equ	0xFDF
 18291                           postinc2	equ	0xFDE
 18292                           postdec2	equ	0xFDD
 18293                           plusw2	equ	0xFDB
 18294                           fsr2h	equ	0xFDA
 18295                           fsr2l	equ	0xFD9
 18296                           status	equ	0xFD8
 18297                           
 18298 ;; *************** function _ETH_Dump *****************
 18299 ;; Defined at:
 18300 ;;		line 789 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18301 ;; Parameters:    Size  Location     Type
 18302 ;;  length          2   18[COMRAM] unsigned int 
 18303 ;; Auto vars:     Size  Location     Type
 18304 ;;		None
 18305 ;; Return value:  Size  Location     Type
 18306 ;;                  1    wreg      void 
 18307 ;; Registers used:
 18308 ;;		wreg, status,2, status,0
 18309 ;; Tracked objects:
 18310 ;;		On entry : 0/0
 18311 ;;		On exit  : 0/0
 18312 ;;		Unchanged: 0/0
 18313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18318 ;;Total ram usage:        2 bytes
 18319 ;; Hardware stack levels used:    1
 18320 ;; Hardware stack levels required when called:    4
 18321 ;; This function calls:
 18322 ;;		Nothing
 18323 ;; This function is called by:
 18324 ;;		_IPV4_Packet
 18325 ;;		_ICMP_Receive
 18326 ;;		_DHCP_Handler
 18327 ;;		_TCP_ParseTCPOptions
 18328 ;; This function uses a non-reentrant model
 18329 ;;
 18330                           
 18331                           	psect	text67
 18332  0166E2                     __ptext67:
 18333                           	opt stack 0
 18334  0166E2                     _ETH_Dump:
 18335                           	opt stack 21
 18336                           
 18337                           ;ETHxxJ6x_driver.c: 791: length = (rxPacketStatusVector.byteCount <= length) ? rxPacketS
      +                          tatusVector.byteCount : length;
 18338                           
 18339                           ;incstack = 0
 18340  0166E2  0102               	movlb	2	; () banked
 18341  0166E4  513E               	movf	_rxPacketStatusVector& (0+255),w,b
 18342  0166E6  5C13               	subwf	ETH_Dump@length,w,c
 18343  0166E8  513F               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 18344  0166EA  5814               	subwfb	ETH_Dump@length+1,w,c
 18345  0166EC  A0D8               	btfss	status,0,c
 18346  0166EE  D004               	goto	l654
 18347                           
 18348                           ; BSR set to: 2
 18349                           
 18350                           ; BSR set to: 2
 18351  0166F0  C23E  F013         	movff	_rxPacketStatusVector,ETH_Dump@length
 18352  0166F4  C23F  F014         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
 18353  0166F8                     l654:
 18354                           
 18355                           ; BSR set to: 2
 18356                           ;ETHxxJ6x_driver.c: 792: if (length)
 18357                           
 18358                           ; BSR set to: 2
 18359  0166F8  5013               	movf	ETH_Dump@length,w,c
 18360  0166FA  1014               	iorwf	ETH_Dump@length+1,w,c
 18361  0166FC  B4D8               	btfsc	status,2,c
 18362  0166FE  0012               	return	
 18363                           
 18364                           ; BSR set to: 2
 18365                           ;ETHxxJ6x_driver.c: 793: {
 18366                           ;ETHxxJ6x_driver.c: 795: ERDPT += length;
 18367  016700  5013               	movf	ETH_Dump@length,w,c
 18368  016702  267A               	addwf	3962,f,c	;volatile
 18369  016704  5014               	movf	ETH_Dump@length+1,w,c
 18370  016706  227B               	addwfc	3963,f,c	;volatile
 18371                           
 18372                           ;ETHxxJ6x_driver.c: 796: rxPacketStatusVector.byteCount -= length;
 18373  016708  5013               	movf	ETH_Dump@length,w,c
 18374  01670A  5F3E               	subwf	_rxPacketStatusVector& (0+255),f,b
 18375  01670C  5014               	movf	ETH_Dump@length+1,w,c
 18376  01670E  5B3F               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 18377  016710  0012               	return	
 18378  016712                     __end_of_ETH_Dump:
 18379                           	opt stack 0
 18380                           tosu	equ	0xFFF
 18381                           tosh	equ	0xFFE
 18382                           tosl	equ	0xFFD
 18383                           pclath	equ	0xFFA
 18384                           tblptru	equ	0xFF8
 18385                           tblptrh	equ	0xFF7
 18386                           tblptrl	equ	0xFF6
 18387                           tablat	equ	0xFF5
 18388                           prodh	equ	0xFF4
 18389                           prodl	equ	0xFF3
 18390                           intcon	equ	0xFF2
 18391                           indf0	equ	0xFEF
 18392                           postinc0	equ	0xFEE
 18393                           fsr0h	equ	0xFEA
 18394                           fsr0l	equ	0xFE9
 18395                           wreg	equ	0xFE8
 18396                           indf1	equ	0xFE7
 18397                           postinc1	equ	0xFE6
 18398                           postdec1	equ	0xFE5
 18399                           plusw1	equ	0xFE3
 18400                           fsr1h	equ	0xFE2
 18401                           fsr1l	equ	0xFE1
 18402                           indf2	equ	0xFDF
 18403                           postinc2	equ	0xFDE
 18404                           postdec2	equ	0xFDD
 18405                           plusw2	equ	0xFDB
 18406                           fsr2h	equ	0xFDA
 18407                           fsr2l	equ	0xFD9
 18408                           status	equ	0xFD8
 18409                           
 18410 ;; *************** function _ETH_RxComputeChecksum *****************
 18411 ;; Defined at:
 18412 ;;		line 1026 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18413 ;; Parameters:    Size  Location     Type
 18414 ;;  len             2   36[COMRAM] unsigned int 
 18415 ;;  seed            2   38[COMRAM] unsigned int 
 18416 ;; Auto vars:     Size  Location     Type
 18417 ;;  cksm            4   46[COMRAM] unsigned long 
 18418 ;;  rxptr           2   44[COMRAM] unsigned int 
 18419 ;; Return value:  Size  Location     Type
 18420 ;;                  2   36[COMRAM] unsigned int 
 18421 ;; Registers used:
 18422 ;;		wreg, status,2, status,0, cstack
 18423 ;; Tracked objects:
 18424 ;;		On entry : 0/0
 18425 ;;		On exit  : 0/0
 18426 ;;		Unchanged: 0/0
 18427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18429 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18430 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18431 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18432 ;;Total ram usage:       14 bytes
 18433 ;; Hardware stack levels used:    1
 18434 ;; Hardware stack levels required when called:    6
 18435 ;; This function calls:
 18436 ;;		_ETH_ComputeChecksum
 18437 ;; This function is called by:
 18438 ;;		_IPV4_Packet
 18439 ;; This function uses a non-reentrant model
 18440 ;;
 18441                           
 18442                           	psect	text68
 18443  01630C                     __ptext68:
 18444                           	opt stack 0
 18445  01630C                     _ETH_RxComputeChecksum:
 18446                           	opt stack 21
 18447                           
 18448                           ;ETHxxJ6x_driver.c: 1028: uint16_t rxptr;
 18449                           ;ETHxxJ6x_driver.c: 1029: uint32_t cksm;
 18450                           ;ETHxxJ6x_driver.c: 1032: rxptr = ERDPT;
 18451                           
 18452                           ; BSR set to: 2
 18453                           ;incstack = 0
 18454  01630C  CF7A F02D          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
 18455  016310  CF7B F02E          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
 18456                           
 18457                           ;ETHxxJ6x_driver.c: 1034: cksm = ETH_ComputeChecksum( len, seed);
 18458  016314  C025  F013         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
 18459  016318  C026  F014         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 18460  01631C  C027  F015         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
 18461  016320  C028  F016         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 18462  016324  ECFE  F0A7         	call	_ETH_ComputeChecksum	;wreg free
 18463  016328  C013  F02F         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
 18464  01632C  C014  F030         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
 18465  016330  6A31               	clrf	ETH_RxComputeChecksum@cksm+2,c
 18466  016332  6A32               	clrf	ETH_RxComputeChecksum@cksm+3,c
 18467                           
 18468                           ;ETHxxJ6x_driver.c: 1037: ERDPT = rxptr;
 18469  016334  C02D  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
 18470  016338  C02E  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
 18471                           
 18472                           ;ETHxxJ6x_driver.c: 1040: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 18473  01633C  502F               	movf	ETH_RxComputeChecksum@cksm,w,c
 18474  01633E  6E2A               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
 18475  016340  6A29               	clrf	??_ETH_RxComputeChecksum& (0+255),c
 18476  016342  0EFF               	movlw	255
 18477  016344  1430               	andwf	ETH_RxComputeChecksum@cksm+1,w,c
 18478  016346  6E2B               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
 18479  016348  0E00               	movlw	0
 18480  01634A  1431               	andwf	ETH_RxComputeChecksum@cksm+2,w,c
 18481  01634C  6E2C               	movwf	(??_ETH_RxComputeChecksum+3)& (0+255),c
 18482  01634E  5029               	movf	??_ETH_RxComputeChecksum,w,c
 18483  016350  102B               	iorwf	??_ETH_RxComputeChecksum+2,w,c
 18484  016352  6E25               	movwf	?_ETH_RxComputeChecksum,c
 18485  016354  502A               	movf	??_ETH_RxComputeChecksum+1,w,c
 18486  016356  102C               	iorwf	??_ETH_RxComputeChecksum+3,w,c
 18487  016358  6E26               	movwf	?_ETH_RxComputeChecksum+1,c
 18488  01635A  0012               	return	
 18489  01635C                     __end_of_ETH_RxComputeChecksum:
 18490                           	opt stack 0
 18491                           tosu	equ	0xFFF
 18492                           tosh	equ	0xFFE
 18493                           tosl	equ	0xFFD
 18494                           pclath	equ	0xFFA
 18495                           tblptru	equ	0xFF8
 18496                           tblptrh	equ	0xFF7
 18497                           tblptrl	equ	0xFF6
 18498                           tablat	equ	0xFF5
 18499                           prodh	equ	0xFF4
 18500                           prodl	equ	0xFF3
 18501                           intcon	equ	0xFF2
 18502                           indf0	equ	0xFEF
 18503                           postinc0	equ	0xFEE
 18504                           fsr0h	equ	0xFEA
 18505                           fsr0l	equ	0xFE9
 18506                           wreg	equ	0xFE8
 18507                           indf1	equ	0xFE7
 18508                           postinc1	equ	0xFE6
 18509                           postdec1	equ	0xFE5
 18510                           plusw1	equ	0xFE3
 18511                           fsr1h	equ	0xFE2
 18512                           fsr1l	equ	0xFE1
 18513                           indf2	equ	0xFDF
 18514                           postinc2	equ	0xFDE
 18515                           postdec2	equ	0xFDD
 18516                           plusw2	equ	0xFDB
 18517                           fsr2h	equ	0xFDA
 18518                           fsr2l	equ	0xFD9
 18519                           status	equ	0xFD8
 18520                           
 18521 ;; *************** function _ETH_NextPacketUpdate *****************
 18522 ;; Defined at:
 18523 ;;		line 319 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18524 ;; Parameters:    Size  Location     Type
 18525 ;;		None
 18526 ;; Auto vars:     Size  Location     Type
 18527 ;;		None
 18528 ;; Return value:  Size  Location     Type
 18529 ;;                  1    wreg      void 
 18530 ;; Registers used:
 18531 ;;		wreg, status,2, status,0, cstack
 18532 ;; Tracked objects:
 18533 ;;		On entry : 0/0
 18534 ;;		On exit  : 0/0
 18535 ;;		Unchanged: 0/0
 18536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18541 ;;Total ram usage:        0 bytes
 18542 ;; Hardware stack levels used:    1
 18543 ;; Hardware stack levels required when called:    5
 18544 ;; This function calls:
 18545 ;;		_ETH_EdataRead
 18546 ;; This function is called by:
 18547 ;;		_Network_Read
 18548 ;; This function uses a non-reentrant model
 18549 ;;
 18550                           
 18551                           	psect	text69
 18552  0164BC                     __ptext69:
 18553                           	opt stack 0
 18554  0164BC                     _ETH_NextPacketUpdate:
 18555                           	opt stack 23
 18556                           
 18557                           ;ETHxxJ6x_driver.c: 322: ERDPT = nextPacketPointer;
 18558                           
 18559                           ;incstack = 0
 18560  0164BC  C03F  FF7A         	movff	_nextPacketPointer,3962	;volatile
 18561  0164C0  C040  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
 18562                           
 18563                           ;ETHxxJ6x_driver.c: 326: ((char *) &nextPacketPointer)[0] = ETH_EdataRead();
 18564  0164C4  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 18565  0164C8  6E3F               	movwf	_nextPacketPointer,c
 18566                           
 18567                           ;ETHxxJ6x_driver.c: 327: ((char *) &nextPacketPointer)[1] = ETH_EdataRead();
 18568  0164CA  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 18569  0164CE  6E40               	movwf	_nextPacketPointer+1,c
 18570                           
 18571                           ;ETHxxJ6x_driver.c: 328: ((char *) &rxPacketStatusVector)[0] = ETH_EdataRead();
 18572  0164D0  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 18573  0164D4  0102               	movlb	2	; () banked
 18574  0164D6  6F3E               	movwf	_rxPacketStatusVector& (0+255),b
 18575                           
 18576                           ;ETHxxJ6x_driver.c: 329: ((char *) &rxPacketStatusVector)[1] = ETH_EdataRead();
 18577  0164D8  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 18578  0164DC  0102               	movlb	2	; () banked
 18579  0164DE  6F3F               	movwf	(_rxPacketStatusVector+1)& (0+255),b
 18580                           
 18581                           ;ETHxxJ6x_driver.c: 330: ((char *) &rxPacketStatusVector)[2] = ETH_EdataRead();
 18582  0164E0  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 18583  0164E4  0102               	movlb	2	; () banked
 18584  0164E6  6F40               	movwf	(_rxPacketStatusVector+2)& (0+255),b
 18585                           
 18586                           ;ETHxxJ6x_driver.c: 331: ((char *) &rxPacketStatusVector)[3] = ETH_EdataRead();
 18587  0164E8  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 18588  0164EC  0102               	movlb	2	; () banked
 18589  0164EE  6F41               	movwf	(_rxPacketStatusVector+3)& (0+255),b
 18590                           
 18591                           ; BSR set to: 2
 18592                           ;ETHxxJ6x_driver.c: 334: rxPacketStatusVector.byteCount -= 4;
 18593  0164F0  0E04               	movlw	4
 18594  0164F2  5F3E               	subwf	_rxPacketStatusVector& (0+255),f,b
 18595  0164F4  0E00               	movlw	0
 18596  0164F6  5B3F               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 18597                           
 18598                           ; BSR set to: 2
 18599  0164F8  0012               	return		;funcret
 18600  0164FA                     __end_of_ETH_NextPacketUpdate:
 18601                           	opt stack 0
 18602                           tosu	equ	0xFFF
 18603                           tosh	equ	0xFFE
 18604                           tosl	equ	0xFFD
 18605                           pclath	equ	0xFFA
 18606                           tblptru	equ	0xFF8
 18607                           tblptrh	equ	0xFF7
 18608                           tblptrl	equ	0xFF6
 18609                           tablat	equ	0xFF5
 18610                           prodh	equ	0xFF4
 18611                           prodl	equ	0xFF3
 18612                           intcon	equ	0xFF2
 18613                           indf0	equ	0xFEF
 18614                           postinc0	equ	0xFEE
 18615                           fsr0h	equ	0xFEA
 18616                           fsr0l	equ	0xFE9
 18617                           wreg	equ	0xFE8
 18618                           indf1	equ	0xFE7
 18619                           postinc1	equ	0xFE6
 18620                           postdec1	equ	0xFE5
 18621                           plusw1	equ	0xFE3
 18622                           fsr1h	equ	0xFE2
 18623                           fsr1l	equ	0xFE1
 18624                           indf2	equ	0xFDF
 18625                           postinc2	equ	0xFDE
 18626                           postdec2	equ	0xFDD
 18627                           plusw2	equ	0xFDB
 18628                           fsr2h	equ	0xFDA
 18629                           fsr2l	equ	0xFD9
 18630                           status	equ	0xFD8
 18631                           
 18632 ;; *************** function _ETH_Flush *****************
 18633 ;; Defined at:
 18634 ;;		line 803 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18635 ;; Parameters:    Size  Location     Type
 18636 ;;		None
 18637 ;; Auto vars:     Size  Location     Type
 18638 ;;		None
 18639 ;; Return value:  Size  Location     Type
 18640 ;;                  1    wreg      void 
 18641 ;; Registers used:
 18642 ;;		wreg, status,2, status,0
 18643 ;; Tracked objects:
 18644 ;;		On entry : 0/0
 18645 ;;		On exit  : 0/0
 18646 ;;		Unchanged: 0/0
 18647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18652 ;;Total ram usage:        4 bytes
 18653 ;; Hardware stack levels used:    1
 18654 ;; Hardware stack levels required when called:    4
 18655 ;; This function calls:
 18656 ;;		Nothing
 18657 ;; This function is called by:
 18658 ;;		_ETH_Init
 18659 ;;		_Network_Read
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text70
 18664  015F14                     __ptext70:
 18665                           	opt stack 0
 18666  015F14                     _ETH_Flush:
 18667                           	opt stack 23
 18668                           
 18669                           ;ETHxxJ6x_driver.c: 805: ethData.pktReady = 0;
 18670                           
 18671                           ; BSR set to: 2
 18672                           ;incstack = 0
 18673  015F14  0102               	movlb	2	; () banked
 18674  015F16  9324               	bcf	_ethData& (0+255),1,b	;volatile
 18675                           
 18676                           ; BSR set to: 2
 18677                           ;ETHxxJ6x_driver.c: 807: ECON2 = ECON2 | 0x40;
 18678  015F18  010E               	movlb	14	; () banked
 18679  015F1A  51FE               	movf	254,w,b	;volatile
 18680  015F1C  0940               	iorlw	64
 18681  015F1E  6FFE               	movwf	254,b	;volatile
 18682                           
 18683                           ;ETHxxJ6x_driver.c: 813: if (((nextPacketPointer - 1) < ERXST) ||
 18684                           ;ETHxxJ6x_driver.c: 814: ((nextPacketPointer - 1) > ERXND))
 18685  015F20  0EFF               	movlw	255
 18686  015F22  6E13               	movwf	??_ETH_Flush& (0+255),c
 18687  015F24  0EFF               	movlw	255
 18688  015F26  6E14               	movwf	(??_ETH_Flush+1)& (0+255),c
 18689  015F28  C03F  F015         	movff	_nextPacketPointer,??_ETH_Flush+2
 18690  015F2C  C040  F016         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 18691  015F30  5013               	movf	??_ETH_Flush,w,c
 18692  015F32  2615               	addwf	??_ETH_Flush+2,f,c
 18693  015F34  5014               	movf	??_ETH_Flush+1,w,c
 18694  015F36  2216               	addwfc	??_ETH_Flush+3,f,c
 18695  015F38  51E8               	movf	232,w,b	;volatile
 18696  015F3A  5C15               	subwf	??_ETH_Flush+2,w,c
 18697  015F3C  51E9               	movf	233,w,b	;volatile
 18698  015F3E  5816               	subwfb	??_ETH_Flush+3,w,c
 18699  015F40  A0D8               	btfss	status,0,c
 18700  015F42  D012               	goto	u11270
 18701                           
 18702                           ; BSR set to: 14
 18703  015F44  0EFF               	movlw	255
 18704  015F46  6E13               	movwf	??_ETH_Flush& (0+255),c
 18705  015F48  0EFF               	movlw	255
 18706  015F4A  6E14               	movwf	(??_ETH_Flush+1)& (0+255),c
 18707  015F4C  C03F  F015         	movff	_nextPacketPointer,??_ETH_Flush+2
 18708  015F50  C040  F016         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 18709  015F54  5013               	movf	??_ETH_Flush,w,c
 18710  015F56  2615               	addwf	??_ETH_Flush+2,f,c
 18711  015F58  5014               	movf	??_ETH_Flush+1,w,c
 18712  015F5A  2216               	addwfc	??_ETH_Flush+3,f,c
 18713  015F5C  5015               	movf	??_ETH_Flush+2,w,c
 18714  015F5E  5DEA               	subwf	234,w,b	;volatile
 18715  015F60  5016               	movf	??_ETH_Flush+3,w,c
 18716  015F62  59EB               	subwfb	235,w,b	;volatile
 18717  015F64  B0D8               	btfsc	status,0,c
 18718  015F66  D005               	goto	l659
 18719  015F68                     u11270:
 18720                           
 18721                           ; BSR set to: 14
 18722                           ;ETHxxJ6x_driver.c: 815: ERXRDPT = ERXND;
 18723  015F68  CEEA FEEC          	movff	3818,3820	;volatile
 18724  015F6C  CEEB FEED          	movff	3819,3821	;volatile
 18725  015F70  D006               	goto	l662
 18726  015F72                     l659:
 18727                           
 18728                           ; BSR set to: 14
 18729                           ;ETHxxJ6x_driver.c: 816: else
 18730                           ;ETHxxJ6x_driver.c: 817: ERXRDPT = nextPacketPointer - 1;
 18731                           
 18732                           ; BSR set to: 14
 18733  015F72  0EFF               	movlw	255
 18734  015F74  243F               	addwf	_nextPacketPointer,w,c
 18735  015F76  6FEC               	movwf	236,b	;volatile
 18736  015F78  0EFF               	movlw	255
 18737  015F7A  2040               	addwfc	_nextPacketPointer+1,w,c
 18738  015F7C  6FED               	movwf	237,b	;volatile
 18739  015F7E                     l662:
 18740                           
 18741                           ; BSR set to: 14
 18742                           ;ETHxxJ6x_driver.c: 819: EIEbits.PKTIE = 1;
 18743                           
 18744                           ; BSR set to: 14
 18745  015F7E  8DFB               	bsf	251,6,b	;volatile
 18746                           
 18747                           ; BSR set to: 14
 18748  015F80  0012               	return		;funcret
 18749  015F82                     __end_of_ETH_Flush:
 18750                           	opt stack 0
 18751                           tosu	equ	0xFFF
 18752                           tosh	equ	0xFFE
 18753                           tosl	equ	0xFFD
 18754                           pclath	equ	0xFFA
 18755                           tblptru	equ	0xFF8
 18756                           tblptrh	equ	0xFF7
 18757                           tblptrl	equ	0xFF6
 18758                           tablat	equ	0xFF5
 18759                           prodh	equ	0xFF4
 18760                           prodl	equ	0xFF3
 18761                           intcon	equ	0xFF2
 18762                           indf0	equ	0xFEF
 18763                           postinc0	equ	0xFEE
 18764                           fsr0h	equ	0xFEA
 18765                           fsr0l	equ	0xFE9
 18766                           wreg	equ	0xFE8
 18767                           indf1	equ	0xFE7
 18768                           postinc1	equ	0xFE6
 18769                           postdec1	equ	0xFE5
 18770                           plusw1	equ	0xFE3
 18771                           fsr1h	equ	0xFE2
 18772                           fsr1l	equ	0xFE1
 18773                           indf2	equ	0xFDF
 18774                           postinc2	equ	0xFDE
 18775                           postdec2	equ	0xFDD
 18776                           plusw2	equ	0xFDB
 18777                           fsr2h	equ	0xFDA
 18778                           fsr2l	equ	0xFD9
 18779                           status	equ	0xFD8
 18780                           
 18781 ;; *************** function _ARPV4_Packet *****************
 18782 ;; Defined at:
 18783 ;;		line 101 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 18784 ;; Parameters:    Size  Location     Type
 18785 ;;		None
 18786 ;; Auto vars:     Size  Location     Type
 18787 ;;  x               1   39[BANK0 ] unsigned char 
 18788 ;;  arpPtr          2   36[BANK0 ] PTR struct .
 18789 ;;		 -> arpMap(104), 
 18790 ;;  x               1   38[BANK0 ] unsigned char 
 18791 ;;  header         28   42[BANK0 ] struct .
 18792 ;;  entryPointer    2   40[BANK0 ] PTR struct .
 18793 ;;		 -> arpMap(104), 
 18794 ;;  length          2   32[BANK0 ] unsigned int 
 18795 ;;  ret             1   35[BANK0 ] enum E476
 18796 ;;  mergeFlag       1   34[BANK0 ] unsigned char 
 18797 ;; Return value:  Size  Location     Type
 18798 ;;                  1    wreg      enum E476
 18799 ;; Registers used:
 18800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18801 ;; Tracked objects:
 18802 ;;		On entry : 0/0
 18803 ;;		On exit  : 0/0
 18804 ;;		Unchanged: 0/0
 18805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18807 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18808 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18809 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18810 ;;Total ram usage:       70 bytes
 18811 ;; Hardware stack levels used:    1
 18812 ;; Hardware stack levels required when called:    7
 18813 ;; This function calls:
 18814 ;;		_ETH_ReadBlock
 18815 ;;		_ETH_Send
 18816 ;;		_ETH_WriteBlock
 18817 ;;		_ETH_WriteStart
 18818 ;;		_memcpy
 18819 ;; This function is called by:
 18820 ;;		_Network_Read
 18821 ;; This function uses a non-reentrant model
 18822 ;;
 18823                           
 18824                           	psect	text71
 18825  012662                     __ptext71:
 18826                           	opt stack 0
 18827  012662                     _ARPV4_Packet:
 18828                           	opt stack 21
 18829                           
 18830                           ;arpv4.c: 103: arpHeader_t header;
 18831                           ;arpv4.c: 104: arpMap_t *entryPointer;
 18832                           ;arpv4.c: 105: bool mergeFlag;
 18833                           ;arpv4.c: 106: uint16_t length;
 18834                           ;arpv4.c: 107: error_msg ret;
 18835                           ;arpv4.c: 109: ret = ERROR;
 18836                           
 18837                           ; BSR set to: 14
 18838                           ;incstack = 0
 18839  012662  0E00               	movlw	0
 18840  012664  0100               	movlb	0	; () banked
 18841  012666  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;arpv4.c: 111: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
 18845  012668  0E8A               	movlw	low ARPV4_Packet@header
 18846  01266A  6E13               	movwf	ETH_ReadBlock@buffer,c
 18847  01266C  0E00               	movlw	high ARPV4_Packet@header
 18848  01266E  6E14               	movwf	ETH_ReadBlock@buffer+1,c
 18849  012670  0E00               	movlw	0
 18850  012672  6E16               	movwf	ETH_ReadBlock@length+1,c
 18851  012674  0E1C               	movlw	28
 18852  012676  6E15               	movwf	ETH_ReadBlock@length,c
 18853  012678  EC32  F0B1         	call	_ETH_ReadBlock	;wreg free
 18854  01267C  C013  F080         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
 18855  012680  C014  F081         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
 18856                           
 18857                           ;arpv4.c: 112: if(length == sizeof(arpHeader_t))
 18858  012684  0E1C               	movlw	28
 18859  012686  0100               	movlb	0	; () banked
 18860  012688  1980               	xorwf	ARPV4_Packet@length& (0+255),w,b
 18861  01268A  1181               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
 18862  01268C  A4D8               	btfss	status,2,c
 18863  01268E  0012               	return	
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;arpv4.c: 113: {
 18867                           ;arpv4.c: 115: mergeFlag = 0;
 18868  012690  0E00               	movlw	0
 18869  012692  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;arpv4.c: 116: entryPointer = arpMap;
 18873  012694  0E04               	movlw	low _arpMap
 18874  012696  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 18875  012698  0E03               	movlw	high _arpMap
 18876  01269A  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;arpv4.c: 118: for(uint8_t x=8; x > 0; x--)
 18880  01269C  0E08               	movlw	8
 18881  01269E  6F86               	movwf	ARPV4_Packet@x& (0+255),b
 18882  0126A0                     l11562:
 18883                           
 18884                           ; BSR set to: 0
 18885  0126A0  5186               	movf	ARPV4_Packet@x& (0+255),w,b
 18886  0126A2  B4D8               	btfsc	status,2,c
 18887  0126A4  D03C               	goto	u11610
 18888                           
 18889                           ; BSR set to: 0
 18890                           ;arpv4.c: 119: {
 18891                           ;arpv4.c: 120: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
 18892                           
 18893                           ; BSR set to: 0
 18894                           
 18895                           ; BSR set to: 0
 18896  0126A6  EE20 F006          	lfsr	2,6
 18897  0126AA  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 18898  0126AC  26D9               	addwf	fsr2l,f,c
 18899  0126AE  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 18900  0126B0  22DA               	addwfc	fsr2h,f,c
 18901  0126B2  50DE               	movf	postinc2,w,c
 18902  0126B4  1998               	xorwf	(ARPV4_Packet@header+14)& (0+255),w,b
 18903  0126B6  E12D               	bnz	l11576
 18904  0126B8  50DE               	movf	postinc2,w,c
 18905  0126BA  1999               	xorwf	(ARPV4_Packet@header+15)& (0+255),w,b
 18906  0126BC  E12A               	bnz	l11576
 18907  0126BE  50DE               	movf	postinc2,w,c
 18908  0126C0  199A               	xorwf	(ARPV4_Packet@header+16)& (0+255),w,b
 18909  0126C2  E127               	bnz	l11576
 18910  0126C4  50DE               	movf	postinc2,w,c
 18911  0126C6  199B               	xorwf	(ARPV4_Packet@header+17)& (0+255),w,b
 18912  0126C8  A4D8               	btfss	status,2,c
 18913  0126CA  D023               	goto	l320
 18914                           
 18915                           ; BSR set to: 0
 18916  0126CC  EE20 F00A          	lfsr	2,10
 18917  0126D0  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 18918  0126D2  26D9               	addwf	fsr2l,f,c
 18919  0126D4  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 18920  0126D6  22DA               	addwfc	fsr2h,f,c
 18921  0126D8  50DE               	movf	postinc2,w,c
 18922  0126DA  198C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
 18923  0126DC  E11A               	bnz	l11576
 18924  0126DE  50DE               	movf	postinc2,w,c
 18925  0126E0  198D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
 18926  0126E2  A4D8               	btfss	status,2,c
 18927  0126E4  D016               	goto	l320
 18928                           
 18929                           ; BSR set to: 0
 18930                           ;arpv4.c: 121: {
 18931                           ;arpv4.c: 122: entryPointer->age = 0;
 18932  0126E6  EE20 F00C          	lfsr	2,12
 18933  0126EA  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 18934  0126EC  26D9               	addwf	fsr2l,f,c
 18935  0126EE  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 18936  0126F0  22DA               	addwfc	fsr2h,f,c
 18937  0126F2  0E00               	movlw	0
 18938  0126F4  6EDF               	movwf	indf2,c
 18939                           
 18940                           ; BSR set to: 0
 18941                           ;arpv4.c: 123: entryPointer->macAddress.s = header.sha.s;
 18942  0126F6  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 18943  0126FA  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 18944  0126FE  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 18945  012702  0E05               	movlw	5
 18946  012704                     u11601:
 18947  012704  CFDB FFE3          	movff	plusw2,plusw1
 18948  012708  06E8               	decf	wreg,f,c
 18949  01270A  E2FC               	bc	u11601
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;arpv4.c: 124: mergeFlag = 1;
 18953  01270C  0E01               	movlw	1
 18954  01270E  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 18955                           
 18956                           ;arpv4.c: 125: break;
 18957  012710  D006               	goto	u11610
 18958  012712                     l320:
 18959  012712                     l11576:
 18960                           
 18961                           ; BSR set to: 0
 18962                           ;arpv4.c: 126: }
 18963                           ;arpv4.c: 127: entryPointer++;
 18964  012712  0E0D               	movlw	13
 18965  012714  2788               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
 18966  012716  0E00               	movlw	0
 18967  012718  2389               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
 18968                           
 18969                           ; BSR set to: 0
 18970  01271A  0786               	decf	ARPV4_Packet@x& (0+255),f,b
 18971  01271C  D7C1               	goto	l11562
 18972  01271E                     u11610:
 18973                           
 18974                           ; BSR set to: 0
 18975                           ;arpv4.c: 128: }
 18976                           ;arpv4.c: 130: if((ip_database_info.ipv4_myAddress) && ((ip_database_info.ipv4_myAddress
      +                          ) == ((((uint32_t)header.tpa&(uint32_t)0xff000000) >> 24) | (((uint32_t)header.tpa&(uint
      +                          32_t)0x00ff0000) >> 8) | (((uint32_t)header.tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_
      +                          t
 18977                           
 18978                           ; BSR set to: 0
 18979  01271E  0102               	movlb	2	; () banked
 18980  012720  5100               	movf	_ip_database_info& (0+255),w,b
 18981  012722  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 18982  012724  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 18983  012726  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 18984  012728  B4D8               	btfsc	status,2,c
 18985  01272A  D238               	goto	l321
 18986                           
 18987                           ; BSR set to: 2
 18988  01272C  0EFF               	movlw	255
 18989  01272E  0100               	movlb	0	; () banked
 18990  012730  15A2               	andwf	(ARPV4_Packet@header+24)& (0+255),w,b
 18991  012732  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 18992  012734  0E00               	movlw	0
 18993  012736  15A3               	andwf	(ARPV4_Packet@header+25)& (0+255),w,b
 18994  012738  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 18995  01273A  0E00               	movlw	0
 18996  01273C  15A4               	andwf	(ARPV4_Packet@header+26)& (0+255),w,b
 18997  01273E  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 18998  012740  0E00               	movlw	0
 18999  012742  15A5               	andwf	(ARPV4_Packet@header+27)& (0+255),w,b
 19000  012744  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 19001  012746  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 19002  01274A  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 19003  01274C  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 19004  01274E  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 19005  012750  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 19006  012754  0E00               	movlw	0
 19007  012756  14DE               	andwf	postinc2,w,c
 19008  012758  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 19009  01275A  0EFF               	movlw	255
 19010  01275C  14DE               	andwf	postinc2,w,c
 19011  01275E  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 19012  012760  0E00               	movlw	0
 19013  012762  14DE               	andwf	postinc2,w,c
 19014  012764  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 19015  012766  0E00               	movlw	0
 19016  012768  14DE               	andwf	postinc2,w,c
 19017  01276A  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 19018  01276C  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 19019  012770  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 19020  012774  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 19021  012778  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 19022  01277A  C0A2  F068         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 19023  01277E  C0A3  F069         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 19024  012782  C0A4  F06A         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 19025  012786  C0A5  F06B         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 19026  01278A  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 19027  01278E  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 19028  012792  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 19029  012796  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 19030  012798  0E00               	movlw	0
 19031  01279A  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 19032  01279C  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 19033  01279E  0EFF               	movlw	255
 19034  0127A0  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 19035  0127A2  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 19036  0127A4  0E00               	movlw	0
 19037  0127A6  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 19038  0127A8  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 19039  0127AA  0E00               	movlw	0
 19040  0127AC  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 19041  0127AE  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 19042  0127B0  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 19043  0127B4  0E00               	movlw	0
 19044  0127B6  14DE               	andwf	postinc2,w,c
 19045  0127B8  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 19046  0127BA  0E00               	movlw	0
 19047  0127BC  14DE               	andwf	postinc2,w,c
 19048  0127BE  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 19049  0127C0  0E00               	movlw	0
 19050  0127C2  14DE               	andwf	postinc2,w,c
 19051  0127C4  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 19052  0127C6  0EFF               	movlw	255
 19053  0127C8  14DE               	andwf	postinc2,w,c
 19054  0127CA  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 19055  0127CC  0E19               	movlw	25
 19056  0127CE  D005               	goto	u11630
 19057  0127D0                     u11635:
 19058  0127D0  90D8               	bcf	status,0,c
 19059  0127D2  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 19060  0127D4  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 19061  0127D6  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 19062  0127D8  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 19063  0127DA                     u11630:
 19064  0127DA  2EE8               	decfsz	wreg,f,c
 19065  0127DC  D7F9               	goto	u11635
 19066  0127DE  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 19067  0127E0  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 19068  0127E2  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 19069  0127E4  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 19070  0127E6  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 19071  0127E8  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 19072  0127EA  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 19073  0127EC  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 19074  0127EE  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 19075  0127F0  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 19076  0127F2  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 19077  0127F4  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 19078  0127F6  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 19079  0127F8  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 19080  0127FA  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 19081  0127FC  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 19082  0127FE  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 19083  012800  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 19084  012802  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 19085  012804  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 19086  012806  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 19087  012808  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 19088  01280A  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 19089  01280C  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 19090  01280E  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 19091  012810  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 19092  012812  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 19093  012814  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 19094  012816  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 19095  012818  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 19096  01281A  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 19097  01281C  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 19098  01281E  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 19099  012820  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 19100  012822  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 19101  012824  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 19102  012826  0102               	movlb	2	; () banked
 19103  012828  5100               	movf	_ip_database_info& (0+255),w,b
 19104  01282A  0100               	movlb	0	; () banked
 19105  01282C  197C               	xorwf	(??_ARPV4_Packet+28)& (0+255),w,b
 19106  01282E  E10F               	bnz	u11641
 19107  012830  0102               	movlb	2	; () banked
 19108  012832  5101               	movf	(_ip_database_info+1)& (0+255),w,b
 19109  012834  0100               	movlb	0	; () banked
 19110  012836  197D               	xorwf	(??_ARPV4_Packet+29)& (0+255),w,b
 19111  012838  E10A               	bnz	u11641
 19112  01283A  0102               	movlb	2	; () banked
 19113  01283C  5102               	movf	(_ip_database_info+2)& (0+255),w,b
 19114  01283E  0100               	movlb	0	; () banked
 19115  012840  197E               	xorwf	(??_ARPV4_Packet+30)& (0+255),w,b
 19116  012842  E105               	bnz	u11641
 19117  012844  0102               	movlb	2	; () banked
 19118  012846  5103               	movf	(_ip_database_info+3)& (0+255),w,b
 19119  012848  0100               	movlb	0	; () banked
 19120  01284A  197F               	xorwf	(??_ARPV4_Packet+31)& (0+255),w,b
 19121  01284C  A4D8               	btfss	status,2,c
 19122  01284E                     u11641:
 19123  01284E  D1A6               	goto	l321
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;arpv4.c: 131: {
 19127                           ;arpv4.c: 132: if(!mergeFlag)
 19128  012850  5182               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
 19129  012852  A4D8               	btfss	status,2,c
 19130  012854  D0CE               	goto	l322
 19131                           
 19132                           ; BSR set to: 0
 19133                           ;arpv4.c: 133: {
 19134                           ;arpv4.c: 135: entryPointer = arpMap;
 19135  012856  0E04               	movlw	low _arpMap
 19136  012858  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 19137  01285A  0E03               	movlw	high _arpMap
 19138  01285C  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 19139                           
 19140                           ;arpv4.c: 136: arpMap_t *arpPtr = arpMap;
 19141  01285E  0E04               	movlw	low _arpMap
 19142  012860  6F84               	movwf	ARPV4_Packet@arpPtr& (0+255),b
 19143  012862  0E03               	movlw	high _arpMap
 19144  012864  6F85               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
 19145                           
 19146                           ; BSR set to: 0
 19147                           ;arpv4.c: 137: for(uint8_t x=8; x !=0; x--)
 19148  012866  0E08               	movlw	8
 19149  012868  6F87               	movwf	ARPV4_Packet@x_939& (0+255),b
 19150  01286A                     l11592:
 19151                           
 19152                           ; BSR set to: 0
 19153  01286A  5187               	movf	ARPV4_Packet@x_939& (0+255),w,b
 19154  01286C  B4D8               	btfsc	status,2,c
 19155  01286E  D01A               	goto	u11680
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;arpv4.c: 138: {
 19159                           ;arpv4.c: 139: if(entryPointer->age < arpPtr->age)
 19160                           
 19161                           ; BSR set to: 0
 19162                           
 19163                           ; BSR set to: 0
 19164  012870  EE20 F00C          	lfsr	2,12
 19165  012874  5184               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
 19166  012876  26D9               	addwf	fsr2l,f,c
 19167  012878  5185               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
 19168  01287A  22DA               	addwfc	fsr2h,f,c
 19169  01287C  EE10 F00C          	lfsr	1,12
 19170  012880  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 19171  012882  26E1               	addwf	fsr1l,f,c
 19172  012884  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 19173  012886  22E2               	addwfc	fsr1h,f,c
 19174  012888  50DE               	movf	postinc2,w,c
 19175  01288A  5CE6               	subwf	postinc1,w,c
 19176  01288C  B0D8               	btfsc	status,0,c
 19177  01288E  D004               	goto	l325
 19178                           
 19179                           ; BSR set to: 0
 19180                           ;arpv4.c: 140: {
 19181                           ;arpv4.c: 141: entryPointer = arpPtr;
 19182  012890  C084  F088         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 19183  012894  C085  F089         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 19184  012898                     l325:
 19185                           
 19186                           ; BSR set to: 0
 19187                           ;arpv4.c: 142: }
 19188                           ;arpv4.c: 144: arpPtr++;
 19189  012898  0E0D               	movlw	13
 19190  01289A  2784               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
 19191  01289C  0E00               	movlw	0
 19192  01289E  2385               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
 19193                           
 19194                           ; BSR set to: 0
 19195  0128A0  0787               	decf	ARPV4_Packet@x_939& (0+255),f,b
 19196  0128A2  D7E3               	goto	l11592
 19197  0128A4                     u11680:
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;arpv4.c: 145: }
 19201                           ;arpv4.c: 148: entryPointer->age = 0;
 19202                           
 19203                           ; BSR set to: 0
 19204  0128A4  EE20 F00C          	lfsr	2,12
 19205  0128A8  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 19206  0128AA  26D9               	addwf	fsr2l,f,c
 19207  0128AC  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 19208  0128AE  22DA               	addwfc	fsr2h,f,c
 19209  0128B0  0E00               	movlw	0
 19210  0128B2  6EDF               	movwf	indf2,c
 19211                           
 19212                           ; BSR set to: 0
 19213                           ;arpv4.c: 149: entryPointer->macAddress.s = header.sha.s;
 19214  0128B4  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 19215  0128B8  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 19216  0128BC  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 19217  0128C0  0E05               	movlw	5
 19218  0128C2                     u11691:
 19219  0128C2  CFDB FFE3          	movff	plusw2,plusw1
 19220  0128C6  06E8               	decf	wreg,f,c
 19221  0128C8  E2FC               	bc	u11691
 19222                           
 19223                           ; BSR set to: 0
 19224                           ;arpv4.c: 150: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 19225  0128CA  0EFF               	movlw	255
 19226  0128CC  1598               	andwf	(ARPV4_Packet@header+14)& (0+255),w,b
 19227  0128CE  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 19228  0128D0  0E00               	movlw	0
 19229  0128D2  1599               	andwf	(ARPV4_Packet@header+15)& (0+255),w,b
 19230  0128D4  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 19231  0128D6  0E00               	movlw	0
 19232  0128D8  159A               	andwf	(ARPV4_Packet@header+16)& (0+255),w,b
 19233  0128DA  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 19234  0128DC  0E00               	movlw	0
 19235  0128DE  159B               	andwf	(ARPV4_Packet@header+17)& (0+255),w,b
 19236  0128E0  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 19237  0128E2  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 19238  0128E6  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 19239  0128E8  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 19240  0128EA  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 19241  0128EC  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 19242  0128F0  0E00               	movlw	0
 19243  0128F2  14DE               	andwf	postinc2,w,c
 19244  0128F4  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 19245  0128F6  0EFF               	movlw	255
 19246  0128F8  14DE               	andwf	postinc2,w,c
 19247  0128FA  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 19248  0128FC  0E00               	movlw	0
 19249  0128FE  14DE               	andwf	postinc2,w,c
 19250  012900  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 19251  012902  0E00               	movlw	0
 19252  012904  14DE               	andwf	postinc2,w,c
 19253  012906  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 19254  012908  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 19255  01290C  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 19256  012910  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 19257  012914  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 19258  012916  C098  F068         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 19259  01291A  C099  F069         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 19260  01291E  C09A  F06A         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 19261  012922  C09B  F06B         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 19262  012926  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 19263  01292A  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 19264  01292E  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 19265  012932  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 19266  012934  0E00               	movlw	0
 19267  012936  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 19268  012938  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 19269  01293A  0EFF               	movlw	255
 19270  01293C  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 19271  01293E  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 19272  012940  0E00               	movlw	0
 19273  012942  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 19274  012944  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 19275  012946  0E00               	movlw	0
 19276  012948  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 19277  01294A  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 19278  01294C  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 19279  012950  0E00               	movlw	0
 19280  012952  14DE               	andwf	postinc2,w,c
 19281  012954  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 19282  012956  0E00               	movlw	0
 19283  012958  14DE               	andwf	postinc2,w,c
 19284  01295A  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 19285  01295C  0E00               	movlw	0
 19286  01295E  14DE               	andwf	postinc2,w,c
 19287  012960  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 19288  012962  0EFF               	movlw	255
 19289  012964  14DE               	andwf	postinc2,w,c
 19290  012966  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 19291  012968  0E19               	movlw	25
 19292  01296A  D005               	goto	u11700
 19293  01296C                     u11705:
 19294  01296C  90D8               	bcf	status,0,c
 19295  01296E  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 19296  012970  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 19297  012972  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 19298  012974  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 19299  012976                     u11700:
 19300  012976  2EE8               	decfsz	wreg,f,c
 19301  012978  D7F9               	goto	u11705
 19302  01297A  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 19303  01297C  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 19304  01297E  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 19305  012980  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 19306  012982  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 19307  012984  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 19308  012986  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 19309  012988  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 19310  01298A  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 19311  01298C  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 19312  01298E  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 19313  012990  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 19314  012992  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 19315  012994  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 19316  012996  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 19317  012998  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 19318  01299A  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 19319  01299C  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 19320  01299E  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 19321  0129A0  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 19322  0129A2  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 19323  0129A4  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 19324  0129A6  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 19325  0129A8  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 19326  0129AA  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 19327  0129AC  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 19328  0129AE  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 19329  0129B0  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 19330  0129B2  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 19331  0129B4  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 19332  0129B6  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 19333  0129B8  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 19334  0129BA  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 19335  0129BC  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 19336  0129BE  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 19337  0129C0  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 19338  0129C2  EE20 F006          	lfsr	2,6
 19339  0129C6  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 19340  0129C8  26D9               	addwf	fsr2l,f,c
 19341  0129CA  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 19342  0129CC  22DA               	addwfc	fsr2h,f,c
 19343  0129CE  C07C  FFDE         	movff	??_ARPV4_Packet+28,postinc2
 19344  0129D2  C07D  FFDE         	movff	??_ARPV4_Packet+29,postinc2
 19345  0129D6  C07E  FFDE         	movff	??_ARPV4_Packet+30,postinc2
 19346  0129DA  C07F  FFDE         	movff	??_ARPV4_Packet+31,postinc2
 19347                           
 19348                           ; BSR set to: 0
 19349                           ;arpv4.c: 151: entryPointer->protocolType = header.ptype;
 19350  0129DE  EE20 F00A          	lfsr	2,10
 19351  0129E2  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 19352  0129E4  26D9               	addwf	fsr2l,f,c
 19353  0129E6  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 19354  0129E8  22DA               	addwfc	fsr2h,f,c
 19355  0129EA  C08C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 19356  0129EE  C08D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 19357  0129F2                     l322:
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;arpv4.c: 152: }
 19361                           ;arpv4.c: 153: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
 19362                           
 19363                           ; BSR set to: 0
 19364  0129F2  0591               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
 19365  0129F4  1190               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
 19366  0129F6  A4D8               	btfss	status,2,c
 19367  0129F8  0012               	return	
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;arpv4.c: 154: {
 19371                           ;arpv4.c: 155: ret = ETH_WriteStart(&header.sha ,0x0806);
 19372  0129FA  0E92               	movlw	low (ARPV4_Packet@header+8)
 19373  0129FC  6E25               	movwf	ETH_WriteStart@dest_mac,c
 19374  0129FE  0E00               	movlw	high (ARPV4_Packet@header+8)
 19375  012A00  6E26               	movwf	ETH_WriteStart@dest_mac+1,c
 19376  012A02  0E08               	movlw	8
 19377  012A04  6E28               	movwf	ETH_WriteStart@type+1,c
 19378  012A06  0E06               	movlw	6
 19379  012A08  6E27               	movwf	ETH_WriteStart@type,c
 19380  012A0A  ECAC  F09F         	call	_ETH_WriteStart	;wreg free
 19381  012A0E  0100               	movlb	0	; () banked
 19382  012A10  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;arpv4.c: 156: if(ret == SUCCESS)
 19386  012A12  0583               	decf	ARPV4_Packet@ret& (0+255),w,b
 19387  012A14  A4D8               	btfss	status,2,c
 19388  012A16  0012               	return	
 19389                           
 19390                           ; BSR set to: 0
 19391                           ;arpv4.c: 157: {
 19392                           ;arpv4.c: 159: header.tha.s = header.sha.s;
 19393  012A18  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 19394  012A1C  EE10  F09C         	lfsr	1,ARPV4_Packet@header+18
 19395  012A20  0E05               	movlw	5
 19396  012A22                     u11731:
 19397  012A22  CFDB FFE3          	movff	plusw2,plusw1
 19398  012A26  06E8               	decf	wreg,f,c
 19399  012A28  E2FC               	bc	u11731
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;arpv4.c: 160: memcpy((void*)&header.sha.s, (void*)&hostMacAddress.s, sizeof(mac48Addres
      +                          s_t));
 19403  012A2A  0E92               	movlw	low (ARPV4_Packet@header+8)
 19404  012A2C  6E13               	movwf	memcpy@d1,c
 19405  012A2E  0E00               	movlw	high (ARPV4_Packet@header+8)
 19406  012A30  6E14               	movwf	memcpy@d1+1,c
 19407  012A32  0E84               	movlw	low _hostMacAddress
 19408  012A34  6E15               	movwf	memcpy@s1,c
 19409  012A36  0E02               	movlw	high _hostMacAddress
 19410  012A38  6E16               	movwf	memcpy@s1+1,c
 19411  012A3A  0E00               	movlw	0
 19412  012A3C  6E18               	movwf	memcpy@n+1,c
 19413  012A3E  0E06               	movlw	6
 19414  012A40  6E17               	movwf	memcpy@n,c
 19415  012A42  EC1B  F0B2         	call	_memcpy	;wreg free
 19416                           
 19417                           ;arpv4.c: 161: header.tpa = header.spa;
 19418  012A46  C098  F0A2         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 19419  012A4A  C099  F0A3         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 19420  012A4E  C09A  F0A4         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 19421  012A52  C09B  F0A5         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 19422                           
 19423                           ;arpv4.c: 162: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
 19424  012A56  0EFF               	movlw	255
 19425  012A58  0102               	movlb	2	; () banked
 19426  012A5A  1500               	andwf	_ip_database_info& (0+255),w,b
 19427  012A5C  0100               	movlb	0	; () banked
 19428  012A5E  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 19429  012A60  0E00               	movlw	0
 19430  012A62  0102               	movlb	2	; () banked
 19431  012A64  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 19432  012A66  0100               	movlb	0	; () banked
 19433  012A68  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
 19434  012A6A  0E00               	movlw	0
 19435  012A6C  0102               	movlb	2	; () banked
 19436  012A6E  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 19437  012A70  0100               	movlb	0	; () banked
 19438  012A72  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
 19439  012A74  0E00               	movlw	0
 19440  012A76  0102               	movlb	2	; () banked
 19441  012A78  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 19442  012A7A  0100               	movlb	0	; () banked
 19443  012A7C  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
 19444  012A7E  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 19445  012A82  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 19446  012A84  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 19447  012A86  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 19448  012A88  0E00               	movlw	0
 19449  012A8A  0102               	movlb	2	; () banked
 19450  012A8C  1500               	andwf	_ip_database_info& (0+255),w,b
 19451  012A8E  0100               	movlb	0	; () banked
 19452  012A90  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 19453  012A92  0EFF               	movlw	255
 19454  012A94  0102               	movlb	2	; () banked
 19455  012A96  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 19456  012A98  0100               	movlb	0	; () banked
 19457  012A9A  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 19458  012A9C  0E00               	movlw	0
 19459  012A9E  0102               	movlb	2	; () banked
 19460  012AA0  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 19461  012AA2  0100               	movlb	0	; () banked
 19462  012AA4  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 19463  012AA6  0E00               	movlw	0
 19464  012AA8  0102               	movlb	2	; () banked
 19465  012AAA  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 19466  012AAC  0100               	movlb	0	; () banked
 19467  012AAE  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 19468  012AB0  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 19469  012AB4  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 19470  012AB8  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 19471  012ABC  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 19472  012ABE  C200  F068         	movff	_ip_database_info,??_ARPV4_Packet+8
 19473  012AC2  C201  F069         	movff	_ip_database_info+1,??_ARPV4_Packet+9
 19474  012AC6  C202  F06A         	movff	_ip_database_info+2,??_ARPV4_Packet+10
 19475  012ACA  C203  F06B         	movff	_ip_database_info+3,??_ARPV4_Packet+11
 19476  012ACE  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 19477  012AD2  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 19478  012AD6  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 19479  012ADA  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 19480  012ADC  0E00               	movlw	0
 19481  012ADE  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
 19482  012AE0  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 19483  012AE2  0EFF               	movlw	255
 19484  012AE4  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
 19485  012AE6  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 19486  012AE8  0E00               	movlw	0
 19487  012AEA  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
 19488  012AEC  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
 19489  012AEE  0E00               	movlw	0
 19490  012AF0  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
 19491  012AF2  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
 19492  012AF4  0E00               	movlw	0
 19493  012AF6  0102               	movlb	2	; () banked
 19494  012AF8  1500               	andwf	_ip_database_info& (0+255),w,b
 19495  012AFA  0100               	movlb	0	; () banked
 19496  012AFC  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 19497  012AFE  0E00               	movlw	0
 19498  012B00  0102               	movlb	2	; () banked
 19499  012B02  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 19500  012B04  0100               	movlb	0	; () banked
 19501  012B06  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 19502  012B08  0E00               	movlw	0
 19503  012B0A  0102               	movlb	2	; () banked
 19504  012B0C  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 19505  012B0E  0100               	movlb	0	; () banked
 19506  012B10  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 19507  012B12  0EFF               	movlw	255
 19508  012B14  0102               	movlb	2	; () banked
 19509  012B16  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 19510  012B18  0100               	movlb	0	; () banked
 19511  012B1A  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 19512  012B1C  0E19               	movlw	25
 19513  012B1E  D005               	goto	u11740
 19514  012B20                     u11745:
 19515  012B20  90D8               	bcf	status,0,c
 19516  012B22  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 19517  012B24  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 19518  012B26  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 19519  012B28  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 19520  012B2A                     u11740:
 19521  012B2A  2EE8               	decfsz	wreg,f,c
 19522  012B2C  D7F9               	goto	u11745
 19523  012B2E  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 19524  012B30  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 19525  012B32  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 19526  012B34  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 19527  012B36  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 19528  012B38  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 19529  012B3A  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 19530  012B3C  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 19531  012B3E  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 19532  012B40  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 19533  012B42  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 19534  012B44  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 19535  012B46  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 19536  012B48  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 19537  012B4A  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 19538  012B4C  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 19539  012B4E  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 19540  012B50  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 19541  012B52  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 19542  012B54  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 19543  012B56  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 19544  012B58  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 19545  012B5A  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 19546  012B5C  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 19547  012B5E  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 19548  012B60  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 19549  012B62  6F98               	movwf	(ARPV4_Packet@header+14)& (0+255),b
 19550  012B64  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 19551  012B66  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 19552  012B68  6F99               	movwf	(ARPV4_Packet@header+15)& (0+255),b
 19553  012B6A  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 19554  012B6C  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 19555  012B6E  6F9A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
 19556  012B70  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 19557  012B72  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 19558  012B74  6F9B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;arpv4.c: 163: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 19562  012B76  0E02               	movlw	2
 19563  012B78  6F91               	movwf	(ARPV4_Packet@header+7)& (0+255),b
 19564  012B7A  0E00               	movlw	0
 19565  012B7C  6F90               	movwf	(ARPV4_Packet@header+6)& (0+255),b
 19566                           
 19567                           ; BSR set to: 0
 19568                           ;arpv4.c: 164: ETH_WriteBlock((char*)&header,sizeof(header));
 19569  012B7E  0E8A               	movlw	low ARPV4_Packet@header
 19570  012B80  6E13               	movwf	ETH_WriteBlock@buffer,c
 19571  012B82  0E00               	movlw	high ARPV4_Packet@header
 19572  012B84  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 19573  012B86  0E00               	movlw	0
 19574  012B88  6E16               	movwf	ETH_WriteBlock@length+1,c
 19575  012B8A  0E1C               	movlw	28
 19576  012B8C  6E15               	movwf	ETH_WriteBlock@length,c
 19577  012B8E  ECB8  F0B2         	call	_ETH_WriteBlock	;wreg free
 19578                           
 19579                           ;arpv4.c: 167: ret = ETH_Send();
 19580  012B92  EC88  F0AC         	call	_ETH_Send	;wreg free
 19581  012B96  0100               	movlb	0	; () banked
 19582  012B98  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;arpv4.c: 168: }
 19586                           ;arpv4.c: 169: }
 19587                           ;arpv4.c: 170: }
 19588                           
 19589                           ; BSR set to: 0
 19590  012B9A  0012               	return	
 19591  012B9C                     l321:
 19592                           
 19593                           ;arpv4.c: 171: else
 19594                           ;arpv4.c: 172: {
 19595                           ;arpv4.c: 173: ret = ARP_IP_NOT_MATCHED;
 19596                           
 19597                           ; BSR set to: 0
 19598  012B9C  0E0E               	movlw	14
 19599  012B9E  0100               	movlb	0	; () banked
 19600  012BA0  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 19601                           
 19602                           ; BSR set to: 0
 19603                           
 19604                           ; BSR set to: 0
 19605  012BA2  0012               	return	
 19606  012BA4                     __end_of_ARPV4_Packet:
 19607                           	opt stack 0
 19608                           tosu	equ	0xFFF
 19609                           tosh	equ	0xFFE
 19610                           tosl	equ	0xFFD
 19611                           pclath	equ	0xFFA
 19612                           tblptru	equ	0xFF8
 19613                           tblptrh	equ	0xFF7
 19614                           tblptrl	equ	0xFF6
 19615                           tablat	equ	0xFF5
 19616                           prodh	equ	0xFF4
 19617                           prodl	equ	0xFF3
 19618                           intcon	equ	0xFF2
 19619                           indf0	equ	0xFEF
 19620                           postinc0	equ	0xFEE
 19621                           fsr0h	equ	0xFEA
 19622                           fsr0l	equ	0xFE9
 19623                           wreg	equ	0xFE8
 19624                           indf1	equ	0xFE7
 19625                           postinc1	equ	0xFE6
 19626                           postdec1	equ	0xFE5
 19627                           plusw1	equ	0xFE3
 19628                           fsr1h	equ	0xFE2
 19629                           fsr1l	equ	0xFE1
 19630                           indf2	equ	0xFDF
 19631                           postinc2	equ	0xFDE
 19632                           postdec2	equ	0xFDD
 19633                           plusw2	equ	0xFDB
 19634                           fsr2h	equ	0xFDA
 19635                           fsr2l	equ	0xFD9
 19636                           status	equ	0xFD8
 19637                           
 19638 ;; *************** function _ETH_ReadBlock *****************
 19639 ;; Defined at:
 19640 ;;		line 520 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19641 ;; Parameters:    Size  Location     Type
 19642 ;;  buffer          2   18[COMRAM] PTR void 
 19643 ;;		 -> tcpHeader(20), DHCP_Handler@chaddr(16), udpHeader(8), ICMP_Receive@icmpHdr(4), 
 19644 ;;		 -> Network_Read@header(14), ipv4Header(20), NULL(0), ARPV4_Packet@header(28), 
 19645 ;;  length          2   20[COMRAM] unsigned int 
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;  p               2   24[COMRAM] PTR unsigned char 
 19648 ;;		 -> tcpHeader(20), DHCP_Handler@chaddr(16), udpHeader(8), ICMP_Receive@icmpHdr(4), 
 19649 ;;		 -> Network_Read@header(14), ipv4Header(20), NULL(0), ARPV4_Packet@header(28), 
 19650 ;;  len             2   22[COMRAM] unsigned int 
 19651 ;; Return value:  Size  Location     Type
 19652 ;;                  2   18[COMRAM] unsigned int 
 19653 ;; Registers used:
 19654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19655 ;; Tracked objects:
 19656 ;;		On entry : 0/0
 19657 ;;		On exit  : 0/0
 19658 ;;		Unchanged: 0/0
 19659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19663 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19664 ;;Total ram usage:        8 bytes
 19665 ;; Hardware stack levels used:    1
 19666 ;; Hardware stack levels required when called:    5
 19667 ;; This function calls:
 19668 ;;		_ETH_EdataRead
 19669 ;; This function is called by:
 19670 ;;		_ARPV4_Packet
 19671 ;;		_IPV4_Packet
 19672 ;;		_Network_Read
 19673 ;;		_ICMP_Receive
 19674 ;;		_UDP_Receive
 19675 ;;		_DHCP_Handler
 19676 ;;		_TCP_PayloadSave
 19677 ;;		_TCP_Recv
 19678 ;; This function uses a non-reentrant model
 19679 ;;
 19680                           
 19681                           	psect	text72
 19682  016264                     __ptext72:
 19683                           	opt stack 0
 19684  016264                     _ETH_ReadBlock:
 19685                           	opt stack 21
 19686                           
 19687                           ;ETHxxJ6x_driver.c: 522: uint16_t len = 0;
 19688                           
 19689                           ; BSR set to: 0
 19690                           ;incstack = 0
 19691  016264  0E00               	movlw	0
 19692  016266  6E18               	movwf	ETH_ReadBlock@len+1,c
 19693  016268  0E00               	movlw	0
 19694  01626A  6E17               	movwf	ETH_ReadBlock@len,c
 19695                           
 19696                           ;ETHxxJ6x_driver.c: 523: char *p = buffer;
 19697  01626C  C013  F019         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 19698  016270  C014  F01A         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 19699                           
 19700                           ;ETHxxJ6x_driver.c: 524: while(rxPacketStatusVector.byteCount && length)
 19701  016274  D013               	goto	l572
 19702  016276                     
 19703                           ;ETHxxJ6x_driver.c: 525: {
 19704                           ;ETHxxJ6x_driver.c: 526: *p++ = ETH_EdataRead();
 19705  016276  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 19706  01627A  C019  FFD9         	movff	ETH_ReadBlock@p,fsr2l
 19707  01627E  C01A  FFDA         	movff	ETH_ReadBlock@p+1,fsr2h
 19708  016282  6EDF               	movwf	indf2,c
 19709  016284  4A19               	infsnz	ETH_ReadBlock@p,f,c
 19710  016286  2A1A               	incf	ETH_ReadBlock@p+1,f,c
 19711                           
 19712                           ;ETHxxJ6x_driver.c: 527: len ++;
 19713  016288  4A17               	infsnz	ETH_ReadBlock@len,f,c
 19714  01628A  2A18               	incf	ETH_ReadBlock@len+1,f,c
 19715                           
 19716                           ;ETHxxJ6x_driver.c: 528: length --;
 19717  01628C  0615               	decf	ETH_ReadBlock@length,f,c
 19718  01628E  A0D8               	btfss	status,0,c
 19719  016290  0616               	decf	ETH_ReadBlock@length+1,f,c
 19720                           
 19721                           ;ETHxxJ6x_driver.c: 529: rxPacketStatusVector.byteCount --;
 19722  016292  0102               	movlb	2	; () banked
 19723  016294  073E               	decf	_rxPacketStatusVector& (0+255),f,b
 19724  016296  A0D8               	btfss	status,0,c
 19725  016298  073F               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
 19726                           
 19727                           ; BSR set to: 2
 19728                           ;ETHxxJ6x_driver.c: 530: ethData.error = 0;
 19729  01629A  9124               	bcf	_ethData& (0+255),0,b	;volatile
 19730  01629C                     l572:
 19731                           
 19732                           ; BSR set to: 2
 19733  01629C  0102               	movlb	2	; () banked
 19734  01629E  513E               	movf	_rxPacketStatusVector& (0+255),w,b
 19735  0162A0  113F               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 19736  0162A2  B4D8               	btfsc	status,2,c
 19737  0162A4  D004               	goto	u9450
 19738                           
 19739                           ; BSR set to: 2
 19740  0162A6  5015               	movf	ETH_ReadBlock@length,w,c
 19741  0162A8  1016               	iorwf	ETH_ReadBlock@length+1,w,c
 19742  0162AA  A4D8               	btfss	status,2,c
 19743  0162AC  D7E4               	goto	l573
 19744  0162AE                     u9450:
 19745                           
 19746                           ; BSR set to: 2
 19747                           ;ETHxxJ6x_driver.c: 531: }
 19748                           ;ETHxxJ6x_driver.c: 532: return len;
 19749                           
 19750                           ; BSR set to: 2
 19751  0162AE  C017  F013         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 19752  0162B2  C018  F014         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 19753                           
 19754                           ; BSR set to: 2
 19755  0162B6  0012               	return		;funcret
 19756  0162B8                     __end_of_ETH_ReadBlock:
 19757                           	opt stack 0
 19758                           tosu	equ	0xFFF
 19759                           tosh	equ	0xFFE
 19760                           tosl	equ	0xFFD
 19761                           pclath	equ	0xFFA
 19762                           tblptru	equ	0xFF8
 19763                           tblptrh	equ	0xFF7
 19764                           tblptrl	equ	0xFF6
 19765                           tablat	equ	0xFF5
 19766                           prodh	equ	0xFF4
 19767                           prodl	equ	0xFF3
 19768                           intcon	equ	0xFF2
 19769                           indf0	equ	0xFEF
 19770                           postinc0	equ	0xFEE
 19771                           fsr0h	equ	0xFEA
 19772                           fsr0l	equ	0xFE9
 19773                           wreg	equ	0xFE8
 19774                           indf1	equ	0xFE7
 19775                           postinc1	equ	0xFE6
 19776                           postdec1	equ	0xFE5
 19777                           plusw1	equ	0xFE3
 19778                           fsr1h	equ	0xFE2
 19779                           fsr1l	equ	0xFE1
 19780                           indf2	equ	0xFDF
 19781                           postinc2	equ	0xFDE
 19782                           postdec2	equ	0xFDD
 19783                           plusw2	equ	0xFDB
 19784                           fsr2h	equ	0xFDA
 19785                           fsr2l	equ	0xFD9
 19786                           status	equ	0xFD8
 19787                           
 19788 ;; *************** function _ETH_EventHandler *****************
 19789 ;; Defined at:
 19790 ;;		line 263 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19791 ;; Parameters:    Size  Location     Type
 19792 ;;		None
 19793 ;; Auto vars:     Size  Location     Type
 19794 ;;		None
 19795 ;; Return value:  Size  Location     Type
 19796 ;;                  1    wreg      void 
 19797 ;; Registers used:
 19798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19799 ;; Tracked objects:
 19800 ;;		On entry : 0/0
 19801 ;;		On exit  : 0/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19808 ;;Total ram usage:        0 bytes
 19809 ;; Hardware stack levels used:    1
 19810 ;; Hardware stack levels required when called:    7
 19811 ;; This function calls:
 19812 ;;		_ETH_CheckLinkUp
 19813 ;;		_ETH_RemovePacket
 19814 ;;		_ETH_SendQueued
 19815 ;;		_ETH_Shift_Tx_Packets
 19816 ;;		_PHY_Read
 19817 ;; This function is called by:
 19818 ;;		_Network_Manage
 19819 ;; This function uses a non-reentrant model
 19820 ;;
 19821                           
 19822                           	psect	text73
 19823  016102                     __ptext73:
 19824                           	opt stack 0
 19825  016102                     _ETH_EventHandler:
 19826                           	opt stack 22
 19827                           
 19828                           ;ETHxxJ6x_driver.c: 266: PIR2bits.ETHIF = 0;
 19829                           
 19830                           ; BSR set to: 2
 19831                           ;incstack = 0
 19832  016102  9AA1               	bcf	4001,5,c	;volatile
 19833                           
 19834                           ;ETHxxJ6x_driver.c: 268: if (EIRbits.LINKIF)
 19835  016104  A860               	btfss	3936,4,c	;volatile
 19836  016106  D007               	goto	l511
 19837                           
 19838                           ;ETHxxJ6x_driver.c: 269: {
 19839                           ;ETHxxJ6x_driver.c: 270: PHY_Read(PHIR);
 19840  016108  0E13               	movlw	19
 19841  01610A  EC50  F0AF         	call	_PHY_Read
 19842                           
 19843                           ;ETHxxJ6x_driver.c: 272: ethData.linkChange = 1;
 19844  01610E  0102               	movlb	2	; () banked
 19845  016110  8924               	bsf	_ethData& (0+255),4,b	;volatile
 19846                           
 19847                           ;ETHxxJ6x_driver.c: 274: ETH_CheckLinkUp();
 19848  016112  EC23  F0B4         	call	_ETH_CheckLinkUp	;wreg free
 19849  016116                     l511:
 19850                           
 19851                           ;ETHxxJ6x_driver.c: 275: }
 19852                           ;ETHxxJ6x_driver.c: 277: if(EIRbits.RXERIF)
 19853  016116  B060               	btfsc	3936,0,c	;volatile
 19854                           
 19855                           ;ETHxxJ6x_driver.c: 278: {
 19856                           ;ETHxxJ6x_driver.c: 281: EIRbits.RXERIF = 0;
 19857  016118  9060               	bcf	3936,0,c	;volatile
 19858                           
 19859                           ;ETHxxJ6x_driver.c: 282: }
 19860                           ;ETHxxJ6x_driver.c: 284: if (EIRbits.TXERIF)
 19861  01611A  B260               	btfsc	3936,1,c	;volatile
 19862                           
 19863                           ;ETHxxJ6x_driver.c: 285: {
 19864                           ;ETHxxJ6x_driver.c: 286: EIRbits.TXERIF = 0;
 19865  01611C  9260               	bcf	3936,1,c	;volatile
 19866                           
 19867                           ;ETHxxJ6x_driver.c: 287: }
 19868                           ;ETHxxJ6x_driver.c: 289: if(EIRbits.TXIF)
 19869  01611E  A660               	btfss	3936,3,c	;volatile
 19870  016120  D014               	goto	l515
 19871                           
 19872                           ;ETHxxJ6x_driver.c: 290: {
 19873                           ;ETHxxJ6x_driver.c: 291: EIRbits.TXIF = 0;
 19874  016122  9660               	bcf	3936,3,c	;volatile
 19875                           
 19876                           ;ETHxxJ6x_driver.c: 292: ETH_RemovePacket( (uint16_t)pTail );
 19877  016124  C041  F013         	movff	_pTail,ETH_RemovePacket@packetHandle
 19878  016128  C042  F014         	movff	_pTail+1,ETH_RemovePacket@packetHandle+1
 19879  01612C  EC8C  F0AA         	call	_ETH_RemovePacket	;wreg free
 19880                           
 19881                           ;ETHxxJ6x_driver.c: 293: if( ethListSize > 0 )
 19882  016130  5046               	movf	_ethListSize,w,c
 19883  016132  B4D8               	btfsc	status,2,c
 19884  016134  D00A               	goto	l515
 19885                           
 19886                           ;ETHxxJ6x_driver.c: 294: {
 19887                           ;ETHxxJ6x_driver.c: 295: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 19888  016136  0E0C               	movlw	12
 19889  016138  010E               	movlb	14	; () banked
 19890  01613A  5DE2               	subwf	226,w,b	;volatile
 19891  01613C  0E1A               	movlw	26
 19892  01613E  59E3               	subwfb	227,w,b	;volatile
 19893  016140  B0D8               	btfsc	status,0,c
 19894                           
 19895                           ; BSR set to: 14
 19896                           ;ETHxxJ6x_driver.c: 296: {
 19897                           ;ETHxxJ6x_driver.c: 298: ETH_Shift_Tx_Packets();
 19898  016142  ECAA  F0A3         	call	_ETH_Shift_Tx_Packets	;wreg free
 19899                           
 19900                           ;ETHxxJ6x_driver.c: 299: }
 19901                           ;ETHxxJ6x_driver.c: 302: ETH_SendQueued();
 19902  016146  EC96  F0AE         	call	_ETH_SendQueued	;wreg free
 19903  01614A                     l515:
 19904                           
 19905                           ;ETHxxJ6x_driver.c: 303: }
 19906                           ;ETHxxJ6x_driver.c: 304: }
 19907                           ;ETHxxJ6x_driver.c: 306: if (EIRbits.PKTIF)
 19908  01614A  AC60               	btfss	3936,6,c	;volatile
 19909  01614C  0012               	return	
 19910                           
 19911                           ;ETHxxJ6x_driver.c: 307: {
 19912                           ;ETHxxJ6x_driver.c: 309: if(ethData.pktReady == 0)
 19913  01614E  0102               	movlb	2	; () banked
 19914  016150  B324               	btfsc	_ethData& (0+255),1,b	;volatile
 19915  016152  0012               	return	
 19916                           
 19917                           ; BSR set to: 2
 19918                           ;ETHxxJ6x_driver.c: 310: {
 19919                           ;ETHxxJ6x_driver.c: 311: ethData.pktReady = 1;
 19920  016154  8324               	bsf	_ethData& (0+255),1,b	;volatile
 19921                           
 19922                           ;ETHxxJ6x_driver.c: 312: EIEbits.PKTIE = 0;
 19923  016156  010E               	movlb	14	; () banked
 19924  016158  9DFB               	bcf	251,6,b	;volatile
 19925                           
 19926                           ; BSR set to: 14
 19927  01615A  0012               	return	
 19928  01615C                     __end_of_ETH_EventHandler:
 19929                           	opt stack 0
 19930                           tosu	equ	0xFFF
 19931                           tosh	equ	0xFFE
 19932                           tosl	equ	0xFFD
 19933                           pclath	equ	0xFFA
 19934                           tblptru	equ	0xFF8
 19935                           tblptrh	equ	0xFF7
 19936                           tblptrl	equ	0xFF6
 19937                           tablat	equ	0xFF5
 19938                           prodh	equ	0xFF4
 19939                           prodl	equ	0xFF3
 19940                           intcon	equ	0xFF2
 19941                           indf0	equ	0xFEF
 19942                           postinc0	equ	0xFEE
 19943                           fsr0h	equ	0xFEA
 19944                           fsr0l	equ	0xFE9
 19945                           wreg	equ	0xFE8
 19946                           indf1	equ	0xFE7
 19947                           postinc1	equ	0xFE6
 19948                           postdec1	equ	0xFE5
 19949                           plusw1	equ	0xFE3
 19950                           fsr1h	equ	0xFE2
 19951                           fsr1l	equ	0xFE1
 19952                           indf2	equ	0xFDF
 19953                           postinc2	equ	0xFDE
 19954                           postdec2	equ	0xFDD
 19955                           plusw2	equ	0xFDB
 19956                           fsr2h	equ	0xFDA
 19957                           fsr2l	equ	0xFD9
 19958                           status	equ	0xFD8
 19959                           
 19960 ;; *************** function _ETH_RemovePacket *****************
 19961 ;; Defined at:
 19962 ;;		line 1232 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;  packetHandle    2   18[COMRAM] unsigned int 
 19965 ;; Auto vars:     Size  Location     Type
 19966 ;;  pPacket         2   22[COMRAM] PTR struct .
 19967 ;;		 -> RAM(3935), NULL(0), 
 19968 ;; Return value:  Size  Location     Type
 19969 ;;                  1    wreg      void 
 19970 ;; Registers used:
 19971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19972 ;; Tracked objects:
 19973 ;;		On entry : 0/0
 19974 ;;		On exit  : 0/0
 19975 ;;		Unchanged: 0/0
 19976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19981 ;;Total ram usage:        6 bytes
 19982 ;; Hardware stack levels used:    1
 19983 ;; Hardware stack levels required when called:    4
 19984 ;; This function calls:
 19985 ;;		Nothing
 19986 ;; This function is called by:
 19987 ;;		_ETH_EventHandler
 19988 ;; This function uses a non-reentrant model
 19989 ;;
 19990                           
 19991                           	psect	text74
 19992  015518                     __ptext74:
 19993                           	opt stack 0
 19994  015518                     _ETH_RemovePacket:
 19995                           	opt stack 24
 19996                           
 19997                           ;ETHxxJ6x_driver.c: 1234: txPacket_t* pPacket = (0);
 19998                           
 19999                           ;incstack = 0
 20000  015518  0E00               	movlw	0
 20001  01551A  6E17               	movwf	ETH_RemovePacket@pPacket,c
 20002  01551C  0E00               	movlw	0
 20003  01551E  6E18               	movwf	ETH_RemovePacket@pPacket+1,c
 20004                           
 20005                           ;ETHxxJ6x_driver.c: 1239: if( (packetHandle == (0)) || (ethListSize == 0) )
 20006  015520  5013               	movf	ETH_RemovePacket@packetHandle,w,c
 20007  015522  1014               	iorwf	ETH_RemovePacket@packetHandle+1,w,c
 20008  015524  B4D8               	btfsc	status,2,c
 20009  015526  0012               	return	
 20010  015528  5046               	movf	_ethListSize,w,c
 20011  01552A  B4D8               	btfsc	status,2,c
 20012  01552C  0012               	return	
 20013                           
 20014                           ;ETHxxJ6x_driver.c: 1242: }
 20015                           ;ETHxxJ6x_driver.c: 1244: pPacket = (txPacket_t*)packetHandle;
 20016                           
 20017                           ;ETHxxJ6x_driver.c: 1240: {
 20018                           ;ETHxxJ6x_driver.c: 1241: return;
 20019  01552E  C013  F017         	movff	ETH_RemovePacket@packetHandle,ETH_RemovePacket@pPacket
 20020  015532  C014  F018         	movff	ETH_RemovePacket@packetHandle+1,ETH_RemovePacket@pPacket+1
 20021                           
 20022                           ;ETHxxJ6x_driver.c: 1262: if( pPacket->nextPacket == (0) )
 20023  015536  EE20 F008          	lfsr	2,8
 20024  01553A  5017               	movf	ETH_RemovePacket@pPacket,w,c
 20025  01553C  26D9               	addwf	fsr2l,f,c
 20026  01553E  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 20027  015540  22DA               	addwfc	fsr2h,f,c
 20028  015542  50DE               	movf	postinc2,w,c
 20029  015544  10DE               	iorwf	postinc2,w,c
 20030  015546  A4D8               	btfss	status,2,c
 20031  015548  D018               	goto	l789
 20032                           
 20033                           ;ETHxxJ6x_driver.c: 1263: {
 20034                           ;ETHxxJ6x_driver.c: 1264: pTail = pPacket->prevPacket;
 20035  01554A  EE20 F006          	lfsr	2,6
 20036  01554E  5017               	movf	ETH_RemovePacket@pPacket,w,c
 20037  015550  26D9               	addwf	fsr2l,f,c
 20038  015552  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 20039  015554  22DA               	addwfc	fsr2h,f,c
 20040  015556  CFDE F041          	movff	postinc2,_pTail
 20041  01555A  CFDD F042          	movff	postdec2,_pTail+1
 20042                           
 20043                           ;ETHxxJ6x_driver.c: 1265: if( pTail != (0) )
 20044  01555E  5041               	movf	_pTail,w,c
 20045  015560  1042               	iorwf	_pTail+1,w,c
 20046  015562  B4D8               	btfsc	status,2,c
 20047  015564  D00A               	goto	l789
 20048                           
 20049                           ;ETHxxJ6x_driver.c: 1266: {
 20050                           ;ETHxxJ6x_driver.c: 1267: pTail->nextPacket = (0);
 20051  015566  EE20 F008          	lfsr	2,8
 20052  01556A  5041               	movf	_pTail,w,c
 20053  01556C  26D9               	addwf	fsr2l,f,c
 20054  01556E  5042               	movf	_pTail+1,w,c
 20055  015570  22DA               	addwfc	fsr2h,f,c
 20056  015572  0E00               	movlw	0
 20057  015574  6EDE               	movwf	postinc2,c
 20058  015576  0E00               	movlw	0
 20059  015578  6EDD               	movwf	postdec2,c
 20060  01557A                     l789:
 20061                           
 20062                           ;ETHxxJ6x_driver.c: 1268: }
 20063                           ;ETHxxJ6x_driver.c: 1269: }
 20064                           ;ETHxxJ6x_driver.c: 1271: if( pPacket->prevPacket == (0) )
 20065  01557A  EE20 F006          	lfsr	2,6
 20066  01557E  5017               	movf	ETH_RemovePacket@pPacket,w,c
 20067  015580  26D9               	addwf	fsr2l,f,c
 20068  015582  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 20069  015584  22DA               	addwfc	fsr2h,f,c
 20070  015586  50DE               	movf	postinc2,w,c
 20071  015588  10DE               	iorwf	postinc2,w,c
 20072  01558A  A4D8               	btfss	status,2,c
 20073  01558C  D018               	goto	l791
 20074                           
 20075                           ;ETHxxJ6x_driver.c: 1272: {
 20076                           ;ETHxxJ6x_driver.c: 1273: pHead = pPacket->nextPacket;
 20077  01558E  EE20 F008          	lfsr	2,8
 20078  015592  5017               	movf	ETH_RemovePacket@pPacket,w,c
 20079  015594  26D9               	addwf	fsr2l,f,c
 20080  015596  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 20081  015598  22DA               	addwfc	fsr2h,f,c
 20082  01559A  CFDE F043          	movff	postinc2,_pHead
 20083  01559E  CFDD F044          	movff	postdec2,_pHead+1
 20084                           
 20085                           ;ETHxxJ6x_driver.c: 1274: if( pHead != (0) )
 20086  0155A2  5043               	movf	_pHead,w,c
 20087  0155A4  1044               	iorwf	_pHead+1,w,c
 20088  0155A6  B4D8               	btfsc	status,2,c
 20089  0155A8  D00A               	goto	l791
 20090                           
 20091                           ;ETHxxJ6x_driver.c: 1275: {
 20092                           ;ETHxxJ6x_driver.c: 1276: pHead->prevPacket = (0);
 20093  0155AA  EE20 F006          	lfsr	2,6
 20094  0155AE  5043               	movf	_pHead,w,c
 20095  0155B0  26D9               	addwf	fsr2l,f,c
 20096  0155B2  5044               	movf	_pHead+1,w,c
 20097  0155B4  22DA               	addwfc	fsr2h,f,c
 20098  0155B6  0E00               	movlw	0
 20099  0155B8  6EDE               	movwf	postinc2,c
 20100  0155BA  0E00               	movlw	0
 20101  0155BC  6EDD               	movwf	postdec2,c
 20102  0155BE                     l791:
 20103                           
 20104                           ;ETHxxJ6x_driver.c: 1277: }
 20105                           ;ETHxxJ6x_driver.c: 1278: }
 20106                           ;ETHxxJ6x_driver.c: 1281: pPacket->flags = 0;
 20107  0155BE  C017  FFD9         	movff	ETH_RemovePacket@pPacket,fsr2l
 20108  0155C2  C018  FFDA         	movff	ETH_RemovePacket@pPacket+1,fsr2h
 20109  0155C6  0E00               	movlw	0
 20110  0155C8  6EDE               	movwf	postinc2,c
 20111  0155CA  0E00               	movlw	0
 20112  0155CC  6EDD               	movwf	postdec2,c
 20113                           
 20114                           ;ETHxxJ6x_driver.c: 1282: pPacket->prevPacket = (0);
 20115  0155CE  EE20 F006          	lfsr	2,6
 20116  0155D2  5017               	movf	ETH_RemovePacket@pPacket,w,c
 20117  0155D4  26D9               	addwf	fsr2l,f,c
 20118  0155D6  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 20119  0155D8  22DA               	addwfc	fsr2h,f,c
 20120  0155DA  0E00               	movlw	0
 20121  0155DC  6EDE               	movwf	postinc2,c
 20122  0155DE  0E00               	movlw	0
 20123  0155E0  6EDD               	movwf	postdec2,c
 20124                           
 20125                           ;ETHxxJ6x_driver.c: 1283: pPacket->nextPacket = (0);
 20126  0155E2  EE20 F008          	lfsr	2,8
 20127  0155E6  5017               	movf	ETH_RemovePacket@pPacket,w,c
 20128  0155E8  26D9               	addwf	fsr2l,f,c
 20129  0155EA  5018               	movf	ETH_RemovePacket@pPacket+1,w,c
 20130  0155EC  22DA               	addwfc	fsr2h,f,c
 20131  0155EE  0E00               	movlw	0
 20132  0155F0  6EDE               	movwf	postinc2,c
 20133  0155F2  0E00               	movlw	0
 20134  0155F4  6EDD               	movwf	postdec2,c
 20135                           
 20136                           ;ETHxxJ6x_driver.c: 1285: ethListSize --;
 20137  0155F6  0646               	decf	_ethListSize,f,c
 20138  0155F8  0012               	return	
 20139  0155FA                     __end_of_ETH_RemovePacket:
 20140                           	opt stack 0
 20141                           tosu	equ	0xFFF
 20142                           tosh	equ	0xFFE
 20143                           tosl	equ	0xFFD
 20144                           pclath	equ	0xFFA
 20145                           tblptru	equ	0xFF8
 20146                           tblptrh	equ	0xFF7
 20147                           tblptrl	equ	0xFF6
 20148                           tablat	equ	0xFF5
 20149                           prodh	equ	0xFF4
 20150                           prodl	equ	0xFF3
 20151                           intcon	equ	0xFF2
 20152                           indf0	equ	0xFEF
 20153                           postinc0	equ	0xFEE
 20154                           fsr0h	equ	0xFEA
 20155                           fsr0l	equ	0xFE9
 20156                           wreg	equ	0xFE8
 20157                           indf1	equ	0xFE7
 20158                           postinc1	equ	0xFE6
 20159                           postdec1	equ	0xFE5
 20160                           plusw1	equ	0xFE3
 20161                           fsr1h	equ	0xFE2
 20162                           fsr1l	equ	0xFE1
 20163                           indf2	equ	0xFDF
 20164                           postinc2	equ	0xFDE
 20165                           postdec2	equ	0xFDD
 20166                           plusw2	equ	0xFDB
 20167                           fsr2h	equ	0xFDA
 20168                           fsr2l	equ	0xFD9
 20169                           status	equ	0xFD8
 20170                           
 20171 ;; *************** function _ETH_CheckLinkUp *****************
 20172 ;; Defined at:
 20173 ;;		line 243 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 20174 ;; Parameters:    Size  Location     Type
 20175 ;;		None
 20176 ;; Auto vars:     Size  Location     Type
 20177 ;;  value           4   29[COMRAM] unsigned long 
 20178 ;; Return value:  Size  Location     Type
 20179 ;;                  1    wreg      unsigned char 
 20180 ;; Registers used:
 20181 ;;		wreg, status,2, status,0, cstack
 20182 ;; Tracked objects:
 20183 ;;		On entry : 0/0
 20184 ;;		On exit  : 0/0
 20185 ;;		Unchanged: 0/0
 20186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20188 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20191 ;;Total ram usage:        4 bytes
 20192 ;; Hardware stack levels used:    1
 20193 ;; Hardware stack levels required when called:    6
 20194 ;; This function calls:
 20195 ;;		_PHY_Read
 20196 ;; This function is called by:
 20197 ;;		_ETH_Init
 20198 ;;		_ETH_EventHandler
 20199 ;;		_Network_WaitForLink
 20200 ;; This function uses a non-reentrant model
 20201 ;;
 20202                           
 20203                           	psect	text75
 20204  016846                     __ptext75:
 20205                           	opt stack 0
 20206  016846                     _ETH_CheckLinkUp:
 20207                           	opt stack 21
 20208                           
 20209                           ;ETHxxJ6x_driver.c: 245: uint32_t value;
 20210                           ;ETHxxJ6x_driver.c: 247: value = PHY_Read(PHSTAT2);
 20211                           
 20212                           ;incstack = 0
 20213  016846  0E11               	movlw	17
 20214  016848  EC50  F0AF         	call	_PHY_Read
 20215  01684C  C015  F01E         	movff	?_PHY_Read,ETH_CheckLinkUp@value
 20216  016850  C016  F01F         	movff	?_PHY_Read+1,ETH_CheckLinkUp@value+1
 20217  016854  C017  F020         	movff	?_PHY_Read+2,ETH_CheckLinkUp@value+2
 20218  016858  C018  F021         	movff	?_PHY_Read+3,ETH_CheckLinkUp@value+3
 20219                           
 20220                           ;ETHxxJ6x_driver.c: 248: if(value & 0x0400)
 20221  01685C  A41F               	btfss	ETH_CheckLinkUp@value+1,2,c
 20222  01685E  D004               	goto	l506
 20223                           
 20224                           ;ETHxxJ6x_driver.c: 249: {
 20225                           ;ETHxxJ6x_driver.c: 250: ethData.up = 1;
 20226  016860  0102               	movlb	2	; () banked
 20227  016862  8524               	bsf	_ethData& (0+255),2,b	;volatile
 20228                           
 20229                           ; BSR set to: 2
 20230                           ;ETHxxJ6x_driver.c: 251: return 1;
 20231  016864  0E01               	movlw	1
 20232                           
 20233                           ; BSR set to: 2
 20234                           ;ETHxxJ6x_driver.c: 252: }
 20235                           
 20236                           ; BSR set to: 2
 20237  016866  0012               	return	
 20238  016868                     l506:
 20239                           
 20240                           ;ETHxxJ6x_driver.c: 253: else
 20241                           ;ETHxxJ6x_driver.c: 254: {
 20242                           ;ETHxxJ6x_driver.c: 255: ethData.up = 0;
 20243  016868  0102               	movlb	2	; () banked
 20244  01686A  9524               	bcf	_ethData& (0+255),2,b	;volatile
 20245                           
 20246                           ; BSR set to: 2
 20247                           ;ETHxxJ6x_driver.c: 256: return 0;
 20248  01686C  0E00               	movlw	0
 20249                           
 20250                           ; BSR set to: 2
 20251  01686E  0012               	return	
 20252  016870                     __end_of_ETH_CheckLinkUp:
 20253                           	opt stack 0
 20254                           tosu	equ	0xFFF
 20255                           tosh	equ	0xFFE
 20256                           tosl	equ	0xFFD
 20257                           pclath	equ	0xFFA
 20258                           tblptru	equ	0xFF8
 20259                           tblptrh	equ	0xFF7
 20260                           tblptrl	equ	0xFF6
 20261                           tablat	equ	0xFF5
 20262                           prodh	equ	0xFF4
 20263                           prodl	equ	0xFF3
 20264                           intcon	equ	0xFF2
 20265                           indf0	equ	0xFEF
 20266                           postinc0	equ	0xFEE
 20267                           fsr0h	equ	0xFEA
 20268                           fsr0l	equ	0xFE9
 20269                           wreg	equ	0xFE8
 20270                           indf1	equ	0xFE7
 20271                           postinc1	equ	0xFE6
 20272                           postdec1	equ	0xFE5
 20273                           plusw1	equ	0xFE3
 20274                           fsr1h	equ	0xFE2
 20275                           fsr1l	equ	0xFE1
 20276                           indf2	equ	0xFDF
 20277                           postinc2	equ	0xFDE
 20278                           postdec2	equ	0xFDD
 20279                           plusw2	equ	0xFDB
 20280                           fsr2h	equ	0xFDA
 20281                           fsr2l	equ	0xFD9
 20282                           status	equ	0xFD8
 20283                           
 20284 ;; *************** function _PHY_Read *****************
 20285 ;; Defined at:
 20286 ;;		line 403 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 20287 ;; Parameters:    Size  Location     Type
 20288 ;;  reg             1    wreg     enum E5175
 20289 ;; Auto vars:     Size  Location     Type
 20290 ;;  reg             1   24[COMRAM] enum E5175
 20291 ;;  ret             4   25[COMRAM] long 
 20292 ;; Return value:  Size  Location     Type
 20293 ;;                  4   20[COMRAM] long 
 20294 ;; Registers used:
 20295 ;;		wreg, status,2, status,0, cstack
 20296 ;; Tracked objects:
 20297 ;;		On entry : 0/0
 20298 ;;		On exit  : 0/0
 20299 ;;		Unchanged: 0/0
 20300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20302 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20304 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20305 ;;Total ram usage:        9 bytes
 20306 ;; Hardware stack levels used:    1
 20307 ;; Hardware stack levels required when called:    5
 20308 ;; This function calls:
 20309 ;;		_PHY_WaitForBusy
 20310 ;; This function is called by:
 20311 ;;		_ETH_CheckLinkUp
 20312 ;;		_ETH_EventHandler
 20313 ;; This function uses a non-reentrant model
 20314 ;;
 20315                           
 20316                           	psect	text76
 20317  015EA0                     __ptext76:
 20318                           	opt stack 0
 20319  015EA0                     _PHY_Read:
 20320                           	opt stack 21
 20321                           
 20322                           ; BSR set to: 2
 20323                           ;incstack = 0
 20324                           ;PHY_Read@reg stored from wreg
 20325  015EA0  6E19               	movwf	PHY_Read@reg,c
 20326                           
 20327                           ;ETHxxJ6x_driver.c: 405: int32_t ret = NOERROR;
 20328  015EA2  0E00               	movlw	0
 20329  015EA4  6E1A               	movwf	PHY_Read@ret,c
 20330  015EA6  0E00               	movlw	0
 20331  015EA8  6E1B               	movwf	PHY_Read@ret+1,c
 20332  015EAA  0E00               	movlw	0
 20333  015EAC  6E1C               	movwf	PHY_Read@ret+2,c
 20334  015EAE  0E00               	movlw	0
 20335  015EB0  6E1D               	movwf	PHY_Read@ret+3,c
 20336                           
 20337                           ;ETHxxJ6x_driver.c: 406: if(PHY_WaitForBusy() == NOERROR)
 20338  015EB2  EC40  F0B3         	call	_PHY_WaitForBusy	;wreg free
 20339  015EB6  0900               	iorlw	0
 20340  015EB8  A4D8               	btfss	status,2,c
 20341  015EBA  D01F               	goto	l545
 20342                           
 20343                           ;ETHxxJ6x_driver.c: 407: {
 20344                           ;ETHxxJ6x_driver.c: 408: MIREGADR = reg;
 20345  015EBC  C019  FEB4         	movff	PHY_Read@reg,3764	;volatile
 20346                           
 20347                           ;ETHxxJ6x_driver.c: 409: MICMD = 0;
 20348  015EC0  0E00               	movlw	0
 20349  015EC2  010E               	movlb	14	; () banked
 20350  015EC4  6FB2               	movwf	178,b	;volatile
 20351                           
 20352                           ; BSR set to: 14
 20353                           ;ETHxxJ6x_driver.c: 410: MICMDbits.MIIRD = 1;
 20354  015EC6  81B2               	bsf	178,0,b	;volatile
 20355                           
 20356                           ; BSR set to: 14
 20357                           ;ETHxxJ6x_driver.c: 411: __nop(); __nop();
 20358  015EC8  F000               	nop	
 20359  015ECA  F000               	nop	
 20360                           
 20361                           ;ETHxxJ6x_driver.c: 412: if(PHY_WaitForBusy() == BUSY_TIMEOUT)
 20362  015ECC  EC40  F0B3         	call	_PHY_WaitForBusy	;wreg free
 20363  015ED0  0AFF               	xorlw	-1
 20364  015ED2  A4D8               	btfss	status,2,c
 20365  015ED4  D009               	goto	l546
 20366                           
 20367                           ;ETHxxJ6x_driver.c: 413: {
 20368                           ;ETHxxJ6x_driver.c: 414: ret = READ_FAIL;
 20369  015ED6  0EFD               	movlw	253
 20370  015ED8  6E1A               	movwf	PHY_Read@ret,c
 20371  015EDA  0EFF               	movlw	255
 20372  015EDC  6E1B               	movwf	PHY_Read@ret+1,c
 20373  015EDE  0EFF               	movlw	255
 20374  015EE0  6E1C               	movwf	PHY_Read@ret+2,c
 20375  015EE2  0EFF               	movlw	255
 20376  015EE4  6E1D               	movwf	PHY_Read@ret+3,c
 20377                           
 20378                           ;ETHxxJ6x_driver.c: 415: }
 20379  015EE6  D00D               	goto	l548
 20380  015EE8                     l546:
 20381                           
 20382                           ;ETHxxJ6x_driver.c: 416: else
 20383                           ;ETHxxJ6x_driver.c: 417: {
 20384                           ;ETHxxJ6x_driver.c: 418: MICMDbits.MIIRD = 0;
 20385  015EE8  010E               	movlb	14	; () banked
 20386  015EEA  91B2               	bcf	178,0,b	;volatile
 20387                           
 20388                           ; BSR set to: 14
 20389                           ;ETHxxJ6x_driver.c: 419: ret = MIRD;
 20390  015EEC  CEB8 F01A          	movff	3768,PHY_Read@ret	;volatile
 20391  015EF0  CEB9 F01B          	movff	3769,PHY_Read@ret+1	;volatile
 20392  015EF4  6A1C               	clrf	PHY_Read@ret+2,c
 20393  015EF6  6A1D               	clrf	PHY_Read@ret+3,c
 20394                           
 20395                           ; BSR set to: 14
 20396                           ;ETHxxJ6x_driver.c: 420: }
 20397                           ;ETHxxJ6x_driver.c: 421: }
 20398  015EF8  D004               	goto	l548
 20399  015EFA                     l545:
 20400                           
 20401                           ;ETHxxJ6x_driver.c: 422: else
 20402                           ;ETHxxJ6x_driver.c: 423: {
 20403                           ;ETHxxJ6x_driver.c: 424: ret = BUSY_TIMEOUT;
 20404  015EFA  681A               	setf	PHY_Read@ret,c
 20405  015EFC  681B               	setf	PHY_Read@ret+1,c
 20406  015EFE  681C               	setf	PHY_Read@ret+2,c
 20407  015F00  681D               	setf	PHY_Read@ret+3,c
 20408  015F02                     l548:
 20409                           
 20410                           ;ETHxxJ6x_driver.c: 425: }
 20411                           ;ETHxxJ6x_driver.c: 426: return ret;
 20412  015F02  C01A  F015         	movff	PHY_Read@ret,?_PHY_Read
 20413  015F06  C01B  F016         	movff	PHY_Read@ret+1,?_PHY_Read+1
 20414  015F0A  C01C  F017         	movff	PHY_Read@ret+2,?_PHY_Read+2
 20415  015F0E  C01D  F018         	movff	PHY_Read@ret+3,?_PHY_Read+3
 20416  015F12  0012               	return		;funcret
 20417  015F14                     __end_of_PHY_Read:
 20418                           	opt stack 0
 20419                           tosu	equ	0xFFF
 20420                           tosh	equ	0xFFE
 20421                           tosl	equ	0xFFD
 20422                           pclath	equ	0xFFA
 20423                           tblptru	equ	0xFF8
 20424                           tblptrh	equ	0xFF7
 20425                           tblptrl	equ	0xFF6
 20426                           tablat	equ	0xFF5
 20427                           prodh	equ	0xFF4
 20428                           prodl	equ	0xFF3
 20429                           intcon	equ	0xFF2
 20430                           indf0	equ	0xFEF
 20431                           postinc0	equ	0xFEE
 20432                           fsr0h	equ	0xFEA
 20433                           fsr0l	equ	0xFE9
 20434                           wreg	equ	0xFE8
 20435                           indf1	equ	0xFE7
 20436                           postinc1	equ	0xFE6
 20437                           postdec1	equ	0xFE5
 20438                           plusw1	equ	0xFE3
 20439                           fsr1h	equ	0xFE2
 20440                           fsr1l	equ	0xFE1
 20441                           indf2	equ	0xFDF
 20442                           postinc2	equ	0xFDE
 20443                           postdec2	equ	0xFDD
 20444                           plusw2	equ	0xFDB
 20445                           fsr2h	equ	0xFDA
 20446                           fsr2l	equ	0xFD9
 20447                           status	equ	0xFD8
 20448                           
 20449 ;; *************** function _PHY_WaitForBusy *****************
 20450 ;; Defined at:
 20451 ;;		line 351 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 20452 ;; Parameters:    Size  Location     Type
 20453 ;;		None
 20454 ;; Auto vars:     Size  Location     Type
 20455 ;;  timeout         1   19[COMRAM] unsigned char 
 20456 ;;  ret             1   18[COMRAM] enum E5184
 20457 ;; Return value:  Size  Location     Type
 20458 ;;                  1    wreg      enum E5184
 20459 ;; Registers used:
 20460 ;;		wreg, status,2, status,0
 20461 ;; Tracked objects:
 20462 ;;		On entry : 0/0
 20463 ;;		On exit  : 0/0
 20464 ;;		Unchanged: 0/0
 20465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20470 ;;Total ram usage:        2 bytes
 20471 ;; Hardware stack levels used:    1
 20472 ;; Hardware stack levels required when called:    4
 20473 ;; This function calls:
 20474 ;;		Nothing
 20475 ;; This function is called by:
 20476 ;;		_PHY_Write
 20477 ;;		_PHY_Read
 20478 ;; This function uses a non-reentrant model
 20479 ;;
 20480                           
 20481                           	psect	text77
 20482  016680                     __ptext77:
 20483                           	opt stack 0
 20484  016680                     _PHY_WaitForBusy:
 20485                           	opt stack 21
 20486                           
 20487                           ;ETHxxJ6x_driver.c: 353: phyError_t ret = NOERROR;
 20488                           
 20489                           ;incstack = 0
 20490  016680  0E00               	movlw	0
 20491  016682  6E13               	movwf	PHY_WaitForBusy@ret,c
 20492                           
 20493                           ;ETHxxJ6x_driver.c: 354: uint8_t timeout;
 20494                           ;ETHxxJ6x_driver.c: 356: for(timeout = 0; timeout < 10;timeout++) __nop();
 20495  016684  0E00               	movlw	0
 20496  016686  6E14               	movwf	PHY_WaitForBusy@timeout,c
 20497  016688                     l10176:
 20498  016688  0E09               	movlw	9
 20499  01668A  6414               	cpfsgt	PHY_WaitForBusy@timeout,c
 20500  01668C  D001               	goto	l531
 20501  01668E  D003               	goto	u9630
 20502  016690                     l531:
 20503  016690  F000               	nop	
 20504  016692  2A14               	incf	PHY_WaitForBusy@timeout,f,c
 20505  016694  D7F9               	goto	l10176
 20506  016696                     u9630:
 20507                           
 20508                           ;ETHxxJ6x_driver.c: 357: timeout = 90;
 20509  016696  0E5A               	movlw	90
 20510  016698  6E14               	movwf	PHY_WaitForBusy@timeout,c
 20511                           
 20512                           ;ETHxxJ6x_driver.c: 358: while(MISTATbits.BUSY && --timeout) __nop();
 20513  01669A  D001               	goto	l533
 20514  01669C                     l534:
 20515                           
 20516                           ; BSR set to: 14
 20517  01669C  F000               	nop	
 20518  01669E                     l533:
 20519  01669E  010E               	movlb	14	; () banked
 20520  0166A0  A18A               	btfss	138,0,b	;volatile
 20521  0166A2  D002               	goto	l536
 20522                           
 20523                           ; BSR set to: 14
 20524  0166A4  2E14               	decfsz	PHY_WaitForBusy@timeout,f,c
 20525  0166A6  D7FA               	goto	l534
 20526  0166A8                     l536:
 20527                           
 20528                           ; BSR set to: 14
 20529                           ;ETHxxJ6x_driver.c: 360: if(timeout == 0) ret = BUSY_TIMEOUT;
 20530                           
 20531                           ; BSR set to: 14
 20532                           
 20533                           ; BSR set to: 14
 20534  0166A8  5014               	movf	PHY_WaitForBusy@timeout,w,c
 20535  0166AA  B4D8               	btfsc	status,2,c
 20536                           
 20537                           ; BSR set to: 14
 20538  0166AC  6813               	setf	PHY_WaitForBusy@ret,c
 20539                           
 20540                           ; BSR set to: 14
 20541                           ;ETHxxJ6x_driver.c: 361: return ret;
 20542                           
 20543                           ; BSR set to: 14
 20544  0166AE  5013               	movf	PHY_WaitForBusy@ret,w,c
 20545  0166B0  0012               	return	
 20546  0166B2                     __end_of_PHY_WaitForBusy:
 20547                           	opt stack 0
 20548                           tosu	equ	0xFFF
 20549                           tosh	equ	0xFFE
 20550                           tosl	equ	0xFFD
 20551                           pclath	equ	0xFFA
 20552                           tblptru	equ	0xFF8
 20553                           tblptrh	equ	0xFF7
 20554                           tblptrl	equ	0xFF6
 20555                           tablat	equ	0xFF5
 20556                           prodh	equ	0xFF4
 20557                           prodl	equ	0xFF3
 20558                           intcon	equ	0xFF2
 20559                           indf0	equ	0xFEF
 20560                           postinc0	equ	0xFEE
 20561                           fsr0h	equ	0xFEA
 20562                           fsr0l	equ	0xFE9
 20563                           wreg	equ	0xFE8
 20564                           indf1	equ	0xFE7
 20565                           postinc1	equ	0xFE6
 20566                           postdec1	equ	0xFE5
 20567                           plusw1	equ	0xFE3
 20568                           fsr1h	equ	0xFE2
 20569                           fsr1l	equ	0xFE1
 20570                           indf2	equ	0xFDF
 20571                           postinc2	equ	0xFDE
 20572                           postdec2	equ	0xFDD
 20573                           plusw2	equ	0xFDB
 20574                           fsr2h	equ	0xFDA
 20575                           fsr2l	equ	0xFD9
 20576                           status	equ	0xFD8
 20577                           
 20578 ;; *************** function _DHCP_Manage *****************
 20579 ;; Defined at:
 20580 ;;		line 202 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 20581 ;; Parameters:    Size  Location     Type
 20582 ;;		None
 20583 ;; Auto vars:     Size  Location     Type
 20584 ;;  now             4   82[BANK0 ] long 
 20585 ;; Return value:  Size  Location     Type
 20586 ;;                  1    wreg      void 
 20587 ;; Registers used:
 20588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20589 ;; Tracked objects:
 20590 ;;		On entry : 0/0
 20591 ;;		On exit  : 0/0
 20592 ;;		Unchanged: 0/0
 20593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20595 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20596 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20597 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20598 ;;Total ram usage:        5 bytes
 20599 ;; Hardware stack levels used:    1
 20600 ;; Hardware stack levels required when called:   12
 20601 ;; This function calls:
 20602 ;;		_sendDHCPDISCOVER
 20603 ;;		_sendDHCPREQUEST
 20604 ;;		_time
 20605 ;; This function is called by:
 20606 ;;		_Network_Manage
 20607 ;; This function uses a non-reentrant model
 20608 ;;
 20609                           
 20610                           	psect	text78
 20611  014D5A                     __ptext78:
 20612                           	opt stack 0
 20613  014D5A                     _DHCP_Manage:
 20614                           	opt stack 17
 20615                           
 20616                           ;dhcp_client.c: 204: static time_t managementTimer = 0;
 20617                           ;dhcp_client.c: 205: time_t now;
 20618                           ;dhcp_client.c: 206: now = time(0);
 20619                           
 20620                           ; BSR set to: 14
 20621                           ;incstack = 0
 20622  014D5A  0E00               	movlw	0
 20623  014D5C  6E13               	movwf	time@t,c
 20624  014D5E  0E00               	movlw	0
 20625  014D60  6E14               	movwf	time@t+1,c
 20626  014D62  EC07  F0B1         	call	_time	;wreg free
 20627  014D66  C013  F0B2         	movff	?_time,DHCP_Manage@now
 20628  014D6A  C014  F0B3         	movff	?_time+1,DHCP_Manage@now+1
 20629  014D6E  C015  F0B4         	movff	?_time+2,DHCP_Manage@now+2
 20630  014D72  C016  F0B5         	movff	?_time+3,DHCP_Manage@now+3
 20631                           
 20632                           ;dhcp_client.c: 208: if(managementTimer <= now)
 20633  014D76  0102               	movlb	2	; () banked
 20634  014D78  512E               	movf	DHCP_Manage@managementTimer& (0+255),w,b
 20635  014D7A  0100               	movlb	0	; () banked
 20636  014D7C  5DB2               	subwf	DHCP_Manage@now& (0+255),w,b
 20637  014D7E  0102               	movlb	2	; () banked
 20638  014D80  512F               	movf	(DHCP_Manage@managementTimer+1)& (0+255),w,b
 20639  014D82  0100               	movlb	0	; () banked
 20640  014D84  59B3               	subwfb	(DHCP_Manage@now+1)& (0+255),w,b
 20641  014D86  0102               	movlb	2	; () banked
 20642  014D88  5130               	movf	(DHCP_Manage@managementTimer+2)& (0+255),w,b
 20643  014D8A  0100               	movlb	0	; () banked
 20644  014D8C  59B4               	subwfb	(DHCP_Manage@now+2)& (0+255),w,b
 20645  014D8E  51B5               	movf	(DHCP_Manage@now+3)& (0+255),w,b
 20646  014D90  0A80               	xorlw	128
 20647  014D92  6FB1               	movwf	??_DHCP_Manage& (0+255),b
 20648  014D94  0102               	movlb	2	; () banked
 20649  014D96  5131               	movf	(DHCP_Manage@managementTimer+3)& (0+255),w,b
 20650  014D98  0A80               	xorlw	128
 20651  014D9A  0100               	movlb	0	; () banked
 20652  014D9C  59B1               	subwfb	??_DHCP_Manage& (0+255),w,b
 20653  014D9E  B0D8               	btfsc	status,0,c
 20654  014DA0  D065               	goto	l1326
 20655  014DA2  D073               	goto	l1328
 20656  014DA4                     
 20657                           ;dhcp_client.c: 213: dhcpData.t1 = 4;
 20658                           
 20659                           ; BSR set to: 0
 20660  014DA4  0E04               	movlw	4
 20661  014DA6  0102               	movlb	2	; () banked
 20662  014DA8  6FEA               	movwf	(_dhcpData+36)& (0+255),b
 20663  014DAA  0E00               	movlw	0
 20664  014DAC  6FEB               	movwf	(_dhcpData+37)& (0+255),b
 20665  014DAE  0E00               	movlw	0
 20666  014DB0  6FEC               	movwf	(_dhcpData+38)& (0+255),b
 20667  014DB2  0E00               	movlw	0
 20668  014DB4  6FED               	movwf	(_dhcpData+39)& (0+255),b
 20669  014DB6                     
 20670                           ;dhcp_client.c: 214: dhcpState.tmrClientState = WAITFORTIMER;
 20671  014DB6  0E01               	movlw	1
 20672  014DB8  D036               	goto	L21
 20673  014DBA                     
 20674                           ; BSR set to: 2
 20675                           ;dhcp_client.c: 217: if(dhcpData.t1 == 2)
 20676                           
 20677                           ; BSR set to: 2
 20678  014DBA  0E02               	movlw	2
 20679  014DBC  19EA               	xorwf	(_dhcpData+36)& (0+255),w,b
 20680  014DBE  11EB               	iorwf	(_dhcpData+37)& (0+255),w,b
 20681  014DC0  11EC               	iorwf	(_dhcpData+38)& (0+255),w,b
 20682  014DC2  11ED               	iorwf	(_dhcpData+39)& (0+255),w,b
 20683  014DC4  A4D8               	btfss	status,2,c
 20684  014DC6  D003               	goto	l1330
 20685                           
 20686                           ; BSR set to: 2
 20687                           ;dhcp_client.c: 218: {
 20688                           ;dhcp_client.c: 219: dhcpState.tmrClientState = STARTDISCOVER;
 20689  014DC8  0E02               	movlw	2
 20690  014DCA  6F49               	movwf	(_dhcpState+1)& (0+255),b
 20691                           
 20692                           ;dhcp_client.c: 220: }
 20693  014DCC  D005               	goto	l1331
 20694  014DCE                     l1330:
 20695                           
 20696                           ; BSR set to: 2
 20697                           ;dhcp_client.c: 221: else dhcpData.t1 --;
 20698                           
 20699                           ; BSR set to: 2
 20700  014DCE  07EA               	decf	(_dhcpData+36)& (0+255),f,b
 20701  014DD0  0E00               	movlw	0
 20702  014DD2  5BEB               	subwfb	(_dhcpData+37)& (0+255),f,b
 20703  014DD4  5BEC               	subwfb	(_dhcpData+38)& (0+255),f,b
 20704  014DD6  5BED               	subwfb	(_dhcpData+39)& (0+255),f,b
 20705  014DD8                     l1331:
 20706                           
 20707                           ; BSR set to: 2
 20708                           ;dhcp_client.c: 222: if(dhcpData.t2 == 2)
 20709  014DD8  0E02               	movlw	2
 20710  014DDA  19EE               	xorwf	(_dhcpData+40)& (0+255),w,b
 20711  014DDC  11EF               	iorwf	(_dhcpData+41)& (0+255),w,b
 20712  014DDE  11F0               	iorwf	(_dhcpData+42)& (0+255),w,b
 20713  014DE0  11F1               	iorwf	(_dhcpData+43)& (0+255),w,b
 20714  014DE2  A4D8               	btfss	status,2,c
 20715  014DE4  D002               	goto	l1332
 20716                           
 20717                           ; BSR set to: 2
 20718                           ;dhcp_client.c: 223: {
 20719                           ;dhcp_client.c: 224: dhcpState.tmrClientState = STARTREQUEST;
 20720  014DE6  0E03               	movlw	3
 20721  014DE8  D01E               	goto	L21
 20722  014DEA                     l1332:
 20723                           
 20724                           ; BSR set to: 2
 20725                           ;dhcp_client.c: 226: else dhcpData.t2 --;
 20726                           
 20727                           ; BSR set to: 2
 20728  014DEA  07EE               	decf	(_dhcpData+40)& (0+255),f,b
 20729  014DEC  0E00               	movlw	0
 20730  014DEE  5BEF               	subwfb	(_dhcpData+41)& (0+255),f,b
 20731  014DF0  5BF0               	subwfb	(_dhcpData+42)& (0+255),f,b
 20732  014DF2  5BF1               	subwfb	(_dhcpData+43)& (0+255),f,b
 20733                           
 20734                           ; BSR set to: 2
 20735                           ;dhcp_client.c: 227: break;
 20736  014DF4  D04A               	goto	l1328
 20737  014DF6                     
 20738                           ; BSR set to: 2
 20739                           ;dhcp_client.c: 229: if(sendDHCPDISCOVER())
 20740                           
 20741                           ; BSR set to: 2
 20742  014DF6  EC56  F0AE         	call	_sendDHCPDISCOVER	;wreg free
 20743  014DFA  0900               	iorlw	0
 20744  014DFC  B4D8               	btfsc	status,2,c
 20745  014DFE  D045               	goto	l1328
 20746                           
 20747                           ;dhcp_client.c: 230: {
 20748                           ;dhcp_client.c: 231: dhcpData.t1 = 10;
 20749  014E00  0E0A               	movlw	10
 20750  014E02  0102               	movlb	2	; () banked
 20751  014E04  6FEA               	movwf	(_dhcpData+36)& (0+255),b
 20752  014E06  0E00               	movlw	0
 20753  014E08  6FEB               	movwf	(_dhcpData+37)& (0+255),b
 20754  014E0A  0E00               	movlw	0
 20755  014E0C  6FEC               	movwf	(_dhcpData+38)& (0+255),b
 20756  014E0E  0E00               	movlw	0
 20757  014E10  6FED               	movwf	(_dhcpData+39)& (0+255),b
 20758                           
 20759                           ;dhcp_client.c: 232: dhcpData.t2 = 2147483647;
 20760  014E12  0EFF               	movlw	255
 20761  014E14  6FEE               	movwf	(_dhcpData+40)& (0+255),b
 20762  014E16  0EFF               	movlw	255
 20763  014E18  6FEF               	movwf	(_dhcpData+41)& (0+255),b
 20764  014E1A  0EFF               	movlw	255
 20765  014E1C  6FF0               	movwf	(_dhcpData+42)& (0+255),b
 20766  014E1E  0E7F               	movlw	127
 20767  014E20  6FF1               	movwf	(_dhcpData+43)& (0+255),b
 20768                           
 20769                           ;dhcp_client.c: 233: dhcpState.rxClientState = SELECTING;
 20770  014E22  0E00               	movlw	0
 20771  014E24  D01F               	goto	L19
 20772  014E26                     L21:
 20773  014E26  6F49               	movwf	(_dhcpState+1)& (0+255),b
 20774                           
 20775                           ; BSR set to: 2
 20776                           ;dhcp_client.c: 235: }
 20777                           ;dhcp_client.c: 236: break;
 20778  014E28  D030               	goto	l1328
 20779  014E2A                     
 20780                           ; BSR set to: 2
 20781                           ;dhcp_client.c: 238: if(sendDHCPREQUEST())
 20782                           
 20783                           ; BSR set to: 2
 20784  014E2A  ECA1  F0B5         	call	_sendDHCPREQUEST	;wreg free
 20785  014E2E  0900               	iorlw	0
 20786  014E30  B4D8               	btfsc	status,2,c
 20787  014E32  D02B               	goto	l1328
 20788                           
 20789                           ;dhcp_client.c: 239: {
 20790                           ;dhcp_client.c: 240: dhcpData.t1 = 30;
 20791  014E34  0E1E               	movlw	30
 20792  014E36  0102               	movlb	2	; () banked
 20793  014E38  6FEA               	movwf	(_dhcpData+36)& (0+255),b
 20794  014E3A  0E00               	movlw	0
 20795  014E3C  6FEB               	movwf	(_dhcpData+37)& (0+255),b
 20796  014E3E  0E00               	movlw	0
 20797  014E40  6FEC               	movwf	(_dhcpData+38)& (0+255),b
 20798  014E42  0E00               	movlw	0
 20799  014E44  6FED               	movwf	(_dhcpData+39)& (0+255),b
 20800                           
 20801                           ;dhcp_client.c: 241: dhcpData.t2 = 15;
 20802  014E46  0E0F               	movlw	15
 20803  014E48  6FEE               	movwf	(_dhcpData+40)& (0+255),b
 20804  014E4A  0E00               	movlw	0
 20805  014E4C  6FEF               	movwf	(_dhcpData+41)& (0+255),b
 20806  014E4E  0E00               	movlw	0
 20807  014E50  6FF0               	movwf	(_dhcpData+42)& (0+255),b
 20808  014E52  0E00               	movlw	0
 20809  014E54  6FF1               	movwf	(_dhcpData+43)& (0+255),b
 20810                           
 20811                           ; BSR set to: 2
 20812                           ;dhcp_client.c: 242: if(dhcpState.rxClientState == BOUND )dhcpState.rxClientState = RENE
      +                          WLEASE;
 20813  014E56  0E03               	movlw	3
 20814  014E58  1948               	xorwf	_dhcpState& (0+255),w,b
 20815  014E5A  A4D8               	btfss	status,2,c
 20816  014E5C  D002               	goto	l1338
 20817                           
 20818                           ; BSR set to: 2
 20819  014E5E  0E02               	movlw	2
 20820  014E60  D001               	goto	L19
 20821  014E62                     l1338:
 20822                           
 20823                           ; BSR set to: 2
 20824                           ;dhcp_client.c: 243: else dhcpState.rxClientState = REQUESTING;
 20825                           
 20826                           ; BSR set to: 2
 20827  014E62  0E01               	movlw	1
 20828  014E64                     L19:
 20829  014E64  6F48               	movwf	_dhcpState& (0+255),b
 20830  014E66  D7A7               	goto	L22
 20831  014E68                     
 20832                           ; BSR set to: 2
 20833                           ;dhcp_client.c: 248: dhcpState.tmrClientState = INIT_TIMER;
 20834                           
 20835                           ; BSR set to: 2
 20836  014E68  0E00               	movlw	0
 20837  014E6A  D7DD               	goto	L21
 20838  014E6C                     l1326:
 20839                           
 20840                           ; BSR set to: 2
 20841  014E6C  0102               	movlb	2	; () banked
 20842  014E6E  5149               	movf	(_dhcpState+1)& (0+255),w,b
 20843                           
 20844                           ; Switch size 1, requested type "space"
 20845                           ; Number of cases is 4, Range of values is 0 to 3
 20846                           ; switch strategies available:
 20847                           ; Name         Instructions Cycles
 20848                           ; simple_byte           13     7 (average)
 20849                           ;	Chosen strategy is simple_byte
 20850  014E70  0A00               	xorlw	0	; case 0
 20851  014E72  B4D8               	btfsc	status,2,c
 20852  014E74  D797               	goto	l1327
 20853  014E76  0A01               	xorlw	1	; case 1
 20854  014E78  B4D8               	btfsc	status,2,c
 20855  014E7A  D79F               	goto	l1329
 20856  014E7C  0A03               	xorlw	3	; case 2
 20857  014E7E  B4D8               	btfsc	status,2,c
 20858  014E80  D7BA               	goto	l1334
 20859  014E82  0A01               	xorlw	1	; case 3
 20860  014E84  B4D8               	btfsc	status,2,c
 20861  014E86  D7D1               	goto	l1336
 20862  014E88  D7EF               	goto	l1340
 20863  014E8A                     l1328:
 20864                           
 20865                           ;dhcp_client.c: 251: }
 20866                           ;dhcp_client.c: 252: managementTimer = now + 1;
 20867                           
 20868                           ; BSR set to: 2
 20869                           
 20870                           ; BSR set to: 2
 20871  014E8A  0E01               	movlw	1
 20872  014E8C  0100               	movlb	0	; () banked
 20873  014E8E  25B2               	addwf	DHCP_Manage@now& (0+255),w,b
 20874  014E90  0102               	movlb	2	; () banked
 20875  014E92  6F2E               	movwf	DHCP_Manage@managementTimer& (0+255),b
 20876  014E94  0E00               	movlw	0
 20877  014E96  0100               	movlb	0	; () banked
 20878  014E98  21B3               	addwfc	(DHCP_Manage@now+1)& (0+255),w,b
 20879  014E9A  0102               	movlb	2	; () banked
 20880  014E9C  6F2F               	movwf	(DHCP_Manage@managementTimer+1)& (0+255),b
 20881  014E9E  0E00               	movlw	0
 20882  014EA0  0100               	movlb	0	; () banked
 20883  014EA2  21B4               	addwfc	(DHCP_Manage@now+2)& (0+255),w,b
 20884  014EA4  0102               	movlb	2	; () banked
 20885  014EA6  6F30               	movwf	(DHCP_Manage@managementTimer+2)& (0+255),b
 20886  014EA8  0E00               	movlw	0
 20887  014EAA  0100               	movlb	0	; () banked
 20888  014EAC  21B5               	addwfc	(DHCP_Manage@now+3)& (0+255),w,b
 20889  014EAE  0102               	movlb	2	; () banked
 20890  014EB0  6F31               	movwf	(DHCP_Manage@managementTimer+3)& (0+255),b
 20891                           
 20892                           ; BSR set to: 2
 20893  014EB2  0012               	return		;funcret
 20894  014EB4                     __end_of_DHCP_Manage:
 20895                           	opt stack 0
 20896                           tosu	equ	0xFFF
 20897                           tosh	equ	0xFFE
 20898                           tosl	equ	0xFFD
 20899                           pclath	equ	0xFFA
 20900                           tblptru	equ	0xFF8
 20901                           tblptrh	equ	0xFF7
 20902                           tblptrl	equ	0xFF6
 20903                           tablat	equ	0xFF5
 20904                           prodh	equ	0xFF4
 20905                           prodl	equ	0xFF3
 20906                           intcon	equ	0xFF2
 20907                           indf0	equ	0xFEF
 20908                           postinc0	equ	0xFEE
 20909                           fsr0h	equ	0xFEA
 20910                           fsr0l	equ	0xFE9
 20911                           wreg	equ	0xFE8
 20912                           indf1	equ	0xFE7
 20913                           postinc1	equ	0xFE6
 20914                           postdec1	equ	0xFE5
 20915                           plusw1	equ	0xFE3
 20916                           fsr1h	equ	0xFE2
 20917                           fsr1l	equ	0xFE1
 20918                           indf2	equ	0xFDF
 20919                           postinc2	equ	0xFDE
 20920                           postdec2	equ	0xFDD
 20921                           plusw2	equ	0xFDB
 20922                           fsr2h	equ	0xFDA
 20923                           fsr2l	equ	0xFD9
 20924                           status	equ	0xFD8
 20925                           
 20926 ;; *************** function _time *****************
 20927 ;; Defined at:
 20928 ;;		line 163 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 20929 ;; Parameters:    Size  Location     Type
 20930 ;;  t               2   18[COMRAM] PTR long 
 20931 ;;		 -> Network_Manage@now(4), arpTimer(4), NULL(0), 
 20932 ;; Auto vars:     Size  Location     Type
 20933 ;;  the_time        4   23[COMRAM] long 
 20934 ;;  gie_val         1   22[COMRAM] unsigned char 
 20935 ;; Return value:  Size  Location     Type
 20936 ;;                  4   18[COMRAM] long 
 20937 ;; Registers used:
 20938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20939 ;; Tracked objects:
 20940 ;;		On entry : 0/0
 20941 ;;		On exit  : 0/0
 20942 ;;		Unchanged: 0/0
 20943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20945 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20947 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20948 ;;Total ram usage:        9 bytes
 20949 ;; Hardware stack levels used:    1
 20950 ;; Hardware stack levels required when called:    4
 20951 ;; This function calls:
 20952 ;;		Nothing
 20953 ;; This function is called by:
 20954 ;;		_timersInit
 20955 ;;		_Network_Manage
 20956 ;;		_DHCP_Manage
 20957 ;;		_DNS_Handler
 20958 ;;		_SYSLOG_Init
 20959 ;;		_SYSLOG_Write
 20960 ;;		_NTP_Request
 20961 ;; This function uses a non-reentrant model
 20962 ;;
 20963                           
 20964                           	psect	text79
 20965  01620E                     __ptext79:
 20966                           	opt stack 0
 20967  01620E                     _time:
 20968                           	opt stack 23
 20969                           
 20970                           ;rtcc.c: 165: bool gie_val;
 20971                           ;rtcc.c: 166: time_t the_time;
 20972                           ;rtcc.c: 168: gie_val = GIE;
 20973                           
 20974                           ; BSR set to: 2
 20975                           ;incstack = 0
 20976  01620E  0E00               	movlw	0
 20977  016210  BEF2               	btfsc	intcon,7,c	;volatile
 20978  016212  0E01               	movlw	1
 20979  016214  6E17               	movwf	time@gie_val,c
 20980                           
 20981                           ;rtcc.c: 169: GIE = 0;
 20982  016216  9EF2               	bcf	intcon,7,c	;volatile
 20983                           
 20984                           ;rtcc.c: 170: the_time = device_time;
 20985  016218  C232  F018         	movff	_device_time,time@the_time	;volatile
 20986  01621C  C233  F019         	movff	_device_time+1,time@the_time+1	;volatile
 20987  016220  C234  F01A         	movff	_device_time+2,time@the_time+2	;volatile
 20988  016224  C235  F01B         	movff	_device_time+3,time@the_time+3	;volatile
 20989                           
 20990                           ;rtcc.c: 171: GIE = gie_val;
 20991  016228  A017               	btfss	time@gie_val,0,c
 20992  01622A  D002               	goto	u5410
 20993  01622C  8EF2               	bsf	intcon,7,c	;volatile
 20994  01622E  D001               	goto	u5425
 20995  016230                     u5410:
 20996  016230  9EF2               	bcf	intcon,7,c	;volatile
 20997  016232                     u5425:
 20998                           
 20999                           ;rtcc.c: 173: if(t)
 21000  016232  5013               	movf	time@t,w,c
 21001  016234  1014               	iorwf	time@t+1,w,c
 21002  016236  B4D8               	btfsc	status,2,c
 21003  016238  D00C               	goto	l1036
 21004                           
 21005                           ;rtcc.c: 174: {
 21006                           ;rtcc.c: 175: *t = the_time;
 21007  01623A  C013  FFD9         	movff	time@t,fsr2l
 21008  01623E  C014  FFDA         	movff	time@t+1,fsr2h
 21009  016242  C018  FFDE         	movff	time@the_time,postinc2
 21010  016246  C019  FFDE         	movff	time@the_time+1,postinc2
 21011  01624A  C01A  FFDE         	movff	time@the_time+2,postinc2
 21012  01624E  C01B  FFDE         	movff	time@the_time+3,postinc2
 21013  016252                     l1036:
 21014                           
 21015                           ;rtcc.c: 176: }
 21016                           ;rtcc.c: 178: return (the_time);
 21017  016252  C018  F013         	movff	time@the_time,?_time
 21018  016256  C019  F014         	movff	time@the_time+1,?_time+1
 21019  01625A  C01A  F015         	movff	time@the_time+2,?_time+2
 21020  01625E  C01B  F016         	movff	time@the_time+3,?_time+3
 21021  016262  0012               	return	
 21022  016264                     __end_of_time:
 21023                           	opt stack 0
 21024                           tosu	equ	0xFFF
 21025                           tosh	equ	0xFFE
 21026                           tosl	equ	0xFFD
 21027                           pclath	equ	0xFFA
 21028                           tblptru	equ	0xFF8
 21029                           tblptrh	equ	0xFF7
 21030                           tblptrl	equ	0xFF6
 21031                           tablat	equ	0xFF5
 21032                           prodh	equ	0xFF4
 21033                           prodl	equ	0xFF3
 21034                           intcon	equ	0xFF2
 21035                           indf0	equ	0xFEF
 21036                           postinc0	equ	0xFEE
 21037                           fsr0h	equ	0xFEA
 21038                           fsr0l	equ	0xFE9
 21039                           wreg	equ	0xFE8
 21040                           indf1	equ	0xFE7
 21041                           postinc1	equ	0xFE6
 21042                           postdec1	equ	0xFE5
 21043                           plusw1	equ	0xFE3
 21044                           fsr1h	equ	0xFE2
 21045                           fsr1l	equ	0xFE1
 21046                           indf2	equ	0xFDF
 21047                           postinc2	equ	0xFDE
 21048                           postdec2	equ	0xFDD
 21049                           plusw2	equ	0xFDB
 21050                           fsr2h	equ	0xFDA
 21051                           fsr2l	equ	0xFD9
 21052                           status	equ	0xFD8
 21053                           
 21054 ;; *************** function _sendDHCPREQUEST *****************
 21055 ;; Defined at:
 21056 ;;		line 131 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 21057 ;; Parameters:    Size  Location     Type
 21058 ;;		None
 21059 ;; Auto vars:     Size  Location     Type
 21060 ;;		None
 21061 ;; Return value:  Size  Location     Type
 21062 ;;                  1    wreg      unsigned char 
 21063 ;; Registers used:
 21064 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21065 ;; Tracked objects:
 21066 ;;		On entry : 0/0
 21067 ;;		On exit  : 0/0
 21068 ;;		Unchanged: 0/0
 21069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21074 ;;Total ram usage:        0 bytes
 21075 ;; Hardware stack levels used:    1
 21076 ;; Hardware stack levels required when called:   11
 21077 ;; This function calls:
 21078 ;;		_sendRequest
 21079 ;; This function is called by:
 21080 ;;		_DHCP_Manage
 21081 ;;		_DHCP_Handler
 21082 ;; This function uses a non-reentrant model
 21083 ;;
 21084                           
 21085                           	psect	text80
 21086  016B42                     __ptext80:
 21087                           	opt stack 0
 21088  016B42                     _sendDHCPREQUEST:
 21089                           	opt stack 14
 21090                           
 21091                           ;dhcp_client.c: 133: return sendRequest(DHCP_REQUEST);
 21092                           
 21093                           ;incstack = 0
 21094  016B42  0E03               	movlw	3
 21095  016B44  ECBD  F0A0         	call	_sendRequest
 21096  016B48  0012               	return	
 21097  016B4A                     __end_of_sendDHCPREQUEST:
 21098                           	opt stack 0
 21099                           tosu	equ	0xFFF
 21100                           tosh	equ	0xFFE
 21101                           tosl	equ	0xFFD
 21102                           pclath	equ	0xFFA
 21103                           tblptru	equ	0xFF8
 21104                           tblptrh	equ	0xFF7
 21105                           tblptrl	equ	0xFF6
 21106                           tablat	equ	0xFF5
 21107                           prodh	equ	0xFF4
 21108                           prodl	equ	0xFF3
 21109                           intcon	equ	0xFF2
 21110                           indf0	equ	0xFEF
 21111                           postinc0	equ	0xFEE
 21112                           fsr0h	equ	0xFEA
 21113                           fsr0l	equ	0xFE9
 21114                           wreg	equ	0xFE8
 21115                           indf1	equ	0xFE7
 21116                           postinc1	equ	0xFE6
 21117                           postdec1	equ	0xFE5
 21118                           plusw1	equ	0xFE3
 21119                           fsr1h	equ	0xFE2
 21120                           fsr1l	equ	0xFE1
 21121                           indf2	equ	0xFDF
 21122                           postinc2	equ	0xFDE
 21123                           postdec2	equ	0xFDD
 21124                           plusw2	equ	0xFDB
 21125                           fsr2h	equ	0xFDA
 21126                           fsr2l	equ	0xFD9
 21127                           status	equ	0xFD8
 21128                           
 21129 ;; *************** function _sendDHCPDISCOVER *****************
 21130 ;; Defined at:
 21131 ;;		line 118 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 21132 ;; Parameters:    Size  Location     Type
 21133 ;;		None
 21134 ;; Auto vars:     Size  Location     Type
 21135 ;;		None
 21136 ;; Return value:  Size  Location     Type
 21137 ;;                  1    wreg      unsigned char 
 21138 ;; Registers used:
 21139 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21140 ;; Tracked objects:
 21141 ;;		On entry : 0/0
 21142 ;;		On exit  : 0/0
 21143 ;;		Unchanged: 0/0
 21144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21147 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21148 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21149 ;;Total ram usage:        1 bytes
 21150 ;; Hardware stack levels used:    1
 21151 ;; Hardware stack levels required when called:   11
 21152 ;; This function calls:
 21153 ;;		_lfsr
 21154 ;;		_sendRequest
 21155 ;; This function is called by:
 21156 ;;		_DHCP_Manage
 21157 ;; This function uses a non-reentrant model
 21158 ;;
 21159                           
 21160                           	psect	text81
 21161  015CAC                     __ptext81:
 21162                           	opt stack 0
 21163  015CAC                     _sendDHCPDISCOVER:
 21164                           	opt stack 17
 21165                           
 21166                           ;dhcp_client.c: 120: dhcpData.dhcpIPAddress = (ip_database_info.ipv4_myAddress);
 21167                           
 21168                           ;incstack = 0
 21169  015CAC  C200  F2C6         	movff	_ip_database_info,_dhcpData
 21170  015CB0  C201  F2C7         	movff	_ip_database_info+1,_dhcpData+1
 21171  015CB4  C202  F2C8         	movff	_ip_database_info+2,_dhcpData+2
 21172  015CB8  C203  F2C9         	movff	_ip_database_info+3,_dhcpData+3
 21173                           
 21174                           ;dhcp_client.c: 121: dhcpData.xidValue = lfsr();
 21175  015CBC  ECB9  F0B4         	call	_lfsr	;wreg free
 21176  015CC0  0100               	movlb	0	; () banked
 21177  015CC2  6FB0               	movwf	??_sendDHCPDISCOVER& (0+255),b
 21178  015CC4  51B0               	movf	??_sendDHCPDISCOVER& (0+255),w,b
 21179  015CC6  0102               	movlb	2	; () banked
 21180  015CC8  6FE6               	movwf	(_dhcpData+32)& (0+255),b
 21181  015CCA  6BE7               	clrf	(_dhcpData+33)& (0+255),b
 21182  015CCC  6BE8               	clrf	(_dhcpData+34)& (0+255),b
 21183  015CCE  6BE9               	clrf	(_dhcpData+35)& (0+255),b
 21184                           
 21185                           ; BSR set to: 2
 21186                           ;dhcp_client.c: 122: dhcpData.xidValue <<= 8;
 21187  015CD0  C2E8  F2E9         	movff	_dhcpData+34,_dhcpData+35
 21188  015CD4  C2E7  F2E8         	movff	_dhcpData+33,_dhcpData+34
 21189  015CD8  C2E6  F2E7         	movff	_dhcpData+32,_dhcpData+33
 21190  015CDC  6BE6               	clrf	(_dhcpData+32)& (0+255),b
 21191                           
 21192                           ; BSR set to: 2
 21193                           ;dhcp_client.c: 123: dhcpData.xidValue |= lfsr();
 21194  015CDE  ECB9  F0B4         	call	_lfsr	;wreg free
 21195  015CE2  0100               	movlb	0	; () banked
 21196  015CE4  6FB0               	movwf	??_sendDHCPDISCOVER& (0+255),b
 21197  015CE6  51B0               	movf	??_sendDHCPDISCOVER& (0+255),w,b
 21198  015CE8  0102               	movlb	2	; () banked
 21199  015CEA  13E6               	iorwf	(_dhcpData+32)& (0+255),f,b
 21200                           
 21201                           ;dhcp_client.c: 124: dhcpData.xidValue <<= 8;
 21202  015CEC  C2E8  F2E9         	movff	_dhcpData+34,_dhcpData+35
 21203  015CF0  C2E7  F2E8         	movff	_dhcpData+33,_dhcpData+34
 21204  015CF4  C2E6  F2E7         	movff	_dhcpData+32,_dhcpData+33
 21205  015CF8  6BE6               	clrf	(_dhcpData+32)& (0+255),b
 21206                           
 21207                           ; BSR set to: 2
 21208                           ;dhcp_client.c: 125: dhcpData.xidValue |= lfsr();
 21209  015CFA  ECB9  F0B4         	call	_lfsr	;wreg free
 21210  015CFE  0100               	movlb	0	; () banked
 21211  015D00  6FB0               	movwf	??_sendDHCPDISCOVER& (0+255),b
 21212  015D02  51B0               	movf	??_sendDHCPDISCOVER& (0+255),w,b
 21213  015D04  0102               	movlb	2	; () banked
 21214  015D06  13E6               	iorwf	(_dhcpData+32)& (0+255),f,b
 21215                           
 21216                           ; BSR set to: 2
 21217                           ;dhcp_client.c: 126: dhcpData.xidValue <<= 8;
 21218  015D08  C2E8  F2E9         	movff	_dhcpData+34,_dhcpData+35
 21219  015D0C  C2E7  F2E8         	movff	_dhcpData+33,_dhcpData+34
 21220  015D10  C2E6  F2E7         	movff	_dhcpData+32,_dhcpData+33
 21221  015D14  6BE6               	clrf	(_dhcpData+32)& (0+255),b
 21222                           
 21223                           ;dhcp_client.c: 127: dhcpData.xidValue |= lfsr();
 21224  015D16  ECB9  F0B4         	call	_lfsr	;wreg free
 21225  015D1A  0100               	movlb	0	; () banked
 21226  015D1C  6FB0               	movwf	??_sendDHCPDISCOVER& (0+255),b
 21227  015D1E  51B0               	movf	??_sendDHCPDISCOVER& (0+255),w,b
 21228  015D20  0102               	movlb	2	; () banked
 21229  015D22  13E6               	iorwf	(_dhcpData+32)& (0+255),f,b
 21230                           
 21231                           ; BSR set to: 2
 21232                           ;dhcp_client.c: 128: return sendRequest(DHCP_DISCOVER);
 21233  015D24  0E01               	movlw	1
 21234  015D26  ECBD  F0A0         	call	_sendRequest
 21235  015D2A  0012               	return	
 21236  015D2C                     __end_of_sendDHCPDISCOVER:
 21237                           	opt stack 0
 21238                           tosu	equ	0xFFF
 21239                           tosh	equ	0xFFE
 21240                           tosl	equ	0xFFD
 21241                           pclath	equ	0xFFA
 21242                           tblptru	equ	0xFF8
 21243                           tblptrh	equ	0xFF7
 21244                           tblptrl	equ	0xFF6
 21245                           tablat	equ	0xFF5
 21246                           prodh	equ	0xFF4
 21247                           prodl	equ	0xFF3
 21248                           intcon	equ	0xFF2
 21249                           indf0	equ	0xFEF
 21250                           postinc0	equ	0xFEE
 21251                           fsr0h	equ	0xFEA
 21252                           fsr0l	equ	0xFE9
 21253                           wreg	equ	0xFE8
 21254                           indf1	equ	0xFE7
 21255                           postinc1	equ	0xFE6
 21256                           postdec1	equ	0xFE5
 21257                           plusw1	equ	0xFE3
 21258                           fsr1h	equ	0xFE2
 21259                           fsr1l	equ	0xFE1
 21260                           indf2	equ	0xFDF
 21261                           postinc2	equ	0xFDE
 21262                           postdec2	equ	0xFDD
 21263                           plusw2	equ	0xFDB
 21264                           fsr2h	equ	0xFDA
 21265                           fsr2l	equ	0xFD9
 21266                           status	equ	0xFD8
 21267                           
 21268 ;; *************** function _sendRequest *****************
 21269 ;; Defined at:
 21270 ;;		line 141 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 21271 ;; Parameters:    Size  Location     Type
 21272 ;;  type            1    wreg     enum E769
 21273 ;; Auto vars:     Size  Location     Type
 21274 ;;  type            1   57[COMRAM] enum E769
 21275 ;;  started         1   56[COMRAM] enum E507
 21276 ;; Return value:  Size  Location     Type
 21277 ;;                  1    wreg      unsigned char 
 21278 ;; Registers used:
 21279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21280 ;; Tracked objects:
 21281 ;;		On entry : 0/0
 21282 ;;		On exit  : 0/0
 21283 ;;		Unchanged: 0/0
 21284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21289 ;;Total ram usage:        2 bytes
 21290 ;; Hardware stack levels used:    1
 21291 ;; Hardware stack levels required when called:   10
 21292 ;; This function calls:
 21293 ;;		_DHCP_WriteZeros
 21294 ;;		_ETH_Write16
 21295 ;;		_ETH_Write32
 21296 ;;		_ETH_Write8
 21297 ;;		_ETH_WriteBlock
 21298 ;;		_ETH_WriteString
 21299 ;;		_UDP_Send
 21300 ;;		_UDP_Start
 21301 ;;		_strlen
 21302 ;; This function is called by:
 21303 ;;		_sendDHCPDISCOVER
 21304 ;;		_sendDHCPREQUEST
 21305 ;;		_sendDHCPDECLINE
 21306 ;; This function uses a non-reentrant model
 21307 ;;
 21308                           
 21309                           	psect	text82
 21310  01417A                     __ptext82:
 21311                           	opt stack 0
 21312  01417A                     _sendRequest:
 21313                           	opt stack 14
 21314                           
 21315                           ;incstack = 0
 21316                           ;sendRequest@type stored from wreg
 21317  01417A  6E3A               	movwf	sendRequest@type,c
 21318                           
 21319                           ;dhcp_client.c: 144: error_msg started;
 21320                           ;dhcp_client.c: 147: started = UDP_Start(0xFFFFFFFF,68,67);
 21321  01417C  0EFF               	movlw	255
 21322  01417E  0100               	movlb	0	; () banked
 21323  014180  6FA8               	movwf	UDP_Start@destIP& (0+255),b
 21324  014182  0EFF               	movlw	255
 21325  014184  6FA9               	movwf	(UDP_Start@destIP+1)& (0+255),b
 21326  014186  0EFF               	movlw	255
 21327  014188  6FAA               	movwf	(UDP_Start@destIP+2)& (0+255),b
 21328  01418A  0EFF               	movlw	255
 21329  01418C  6FAB               	movwf	(UDP_Start@destIP+3)& (0+255),b
 21330  01418E  0E00               	movlw	0
 21331  014190  6FAD               	movwf	(UDP_Start@srcPort+1)& (0+255),b
 21332  014192  0E44               	movlw	68
 21333  014194  6FAC               	movwf	UDP_Start@srcPort& (0+255),b
 21334  014196  0E00               	movlw	0
 21335  014198  6FAF               	movwf	(UDP_Start@dstPort+1)& (0+255),b
 21336  01419A  0E43               	movlw	67
 21337  01419C  6FAE               	movwf	UDP_Start@dstPort& (0+255),b
 21338  01419E  EC53  F0B0         	call	_UDP_Start	;wreg free
 21339  0141A2  6E39               	movwf	sendRequest@started,c
 21340                           
 21341                           ;dhcp_client.c: 148: if(started==SUCCESS)
 21342  0141A4  0439               	decf	sendRequest@started,w,c
 21343  0141A6  A4D8               	btfss	status,2,c
 21344  0141A8  D0F6               	goto	l1313
 21345                           
 21346                           ;dhcp_client.c: 149: {
 21347                           ;dhcp_client.c: 150: ETH_Write32(0x01010600);
 21348  0141AA  0E00               	movlw	0
 21349  0141AC  6E13               	movwf	ETH_Write32@data,c
 21350  0141AE  0E06               	movlw	6
 21351  0141B0  6E14               	movwf	ETH_Write32@data+1,c
 21352  0141B2  0E01               	movlw	1
 21353  0141B4  6E15               	movwf	ETH_Write32@data+2,c
 21354  0141B6  0E01               	movlw	1
 21355  0141B8  6E16               	movwf	ETH_Write32@data+3,c
 21356  0141BA  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21357                           
 21358                           ;dhcp_client.c: 151: ETH_Write32(dhcpData.xidValue);
 21359  0141BE  C2E6  F013         	movff	_dhcpData+32,ETH_Write32@data
 21360  0141C2  C2E7  F014         	movff	_dhcpData+33,ETH_Write32@data+1
 21361  0141C6  C2E8  F015         	movff	_dhcpData+34,ETH_Write32@data+2
 21362  0141CA  C2E9  F016         	movff	_dhcpData+35,ETH_Write32@data+3
 21363  0141CE  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21364                           
 21365                           ;dhcp_client.c: 152: ETH_Write32(0x00008000);
 21366  0141D2  0E00               	movlw	0
 21367  0141D4  6E13               	movwf	ETH_Write32@data,c
 21368  0141D6  0E80               	movlw	128
 21369  0141D8  6E14               	movwf	ETH_Write32@data+1,c
 21370  0141DA  0E00               	movlw	0
 21371  0141DC  6E15               	movwf	ETH_Write32@data+2,c
 21372  0141DE  0E00               	movlw	0
 21373  0141E0  6E16               	movwf	ETH_Write32@data+3,c
 21374  0141E2  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21375                           
 21376                           ;dhcp_client.c: 153: if(type == DHCP_REQUEST)
 21377  0141E6  0E03               	movlw	3
 21378  0141E8  183A               	xorwf	sendRequest@type,w,c
 21379  0141EA  A4D8               	btfss	status,2,c
 21380  0141EC  D00B               	goto	l1314
 21381                           
 21382                           ;dhcp_client.c: 154: {
 21383                           ;dhcp_client.c: 155: ETH_Write32(0);
 21384  0141EE  0E00               	movlw	0
 21385  0141F0  6E13               	movwf	ETH_Write32@data,c
 21386  0141F2  0E00               	movlw	0
 21387  0141F4  6E14               	movwf	ETH_Write32@data+1,c
 21388  0141F6  0E00               	movlw	0
 21389  0141F8  6E15               	movwf	ETH_Write32@data+2,c
 21390  0141FA  0E00               	movlw	0
 21391  0141FC  6E16               	movwf	ETH_Write32@data+3,c
 21392  0141FE  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21393                           
 21394                           ;dhcp_client.c: 156: }
 21395  014202  D00A               	goto	l1315
 21396  014204                     l1314:
 21397                           
 21398                           ;dhcp_client.c: 157: else
 21399                           ;dhcp_client.c: 158: {
 21400                           ;dhcp_client.c: 159: ETH_Write32(dhcpData.dhcpIPAddress);
 21401  014204  C2C6  F013         	movff	_dhcpData,ETH_Write32@data
 21402  014208  C2C7  F014         	movff	_dhcpData+1,ETH_Write32@data+1
 21403  01420C  C2C8  F015         	movff	_dhcpData+2,ETH_Write32@data+2
 21404  014210  C2C9  F016         	movff	_dhcpData+3,ETH_Write32@data+3
 21405  014214  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21406  014218                     l1315:
 21407                           
 21408                           ;dhcp_client.c: 160: }
 21409                           ;dhcp_client.c: 161: ETH_Write32(0);
 21410  014218  0E00               	movlw	0
 21411  01421A  6E13               	movwf	ETH_Write32@data,c
 21412  01421C  0E00               	movlw	0
 21413  01421E  6E14               	movwf	ETH_Write32@data+1,c
 21414  014220  0E00               	movlw	0
 21415  014222  6E15               	movwf	ETH_Write32@data+2,c
 21416  014224  0E00               	movlw	0
 21417  014226  6E16               	movwf	ETH_Write32@data+3,c
 21418  014228  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21419                           
 21420                           ;dhcp_client.c: 162: ETH_Write32(0);
 21421  01422C  0E00               	movlw	0
 21422  01422E  6E13               	movwf	ETH_Write32@data,c
 21423  014230  0E00               	movlw	0
 21424  014232  6E14               	movwf	ETH_Write32@data+1,c
 21425  014234  0E00               	movlw	0
 21426  014236  6E15               	movwf	ETH_Write32@data+2,c
 21427  014238  0E00               	movlw	0
 21428  01423A  6E16               	movwf	ETH_Write32@data+3,c
 21429  01423C  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21430                           
 21431                           ;dhcp_client.c: 163: ETH_Write32(0);
 21432  014240  0E00               	movlw	0
 21433  014242  6E13               	movwf	ETH_Write32@data,c
 21434  014244  0E00               	movlw	0
 21435  014246  6E14               	movwf	ETH_Write32@data+1,c
 21436  014248  0E00               	movlw	0
 21437  01424A  6E15               	movwf	ETH_Write32@data+2,c
 21438  01424C  0E00               	movlw	0
 21439  01424E  6E16               	movwf	ETH_Write32@data+3,c
 21440  014250  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21441                           
 21442                           ;dhcp_client.c: 164: ETH_WriteBlock((char *)&hostMacAddress,6);
 21443  014254  0E84               	movlw	low _hostMacAddress
 21444  014256  6E13               	movwf	ETH_WriteBlock@buffer,c
 21445  014258  0E02               	movlw	high _hostMacAddress
 21446  01425A  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 21447  01425C  0E00               	movlw	0
 21448  01425E  6E16               	movwf	ETH_WriteBlock@length+1,c
 21449  014260  0E06               	movlw	6
 21450  014262  6E15               	movwf	ETH_WriteBlock@length,c
 21451  014264  ECB8  F0B2         	call	_ETH_WriteBlock	;wreg free
 21452                           
 21453                           ;dhcp_client.c: 165: DHCP_WriteZeros(202);
 21454  014268  0E00               	movlw	0
 21455  01426A  6E15               	movwf	DHCP_WriteZeros@length+1,c
 21456  01426C  0ECA               	movlw	202
 21457  01426E  6E14               	movwf	DHCP_WriteZeros@length,c
 21458  014270  ECF3  F0B4         	call	_DHCP_WriteZeros	;wreg free
 21459                           
 21460                           ;dhcp_client.c: 166: ETH_Write32(0x63825363);
 21461  014274  0E63               	movlw	99
 21462  014276  6E13               	movwf	ETH_Write32@data,c
 21463  014278  0E53               	movlw	83
 21464  01427A  6E14               	movwf	ETH_Write32@data+1,c
 21465  01427C  0E82               	movlw	130
 21466  01427E  6E15               	movwf	ETH_Write32@data+2,c
 21467  014280  0E63               	movlw	99
 21468  014282  6E16               	movwf	ETH_Write32@data+3,c
 21469  014284  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21470                           
 21471                           ;dhcp_client.c: 169: ETH_Write8(12); ETH_Write8(strlen(dhcpName)); ETH_WriteString(dhcpN
      +                          ame);
 21472  014288  0E0C               	movlw	12
 21473  01428A  EC98  F0B5         	call	_ETH_Write8
 21474  01428E  0E32               	movlw	low _dhcpName
 21475  014290  6E13               	movwf	strlen@s,c
 21476  014292  0EFF               	movlw	high _dhcpName
 21477  014294  6E14               	movwf	strlen@s+1,c
 21478  014296  EC5C  F0B1         	call	_strlen	;wreg free
 21479  01429A  5013               	movf	?_strlen,w,c
 21480  01429C  EC98  F0B5         	call	_ETH_Write8
 21481  0142A0  0E32               	movlw	low _dhcpName
 21482  0142A2  6E13               	movwf	ETH_WriteString@string,c
 21483  0142A4  0EFF               	movlw	high _dhcpName
 21484  0142A6  6E14               	movwf	ETH_WriteString@string+1,c
 21485  0142A8  ECD3  F0B1         	call	_ETH_WriteString	;wreg free
 21486                           
 21487                           ;dhcp_client.c: 171: ETH_Write8(42); ETH_Write8(4); ETH_Write32(0);
 21488  0142AC  0E2A               	movlw	42
 21489  0142AE  EC98  F0B5         	call	_ETH_Write8
 21490  0142B2  0E04               	movlw	4
 21491  0142B4  EC98  F0B5         	call	_ETH_Write8
 21492  0142B8  0E00               	movlw	0
 21493  0142BA  6E13               	movwf	ETH_Write32@data,c
 21494  0142BC  0E00               	movlw	0
 21495  0142BE  6E14               	movwf	ETH_Write32@data+1,c
 21496  0142C0  0E00               	movlw	0
 21497  0142C2  6E15               	movwf	ETH_Write32@data+2,c
 21498  0142C4  0E00               	movlw	0
 21499  0142C6  6E16               	movwf	ETH_Write32@data+3,c
 21500  0142C8  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21501                           
 21502                           ;dhcp_client.c: 173: ETH_Write8(53); ETH_Write8(1); ETH_Write8(type);
 21503  0142CC  0E35               	movlw	53
 21504  0142CE  EC98  F0B5         	call	_ETH_Write8
 21505  0142D2  0E01               	movlw	1
 21506  0142D4  EC98  F0B5         	call	_ETH_Write8
 21507  0142D8  503A               	movf	sendRequest@type,w,c
 21508  0142DA  EC98  F0B5         	call	_ETH_Write8
 21509                           
 21510                           ;dhcp_client.c: 174: if(type == DHCP_REQUEST)
 21511  0142DE  0E03               	movlw	3
 21512  0142E0  183A               	xorwf	sendRequest@type,w,c
 21513  0142E2  A4D8               	btfss	status,2,c
 21514  0142E4  D020               	goto	l1316
 21515                           
 21516                           ;dhcp_client.c: 175: {
 21517                           ;dhcp_client.c: 177: ETH_Write8(50);ETH_Write8(4);ETH_Write32(dhcpData.dhcpIPAddress);
 21518  0142E6  0E32               	movlw	50
 21519  0142E8  EC98  F0B5         	call	_ETH_Write8
 21520  0142EC  0E04               	movlw	4
 21521  0142EE  EC98  F0B5         	call	_ETH_Write8
 21522  0142F2  C2C6  F013         	movff	_dhcpData,ETH_Write32@data
 21523  0142F6  C2C7  F014         	movff	_dhcpData+1,ETH_Write32@data+1
 21524  0142FA  C2C8  F015         	movff	_dhcpData+2,ETH_Write32@data+2
 21525  0142FE  C2C9  F016         	movff	_dhcpData+3,ETH_Write32@data+3
 21526  014302  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21527                           
 21528                           ;dhcp_client.c: 179: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpData.leasee_ip);
 21529  014306  0E36               	movlw	54
 21530  014308  EC98  F0B5         	call	_ETH_Write8
 21531  01430C  0E04               	movlw	4
 21532  01430E  EC98  F0B5         	call	_ETH_Write8
 21533  014312  C2F2  F013         	movff	_dhcpData+44,ETH_Write32@data
 21534  014316  C2F3  F014         	movff	_dhcpData+45,ETH_Write32@data+1
 21535  01431A  C2F4  F015         	movff	_dhcpData+46,ETH_Write32@data+2
 21536  01431E  C2F5  F016         	movff	_dhcpData+47,ETH_Write32@data+3
 21537  014322  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 21538  014326                     l1316:
 21539                           
 21540                           ;dhcp_client.c: 180: }
 21541                           ;dhcp_client.c: 182: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 21542  014326  0E37               	movlw	55
 21543  014328  EC98  F0B5         	call	_ETH_Write8
 21544  01432C  0E04               	movlw	4
 21545  01432E  EC98  F0B5         	call	_ETH_Write8
 21546  014332  0E01               	movlw	1
 21547  014334  EC98  F0B5         	call	_ETH_Write8
 21548  014338  0E03               	movlw	3
 21549  01433A  EC98  F0B5         	call	_ETH_Write8
 21550  01433E  0E06               	movlw	6
 21551  014340  EC98  F0B5         	call	_ETH_Write8
 21552  014344  0E0F               	movlw	15
 21553  014346  EC98  F0B5         	call	_ETH_Write8
 21554                           
 21555                           ;dhcp_client.c: 184: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 21556  01434A  0E39               	movlw	57
 21557  01434C  EC98  F0B5         	call	_ETH_Write8
 21558  014350  0E02               	movlw	2
 21559  014352  EC98  F0B5         	call	_ETH_Write8
 21560  014356  0E02               	movlw	2
 21561  014358  6E14               	movwf	ETH_Write16@data+1,c
 21562  01435A  0E00               	movlw	0
 21563  01435C  6E13               	movwf	ETH_Write16@data,c
 21564  01435E  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 21565                           
 21566                           ;dhcp_client.c: 186: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock(&hostM
      +                          acAddress,6);
 21567  014362  0E3D               	movlw	61
 21568  014364  EC98  F0B5         	call	_ETH_Write8
 21569  014368  0E07               	movlw	7
 21570  01436A  EC98  F0B5         	call	_ETH_Write8
 21571  01436E  0E01               	movlw	1
 21572  014370  EC98  F0B5         	call	_ETH_Write8
 21573  014374  0E84               	movlw	low _hostMacAddress
 21574  014376  6E13               	movwf	ETH_WriteBlock@buffer,c
 21575  014378  0E02               	movlw	high _hostMacAddress
 21576  01437A  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 21577  01437C  0E00               	movlw	0
 21578  01437E  6E16               	movwf	ETH_WriteBlock@length+1,c
 21579  014380  0E06               	movlw	6
 21580  014382  6E15               	movwf	ETH_WriteBlock@length,c
 21581  014384  ECB8  F0B2         	call	_ETH_WriteBlock	;wreg free
 21582                           
 21583                           ;dhcp_client.c: 187: ETH_Write8(255);
 21584  014388  0EFF               	movlw	255
 21585  01438A  EC98  F0B5         	call	_ETH_Write8
 21586                           
 21587                           ;dhcp_client.c: 192: UDP_Send();
 21588  01438E  ECA0  F0A9         	call	_UDP_Send	;wreg free
 21589                           
 21590                           ;dhcp_client.c: 193: return 1;
 21591  014392  0E01               	movlw	1
 21592  014394  0012               	return	
 21593  014396                     l1313:
 21594                           
 21595                           ;dhcp_client.c: 194: }
 21596                           ;dhcp_client.c: 195: return 0;
 21597  014396  0E00               	movlw	0
 21598  014398  0012               	return	
 21599  01439A                     __end_of_sendRequest:
 21600                           	opt stack 0
 21601                           tosu	equ	0xFFF
 21602                           tosh	equ	0xFFE
 21603                           tosl	equ	0xFFD
 21604                           pclath	equ	0xFFA
 21605                           tblptru	equ	0xFF8
 21606                           tblptrh	equ	0xFF7
 21607                           tblptrl	equ	0xFF6
 21608                           tablat	equ	0xFF5
 21609                           prodh	equ	0xFF4
 21610                           prodl	equ	0xFF3
 21611                           intcon	equ	0xFF2
 21612                           indf0	equ	0xFEF
 21613                           postinc0	equ	0xFEE
 21614                           fsr0h	equ	0xFEA
 21615                           fsr0l	equ	0xFE9
 21616                           wreg	equ	0xFE8
 21617                           indf1	equ	0xFE7
 21618                           postinc1	equ	0xFE6
 21619                           postdec1	equ	0xFE5
 21620                           plusw1	equ	0xFE3
 21621                           fsr1h	equ	0xFE2
 21622                           fsr1l	equ	0xFE1
 21623                           indf2	equ	0xFDF
 21624                           postinc2	equ	0xFDE
 21625                           postdec2	equ	0xFDD
 21626                           plusw2	equ	0xFDB
 21627                           fsr2h	equ	0xFDA
 21628                           fsr2l	equ	0xFD9
 21629                           status	equ	0xFD8
 21630                           
 21631 ;; *************** function _strlen *****************
 21632 ;; Defined at:
 21633 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\strlen.c"
 21634 ;; Parameters:    Size  Location     Type
 21635 ;;  s               2   18[COMRAM] PTR const unsigned char 
 21636 ;;		 -> DHCP_Handler@chaddr(16), dhcpName(13), 
 21637 ;; Auto vars:     Size  Location     Type
 21638 ;;  cp              2   22[COMRAM] PTR const unsigned char 
 21639 ;;		 -> DHCP_Handler@chaddr(16), dhcpName(13), 
 21640 ;; Return value:  Size  Location     Type
 21641 ;;                  2   18[COMRAM] unsigned int 
 21642 ;; Registers used:
 21643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21644 ;; Tracked objects:
 21645 ;;		On entry : 0/0
 21646 ;;		On exit  : 0/0
 21647 ;;		Unchanged: 0/0
 21648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21653 ;;Total ram usage:        6 bytes
 21654 ;; Hardware stack levels used:    1
 21655 ;; Hardware stack levels required when called:    4
 21656 ;; This function calls:
 21657 ;;		Nothing
 21658 ;; This function is called by:
 21659 ;;		_sendRequest
 21660 ;;		_DHCP_Handler
 21661 ;;		_DNS_Query
 21662 ;; This function uses a non-reentrant model
 21663 ;;
 21664                           
 21665                           	psect	text83
 21666  0162B8                     __ptext83:
 21667                           	opt stack 0
 21668  0162B8                     _strlen:
 21669                           	opt stack 21
 21670                           
 21671                           ;incstack = 0
 21672  0162B8  C013  F017         	movff	strlen@s,strlen@cp
 21673  0162BC  C014  F018         	movff	strlen@s+1,strlen@cp+1
 21674  0162C0  D002               	goto	l2620
 21675  0162C2  4A17               	infsnz	strlen@cp,f,c
 21676  0162C4  2A18               	incf	strlen@cp+1,f,c
 21677  0162C6                     l2620:
 21678  0162C6  C017  FFF6         	movff	strlen@cp,tblptrl
 21679  0162CA  C018  FFF7         	movff	strlen@cp+1,tblptrh
 21680  0162CE  0E00               	movlw	low (__mediumconst shr (0+16))
 21681  0162D0  6EF8               	movwf	tblptru,c
 21682  0162D2  0E0F               	movlw	(high __ramtop+-1)
 21683  0162D4  64F7               	cpfsgt	tblptrh,c
 21684  0162D6  D003               	bra	u9427
 21685  0162D8  0008               	tblrd		*
 21686  0162DA  50F5               	movf	tablat,w,c
 21687  0162DC  D005               	bra	u9420
 21688  0162DE                     u9427:
 21689  0162DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 21690  0162E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 21691  0162E6  50EF               	movf	indf0,w,c
 21692  0162E8                     u9420:
 21693  0162E8  0900               	iorlw	0
 21694  0162EA  A4D8               	btfss	status,2,c
 21695  0162EC  D7EA               	goto	l2621
 21696  0162EE  C013  F015         	movff	strlen@s,??_strlen
 21697  0162F2  C014  F016         	movff	strlen@s+1,??_strlen+1
 21698  0162F6  1E15               	comf	??_strlen,f,c
 21699  0162F8  1E16               	comf	??_strlen+1,f,c
 21700  0162FA  4A15               	infsnz	??_strlen,f,c
 21701  0162FC  2A16               	incf	??_strlen+1,f,c
 21702  0162FE  5017               	movf	strlen@cp,w,c
 21703  016300  2415               	addwf	??_strlen,w,c
 21704  016302  6E13               	movwf	?_strlen,c
 21705  016304  5018               	movf	strlen@cp+1,w,c
 21706  016306  2016               	addwfc	??_strlen+1,w,c
 21707  016308  6E14               	movwf	?_strlen+1,c
 21708  01630A  0012               	return	
 21709  01630C                     __end_of_strlen:
 21710                           	opt stack 0
 21711                           tosu	equ	0xFFF
 21712                           tosh	equ	0xFFE
 21713                           tosl	equ	0xFFD
 21714                           pclath	equ	0xFFA
 21715                           tblptru	equ	0xFF8
 21716                           tblptrh	equ	0xFF7
 21717                           tblptrl	equ	0xFF6
 21718                           tablat	equ	0xFF5
 21719                           prodh	equ	0xFF4
 21720                           prodl	equ	0xFF3
 21721                           intcon	equ	0xFF2
 21722                           indf0	equ	0xFEF
 21723                           postinc0	equ	0xFEE
 21724                           fsr0h	equ	0xFEA
 21725                           fsr0l	equ	0xFE9
 21726                           wreg	equ	0xFE8
 21727                           indf1	equ	0xFE7
 21728                           postinc1	equ	0xFE6
 21729                           postdec1	equ	0xFE5
 21730                           plusw1	equ	0xFE3
 21731                           fsr1h	equ	0xFE2
 21732                           fsr1l	equ	0xFE1
 21733                           indf2	equ	0xFDF
 21734                           postinc2	equ	0xFDE
 21735                           postdec2	equ	0xFDD
 21736                           plusw2	equ	0xFDB
 21737                           fsr2h	equ	0xFDA
 21738                           fsr2l	equ	0xFD9
 21739                           status	equ	0xFD8
 21740                           
 21741 ;; *************** function _UDP_Start *****************
 21742 ;; Defined at:
 21743 ;;		line 66 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 21744 ;; Parameters:    Size  Location     Type
 21745 ;;  destIP          4   72[BANK0 ] unsigned long 
 21746 ;;  srcPort         2   76[BANK0 ] unsigned int 
 21747 ;;  dstPort         2   78[BANK0 ] unsigned int 
 21748 ;; Auto vars:     Size  Location     Type
 21749 ;;  ret             1   53[COMRAM] enum E393
 21750 ;; Return value:  Size  Location     Type
 21751 ;;                  1    wreg      enum E393
 21752 ;; Registers used:
 21753 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21754 ;; Tracked objects:
 21755 ;;		On entry : 0/0
 21756 ;;		On exit  : 0/0
 21757 ;;		Unchanged: 0/0
 21758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21759 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21762 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21763 ;;Total ram usage:        9 bytes
 21764 ;; Hardware stack levels used:    1
 21765 ;; Hardware stack levels required when called:    9
 21766 ;; This function calls:
 21767 ;;		_ETH_ResetByteCount
 21768 ;;		_ETH_Write16
 21769 ;;		_IPv4_Start
 21770 ;; This function is called by:
 21771 ;;		_sendRequest
 21772 ;;		_DNS_Query
 21773 ;;		_NTP_Request
 21774 ;; This function uses a non-reentrant model
 21775 ;;
 21776                           
 21777                           	psect	text84
 21778  0160A6                     __ptext84:
 21779                           	opt stack 0
 21780  0160A6                     _UDP_Start:
 21781                           	opt stack 14
 21782                           
 21783                           ;udpv4.c: 69: error_msg ret = ERROR;
 21784                           
 21785                           ;incstack = 0
 21786  0160A6  0E00               	movlw	0
 21787  0160A8  6E36               	movwf	UDP_Start@ret,c
 21788                           
 21789                           ;udpv4.c: 72: ret = IPv4_Start(destIP,UDP_TCPIP);
 21790  0160AA  C0A8  F031         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 21791  0160AE  C0A9  F032         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 21792  0160B2  C0AA  F033         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 21793  0160B6  C0AB  F034         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 21794  0160BA  0E11               	movlw	17
 21795  0160BC  6E35               	movwf	IPv4_Start@protocol,c
 21796  0160BE  EC8E  F09E         	call	_IPv4_Start	;wreg free
 21797  0160C2  6E36               	movwf	UDP_Start@ret,c
 21798                           
 21799                           ;udpv4.c: 73: if(ret == SUCCESS)
 21800  0160C4  0436               	decf	UDP_Start@ret,w,c
 21801  0160C6  A4D8               	btfss	status,2,c
 21802  0160C8  D01A               	goto	l1227
 21803                           
 21804                           ;udpv4.c: 74: {
 21805                           ;udpv4.c: 76: ETH_ResetByteCount();
 21806  0160CA  EC8E  F0B5         	call	_ETH_ResetByteCount	;wreg free
 21807                           
 21808                           ;udpv4.c: 79: ETH_Write16(srcPort);
 21809  0160CE  C0AC  F013         	movff	UDP_Start@srcPort,ETH_Write16@data
 21810  0160D2  C0AD  F014         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 21811  0160D6  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 21812                           
 21813                           ;udpv4.c: 82: ETH_Write16(dstPort);
 21814  0160DA  C0AE  F013         	movff	UDP_Start@dstPort,ETH_Write16@data
 21815  0160DE  C0AF  F014         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 21816  0160E2  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 21817                           
 21818                           ;udpv4.c: 85: ETH_Write16(0);
 21819  0160E6  0E00               	movlw	0
 21820  0160E8  6E14               	movwf	ETH_Write16@data+1,c
 21821  0160EA  0E00               	movlw	0
 21822  0160EC  6E13               	movwf	ETH_Write16@data,c
 21823  0160EE  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 21824                           
 21825                           ;udpv4.c: 88: ETH_Write16(0);
 21826  0160F2  0E00               	movlw	0
 21827  0160F4  6E14               	movwf	ETH_Write16@data+1,c
 21828  0160F6  0E00               	movlw	0
 21829  0160F8  6E13               	movwf	ETH_Write16@data,c
 21830  0160FA  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 21831  0160FE                     l1227:
 21832                           
 21833                           ;udpv4.c: 90: }
 21834                           ;udpv4.c: 91: return ret;
 21835  0160FE  5036               	movf	UDP_Start@ret,w,c
 21836  016100  0012               	return	
 21837  016102                     __end_of_UDP_Start:
 21838                           	opt stack 0
 21839                           tosu	equ	0xFFF
 21840                           tosh	equ	0xFFE
 21841                           tosl	equ	0xFFD
 21842                           pclath	equ	0xFFA
 21843                           tblptru	equ	0xFF8
 21844                           tblptrh	equ	0xFF7
 21845                           tblptrl	equ	0xFF6
 21846                           tablat	equ	0xFF5
 21847                           prodh	equ	0xFF4
 21848                           prodl	equ	0xFF3
 21849                           intcon	equ	0xFF2
 21850                           indf0	equ	0xFEF
 21851                           postinc0	equ	0xFEE
 21852                           fsr0h	equ	0xFEA
 21853                           fsr0l	equ	0xFE9
 21854                           wreg	equ	0xFE8
 21855                           indf1	equ	0xFE7
 21856                           postinc1	equ	0xFE6
 21857                           postdec1	equ	0xFE5
 21858                           plusw1	equ	0xFE3
 21859                           fsr1h	equ	0xFE2
 21860                           fsr1l	equ	0xFE1
 21861                           indf2	equ	0xFDF
 21862                           postinc2	equ	0xFDE
 21863                           postdec2	equ	0xFDD
 21864                           plusw2	equ	0xFDB
 21865                           fsr2h	equ	0xFDA
 21866                           fsr2l	equ	0xFD9
 21867                           status	equ	0xFD8
 21868                           
 21869 ;; *************** function _IPv4_Start *****************
 21870 ;; Defined at:
 21871 ;;		line 206 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 21872 ;; Parameters:    Size  Location     Type
 21873 ;;  destAddress     4   48[COMRAM] unsigned long 
 21874 ;;  protocol        1   52[COMRAM] enum E236
 21875 ;; Auto vars:     Size  Location     Type
 21876 ;;  targetAddres    4   65[BANK0 ] unsigned long 
 21877 ;;  macAddress      2   69[BANK0 ] PTR const struct .
 21878 ;;		 -> arpMap.macAddress(6), NULL(0), broadcastMAC(6), arpMap(104), 
 21879 ;;  ret             1   71[BANK0 ] enum E392
 21880 ;; Return value:  Size  Location     Type
 21881 ;;                  1    wreg      enum E392
 21882 ;; Registers used:
 21883 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21884 ;; Tracked objects:
 21885 ;;		On entry : 0/0
 21886 ;;		On exit  : 0/0
 21887 ;;		Unchanged: 0/0
 21888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21889 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21890 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21891 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21892 ;;      Totals:         5      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21893 ;;Total ram usage:       20 bytes
 21894 ;; Hardware stack levels used:    1
 21895 ;; Hardware stack levels required when called:    8
 21896 ;; This function calls:
 21897 ;;		_ARPV4_Lookup
 21898 ;;		_ARPV4_Request
 21899 ;;		_ETH_Write16
 21900 ;;		_ETH_Write32
 21901 ;;		_ETH_Write8
 21902 ;;		_ETH_WriteStart
 21903 ;; This function is called by:
 21904 ;;		_ICMP_EchoReply
 21905 ;;		_ICMP_PortUnreachable
 21906 ;;		_UDP_Start
 21907 ;;		_TCP_Snd
 21908 ;; This function uses a non-reentrant model
 21909 ;;
 21910                           
 21911                           	psect	text85
 21912  013D1C                     __ptext85:
 21913                           	opt stack 0
 21914  013D1C                     _IPv4_Start:
 21915                           	opt stack 18
 21916                           
 21917                           ;ipv4.c: 208: error_msg ret = ERROR;
 21918                           
 21919                           ;incstack = 0
 21920  013D1C  0E00               	movlw	0
 21921  013D1E  0100               	movlb	0	; () banked
 21922  013D20  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 21923                           
 21924                           ; BSR set to: 0
 21925                           ;ipv4.c: 210: const mac48Address_t *macAddress;
 21926                           ;ipv4.c: 211: uint32_t targetAddress;
 21927                           ;ipv4.c: 214: if((((ip_database_info.ipv4_myAddress) != 0) || (protocol == UDP_TCPIP))
 21928                           ;ipv4.c: 215: && ((ip_database_info.ipv4_myAddress) != 0x7F000001))
 21929  013D22  0102               	movlb	2	; () banked
 21930  013D24  5100               	movf	_ip_database_info& (0+255),w,b
 21931  013D26  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 21932  013D28  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 21933  013D2A  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 21934  013D2C  A4D8               	btfss	status,2,c
 21935  013D2E  D004               	goto	u9280
 21936                           
 21937                           ; BSR set to: 2
 21938  013D30  0E11               	movlw	17
 21939  013D32  1835               	xorwf	IPv4_Start@protocol,w,c
 21940  013D34  A4D8               	btfss	status,2,c
 21941  013D36  D10D               	goto	l890
 21942  013D38                     u9280:
 21943                           
 21944                           ; BSR set to: 2
 21945                           
 21946                           ; BSR set to: 2
 21947  013D38  0500               	decf	_ip_database_info& (0+255),w,b
 21948  013D3A  E106               	bnz	u9290
 21949  013D3C  0E7F               	movlw	127
 21950  013D3E  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 21951  013D40  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 21952  013D42  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 21953  013D44  B4D8               	btfsc	status,2,c
 21954  013D46  D105               	goto	l890
 21955  013D48                     u9290:
 21956                           
 21957                           ; BSR set to: 2
 21958                           ;ipv4.c: 216: {
 21959                           ;ipv4.c: 217: if(((destAddress == 0xFFFFFFFF)
 21960                           ;ipv4.c: 218: |((destAddress | 0XFF000000) == 0xFFFFFFFF)
 21961                           ;ipv4.c: 219: |((destAddress | 0xFFFF0000 )== 0xFFFFFFFF)
 21962                           ;ipv4.c: 220: |((destAddress | 0xFFFFFF00) == 0xFFFFFFFF))==0)
 21963  013D48  2831               	incf	IPv4_Start@destAddress,w,c
 21964  013D4A  E107               	bnz	u9300
 21965  013D4C  2832               	incf	IPv4_Start@destAddress+1,w,c
 21966  013D4E  E105               	bnz	u9300
 21967  013D50  2833               	incf	IPv4_Start@destAddress+2,w,c
 21968  013D52  E103               	bnz	u9300
 21969  013D54  2834               	incf	IPv4_Start@destAddress+3,w,c
 21970  013D56  B4D8               	btfsc	status,2,c
 21971  013D58  D0A0               	goto	l884
 21972  013D5A                     u9300:
 21973                           
 21974                           ; BSR set to: 2
 21975  013D5A  0E00               	movlw	0
 21976  013D5C  1031               	iorwf	IPv4_Start@destAddress,w,c
 21977  013D5E  0100               	movlb	0	; () banked
 21978  013D60  6F99               	movwf	??_IPv4_Start& (0+255),b
 21979  013D62  0E00               	movlw	0
 21980  013D64  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 21981  013D66  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 21982  013D68  0E00               	movlw	0
 21983  013D6A  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 21984  013D6C  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 21985  013D6E  0EFF               	movlw	255
 21986  013D70  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 21987  013D72  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 21988  013D74  2999               	incf	??_IPv4_Start& (0+255),w,b
 21989  013D76  E107               	bnz	u9310
 21990  013D78  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 21991  013D7A  E105               	bnz	u9310
 21992  013D7C  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 21993  013D7E  E103               	bnz	u9310
 21994  013D80  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 21995  013D82  B4D8               	btfsc	status,2,c
 21996  013D84  D08A               	goto	l884
 21997  013D86                     u9310:
 21998                           
 21999                           ; BSR set to: 0
 22000  013D86  0E00               	movlw	0
 22001  013D88  1031               	iorwf	IPv4_Start@destAddress,w,c
 22002  013D8A  6F99               	movwf	??_IPv4_Start& (0+255),b
 22003  013D8C  0E00               	movlw	0
 22004  013D8E  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 22005  013D90  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 22006  013D92  0EFF               	movlw	255
 22007  013D94  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 22008  013D96  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 22009  013D98  0EFF               	movlw	255
 22010  013D9A  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 22011  013D9C  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 22012  013D9E  2999               	incf	??_IPv4_Start& (0+255),w,b
 22013  013DA0  E107               	bnz	u9320
 22014  013DA2  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 22015  013DA4  E105               	bnz	u9320
 22016  013DA6  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 22017  013DA8  E103               	bnz	u9320
 22018  013DAA  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 22019  013DAC  B4D8               	btfsc	status,2,c
 22020  013DAE  D075               	goto	l884
 22021  013DB0                     u9320:
 22022                           
 22023                           ; BSR set to: 0
 22024  013DB0  0E00               	movlw	0
 22025  013DB2  1031               	iorwf	IPv4_Start@destAddress,w,c
 22026  013DB4  6F99               	movwf	??_IPv4_Start& (0+255),b
 22027  013DB6  0EFF               	movlw	255
 22028  013DB8  1032               	iorwf	IPv4_Start@destAddress+1,w,c
 22029  013DBA  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 22030  013DBC  0EFF               	movlw	255
 22031  013DBE  1033               	iorwf	IPv4_Start@destAddress+2,w,c
 22032  013DC0  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 22033  013DC2  0EFF               	movlw	255
 22034  013DC4  1034               	iorwf	IPv4_Start@destAddress+3,w,c
 22035  013DC6  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 22036  013DC8  2999               	incf	??_IPv4_Start& (0+255),w,b
 22037  013DCA  E107               	bnz	u9330
 22038  013DCC  299A               	incf	(??_IPv4_Start+1)& (0+255),w,b
 22039  013DCE  E105               	bnz	u9330
 22040  013DD0  299B               	incf	(??_IPv4_Start+2)& (0+255),w,b
 22041  013DD2  E103               	bnz	u9330
 22042  013DD4  299C               	incf	(??_IPv4_Start+3)& (0+255),w,b
 22043  013DD6  B4D8               	btfsc	status,2,c
 22044  013DD8  D060               	goto	l884
 22045  013DDA                     u9330:
 22046                           
 22047                           ; BSR set to: 0
 22048                           ;ipv4.c: 221: {
 22049                           ;ipv4.c: 222: if( ((destAddress ^ (ip_database_info.ipv4_myAddress)) & (ip_database_info
      +                          .ipv4_subnetMask)) == 0)
 22050  013DDA  5031               	movf	IPv4_Start@destAddress,w,c
 22051  013DDC  0102               	movlb	2	; () banked
 22052  013DDE  1900               	xorwf	_ip_database_info& (0+255),w,b
 22053  013DE0  0100               	movlb	0	; () banked
 22054  013DE2  6F99               	movwf	??_IPv4_Start& (0+255),b
 22055  013DE4  5032               	movf	IPv4_Start@destAddress+1,w,c
 22056  013DE6  0102               	movlb	2	; () banked
 22057  013DE8  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
 22058  013DEA  0100               	movlb	0	; () banked
 22059  013DEC  6F9A               	movwf	(??_IPv4_Start+1)& (0+255),b
 22060  013DEE  5033               	movf	IPv4_Start@destAddress+2,w,c
 22061  013DF0  0102               	movlb	2	; () banked
 22062  013DF2  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
 22063  013DF4  0100               	movlb	0	; () banked
 22064  013DF6  6F9B               	movwf	(??_IPv4_Start+2)& (0+255),b
 22065  013DF8  5034               	movf	IPv4_Start@destAddress+3,w,c
 22066  013DFA  0102               	movlb	2	; () banked
 22067  013DFC  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 22068  013DFE  0100               	movlb	0	; () banked
 22069  013E00  6F9C               	movwf	(??_IPv4_Start+3)& (0+255),b
 22070  013E02  0102               	movlb	2	; () banked
 22071  013E04  510C               	movf	(_ip_database_info+12)& (0+255),w,b
 22072  013E06  0100               	movlb	0	; () banked
 22073  013E08  1599               	andwf	??_IPv4_Start& (0+255),w,b
 22074  013E0A  6F9D               	movwf	(??_IPv4_Start+4)& (0+255),b
 22075  013E0C  0102               	movlb	2	; () banked
 22076  013E0E  510D               	movf	(_ip_database_info+13)& (0+255),w,b
 22077  013E10  0100               	movlb	0	; () banked
 22078  013E12  159A               	andwf	(??_IPv4_Start+1)& (0+255),w,b
 22079  013E14  6F9E               	movwf	(??_IPv4_Start+5)& (0+255),b
 22080  013E16  0102               	movlb	2	; () banked
 22081  013E18  510E               	movf	(_ip_database_info+14)& (0+255),w,b
 22082  013E1A  0100               	movlb	0	; () banked
 22083  013E1C  159B               	andwf	(??_IPv4_Start+2)& (0+255),w,b
 22084  013E1E  6F9F               	movwf	(??_IPv4_Start+6)& (0+255),b
 22085  013E20  0102               	movlb	2	; () banked
 22086  013E22  510F               	movf	(_ip_database_info+15)& (0+255),w,b
 22087  013E24  0100               	movlb	0	; () banked
 22088  013E26  159C               	andwf	(??_IPv4_Start+3)& (0+255),w,b
 22089  013E28  6FA0               	movwf	(??_IPv4_Start+7)& (0+255),b
 22090  013E2A  519D               	movf	(??_IPv4_Start+4)& (0+255),w,b
 22091  013E2C  119E               	iorwf	(??_IPv4_Start+5)& (0+255),w,b
 22092  013E2E  119F               	iorwf	(??_IPv4_Start+6)& (0+255),w,b
 22093  013E30  11A0               	iorwf	(??_IPv4_Start+7)& (0+255),w,b
 22094  013E32  A4D8               	btfss	status,2,c
 22095  013E34  D009               	goto	l885
 22096                           
 22097                           ; BSR set to: 0
 22098                           ;ipv4.c: 223: {
 22099                           ;ipv4.c: 224: targetAddress = destAddress;
 22100  013E36  C031  F0A1         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 22101  013E3A  C032  F0A2         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 22102  013E3E  C033  F0A3         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 22103  013E42  C034  F0A4         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 22104                           
 22105                           ;ipv4.c: 225: }
 22106  013E46  D008               	goto	l886
 22107  013E48                     l885:
 22108                           
 22109                           ; BSR set to: 0
 22110                           ;ipv4.c: 226: else
 22111                           ;ipv4.c: 227: {
 22112                           ;ipv4.c: 228: targetAddress = (ip_database_info.ipv4_router);
 22113  013E48  C210  F0A1         	movff	_ip_database_info+16,IPv4_Start@targetAddress
 22114  013E4C  C211  F0A2         	movff	_ip_database_info+17,IPv4_Start@targetAddress+1
 22115  013E50  C212  F0A3         	movff	_ip_database_info+18,IPv4_Start@targetAddress+2
 22116  013E54  C213  F0A4         	movff	_ip_database_info+19,IPv4_Start@targetAddress+3
 22117  013E58                     l886:
 22118                           
 22119                           ; BSR set to: 0
 22120                           ;ipv4.c: 229: }
 22121                           ;ipv4.c: 230: macAddress= ARPV4_Lookup(targetAddress);
 22122                           
 22123                           ; BSR set to: 0
 22124  013E58  C0A1  F013         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 22125  013E5C  C0A2  F014         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 22126  013E60  C0A3  F015         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 22127  013E64  C0A4  F016         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 22128  013E68  ECAE  F0B0         	call	_ARPV4_Lookup	;wreg free
 22129  013E6C  C013  F0A5         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 22130  013E70  C014  F0A6         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 22131                           
 22132                           ;ipv4.c: 231: if(macAddress == 0)
 22133  013E74  0100               	movlb	0	; () banked
 22134  013E76  51A5               	movf	IPv4_Start@macAddress& (0+255),w,b
 22135  013E78  11A6               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 22136  013E7A  A4D8               	btfss	status,2,c
 22137  013E7C  D013               	goto	l889
 22138                           
 22139                           ; BSR set to: 0
 22140                           ;ipv4.c: 232: {
 22141                           ;ipv4.c: 233: ret = ARPV4_Request(targetAddress);
 22142  013E7E  C0A1  F02D         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 22143  013E82  C0A2  F02E         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 22144  013E86  C0A3  F02F         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 22145  013E8A  C0A4  F030         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 22146  013E8E  EC8F  F09A         	call	_ARPV4_Request	;wreg free
 22147  013E92  0100               	movlb	0	; () banked
 22148  013E94  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 22149                           
 22150                           ; BSR set to: 0
 22151                           ;ipv4.c: 234: return ret;
 22152  013E96  51A7               	movf	IPv4_Start@ret& (0+255),w,b
 22153                           
 22154                           ; BSR set to: 0
 22155  013E98  0012               	return	
 22156  013E9A                     l884:
 22157                           
 22158                           ;ipv4.c: 237: else
 22159                           ;ipv4.c: 238: {
 22160                           ;ipv4.c: 239: macAddress = &broadcastMAC;
 22161                           
 22162                           ; BSR set to: 0
 22163  013E9A  0E45               	movlw	low _broadcastMAC
 22164  013E9C  0100               	movlb	0	; () banked
 22165  013E9E  6FA5               	movwf	IPv4_Start@macAddress& (0+255),b
 22166  013EA0  0EFF               	movlw	high _broadcastMAC
 22167  013EA2  6FA6               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 22168  013EA4                     l889:
 22169                           
 22170                           ; BSR set to: 0
 22171                           ;ipv4.c: 240: }
 22172                           ;ipv4.c: 241: ret = ETH_WriteStart(macAddress, 0x0800);
 22173                           
 22174                           ; BSR set to: 0
 22175  013EA4  C0A5  F025         	movff	IPv4_Start@macAddress,ETH_WriteStart@dest_mac
 22176  013EA8  C0A6  F026         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@dest_mac+1
 22177  013EAC  0E08               	movlw	8
 22178  013EAE  6E28               	movwf	ETH_WriteStart@type+1,c
 22179  013EB0  0E00               	movlw	0
 22180  013EB2  6E27               	movwf	ETH_WriteStart@type,c
 22181  013EB4  ECAC  F09F         	call	_ETH_WriteStart	;wreg free
 22182  013EB8  0100               	movlb	0	; () banked
 22183  013EBA  6FA7               	movwf	IPv4_Start@ret& (0+255),b
 22184                           
 22185                           ; BSR set to: 0
 22186                           ;ipv4.c: 242: if(ret == SUCCESS)
 22187  013EBC  05A7               	decf	IPv4_Start@ret& (0+255),w,b
 22188  013EBE  A4D8               	btfss	status,2,c
 22189  013EC0  D048               	goto	l890
 22190                           
 22191                           ; BSR set to: 0
 22192                           ;ipv4.c: 243: {
 22193                           ;ipv4.c: 244: ETH_Write16(0x4500);
 22194  013EC2  0E45               	movlw	69
 22195  013EC4  6E14               	movwf	ETH_Write16@data+1,c
 22196  013EC6  0E00               	movlw	0
 22197  013EC8  6E13               	movwf	ETH_Write16@data,c
 22198  013ECA  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 22199                           
 22200                           ;ipv4.c: 245: ETH_Write16(0);
 22201  013ECE  0E00               	movlw	0
 22202  013ED0  6E14               	movwf	ETH_Write16@data+1,c
 22203  013ED2  0E00               	movlw	0
 22204  013ED4  6E13               	movwf	ETH_Write16@data,c
 22205  013ED6  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 22206                           
 22207                           ;ipv4.c: 246: ETH_Write32(0xAA554000);
 22208  013EDA  0E00               	movlw	0
 22209  013EDC  6E13               	movwf	ETH_Write32@data,c
 22210  013EDE  0E40               	movlw	64
 22211  013EE0  6E14               	movwf	ETH_Write32@data+1,c
 22212  013EE2  0E55               	movlw	85
 22213  013EE4  6E15               	movwf	ETH_Write32@data+2,c
 22214  013EE6  0EAA               	movlw	170
 22215  013EE8  6E16               	movwf	ETH_Write32@data+3,c
 22216  013EEA  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 22217                           
 22218                           ;ipv4.c: 247: ETH_Write8(64u);
 22219  013EEE  0E40               	movlw	64
 22220  013EF0  EC98  F0B5         	call	_ETH_Write8
 22221                           
 22222                           ;ipv4.c: 248: ETH_Write8(protocol);
 22223  013EF4  5035               	movf	IPv4_Start@protocol,w,c
 22224  013EF6  EC98  F0B5         	call	_ETH_Write8
 22225                           
 22226                           ;ipv4.c: 249: ETH_Write16(0);
 22227  013EFA  0E00               	movlw	0
 22228  013EFC  6E14               	movwf	ETH_Write16@data+1,c
 22229  013EFE  0E00               	movlw	0
 22230  013F00  6E13               	movwf	ETH_Write16@data,c
 22231  013F02  EC5D  F0B5         	call	_ETH_Write16	;wreg free
 22232                           
 22233                           ;ipv4.c: 250: ETH_Write32((ip_database_info.ipv4_myAddress));
 22234  013F06  C200  F013         	movff	_ip_database_info,ETH_Write32@data
 22235  013F0A  C201  F014         	movff	_ip_database_info+1,ETH_Write32@data+1
 22236  013F0E  C202  F015         	movff	_ip_database_info+2,ETH_Write32@data+2
 22237  013F12  C203  F016         	movff	_ip_database_info+3,ETH_Write32@data+3
 22238  013F16  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 22239                           
 22240                           ;ipv4.c: 251: ETH_Write32(destAddress);
 22241  013F1A  C031  F013         	movff	IPv4_Start@destAddress,ETH_Write32@data
 22242  013F1E  C032  F014         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 22243  013F22  C033  F015         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 22244  013F26  C034  F016         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 22245  013F2A  ECE6  F0B4         	call	_ETH_Write32	;wreg free
 22246                           
 22247                           ;ipv4.c: 254: ipv4Header.srcIpAddress = (ip_database_info.ipv4_myAddress);
 22248  013F2E  C200  F274         	movff	_ip_database_info,_ipv4Header+12
 22249  013F32  C201  F275         	movff	_ip_database_info+1,_ipv4Header+13
 22250  013F36  C202  F276         	movff	_ip_database_info+2,_ipv4Header+14
 22251  013F3A  C203  F277         	movff	_ip_database_info+3,_ipv4Header+15
 22252                           
 22253                           ;ipv4.c: 255: ipv4Header.dstIpAddress = destAddress;
 22254  013F3E  C031  F278         	movff	IPv4_Start@destAddress,_ipv4Header+16
 22255  013F42  C032  F279         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 22256  013F46  C033  F27A         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 22257  013F4A  C034  F27B         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 22258                           
 22259                           ;ipv4.c: 256: ipv4Header.protocol = protocol;
 22260  013F4E  C035  F271         	movff	IPv4_Start@protocol,_ipv4Header+9
 22261  013F52                     l890:
 22262                           
 22263                           ;ipv4.c: 257: }
 22264                           ;ipv4.c: 258: }
 22265                           ;ipv4.c: 259: return ret;
 22266  013F52  0100               	movlb	0	; () banked
 22267  013F54  51A7               	movf	IPv4_Start@ret& (0+255),w,b
 22268  013F56  0012               	return	
 22269  013F58                     __end_of_IPv4_Start:
 22270                           	opt stack 0
 22271                           tosu	equ	0xFFF
 22272                           tosh	equ	0xFFE
 22273                           tosl	equ	0xFFD
 22274                           pclath	equ	0xFFA
 22275                           tblptru	equ	0xFF8
 22276                           tblptrh	equ	0xFF7
 22277                           tblptrl	equ	0xFF6
 22278                           tablat	equ	0xFF5
 22279                           prodh	equ	0xFF4
 22280                           prodl	equ	0xFF3
 22281                           intcon	equ	0xFF2
 22282                           indf0	equ	0xFEF
 22283                           postinc0	equ	0xFEE
 22284                           fsr0h	equ	0xFEA
 22285                           fsr0l	equ	0xFE9
 22286                           wreg	equ	0xFE8
 22287                           indf1	equ	0xFE7
 22288                           postinc1	equ	0xFE6
 22289                           postdec1	equ	0xFE5
 22290                           plusw1	equ	0xFE3
 22291                           fsr1h	equ	0xFE2
 22292                           fsr1l	equ	0xFE1
 22293                           indf2	equ	0xFDF
 22294                           postinc2	equ	0xFDE
 22295                           postdec2	equ	0xFDD
 22296                           plusw2	equ	0xFDB
 22297                           fsr2h	equ	0xFDA
 22298                           fsr2l	equ	0xFD9
 22299                           status	equ	0xFD8
 22300                           
 22301 ;; *************** function _ETH_Write32 *****************
 22302 ;; Defined at:
 22303 ;;		line 570 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22304 ;; Parameters:    Size  Location     Type
 22305 ;;  data            4   18[COMRAM] unsigned long 
 22306 ;; Auto vars:     Size  Location     Type
 22307 ;;		None
 22308 ;; Return value:  Size  Location     Type
 22309 ;;                  1    wreg      void 
 22310 ;; Registers used:
 22311 ;;		wreg, status,2, cstack
 22312 ;; Tracked objects:
 22313 ;;		On entry : 0/0
 22314 ;;		On exit  : 0/0
 22315 ;;		Unchanged: 0/0
 22316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22321 ;;Total ram usage:        4 bytes
 22322 ;; Hardware stack levels used:    1
 22323 ;; Hardware stack levels required when called:    5
 22324 ;; This function calls:
 22325 ;;		_ETH_EdataWrite
 22326 ;; This function is called by:
 22327 ;;		_IPv4_Start
 22328 ;;		_ICMP_PortUnreachable
 22329 ;;		_sendRequest
 22330 ;;		_NTP_Request
 22331 ;; This function uses a non-reentrant model
 22332 ;;
 22333                           
 22334                           	psect	text86
 22335  0169CC                     __ptext86:
 22336                           	opt stack 0
 22337  0169CC                     _ETH_Write32:
 22338                           	opt stack 20
 22339                           
 22340                           ;ETHxxJ6x_driver.c: 572: ETH_EdataWrite(data >> 24);
 22341                           
 22342                           ; BSR set to: 0
 22343                           ;incstack = 0
 22344  0169CC  5016               	movf	ETH_Write32@data+3,w,c
 22345  0169CE  ECA8  F0B5         	call	_ETH_EdataWrite
 22346                           
 22347                           ;ETHxxJ6x_driver.c: 573: ETH_EdataWrite(data >> 16);
 22348  0169D2  5015               	movf	ETH_Write32@data+2,w,c
 22349  0169D4  ECA8  F0B5         	call	_ETH_EdataWrite
 22350                           
 22351                           ;ETHxxJ6x_driver.c: 574: ETH_EdataWrite(data >> 8);
 22352  0169D8  5014               	movf	ETH_Write32@data+1,w,c
 22353  0169DA  ECA8  F0B5         	call	_ETH_EdataWrite
 22354                           
 22355                           ;ETHxxJ6x_driver.c: 575: ETH_EdataWrite(data);
 22356  0169DE  5013               	movf	ETH_Write32@data,w,c
 22357  0169E0  ECA8  F0B5         	call	_ETH_EdataWrite
 22358  0169E4  0012               	return		;funcret
 22359  0169E6                     __end_of_ETH_Write32:
 22360                           	opt stack 0
 22361                           tosu	equ	0xFFF
 22362                           tosh	equ	0xFFE
 22363                           tosl	equ	0xFFD
 22364                           pclath	equ	0xFFA
 22365                           tblptru	equ	0xFF8
 22366                           tblptrh	equ	0xFF7
 22367                           tblptrl	equ	0xFF6
 22368                           tablat	equ	0xFF5
 22369                           prodh	equ	0xFF4
 22370                           prodl	equ	0xFF3
 22371                           intcon	equ	0xFF2
 22372                           indf0	equ	0xFEF
 22373                           postinc0	equ	0xFEE
 22374                           fsr0h	equ	0xFEA
 22375                           fsr0l	equ	0xFE9
 22376                           wreg	equ	0xFE8
 22377                           indf1	equ	0xFE7
 22378                           postinc1	equ	0xFE6
 22379                           postdec1	equ	0xFE5
 22380                           plusw1	equ	0xFE3
 22381                           fsr1h	equ	0xFE2
 22382                           fsr1l	equ	0xFE1
 22383                           indf2	equ	0xFDF
 22384                           postinc2	equ	0xFDE
 22385                           postdec2	equ	0xFDD
 22386                           plusw2	equ	0xFDB
 22387                           fsr2h	equ	0xFDA
 22388                           fsr2l	equ	0xFD9
 22389                           status	equ	0xFD8
 22390                           
 22391 ;; *************** function _ETH_Write16 *****************
 22392 ;; Defined at:
 22393 ;;		line 549 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22394 ;; Parameters:    Size  Location     Type
 22395 ;;  data            2   18[COMRAM] unsigned int 
 22396 ;; Auto vars:     Size  Location     Type
 22397 ;;		None
 22398 ;; Return value:  Size  Location     Type
 22399 ;;                  1    wreg      void 
 22400 ;; Registers used:
 22401 ;;		wreg, status,2, cstack
 22402 ;; Tracked objects:
 22403 ;;		On entry : 0/0
 22404 ;;		On exit  : 0/0
 22405 ;;		Unchanged: 0/0
 22406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22411 ;;Total ram usage:        2 bytes
 22412 ;; Hardware stack levels used:    1
 22413 ;; Hardware stack levels required when called:    5
 22414 ;; This function calls:
 22415 ;;		_ETH_EdataWrite
 22416 ;; This function is called by:
 22417 ;;		_IPv4_Start
 22418 ;;		_ICMP_EchoReply
 22419 ;;		_ICMP_PortUnreachable
 22420 ;;		_UDP_Start
 22421 ;;		_sendRequest
 22422 ;;		_DNS_Query
 22423 ;; This function uses a non-reentrant model
 22424 ;;
 22425                           
 22426                           	psect	text87
 22427  016ABA                     __ptext87:
 22428                           	opt stack 0
 22429  016ABA                     _ETH_Write16:
 22430                           	opt stack 20
 22431                           
 22432                           ;ETHxxJ6x_driver.c: 551: ETH_EdataWrite(data >> 8);
 22433                           
 22434                           ;incstack = 0
 22435  016ABA  5014               	movf	ETH_Write16@data+1,w,c
 22436  016ABC  ECA8  F0B5         	call	_ETH_EdataWrite
 22437                           
 22438                           ;ETHxxJ6x_driver.c: 552: ETH_EdataWrite(data);
 22439  016AC0  5013               	movf	ETH_Write16@data,w,c
 22440  016AC2  ECA8  F0B5         	call	_ETH_EdataWrite
 22441  016AC6  0012               	return		;funcret
 22442  016AC8                     __end_of_ETH_Write16:
 22443                           	opt stack 0
 22444                           tosu	equ	0xFFF
 22445                           tosh	equ	0xFFE
 22446                           tosl	equ	0xFFD
 22447                           pclath	equ	0xFFA
 22448                           tblptru	equ	0xFF8
 22449                           tblptrh	equ	0xFF7
 22450                           tblptrl	equ	0xFF6
 22451                           tablat	equ	0xFF5
 22452                           prodh	equ	0xFF4
 22453                           prodl	equ	0xFF3
 22454                           intcon	equ	0xFF2
 22455                           indf0	equ	0xFEF
 22456                           postinc0	equ	0xFEE
 22457                           fsr0h	equ	0xFEA
 22458                           fsr0l	equ	0xFE9
 22459                           wreg	equ	0xFE8
 22460                           indf1	equ	0xFE7
 22461                           postinc1	equ	0xFE6
 22462                           postdec1	equ	0xFE5
 22463                           plusw1	equ	0xFE3
 22464                           fsr1h	equ	0xFE2
 22465                           fsr1l	equ	0xFE1
 22466                           indf2	equ	0xFDF
 22467                           postinc2	equ	0xFDE
 22468                           postdec2	equ	0xFDD
 22469                           plusw2	equ	0xFDB
 22470                           fsr2h	equ	0xFDA
 22471                           fsr2l	equ	0xFD9
 22472                           status	equ	0xFD8
 22473                           
 22474 ;; *************** function _ARPV4_Request *****************
 22475 ;; Defined at:
 22476 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 22477 ;; Parameters:    Size  Location     Type
 22478 ;;  destAddress     4   44[COMRAM] unsigned long 
 22479 ;; Auto vars:     Size  Location     Type
 22480 ;;  header         28   29[BANK0 ] struct .
 22481 ;;  ret             1   28[BANK0 ] enum E476
 22482 ;; Return value:  Size  Location     Type
 22483 ;;                  1    wreg      enum E476
 22484 ;; Registers used:
 22485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22486 ;; Tracked objects:
 22487 ;;		On entry : 0/0
 22488 ;;		On exit  : 0/0
 22489 ;;		Unchanged: 0/0
 22490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22492 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22493 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22494 ;;      Totals:         4      57       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22495 ;;Total ram usage:       61 bytes
 22496 ;; Hardware stack levels used:    1
 22497 ;; Hardware stack levels required when called:    7
 22498 ;; This function calls:
 22499 ;;		_ETH_Send
 22500 ;;		_ETH_WriteBlock
 22501 ;;		_ETH_WriteStart
 22502 ;;		_memcpy
 22503 ;; This function is called by:
 22504 ;;		_IPv4_Start
 22505 ;; This function uses a non-reentrant model
 22506 ;;
 22507                           
 22508                           	psect	text88
 22509  01351E                     __ptext88:
 22510                           	opt stack 0
 22511  01351E                     _ARPV4_Request:
 22512                           	opt stack 18
 22513                           
 22514                           ;arpv4.c: 200: error_msg ret;
 22515                           ;arpv4.c: 202: ret = ERROR;
 22516                           
 22517                           ;incstack = 0
 22518  01351E  0E00               	movlw	0
 22519  013520  0100               	movlb	0	; () banked
 22520  013522  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 22521                           
 22522                           ;arpv4.c: 204: arpHeader_t header;
 22523                           ;arpv4.c: 205: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 22524  013524  0E01               	movlw	1
 22525  013526  6F7E               	movwf	(ARPV4_Request@header+1)& (0+255),b
 22526  013528  0E00               	movlw	0
 22527  01352A  6F7D               	movwf	ARPV4_Request@header& (0+255),b
 22528                           
 22529                           ;arpv4.c: 206: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 22530  01352C  0E00               	movlw	0
 22531  01352E  6F80               	movwf	(ARPV4_Request@header+3)& (0+255),b
 22532  013530  0E08               	movlw	8
 22533  013532  6F7F               	movwf	(ARPV4_Request@header+2)& (0+255),b
 22534                           
 22535                           ;arpv4.c: 207: header.hlen = 6;
 22536  013534  0E06               	movlw	6
 22537  013536  6F81               	movwf	(ARPV4_Request@header+4)& (0+255),b
 22538                           
 22539                           ;arpv4.c: 208: header.plen = 4;
 22540  013538  0E04               	movlw	4
 22541  01353A  6F82               	movwf	(ARPV4_Request@header+5)& (0+255),b
 22542                           
 22543                           ;arpv4.c: 209: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 22544  01353C  0E01               	movlw	1
 22545  01353E  6F84               	movwf	(ARPV4_Request@header+7)& (0+255),b
 22546  013540  0E00               	movlw	0
 22547  013542  6F83               	movwf	(ARPV4_Request@header+6)& (0+255),b
 22548                           
 22549                           ; BSR set to: 0
 22550                           ;arpv4.c: 210: memcpy((void*)&header.sha, (void*)&hostMacAddress, sizeof(mac48Address_t)
      +                          );
 22551  013544  0E85               	movlw	low (ARPV4_Request@header+8)
 22552  013546  6E13               	movwf	memcpy@d1,c
 22553  013548  0E00               	movlw	high (ARPV4_Request@header+8)
 22554  01354A  6E14               	movwf	memcpy@d1+1,c
 22555  01354C  0E84               	movlw	low _hostMacAddress
 22556  01354E  6E15               	movwf	memcpy@s1,c
 22557  013550  0E02               	movlw	high _hostMacAddress
 22558  013552  6E16               	movwf	memcpy@s1+1,c
 22559  013554  0E00               	movlw	0
 22560  013556  6E18               	movwf	memcpy@n+1,c
 22561  013558  0E06               	movlw	6
 22562  01355A  6E17               	movwf	memcpy@n,c
 22563  01355C  EC1B  F0B2         	call	_memcpy	;wreg free
 22564                           
 22565                           ;arpv4.c: 211: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
 22566  013560  0EFF               	movlw	255
 22567  013562  0102               	movlb	2	; () banked
 22568  013564  1500               	andwf	_ip_database_info& (0+255),w,b
 22569  013566  0100               	movlb	0	; () banked
 22570  013568  6F60               	movwf	??_ARPV4_Request& (0+255),b
 22571  01356A  0E00               	movlw	0
 22572  01356C  0102               	movlb	2	; () banked
 22573  01356E  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 22574  013570  0100               	movlb	0	; () banked
 22575  013572  6F61               	movwf	(??_ARPV4_Request+1)& (0+255),b
 22576  013574  0E00               	movlw	0
 22577  013576  0102               	movlb	2	; () banked
 22578  013578  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 22579  01357A  0100               	movlb	0	; () banked
 22580  01357C  6F62               	movwf	(??_ARPV4_Request+2)& (0+255),b
 22581  01357E  0E00               	movlw	0
 22582  013580  0102               	movlb	2	; () banked
 22583  013582  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 22584  013584  0100               	movlb	0	; () banked
 22585  013586  6F63               	movwf	(??_ARPV4_Request+3)& (0+255),b
 22586  013588  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 22587  01358C  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 22588  01358E  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 22589  013590  6B60               	clrf	??_ARPV4_Request& (0+255),b
 22590  013592  0E00               	movlw	0
 22591  013594  0102               	movlb	2	; () banked
 22592  013596  1500               	andwf	_ip_database_info& (0+255),w,b
 22593  013598  0100               	movlb	0	; () banked
 22594  01359A  6F64               	movwf	(??_ARPV4_Request+4)& (0+255),b
 22595  01359C  0EFF               	movlw	255
 22596  01359E  0102               	movlb	2	; () banked
 22597  0135A0  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 22598  0135A2  0100               	movlb	0	; () banked
 22599  0135A4  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 22600  0135A6  0E00               	movlw	0
 22601  0135A8  0102               	movlb	2	; () banked
 22602  0135AA  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 22603  0135AC  0100               	movlb	0	; () banked
 22604  0135AE  6F66               	movwf	(??_ARPV4_Request+6)& (0+255),b
 22605  0135B0  0E00               	movlw	0
 22606  0135B2  0102               	movlb	2	; () banked
 22607  0135B4  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 22608  0135B6  0100               	movlb	0	; () banked
 22609  0135B8  6F67               	movwf	(??_ARPV4_Request+7)& (0+255),b
 22610  0135BA  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 22611  0135BE  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 22612  0135C2  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 22613  0135C6  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 22614  0135C8  C200  F068         	movff	_ip_database_info,??_ARPV4_Request+8
 22615  0135CC  C201  F069         	movff	_ip_database_info+1,??_ARPV4_Request+9
 22616  0135D0  C202  F06A         	movff	_ip_database_info+2,??_ARPV4_Request+10
 22617  0135D4  C203  F06B         	movff	_ip_database_info+3,??_ARPV4_Request+11
 22618  0135D8  C069  F068         	movff	??_ARPV4_Request+9,??_ARPV4_Request+8
 22619  0135DC  C06A  F069         	movff	??_ARPV4_Request+10,??_ARPV4_Request+9
 22620  0135E0  C06B  F06A         	movff	??_ARPV4_Request+11,??_ARPV4_Request+10
 22621  0135E4  6B6B               	clrf	(??_ARPV4_Request+11)& (0+255),b
 22622  0135E6  0E00               	movlw	0
 22623  0135E8  1568               	andwf	(??_ARPV4_Request+8)& (0+255),w,b
 22624  0135EA  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 22625  0135EC  0EFF               	movlw	255
 22626  0135EE  1569               	andwf	(??_ARPV4_Request+9)& (0+255),w,b
 22627  0135F0  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 22628  0135F2  0E00               	movlw	0
 22629  0135F4  156A               	andwf	(??_ARPV4_Request+10)& (0+255),w,b
 22630  0135F6  6F6E               	movwf	(??_ARPV4_Request+14)& (0+255),b
 22631  0135F8  0E00               	movlw	0
 22632  0135FA  156B               	andwf	(??_ARPV4_Request+11)& (0+255),w,b
 22633  0135FC  6F6F               	movwf	(??_ARPV4_Request+15)& (0+255),b
 22634  0135FE  0E00               	movlw	0
 22635  013600  0102               	movlb	2	; () banked
 22636  013602  1500               	andwf	_ip_database_info& (0+255),w,b
 22637  013604  0100               	movlb	0	; () banked
 22638  013606  6F70               	movwf	(??_ARPV4_Request+16)& (0+255),b
 22639  013608  0E00               	movlw	0
 22640  01360A  0102               	movlb	2	; () banked
 22641  01360C  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 22642  01360E  0100               	movlb	0	; () banked
 22643  013610  6F71               	movwf	(??_ARPV4_Request+17)& (0+255),b
 22644  013612  0E00               	movlw	0
 22645  013614  0102               	movlb	2	; () banked
 22646  013616  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 22647  013618  0100               	movlb	0	; () banked
 22648  01361A  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 22649  01361C  0EFF               	movlw	255
 22650  01361E  0102               	movlb	2	; () banked
 22651  013620  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 22652  013622  0100               	movlb	0	; () banked
 22653  013624  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 22654  013626  0E19               	movlw	25
 22655  013628  D005               	goto	u9190
 22656  01362A                     u9195:
 22657  01362A  90D8               	bcf	status,0,c
 22658  01362C  3373               	rrcf	(??_ARPV4_Request+19)& (0+255),f,b
 22659  01362E  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 22660  013630  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 22661  013632  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 22662  013634                     u9190:
 22663  013634  2EE8               	decfsz	wreg,f,c
 22664  013636  D7F9               	goto	u9195
 22665  013638  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 22666  01363A  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 22667  01363C  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 22668  01363E  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 22669  013640  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 22670  013642  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 22671  013644  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 22672  013646  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 22673  013648  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 22674  01364A  516F               	movf	(??_ARPV4_Request+15)& (0+255),w,b
 22675  01364C  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 22676  01364E  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 22677  013650  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 22678  013652  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 22679  013654  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 22680  013656  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 22681  013658  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 22682  01365A  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 22683  01365C  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 22684  01365E  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 22685  013660  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 22686  013662  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 22687  013664  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 22688  013666  6F7B               	movwf	(??_ARPV4_Request+27)& (0+255),b
 22689  013668  5160               	movf	??_ARPV4_Request& (0+255),w,b
 22690  01366A  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 22691  01366C  6F8B               	movwf	(ARPV4_Request@header+14)& (0+255),b
 22692  01366E  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 22693  013670  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 22694  013672  6F8C               	movwf	(ARPV4_Request@header+15)& (0+255),b
 22695  013674  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 22696  013676  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 22697  013678  6F8D               	movwf	(ARPV4_Request@header+16)& (0+255),b
 22698  01367A  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 22699  01367C  117B               	iorwf	(??_ARPV4_Request+27)& (0+255),w,b
 22700  01367E  6F8E               	movwf	(ARPV4_Request@header+17)& (0+255),b
 22701                           
 22702                           ; BSR set to: 0
 22703                           ;arpv4.c: 212: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 22704  013680  0EFF               	movlw	255
 22705  013682  142D               	andwf	ARPV4_Request@destAddress,w,c
 22706  013684  6F60               	movwf	??_ARPV4_Request& (0+255),b
 22707  013686  0E00               	movlw	0
 22708  013688  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 22709  01368A  6F61               	movwf	(??_ARPV4_Request+1)& (0+255),b
 22710  01368C  0E00               	movlw	0
 22711  01368E  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 22712  013690  6F62               	movwf	(??_ARPV4_Request+2)& (0+255),b
 22713  013692  0E00               	movlw	0
 22714  013694  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 22715  013696  6F63               	movwf	(??_ARPV4_Request+3)& (0+255),b
 22716  013698  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 22717  01369C  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 22718  01369E  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 22719  0136A0  6B60               	clrf	??_ARPV4_Request& (0+255),b
 22720  0136A2  0E00               	movlw	0
 22721  0136A4  142D               	andwf	ARPV4_Request@destAddress,w,c
 22722  0136A6  6F64               	movwf	(??_ARPV4_Request+4)& (0+255),b
 22723  0136A8  0EFF               	movlw	255
 22724  0136AA  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 22725  0136AC  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 22726  0136AE  0E00               	movlw	0
 22727  0136B0  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 22728  0136B2  6F66               	movwf	(??_ARPV4_Request+6)& (0+255),b
 22729  0136B4  0E00               	movlw	0
 22730  0136B6  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 22731  0136B8  6F67               	movwf	(??_ARPV4_Request+7)& (0+255),b
 22732  0136BA  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 22733  0136BE  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 22734  0136C2  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 22735  0136C6  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 22736  0136C8  C02D  F068         	movff	ARPV4_Request@destAddress,??_ARPV4_Request+8
 22737  0136CC  C02E  F069         	movff	ARPV4_Request@destAddress+1,??_ARPV4_Request+9
 22738  0136D0  C02F  F06A         	movff	ARPV4_Request@destAddress+2,??_ARPV4_Request+10
 22739  0136D4  C030  F06B         	movff	ARPV4_Request@destAddress+3,??_ARPV4_Request+11
 22740  0136D8  C069  F068         	movff	??_ARPV4_Request+9,??_ARPV4_Request+8
 22741  0136DC  C06A  F069         	movff	??_ARPV4_Request+10,??_ARPV4_Request+9
 22742  0136E0  C06B  F06A         	movff	??_ARPV4_Request+11,??_ARPV4_Request+10
 22743  0136E4  6B6B               	clrf	(??_ARPV4_Request+11)& (0+255),b
 22744  0136E6  0E00               	movlw	0
 22745  0136E8  1568               	andwf	(??_ARPV4_Request+8)& (0+255),w,b
 22746  0136EA  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 22747  0136EC  0EFF               	movlw	255
 22748  0136EE  1569               	andwf	(??_ARPV4_Request+9)& (0+255),w,b
 22749  0136F0  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 22750  0136F2  0E00               	movlw	0
 22751  0136F4  156A               	andwf	(??_ARPV4_Request+10)& (0+255),w,b
 22752  0136F6  6F6E               	movwf	(??_ARPV4_Request+14)& (0+255),b
 22753  0136F8  0E00               	movlw	0
 22754  0136FA  156B               	andwf	(??_ARPV4_Request+11)& (0+255),w,b
 22755  0136FC  6F6F               	movwf	(??_ARPV4_Request+15)& (0+255),b
 22756  0136FE  0E00               	movlw	0
 22757  013700  142D               	andwf	ARPV4_Request@destAddress,w,c
 22758  013702  6F70               	movwf	(??_ARPV4_Request+16)& (0+255),b
 22759  013704  0E00               	movlw	0
 22760  013706  142E               	andwf	ARPV4_Request@destAddress+1,w,c
 22761  013708  6F71               	movwf	(??_ARPV4_Request+17)& (0+255),b
 22762  01370A  0E00               	movlw	0
 22763  01370C  142F               	andwf	ARPV4_Request@destAddress+2,w,c
 22764  01370E  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 22765  013710  0EFF               	movlw	255
 22766  013712  1430               	andwf	ARPV4_Request@destAddress+3,w,c
 22767  013714  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 22768  013716  0E19               	movlw	25
 22769  013718  D005               	goto	u9200
 22770  01371A                     u9205:
 22771  01371A  90D8               	bcf	status,0,c
 22772  01371C  3373               	rrcf	(??_ARPV4_Request+19)& (0+255),f,b
 22773  01371E  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 22774  013720  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 22775  013722  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 22776  013724                     u9200:
 22777  013724  2EE8               	decfsz	wreg,f,c
 22778  013726  D7F9               	goto	u9205
 22779  013728  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 22780  01372A  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 22781  01372C  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 22782  01372E  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 22783  013730  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 22784  013732  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 22785  013734  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 22786  013736  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 22787  013738  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 22788  01373A  516F               	movf	(??_ARPV4_Request+15)& (0+255),w,b
 22789  01373C  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 22790  01373E  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 22791  013740  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 22792  013742  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 22793  013744  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 22794  013746  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 22795  013748  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 22796  01374A  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 22797  01374C  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 22798  01374E  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 22799  013750  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 22800  013752  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 22801  013754  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 22802  013756  6F7B               	movwf	(??_ARPV4_Request+27)& (0+255),b
 22803  013758  5160               	movf	??_ARPV4_Request& (0+255),w,b
 22804  01375A  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 22805  01375C  6F95               	movwf	(ARPV4_Request@header+24)& (0+255),b
 22806  01375E  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 22807  013760  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 22808  013762  6F96               	movwf	(ARPV4_Request@header+25)& (0+255),b
 22809  013764  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 22810  013766  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 22811  013768  6F97               	movwf	(ARPV4_Request@header+26)& (0+255),b
 22812  01376A  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 22813  01376C  117B               	iorwf	(??_ARPV4_Request+27)& (0+255),w,b
 22814  01376E  6F98               	movwf	(ARPV4_Request@header+27)& (0+255),b
 22815                           
 22816                           ; BSR set to: 0
 22817                           ;arpv4.c: 213: header.tha.s.byte1 = 0;
 22818  013770  0E00               	movlw	0
 22819  013772  6F8F               	movwf	(ARPV4_Request@header+18)& (0+255),b
 22820                           
 22821                           ; BSR set to: 0
 22822                           ;arpv4.c: 214: header.tha.s.byte2 = 0;
 22823  013774  0E00               	movlw	0
 22824  013776  6F90               	movwf	(ARPV4_Request@header+19)& (0+255),b
 22825                           
 22826                           ; BSR set to: 0
 22827                           ;arpv4.c: 215: header.tha.s.byte3 = 0;
 22828  013778  0E00               	movlw	0
 22829  01377A  6F91               	movwf	(ARPV4_Request@header+20)& (0+255),b
 22830                           
 22831                           ; BSR set to: 0
 22832                           ;arpv4.c: 216: header.tha.s.byte4 = 0;
 22833  01377C  0E00               	movlw	0
 22834  01377E  6F92               	movwf	(ARPV4_Request@header+21)& (0+255),b
 22835                           
 22836                           ; BSR set to: 0
 22837                           ;arpv4.c: 217: header.tha.s.byte5 = 0;
 22838  013780  0E00               	movlw	0
 22839  013782  6F93               	movwf	(ARPV4_Request@header+22)& (0+255),b
 22840                           
 22841                           ; BSR set to: 0
 22842                           ;arpv4.c: 218: header.tha.s.byte6 = 0;
 22843  013784  0E00               	movlw	0
 22844  013786  6F94               	movwf	(ARPV4_Request@header+23)& (0+255),b
 22845                           
 22846                           ; BSR set to: 0
 22847                           ;arpv4.c: 220: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 22848  013788  0E45               	movlw	low _broadcastMAC
 22849  01378A  6E25               	movwf	ETH_WriteStart@dest_mac,c
 22850  01378C  0EFF               	movlw	high _broadcastMAC
 22851  01378E  6E26               	movwf	ETH_WriteStart@dest_mac+1,c
 22852  013790  0E08               	movlw	8
 22853  013792  6E28               	movwf	ETH_WriteStart@type+1,c
 22854  013794  0E06               	movlw	6
 22855  013796  6E27               	movwf	ETH_WriteStart@type,c
 22856  013798  ECAC  F09F         	call	_ETH_WriteStart	;wreg free
 22857  01379C  0100               	movlb	0	; () banked
 22858  01379E  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 22859                           
 22860                           ; BSR set to: 0
 22861                           ;arpv4.c: 221: if(ret == SUCCESS)
 22862  0137A0  057C               	decf	ARPV4_Request@ret& (0+255),w,b
 22863  0137A2  A4D8               	btfss	status,2,c
 22864  0137A4  D013               	goto	l338
 22865                           
 22866                           ; BSR set to: 0
 22867                           ;arpv4.c: 222: {
 22868                           ;arpv4.c: 223: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 22869  0137A6  0E7D               	movlw	low ARPV4_Request@header
 22870  0137A8  6E13               	movwf	ETH_WriteBlock@buffer,c
 22871  0137AA  0E00               	movlw	high ARPV4_Request@header
 22872  0137AC  6E14               	movwf	ETH_WriteBlock@buffer+1,c
 22873  0137AE  0E00               	movlw	0
 22874  0137B0  6E16               	movwf	ETH_WriteBlock@length+1,c
 22875  0137B2  0E1C               	movlw	28
 22876  0137B4  6E15               	movwf	ETH_WriteBlock@length,c
 22877  0137B6  ECB8  F0B2         	call	_ETH_WriteBlock	;wreg free
 22878                           
 22879                           ;arpv4.c: 224: ret = ETH_Send();
 22880  0137BA  EC88  F0AC         	call	_ETH_Send	;wreg free
 22881  0137BE  0100               	movlb	0	; () banked
 22882  0137C0  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
 22883                           
 22884                           ; BSR set to: 0
 22885                           ;arpv4.c: 225: if(ret == SUCCESS)
 22886  0137C2  057C               	decf	ARPV4_Request@ret& (0+255),w,b
 22887  0137C4  A4D8               	btfss	status,2,c
 22888  0137C6  D002               	goto	l338
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;arpv4.c: 226: {
 22892                           ;arpv4.c: 227: return MAC_NOT_FOUND;
 22893  0137C8  0E05               	movlw	5
 22894                           
 22895                           ; BSR set to: 0
 22896  0137CA  0012               	return	
 22897  0137CC                     l338:
 22898                           
 22899                           ; BSR set to: 0
 22900                           ;arpv4.c: 228: }
 22901                           ;arpv4.c: 229: }
 22902                           ;arpv4.c: 230: return ret;
 22903                           
 22904                           ; BSR set to: 0
 22905                           
 22906                           ; BSR set to: 0
 22907  0137CC  517C               	movf	ARPV4_Request@ret& (0+255),w,b
 22908  0137CE  0012               	return	
 22909  0137D0                     __end_of_ARPV4_Request:
 22910                           	opt stack 0
 22911                           tosu	equ	0xFFF
 22912                           tosh	equ	0xFFE
 22913                           tosl	equ	0xFFD
 22914                           pclath	equ	0xFFA
 22915                           tblptru	equ	0xFF8
 22916                           tblptrh	equ	0xFF7
 22917                           tblptrl	equ	0xFF6
 22918                           tablat	equ	0xFF5
 22919                           prodh	equ	0xFF4
 22920                           prodl	equ	0xFF3
 22921                           intcon	equ	0xFF2
 22922                           indf0	equ	0xFEF
 22923                           postinc0	equ	0xFEE
 22924                           fsr0h	equ	0xFEA
 22925                           fsr0l	equ	0xFE9
 22926                           wreg	equ	0xFE8
 22927                           indf1	equ	0xFE7
 22928                           postinc1	equ	0xFE6
 22929                           postdec1	equ	0xFE5
 22930                           plusw1	equ	0xFE3
 22931                           fsr1h	equ	0xFE2
 22932                           fsr1l	equ	0xFE1
 22933                           indf2	equ	0xFDF
 22934                           postinc2	equ	0xFDE
 22935                           postdec2	equ	0xFDD
 22936                           plusw2	equ	0xFDB
 22937                           fsr2h	equ	0xFDA
 22938                           fsr2l	equ	0xFD9
 22939                           status	equ	0xFD8
 22940                           
 22941 ;; *************** function _memcpy *****************
 22942 ;; Defined at:
 22943 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\memcpy.c"
 22944 ;; Parameters:    Size  Location     Type
 22945 ;;  d1              2   18[COMRAM] PTR void 
 22946 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), 
 22947 ;;  s1              2   20[COMRAM] PTR const void 
 22948 ;;		 -> hostMacAddress(6), 
 22949 ;;  n               2   22[COMRAM] unsigned int 
 22950 ;; Auto vars:     Size  Location     Type
 22951 ;;  s               2   27[COMRAM] PTR const unsigned char 
 22952 ;;		 -> hostMacAddress(6), 
 22953 ;;  d               2   25[COMRAM] PTR unsigned char 
 22954 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), 
 22955 ;;  tmp             1   24[COMRAM] unsigned char 
 22956 ;; Return value:  Size  Location     Type
 22957 ;;                  2   18[COMRAM] PTR void 
 22958 ;; Registers used:
 22959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22960 ;; Tracked objects:
 22961 ;;		On entry : 0/0
 22962 ;;		On exit  : 0/0
 22963 ;;		Unchanged: 0/0
 22964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22965 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22966 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22968 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22969 ;;Total ram usage:       11 bytes
 22970 ;; Hardware stack levels used:    1
 22971 ;; Hardware stack levels required when called:    4
 22972 ;; This function calls:
 22973 ;;		Nothing
 22974 ;; This function is called by:
 22975 ;;		_ARPV4_Packet
 22976 ;;		_ARPV4_Request
 22977 ;; This function uses a non-reentrant model
 22978 ;;
 22979                           
 22980                           	psect	text89
 22981  016436                     __ptext89:
 22982                           	opt stack 0
 22983  016436                     _memcpy:
 22984                           	opt stack 20
 22985                           
 22986                           ; BSR set to: 0
 22987                           ;incstack = 0
 22988  016436  C015  F01C         	movff	memcpy@s1,memcpy@s
 22989  01643A  C016  F01D         	movff	memcpy@s1+1,memcpy@s+1
 22990  01643E  C013  F01A         	movff	memcpy@d1,memcpy@d
 22991  016442  C014  F01B         	movff	memcpy@d1+1,memcpy@d+1
 22992  016446  D010               	goto	l2461
 22993  016448                     l9724:
 22994  016448  C01C  FFD9         	movff	memcpy@s,fsr2l
 22995  01644C  C01D  FFDA         	movff	memcpy@s+1,fsr2h
 22996  016450  50DF               	movf	indf2,w,c
 22997  016452  6E19               	movwf	memcpy@tmp,c
 22998  016454  4A1C               	infsnz	memcpy@s,f,c
 22999  016456  2A1D               	incf	memcpy@s+1,f,c
 23000  016458  C01A  FFD9         	movff	memcpy@d,fsr2l
 23001  01645C  C01B  FFDA         	movff	memcpy@d+1,fsr2h
 23002  016460  C019  FFDF         	movff	memcpy@tmp,indf2
 23003  016464  4A1A               	infsnz	memcpy@d,f,c
 23004  016466  2A1B               	incf	memcpy@d+1,f,c
 23005  016468                     l2461:
 23006  016468  0617               	decf	memcpy@n,f,c
 23007  01646A  A0D8               	btfss	status,0,c
 23008  01646C  0618               	decf	memcpy@n+1,f,c
 23009  01646E  2817               	incf	memcpy@n,w,c
 23010  016470  E1EB               	bnz	l9724
 23011  016472  2818               	incf	memcpy@n+1,w,c
 23012  016474  B4D8               	btfsc	status,2,c
 23013  016476  0012               	return	
 23014  016478  D7E7               	goto	l2462
 23015  01647A                     __end_of_memcpy:
 23016                           	opt stack 0
 23017                           tosu	equ	0xFFF
 23018                           tosh	equ	0xFFE
 23019                           tosl	equ	0xFFD
 23020                           pclath	equ	0xFFA
 23021                           tblptru	equ	0xFF8
 23022                           tblptrh	equ	0xFF7
 23023                           tblptrl	equ	0xFF6
 23024                           tablat	equ	0xFF5
 23025                           prodh	equ	0xFF4
 23026                           prodl	equ	0xFF3
 23027                           intcon	equ	0xFF2
 23028                           indf0	equ	0xFEF
 23029                           postinc0	equ	0xFEE
 23030                           fsr0h	equ	0xFEA
 23031                           fsr0l	equ	0xFE9
 23032                           wreg	equ	0xFE8
 23033                           indf1	equ	0xFE7
 23034                           postinc1	equ	0xFE6
 23035                           postdec1	equ	0xFE5
 23036                           plusw1	equ	0xFE3
 23037                           fsr1h	equ	0xFE2
 23038                           fsr1l	equ	0xFE1
 23039                           indf2	equ	0xFDF
 23040                           postinc2	equ	0xFDE
 23041                           postdec2	equ	0xFDD
 23042                           plusw2	equ	0xFDB
 23043                           fsr2h	equ	0xFDA
 23044                           fsr2l	equ	0xFD9
 23045                           status	equ	0xFD8
 23046                           
 23047 ;; *************** function _ETH_WriteStart *****************
 23048 ;; Defined at:
 23049 ;;		line 622 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 23050 ;; Parameters:    Size  Location     Type
 23051 ;;  dest_mac        2   36[COMRAM] PTR const struct .
 23052 ;;		 -> arpMap.macAddress(6), NULL(0), broadcastMAC(6), header.sha(6), 
 23053 ;;		 -> ARPV4_Packet@header(28), arpMap(104), 
 23054 ;;  type            2   38[COMRAM] unsigned int 
 23055 ;; Auto vars:     Size  Location     Type
 23056 ;;  ethPacket       2   42[COMRAM] PTR struct .
 23057 ;;		 -> RAM(3935), NULL(0), 
 23058 ;; Return value:  Size  Location     Type
 23059 ;;                  1    wreg      enum E476
 23060 ;; Registers used:
 23061 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23062 ;; Tracked objects:
 23063 ;;		On entry : 0/0
 23064 ;;		On exit  : 0/0
 23065 ;;		Unchanged: 0/0
 23066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23070 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23071 ;;Total ram usage:        8 bytes
 23072 ;; Hardware stack levels used:    1
 23073 ;; Hardware stack levels required when called:    6
 23074 ;; This function calls:
 23075 ;;		_ETH_EdataWrite
 23076 ;;		_ETH_NewPacket
 23077 ;;		_ETH_ResetByteCount
 23078 ;;		_ETH_Shift_Tx_Packets
 23079 ;;		_putch
 23080 ;; This function is called by:
 23081 ;;		_ARPV4_Packet
 23082 ;;		_ARPV4_Request
 23083 ;;		_IPv4_Start
 23084 ;; This function uses a non-reentrant model
 23085 ;;
 23086                           
 23087                           	psect	text90
 23088  013F58                     __ptext90:
 23089                           	opt stack 0
 23090  013F58                     _ETH_WriteStart:
 23091                           	opt stack 19
 23092                           
 23093                           ;ETHxxJ6x_driver.c: 624: txPacket_t* ethPacket = (0);
 23094                           
 23095                           ;incstack = 0
 23096  013F58  0E00               	movlw	0
 23097  013F5A  6E2B               	movwf	ETH_WriteStart@ethPacket,c
 23098  013F5C  0E00               	movlw	0
 23099  013F5E  6E2C               	movwf	ETH_WriteStart@ethPacket+1,c
 23100                           
 23101                           ;ETHxxJ6x_driver.c: 626: if(!ethData.up)
 23102  013F60  0102               	movlb	2	; () banked
 23103  013F62  B524               	btfsc	_ethData& (0+255),2,b	;volatile
 23104  013F64  D002               	goto	l611
 23105                           
 23106                           ; BSR set to: 2
 23107                           ;ETHxxJ6x_driver.c: 627: {
 23108                           ;ETHxxJ6x_driver.c: 628: return LINK_NOT_FOUND;
 23109  013F66  0E02               	movlw	2
 23110                           
 23111                           ; BSR set to: 2
 23112  013F68  0012               	return	
 23113  013F6A                     l611:
 23114                           
 23115                           ; BSR set to: 2
 23116                           ;ETHxxJ6x_driver.c: 629: }
 23117                           ;ETHxxJ6x_driver.c: 632: if( pHead != (0) )
 23118                           
 23119                           ; BSR set to: 2
 23120  013F6A  5043               	movf	_pHead,w,c
 23121  013F6C  1044               	iorwf	_pHead+1,w,c
 23122  013F6E  B4D8               	btfsc	status,2,c
 23123  013F70  D00C               	goto	l614
 23124                           
 23125                           ; BSR set to: 2
 23126                           ;ETHxxJ6x_driver.c: 633: {
 23127                           ;ETHxxJ6x_driver.c: 634: if( pHead->flags & (0x0001 << 0) )
 23128  013F72  C043  FFD9         	movff	_pHead,fsr2l
 23129  013F76  C044  FFDA         	movff	_pHead+1,fsr2h
 23130  013F7A  CFDE F029          	movff	postinc2,??_ETH_WriteStart
 23131  013F7E  CFDD F02A          	movff	postdec2,??_ETH_WriteStart+1
 23132  013F82  A029               	btfss	??_ETH_WriteStart,0,c
 23133  013F84  D002               	goto	l614
 23134                           
 23135                           ; BSR set to: 2
 23136                           ;ETHxxJ6x_driver.c: 635: {
 23137                           ;ETHxxJ6x_driver.c: 636: return BUFFER_BUSY;
 23138  013F86  0E03               	movlw	3
 23139                           
 23140                           ; BSR set to: 2
 23141  013F88  0012               	return	
 23142  013F8A                     l614:
 23143                           
 23144                           ; BSR set to: 2
 23145                           ;ETHxxJ6x_driver.c: 637: }
 23146                           ;ETHxxJ6x_driver.c: 638: }
 23147                           ;ETHxxJ6x_driver.c: 640: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 23148                           
 23149                           ; BSR set to: 2
 23150                           
 23151                           ; BSR set to: 2
 23152  013F8A  0E0C               	movlw	12
 23153  013F8C  010E               	movlb	14	; () banked
 23154  013F8E  5DE2               	subwf	226,w,b	;volatile
 23155  013F90  0E1A               	movlw	26
 23156  013F92  59E3               	subwfb	227,w,b	;volatile
 23157  013F94  A0D8               	btfss	status,0,c
 23158  013F96  D00F               	goto	l617
 23159                           
 23160                           ; BSR set to: 14
 23161                           ;ETHxxJ6x_driver.c: 641: {
 23162                           ;ETHxxJ6x_driver.c: 645: if(ECON1bits.TXRTS)
 23163  013F98  A6D2               	btfss	4050,3,c	;volatile
 23164  013F9A  D002               	goto	l616
 23165                           
 23166                           ; BSR set to: 14
 23167                           ;ETHxxJ6x_driver.c: 646: {
 23168                           ;ETHxxJ6x_driver.c: 647: return TX_LOGIC_NOT_IDLE;
 23169  013F9C  0E04               	movlw	4
 23170                           
 23171                           ; BSR set to: 14
 23172  013F9E  0012               	return	
 23173  013FA0                     l616:
 23174                           
 23175                           ; BSR set to: 14
 23176                           ;ETHxxJ6x_driver.c: 648: }
 23177                           ;ETHxxJ6x_driver.c: 651: ETH_Shift_Tx_Packets();
 23178                           
 23179                           ; BSR set to: 14
 23180  013FA0  ECAA  F0A3         	call	_ETH_Shift_Tx_Packets	;wreg free
 23181                           
 23182                           ;ETHxxJ6x_driver.c: 654: if( EWRPT > ((((8192) - (((1518) + (7)) << 1))) + (((((1518) + 
      +                          (7)) << 1)) >> 1) ) )
 23183  013FA4  0E0C               	movlw	12
 23184  013FA6  010E               	movlb	14	; () banked
 23185  013FA8  5DE2               	subwf	226,w,b	;volatile
 23186  013FAA  0E1A               	movlw	26
 23187  013FAC  59E3               	subwfb	227,w,b	;volatile
 23188  013FAE  A0D8               	btfss	status,0,c
 23189  013FB0  D002               	goto	l617
 23190                           
 23191                           ; BSR set to: 14
 23192                           ;ETHxxJ6x_driver.c: 655: {
 23193                           ;ETHxxJ6x_driver.c: 656: return BUFFER_BUSY;
 23194  013FB2  0E03               	movlw	3
 23195                           
 23196                           ; BSR set to: 14
 23197  013FB4  0012               	return	
 23198  013FB6                     l617:
 23199                           
 23200                           ; BSR set to: 14
 23201                           ;ETHxxJ6x_driver.c: 657: }
 23202                           ;ETHxxJ6x_driver.c: 658: }
 23203                           ;ETHxxJ6x_driver.c: 663: ethPacket = (txPacket_t*)ETH_NewPacket();
 23204                           
 23205                           ; BSR set to: 14
 23206                           
 23207                           ; BSR set to: 14
 23208  013FB6  ECCD  F0A1         	call	_ETH_NewPacket	;wreg free
 23209  013FBA  C013  F02B         	movff	?_ETH_NewPacket,ETH_WriteStart@ethPacket
 23210  013FBE  C014  F02C         	movff	?_ETH_NewPacket+1,ETH_WriteStart@ethPacket+1
 23211                           
 23212                           ;ETHxxJ6x_driver.c: 665: if( ethPacket == (0) )
 23213  013FC2  502B               	movf	ETH_WriteStart@ethPacket,w,c
 23214  013FC4  102C               	iorwf	ETH_WriteStart@ethPacket+1,w,c
 23215  013FC6  A4D8               	btfss	status,2,c
 23216  013FC8  D002               	goto	l618
 23217                           
 23218                           ;ETHxxJ6x_driver.c: 666: {
 23219                           ;ETHxxJ6x_driver.c: 668: return BUFFER_BUSY;
 23220  013FCA  0E03               	movlw	3
 23221  013FCC  0012               	return	
 23222  013FCE                     l618:
 23223                           
 23224                           ;ETHxxJ6x_driver.c: 669: }
 23225                           ;ETHxxJ6x_driver.c: 671: do{ ethPacket->flags = ethPacket->flags | (0x0001 << 0); } whil
      +                          e(0);
 23226  013FCE  C02B  FFD9         	movff	ETH_WriteStart@ethPacket,fsr2l
 23227  013FD2  C02C  FFDA         	movff	ETH_WriteStart@ethPacket+1,fsr2h
 23228  013FD6  CFDE F029          	movff	postinc2,??_ETH_WriteStart
 23229  013FDA  CFDD F02A          	movff	postdec2,??_ETH_WriteStart+1
 23230  013FDE  0E01               	movlw	1
 23231  013FE0  1229               	iorwf	??_ETH_WriteStart,f,c
 23232  013FE2  0E00               	movlw	0
 23233  013FE4  122A               	iorwf	??_ETH_WriteStart+1,f,c
 23234  013FE6  C02B  FFD9         	movff	ETH_WriteStart@ethPacket,fsr2l
 23235  013FEA  C02C  FFDA         	movff	ETH_WriteStart@ethPacket+1,fsr2h
 23236  013FEE  C029  FFDE         	movff	??_ETH_WriteStart,postinc2
 23237  013FF2  C02A  FFDD         	movff	??_ETH_WriteStart+1,postdec2
 23238                           
 23239                           ;ETHxxJ6x_driver.c: 673: EWRPT = ethPacket->packetStart;
 23240  013FF6  EE20 F002          	lfsr	2,2
 23241  013FFA  502B               	movf	ETH_WriteStart@ethPacket,w,c
 23242  013FFC  26D9               	addwf	fsr2l,f,c
 23243  013FFE  502C               	movf	ETH_WriteStart@ethPacket+1,w,c
 23244  014000  22DA               	addwfc	fsr2h,f,c
 23245  014002  CFDE FEE2          	movff	postinc2,3810	;volatile
 23246  014006  CFDD FEE3          	movff	postdec2,3811	;volatile
 23247                           
 23248                           ;ETHxxJ6x_driver.c: 675: ETH_ResetByteCount();
 23249  01400A  EC8E  F0B5         	call	_ETH_ResetByteCount	;wreg free
 23250                           
 23251                           ;ETHxxJ6x_driver.c: 677: ETH_EdataWrite(0x06);
 23252  01400E  0E06               	movlw	6
 23253  014010  ECA8  F0B5         	call	_ETH_EdataWrite
 23254                           
 23255                           ;ETHxxJ6x_driver.c: 678: ETH_EdataWrite(dest_mac->mac_array[0]);
 23256  014014  C025  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
 23257  014018  C026  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
 23258  01401C  0E00               	movlw	low (__mediumconst shr (0+16))
 23259  01401E  6EF8               	movwf	tblptru,c
 23260  014020  0E0F               	movlw	(high __ramtop+-1)
 23261  014022  64F7               	cpfsgt	tblptrh,c
 23262  014024  D003               	bra	u9017
 23263  014026  0008               	tblrd		*
 23264  014028  50F5               	movf	tablat,w,c
 23265  01402A  D005               	bra	u9010
 23266  01402C                     u9017:
 23267  01402C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23268  014030  CFF7 FFEA          	movff	tblptrh,fsr0h
 23269  014034  50EF               	movf	indf0,w,c
 23270  014036                     u9010:
 23271  014036  ECA8  F0B5         	call	_ETH_EdataWrite
 23272                           
 23273                           ;ETHxxJ6x_driver.c: 679: ETH_EdataWrite(dest_mac->mac_array[1]);
 23274  01403A  0E01               	movlw	1
 23275  01403C  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 23276  01403E  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 23277  014040  0E00               	movlw	0
 23278  014042  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 23279  014044  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 23280  014046  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 23281  01404A  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 23282  01404E  0E00               	movlw	low (__mediumconst shr (0+16))
 23283  014050  6EF8               	movwf	tblptru,c
 23284  014052  0E0F               	movlw	(high __ramtop+-1)
 23285  014054  64F7               	cpfsgt	tblptrh,c
 23286  014056  D003               	bra	u9027
 23287  014058  0008               	tblrd		*
 23288  01405A  50F5               	movf	tablat,w,c
 23289  01405C  D005               	bra	u9020
 23290  01405E                     u9027:
 23291  01405E  CFF6 FFE9          	movff	tblptrl,fsr0l
 23292  014062  CFF7 FFEA          	movff	tblptrh,fsr0h
 23293  014066  50EF               	movf	indf0,w,c
 23294  014068                     u9020:
 23295  014068  ECA8  F0B5         	call	_ETH_EdataWrite
 23296                           
 23297                           ;ETHxxJ6x_driver.c: 680: ETH_EdataWrite(dest_mac->mac_array[2]);
 23298  01406C  0E02               	movlw	2
 23299  01406E  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 23300  014070  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 23301  014072  0E00               	movlw	0
 23302  014074  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 23303  014076  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 23304  014078  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 23305  01407C  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 23306  014080  0E00               	movlw	low (__mediumconst shr (0+16))
 23307  014082  6EF8               	movwf	tblptru,c
 23308  014084  0E0F               	movlw	(high __ramtop+-1)
 23309  014086  64F7               	cpfsgt	tblptrh,c
 23310  014088  D003               	bra	u9037
 23311  01408A  0008               	tblrd		*
 23312  01408C  50F5               	movf	tablat,w,c
 23313  01408E  D005               	bra	u9030
 23314  014090                     u9037:
 23315  014090  CFF6 FFE9          	movff	tblptrl,fsr0l
 23316  014094  CFF7 FFEA          	movff	tblptrh,fsr0h
 23317  014098  50EF               	movf	indf0,w,c
 23318  01409A                     u9030:
 23319  01409A  ECA8  F0B5         	call	_ETH_EdataWrite
 23320                           
 23321                           ;ETHxxJ6x_driver.c: 681: ETH_EdataWrite(dest_mac->mac_array[3]);
 23322  01409E  0E03               	movlw	3
 23323  0140A0  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 23324  0140A2  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 23325  0140A4  0E00               	movlw	0
 23326  0140A6  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 23327  0140A8  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 23328  0140AA  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 23329  0140AE  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 23330  0140B2  0E00               	movlw	low (__mediumconst shr (0+16))
 23331  0140B4  6EF8               	movwf	tblptru,c
 23332  0140B6  0E0F               	movlw	(high __ramtop+-1)
 23333  0140B8  64F7               	cpfsgt	tblptrh,c
 23334  0140BA  D003               	bra	u9047
 23335  0140BC  0008               	tblrd		*
 23336  0140BE  50F5               	movf	tablat,w,c
 23337  0140C0  D005               	bra	u9040
 23338  0140C2                     u9047:
 23339  0140C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 23340  0140C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 23341  0140CA  50EF               	movf	indf0,w,c
 23342  0140CC                     u9040:
 23343  0140CC  ECA8  F0B5         	call	_ETH_EdataWrite
 23344                           
 23345                           ;ETHxxJ6x_driver.c: 682: ETH_EdataWrite(dest_mac->mac_array[4]);
 23346  0140D0  0E04               	movlw	4
 23347  0140D2  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 23348  0140D4  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 23349  0140D6  0E00               	movlw	0
 23350  0140D8  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 23351  0140DA  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 23352  0140DC  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 23353  0140E0  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 23354  0140E4  0E00               	movlw	low (__mediumconst shr (0+16))
 23355  0140E6  6EF8               	movwf	tblptru,c
 23356  0140E8  0E0F               	movlw	(high __ramtop+-1)
 23357  0140EA  64F7               	cpfsgt	tblptrh,c
 23358  0140EC  D003               	bra	u9057
 23359  0140EE  0008               	tblrd		*
 23360  0140F0  50F5               	movf	tablat,w,c
 23361  0140F2  D005               	bra	u9050
 23362  0140F4                     u9057:
 23363  0140F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 23364  0140F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 23365  0140FC  50EF               	movf	indf0,w,c
 23366  0140FE                     u9050:
 23367  0140FE  ECA8  F0B5         	call	_ETH_EdataWrite
 23368                           
 23369                           ;ETHxxJ6x_driver.c: 683: ETH_EdataWrite(dest_mac->mac_array[5]);
 23370  014102  0E05               	movlw	5
 23371  014104  2425               	addwf	ETH_WriteStart@dest_mac,w,c
 23372  014106  6E29               	movwf	??_ETH_WriteStart& (0+255),c
 23373  014108  0E00               	movlw	0
 23374  01410A  2026               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 23375  01410C  6E2A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 23376  01410E  C029  FFF6         	movff	??_ETH_WriteStart,tblptrl
 23377  014112  C02A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 23378  014116  0E00               	movlw	low (__mediumconst shr (0+16))
 23379  014118  6EF8               	movwf	tblptru,c
 23380  01411A  0E0F               	movlw	(high __ramtop+-1)
 23381  01411C  64F7               	cpfsgt	tblptrh,c
 23382  01411E  D003               	bra	u9067
 23383  014120  0008               	tblrd		*
 23384  014122  50F5               	movf	tablat,w,c
 23385  014124  D005               	bra	u9060
 23386  014126                     u9067:
 23387  014126  CFF6 FFE9          	movff	tblptrl,fsr0l
 23388  01412A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23389  01412E  50EF               	movf	indf0,w,c
 23390  014130                     u9060:
 23391  014130  ECA8  F0B5         	call	_ETH_EdataWrite
 23392                           
 23393                           ;ETHxxJ6x_driver.c: 685: ETH_EdataWrite(MAADR1);
 23394  014134  010E               	movlb	14	; () banked
 23395  014136  5184               	movf	132,w,b	;volatile
 23396  014138  ECA8  F0B5         	call	_ETH_EdataWrite
 23397                           
 23398                           ;ETHxxJ6x_driver.c: 686: ETH_EdataWrite(MAADR2);
 23399  01413C  010E               	movlb	14	; () banked
 23400  01413E  5185               	movf	133,w,b	;volatile
 23401  014140  ECA8  F0B5         	call	_ETH_EdataWrite
 23402                           
 23403                           ;ETHxxJ6x_driver.c: 687: ETH_EdataWrite(MAADR3);
 23404  014144  010E               	movlb	14	; () banked
 23405  014146  5182               	movf	130,w,b	;volatile
 23406  014148  ECA8  F0B5         	call	_ETH_EdataWrite
 23407                           
 23408                           ;ETHxxJ6x_driver.c: 688: ETH_EdataWrite(MAADR4);
 23409  01414C  010E               	movlb	14	; () banked
 23410  01414E  5183               	movf	131,w,b	;volatile
 23411  014150  ECA8  F0B5         	call	_ETH_EdataWrite
 23412                           
 23413                           ;ETHxxJ6x_driver.c: 689: ETH_EdataWrite(MAADR5);
 23414  014154  010E               	movlb	14	; () banked
 23415  014156  5180               	movf	128,w,b	;volatile
 23416  014158  ECA8  F0B5         	call	_ETH_EdataWrite
 23417                           
 23418                           ;ETHxxJ6x_driver.c: 690: ETH_EdataWrite(MAADR6);
 23419  01415C  010E               	movlb	14	; () banked
 23420  01415E  5181               	movf	129,w,b	;volatile
 23421  014160  ECA8  F0B5         	call	_ETH_EdataWrite
 23422                           
 23423                           ;ETHxxJ6x_driver.c: 691: ETH_EdataWrite(((char *)&type)[1]);
 23424  014164  5028               	movf	ETH_WriteStart@type+1,w,c
 23425  014166  ECA8  F0B5         	call	_ETH_EdataWrite
 23426                           
 23427                           ;ETHxxJ6x_driver.c: 692: ETH_EdataWrite(((char *)&type)[0]);
 23428  01416A  5027               	movf	ETH_WriteStart@type,w,c
 23429  01416C  ECA8  F0B5         	call	_ETH_EdataWrite
 23430                           
 23431                           ;ETHxxJ6x_driver.c: 694: putch('+');
 23432  014170  0E2B               	movlw	43
 23433  014172  ECAF  F0B5         	call	_putch
 23434                           
 23435                           ;ETHxxJ6x_driver.c: 695: return SUCCESS;
 23436  014176  0E01               	movlw	1
 23437  014178  0012               	return	
 23438  01417A                     __end_of_ETH_WriteStart:
 23439                           	opt stack 0
 23440                           tosu	equ	0xFFF
 23441                           tosh	equ	0xFFE
 23442                           tosl	equ	0xFFD
 23443                           pclath	equ	0xFFA
 23444                           tblptru	equ	0xFF8
 23445                           tblptrh	equ	0xFF7
 23446                           tblptrl	equ	0xFF6
 23447                           tablat	equ	0xFF5
 23448                           prodh	equ	0xFF4
 23449                           prodl	equ	0xFF3
 23450                           intcon	equ	0xFF2
 23451                           indf0	equ	0xFEF
 23452                           postinc0	equ	0xFEE
 23453                           fsr0h	equ	0xFEA
 23454                           fsr0l	equ	0xFE9
 23455                           wreg	equ	0xFE8
 23456                           indf1	equ	0xFE7
 23457                           postinc1	equ	0xFE6
 23458                           postdec1	equ	0xFE5
 23459                           plusw1	equ	0xFE3
 23460                           fsr1h	equ	0xFE2
 23461                           fsr1l	equ	0xFE1
 23462                           indf2	equ	0xFDF
 23463                           postinc2	equ	0xFDE
 23464                           postdec2	equ	0xFDD
 23465                           plusw2	equ	0xFDB
 23466                           fsr2h	equ	0xFDA
 23467                           fsr2l	equ	0xFD9
 23468                           status	equ	0xFD8
 23469                           
 23470 ;; *************** function _ETH_Shift_Tx_Packets *****************
 23471 ;; Defined at:
 23472 ;;		line 911 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 23473 ;; Parameters:    Size  Location     Type
 23474 ;;		None
 23475 ;; Auto vars:     Size  Location     Type
 23476 ;;  pElem           2   34[COMRAM] PTR struct .
 23477 ;;		 -> txData(200), NULL(0), 
 23478 ;;  shiftOffset     2   28[COMRAM] unsigned int 
 23479 ;;  len             2   32[COMRAM] unsigned int 
 23480 ;;  timer           2   30[COMRAM] unsigned int 
 23481 ;; Return value:  Size  Location     Type
 23482 ;;                  1    wreg      enum E4853
 23483 ;; Registers used:
 23484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23485 ;; Tracked objects:
 23486 ;;		On entry : 0/0
 23487 ;;		On exit  : 0/0
 23488 ;;		Unchanged: 0/0
 23489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23491 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23493 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23494 ;;Total ram usage:       12 bytes
 23495 ;; Hardware stack levels used:    1
 23496 ;; Hardware stack levels required when called:    5
 23497 ;; This function calls:
 23498 ;;		___wmul
 23499 ;; This function is called by:
 23500 ;;		_ETH_EventHandler
 23501 ;;		_ETH_WriteStart
 23502 ;; This function uses a non-reentrant model
 23503 ;;
 23504                           
 23505                           	psect	text91
 23506  014754                     __ptext91:
 23507                           	opt stack 0
 23508  014754                     _ETH_Shift_Tx_Packets:
 23509                           	opt stack 19
 23510                           
 23511                           ;ETHxxJ6x_driver.c: 913: uint16_t timer;
 23512                           ;ETHxxJ6x_driver.c: 914: uint16_t len = pHead->packetEnd - pTail->packetStart;
 23513                           
 23514                           ;incstack = 0
 23515  014754  EE20 F004          	lfsr	2,4
 23516  014758  5043               	movf	_pHead,w,c
 23517  01475A  26D9               	addwf	fsr2l,f,c
 23518  01475C  5044               	movf	_pHead+1,w,c
 23519  01475E  22DA               	addwfc	fsr2h,f,c
 23520  014760  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 23521  014764  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 23522  014768  EE20 F002          	lfsr	2,2
 23523  01476C  5041               	movf	_pTail,w,c
 23524  01476E  26D9               	addwf	fsr2l,f,c
 23525  014770  5042               	movf	_pTail+1,w,c
 23526  014772  22DA               	addwfc	fsr2h,f,c
 23527  014774  CFDE F01B          	movff	postinc2,??_ETH_Shift_Tx_Packets+2
 23528  014778  CFDD F01C          	movff	postdec2,??_ETH_Shift_Tx_Packets+3
 23529  01477C  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 23530  01477E  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 23531  014780  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 23532  014782  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 23533  014784  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 23534  014786  241B               	addwf	??_ETH_Shift_Tx_Packets+2,w,c
 23535  014788  6E21               	movwf	ETH_Shift_Tx_Packets@len,c
 23536  01478A  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 23537  01478C  201C               	addwfc	??_ETH_Shift_Tx_Packets+3,w,c
 23538  01478E  6E22               	movwf	ETH_Shift_Tx_Packets@len+1,c
 23539                           
 23540                           ;ETHxxJ6x_driver.c: 916: timer = 2 * len;
 23541  014790  90D8               	bcf	status,0,c
 23542  014792  3421               	rlcf	ETH_Shift_Tx_Packets@len,w,c
 23543  014794  6E1F               	movwf	ETH_Shift_Tx_Packets@timer,c
 23544  014796  3422               	rlcf	ETH_Shift_Tx_Packets@len+1,w,c
 23545  014798  6E20               	movwf	ETH_Shift_Tx_Packets@timer+1,c
 23546                           
 23547                           ;ETHxxJ6x_driver.c: 917: while(ECON1bits.DMAST!=0 && --timer) __nop();
 23548  01479A  D001               	goto	l683
 23549  01479C                     l684:
 23550  01479C  F000               	nop	
 23551  01479E                     l683:
 23552  01479E  AAD2               	btfss	4050,5,c	;volatile
 23553  0147A0  D007               	goto	u8820
 23554  0147A2  061F               	decf	ETH_Shift_Tx_Packets@timer,f,c
 23555  0147A4  A0D8               	btfss	status,0,c
 23556  0147A6  0620               	decf	ETH_Shift_Tx_Packets@timer+1,f,c
 23557  0147A8  501F               	movf	ETH_Shift_Tx_Packets@timer,w,c
 23558  0147AA  1020               	iorwf	ETH_Shift_Tx_Packets@timer+1,w,c
 23559  0147AC  A4D8               	btfss	status,2,c
 23560  0147AE  D7F6               	goto	l684
 23561  0147B0                     u8820:
 23562                           
 23563                           ;ETHxxJ6x_driver.c: 918: if(ECON1bits.DMAST==0)
 23564  0147B0  BAD2               	btfsc	4050,5,c	;volatile
 23565  0147B2  D09B               	goto	l694
 23566                           
 23567                           ;ETHxxJ6x_driver.c: 919: {
 23568                           ;ETHxxJ6x_driver.c: 920: EDMADST = ((8192) - (((1518) + (7)) << 1));
 23569  0147B4  0E14               	movlw	20
 23570  0147B6  010E               	movlb	14	; () banked
 23571  0147B8  6FF5               	movwf	245,b	;volatile
 23572  0147BA  0E16               	movlw	22
 23573  0147BC  6FF4               	movwf	244,b	;volatile
 23574                           
 23575                           ; BSR set to: 14
 23576                           ;ETHxxJ6x_driver.c: 922: EDMAST = pTail->packetStart;
 23577  0147BE  EE20 F002          	lfsr	2,2
 23578  0147C2  5041               	movf	_pTail,w,c
 23579  0147C4  26D9               	addwf	fsr2l,f,c
 23580  0147C6  5042               	movf	_pTail+1,w,c
 23581  0147C8  22DA               	addwfc	fsr2h,f,c
 23582  0147CA  CFDE FEF0          	movff	postinc2,3824	;volatile
 23583  0147CE  CFDD FEF1          	movff	postdec2,3825	;volatile
 23584                           
 23585                           ; BSR set to: 14
 23586                           ;ETHxxJ6x_driver.c: 923: EDMAND = pHead->packetEnd;
 23587  0147D2  EE20 F004          	lfsr	2,4
 23588  0147D6  5043               	movf	_pHead,w,c
 23589  0147D8  26D9               	addwf	fsr2l,f,c
 23590  0147DA  5044               	movf	_pHead+1,w,c
 23591  0147DC  22DA               	addwfc	fsr2h,f,c
 23592  0147DE  CFDE FEF2          	movff	postinc2,3826	;volatile
 23593  0147E2  CFDD FEF3          	movff	postdec2,3827	;volatile
 23594                           
 23595                           ; BSR set to: 14
 23596                           ;ETHxxJ6x_driver.c: 925: ECON1bits.CSUMEN = 0;
 23597  0147E6  98D2               	bcf	4050,4,c	;volatile
 23598                           
 23599                           ; BSR set to: 14
 23600                           ;ETHxxJ6x_driver.c: 926: ECON1bits.DMAST = 1;
 23601  0147E8  8AD2               	bsf	4050,5,c	;volatile
 23602                           
 23603                           ; BSR set to: 14
 23604                           ;ETHxxJ6x_driver.c: 928: timer = 40 * len;
 23605  0147EA  C021  F013         	movff	ETH_Shift_Tx_Packets@len,___wmul@multiplier
 23606  0147EE  C022  F014         	movff	ETH_Shift_Tx_Packets@len+1,___wmul@multiplier+1
 23607  0147F2  0E00               	movlw	0
 23608  0147F4  6E16               	movwf	___wmul@multiplicand+1,c
 23609  0147F6  0E28               	movlw	40
 23610  0147F8  6E15               	movwf	___wmul@multiplicand,c
 23611  0147FA  EC5F  F0B4         	call	___wmul	;wreg free
 23612  0147FE  C013  F01F         	movff	?___wmul,ETH_Shift_Tx_Packets@timer
 23613  014802  C014  F020         	movff	?___wmul+1,ETH_Shift_Tx_Packets@timer+1
 23614                           
 23615                           ;ETHxxJ6x_driver.c: 929: while(ECON1bits.DMAST!=0 && --timer) __nop();
 23616  014806  D001               	goto	l689
 23617  014808                     l690:
 23618  014808  F000               	nop	
 23619  01480A                     l689:
 23620  01480A  AAD2               	btfss	4050,5,c	;volatile
 23621  01480C  D007               	goto	u8850
 23622  01480E  061F               	decf	ETH_Shift_Tx_Packets@timer,f,c
 23623  014810  A0D8               	btfss	status,0,c
 23624  014812  0620               	decf	ETH_Shift_Tx_Packets@timer+1,f,c
 23625  014814  501F               	movf	ETH_Shift_Tx_Packets@timer,w,c
 23626  014816  1020               	iorwf	ETH_Shift_Tx_Packets@timer+1,w,c
 23627  014818  A4D8               	btfss	status,2,c
 23628  01481A  D7F6               	goto	l690
 23629  01481C                     u8850:
 23630                           
 23631                           ;ETHxxJ6x_driver.c: 930: if(ECON1bits.DMAST == 0)
 23632  01481C  BAD2               	btfsc	4050,5,c	;volatile
 23633  01481E  D065               	goto	l694
 23634                           
 23635                           ;ETHxxJ6x_driver.c: 931: {
 23636                           ;ETHxxJ6x_driver.c: 933: txPacket_t *pElem = pHead;
 23637  014820  C043  F023         	movff	_pHead,ETH_Shift_Tx_Packets@pElem
 23638  014824  C044  F024         	movff	_pHead+1,ETH_Shift_Tx_Packets@pElem+1
 23639                           
 23640                           ;ETHxxJ6x_driver.c: 934: uint16_t shiftOffset = pTail->packetStart;
 23641  014828  EE20 F002          	lfsr	2,2
 23642  01482C  5041               	movf	_pTail,w,c
 23643  01482E  26D9               	addwf	fsr2l,f,c
 23644  014830  5042               	movf	_pTail+1,w,c
 23645  014832  22DA               	addwfc	fsr2h,f,c
 23646  014834  CFDE F01D          	movff	postinc2,ETH_Shift_Tx_Packets@shiftOffset
 23647  014838  CFDD F01E          	movff	postdec2,ETH_Shift_Tx_Packets@shiftOffset+1
 23648                           
 23649                           ;ETHxxJ6x_driver.c: 936: while( pElem != (0) )
 23650  01483C  D04A               	goto	l695
 23651  01483E                     
 23652                           ;ETHxxJ6x_driver.c: 937: {
 23653                           ;ETHxxJ6x_driver.c: 938: pElem->packetStart = pElem->packetStart - shiftOffset;
 23654  01483E  EE20 F002          	lfsr	2,2
 23655  014842  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 23656  014844  26D9               	addwf	fsr2l,f,c
 23657  014846  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 23658  014848  22DA               	addwfc	fsr2h,f,c
 23659  01484A  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 23660  01484E  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 23661  014852  C01D  F01B         	movff	ETH_Shift_Tx_Packets@shiftOffset,??_ETH_Shift_Tx_Packets+2
 23662  014856  C01E  F01C         	movff	ETH_Shift_Tx_Packets@shiftOffset+1,??_ETH_Shift_Tx_Packets+3
 23663  01485A  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 23664  01485C  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 23665  01485E  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 23666  014860  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 23667  014862  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 23668  014864  261B               	addwf	??_ETH_Shift_Tx_Packets+2,f,c
 23669  014866  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 23670  014868  221C               	addwfc	??_ETH_Shift_Tx_Packets+3,f,c
 23671  01486A  EE20 F002          	lfsr	2,2
 23672  01486E  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 23673  014870  26D9               	addwf	fsr2l,f,c
 23674  014872  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 23675  014874  22DA               	addwfc	fsr2h,f,c
 23676  014876  C01B  FFDE         	movff	??_ETH_Shift_Tx_Packets+2,postinc2
 23677  01487A  C01C  FFDD         	movff	??_ETH_Shift_Tx_Packets+3,postdec2
 23678                           
 23679                           ;ETHxxJ6x_driver.c: 939: pElem->packetEnd = pElem->packetEnd - shiftOffset;
 23680  01487E  EE20 F004          	lfsr	2,4
 23681  014882  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 23682  014884  26D9               	addwf	fsr2l,f,c
 23683  014886  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 23684  014888  22DA               	addwfc	fsr2h,f,c
 23685  01488A  CFDE F019          	movff	postinc2,??_ETH_Shift_Tx_Packets
 23686  01488E  CFDD F01A          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 23687  014892  C01D  F01B         	movff	ETH_Shift_Tx_Packets@shiftOffset,??_ETH_Shift_Tx_Packets+2
 23688  014896  C01E  F01C         	movff	ETH_Shift_Tx_Packets@shiftOffset+1,??_ETH_Shift_Tx_Packets+3
 23689  01489A  1E1B               	comf	??_ETH_Shift_Tx_Packets+2,f,c
 23690  01489C  1E1C               	comf	??_ETH_Shift_Tx_Packets+3,f,c
 23691  01489E  4A1B               	infsnz	??_ETH_Shift_Tx_Packets+2,f,c
 23692  0148A0  2A1C               	incf	??_ETH_Shift_Tx_Packets+3,f,c
 23693  0148A2  5019               	movf	??_ETH_Shift_Tx_Packets,w,c
 23694  0148A4  261B               	addwf	??_ETH_Shift_Tx_Packets+2,f,c
 23695  0148A6  501A               	movf	??_ETH_Shift_Tx_Packets+1,w,c
 23696  0148A8  221C               	addwfc	??_ETH_Shift_Tx_Packets+3,f,c
 23697  0148AA  EE20 F004          	lfsr	2,4
 23698  0148AE  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 23699  0148B0  26D9               	addwf	fsr2l,f,c
 23700  0148B2  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 23701  0148B4  22DA               	addwfc	fsr2h,f,c
 23702  0148B6  C01B  FFDE         	movff	??_ETH_Shift_Tx_Packets+2,postinc2
 23703  0148BA  C01C  FFDD         	movff	??_ETH_Shift_Tx_Packets+3,postdec2
 23704                           
 23705                           ;ETHxxJ6x_driver.c: 940: pElem = pElem->nextPacket;
 23706  0148BE  EE20 F008          	lfsr	2,8
 23707  0148C2  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 23708  0148C4  26D9               	addwf	fsr2l,f,c
 23709  0148C6  5024               	movf	ETH_Shift_Tx_Packets@pElem+1,w,c
 23710  0148C8  22DA               	addwfc	fsr2h,f,c
 23711  0148CA  CFDE F023          	movff	postinc2,ETH_Shift_Tx_Packets@pElem
 23712  0148CE  CFDD F024          	movff	postdec2,ETH_Shift_Tx_Packets@pElem+1
 23713  0148D2                     l695:
 23714  0148D2  5023               	movf	ETH_Shift_Tx_Packets@pElem,w,c
 23715  0148D4  1024               	iorwf	ETH_Shift_Tx_Packets@pElem+1,w,c
 23716  0148D6  A4D8               	btfss	status,2,c
 23717  0148D8  D7B2               	goto	l696
 23718                           
 23719                           ;ETHxxJ6x_driver.c: 941: }
 23720                           ;ETHxxJ6x_driver.c: 944: EWRPT = ((8192) - (((1518) + (7)) << 1)) + len;
 23721  0148DA  0E16               	movlw	22
 23722  0148DC  2421               	addwf	ETH_Shift_Tx_Packets@len,w,c
 23723  0148DE  010E               	movlb	14	; () banked
 23724  0148E0  6FE2               	movwf	226,b	;volatile
 23725  0148E2  0E14               	movlw	20
 23726  0148E4  2022               	addwfc	ETH_Shift_Tx_Packets@len+1,w,c
 23727  0148E6  6FE3               	movwf	227,b	;volatile
 23728                           
 23729                           ; BSR set to: 14
 23730                           ;ETHxxJ6x_driver.c: 945: return SUCCESS;
 23731                           ;	Return value of _ETH_Shift_Tx_Packets is never used
 23732  0148E8  0012               	return	
 23733  0148EA                     l694:
 23734                           
 23735                           ; BSR set to: 14
 23736  0148EA  00FF               	reset		;# 
 23737                           
 23738                           ;ETHxxJ6x_driver.c: 951: return DMA_TIMEOUT;
 23739                           ;	Return value of _ETH_Shift_Tx_Packets is never used
 23740  0148EC  0012               	return		;funcret
 23741  0148EE                     __end_of_ETH_Shift_Tx_Packets:
 23742                           	opt stack 0
 23743                           tosu	equ	0xFFF
 23744                           tosh	equ	0xFFE
 23745                           tosl	equ	0xFFD
 23746                           pclath	equ	0xFFA
 23747                           tblptru	equ	0xFF8
 23748                           tblptrh	equ	0xFF7
 23749                           tblptrl	equ	0xFF6
 23750                           tablat	equ	0xFF5
 23751                           prodh	equ	0xFF4
 23752                           prodl	equ	0xFF3
 23753                           intcon	equ	0xFF2
 23754                           indf0	equ	0xFEF
 23755                           postinc0	equ	0xFEE
 23756                           fsr0h	equ	0xFEA
 23757                           fsr0l	equ	0xFE9
 23758                           wreg	equ	0xFE8
 23759                           indf1	equ	0xFE7
 23760                           postinc1	equ	0xFE6
 23761                           postdec1	equ	0xFE5
 23762                           plusw1	equ	0xFE3
 23763                           fsr1h	equ	0xFE2
 23764                           fsr1l	equ	0xFE1
 23765                           indf2	equ	0xFDF
 23766                           postinc2	equ	0xFDE
 23767                           postdec2	equ	0xFDD
 23768                           plusw2	equ	0xFDB
 23769                           fsr2h	equ	0xFDA
 23770                           fsr2l	equ	0xFD9
 23771                           status	equ	0xFD8
 23772                           
 23773 ;; *************** function ___wmul *****************
 23774 ;; Defined at:
 23775 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
 23776 ;; Parameters:    Size  Location     Type
 23777 ;;  multiplier      2   18[COMRAM] unsigned int 
 23778 ;;  multiplicand    2   20[COMRAM] unsigned int 
 23779 ;; Auto vars:     Size  Location     Type
 23780 ;;  product         2   22[COMRAM] unsigned int 
 23781 ;; Return value:  Size  Location     Type
 23782 ;;                  2   18[COMRAM] unsigned int 
 23783 ;; Registers used:
 23784 ;;		wreg, status,2, status,0, prodl, prodh
 23785 ;; Tracked objects:
 23786 ;;		On entry : 0/0
 23787 ;;		On exit  : 0/0
 23788 ;;		Unchanged: 0/0
 23789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23794 ;;Total ram usage:        6 bytes
 23795 ;; Hardware stack levels used:    1
 23796 ;; Hardware stack levels required when called:    4
 23797 ;; This function calls:
 23798 ;;		Nothing
 23799 ;; This function is called by:
 23800 ;;		_ETH_Copy
 23801 ;;		_ETH_Shift_Tx_Packets
 23802 ;;		__doprnt
 23803 ;; This function uses a non-reentrant model
 23804 ;;
 23805                           
 23806                           	psect	text92
 23807  0168BE                     __ptext92:
 23808                           	opt stack 0
 23809  0168BE                     ___wmul:
 23810                           	opt stack 21
 23811                           
 23812                           ;incstack = 0
 23813  0168BE  5013               	movf	___wmul@multiplier,w,c
 23814  0168C0  0215               	mulwf	___wmul@multiplicand,c
 23815  0168C2  CFF3 F017          	movff	prodl,___wmul@product
 23816  0168C6  CFF4 F018          	movff	prodh,___wmul@product+1
 23817  0168CA  5013               	movf	___wmul@multiplier,w,c
 23818  0168CC  0216               	mulwf	___wmul@multiplicand+1,c
 23819  0168CE  50F3               	movf	prodl,w,c
 23820  0168D0  2618               	addwf	___wmul@product+1,f,c
 23821  0168D2  5014               	movf	___wmul@multiplier+1,w,c
 23822  0168D4  0215               	mulwf	___wmul@multiplicand,c
 23823  0168D6  50F3               	movf	prodl,w,c
 23824  0168D8  2618               	addwf	___wmul@product+1,f,c
 23825  0168DA  C017  F013         	movff	___wmul@product,?___wmul
 23826  0168DE  C018  F014         	movff	___wmul@product+1,?___wmul+1
 23827  0168E2  0012               	return	
 23828  0168E4                     __end_of___wmul:
 23829                           	opt stack 0
 23830                           tosu	equ	0xFFF
 23831                           tosh	equ	0xFFE
 23832                           tosl	equ	0xFFD
 23833                           pclath	equ	0xFFA
 23834                           tblptru	equ	0xFF8
 23835                           tblptrh	equ	0xFF7
 23836                           tblptrl	equ	0xFF6
 23837                           tablat	equ	0xFF5
 23838                           prodh	equ	0xFF4
 23839                           prodl	equ	0xFF3
 23840                           intcon	equ	0xFF2
 23841                           indf0	equ	0xFEF
 23842                           postinc0	equ	0xFEE
 23843                           fsr0h	equ	0xFEA
 23844                           fsr0l	equ	0xFE9
 23845                           wreg	equ	0xFE8
 23846                           indf1	equ	0xFE7
 23847                           postinc1	equ	0xFE6
 23848                           postdec1	equ	0xFE5
 23849                           plusw1	equ	0xFE3
 23850                           fsr1h	equ	0xFE2
 23851                           fsr1l	equ	0xFE1
 23852                           indf2	equ	0xFDF
 23853                           postinc2	equ	0xFDE
 23854                           postdec2	equ	0xFDD
 23855                           plusw2	equ	0xFDB
 23856                           fsr2h	equ	0xFDA
 23857                           fsr2l	equ	0xFD9
 23858                           status	equ	0xFD8
 23859                           
 23860 ;; *************** function _ETH_ResetByteCount *****************
 23861 ;; Defined at:
 23862 ;;		line 1121 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 23863 ;; Parameters:    Size  Location     Type
 23864 ;;		None
 23865 ;; Auto vars:     Size  Location     Type
 23866 ;;		None
 23867 ;; Return value:  Size  Location     Type
 23868 ;;                  1    wreg      void 
 23869 ;; Registers used:
 23870 ;;		None
 23871 ;; Tracked objects:
 23872 ;;		On entry : 0/0
 23873 ;;		On exit  : 0/0
 23874 ;;		Unchanged: 0/0
 23875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23880 ;;Total ram usage:        0 bytes
 23881 ;; Hardware stack levels used:    1
 23882 ;; Hardware stack levels required when called:    4
 23883 ;; This function calls:
 23884 ;;		Nothing
 23885 ;; This function is called by:
 23886 ;;		_ETH_WriteStart
 23887 ;;		_UDP_Start
 23888 ;;		_ETH_TxReset
 23889 ;; This function uses a non-reentrant model
 23890 ;;
 23891                           
 23892                           	psect	text93
 23893  016B1C                     __ptext93:
 23894                           	opt stack 0
 23895  016B1C                     _ETH_ResetByteCount:
 23896                           	opt stack 20
 23897                           
 23898                           ;ETHxxJ6x_driver.c: 1123: ethData.saveWRPT = EWRPT;
 23899                           
 23900                           ;incstack = 0
 23901  016B1C  CEE2 F228          	movff	3810,_ethData+4	;volatile
 23902  016B20  CEE3 F229          	movff	3811,_ethData+5	;volatile
 23903  016B24  0012               	return		;funcret
 23904  016B26                     __end_of_ETH_ResetByteCount:
 23905                           	opt stack 0
 23906                           tosu	equ	0xFFF
 23907                           tosh	equ	0xFFE
 23908                           tosl	equ	0xFFD
 23909                           pclath	equ	0xFFA
 23910                           tblptru	equ	0xFF8
 23911                           tblptrh	equ	0xFF7
 23912                           tblptrl	equ	0xFF6
 23913                           tablat	equ	0xFF5
 23914                           prodh	equ	0xFF4
 23915                           prodl	equ	0xFF3
 23916                           intcon	equ	0xFF2
 23917                           indf0	equ	0xFEF
 23918                           postinc0	equ	0xFEE
 23919                           fsr0h	equ	0xFEA
 23920                           fsr0l	equ	0xFE9
 23921                           wreg	equ	0xFE8
 23922                           indf1	equ	0xFE7
 23923                           postinc1	equ	0xFE6
 23924                           postdec1	equ	0xFE5
 23925                           plusw1	equ	0xFE3
 23926                           fsr1h	equ	0xFE2
 23927                           fsr1l	equ	0xFE1
 23928                           indf2	equ	0xFDF
 23929                           postinc2	equ	0xFDE
 23930                           postdec2	equ	0xFDD
 23931                           plusw2	equ	0xFDB
 23932                           fsr2h	equ	0xFDA
 23933                           fsr2l	equ	0xFD9
 23934                           status	equ	0xFD8
 23935                           
 23936 ;; *************** function _ETH_NewPacket *****************
 23937 ;; Defined at:
 23938 ;;		line 1177 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 23939 ;; Parameters:    Size  Location     Type
 23940 ;;		None
 23941 ;; Auto vars:     Size  Location     Type
 23942 ;;  index           1   22[COMRAM] unsigned char 
 23943 ;; Return value:  Size  Location     Type
 23944 ;;                  2   18[COMRAM] unsigned int 
 23945 ;; Registers used:
 23946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23947 ;; Tracked objects:
 23948 ;;		On entry : 0/0
 23949 ;;		On exit  : 0/0
 23950 ;;		Unchanged: 0/0
 23951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23954 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23955 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23956 ;;Total ram usage:        5 bytes
 23957 ;; Hardware stack levels used:    1
 23958 ;; Hardware stack levels required when called:    4
 23959 ;; This function calls:
 23960 ;;		Nothing
 23961 ;; This function is called by:
 23962 ;;		_ETH_WriteStart
 23963 ;; This function uses a non-reentrant model
 23964 ;;
 23965                           
 23966                           	psect	text94
 23967  01439A                     __ptext94:
 23968                           	opt stack 0
 23969  01439A                     _ETH_NewPacket:
 23970                           	opt stack 20
 23971                           
 23972                           ;ETHxxJ6x_driver.c: 1179: uint8_t index = 0;
 23973                           
 23974                           ;incstack = 0
 23975  01439A  0E00               	movlw	0
 23976  01439C  6E17               	movwf	ETH_NewPacket@index,c
 23977                           
 23978                           ;ETHxxJ6x_driver.c: 1181: if( ethListSize == (20) )
 23979  01439E  0E14               	movlw	20
 23980  0143A0  1846               	xorwf	_ethListSize,w,c
 23981  0143A2  A4D8               	btfss	status,2,c
 23982  0143A4  D0EB               	goto	l773
 23983                           
 23984                           ;ETHxxJ6x_driver.c: 1182: {
 23985                           ;ETHxxJ6x_driver.c: 1183: return (0);
 23986  0143A6  0E00               	movlw	0
 23987  0143A8  6E14               	movwf	?_ETH_NewPacket+1,c
 23988  0143AA  0E00               	movlw	0
 23989  0143AC  6E13               	movwf	?_ETH_NewPacket,c
 23990  0143AE  0012               	return	
 23991  0143B0                     
 23992                           ;ETHxxJ6x_driver.c: 1187: {
 23993                           ;ETHxxJ6x_driver.c: 1188: if( (bool)(txData[index].flags & (0x0001 << 2)) == 0 )
 23994  0143B0  5017               	movf	ETH_NewPacket@index,w,c
 23995  0143B2  0D0A               	mullw	10
 23996  0143B4  0E00               	movlw	low _txData
 23997  0143B6  24F3               	addwf	prodl,w,c
 23998  0143B8  6ED9               	movwf	fsr2l,c
 23999  0143BA  0E04               	movlw	high _txData
 24000  0143BC  20F4               	addwfc	prodh,w,c
 24001  0143BE  6EDA               	movwf	fsr2h,c
 24002  0143C0  0104               	movlb	4	; () banked
 24003  0143C2  B4DF               	btfsc	indf2,2,c
 24004  0143C4  D0DA               	goto	l775
 24005                           
 24006                           ; BSR set to: 4
 24007                           ;ETHxxJ6x_driver.c: 1189: {
 24008                           ;ETHxxJ6x_driver.c: 1190: txData[index].flags = 0;
 24009  0143C6  5017               	movf	ETH_NewPacket@index,w,c
 24010  0143C8  0D0A               	mullw	10
 24011  0143CA  0E00               	movlw	low _txData
 24012  0143CC  24F3               	addwf	prodl,w,c
 24013  0143CE  6ED9               	movwf	fsr2l,c
 24014  0143D0  0E04               	movlw	high _txData
 24015  0143D2  20F4               	addwfc	prodh,w,c
 24016  0143D4  6EDA               	movwf	fsr2h,c
 24017  0143D6  0E00               	movlw	0
 24018  0143D8  6EDE               	movwf	postinc2,c
 24019  0143DA  0E00               	movlw	0
 24020  0143DC  6EDD               	movwf	postdec2,c
 24021                           
 24022                           ; BSR set to: 4
 24023                           
 24024                           ;ETHxxJ6x_driver.c: 1191: do{ txData[index].flags = txData[index].flags | (0x0001 << 2);
      +                           } while(0);
 24025  0143DE  5017               	movf	ETH_NewPacket@index,w,c
 24026  0143E0  0D0A               	mullw	10
 24027  0143E2  0E00               	movlw	low _txData
 24028  0143E4  24F3               	addwf	prodl,w,c
 24029  0143E6  6ED9               	movwf	fsr2l,c
 24030  0143E8  0E04               	movlw	high _txData
 24031  0143EA  20F4               	addwfc	prodh,w,c
 24032  0143EC  6EDA               	movwf	fsr2h,c
 24033  0143EE  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 24034  0143F2  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 24035  0143F6  0E04               	movlw	4
 24036  0143F8  1215               	iorwf	??_ETH_NewPacket,f,c
 24037  0143FA  0E00               	movlw	0
 24038  0143FC  1216               	iorwf	??_ETH_NewPacket+1,f,c
 24039  0143FE  5017               	movf	ETH_NewPacket@index,w,c
 24040  014400  0D0A               	mullw	10
 24041  014402  0E00               	movlw	low _txData
 24042  014404  24F3               	addwf	prodl,w,c
 24043  014406  6ED9               	movwf	fsr2l,c
 24044  014408  0E04               	movlw	high _txData
 24045  01440A  20F4               	addwfc	prodh,w,c
 24046  01440C  6EDA               	movwf	fsr2h,c
 24047  01440E  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 24048  014412  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 24049                           
 24050                           ; BSR set to: 4
 24051                           ;ETHxxJ6x_driver.c: 1193: txData[index].packetEnd = ((8192)-1);
 24052  014416  5017               	movf	ETH_NewPacket@index,w,c
 24053  014418  0D0A               	mullw	10
 24054  01441A  0E04               	movlw	4
 24055  01441C  26F3               	addwf	prodl,f,c
 24056  01441E  0E00               	movlw	0
 24057  014420  22F4               	addwfc	prodh,f,c
 24058  014422  0E00               	movlw	low _txData
 24059  014424  24F3               	addwf	prodl,w,c
 24060  014426  6ED9               	movwf	fsr2l,c
 24061  014428  0E04               	movlw	high _txData
 24062  01442A  20F4               	addwfc	prodh,w,c
 24063  01442C  6EDA               	movwf	fsr2h,c
 24064  01442E  0EFF               	movlw	255
 24065  014430  6EDE               	movwf	postinc2,c
 24066  014432  0E1F               	movlw	31
 24067  014434  6EDD               	movwf	postdec2,c
 24068                           
 24069                           ;ETHxxJ6x_driver.c: 1195: txData[index].prevPacket = (0);
 24070  014436  5017               	movf	ETH_NewPacket@index,w,c
 24071  014438  0D0A               	mullw	10
 24072  01443A  0E06               	movlw	6
 24073  01443C  26F3               	addwf	prodl,f,c
 24074  01443E  0E00               	movlw	0
 24075  014440  22F4               	addwfc	prodh,f,c
 24076  014442  0E00               	movlw	low _txData
 24077  014444  24F3               	addwf	prodl,w,c
 24078  014446  6ED9               	movwf	fsr2l,c
 24079  014448  0E04               	movlw	high _txData
 24080  01444A  20F4               	addwfc	prodh,w,c
 24081  01444C  6EDA               	movwf	fsr2h,c
 24082  01444E  0E00               	movlw	0
 24083  014450  6EDE               	movwf	postinc2,c
 24084  014452  0E00               	movlw	0
 24085  014454  6EDD               	movwf	postdec2,c
 24086                           
 24087                           ;ETHxxJ6x_driver.c: 1196: txData[index].nextPacket = pHead;
 24088  014456  5017               	movf	ETH_NewPacket@index,w,c
 24089  014458  0D0A               	mullw	10
 24090  01445A  0E08               	movlw	8
 24091  01445C  26F3               	addwf	prodl,f,c
 24092  01445E  0E00               	movlw	0
 24093  014460  22F4               	addwfc	prodh,f,c
 24094  014462  0E00               	movlw	low _txData
 24095  014464  24F3               	addwf	prodl,w,c
 24096  014466  6ED9               	movwf	fsr2l,c
 24097  014468  0E04               	movlw	high _txData
 24098  01446A  20F4               	addwfc	prodh,w,c
 24099  01446C  6EDA               	movwf	fsr2h,c
 24100  01446E  C043  FFDE         	movff	_pHead,postinc2
 24101  014472  C044  FFDD         	movff	_pHead+1,postdec2
 24102                           
 24103                           ; BSR set to: 4
 24104                           ;ETHxxJ6x_driver.c: 1198: if( pHead != (0) )
 24105  014476  5043               	movf	_pHead,w,c
 24106  014478  1044               	iorwf	_pHead+1,w,c
 24107  01447A  B4D8               	btfsc	status,2,c
 24108  01447C  D054               	goto	l778
 24109                           
 24110                           ; BSR set to: 4
 24111                           ;ETHxxJ6x_driver.c: 1199: {
 24112                           ;ETHxxJ6x_driver.c: 1200: pHead->prevPacket = &txData[index];
 24113  01447E  5017               	movf	ETH_NewPacket@index,w,c
 24114  014480  0D0A               	mullw	10
 24115  014482  0E00               	movlw	low _txData
 24116  014484  6E15               	movwf	??_ETH_NewPacket& (0+255),c
 24117  014486  0E04               	movlw	high _txData
 24118  014488  6E16               	movwf	(??_ETH_NewPacket+1)& (0+255),c
 24119  01448A  50F3               	movf	prodl,w,c
 24120  01448C  2615               	addwf	??_ETH_NewPacket,f,c
 24121  01448E  50F4               	movf	prodh,w,c
 24122  014490  2216               	addwfc	??_ETH_NewPacket+1,f,c
 24123  014492  EE20 F006          	lfsr	2,6
 24124  014496  5043               	movf	_pHead,w,c
 24125  014498  26D9               	addwf	fsr2l,f,c
 24126  01449A  5044               	movf	_pHead+1,w,c
 24127  01449C  22DA               	addwfc	fsr2h,f,c
 24128  01449E  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 24129  0144A2  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 24130                           
 24131                           ;ETHxxJ6x_driver.c: 1201: txData[index].packetStart = pHead->packetEnd + (7);
 24132  0144A6  EE20 F004          	lfsr	2,4
 24133  0144AA  5043               	movf	_pHead,w,c
 24134  0144AC  26D9               	addwf	fsr2l,f,c
 24135  0144AE  5044               	movf	_pHead+1,w,c
 24136  0144B0  22DA               	addwfc	fsr2h,f,c
 24137  0144B2  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 24138  0144B6  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 24139  0144BA  0E07               	movlw	7
 24140  0144BC  2615               	addwf	??_ETH_NewPacket,f,c
 24141  0144BE  0E00               	movlw	0
 24142  0144C0  2216               	addwfc	??_ETH_NewPacket+1,f,c
 24143  0144C2  5017               	movf	ETH_NewPacket@index,w,c
 24144  0144C4  0D0A               	mullw	10
 24145  0144C6  0E02               	movlw	2
 24146  0144C8  26F3               	addwf	prodl,f,c
 24147  0144CA  0E00               	movlw	0
 24148  0144CC  22F4               	addwfc	prodh,f,c
 24149  0144CE  0E00               	movlw	low _txData
 24150  0144D0  24F3               	addwf	prodl,w,c
 24151  0144D2  6ED9               	movwf	fsr2l,c
 24152  0144D4  0E04               	movlw	high _txData
 24153  0144D6  20F4               	addwfc	prodh,w,c
 24154  0144D8  6EDA               	movwf	fsr2h,c
 24155  0144DA  C015  FFDE         	movff	??_ETH_NewPacket,postinc2
 24156  0144DE  C016  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 24157                           
 24158                           ;ETHxxJ6x_driver.c: 1204: if( txData[index].packetStart & 0x0001 )
 24159  0144E2  5017               	movf	ETH_NewPacket@index,w,c
 24160  0144E4  0D0A               	mullw	10
 24161  0144E6  0E02               	movlw	2
 24162  0144E8  26F3               	addwf	prodl,f,c
 24163  0144EA  0E00               	movlw	0
 24164  0144EC  22F4               	addwfc	prodh,f,c
 24165  0144EE  0E00               	movlw	low _txData
 24166  0144F0  24F3               	addwf	prodl,w,c
 24167  0144F2  6ED9               	movwf	fsr2l,c
 24168  0144F4  0E04               	movlw	high _txData
 24169  0144F6  20F4               	addwfc	prodh,w,c
 24170  0144F8  6EDA               	movwf	fsr2h,c
 24171  0144FA  CFDE F015          	movff	postinc2,??_ETH_NewPacket
 24172  0144FE  CFDD F016          	movff	postdec2,??_ETH_NewPacket+1
 24173  014502  A015               	btfss	??_ETH_NewPacket,0,c
 24174  014504  D028               	goto	l780
 24175                           
 24176                           ; BSR set to: 4
 24177                           ;ETHxxJ6x_driver.c: 1205: {
 24178                           ;ETHxxJ6x_driver.c: 1207: ++ txData[index].packetStart;
 24179  014506  5017               	movf	ETH_NewPacket@index,w,c
 24180  014508  0D0A               	mullw	10
 24181  01450A  0E02               	movlw	2
 24182  01450C  26F3               	addwf	prodl,f,c
 24183  01450E  0E00               	movlw	0
 24184  014510  22F4               	addwfc	prodh,f,c
 24185  014512  0E00               	movlw	low _txData
 24186  014514  24F3               	addwf	prodl,w,c
 24187  014516  6ED9               	movwf	fsr2l,c
 24188  014518  0E04               	movlw	high _txData
 24189  01451A  20F4               	addwfc	prodh,w,c
 24190  01451C  6EDA               	movwf	fsr2h,c
 24191  01451E  2ADE               	incf	postinc2,f,c
 24192  014520  0E00               	movlw	0
 24193  014522  22DD               	addwfc	postdec2,f,c
 24194                           
 24195                           ; BSR set to: 4
 24196                           ;ETHxxJ6x_driver.c: 1208: }
 24197                           ;ETHxxJ6x_driver.c: 1209: }
 24198  014524  D018               	goto	l780
 24199  014526                     l778:
 24200                           
 24201                           ; BSR set to: 4
 24202                           ;ETHxxJ6x_driver.c: 1210: else
 24203                           ;ETHxxJ6x_driver.c: 1211: {
 24204                           ;ETHxxJ6x_driver.c: 1212: txData[index].packetStart = ((8192) - (((1518) + (7)) << 1));
 24205                           
 24206                           ; BSR set to: 4
 24207  014526  5017               	movf	ETH_NewPacket@index,w,c
 24208  014528  0D0A               	mullw	10
 24209  01452A  0E02               	movlw	2
 24210  01452C  26F3               	addwf	prodl,f,c
 24211  01452E  0E00               	movlw	0
 24212  014530  22F4               	addwfc	prodh,f,c
 24213  014532  0E00               	movlw	low _txData
 24214  014534  24F3               	addwf	prodl,w,c
 24215  014536  6ED9               	movwf	fsr2l,c
 24216  014538  0E04               	movlw	high _txData
 24217  01453A  20F4               	addwfc	prodh,w,c
 24218  01453C  6EDA               	movwf	fsr2h,c
 24219  01453E  0E16               	movlw	22
 24220  014540  6EDE               	movwf	postinc2,c
 24221  014542  0E14               	movlw	20
 24222  014544  6EDD               	movwf	postdec2,c
 24223                           
 24224                           ; BSR set to: 4
 24225                           ;ETHxxJ6x_driver.c: 1213: pTail = (txPacket_t*)&txData[index];
 24226  014546  5017               	movf	ETH_NewPacket@index,w,c
 24227  014548  0D0A               	mullw	10
 24228  01454A  0E00               	movlw	low _txData
 24229  01454C  24F3               	addwf	prodl,w,c
 24230  01454E  6E41               	movwf	_pTail,c
 24231  014550  0E04               	movlw	high _txData
 24232  014552  20F4               	addwfc	prodh,w,c
 24233  014554  6E42               	movwf	_pTail+1,c
 24234  014556                     l780:
 24235                           
 24236                           ; BSR set to: 4
 24237                           ;ETHxxJ6x_driver.c: 1214: }
 24238                           ;ETHxxJ6x_driver.c: 1216: pHead = (txPacket_t*)&txData[index];
 24239                           
 24240                           ; BSR set to: 4
 24241  014556  5017               	movf	ETH_NewPacket@index,w,c
 24242  014558  0D0A               	mullw	10
 24243  01455A  0E00               	movlw	low _txData
 24244  01455C  24F3               	addwf	prodl,w,c
 24245  01455E  6E43               	movwf	_pHead,c
 24246  014560  0E04               	movlw	high _txData
 24247  014562  20F4               	addwfc	prodh,w,c
 24248  014564  6E44               	movwf	_pHead+1,c
 24249                           
 24250                           ; BSR set to: 4
 24251                           ;ETHxxJ6x_driver.c: 1218: ethListSize ++;
 24252  014566  2A46               	incf	_ethListSize,f,c
 24253                           
 24254                           ; BSR set to: 4
 24255                           ;ETHxxJ6x_driver.c: 1219: return (uint16_t)(&txData[index]);
 24256  014568  5017               	movf	ETH_NewPacket@index,w,c
 24257  01456A  0D0A               	mullw	10
 24258  01456C  0E00               	movlw	low _txData
 24259  01456E  24F3               	addwf	prodl,w,c
 24260  014570  6E13               	movwf	?_ETH_NewPacket,c
 24261  014572  0E04               	movlw	high _txData
 24262  014574  20F4               	addwfc	prodh,w,c
 24263  014576  6E14               	movwf	?_ETH_NewPacket+1,c
 24264                           
 24265                           ; BSR set to: 4
 24266  014578  0012               	return	
 24267  01457A                     l775:
 24268                           
 24269                           ; BSR set to: 4
 24270                           ;ETHxxJ6x_driver.c: 1220: }
 24271                           ;ETHxxJ6x_driver.c: 1221: index ++;
 24272                           
 24273                           ; BSR set to: 4
 24274  01457A  2A17               	incf	ETH_NewPacket@index,f,c
 24275  01457C                     l773:
 24276                           
 24277                           ; BSR set to: 4
 24278  01457C  0E13               	movlw	19
 24279  01457E  6417               	cpfsgt	ETH_NewPacket@index,c
 24280  014580  D717               	goto	l774
 24281                           
 24282                           ;ETHxxJ6x_driver.c: 1222: }
 24283                           ;ETHxxJ6x_driver.c: 1224: return (0);
 24284  014582  0E00               	movlw	0
 24285  014584  6E14               	movwf	?_ETH_NewPacket+1,c
 24286  014586  0E00               	movlw	0
 24287  014588  6E13               	movwf	?_ETH_NewPacket,c
 24288  01458A  0012               	return	
 24289  01458C                     __end_of_ETH_NewPacket:
 24290                           	opt stack 0
 24291                           tosu	equ	0xFFF
 24292                           tosh	equ	0xFFE
 24293                           tosl	equ	0xFFD
 24294                           pclath	equ	0xFFA
 24295                           tblptru	equ	0xFF8
 24296                           tblptrh	equ	0xFF7
 24297                           tblptrl	equ	0xFF6
 24298                           tablat	equ	0xFF5
 24299                           prodh	equ	0xFF4
 24300                           prodl	equ	0xFF3
 24301                           intcon	equ	0xFF2
 24302                           indf0	equ	0xFEF
 24303                           postinc0	equ	0xFEE
 24304                           fsr0h	equ	0xFEA
 24305                           fsr0l	equ	0xFE9
 24306                           wreg	equ	0xFE8
 24307                           indf1	equ	0xFE7
 24308                           postinc1	equ	0xFE6
 24309                           postdec1	equ	0xFE5
 24310                           plusw1	equ	0xFE3
 24311                           fsr1h	equ	0xFE2
 24312                           fsr1l	equ	0xFE1
 24313                           indf2	equ	0xFDF
 24314                           postinc2	equ	0xFDE
 24315                           postdec2	equ	0xFDD
 24316                           plusw2	equ	0xFDB
 24317                           fsr2h	equ	0xFDA
 24318                           fsr2l	equ	0xFD9
 24319                           status	equ	0xFD8
 24320                           
 24321 ;; *************** function _ETH_WriteBlock *****************
 24322 ;; Defined at:
 24323 ;;		line 596 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24324 ;; Parameters:    Size  Location     Type
 24325 ;;  buffer          2   18[COMRAM] PTR const void 
 24326 ;;		 -> TCP_Snd@txHeader(20), NULL(0), ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 24327 ;;		 -> hostMacAddress(6), 
 24328 ;;  length          2   20[COMRAM] unsigned int 
 24329 ;; Auto vars:     Size  Location     Type
 24330 ;;  p               2   22[COMRAM] PTR const unsigned char 
 24331 ;;		 -> TCP_Snd@txHeader(20), NULL(0), ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 24332 ;;		 -> hostMacAddress(6), 
 24333 ;; Return value:  Size  Location     Type
 24334 ;;                  2   18[COMRAM] unsigned int 
 24335 ;; Registers used:
 24336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24337 ;; Tracked objects:
 24338 ;;		On entry : 0/0
 24339 ;;		On exit  : 0/0
 24340 ;;		Unchanged: 0/0
 24341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24345 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24346 ;;Total ram usage:        6 bytes
 24347 ;; Hardware stack levels used:    1
 24348 ;; Hardware stack levels required when called:    5
 24349 ;; This function calls:
 24350 ;;		_ETH_EdataWrite
 24351 ;; This function is called by:
 24352 ;;		_ARPV4_Packet
 24353 ;;		_ARPV4_Request
 24354 ;;		_sendRequest
 24355 ;;		_TCP_Snd
 24356 ;; This function uses a non-reentrant model
 24357 ;;
 24358                           
 24359                           	psect	text95
 24360  016570                     __ptext95:
 24361                           	opt stack 0
 24362  016570                     _ETH_WriteBlock:
 24363                           	opt stack 19
 24364                           
 24365                           ;ETHxxJ6x_driver.c: 598: const char *p = buffer;
 24366                           
 24367                           ;incstack = 0
 24368  016570  C013  F017         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 24369  016574  C014  F018         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 24370                           
 24371                           ;ETHxxJ6x_driver.c: 599: while(length-- && (EWRPT < ((8192)-1)))
 24372  016578  D009               	goto	l600
 24373  01657A                     
 24374                           ;ETHxxJ6x_driver.c: 600: {
 24375                           ;ETHxxJ6x_driver.c: 601: ETH_EdataWrite(*p++);
 24376  01657A  C017  FFD9         	movff	ETH_WriteBlock@p,fsr2l
 24377  01657E  C018  FFDA         	movff	ETH_WriteBlock@p+1,fsr2h
 24378  016582  50DF               	movf	indf2,w,c
 24379  016584  ECA8  F0B5         	call	_ETH_EdataWrite
 24380  016588  4A17               	infsnz	ETH_WriteBlock@p,f,c
 24381  01658A  2A18               	incf	ETH_WriteBlock@p+1,f,c
 24382  01658C                     l600:
 24383  01658C  0615               	decf	ETH_WriteBlock@length,f,c
 24384  01658E  A0D8               	btfss	status,0,c
 24385  016590  0616               	decf	ETH_WriteBlock@length+1,f,c
 24386  016592  2815               	incf	ETH_WriteBlock@length,w,c
 24387  016594  E103               	bnz	u9080
 24388  016596  2816               	incf	ETH_WriteBlock@length+1,w,c
 24389  016598  B4D8               	btfsc	status,2,c
 24390  01659A  0012               	return	
 24391  01659C                     u9080:
 24392  01659C  010E               	movlb	14	; () banked
 24393  01659E  29E2               	incf	226,w,b	;volatile
 24394  0165A0  0E1F               	movlw	31
 24395  0165A2  59E3               	subwfb	227,w,b	;volatile
 24396  0165A4  B0D8               	btfsc	status,0,c
 24397  0165A6  0012               	return	
 24398  0165A8  D7E8               	goto	l601
 24399  0165AA                     __end_of_ETH_WriteBlock:
 24400                           	opt stack 0
 24401                           tosu	equ	0xFFF
 24402                           tosh	equ	0xFFE
 24403                           tosl	equ	0xFFD
 24404                           pclath	equ	0xFFA
 24405                           tblptru	equ	0xFF8
 24406                           tblptrh	equ	0xFF7
 24407                           tblptrl	equ	0xFF6
 24408                           tablat	equ	0xFF5
 24409                           prodh	equ	0xFF4
 24410                           prodl	equ	0xFF3
 24411                           intcon	equ	0xFF2
 24412                           indf0	equ	0xFEF
 24413                           postinc0	equ	0xFEE
 24414                           fsr0h	equ	0xFEA
 24415                           fsr0l	equ	0xFE9
 24416                           wreg	equ	0xFE8
 24417                           indf1	equ	0xFE7
 24418                           postinc1	equ	0xFE6
 24419                           postdec1	equ	0xFE5
 24420                           plusw1	equ	0xFE3
 24421                           fsr1h	equ	0xFE2
 24422                           fsr1l	equ	0xFE1
 24423                           indf2	equ	0xFDF
 24424                           postinc2	equ	0xFDE
 24425                           postdec2	equ	0xFDD
 24426                           plusw2	equ	0xFDB
 24427                           fsr2h	equ	0xFDA
 24428                           fsr2l	equ	0xFD9
 24429                           status	equ	0xFD8
 24430                           
 24431 ;; *************** function _ARPV4_Lookup *****************
 24432 ;; Defined at:
 24433 ;;		line 238 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 24434 ;; Parameters:    Size  Location     Type
 24435 ;;  ip_address      4   18[COMRAM] unsigned long 
 24436 ;; Auto vars:     Size  Location     Type
 24437 ;;  entry_pointe    2   26[COMRAM] PTR struct .
 24438 ;;		 -> arpMap(104), 
 24439 ;;  x               1   28[COMRAM] unsigned char 
 24440 ;; Return value:  Size  Location     Type
 24441 ;;                  2   18[COMRAM] PTR struct .
 24442 ;; Registers used:
 24443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24444 ;; Tracked objects:
 24445 ;;		On entry : 0/0
 24446 ;;		On exit  : 0/0
 24447 ;;		Unchanged: 0/0
 24448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24450 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24451 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24452 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24453 ;;Total ram usage:       11 bytes
 24454 ;; Hardware stack levels used:    1
 24455 ;; Hardware stack levels required when called:    4
 24456 ;; This function calls:
 24457 ;;		Nothing
 24458 ;; This function is called by:
 24459 ;;		_IPv4_Start
 24460 ;; This function uses a non-reentrant model
 24461 ;;
 24462                           
 24463                           	psect	text96
 24464  01615C                     __ptext96:
 24465                           	opt stack 0
 24466  01615C                     _ARPV4_Lookup:
 24467                           	opt stack 21
 24468                           
 24469                           ;arpv4.c: 240: arpMap_t *entry_pointer = arpMap;
 24470                           
 24471                           ;incstack = 0
 24472  01615C  0E04               	movlw	low _arpMap
 24473  01615E  6E1B               	movwf	ARPV4_Lookup@entry_pointer,c
 24474  016160  0E03               	movlw	high _arpMap
 24475  016162  6E1C               	movwf	ARPV4_Lookup@entry_pointer+1,c
 24476                           
 24477                           ;arpv4.c: 241: uint8_t x;
 24478                           ;arpv4.c: 243: for(x = 0; x < 8; x++)
 24479  016164  0E00               	movlw	0
 24480  016166  6E1D               	movwf	ARPV4_Lookup@x,c
 24481  016168                     l9840:
 24482  016168  0E07               	movlw	7
 24483  01616A  641D               	cpfsgt	ARPV4_Lookup@x,c
 24484  01616C  D001               	goto	l342
 24485  01616E  D01E               	goto	u9250
 24486  016170                     l342:
 24487                           
 24488                           ;arpv4.c: 244: {
 24489                           ;arpv4.c: 245: if(entry_pointer->ipAddress == ip_address)
 24490  016170  EE20 F006          	lfsr	2,6
 24491  016174  501B               	movf	ARPV4_Lookup@entry_pointer,w,c
 24492  016176  26D9               	addwf	fsr2l,f,c
 24493  016178  501C               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 24494  01617A  22DA               	addwfc	fsr2h,f,c
 24495  01617C  5013               	movf	ARPV4_Lookup@ip_address,w,c
 24496  01617E  18DE               	xorwf	postinc2,w,c
 24497  016180  E10F               	bnz	l9850
 24498  016182  5014               	movf	ARPV4_Lookup@ip_address+1,w,c
 24499  016184  18DE               	xorwf	postinc2,w,c
 24500  016186  E10C               	bnz	l9850
 24501  016188  5015               	movf	ARPV4_Lookup@ip_address+2,w,c
 24502  01618A  18DE               	xorwf	postinc2,w,c
 24503  01618C  E109               	bnz	l9850
 24504  01618E  5016               	movf	ARPV4_Lookup@ip_address+3,w,c
 24505  016190  18DE               	xorwf	postinc2,w,c
 24506  016192  A4D8               	btfss	status,2,c
 24507  016194  D005               	goto	l344
 24508                           
 24509                           ;arpv4.c: 246: return &entry_pointer->macAddress;
 24510  016196  C01B  F013         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 24511  01619A  C01C  F014         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 24512  01619E  0012               	return	
 24513  0161A0                     l344:
 24514  0161A0                     l9850:
 24515                           
 24516                           ;arpv4.c: 247: entry_pointer ++;
 24517  0161A0  0E0D               	movlw	13
 24518  0161A2  261B               	addwf	ARPV4_Lookup@entry_pointer,f,c
 24519  0161A4  0E00               	movlw	0
 24520  0161A6  221C               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 24521  0161A8  2A1D               	incf	ARPV4_Lookup@x,f,c
 24522  0161AA  D7DE               	goto	l9840
 24523  0161AC                     u9250:
 24524                           
 24525                           ;arpv4.c: 248: }
 24526                           ;arpv4.c: 249: return 0;
 24527  0161AC  0E00               	movlw	0
 24528  0161AE  6E13               	movwf	?_ARPV4_Lookup,c
 24529  0161B0  0E00               	movlw	0
 24530  0161B2  6E14               	movwf	?_ARPV4_Lookup+1,c
 24531  0161B4  0012               	return	
 24532  0161B6                     __end_of_ARPV4_Lookup:
 24533                           	opt stack 0
 24534                           tosu	equ	0xFFF
 24535                           tosh	equ	0xFFE
 24536                           tosl	equ	0xFFD
 24537                           pclath	equ	0xFFA
 24538                           tblptru	equ	0xFF8
 24539                           tblptrh	equ	0xFF7
 24540                           tblptrl	equ	0xFF6
 24541                           tablat	equ	0xFF5
 24542                           prodh	equ	0xFF4
 24543                           prodl	equ	0xFF3
 24544                           intcon	equ	0xFF2
 24545                           indf0	equ	0xFEF
 24546                           postinc0	equ	0xFEE
 24547                           fsr0h	equ	0xFEA
 24548                           fsr0l	equ	0xFE9
 24549                           wreg	equ	0xFE8
 24550                           indf1	equ	0xFE7
 24551                           postinc1	equ	0xFE6
 24552                           postdec1	equ	0xFE5
 24553                           plusw1	equ	0xFE3
 24554                           fsr1h	equ	0xFE2
 24555                           fsr1l	equ	0xFE1
 24556                           indf2	equ	0xFDF
 24557                           postinc2	equ	0xFDE
 24558                           postdec2	equ	0xFDD
 24559                           plusw2	equ	0xFDB
 24560                           fsr2h	equ	0xFDA
 24561                           fsr2l	equ	0xFD9
 24562                           status	equ	0xFD8
 24563                           
 24564 ;; *************** function _UDP_Send *****************
 24565 ;; Defined at:
 24566 ;;		line 94 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 24567 ;; Parameters:    Size  Location     Type
 24568 ;;		None
 24569 ;; Auto vars:     Size  Location     Type
 24570 ;;  udpLength       2   22[BANK0 ] unsigned int 
 24571 ;;  cksm            2   20[BANK0 ] unsigned int 
 24572 ;;  ret             1   19[BANK0 ] enum E393
 24573 ;; Return value:  Size  Location     Type
 24574 ;;                  1    wreg      enum E393
 24575 ;; Registers used:
 24576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24577 ;; Tracked objects:
 24578 ;;		On entry : 0/0
 24579 ;;		On exit  : 0/0
 24580 ;;		Unchanged: 0/0
 24581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24583 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24585 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24586 ;;Total ram usage:        9 bytes
 24587 ;; Hardware stack levels used:    1
 24588 ;; Hardware stack levels required when called:    8
 24589 ;; This function calls:
 24590 ;;		_ETH_GetByteCount
 24591 ;;		_ETH_Insert
 24592 ;;		_ETH_TxComputeChecksum
 24593 ;;		_IPV4_Send
 24594 ;; This function is called by:
 24595 ;;		_sendRequest
 24596 ;;		_DNS_Query
 24597 ;;		_NTP_Request
 24598 ;; This function uses a non-reentrant model
 24599 ;;
 24600                           
 24601                           	psect	text97
 24602  015340                     __ptext97:
 24603                           	opt stack 0
 24604  015340                     _UDP_Send:
 24605                           	opt stack 15
 24606                           
 24607                           ;udpv4.c: 96: uint16_t udpLength;
 24608                           ;udpv4.c: 97: uint16_t cksm;
 24609                           ;udpv4.c: 98: error_msg ret = ERROR;
 24610                           
 24611                           ;incstack = 0
 24612  015340  0E00               	movlw	0
 24613  015342  0100               	movlb	0	; () banked
 24614  015344  6F73               	movwf	UDP_Send@ret& (0+255),b
 24615                           
 24616                           ; BSR set to: 0
 24617                           ;udpv4.c: 100: udpLength = ETH_GetByteCount();
 24618  015346  EC84  F0B4         	call	_ETH_GetByteCount	;wreg free
 24619  01534A  C013  F076         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 24620  01534E  C014  F077         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 24621                           
 24622                           ;udpv4.c: 101: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 24623  015352  0100               	movlb	0	; () banked
 24624  015354  5176               	movf	UDP_Send@udpLength& (0+255),w,b
 24625  015356  6F70               	movwf	(??_UDP_Send+1)& (0+255),b
 24626  015358  6B6F               	clrf	??_UDP_Send& (0+255),b
 24627  01535A  C076  F071         	movff	UDP_Send@udpLength,??_UDP_Send+2
 24628  01535E  C077  F072         	movff	UDP_Send@udpLength+1,??_UDP_Send+3
 24629  015362  C072  F071         	movff	??_UDP_Send+3,??_UDP_Send+2
 24630  015366  6B72               	clrf	(??_UDP_Send+3)& (0+255),b
 24631  015368  0EFF               	movlw	255
 24632  01536A  1771               	andwf	(??_UDP_Send+2)& (0+255),f,b
 24633  01536C  0E00               	movlw	0
 24634  01536E  1772               	andwf	(??_UDP_Send+3)& (0+255),f,b
 24635  015370  516F               	movf	??_UDP_Send& (0+255),w,b
 24636  015372  1171               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 24637  015374  6F76               	movwf	UDP_Send@udpLength& (0+255),b
 24638  015376  5170               	movf	(??_UDP_Send+1)& (0+255),w,b
 24639  015378  1172               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 24640  01537A  6F77               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 24641                           
 24642                           ; BSR set to: 0
 24643                           ;udpv4.c: 102: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (size_t)(((char*)&((udpHeader_t *)1)->length)-1));
 24644  01537C  0E76               	movlw	low UDP_Send@udpLength
 24645  01537E  6E13               	movwf	ETH_Insert@data,c
 24646  015380  0E00               	movlw	high UDP_Send@udpLength
 24647  015382  6E14               	movwf	ETH_Insert@data+1,c
 24648  015384  0E00               	movlw	0
 24649  015386  6E16               	movwf	ETH_Insert@len+1,c
 24650  015388  0E02               	movlw	2
 24651  01538A  6E15               	movwf	ETH_Insert@len,c
 24652  01538C  0E00               	movlw	0
 24653  01538E  6E18               	movwf	ETH_Insert@offset+1,c
 24654  015390  0E26               	movlw	38
 24655  015392  6E17               	movwf	ETH_Insert@offset,c
 24656  015394  ECF4  F0AF         	call	_ETH_Insert	;wreg free
 24657                           
 24658                           ;udpv4.c: 103: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 24659  015398  0100               	movlb	0	; () banked
 24660  01539A  5176               	movf	UDP_Send@udpLength& (0+255),w,b
 24661  01539C  6F70               	movwf	(??_UDP_Send+1)& (0+255),b
 24662  01539E  6B6F               	clrf	??_UDP_Send& (0+255),b
 24663  0153A0  C076  F071         	movff	UDP_Send@udpLength,??_UDP_Send+2
 24664  0153A4  C077  F072         	movff	UDP_Send@udpLength+1,??_UDP_Send+3
 24665  0153A8  C072  F071         	movff	??_UDP_Send+3,??_UDP_Send+2
 24666  0153AC  6B72               	clrf	(??_UDP_Send+3)& (0+255),b
 24667  0153AE  0EFF               	movlw	255
 24668  0153B0  1771               	andwf	(??_UDP_Send+2)& (0+255),f,b
 24669  0153B2  0E00               	movlw	0
 24670  0153B4  1772               	andwf	(??_UDP_Send+3)& (0+255),f,b
 24671  0153B6  516F               	movf	??_UDP_Send& (0+255),w,b
 24672  0153B8  1171               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 24673  0153BA  6F76               	movwf	UDP_Send@udpLength& (0+255),b
 24674  0153BC  5170               	movf	(??_UDP_Send+1)& (0+255),w,b
 24675  0153BE  1172               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 24676  0153C0  6F77               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 24677                           
 24678                           ; BSR set to: 0
 24679                           ;udpv4.c: 106: cksm = udpLength + UDP_TCPIP;
 24680  0153C2  0E11               	movlw	17
 24681  0153C4  2576               	addwf	UDP_Send@udpLength& (0+255),w,b
 24682  0153C6  6F74               	movwf	UDP_Send@cksm& (0+255),b
 24683  0153C8  0E00               	movlw	0
 24684  0153CA  2177               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 24685  0153CC  6F75               	movwf	(UDP_Send@cksm+1)& (0+255),b
 24686                           
 24687                           ; BSR set to: 0
 24688                           ;udpv4.c: 107: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 24689  0153CE  0E00               	movlw	0
 24690  0153D0  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 24691  0153D2  0E1A               	movlw	26
 24692  0153D4  6E25               	movwf	ETH_TxComputeChecksum@position,c
 24693  0153D6  0E08               	movlw	8
 24694  0153D8  2576               	addwf	UDP_Send@udpLength& (0+255),w,b
 24695  0153DA  6E27               	movwf	ETH_TxComputeChecksum@len,c
 24696  0153DC  0E00               	movlw	0
 24697  0153DE  2177               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 24698  0153E0  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 24699  0153E2  C074  F029         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 24700  0153E6  C075  F02A         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 24701  0153EA  EC6D  F0AB         	call	_ETH_TxComputeChecksum	;wreg free
 24702  0153EE  C025  F074         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 24703  0153F2  C026  F075         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 24704                           
 24705                           ;udpv4.c: 110: if (cksm == 0){
 24706  0153F6  0100               	movlb	0	; () banked
 24707  0153F8  5174               	movf	UDP_Send@cksm& (0+255),w,b
 24708  0153FA  1175               	iorwf	(UDP_Send@cksm+1)& (0+255),w,b
 24709  0153FC  A4D8               	btfss	status,2,c
 24710  0153FE  D002               	goto	l1231
 24711                           
 24712                           ; BSR set to: 0
 24713                           ;udpv4.c: 111: cksm = 0xffff;
 24714  015400  6974               	setf	UDP_Send@cksm& (0+255),b
 24715  015402  6975               	setf	(UDP_Send@cksm+1)& (0+255),b
 24716  015404                     l1231:
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;udpv4.c: 112: }
 24720                           ;udpv4.c: 114: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((udpHeader_t *)1)->checksum)-1));
 24721                           
 24722                           ; BSR set to: 0
 24723  015404  0E74               	movlw	low UDP_Send@cksm
 24724  015406  6E13               	movwf	ETH_Insert@data,c
 24725  015408  0E00               	movlw	high UDP_Send@cksm
 24726  01540A  6E14               	movwf	ETH_Insert@data+1,c
 24727  01540C  0E00               	movlw	0
 24728  01540E  6E16               	movwf	ETH_Insert@len+1,c
 24729  015410  0E02               	movlw	2
 24730  015412  6E15               	movwf	ETH_Insert@len,c
 24731  015414  0E00               	movlw	0
 24732  015416  6E18               	movwf	ETH_Insert@offset+1,c
 24733  015418  0E28               	movlw	40
 24734  01541A  6E17               	movwf	ETH_Insert@offset,c
 24735  01541C  ECF4  F0AF         	call	_ETH_Insert	;wreg free
 24736                           
 24737                           ;udpv4.c: 116: ret = IPV4_Send(udpLength);
 24738  015420  C076  F037         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 24739  015424  C077  F038         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 24740  015428  EC7B  F0AD         	call	_IPV4_Send	;wreg free
 24741  01542C  0100               	movlb	0	; () banked
 24742  01542E  6F73               	movwf	UDP_Send@ret& (0+255),b
 24743  015430  0012               	return	
 24744  015432                     __end_of_UDP_Send:
 24745                           	opt stack 0
 24746                           tosu	equ	0xFFF
 24747                           tosh	equ	0xFFE
 24748                           tosl	equ	0xFFD
 24749                           pclath	equ	0xFFA
 24750                           tblptru	equ	0xFF8
 24751                           tblptrh	equ	0xFF7
 24752                           tblptrl	equ	0xFF6
 24753                           tablat	equ	0xFF5
 24754                           prodh	equ	0xFF4
 24755                           prodl	equ	0xFF3
 24756                           intcon	equ	0xFF2
 24757                           indf0	equ	0xFEF
 24758                           postinc0	equ	0xFEE
 24759                           fsr0h	equ	0xFEA
 24760                           fsr0l	equ	0xFE9
 24761                           wreg	equ	0xFE8
 24762                           indf1	equ	0xFE7
 24763                           postinc1	equ	0xFE6
 24764                           postdec1	equ	0xFE5
 24765                           plusw1	equ	0xFE3
 24766                           fsr1h	equ	0xFE2
 24767                           fsr1l	equ	0xFE1
 24768                           indf2	equ	0xFDF
 24769                           postinc2	equ	0xFDE
 24770                           postdec2	equ	0xFDD
 24771                           plusw2	equ	0xFDB
 24772                           fsr2h	equ	0xFDA
 24773                           fsr2l	equ	0xFD9
 24774                           status	equ	0xFD8
 24775                           
 24776 ;; *************** function _IPV4_Send *****************
 24777 ;; Defined at:
 24778 ;;		line 262 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 24779 ;; Parameters:    Size  Location     Type
 24780 ;;  payloadLengt    2   54[COMRAM] unsigned int 
 24781 ;; Auto vars:     Size  Location     Type
 24782 ;;  totalLength     2   13[BANK0 ] unsigned int 
 24783 ;;  cksm            2   11[BANK0 ] unsigned int 
 24784 ;;  ret             1   10[BANK0 ] enum E392
 24785 ;; Return value:  Size  Location     Type
 24786 ;;                  1    wreg      enum E392
 24787 ;; Registers used:
 24788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24789 ;; Tracked objects:
 24790 ;;		On entry : 0/0
 24791 ;;		On exit  : 0/0
 24792 ;;		Unchanged: 0/0
 24793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24795 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24797 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24798 ;;Total ram usage:       11 bytes
 24799 ;; Hardware stack levels used:    1
 24800 ;; Hardware stack levels required when called:    7
 24801 ;; This function calls:
 24802 ;;		_ETH_Insert
 24803 ;;		_ETH_Send
 24804 ;;		_ETH_TxComputeChecksum
 24805 ;; This function is called by:
 24806 ;;		_ICMP_EchoReply
 24807 ;;		_ICMP_PortUnreachable
 24808 ;;		_UDP_Send
 24809 ;;		_TCP_Snd
 24810 ;; This function uses a non-reentrant model
 24811 ;;
 24812                           
 24813                           	psect	text98
 24814  015AF6                     __ptext98:
 24815                           	opt stack 0
 24816  015AF6                     _IPV4_Send:
 24817                           	opt stack 19
 24818                           
 24819                           ;ipv4.c: 264: uint16_t totalLength;
 24820                           ;ipv4.c: 265: uint16_t cksm;
 24821                           ;ipv4.c: 266: error_msg ret;
 24822                           ;ipv4.c: 268: totalLength = 20 + payloadLength;
 24823                           
 24824                           ; BSR set to: 0
 24825                           ;incstack = 0
 24826  015AF6  0E14               	movlw	20
 24827  015AF8  2437               	addwf	IPV4_Send@payloadLength,w,c
 24828  015AFA  0100               	movlb	0	; () banked
 24829  015AFC  6F6D               	movwf	IPV4_Send@totalLength& (0+255),b
 24830  015AFE  0E00               	movlw	0
 24831  015B00  2038               	addwfc	IPV4_Send@payloadLength+1,w,c
 24832  015B02  6F6E               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 24833                           
 24834                           ;ipv4.c: 269: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 24835  015B04  516D               	movf	IPV4_Send@totalLength& (0+255),w,b
 24836  015B06  6F67               	movwf	(??_IPV4_Send+1)& (0+255),b
 24837  015B08  6B66               	clrf	??_IPV4_Send& (0+255),b
 24838  015B0A  C06D  F068         	movff	IPV4_Send@totalLength,??_IPV4_Send+2
 24839  015B0E  C06E  F069         	movff	IPV4_Send@totalLength+1,??_IPV4_Send+3
 24840  015B12  C069  F068         	movff	??_IPV4_Send+3,??_IPV4_Send+2
 24841  015B16  6B69               	clrf	(??_IPV4_Send+3)& (0+255),b
 24842  015B18  0EFF               	movlw	255
 24843  015B1A  1768               	andwf	(??_IPV4_Send+2)& (0+255),f,b
 24844  015B1C  0E00               	movlw	0
 24845  015B1E  1769               	andwf	(??_IPV4_Send+3)& (0+255),f,b
 24846  015B20  5166               	movf	??_IPV4_Send& (0+255),w,b
 24847  015B22  1168               	iorwf	(??_IPV4_Send+2)& (0+255),w,b
 24848  015B24  6F6D               	movwf	IPV4_Send@totalLength& (0+255),b
 24849  015B26  5167               	movf	(??_IPV4_Send+1)& (0+255),w,b
 24850  015B28  1169               	iorwf	(??_IPV4_Send+3)& (0+255),w,b
 24851  015B2A  6F6E               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 24852                           
 24853                           ; BSR set to: 0
 24854                           ;ipv4.c: 272: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (size_t)(((c
      +                          har*)&((ipv4Header_t *)1)->length)-1));
 24855  015B2C  0E6D               	movlw	low IPV4_Send@totalLength
 24856  015B2E  6E13               	movwf	ETH_Insert@data,c
 24857  015B30  0E00               	movlw	high IPV4_Send@totalLength
 24858  015B32  6E14               	movwf	ETH_Insert@data+1,c
 24859  015B34  0E00               	movlw	0
 24860  015B36  6E16               	movwf	ETH_Insert@len+1,c
 24861  015B38  0E02               	movlw	2
 24862  015B3A  6E15               	movwf	ETH_Insert@len,c
 24863  015B3C  0E00               	movlw	0
 24864  015B3E  6E18               	movwf	ETH_Insert@offset+1,c
 24865  015B40  0E10               	movlw	16
 24866  015B42  6E17               	movwf	ETH_Insert@offset,c
 24867  015B44  ECF4  F0AF         	call	_ETH_Insert	;wreg free
 24868                           
 24869                           ;ipv4.c: 274: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 24870  015B48  0E00               	movlw	0
 24871  015B4A  6E26               	movwf	ETH_TxComputeChecksum@position+1,c
 24872  015B4C  0E0E               	movlw	14
 24873  015B4E  6E25               	movwf	ETH_TxComputeChecksum@position,c
 24874  015B50  0E00               	movlw	0
 24875  015B52  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 24876  015B54  0E14               	movlw	20
 24877  015B56  6E27               	movwf	ETH_TxComputeChecksum@len,c
 24878  015B58  0E00               	movlw	0
 24879  015B5A  6E2A               	movwf	ETH_TxComputeChecksum@seed+1,c
 24880  015B5C  0E00               	movlw	0
 24881  015B5E  6E29               	movwf	ETH_TxComputeChecksum@seed,c
 24882  015B60  EC6D  F0AB         	call	_ETH_TxComputeChecksum	;wreg free
 24883  015B64  C025  F06B         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 24884  015B68  C026  F06C         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 24885                           
 24886                           ;ipv4.c: 276: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (size_t)(((char*)&(
      +                          (ipv4Header_t *)1)->headerCksm)-1));
 24887  015B6C  0E6B               	movlw	low IPV4_Send@cksm
 24888  015B6E  6E13               	movwf	ETH_Insert@data,c
 24889  015B70  0E00               	movlw	high IPV4_Send@cksm
 24890  015B72  6E14               	movwf	ETH_Insert@data+1,c
 24891  015B74  0E00               	movlw	0
 24892  015B76  6E16               	movwf	ETH_Insert@len+1,c
 24893  015B78  0E02               	movlw	2
 24894  015B7A  6E15               	movwf	ETH_Insert@len,c
 24895  015B7C  0E00               	movlw	0
 24896  015B7E  6E18               	movwf	ETH_Insert@offset+1,c
 24897  015B80  0E18               	movlw	24
 24898  015B82  6E17               	movwf	ETH_Insert@offset,c
 24899  015B84  ECF4  F0AF         	call	_ETH_Insert	;wreg free
 24900                           
 24901                           ;ipv4.c: 277: ret = ETH_Send();
 24902  015B88  EC88  F0AC         	call	_ETH_Send	;wreg free
 24903  015B8C  0100               	movlb	0	; () banked
 24904  015B8E  6F6A               	movwf	IPV4_Send@ret& (0+255),b
 24905                           
 24906                           ; BSR set to: 0
 24907                           ;ipv4.c: 279: return ret;
 24908  015B90  516A               	movf	IPV4_Send@ret& (0+255),w,b
 24909  015B92  0012               	return	
 24910  015B94                     __end_of_IPV4_Send:
 24911                           	opt stack 0
 24912                           tosu	equ	0xFFF
 24913                           tosh	equ	0xFFE
 24914                           tosl	equ	0xFFD
 24915                           pclath	equ	0xFFA
 24916                           tblptru	equ	0xFF8
 24917                           tblptrh	equ	0xFF7
 24918                           tblptrl	equ	0xFF6
 24919                           tablat	equ	0xFF5
 24920                           prodh	equ	0xFF4
 24921                           prodl	equ	0xFF3
 24922                           intcon	equ	0xFF2
 24923                           indf0	equ	0xFEF
 24924                           postinc0	equ	0xFEE
 24925                           fsr0h	equ	0xFEA
 24926                           fsr0l	equ	0xFE9
 24927                           wreg	equ	0xFE8
 24928                           indf1	equ	0xFE7
 24929                           postinc1	equ	0xFE6
 24930                           postdec1	equ	0xFE5
 24931                           plusw1	equ	0xFE3
 24932                           fsr1h	equ	0xFE2
 24933                           fsr1l	equ	0xFE1
 24934                           indf2	equ	0xFDF
 24935                           postinc2	equ	0xFDE
 24936                           postdec2	equ	0xFDD
 24937                           plusw2	equ	0xFDB
 24938                           fsr2h	equ	0xFDA
 24939                           fsr2l	equ	0xFD9
 24940                           status	equ	0xFD8
 24941                           
 24942 ;; *************** function _ETH_TxComputeChecksum *****************
 24943 ;; Defined at:
 24944 ;;		line 999 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24945 ;; Parameters:    Size  Location     Type
 24946 ;;  position        2   36[COMRAM] unsigned int 
 24947 ;;  len             2   38[COMRAM] unsigned int 
 24948 ;;  seed            2   40[COMRAM] unsigned int 
 24949 ;; Auto vars:     Size  Location     Type
 24950 ;;  cksm            4    2[BANK0 ] unsigned long 
 24951 ;;  rxptr           2    0[BANK0 ] unsigned int 
 24952 ;; Return value:  Size  Location     Type
 24953 ;;                  2   36[COMRAM] unsigned int 
 24954 ;; Registers used:
 24955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24956 ;; Tracked objects:
 24957 ;;		On entry : 0/0
 24958 ;;		On exit  : 0/0
 24959 ;;		Unchanged: 0/0
 24960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24961 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24962 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24963 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24964 ;;      Totals:        18       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24965 ;;Total ram usage:       24 bytes
 24966 ;; Hardware stack levels used:    1
 24967 ;; Hardware stack levels required when called:    6
 24968 ;; This function calls:
 24969 ;;		_ETH_ComputeChecksum
 24970 ;; This function is called by:
 24971 ;;		_IPV4_Send
 24972 ;;		_ICMP_EchoReply
 24973 ;;		_ICMP_PortUnreachable
 24974 ;;		_UDP_Send
 24975 ;;		_TCP_Snd
 24976 ;; This function uses a non-reentrant model
 24977 ;;
 24978                           
 24979                           	psect	text99
 24980  0156DA                     __ptext99:
 24981                           	opt stack 0
 24982  0156DA                     _ETH_TxComputeChecksum:
 24983                           	opt stack 19
 24984                           
 24985                           ;ETHxxJ6x_driver.c: 1001: uint16_t rxptr;
 24986                           ;ETHxxJ6x_driver.c: 1002: uint32_t cksm;
 24987                           ;ETHxxJ6x_driver.c: 1005: rxptr = ERDPT;
 24988                           
 24989                           ; BSR set to: 0
 24990                           ;incstack = 0
 24991  0156DA  CF7A F060          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
 24992  0156DE  CF7B F061          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
 24993                           
 24994                           ;ETHxxJ6x_driver.c: 1008: ERDPT = pHead->packetStart + position + 1;
 24995  0156E2  EE20 F002          	lfsr	2,2
 24996  0156E6  5043               	movf	_pHead,w,c
 24997  0156E8  26D9               	addwf	fsr2l,f,c
 24998  0156EA  5044               	movf	_pHead+1,w,c
 24999  0156EC  22DA               	addwfc	fsr2h,f,c
 25000  0156EE  CFDE F02B          	movff	postinc2,??_ETH_TxComputeChecksum
 25001  0156F2  CFDD F02C          	movff	postdec2,??_ETH_TxComputeChecksum+1
 25002  0156F6  5025               	movf	ETH_TxComputeChecksum@position,w,c
 25003  0156F8  262B               	addwf	??_ETH_TxComputeChecksum,f,c
 25004  0156FA  5026               	movf	ETH_TxComputeChecksum@position+1,w,c
 25005  0156FC  222C               	addwfc	??_ETH_TxComputeChecksum+1,f,c
 25006  0156FE  0E01               	movlw	1
 25007  015700  242B               	addwf	??_ETH_TxComputeChecksum,w,c
 25008  015702  6E7A               	movwf	3962,c	;volatile
 25009  015704  0E00               	movlw	0
 25010  015706  202C               	addwfc	??_ETH_TxComputeChecksum+1,w,c
 25011  015708  6E7B               	movwf	3963,c	;volatile
 25012                           
 25013                           ;ETHxxJ6x_driver.c: 1010: cksm = ETH_ComputeChecksum( len, seed);
 25014  01570A  C027  F013         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
 25015  01570E  C028  F014         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 25016  015712  C029  F015         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
 25017  015716  C02A  F016         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 25018  01571A  ECFE  F0A7         	call	_ETH_ComputeChecksum	;wreg free
 25019  01571E  C013  F062         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
 25020  015722  C014  F063         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
 25021  015726  0100               	movlb	0	; () banked
 25022  015728  6B64               	clrf	(ETH_TxComputeChecksum@cksm+2)& (0+255),b
 25023  01572A  6B65               	clrf	(ETH_TxComputeChecksum@cksm+3)& (0+255),b
 25024                           
 25025                           ; BSR set to: 0
 25026                           ;ETHxxJ6x_driver.c: 1013: ERDPT = rxptr;
 25027  01572C  C060  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
 25028  015730  C061  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
 25029                           
 25030                           ; BSR set to: 0
 25031                           ;ETHxxJ6x_driver.c: 1015: cksm = ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 25032  015734  0EFF               	movlw	255
 25033  015736  1562               	andwf	ETH_TxComputeChecksum@cksm& (0+255),w,b
 25034  015738  6E2B               	movwf	??_ETH_TxComputeChecksum& (0+255),c
 25035  01573A  0E00               	movlw	0
 25036  01573C  1563               	andwf	(ETH_TxComputeChecksum@cksm+1)& (0+255),w,b
 25037  01573E  6E2C               	movwf	(??_ETH_TxComputeChecksum+1)& (0+255),c
 25038  015740  0E00               	movlw	0
 25039  015742  1564               	andwf	(ETH_TxComputeChecksum@cksm+2)& (0+255),w,b
 25040  015744  6E2D               	movwf	(??_ETH_TxComputeChecksum+2)& (0+255),c
 25041  015746  0E00               	movlw	0
 25042  015748  1565               	andwf	(ETH_TxComputeChecksum@cksm+3)& (0+255),w,b
 25043  01574A  6E2E               	movwf	(??_ETH_TxComputeChecksum+3)& (0+255),c
 25044  01574C  C02D  F02E         	movff	??_ETH_TxComputeChecksum+2,??_ETH_TxComputeChecksum+3
 25045  015750  C02C  F02D         	movff	??_ETH_TxComputeChecksum+1,??_ETH_TxComputeChecksum+2
 25046  015754  C02B  F02C         	movff	??_ETH_TxComputeChecksum,??_ETH_TxComputeChecksum+1
 25047  015758  6A2B               	clrf	??_ETH_TxComputeChecksum,c
 25048  01575A  0EFF               	movlw	255
 25049  01575C  C062  F02F         	movff	ETH_TxComputeChecksum@cksm,??_ETH_TxComputeChecksum+4
 25050  015760  C063  F030         	movff	ETH_TxComputeChecksum@cksm+1,??_ETH_TxComputeChecksum+5
 25051  015764  C064  F031         	movff	ETH_TxComputeChecksum@cksm+2,??_ETH_TxComputeChecksum+6
 25052  015768  C065  F032         	movff	ETH_TxComputeChecksum@cksm+3,??_ETH_TxComputeChecksum+7
 25053  01576C  C030  F02F         	movff	??_ETH_TxComputeChecksum+5,??_ETH_TxComputeChecksum+4
 25054  015770  C031  F030         	movff	??_ETH_TxComputeChecksum+6,??_ETH_TxComputeChecksum+5
 25055  015774  C032  F031         	movff	??_ETH_TxComputeChecksum+7,??_ETH_TxComputeChecksum+6
 25056  015778  6A32               	clrf	??_ETH_TxComputeChecksum+7,c
 25057  01577A  142F               	andwf	??_ETH_TxComputeChecksum+4,w,c
 25058  01577C  6E33               	movwf	(??_ETH_TxComputeChecksum+8)& (0+255),c
 25059  01577E  0E00               	movlw	0
 25060  015780  1430               	andwf	??_ETH_TxComputeChecksum+5,w,c
 25061  015782  6E34               	movwf	(??_ETH_TxComputeChecksum+9)& (0+255),c
 25062  015784  0E00               	movlw	0
 25063  015786  1431               	andwf	??_ETH_TxComputeChecksum+6,w,c
 25064  015788  6E35               	movwf	(??_ETH_TxComputeChecksum+10)& (0+255),c
 25065  01578A  0E00               	movlw	0
 25066  01578C  1432               	andwf	??_ETH_TxComputeChecksum+7,w,c
 25067  01578E  6E36               	movwf	(??_ETH_TxComputeChecksum+11)& (0+255),c
 25068  015790  502B               	movf	??_ETH_TxComputeChecksum,w,c
 25069  015792  1033               	iorwf	??_ETH_TxComputeChecksum+8,w,c
 25070  015794  6F62               	movwf	ETH_TxComputeChecksum@cksm& (0+255),b
 25071  015796  502C               	movf	??_ETH_TxComputeChecksum+1,w,c
 25072  015798  1034               	iorwf	??_ETH_TxComputeChecksum+9,w,c
 25073  01579A  6F63               	movwf	(ETH_TxComputeChecksum@cksm+1)& (0+255),b
 25074  01579C  502D               	movf	??_ETH_TxComputeChecksum+2,w,c
 25075  01579E  1035               	iorwf	??_ETH_TxComputeChecksum+10,w,c
 25076  0157A0  6F64               	movwf	(ETH_TxComputeChecksum@cksm+2)& (0+255),b
 25077  0157A2  502E               	movf	??_ETH_TxComputeChecksum+3,w,c
 25078  0157A4  1036               	iorwf	??_ETH_TxComputeChecksum+11,w,c
 25079  0157A6  6F65               	movwf	(ETH_TxComputeChecksum@cksm+3)& (0+255),b
 25080                           
 25081                           ; BSR set to: 0
 25082                           ;ETHxxJ6x_driver.c: 1017: return cksm;
 25083  0157A8  C062  F025         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 25084  0157AC  C063  F026         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 25085  0157B0  0012               	return	
 25086  0157B2                     __end_of_ETH_TxComputeChecksum:
 25087                           	opt stack 0
 25088                           tosu	equ	0xFFF
 25089                           tosh	equ	0xFFE
 25090                           tosl	equ	0xFFD
 25091                           pclath	equ	0xFFA
 25092                           tblptru	equ	0xFF8
 25093                           tblptrh	equ	0xFF7
 25094                           tblptrl	equ	0xFF6
 25095                           tablat	equ	0xFF5
 25096                           prodh	equ	0xFF4
 25097                           prodl	equ	0xFF3
 25098                           intcon	equ	0xFF2
 25099                           indf0	equ	0xFEF
 25100                           postinc0	equ	0xFEE
 25101                           fsr0h	equ	0xFEA
 25102                           fsr0l	equ	0xFE9
 25103                           wreg	equ	0xFE8
 25104                           indf1	equ	0xFE7
 25105                           postinc1	equ	0xFE6
 25106                           postdec1	equ	0xFE5
 25107                           plusw1	equ	0xFE3
 25108                           fsr1h	equ	0xFE2
 25109                           fsr1l	equ	0xFE1
 25110                           indf2	equ	0xFDF
 25111                           postinc2	equ	0xFDE
 25112                           postdec2	equ	0xFDD
 25113                           plusw2	equ	0xFDB
 25114                           fsr2h	equ	0xFDA
 25115                           fsr2l	equ	0xFD9
 25116                           status	equ	0xFD8
 25117                           
 25118 ;; *************** function _ETH_ComputeChecksum *****************
 25119 ;; Defined at:
 25120 ;;		line 955 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25121 ;; Parameters:    Size  Location     Type
 25122 ;;  len             2   18[COMRAM] unsigned int 
 25123 ;;  seed            2   20[COMRAM] unsigned int 
 25124 ;; Auto vars:     Size  Location     Type
 25125 ;;  cksm            4   30[COMRAM] unsigned long 
 25126 ;;  v               2   34[COMRAM] unsigned int 
 25127 ;; Return value:  Size  Location     Type
 25128 ;;                  2   18[COMRAM] unsigned int 
 25129 ;; Registers used:
 25130 ;;		wreg, status,2, status,0, cstack
 25131 ;; Tracked objects:
 25132 ;;		On entry : 0/0
 25133 ;;		On exit  : 0/0
 25134 ;;		Unchanged: 0/0
 25135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25137 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25138 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25139 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25140 ;;Total ram usage:       18 bytes
 25141 ;; Hardware stack levels used:    1
 25142 ;; Hardware stack levels required when called:    5
 25143 ;; This function calls:
 25144 ;;		_ETH_EdataRead
 25145 ;; This function is called by:
 25146 ;;		_ETH_TxComputeChecksum
 25147 ;;		_ETH_RxComputeChecksum
 25148 ;; This function uses a non-reentrant model
 25149 ;;
 25150                           
 25151                           	psect	text100
 25152  014FFC                     __ptext100:
 25153                           	opt stack 0
 25154  014FFC                     _ETH_ComputeChecksum:
 25155                           	opt stack 19
 25156                           
 25157                           ;ETHxxJ6x_driver.c: 957: uint32_t cksm;
 25158                           ;ETHxxJ6x_driver.c: 958: uint16_t v;
 25159                           ;ETHxxJ6x_driver.c: 960: cksm = seed;
 25160                           
 25161                           ; BSR set to: 0
 25162                           ;incstack = 0
 25163  014FFC  C015  F01F         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
 25164  015000  C016  F020         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
 25165  015004  6A21               	clrf	ETH_ComputeChecksum@cksm+2,c
 25166  015006  6A22               	clrf	ETH_ComputeChecksum@cksm+3,c
 25167                           
 25168                           ;ETHxxJ6x_driver.c: 962: while(len > 1)
 25169  015008  D016               	goto	l701
 25170  01500A                     l9776:
 25171                           
 25172                           ;ETHxxJ6x_driver.c: 963: {
 25173                           ;ETHxxJ6x_driver.c: 964: v = 0;
 25174  01500A  0E00               	movlw	0
 25175  01500C  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 25176  01500E  0E00               	movlw	0
 25177  015010  6E23               	movwf	ETH_ComputeChecksum@v,c
 25178                           
 25179                           ;ETHxxJ6x_driver.c: 965: ((char *)&v)[1] = ETH_EdataRead();
 25180  015012  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 25181  015016  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 25182                           
 25183                           ;ETHxxJ6x_driver.c: 966: ((char *)&v)[0] = ETH_EdataRead();
 25184  015018  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 25185  01501C  6E23               	movwf	ETH_ComputeChecksum@v,c
 25186                           
 25187                           ;ETHxxJ6x_driver.c: 967: cksm += v;
 25188  01501E  5023               	movf	ETH_ComputeChecksum@v,w,c
 25189  015020  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 25190  015022  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 25191  015024  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 25192  015026  0E00               	movlw	0
 25193  015028  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 25194  01502A  0E00               	movlw	0
 25195  01502C  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 25196                           
 25197                           ;ETHxxJ6x_driver.c: 968: len -= 2;
 25198  01502E  0E02               	movlw	2
 25199  015030  5E13               	subwf	ETH_ComputeChecksum@len,f,c
 25200  015032  0E00               	movlw	0
 25201  015034  5A14               	subwfb	ETH_ComputeChecksum@len+1,f,c
 25202  015036                     l701:
 25203  015036  5014               	movf	ETH_ComputeChecksum@len+1,w,c
 25204  015038  E1E8               	bnz	l9776
 25205  01503A  0E02               	movlw	2
 25206  01503C  5C13               	subwf	ETH_ComputeChecksum@len,w,c
 25207  01503E  B0D8               	btfsc	status,0,c
 25208  015040  D7E4               	goto	l702
 25209                           
 25210                           ;ETHxxJ6x_driver.c: 969: }
 25211                           ;ETHxxJ6x_driver.c: 971: if(len)
 25212  015042  5013               	movf	ETH_ComputeChecksum@len,w,c
 25213  015044  1014               	iorwf	ETH_ComputeChecksum@len+1,w,c
 25214  015046  B4D8               	btfsc	status,2,c
 25215  015048  D03B               	goto	l705
 25216                           
 25217                           ;ETHxxJ6x_driver.c: 972: {
 25218                           ;ETHxxJ6x_driver.c: 973: v = 0;
 25219  01504A  0E00               	movlw	0
 25220  01504C  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 25221  01504E  0E00               	movlw	0
 25222  015050  6E23               	movwf	ETH_ComputeChecksum@v,c
 25223                           
 25224                           ;ETHxxJ6x_driver.c: 974: ((char *)&v)[1] = ETH_EdataRead();
 25225  015052  EC93  F0B5         	call	_ETH_EdataRead	;wreg free
 25226  015056  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 25227                           
 25228                           ;ETHxxJ6x_driver.c: 975: ((char *)&v)[0] = 0;
 25229  015058  0E00               	movlw	0
 25230  01505A  6E23               	movwf	ETH_ComputeChecksum@v,c
 25231                           
 25232                           ;ETHxxJ6x_driver.c: 976: cksm += v;
 25233  01505C  5023               	movf	ETH_ComputeChecksum@v,w,c
 25234  01505E  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 25235  015060  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 25236  015062  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 25237  015064  0E00               	movlw	0
 25238  015066  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 25239  015068  0E00               	movlw	0
 25240  01506A  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 25241                           
 25242                           ;ETHxxJ6x_driver.c: 977: }
 25243                           ;ETHxxJ6x_driver.c: 980: while(cksm >> 16)
 25244  01506C  D029               	goto	l705
 25245  01506E                     
 25246                           ;ETHxxJ6x_driver.c: 981: {
 25247                           ;ETHxxJ6x_driver.c: 982: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 25248  01506E  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 25249  015072  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 25250  015076  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 25251  01507A  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 25252  01507E  0E11               	movlw	17
 25253  015080  D005               	goto	u9160
 25254  015082                     u9165:
 25255  015082  90D8               	bcf	status,0,c
 25256  015084  321A               	rrcf	??_ETH_ComputeChecksum+3,f,c
 25257  015086  3219               	rrcf	??_ETH_ComputeChecksum+2,f,c
 25258  015088  3218               	rrcf	??_ETH_ComputeChecksum+1,f,c
 25259  01508A  3217               	rrcf	??_ETH_ComputeChecksum,f,c
 25260  01508C                     u9160:
 25261  01508C  2EE8               	decfsz	wreg,f,c
 25262  01508E  D7F9               	goto	u9165
 25263  015090  0EFF               	movlw	255
 25264  015092  141F               	andwf	ETH_ComputeChecksum@cksm,w,c
 25265  015094  6E1B               	movwf	(??_ETH_ComputeChecksum+4)& (0+255),c
 25266  015096  0EFF               	movlw	255
 25267  015098  1420               	andwf	ETH_ComputeChecksum@cksm+1,w,c
 25268  01509A  6E1C               	movwf	(??_ETH_ComputeChecksum+5)& (0+255),c
 25269  01509C  0E00               	movlw	0
 25270  01509E  1421               	andwf	ETH_ComputeChecksum@cksm+2,w,c
 25271  0150A0  6E1D               	movwf	(??_ETH_ComputeChecksum+6)& (0+255),c
 25272  0150A2  0E00               	movlw	0
 25273  0150A4  1422               	andwf	ETH_ComputeChecksum@cksm+3,w,c
 25274  0150A6  6E1E               	movwf	(??_ETH_ComputeChecksum+7)& (0+255),c
 25275  0150A8  5017               	movf	??_ETH_ComputeChecksum,w,c
 25276  0150AA  241B               	addwf	??_ETH_ComputeChecksum+4,w,c
 25277  0150AC  6E1F               	movwf	ETH_ComputeChecksum@cksm,c
 25278  0150AE  5018               	movf	??_ETH_ComputeChecksum+1,w,c
 25279  0150B0  201C               	addwfc	??_ETH_ComputeChecksum+5,w,c
 25280  0150B2  6E20               	movwf	ETH_ComputeChecksum@cksm+1,c
 25281  0150B4  5019               	movf	??_ETH_ComputeChecksum+2,w,c
 25282  0150B6  201D               	addwfc	??_ETH_ComputeChecksum+6,w,c
 25283  0150B8  6E21               	movwf	ETH_ComputeChecksum@cksm+2,c
 25284  0150BA  501A               	movf	??_ETH_ComputeChecksum+3,w,c
 25285  0150BC  201E               	addwfc	??_ETH_ComputeChecksum+7,w,c
 25286  0150BE  6E22               	movwf	ETH_ComputeChecksum@cksm+3,c
 25287  0150C0                     l705:
 25288  0150C0  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 25289  0150C4  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 25290  0150C8  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 25291  0150CC  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 25292  0150D0  0E11               	movlw	17
 25293  0150D2  D005               	goto	u9170
 25294  0150D4                     u9175:
 25295  0150D4  90D8               	bcf	status,0,c
 25296  0150D6  321A               	rrcf	??_ETH_ComputeChecksum+3,f,c
 25297  0150D8  3219               	rrcf	??_ETH_ComputeChecksum+2,f,c
 25298  0150DA  3218               	rrcf	??_ETH_ComputeChecksum+1,f,c
 25299  0150DC  3217               	rrcf	??_ETH_ComputeChecksum,f,c
 25300  0150DE                     u9170:
 25301  0150DE  2EE8               	decfsz	wreg,f,c
 25302  0150E0  D7F9               	goto	u9175
 25303  0150E2  5017               	movf	??_ETH_ComputeChecksum,w,c
 25304  0150E4  1018               	iorwf	??_ETH_ComputeChecksum+1,w,c
 25305  0150E6  1019               	iorwf	??_ETH_ComputeChecksum+2,w,c
 25306  0150E8  101A               	iorwf	??_ETH_ComputeChecksum+3,w,c
 25307  0150EA  A4D8               	btfss	status,2,c
 25308  0150EC  D7C0               	goto	l706
 25309                           
 25310                           ;ETHxxJ6x_driver.c: 983: }
 25311                           ;ETHxxJ6x_driver.c: 986: cksm = ~cksm;
 25312  0150EE  C01F  F017         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
 25313  0150F2  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
 25314  0150F6  C021  F019         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
 25315  0150FA  C022  F01A         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
 25316  0150FE  1E17               	comf	??_ETH_ComputeChecksum,f,c
 25317  015100  1E18               	comf	??_ETH_ComputeChecksum+1,f,c
 25318  015102  1E19               	comf	??_ETH_ComputeChecksum+2,f,c
 25319  015104  1E1A               	comf	??_ETH_ComputeChecksum+3,f,c
 25320  015106  C017  F01F         	movff	??_ETH_ComputeChecksum,ETH_ComputeChecksum@cksm
 25321  01510A  C018  F020         	movff	??_ETH_ComputeChecksum+1,ETH_ComputeChecksum@cksm+1
 25322  01510E  C019  F021         	movff	??_ETH_ComputeChecksum+2,ETH_ComputeChecksum@cksm+2
 25323  015112  C01A  F022         	movff	??_ETH_ComputeChecksum+3,ETH_ComputeChecksum@cksm+3
 25324                           
 25325                           ;ETHxxJ6x_driver.c: 989: return cksm;
 25326  015116  C01F  F013         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
 25327  01511A  C020  F014         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
 25328  01511E  0012               	return		;funcret
 25329  015120                     __end_of_ETH_ComputeChecksum:
 25330                           	opt stack 0
 25331                           tosu	equ	0xFFF
 25332                           tosh	equ	0xFFE
 25333                           tosl	equ	0xFFD
 25334                           pclath	equ	0xFFA
 25335                           tblptru	equ	0xFF8
 25336                           tblptrh	equ	0xFF7
 25337                           tblptrl	equ	0xFF6
 25338                           tablat	equ	0xFF5
 25339                           prodh	equ	0xFF4
 25340                           prodl	equ	0xFF3
 25341                           intcon	equ	0xFF2
 25342                           indf0	equ	0xFEF
 25343                           postinc0	equ	0xFEE
 25344                           fsr0h	equ	0xFEA
 25345                           fsr0l	equ	0xFE9
 25346                           wreg	equ	0xFE8
 25347                           indf1	equ	0xFE7
 25348                           postinc1	equ	0xFE6
 25349                           postdec1	equ	0xFE5
 25350                           plusw1	equ	0xFE3
 25351                           fsr1h	equ	0xFE2
 25352                           fsr1l	equ	0xFE1
 25353                           indf2	equ	0xFDF
 25354                           postinc2	equ	0xFDE
 25355                           postdec2	equ	0xFDD
 25356                           plusw2	equ	0xFDB
 25357                           fsr2h	equ	0xFDA
 25358                           fsr2l	equ	0xFD9
 25359                           status	equ	0xFD8
 25360                           
 25361 ;; *************** function _ETH_EdataRead *****************
 25362 ;; Defined at:
 25363 ;;		line 108 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25364 ;; Parameters:    Size  Location     Type
 25365 ;;		None
 25366 ;; Auto vars:     Size  Location     Type
 25367 ;;		None
 25368 ;; Return value:  Size  Location     Type
 25369 ;;                  1    wreg      unsigned char 
 25370 ;; Registers used:
 25371 ;;		wreg, status,2
 25372 ;; Tracked objects:
 25373 ;;		On entry : 0/0
 25374 ;;		On exit  : 0/0
 25375 ;;		Unchanged: 0/0
 25376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25381 ;;Total ram usage:        0 bytes
 25382 ;; Hardware stack levels used:    1
 25383 ;; Hardware stack levels required when called:    4
 25384 ;; This function calls:
 25385 ;;		Nothing
 25386 ;; This function is called by:
 25387 ;;		_ETH_NextPacketUpdate
 25388 ;;		_ETH_Read8
 25389 ;;		_ETH_Read16
 25390 ;;		_ETH_Read32
 25391 ;;		_ETH_ReadBlock
 25392 ;;		_ETH_ComputeChecksum
 25393 ;;		_ETH_Read24
 25394 ;; This function uses a non-reentrant model
 25395 ;;
 25396                           
 25397                           	psect	text101
 25398  016B26                     __ptext101:
 25399                           	opt stack 0
 25400  016B26                     _ETH_EdataRead:
 25401                           	opt stack 19
 25402                           
 25403                           ;incstack = 0
 25404  016B26  CF61 FE7E          	movff	3937,_errataTemp	;# 
 25405                           
 25406                           ;ETHxxJ6x_driver.c: 111: return (uint8_t) errataTemp;
 25407  016B2A  010E               	movlb	14	; () banked
 25408  016B2C  517E               	movf	126,w,b
 25409  016B2E  0012               	return	
 25410  016B30                     __end_of_ETH_EdataRead:
 25411                           	opt stack 0
 25412                           tosu	equ	0xFFF
 25413                           tosh	equ	0xFFE
 25414                           tosl	equ	0xFFD
 25415                           pclath	equ	0xFFA
 25416                           tblptru	equ	0xFF8
 25417                           tblptrh	equ	0xFF7
 25418                           tblptrl	equ	0xFF6
 25419                           tablat	equ	0xFF5
 25420                           prodh	equ	0xFF4
 25421                           prodl	equ	0xFF3
 25422                           intcon	equ	0xFF2
 25423                           indf0	equ	0xFEF
 25424                           postinc0	equ	0xFEE
 25425                           fsr0h	equ	0xFEA
 25426                           fsr0l	equ	0xFE9
 25427                           wreg	equ	0xFE8
 25428                           indf1	equ	0xFE7
 25429                           postinc1	equ	0xFE6
 25430                           postdec1	equ	0xFE5
 25431                           plusw1	equ	0xFE3
 25432                           fsr1h	equ	0xFE2
 25433                           fsr1l	equ	0xFE1
 25434                           indf2	equ	0xFDF
 25435                           postinc2	equ	0xFDE
 25436                           postdec2	equ	0xFDD
 25437                           plusw2	equ	0xFDB
 25438                           fsr2h	equ	0xFDA
 25439                           fsr2l	equ	0xFD9
 25440                           status	equ	0xFD8
 25441                           
 25442 ;; *************** function _ETH_Send *****************
 25443 ;; Defined at:
 25444 ;;		line 711 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25445 ;; Parameters:    Size  Location     Type
 25446 ;;		None
 25447 ;; Auto vars:     Size  Location     Type
 25448 ;;  packetEnd       2   26[COMRAM] unsigned int 
 25449 ;; Return value:  Size  Location     Type
 25450 ;;                  1    wreg      enum E476
 25451 ;; Registers used:
 25452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25453 ;; Tracked objects:
 25454 ;;		On entry : 0/0
 25455 ;;		On exit  : 0/0
 25456 ;;		Unchanged: 0/0
 25457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25462 ;;Total ram usage:        6 bytes
 25463 ;; Hardware stack levels used:    1
 25464 ;; Hardware stack levels required when called:    6
 25465 ;; This function calls:
 25466 ;;		_ETH_SendQueued
 25467 ;;		_putch
 25468 ;; This function is called by:
 25469 ;;		_ARPV4_Packet
 25470 ;;		_ARPV4_Request
 25471 ;;		_IPV4_Send
 25472 ;; This function uses a non-reentrant model
 25473 ;;
 25474                           
 25475                           	psect	text102
 25476  015910                     __ptext102:
 25477                           	opt stack 0
 25478  015910                     _ETH_Send:
 25479                           	opt stack 18
 25480                           
 25481                           ;ETHxxJ6x_driver.c: 713: uint16_t packetEnd = EWRPT - 1;
 25482                           
 25483                           ; BSR set to: 14
 25484                           ;incstack = 0
 25485  015910  0EFF               	movlw	255
 25486  015912  010E               	movlb	14	; () banked
 25487  015914  25E2               	addwf	226,w,b	;volatile
 25488  015916  6E1B               	movwf	ETH_Send@packetEnd,c
 25489  015918  0EFF               	movlw	255
 25490  01591A  21E3               	addwfc	227,w,b	;volatile
 25491  01591C  6E1C               	movwf	ETH_Send@packetEnd+1,c
 25492                           
 25493                           ; BSR set to: 14
 25494                           ;ETHxxJ6x_driver.c: 715: if( !ethData.up )
 25495  01591E  0102               	movlb	2	; () banked
 25496  015920  B524               	btfsc	_ethData& (0+255),2,b	;volatile
 25497  015922  D002               	goto	l626
 25498                           
 25499                           ; BSR set to: 2
 25500                           ;ETHxxJ6x_driver.c: 716: {
 25501                           ;ETHxxJ6x_driver.c: 717: return LINK_NOT_FOUND;
 25502  015924  0E02               	movlw	2
 25503                           
 25504                           ; BSR set to: 2
 25505  015926  0012               	return	
 25506  015928                     l626:
 25507                           
 25508                           ; BSR set to: 2
 25509                           ;ETHxxJ6x_driver.c: 718: }
 25510                           ;ETHxxJ6x_driver.c: 720: if( ethListSize == 0 )
 25511                           
 25512                           ; BSR set to: 2
 25513  015928  5046               	movf	_ethListSize,w,c
 25514  01592A  A4D8               	btfss	status,2,c
 25515  01592C  D002               	goto	l628
 25516                           
 25517                           ; BSR set to: 2
 25518                           ;ETHxxJ6x_driver.c: 721: {
 25519                           ;ETHxxJ6x_driver.c: 722: return BUFFER_BUSY;
 25520  01592E  0E03               	movlw	3
 25521                           
 25522                           ; BSR set to: 2
 25523  015930  0012               	return	
 25524  015932                     l628:
 25525                           
 25526                           ; BSR set to: 2
 25527                           
 25528                           ; BSR set to: 2
 25529                           
 25530                           ;ETHxxJ6x_driver.c: 723: }
 25531                           ;ETHxxJ6x_driver.c: 725: do{ pHead->flags = pHead->flags & (~(0x0001 << 0)); } while(0);
 25532                           
 25533                           ; BSR set to: 2
 25534  015932  0EFE               	movlw	254
 25535  015934  6E17               	movwf	??_ETH_Send& (0+255),c
 25536  015936  0EFF               	movlw	255
 25537  015938  6E18               	movwf	(??_ETH_Send+1)& (0+255),c
 25538  01593A  C043  FFD9         	movff	_pHead,fsr2l
 25539  01593E  C044  FFDA         	movff	_pHead+1,fsr2h
 25540  015942  CFDE F019          	movff	postinc2,??_ETH_Send+2
 25541  015946  CFDD F01A          	movff	postdec2,??_ETH_Send+3
 25542  01594A  5017               	movf	??_ETH_Send,w,c
 25543  01594C  1619               	andwf	??_ETH_Send+2,f,c
 25544  01594E  5018               	movf	??_ETH_Send+1,w,c
 25545  015950  161A               	andwf	??_ETH_Send+3,f,c
 25546  015952  C043  FFD9         	movff	_pHead,fsr2l
 25547  015956  C044  FFDA         	movff	_pHead+1,fsr2h
 25548  01595A  C019  FFDE         	movff	??_ETH_Send+2,postinc2
 25549  01595E  C01A  FFDD         	movff	??_ETH_Send+3,postdec2
 25550                           
 25551                           ; BSR set to: 2
 25552                           ;ETHxxJ6x_driver.c: 726: pHead->packetEnd = packetEnd;
 25553  015962  EE20 F004          	lfsr	2,4
 25554  015966  5043               	movf	_pHead,w,c
 25555  015968  26D9               	addwf	fsr2l,f,c
 25556  01596A  5044               	movf	_pHead+1,w,c
 25557  01596C  22DA               	addwfc	fsr2h,f,c
 25558  01596E  C01B  FFDE         	movff	ETH_Send@packetEnd,postinc2
 25559  015972  C01C  FFDD         	movff	ETH_Send@packetEnd+1,postdec2
 25560                           
 25561                           ; BSR set to: 2
 25562                           
 25563                           ;ETHxxJ6x_driver.c: 727: do{ pHead->flags = pHead->flags | (0x0001 << 1); } while(0);
 25564  015976  C043  FFD9         	movff	_pHead,fsr2l
 25565  01597A  C044  FFDA         	movff	_pHead+1,fsr2h
 25566  01597E  CFDE F017          	movff	postinc2,??_ETH_Send
 25567  015982  CFDD F018          	movff	postdec2,??_ETH_Send+1
 25568  015986  0E02               	movlw	2
 25569  015988  1217               	iorwf	??_ETH_Send,f,c
 25570  01598A  0E00               	movlw	0
 25571  01598C  1218               	iorwf	??_ETH_Send+1,f,c
 25572  01598E  C043  FFD9         	movff	_pHead,fsr2l
 25573  015992  C044  FFDA         	movff	_pHead+1,fsr2h
 25574  015996  C017  FFDE         	movff	??_ETH_Send,postinc2
 25575  01599A  C018  FFDD         	movff	??_ETH_Send+1,postdec2
 25576                           
 25577                           ; BSR set to: 2
 25578                           ;ETHxxJ6x_driver.c: 730: if( (ECON1bits.TXRTS) || (ethListSize > 1) )
 25579                           
 25580                           ; BSR set to: 2
 25581  01599E  B6D2               	btfsc	4050,3,c	;volatile
 25582  0159A0  D003               	goto	u9130
 25583                           
 25584                           ; BSR set to: 2
 25585  0159A2  0E01               	movlw	1
 25586  0159A4  6446               	cpfsgt	_ethListSize,c
 25587  0159A6  D005               	goto	l633
 25588  0159A8                     u9130:
 25589                           
 25590                           ; BSR set to: 2
 25591                           ;ETHxxJ6x_driver.c: 731: {
 25592                           ;ETHxxJ6x_driver.c: 732: putch('~');
 25593                           
 25594                           ; BSR set to: 2
 25595  0159A8  0E7E               	movlw	126
 25596  0159AA  ECAF  F0B5         	call	_putch
 25597                           
 25598                           ;ETHxxJ6x_driver.c: 733: return (0x0001 << 1);
 25599  0159AE  0E02               	movlw	2
 25600  0159B0  0012               	return	
 25601  0159B2                     l633:
 25602                           
 25603                           ;ETHxxJ6x_driver.c: 734: }
 25604                           ;ETHxxJ6x_driver.c: 736: return ETH_SendQueued();
 25605  0159B2  EC96  F0AE         	call	_ETH_SendQueued	;wreg free
 25606  0159B6  0012               	return	
 25607  0159B8                     __end_of_ETH_Send:
 25608                           	opt stack 0
 25609                           tosu	equ	0xFFF
 25610                           tosh	equ	0xFFE
 25611                           tosl	equ	0xFFD
 25612                           pclath	equ	0xFFA
 25613                           tblptru	equ	0xFF8
 25614                           tblptrh	equ	0xFF7
 25615                           tblptrl	equ	0xFF6
 25616                           tablat	equ	0xFF5
 25617                           prodh	equ	0xFF4
 25618                           prodl	equ	0xFF3
 25619                           intcon	equ	0xFF2
 25620                           indf0	equ	0xFEF
 25621                           postinc0	equ	0xFEE
 25622                           fsr0h	equ	0xFEA
 25623                           fsr0l	equ	0xFE9
 25624                           wreg	equ	0xFE8
 25625                           indf1	equ	0xFE7
 25626                           postinc1	equ	0xFE6
 25627                           postdec1	equ	0xFE5
 25628                           plusw1	equ	0xFE3
 25629                           fsr1h	equ	0xFE2
 25630                           fsr1l	equ	0xFE1
 25631                           indf2	equ	0xFDF
 25632                           postinc2	equ	0xFDE
 25633                           postdec2	equ	0xFDD
 25634                           plusw2	equ	0xFDB
 25635                           fsr2h	equ	0xFDA
 25636                           fsr2l	equ	0xFD9
 25637                           status	equ	0xFD8
 25638                           
 25639 ;; *************** function _ETH_SendQueued *****************
 25640 ;; Defined at:
 25641 ;;		line 744 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25642 ;; Parameters:    Size  Location     Type
 25643 ;;		None
 25644 ;; Auto vars:     Size  Location     Type
 25645 ;;		None
 25646 ;; Return value:  Size  Location     Type
 25647 ;;                  1    wreg      enum E4853
 25648 ;; Registers used:
 25649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25650 ;; Tracked objects:
 25651 ;;		On entry : 0/0
 25652 ;;		On exit  : 0/0
 25653 ;;		Unchanged: 0/0
 25654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25657 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25658 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25659 ;;Total ram usage:        4 bytes
 25660 ;; Hardware stack levels used:    1
 25661 ;; Hardware stack levels required when called:    5
 25662 ;; This function calls:
 25663 ;;		_putch
 25664 ;; This function is called by:
 25665 ;;		_ETH_EventHandler
 25666 ;;		_ETH_Send
 25667 ;; This function uses a non-reentrant model
 25668 ;;
 25669                           
 25670                           	psect	text103
 25671  015D2C                     __ptext103:
 25672                           	opt stack 0
 25673  015D2C                     _ETH_SendQueued:
 25674                           	opt stack 18
 25675                           
 25676                           ;ETHxxJ6x_driver.c: 746: if( pHead->flags & (0x0001 << 1) )
 25677                           
 25678                           ;incstack = 0
 25679  015D2C  C043  FFD9         	movff	_pHead,fsr2l
 25680  015D30  C044  FFDA         	movff	_pHead+1,fsr2h
 25681  015D34  CFDE F013          	movff	postinc2,??_ETH_SendQueued
 25682  015D38  CFDD F014          	movff	postdec2,??_ETH_SendQueued+1
 25683  015D3C  A213               	btfss	??_ETH_SendQueued,1,c
 25684  015D3E  D034               	goto	l638
 25685                           
 25686                           ;ETHxxJ6x_driver.c: 747: {
 25687                           ;ETHxxJ6x_driver.c: 749: do{ pHead->flags = pHead->flags & (~(0x0001 << 1)); } while(0);
 25688  015D40  0EFD               	movlw	253
 25689  015D42  6E13               	movwf	??_ETH_SendQueued& (0+255),c
 25690  015D44  0EFF               	movlw	255
 25691  015D46  6E14               	movwf	(??_ETH_SendQueued+1)& (0+255),c
 25692  015D48  C043  FFD9         	movff	_pHead,fsr2l
 25693  015D4C  C044  FFDA         	movff	_pHead+1,fsr2h
 25694  015D50  CFDE F015          	movff	postinc2,??_ETH_SendQueued+2
 25695  015D54  CFDD F016          	movff	postdec2,??_ETH_SendQueued+3
 25696  015D58  5013               	movf	??_ETH_SendQueued,w,c
 25697  015D5A  1615               	andwf	??_ETH_SendQueued+2,f,c
 25698  015D5C  5014               	movf	??_ETH_SendQueued+1,w,c
 25699  015D5E  1616               	andwf	??_ETH_SendQueued+3,f,c
 25700  015D60  C043  FFD9         	movff	_pHead,fsr2l
 25701  015D64  C044  FFDA         	movff	_pHead+1,fsr2h
 25702  015D68  C015  FFDE         	movff	??_ETH_SendQueued+2,postinc2
 25703  015D6C  C016  FFDD         	movff	??_ETH_SendQueued+3,postdec2
 25704                           
 25705                           ;ETHxxJ6x_driver.c: 752: ETXST = pTail->packetStart;
 25706  015D70  EE20 F002          	lfsr	2,2
 25707  015D74  5041               	movf	_pTail,w,c
 25708  015D76  26D9               	addwf	fsr2l,f,c
 25709  015D78  5042               	movf	_pTail+1,w,c
 25710  015D7A  22DA               	addwfc	fsr2h,f,c
 25711  015D7C  CFDE FEE4          	movff	postinc2,3812	;volatile
 25712  015D80  CFDD FEE5          	movff	postdec2,3813	;volatile
 25713                           
 25714                           ;ETHxxJ6x_driver.c: 753: ETXND = pTail->packetEnd;
 25715  015D84  EE20 F004          	lfsr	2,4
 25716  015D88  5041               	movf	_pTail,w,c
 25717  015D8A  26D9               	addwf	fsr2l,f,c
 25718  015D8C  5042               	movf	_pTail+1,w,c
 25719  015D8E  22DA               	addwfc	fsr2h,f,c
 25720  015D90  CFDE FEE6          	movff	postinc2,3814	;volatile
 25721  015D94  CFDD FEE7          	movff	postdec2,3815	;volatile
 25722                           
 25723                           ;ETHxxJ6x_driver.c: 755: __nop(); __nop();
 25724  015D98  F000               	nop	
 25725  015D9A  F000               	nop	
 25726                           
 25727                           ;ETHxxJ6x_driver.c: 756: ECON1bits.TXRTS = 1;
 25728  015D9C  86D2               	bsf	4050,3,c	;volatile
 25729                           
 25730                           ;ETHxxJ6x_driver.c: 758: putch('-');
 25731  015D9E  0E2D               	movlw	45
 25732  015DA0  ECAF  F0B5         	call	_putch
 25733                           
 25734                           ;ETHxxJ6x_driver.c: 759: return SUCCESS;
 25735  015DA4  0E01               	movlw	1
 25736                           
 25737                           ;ETHxxJ6x_driver.c: 760: }
 25738  015DA6  0012               	return	
 25739  015DA8                     l638:
 25740                           
 25741                           ;ETHxxJ6x_driver.c: 761: else
 25742                           ;ETHxxJ6x_driver.c: 762: {
 25743                           ;ETHxxJ6x_driver.c: 763: return BUFFER_BUSY;
 25744  015DA8  0E03               	movlw	3
 25745  015DAA  0012               	return	
 25746  015DAC                     __end_of_ETH_SendQueued:
 25747                           	opt stack 0
 25748                           tosu	equ	0xFFF
 25749                           tosh	equ	0xFFE
 25750                           tosl	equ	0xFFD
 25751                           pclath	equ	0xFFA
 25752                           tblptru	equ	0xFF8
 25753                           tblptrh	equ	0xFF7
 25754                           tblptrl	equ	0xFF6
 25755                           tablat	equ	0xFF5
 25756                           prodh	equ	0xFF4
 25757                           prodl	equ	0xFF3
 25758                           intcon	equ	0xFF2
 25759                           indf0	equ	0xFEF
 25760                           postinc0	equ	0xFEE
 25761                           fsr0h	equ	0xFEA
 25762                           fsr0l	equ	0xFE9
 25763                           wreg	equ	0xFE8
 25764                           indf1	equ	0xFE7
 25765                           postinc1	equ	0xFE6
 25766                           postdec1	equ	0xFE5
 25767                           plusw1	equ	0xFE3
 25768                           fsr1h	equ	0xFE2
 25769                           fsr1l	equ	0xFE1
 25770                           indf2	equ	0xFDF
 25771                           postinc2	equ	0xFDE
 25772                           postdec2	equ	0xFDD
 25773                           plusw2	equ	0xFDB
 25774                           fsr2h	equ	0xFDA
 25775                           fsr2l	equ	0xFD9
 25776                           status	equ	0xFD8
 25777                           
 25778 ;; *************** function _putch *****************
 25779 ;; Defined at:
 25780 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\putch.c"
 25781 ;; Parameters:    Size  Location     Type
 25782 ;;  c               1    wreg     unsigned char 
 25783 ;; Auto vars:     Size  Location     Type
 25784 ;;  c               1    0[COMRAM] unsigned char 
 25785 ;; Return value:  Size  Location     Type
 25786 ;;                  1    wreg      void 
 25787 ;; Registers used:
 25788 ;;		wreg
 25789 ;; Tracked objects:
 25790 ;;		On entry : 0/0
 25791 ;;		On exit  : 0/0
 25792 ;;		Unchanged: 0/0
 25793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25798 ;;Total ram usage:        0 bytes
 25799 ;; Hardware stack levels used:    1
 25800 ;; Hardware stack levels required when called:    4
 25801 ;; This function calls:
 25802 ;;		Nothing
 25803 ;; This function is called by:
 25804 ;;		_ETH_WriteStart
 25805 ;;		_ETH_Send
 25806 ;;		_ETH_SendQueued
 25807 ;;		_printf
 25808 ;;		_udp_test
 25809 ;;		__doprnt
 25810 ;; This function uses a non-reentrant model
 25811 ;;
 25812                           
 25813                           	psect	text104
 25814  016B5E                     __ptext104:
 25815                           	opt stack 0
 25816  016B5E                     _putch:
 25817                           	opt stack 21
 25818                           
 25819                           ;incstack = 0
 25820  016B5E  0012               	return		;funcret
 25821  016B60                     __end_of_putch:
 25822                           	opt stack 0
 25823                           tosu	equ	0xFFF
 25824                           tosh	equ	0xFFE
 25825                           tosl	equ	0xFFD
 25826                           pclath	equ	0xFFA
 25827                           tblptru	equ	0xFF8
 25828                           tblptrh	equ	0xFF7
 25829                           tblptrl	equ	0xFF6
 25830                           tablat	equ	0xFF5
 25831                           prodh	equ	0xFF4
 25832                           prodl	equ	0xFF3
 25833                           intcon	equ	0xFF2
 25834                           indf0	equ	0xFEF
 25835                           postinc0	equ	0xFEE
 25836                           fsr0h	equ	0xFEA
 25837                           fsr0l	equ	0xFE9
 25838                           wreg	equ	0xFE8
 25839                           indf1	equ	0xFE7
 25840                           postinc1	equ	0xFE6
 25841                           postdec1	equ	0xFE5
 25842                           plusw1	equ	0xFE3
 25843                           fsr1h	equ	0xFE2
 25844                           fsr1l	equ	0xFE1
 25845                           indf2	equ	0xFDF
 25846                           postinc2	equ	0xFDE
 25847                           postdec2	equ	0xFDD
 25848                           plusw2	equ	0xFDB
 25849                           fsr2h	equ	0xFDA
 25850                           fsr2l	equ	0xFD9
 25851                           status	equ	0xFD8
 25852                           
 25853 ;; *************** function _ETH_Insert *****************
 25854 ;; Defined at:
 25855 ;;		line 774 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25856 ;; Parameters:    Size  Location     Type
 25857 ;;  data            2   18[COMRAM] PTR unsigned char 
 25858 ;;		 -> TCP_Snd@cksm(2), UDP_Send@cksm(2), UDP_Send@udpLength(2), ICMP_PortUnreachable@cksm(2), 
 25859 ;;		 -> ICMP_EchoReply@cksm(2), IPV4_Send@cksm(2), IPV4_Send@totalLength(2), 
 25860 ;;  len             2   20[COMRAM] unsigned int 
 25861 ;;  offset          2   22[COMRAM] unsigned int 
 25862 ;; Auto vars:     Size  Location     Type
 25863 ;;  current_tx_p    2   26[COMRAM] unsigned int 
 25864 ;; Return value:  Size  Location     Type
 25865 ;;                  1    wreg      void 
 25866 ;; Registers used:
 25867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25868 ;; Tracked objects:
 25869 ;;		On entry : 0/0
 25870 ;;		On exit  : 0/0
 25871 ;;		Unchanged: 0/0
 25872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25873 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25876 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25877 ;;Total ram usage:       10 bytes
 25878 ;; Hardware stack levels used:    1
 25879 ;; Hardware stack levels required when called:    5
 25880 ;; This function calls:
 25881 ;;		_ETH_EdataWrite
 25882 ;; This function is called by:
 25883 ;;		_IPV4_Send
 25884 ;;		_ICMP_EchoReply
 25885 ;;		_ICMP_PortUnreachable
 25886 ;;		_UDP_Send
 25887 ;;		_TCP_Snd
 25888 ;; This function uses a non-reentrant model
 25889 ;;
 25890                           
 25891                           	psect	text105
 25892  015FE8                     __ptext105:
 25893                           	opt stack 0
 25894  015FE8                     _ETH_Insert:
 25895                           	opt stack 20
 25896                           
 25897                           ;ETHxxJ6x_driver.c: 776: uint16_t current_tx_ptr = EWRPT;
 25898                           
 25899                           ;incstack = 0
 25900  015FE8  CEE2 F01B          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
 25901  015FEC  CEE3 F01C          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
 25902                           
 25903                           ;ETHxxJ6x_driver.c: 777: EWRPT = pHead->packetStart + offset + 1;
 25904  015FF0  EE20 F002          	lfsr	2,2
 25905  015FF4  5043               	movf	_pHead,w,c
 25906  015FF6  26D9               	addwf	fsr2l,f,c
 25907  015FF8  5044               	movf	_pHead+1,w,c
 25908  015FFA  22DA               	addwfc	fsr2h,f,c
 25909  015FFC  CFDE F019          	movff	postinc2,??_ETH_Insert
 25910  016000  CFDD F01A          	movff	postdec2,??_ETH_Insert+1
 25911  016004  5017               	movf	ETH_Insert@offset,w,c
 25912  016006  2619               	addwf	??_ETH_Insert,f,c
 25913  016008  5018               	movf	ETH_Insert@offset+1,w,c
 25914  01600A  221A               	addwfc	??_ETH_Insert+1,f,c
 25915  01600C  0E01               	movlw	1
 25916  01600E  2419               	addwf	??_ETH_Insert,w,c
 25917  016010  010E               	movlb	14	; () banked
 25918  016012  6FE2               	movwf	226,b	;volatile
 25919  016014  0E00               	movlw	0
 25920  016016  201A               	addwfc	??_ETH_Insert+1,w,c
 25921  016018  6FE3               	movwf	227,b	;volatile
 25922                           
 25923                           ;ETHxxJ6x_driver.c: 778: while(len--)
 25924  01601A  D009               	goto	l645
 25925  01601C                     l9870:
 25926                           
 25927                           ;ETHxxJ6x_driver.c: 779: {
 25928                           ;ETHxxJ6x_driver.c: 780: ETH_EdataWrite(*data++);
 25929  01601C  C013  FFD9         	movff	ETH_Insert@data,fsr2l
 25930  016020  C014  FFDA         	movff	ETH_Insert@data+1,fsr2h
 25931  016024  50DF               	movf	indf2,w,c
 25932  016026  ECA8  F0B5         	call	_ETH_EdataWrite
 25933  01602A  4A13               	infsnz	ETH_Insert@data,f,c
 25934  01602C  2A14               	incf	ETH_Insert@data+1,f,c
 25935  01602E                     l645:
 25936  01602E  0615               	decf	ETH_Insert@len,f,c
 25937  016030  A0D8               	btfss	status,0,c
 25938  016032  0616               	decf	ETH_Insert@len+1,f,c
 25939  016034  2815               	incf	ETH_Insert@len,w,c
 25940  016036  E1F2               	bnz	l9870
 25941  016038  2816               	incf	ETH_Insert@len+1,w,c
 25942  01603A  A4D8               	btfss	status,2,c
 25943  01603C  D7EF               	goto	l646
 25944                           
 25945                           ;ETHxxJ6x_driver.c: 781: }
 25946                           ;ETHxxJ6x_driver.c: 782: EWRPT = current_tx_ptr;
 25947  01603E  C01B  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
 25948  016042  C01C  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
 25949  016046  0012               	return		;funcret
 25950  016048                     __end_of_ETH_Insert:
 25951                           	opt stack 0
 25952                           tosu	equ	0xFFF
 25953                           tosh	equ	0xFFE
 25954                           tosl	equ	0xFFD
 25955                           pclath	equ	0xFFA
 25956                           tblptru	equ	0xFF8
 25957                           tblptrh	equ	0xFF7
 25958                           tblptrl	equ	0xFF6
 25959                           tablat	equ	0xFF5
 25960                           prodh	equ	0xFF4
 25961                           prodl	equ	0xFF3
 25962                           intcon	equ	0xFF2
 25963                           indf0	equ	0xFEF
 25964                           postinc0	equ	0xFEE
 25965                           fsr0h	equ	0xFEA
 25966                           fsr0l	equ	0xFE9
 25967                           wreg	equ	0xFE8
 25968                           indf1	equ	0xFE7
 25969                           postinc1	equ	0xFE6
 25970                           postdec1	equ	0xFE5
 25971                           plusw1	equ	0xFE3
 25972                           fsr1h	equ	0xFE2
 25973                           fsr1l	equ	0xFE1
 25974                           indf2	equ	0xFDF
 25975                           postinc2	equ	0xFDE
 25976                           postdec2	equ	0xFDD
 25977                           plusw2	equ	0xFDB
 25978                           fsr2h	equ	0xFDA
 25979                           fsr2l	equ	0xFD9
 25980                           status	equ	0xFD8
 25981                           
 25982 ;; *************** function _ETH_GetByteCount *****************
 25983 ;; Defined at:
 25984 ;;		line 1126 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25985 ;; Parameters:    Size  Location     Type
 25986 ;;		None
 25987 ;; Auto vars:     Size  Location     Type
 25988 ;;		None
 25989 ;; Return value:  Size  Location     Type
 25990 ;;                  2   18[COMRAM] unsigned int 
 25991 ;; Registers used:
 25992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25993 ;; Tracked objects:
 25994 ;;		On entry : 0/0
 25995 ;;		On exit  : 0/0
 25996 ;;		Unchanged: 0/0
 25997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26001 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26002 ;;Total ram usage:        4 bytes
 26003 ;; Hardware stack levels used:    1
 26004 ;; Hardware stack levels required when called:    4
 26005 ;; This function calls:
 26006 ;;		Nothing
 26007 ;; This function is called by:
 26008 ;;		_UDP_Send
 26009 ;; This function uses a non-reentrant model
 26010 ;;
 26011                           
 26012                           	psect	text106
 26013  016908                     __ptext106:
 26014                           	opt stack 0
 26015  016908                     _ETH_GetByteCount:
 26016                           	opt stack 18
 26017                           
 26018                           ;ETHxxJ6x_driver.c: 1128: return (EWRPT - ethData.saveWRPT);
 26019                           
 26020                           ;incstack = 0
 26021  016908  EE22  F028         	lfsr	2,_ethData+4	;volatile
 26022  01690C  CFDE F015          	movff	postinc2,??_ETH_GetByteCount
 26023  016910  CFDD F016          	movff	postdec2,??_ETH_GetByteCount+1
 26024  016914  1E15               	comf	??_ETH_GetByteCount,f,c
 26025  016916  1E16               	comf	??_ETH_GetByteCount+1,f,c
 26026  016918  4A15               	infsnz	??_ETH_GetByteCount,f,c
 26027  01691A  2A16               	incf	??_ETH_GetByteCount+1,f,c
 26028  01691C  010E               	movlb	14	; () banked
 26029  01691E  51E2               	movf	226,w,b	;volatile
 26030  016920  2415               	addwf	??_ETH_GetByteCount,w,c
 26031  016922  6E13               	movwf	?_ETH_GetByteCount,c
 26032  016924  51E3               	movf	227,w,b	;volatile
 26033  016926  2016               	addwfc	??_ETH_GetByteCount+1,w,c
 26034  016928  6E14               	movwf	?_ETH_GetByteCount+1,c
 26035  01692A  0012               	return	
 26036  01692C                     __end_of_ETH_GetByteCount:
 26037                           	opt stack 0
 26038                           tosu	equ	0xFFF
 26039                           tosh	equ	0xFFE
 26040                           tosl	equ	0xFFD
 26041                           pclath	equ	0xFFA
 26042                           tblptru	equ	0xFF8
 26043                           tblptrh	equ	0xFF7
 26044                           tblptrl	equ	0xFF6
 26045                           tablat	equ	0xFF5
 26046                           prodh	equ	0xFF4
 26047                           prodl	equ	0xFF3
 26048                           intcon	equ	0xFF2
 26049                           indf0	equ	0xFEF
 26050                           postinc0	equ	0xFEE
 26051                           fsr0h	equ	0xFEA
 26052                           fsr0l	equ	0xFE9
 26053                           wreg	equ	0xFE8
 26054                           indf1	equ	0xFE7
 26055                           postinc1	equ	0xFE6
 26056                           postdec1	equ	0xFE5
 26057                           plusw1	equ	0xFE3
 26058                           fsr1h	equ	0xFE2
 26059                           fsr1l	equ	0xFE1
 26060                           indf2	equ	0xFDF
 26061                           postinc2	equ	0xFDE
 26062                           postdec2	equ	0xFDD
 26063                           plusw2	equ	0xFDB
 26064                           fsr2h	equ	0xFDA
 26065                           fsr2l	equ	0xFD9
 26066                           status	equ	0xFD8
 26067                           
 26068 ;; *************** function _ETH_WriteString *****************
 26069 ;; Defined at:
 26070 ;;		line 578 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26071 ;; Parameters:    Size  Location     Type
 26072 ;;  string          2   18[COMRAM] PTR const unsigned char 
 26073 ;;		 -> dhcpName(13), 
 26074 ;; Auto vars:     Size  Location     Type
 26075 ;;  length          2   20[COMRAM] unsigned int 
 26076 ;; Return value:  Size  Location     Type
 26077 ;;                  2   18[COMRAM] unsigned int 
 26078 ;; Registers used:
 26079 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26080 ;; Tracked objects:
 26081 ;;		On entry : 0/0
 26082 ;;		On exit  : 0/0
 26083 ;;		Unchanged: 0/0
 26084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26089 ;;Total ram usage:        4 bytes
 26090 ;; Hardware stack levels used:    1
 26091 ;; Hardware stack levels required when called:    5
 26092 ;; This function calls:
 26093 ;;		_ETH_EdataWrite
 26094 ;; This function is called by:
 26095 ;;		_sendRequest
 26096 ;; This function uses a non-reentrant model
 26097 ;;
 26098                           
 26099                           	psect	text107
 26100  0163A6                     __ptext107:
 26101                           	opt stack 0
 26102  0163A6                     _ETH_WriteString:
 26103                           	opt stack 18
 26104                           
 26105                           ;ETHxxJ6x_driver.c: 580: uint16_t length = 0;
 26106                           
 26107                           ; BSR set to: 14
 26108                           ;incstack = 0
 26109  0163A6  0E00               	movlw	0
 26110  0163A8  6E16               	movwf	ETH_WriteString@length+1,c
 26111  0163AA  0E00               	movlw	0
 26112  0163AC  6E15               	movwf	ETH_WriteString@length,c
 26113                           
 26114                           ;ETHxxJ6x_driver.c: 581: while(*string && (EWRPT < ((8192)-1)))
 26115  0163AE  D00E               	goto	l592
 26116  0163B0                     
 26117                           ;ETHxxJ6x_driver.c: 582: {
 26118                           ;ETHxxJ6x_driver.c: 583: ETH_EdataWrite(*string++);
 26119  0163B0  C013  FFF6         	movff	ETH_WriteString@string,tblptrl
 26120  0163B4  C014  FFF7         	movff	ETH_WriteString@string+1,tblptrh
 26121  0163B8                     	if	0	;tblptru may be non-zero
 26122  0163B8                     	endif
 26123  0163B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26124  0163B8  0E00               	movlw	low (__mediumconst shr (0+16))
 26125  0163BA  6EF8               	movwf	tblptru,c
 26126  0163BC                     	endif
 26127  0163BC  0008               	tblrd		*
 26128  0163BE  50F5               	movf	tablat,w,c
 26129  0163C0  ECA8  F0B5         	call	_ETH_EdataWrite
 26130  0163C4  4A13               	infsnz	ETH_WriteString@string,f,c
 26131  0163C6  2A14               	incf	ETH_WriteString@string+1,f,c
 26132                           
 26133                           ;ETHxxJ6x_driver.c: 584: length ++;
 26134  0163C8  4A15               	infsnz	ETH_WriteString@length,f,c
 26135  0163CA  2A16               	incf	ETH_WriteString@length+1,f,c
 26136  0163CC                     l592:
 26137  0163CC  C013  FFF6         	movff	ETH_WriteString@string,tblptrl
 26138  0163D0  C014  FFF7         	movff	ETH_WriteString@string+1,tblptrh
 26139  0163D4                     	if	0	;tblptru may be non-zero
 26140  0163D4                     	endif
 26141  0163D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26142  0163D4  0E00               	movlw	low (__mediumconst shr (0+16))
 26143  0163D6  6EF8               	movwf	tblptru,c
 26144  0163D8                     	endif
 26145  0163D8  0008               	tblrd		*
 26146  0163DA  50F5               	movf	tablat,w,c
 26147  0163DC  0900               	iorlw	0
 26148  0163DE  B4D8               	btfsc	status,2,c
 26149  0163E0  0012               	return	
 26150  0163E2  010E               	movlb	14	; () banked
 26151  0163E4  29E2               	incf	226,w,b	;volatile
 26152  0163E6  0E1F               	movlw	31
 26153  0163E8  59E3               	subwfb	227,w,b	;volatile
 26154  0163EA  B0D8               	btfsc	status,0,c
 26155  0163EC  0012               	return	
 26156  0163EE  D7E0               	goto	l593
 26157  0163F0                     __end_of_ETH_WriteString:
 26158                           	opt stack 0
 26159                           tosu	equ	0xFFF
 26160                           tosh	equ	0xFFE
 26161                           tosl	equ	0xFFD
 26162                           pclath	equ	0xFFA
 26163                           tblptru	equ	0xFF8
 26164                           tblptrh	equ	0xFF7
 26165                           tblptrl	equ	0xFF6
 26166                           tablat	equ	0xFF5
 26167                           prodh	equ	0xFF4
 26168                           prodl	equ	0xFF3
 26169                           intcon	equ	0xFF2
 26170                           indf0	equ	0xFEF
 26171                           postinc0	equ	0xFEE
 26172                           fsr0h	equ	0xFEA
 26173                           fsr0l	equ	0xFE9
 26174                           wreg	equ	0xFE8
 26175                           indf1	equ	0xFE7
 26176                           postinc1	equ	0xFE6
 26177                           postdec1	equ	0xFE5
 26178                           plusw1	equ	0xFE3
 26179                           fsr1h	equ	0xFE2
 26180                           fsr1l	equ	0xFE1
 26181                           indf2	equ	0xFDF
 26182                           postinc2	equ	0xFDE
 26183                           postdec2	equ	0xFDD
 26184                           plusw2	equ	0xFDB
 26185                           fsr2h	equ	0xFDA
 26186                           fsr2l	equ	0xFD9
 26187                           status	equ	0xFD8
 26188                           
 26189 ;; *************** function _DHCP_WriteZeros *****************
 26190 ;; Defined at:
 26191 ;;		line 483 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 26192 ;; Parameters:    Size  Location     Type
 26193 ;;  length          2   19[COMRAM] unsigned int 
 26194 ;; Auto vars:     Size  Location     Type
 26195 ;;		None
 26196 ;; Return value:  Size  Location     Type
 26197 ;;                  1    wreg      void 
 26198 ;; Registers used:
 26199 ;;		wreg, status,2, status,0, cstack
 26200 ;; Tracked objects:
 26201 ;;		On entry : 0/0
 26202 ;;		On exit  : 0/0
 26203 ;;		Unchanged: 0/0
 26204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26209 ;;Total ram usage:        2 bytes
 26210 ;; Hardware stack levels used:    1
 26211 ;; Hardware stack levels required when called:    6
 26212 ;; This function calls:
 26213 ;;		_ETH_Write8
 26214 ;; This function is called by:
 26215 ;;		_sendRequest
 26216 ;; This function uses a non-reentrant model
 26217 ;;
 26218                           
 26219                           	psect	text108
 26220  0169E6                     __ptext108:
 26221                           	opt stack 0
 26222  0169E6                     _DHCP_WriteZeros:
 26223                           	opt stack 17
 26224                           
 26225                           ;dhcp_client.c: 485: while(length--)
 26226                           
 26227                           ;incstack = 0
 26228  0169E6  D003               	goto	l1432
 26229  0169E8                     l10012:
 26230                           
 26231                           ;dhcp_client.c: 486: {
 26232                           ;dhcp_client.c: 487: ETH_Write8(0);
 26233  0169E8  0E00               	movlw	0
 26234  0169EA  EC98  F0B5         	call	_ETH_Write8
 26235  0169EE                     l1432:
 26236  0169EE  0614               	decf	DHCP_WriteZeros@length,f,c
 26237  0169F0  A0D8               	btfss	status,0,c
 26238  0169F2  0615               	decf	DHCP_WriteZeros@length+1,f,c
 26239  0169F4  2814               	incf	DHCP_WriteZeros@length,w,c
 26240  0169F6  E1F8               	bnz	l10012
 26241  0169F8  2815               	incf	DHCP_WriteZeros@length+1,w,c
 26242  0169FA  B4D8               	btfsc	status,2,c
 26243  0169FC  0012               	return	
 26244  0169FE  D7F4               	goto	l1433
 26245  016A00                     __end_of_DHCP_WriteZeros:
 26246                           	opt stack 0
 26247                           tosu	equ	0xFFF
 26248                           tosh	equ	0xFFE
 26249                           tosl	equ	0xFFD
 26250                           pclath	equ	0xFFA
 26251                           tblptru	equ	0xFF8
 26252                           tblptrh	equ	0xFF7
 26253                           tblptrl	equ	0xFF6
 26254                           tablat	equ	0xFF5
 26255                           prodh	equ	0xFF4
 26256                           prodl	equ	0xFF3
 26257                           intcon	equ	0xFF2
 26258                           indf0	equ	0xFEF
 26259                           postinc0	equ	0xFEE
 26260                           fsr0h	equ	0xFEA
 26261                           fsr0l	equ	0xFE9
 26262                           wreg	equ	0xFE8
 26263                           indf1	equ	0xFE7
 26264                           postinc1	equ	0xFE6
 26265                           postdec1	equ	0xFE5
 26266                           plusw1	equ	0xFE3
 26267                           fsr1h	equ	0xFE2
 26268                           fsr1l	equ	0xFE1
 26269                           indf2	equ	0xFDF
 26270                           postinc2	equ	0xFDE
 26271                           postdec2	equ	0xFDD
 26272                           plusw2	equ	0xFDB
 26273                           fsr2h	equ	0xFDA
 26274                           fsr2l	equ	0xFD9
 26275                           status	equ	0xFD8
 26276                           
 26277 ;; *************** function _ETH_Write8 *****************
 26278 ;; Defined at:
 26279 ;;		line 540 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26280 ;; Parameters:    Size  Location     Type
 26281 ;;  data            1    wreg     unsigned char 
 26282 ;; Auto vars:     Size  Location     Type
 26283 ;;  data            1   18[COMRAM] unsigned char 
 26284 ;; Return value:  Size  Location     Type
 26285 ;;                  1    wreg      void 
 26286 ;; Registers used:
 26287 ;;		wreg, status,2, cstack
 26288 ;; Tracked objects:
 26289 ;;		On entry : 0/0
 26290 ;;		On exit  : 0/0
 26291 ;;		Unchanged: 0/0
 26292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26297 ;;Total ram usage:        1 bytes
 26298 ;; Hardware stack levels used:    1
 26299 ;; Hardware stack levels required when called:    5
 26300 ;; This function calls:
 26301 ;;		_ETH_EdataWrite
 26302 ;; This function is called by:
 26303 ;;		_IPv4_Start
 26304 ;;		_sendRequest
 26305 ;;		_DHCP_WriteZeros
 26306 ;;		_DNS_Query
 26307 ;;		_NTP_Request
 26308 ;; This function uses a non-reentrant model
 26309 ;;
 26310                           
 26311                           	psect	text109
 26312  016B30                     __ptext109:
 26313                           	opt stack 0
 26314  016B30                     _ETH_Write8:
 26315                           	opt stack 20
 26316                           
 26317                           ;incstack = 0
 26318                           ;ETH_Write8@data stored from wreg
 26319  016B30  6E13               	movwf	ETH_Write8@data,c
 26320                           
 26321                           ;ETHxxJ6x_driver.c: 542: ETH_EdataWrite(data);
 26322  016B32  5013               	movf	ETH_Write8@data,w,c
 26323  016B34  ECA8  F0B5         	call	_ETH_EdataWrite
 26324  016B38  0012               	return		;funcret
 26325  016B3A                     __end_of_ETH_Write8:
 26326                           	opt stack 0
 26327                           tosu	equ	0xFFF
 26328                           tosh	equ	0xFFE
 26329                           tosl	equ	0xFFD
 26330                           pclath	equ	0xFFA
 26331                           tblptru	equ	0xFF8
 26332                           tblptrh	equ	0xFF7
 26333                           tblptrl	equ	0xFF6
 26334                           tablat	equ	0xFF5
 26335                           prodh	equ	0xFF4
 26336                           prodl	equ	0xFF3
 26337                           intcon	equ	0xFF2
 26338                           indf0	equ	0xFEF
 26339                           postinc0	equ	0xFEE
 26340                           fsr0h	equ	0xFEA
 26341                           fsr0l	equ	0xFE9
 26342                           wreg	equ	0xFE8
 26343                           indf1	equ	0xFE7
 26344                           postinc1	equ	0xFE6
 26345                           postdec1	equ	0xFE5
 26346                           plusw1	equ	0xFE3
 26347                           fsr1h	equ	0xFE2
 26348                           fsr1l	equ	0xFE1
 26349                           indf2	equ	0xFDF
 26350                           postinc2	equ	0xFDE
 26351                           postdec2	equ	0xFDD
 26352                           plusw2	equ	0xFDB
 26353                           fsr2h	equ	0xFDA
 26354                           fsr2l	equ	0xFD9
 26355                           status	equ	0xFD8
 26356                           
 26357 ;; *************** function _ETH_EdataWrite *****************
 26358 ;; Defined at:
 26359 ;;		line 114 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26360 ;; Parameters:    Size  Location     Type
 26361 ;;  d               1    wreg     unsigned char 
 26362 ;; Auto vars:     Size  Location     Type
 26363 ;;  d               1    0[COMRAM] unsigned char 
 26364 ;; Return value:  Size  Location     Type
 26365 ;;                  1    wreg      void 
 26366 ;; Registers used:
 26367 ;;		wreg
 26368 ;; Tracked objects:
 26369 ;;		On entry : 0/0
 26370 ;;		On exit  : 0/0
 26371 ;;		Unchanged: 0/0
 26372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26377 ;;Total ram usage:        0 bytes
 26378 ;; Hardware stack levels used:    1
 26379 ;; Hardware stack levels required when called:    4
 26380 ;; This function calls:
 26381 ;;		Nothing
 26382 ;; This function is called by:
 26383 ;;		_ETH_Write8
 26384 ;;		_ETH_Write16
 26385 ;;		_ETH_Write32
 26386 ;;		_ETH_WriteString
 26387 ;;		_ETH_WriteBlock
 26388 ;;		_ETH_WriteStart
 26389 ;;		_ETH_Insert
 26390 ;;		_ETH_Write24
 26391 ;; This function uses a non-reentrant model
 26392 ;;
 26393                           
 26394                           	psect	text110
 26395  016B50                     __ptext110:
 26396                           	opt stack 0
 26397  016B50                     _ETH_EdataWrite:
 26398                           	opt stack 20
 26399                           
 26400                           ;incstack = 0
 26401  016B50  CFE8 FF61          	movff	wreg,3937	;# 
 26402  016B54  0012               	return		;funcret
 26403  016B56                     __end_of_ETH_EdataWrite:
 26404                           	opt stack 0
 26405                           tosu	equ	0xFFF
 26406                           tosh	equ	0xFFE
 26407                           tosl	equ	0xFFD
 26408                           pclath	equ	0xFFA
 26409                           tblptru	equ	0xFF8
 26410                           tblptrh	equ	0xFF7
 26411                           tblptrl	equ	0xFF6
 26412                           tablat	equ	0xFF5
 26413                           prodh	equ	0xFF4
 26414                           prodl	equ	0xFF3
 26415                           intcon	equ	0xFF2
 26416                           indf0	equ	0xFEF
 26417                           postinc0	equ	0xFEE
 26418                           fsr0h	equ	0xFEA
 26419                           fsr0l	equ	0xFE9
 26420                           wreg	equ	0xFE8
 26421                           indf1	equ	0xFE7
 26422                           postinc1	equ	0xFE6
 26423                           postdec1	equ	0xFE5
 26424                           plusw1	equ	0xFE3
 26425                           fsr1h	equ	0xFE2
 26426                           fsr1l	equ	0xFE1
 26427                           indf2	equ	0xFDF
 26428                           postinc2	equ	0xFDE
 26429                           postdec2	equ	0xFDD
 26430                           plusw2	equ	0xFDB
 26431                           fsr2h	equ	0xFDA
 26432                           fsr2l	equ	0xFD9
 26433                           status	equ	0xFD8
 26434                           
 26435 ;; *************** function _lfsr *****************
 26436 ;; Defined at:
 26437 ;;		line 32 in file "mcc_generated_files/TCPIPLibrary/lfsr.c"
 26438 ;; Parameters:    Size  Location     Type
 26439 ;;		None
 26440 ;; Auto vars:     Size  Location     Type
 26441 ;;  lsb             1   18[COMRAM] unsigned char 
 26442 ;; Return value:  Size  Location     Type
 26443 ;;                  1    wreg      unsigned char 
 26444 ;; Registers used:
 26445 ;;		wreg, status,2, status,0
 26446 ;; Tracked objects:
 26447 ;;		On entry : 0/0
 26448 ;;		On exit  : 0/0
 26449 ;;		Unchanged: 0/0
 26450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26455 ;;Total ram usage:        1 bytes
 26456 ;; Hardware stack levels used:    1
 26457 ;; Hardware stack levels required when called:    4
 26458 ;; This function calls:
 26459 ;;		Nothing
 26460 ;; This function is called by:
 26461 ;;		_sendDHCPDISCOVER
 26462 ;; This function uses a non-reentrant model
 26463 ;;
 26464                           
 26465                           	psect	text111
 26466  016972                     __ptext111:
 26467                           	opt stack 0
 26468  016972                     _lfsr:
 26469                           	opt stack 23
 26470                           
 26471                           ;lfsr.c: 34: char lsb = lfsr_value & 1;
 26472                           
 26473                           ;incstack = 0
 26474  016972  0101               	movlb	1	; () banked
 26475  016974  51FF               	movf	_lfsr_value& (0+255),w,b
 26476  016976  0B01               	andlw	1
 26477  016978  6E13               	movwf	lfsr@lsb,c
 26478                           
 26479                           ;lfsr.c: 35: lfsr_value >>= 1;
 26480  01697A  90D8               	bcf	status,0,c
 26481  01697C  33FF               	rrcf	_lfsr_value& (0+255),f,b
 26482                           
 26483                           ; BSR set to: 1
 26484                           ;lfsr.c: 36: if (lsb)
 26485  01697E  5013               	movf	lfsr@lsb,w,c
 26486  016980  B4D8               	btfsc	status,2,c
 26487  016982  D004               	goto	l1060
 26488                           
 26489                           ; BSR set to: 1
 26490                           ;lfsr.c: 37: lfsr_value ^= xor_mask;
 26491  016984  0102               	movlb	2	; () banked
 26492  016986  51F8               	movf	_xor_mask& (0+255),w,b
 26493  016988  0101               	movlb	1	; () banked
 26494  01698A  1BFF               	xorwf	_lfsr_value& (0+255),f,b
 26495  01698C                     l1060:
 26496                           
 26497                           ; BSR set to: 1
 26498                           ;lfsr.c: 38: return lfsr_value & 0x7f;
 26499  01698C  51FF               	movf	_lfsr_value& (0+255),w,b
 26500  01698E  0B7F               	andlw	127
 26501  016990  0012               	return	
 26502  016992                     __end_of_lfsr:
 26503                           	opt stack 0
 26504                           tosu	equ	0xFFF
 26505                           tosh	equ	0xFFE
 26506                           tosl	equ	0xFFD
 26507                           pclath	equ	0xFFA
 26508                           tblptru	equ	0xFF8
 26509                           tblptrh	equ	0xFF7
 26510                           tblptrl	equ	0xFF6
 26511                           tablat	equ	0xFF5
 26512                           prodh	equ	0xFF4
 26513                           prodl	equ	0xFF3
 26514                           intcon	equ	0xFF2
 26515                           indf0	equ	0xFEF
 26516                           postinc0	equ	0xFEE
 26517                           fsr0h	equ	0xFEA
 26518                           fsr0l	equ	0xFE9
 26519                           wreg	equ	0xFE8
 26520                           indf1	equ	0xFE7
 26521                           postinc1	equ	0xFE6
 26522                           postdec1	equ	0xFE5
 26523                           plusw1	equ	0xFE3
 26524                           fsr1h	equ	0xFE2
 26525                           fsr1l	equ	0xFE1
 26526                           indf2	equ	0xFDF
 26527                           postinc2	equ	0xFDE
 26528                           postdec2	equ	0xFDD
 26529                           plusw2	equ	0xFDB
 26530                           fsr2h	equ	0xFDA
 26531                           fsr2l	equ	0xFD9
 26532                           status	equ	0xFD8
 26533                           
 26534 ;; *************** function _ARPV4_Update *****************
 26535 ;; Defined at:
 26536 ;;		line 183 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 26537 ;; Parameters:    Size  Location     Type
 26538 ;;		None
 26539 ;; Auto vars:     Size  Location     Type
 26540 ;;  x               1   20[COMRAM] unsigned char 
 26541 ;;  entryPointer    2   18[COMRAM] PTR struct .
 26542 ;;		 -> arpMap(104), 
 26543 ;; Return value:  Size  Location     Type
 26544 ;;                  1    wreg      void 
 26545 ;; Registers used:
 26546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26547 ;; Tracked objects:
 26548 ;;		On entry : 0/0
 26549 ;;		On exit  : 0/0
 26550 ;;		Unchanged: 0/0
 26551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26553 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26556 ;;Total ram usage:        3 bytes
 26557 ;; Hardware stack levels used:    1
 26558 ;; Hardware stack levels required when called:    4
 26559 ;; This function calls:
 26560 ;;		Nothing
 26561 ;; This function is called by:
 26562 ;;		_Network_Manage
 26563 ;; This function uses a non-reentrant model
 26564 ;;
 26565                           
 26566                           	psect	text112
 26567  016740                     __ptext112:
 26568                           	opt stack 0
 26569  016740                     _ARPV4_Update:
 26570                           	opt stack 25
 26571                           
 26572                           ;arpv4.c: 185: arpMap_t *entryPointer = arpMap;
 26573                           
 26574                           ; BSR set to: 1
 26575                           ;incstack = 0
 26576  016740  0E04               	movlw	low _arpMap
 26577  016742  6E13               	movwf	ARPV4_Update@entryPointer,c
 26578  016744  0E03               	movlw	high _arpMap
 26579  016746  6E14               	movwf	ARPV4_Update@entryPointer+1,c
 26580                           
 26581                           ;arpv4.c: 186: for(uint8_t x=0; x < 8; x++)
 26582  016748  0E00               	movlw	0
 26583  01674A  6E15               	movwf	ARPV4_Update@x,c
 26584  01674C                     l8792:
 26585  01674C  0E07               	movlw	7
 26586  01674E  6415               	cpfsgt	ARPV4_Update@x,c
 26587  016750  D001               	goto	l332
 26588  016752  0012               	return	
 26589  016754                     l332:
 26590                           
 26591                           ;arpv4.c: 187: {
 26592                           ;arpv4.c: 188: entryPointer->age ++;
 26593  016754  EE20 F00C          	lfsr	2,12
 26594  016758  5013               	movf	ARPV4_Update@entryPointer,w,c
 26595  01675A  26D9               	addwf	fsr2l,f,c
 26596  01675C  5014               	movf	ARPV4_Update@entryPointer+1,w,c
 26597  01675E  22DA               	addwfc	fsr2h,f,c
 26598  016760  2ADF               	incf	indf2,f,c
 26599                           
 26600                           ;arpv4.c: 189: entryPointer ++;
 26601  016762  0E0D               	movlw	13
 26602  016764  2613               	addwf	ARPV4_Update@entryPointer,f,c
 26603  016766  0E00               	movlw	0
 26604  016768  2214               	addwfc	ARPV4_Update@entryPointer+1,f,c
 26605  01676A  2A15               	incf	ARPV4_Update@x,f,c
 26606  01676C  D7EF               	goto	l8792
 26607  01676E                     __end_of_ARPV4_Update:
 26608                           	opt stack 0
 26609                           tosu	equ	0xFFF
 26610                           tosh	equ	0xFFE
 26611                           tosl	equ	0xFFD
 26612                           pclath	equ	0xFFA
 26613                           tblptru	equ	0xFF8
 26614                           tblptrh	equ	0xFF7
 26615                           tblptrl	equ	0xFF6
 26616                           tablat	equ	0xFF5
 26617                           prodh	equ	0xFF4
 26618                           prodl	equ	0xFF3
 26619                           intcon	equ	0xFF2
 26620                           indf0	equ	0xFEF
 26621                           postinc0	equ	0xFEE
 26622                           fsr0h	equ	0xFEA
 26623                           fsr0l	equ	0xFE9
 26624                           wreg	equ	0xFE8
 26625                           indf1	equ	0xFE7
 26626                           postinc1	equ	0xFE6
 26627                           postdec1	equ	0xFE5
 26628                           plusw1	equ	0xFE3
 26629                           fsr1h	equ	0xFE2
 26630                           fsr1l	equ	0xFE1
 26631                           indf2	equ	0xFDF
 26632                           postinc2	equ	0xFDE
 26633                           postdec2	equ	0xFDD
 26634                           plusw2	equ	0xFDB
 26635                           fsr2h	equ	0xFDA
 26636                           fsr2l	equ	0xFD9
 26637                           status	equ	0xFD8
 26638                           
 26639 ;; *************** function _INTERRUPT_InterruptManager *****************
 26640 ;; Defined at:
 26641 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 26642 ;; Parameters:    Size  Location     Type
 26643 ;;		None
 26644 ;; Auto vars:     Size  Location     Type
 26645 ;;		None
 26646 ;; Return value:  Size  Location     Type
 26647 ;;                  1    wreg      void 
 26648 ;; Registers used:
 26649 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 26650 ;; Tracked objects:
 26651 ;;		On entry : 0/0
 26652 ;;		On exit  : 0/0
 26653 ;;		Unchanged: 0/0
 26654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26657 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26658 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26659 ;;Total ram usage:       18 bytes
 26660 ;; Hardware stack levels used:    1
 26661 ;; Hardware stack levels required when called:    3
 26662 ;; This function calls:
 26663 ;;		_TMR0_ISR
 26664 ;;		_TMR1_ISR
 26665 ;; This function is called by:
 26666 ;;		Interrupt level 2
 26667 ;; This function uses a non-reentrant model
 26668 ;;
 26669                           
 26670                           	psect	intcode
 26671  000008                     __pintcode:
 26672                           	opt stack 0
 26673  000008                     _INTERRUPT_InterruptManager:
 26674                           	opt stack 14
 26675                           
 26676                           ;incstack = 0
 26677  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 26678  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 26679  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 26680  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 26681  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 26682  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 26683  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 26684  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 26685  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 26686  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
 26687  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
 26688  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 26689  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 26690  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 26691  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
 26692  000042  C04D  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
 26693  000046  C04E  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 26694  00004A  C04F  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 26695  00004E  C050  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 26696                           
 26697                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 26698  000052  BAF2               	btfsc	intcon,5,c	;volatile
 26699  000054  A4F2               	btfss	intcon,2,c	;volatile
 26700  000056  D003               	goto	i2l22
 26701                           
 26702                           ;interrupt_manager.c: 61: {
 26703                           ;interrupt_manager.c: 62: TMR0_ISR();
 26704  000058  ECB7  F0B3         	call	_TMR0_ISR	;wreg free
 26705                           
 26706                           ;interrupt_manager.c: 63: }
 26707  00005C  D006               	goto	i2l24
 26708  00005E                     i2l22:
 26709                           
 26710                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 26711  00005E  BCF2               	btfsc	intcon,6,c	;volatile
 26712  000060  A09D               	btfss	3997,0,c	;volatile
 26713  000062  D003               	goto	i2l24
 26714  000064  B09E               	btfsc	3998,0,c	;volatile
 26715                           
 26716                           ;interrupt_manager.c: 65: {
 26717                           ;interrupt_manager.c: 66: TMR1_ISR();
 26718  000066  ECCE  F0B3         	call	_TMR1_ISR	;wreg free
 26719  00006A                     i2l24:
 26720                           
 26721                           ;interrupt_manager.c: 68: else
 26722                           ;interrupt_manager.c: 69: {
 26723  00006A  C012  F050         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 26724  00006E  C011  F04F         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 26725  000072  C010  F04E         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 26726  000076  C00F  F04D         	movff	??_INTERRUPT_InterruptManager+14,btemp
 26727  00007A  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 26728  00007E  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 26729  000082  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 26730  000086  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 26731  00008A  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 26732  00008E  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 26733  000092  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 26734  000096  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 26735  00009A  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 26736  00009E  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 26737  0000A2  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 26738  0000A6  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 26739  0000AA  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 26740  0000AE  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 26741  0000B2  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 26742  0000B4  0011               	retfie		f
 26743  0000B6                     __end_of_INTERRUPT_InterruptManager:
 26744                           	opt stack 0
 26745                           tosu	equ	0xFFF
 26746                           tosh	equ	0xFFE
 26747                           tosl	equ	0xFFD
 26748                           pclatu	equ	0xFFB
 26749                           pclath	equ	0xFFA
 26750                           tblptru	equ	0xFF8
 26751                           tblptrh	equ	0xFF7
 26752                           tblptrl	equ	0xFF6
 26753                           tablat	equ	0xFF5
 26754                           prodh	equ	0xFF4
 26755                           prodl	equ	0xFF3
 26756                           intcon	equ	0xFF2
 26757                           indf0	equ	0xFEF
 26758                           postinc0	equ	0xFEE
 26759                           fsr0h	equ	0xFEA
 26760                           fsr0l	equ	0xFE9
 26761                           wreg	equ	0xFE8
 26762                           indf1	equ	0xFE7
 26763                           postinc1	equ	0xFE6
 26764                           postdec1	equ	0xFE5
 26765                           plusw1	equ	0xFE3
 26766                           fsr1h	equ	0xFE2
 26767                           fsr1l	equ	0xFE1
 26768                           indf2	equ	0xFDF
 26769                           postinc2	equ	0xFDE
 26770                           postdec2	equ	0xFDD
 26771                           plusw2	equ	0xFDB
 26772                           fsr2h	equ	0xFDA
 26773                           fsr2l	equ	0xFD9
 26774                           status	equ	0xFD8
 26775                           
 26776 ;; *************** function _TMR1_ISR *****************
 26777 ;; Defined at:
 26778 ;;		line 144 in file "mcc_generated_files/tmr1.c"
 26779 ;; Parameters:    Size  Location     Type
 26780 ;;		None
 26781 ;; Auto vars:     Size  Location     Type
 26782 ;;		None
 26783 ;; Return value:  Size  Location     Type
 26784 ;;                  1    wreg      void 
 26785 ;; Registers used:
 26786 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 26787 ;; Tracked objects:
 26788 ;;		On entry : 0/0
 26789 ;;		On exit  : 0/0
 26790 ;;		Unchanged: 0/0
 26791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26796 ;;Total ram usage:        0 bytes
 26797 ;; Hardware stack levels used:    1
 26798 ;; Hardware stack levels required when called:    2
 26799 ;; This function calls:
 26800 ;;		_TMR1_CallBack
 26801 ;; This function is called by:
 26802 ;;		_INTERRUPT_InterruptManager
 26803 ;; This function uses a non-reentrant model
 26804 ;;
 26805                           
 26806                           	psect	text114
 26807  01679C                     __ptext114:
 26808                           	opt stack 0
 26809  01679C                     _TMR1_ISR:
 26810                           	opt stack 14
 26811                           
 26812                           ;tmr1.c: 146: static volatile uint16_t CountCallBack = 0;
 26813                           ;tmr1.c: 149: PIR1bits.TMR1IF = 0;
 26814                           
 26815                           ;incstack = 0
 26816  01679C  909E               	bcf	3998,0,c	;volatile
 26817                           
 26818                           ;tmr1.c: 152: TMR1H = (timer1ReloadVal >> 8);
 26819  01679E  504A               	movf	_timer1ReloadVal+1,w,c	;volatile
 26820  0167A0  6ECF               	movwf	4047,c	;volatile
 26821                           
 26822                           ;tmr1.c: 153: TMR1L = (uint8_t) timer1ReloadVal;
 26823  0167A2  C049  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 26824                           
 26825                           ;tmr1.c: 156: if (++CountCallBack >= 20)
 26826  0167A6  0102               	movlb	2	; () banked
 26827  0167A8  4B50               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
 26828  0167AA  2B51               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 26829  0167AC  5151               	movf	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 26830  0167AE  E104               	bnz	i2u822_40
 26831  0167B0  0E14               	movlw	20
 26832  0167B2  5D50               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
 26833  0167B4  A0D8               	btfss	status,0,c
 26834  0167B6  0012               	return	
 26835  0167B8                     i2u822_40:
 26836                           
 26837                           ; BSR set to: 2
 26838                           ;tmr1.c: 157: {
 26839                           ;tmr1.c: 159: TMR1_CallBack();
 26840  0167B8  EC96  F0B4         	call	_TMR1_CallBack	;wreg free
 26841                           
 26842                           ;tmr1.c: 162: CountCallBack = 0;
 26843  0167BC  0E00               	movlw	0
 26844  0167BE  0102               	movlb	2	; () banked
 26845  0167C0  6F51               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
 26846  0167C2  0E00               	movlw	0
 26847  0167C4  6F50               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
 26848  0167C6  0012               	return	
 26849  0167C8                     __end_of_TMR1_ISR:
 26850                           	opt stack 0
 26851                           tosu	equ	0xFFF
 26852                           tosh	equ	0xFFE
 26853                           tosl	equ	0xFFD
 26854                           pclatu	equ	0xFFB
 26855                           pclath	equ	0xFFA
 26856                           tblptru	equ	0xFF8
 26857                           tblptrh	equ	0xFF7
 26858                           tblptrl	equ	0xFF6
 26859                           tablat	equ	0xFF5
 26860                           prodh	equ	0xFF4
 26861                           prodl	equ	0xFF3
 26862                           intcon	equ	0xFF2
 26863                           indf0	equ	0xFEF
 26864                           postinc0	equ	0xFEE
 26865                           fsr0h	equ	0xFEA
 26866                           fsr0l	equ	0xFE9
 26867                           wreg	equ	0xFE8
 26868                           indf1	equ	0xFE7
 26869                           postinc1	equ	0xFE6
 26870                           postdec1	equ	0xFE5
 26871                           plusw1	equ	0xFE3
 26872                           fsr1h	equ	0xFE2
 26873                           fsr1l	equ	0xFE1
 26874                           indf2	equ	0xFDF
 26875                           postinc2	equ	0xFDE
 26876                           postdec2	equ	0xFDD
 26877                           plusw2	equ	0xFDB
 26878                           fsr2h	equ	0xFDA
 26879                           fsr2l	equ	0xFD9
 26880                           status	equ	0xFD8
 26881                           
 26882 ;; *************** function _TMR1_CallBack *****************
 26883 ;; Defined at:
 26884 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 26885 ;; Parameters:    Size  Location     Type
 26886 ;;		None
 26887 ;; Auto vars:     Size  Location     Type
 26888 ;;		None
 26889 ;; Return value:  Size  Location     Type
 26890 ;;                  1    wreg      void 
 26891 ;; Registers used:
 26892 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 26893 ;; Tracked objects:
 26894 ;;		On entry : 0/0
 26895 ;;		On exit  : 0/0
 26896 ;;		Unchanged: 0/0
 26897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26902 ;;Total ram usage:        0 bytes
 26903 ;; Hardware stack levels used:    1
 26904 ;; Hardware stack levels required when called:    1
 26905 ;; This function calls:
 26906 ;;		Absolute function
 26907 ;;		_TMR1_DefaultInterruptHandler
 26908 ;;		_rtcc_handler
 26909 ;; This function is called by:
 26910 ;;		_TMR1_ISR
 26911 ;; This function uses a non-reentrant model
 26912 ;;
 26913                           
 26914                           	psect	text115
 26915  01692C                     __ptext115:
 26916                           	opt stack 0
 26917  01692C                     _TMR1_CallBack:
 26918                           	opt stack 14
 26919                           
 26920                           ;tmr1.c: 170: if(TMR1_InterruptHandler)
 26921                           
 26922                           ; BSR set to: 2
 26923                           ;incstack = 0
 26924  01692C  0102               	movlb	2	; () banked
 26925  01692E  51FC               	movf	_TMR1_InterruptHandler& (0+255),w,b
 26926  016930  11FD               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 26927  016932  11FE               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 26928  016934  B4D8               	btfsc	status,2,c
 26929  016936  0012               	return	
 26930                           
 26931                           ; BSR set to: 2
 26932                           ;tmr1.c: 171: {
 26933                           ;tmr1.c: 172: TMR1_InterruptHandler();
 26934  016938  D801               	call	i2u795_48
 26935  01693A  0012               	return	
 26936  01693C                     i2u795_48:
 26937  01693C  0005               	push	
 26938  01693E  6EFA               	movwf	pclath,c
 26939  016940  51FC               	movf	_TMR1_InterruptHandler& (0+255),w,b
 26940  016942  6EFD               	movwf	tosl,c
 26941  016944  51FD               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 26942  016946  6EFE               	movwf	tosh,c
 26943  016948  51FE               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 26944  01694A  6EFF               	movwf	tosu,c
 26945  01694C  50FA               	movf	pclath,w,c
 26946  01694E  0012               	return		;indir
 26947  016950                     __end_of_TMR1_CallBack:
 26948                           	opt stack 0
 26949                           tosu	equ	0xFFF
 26950                           tosh	equ	0xFFE
 26951                           tosl	equ	0xFFD
 26952                           pclatu	equ	0xFFB
 26953                           pclath	equ	0xFFA
 26954                           tblptru	equ	0xFF8
 26955                           tblptrh	equ	0xFF7
 26956                           tblptrl	equ	0xFF6
 26957                           tablat	equ	0xFF5
 26958                           prodh	equ	0xFF4
 26959                           prodl	equ	0xFF3
 26960                           intcon	equ	0xFF2
 26961                           indf0	equ	0xFEF
 26962                           postinc0	equ	0xFEE
 26963                           fsr0h	equ	0xFEA
 26964                           fsr0l	equ	0xFE9
 26965                           wreg	equ	0xFE8
 26966                           indf1	equ	0xFE7
 26967                           postinc1	equ	0xFE6
 26968                           postdec1	equ	0xFE5
 26969                           plusw1	equ	0xFE3
 26970                           fsr1h	equ	0xFE2
 26971                           fsr1l	equ	0xFE1
 26972                           indf2	equ	0xFDF
 26973                           postinc2	equ	0xFDE
 26974                           postdec2	equ	0xFDD
 26975                           plusw2	equ	0xFDB
 26976                           fsr2h	equ	0xFDA
 26977                           fsr2l	equ	0xFD9
 26978                           status	equ	0xFD8
 26979                           
 26980 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 26981 ;; Defined at:
 26982 ;;		line 180 in file "mcc_generated_files/tmr1.c"
 26983 ;; Parameters:    Size  Location     Type
 26984 ;;		None
 26985 ;; Auto vars:     Size  Location     Type
 26986 ;;		None
 26987 ;; Return value:  Size  Location     Type
 26988 ;;                  1    wreg      void 
 26989 ;; Registers used:
 26990 ;;		None
 26991 ;; Tracked objects:
 26992 ;;		On entry : 0/0
 26993 ;;		On exit  : 0/0
 26994 ;;		Unchanged: 0/0
 26995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27000 ;;Total ram usage:        0 bytes
 27001 ;; Hardware stack levels used:    1
 27002 ;; This function calls:
 27003 ;;		Nothing
 27004 ;; This function is called by:
 27005 ;;		_TMR1_Initialize
 27006 ;;		_TMR1_CallBack
 27007 ;; This function uses a non-reentrant model
 27008 ;;
 27009                           
 27010                           	psect	text116
 27011  016B60                     __ptext116:
 27012                           	opt stack 0
 27013  016B60                     _TMR1_DefaultInterruptHandler:
 27014                           	opt stack 14
 27015                           
 27016                           ;incstack = 0
 27017  016B60  0012               	return		;funcret
 27018  016B62                     __end_of_TMR1_DefaultInterruptHandler:
 27019                           	opt stack 0
 27020                           tosu	equ	0xFFF
 27021                           tosh	equ	0xFFE
 27022                           tosl	equ	0xFFD
 27023                           pclatu	equ	0xFFB
 27024                           pclath	equ	0xFFA
 27025                           tblptru	equ	0xFF8
 27026                           tblptrh	equ	0xFF7
 27027                           tblptrl	equ	0xFF6
 27028                           tablat	equ	0xFF5
 27029                           prodh	equ	0xFF4
 27030                           prodl	equ	0xFF3
 27031                           intcon	equ	0xFF2
 27032                           indf0	equ	0xFEF
 27033                           postinc0	equ	0xFEE
 27034                           fsr0h	equ	0xFEA
 27035                           fsr0l	equ	0xFE9
 27036                           wreg	equ	0xFE8
 27037                           indf1	equ	0xFE7
 27038                           postinc1	equ	0xFE6
 27039                           postdec1	equ	0xFE5
 27040                           plusw1	equ	0xFE3
 27041                           fsr1h	equ	0xFE2
 27042                           fsr1l	equ	0xFE1
 27043                           indf2	equ	0xFDF
 27044                           postinc2	equ	0xFDE
 27045                           postdec2	equ	0xFDD
 27046                           plusw2	equ	0xFDB
 27047                           fsr2h	equ	0xFDA
 27048                           fsr2l	equ	0xFD9
 27049                           status	equ	0xFD8
 27050                           
 27051 ;; *************** function _rtcc_handler *****************
 27052 ;; Defined at:
 27053 ;;		line 95 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 27054 ;; Parameters:    Size  Location     Type
 27055 ;;		None
 27056 ;; Auto vars:     Size  Location     Type
 27057 ;;		None
 27058 ;; Return value:  Size  Location     Type
 27059 ;;                  1    wreg      void 
 27060 ;; Registers used:
 27061 ;;		wreg, status,2, status,0
 27062 ;; Tracked objects:
 27063 ;;		On entry : 0/0
 27064 ;;		On exit  : 0/0
 27065 ;;		Unchanged: 0/0
 27066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27071 ;;Total ram usage:        0 bytes
 27072 ;; Hardware stack levels used:    1
 27073 ;; This function calls:
 27074 ;;		Nothing
 27075 ;; This function is called by:
 27076 ;;		_rtcc_init
 27077 ;;		_TMR1_CallBack
 27078 ;; This function uses a non-reentrant model
 27079 ;;
 27080                           
 27081                           	psect	text117
 27082  016A64                     __ptext117:
 27083                           	opt stack 0
 27084  016A64                     _rtcc_handler:
 27085                           	opt stack 14
 27086                           
 27087                           ;rtcc.c: 97: device_time++;
 27088                           
 27089                           ;incstack = 0
 27090  016A64  0E01               	movlw	1
 27091  016A66  0102               	movlb	2	; () banked
 27092  016A68  2732               	addwf	_device_time& (0+255),f,b	;volatile
 27093  016A6A  0E00               	movlw	0
 27094  016A6C  2333               	addwfc	(_device_time+1)& (0+255),f,b	;volatile
 27095  016A6E  2334               	addwfc	(_device_time+2)& (0+255),f,b	;volatile
 27096  016A70  2335               	addwfc	(_device_time+3)& (0+255),f,b	;volatile
 27097                           
 27098                           ; BSR set to: 2
 27099  016A72  0012               	return		;funcret
 27100  016A74                     __end_of_rtcc_handler:
 27101                           	opt stack 0
 27102                           tosu	equ	0xFFF
 27103                           tosh	equ	0xFFE
 27104                           tosl	equ	0xFFD
 27105                           pclatu	equ	0xFFB
 27106                           pclath	equ	0xFFA
 27107                           tblptru	equ	0xFF8
 27108                           tblptrh	equ	0xFF7
 27109                           tblptrl	equ	0xFF6
 27110                           tablat	equ	0xFF5
 27111                           prodh	equ	0xFF4
 27112                           prodl	equ	0xFF3
 27113                           intcon	equ	0xFF2
 27114                           indf0	equ	0xFEF
 27115                           postinc0	equ	0xFEE
 27116                           fsr0h	equ	0xFEA
 27117                           fsr0l	equ	0xFE9
 27118                           wreg	equ	0xFE8
 27119                           indf1	equ	0xFE7
 27120                           postinc1	equ	0xFE6
 27121                           postdec1	equ	0xFE5
 27122                           plusw1	equ	0xFE3
 27123                           fsr1h	equ	0xFE2
 27124                           fsr1l	equ	0xFE1
 27125                           indf2	equ	0xFDF
 27126                           postinc2	equ	0xFDE
 27127                           postdec2	equ	0xFDD
 27128                           plusw2	equ	0xFDB
 27129                           fsr2h	equ	0xFDA
 27130                           fsr2l	equ	0xFD9
 27131                           status	equ	0xFD8
 27132                           
 27133 ;; *************** function _TMR0_ISR *****************
 27134 ;; Defined at:
 27135 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 27136 ;; Parameters:    Size  Location     Type
 27137 ;;		None
 27138 ;; Auto vars:     Size  Location     Type
 27139 ;;		None
 27140 ;; Return value:  Size  Location     Type
 27141 ;;                  1    wreg      void 
 27142 ;; Registers used:
 27143 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 27144 ;; Tracked objects:
 27145 ;;		On entry : 0/0
 27146 ;;		On exit  : 0/0
 27147 ;;		Unchanged: 0/0
 27148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27153 ;;Total ram usage:        0 bytes
 27154 ;; Hardware stack levels used:    1
 27155 ;; Hardware stack levels required when called:    1
 27156 ;; This function calls:
 27157 ;;		Absolute function
 27158 ;;		_TMR0_DefaultInterruptHandler
 27159 ;; This function is called by:
 27160 ;;		_INTERRUPT_InterruptManager
 27161 ;; This function uses a non-reentrant model
 27162 ;;
 27163                           
 27164                           	psect	text118
 27165  01676E                     __ptext118:
 27166                           	opt stack 0
 27167  01676E                     _TMR0_ISR:
 27168                           	opt stack 15
 27169                           
 27170                           ;tmr0.c: 136: INTCONbits.TMR0IF = 0;
 27171                           
 27172                           ; BSR set to: 2
 27173                           ;incstack = 0
 27174  01676E  94F2               	bcf	intcon,2,c	;volatile
 27175                           
 27176                           ;tmr0.c: 140: TMR0H = timer0ReloadVal >> 8;
 27177  016770  5048               	movf	_timer0ReloadVal+1,w,c	;volatile
 27178  016772  6ED7               	movwf	4055,c	;volatile
 27179                           
 27180                           ;tmr0.c: 141: TMR0L = (uint8_t) timer0ReloadVal;
 27181  016774  C047  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 27182                           
 27183                           ;tmr0.c: 143: if(TMR0_InterruptHandler)
 27184  016778  0102               	movlb	2	; () banked
 27185  01677A  51F9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 27186  01677C  11FA               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 27187  01677E  11FB               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 27188  016780  B4D8               	btfsc	status,2,c
 27189  016782  0012               	return	
 27190                           
 27191                           ; BSR set to: 2
 27192                           ;tmr0.c: 144: {
 27193                           ;tmr0.c: 145: TMR0_InterruptHandler();
 27194  016784  D801               	call	i2u821_48
 27195  016786  0012               	return	
 27196  016788                     i2u821_48:
 27197  016788  0005               	push	
 27198  01678A  6EFA               	movwf	pclath,c
 27199  01678C  51F9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 27200  01678E  6EFD               	movwf	tosl,c
 27201  016790  51FA               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 27202  016792  6EFE               	movwf	tosh,c
 27203  016794  51FB               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 27204  016796  6EFF               	movwf	tosu,c
 27205  016798  50FA               	movf	pclath,w,c
 27206  01679A  0012               	return		;indir
 27207  01679C                     __end_of_TMR0_ISR:
 27208                           	opt stack 0
 27209                           tosu	equ	0xFFF
 27210                           tosh	equ	0xFFE
 27211                           tosl	equ	0xFFD
 27212                           pclatu	equ	0xFFB
 27213                           pclath	equ	0xFFA
 27214                           tblptru	equ	0xFF8
 27215                           tblptrh	equ	0xFF7
 27216                           tblptrl	equ	0xFF6
 27217                           tablat	equ	0xFF5
 27218                           prodh	equ	0xFF4
 27219                           prodl	equ	0xFF3
 27220                           intcon	equ	0xFF2
 27221                           indf0	equ	0xFEF
 27222                           postinc0	equ	0xFEE
 27223                           fsr0h	equ	0xFEA
 27224                           fsr0l	equ	0xFE9
 27225                           wreg	equ	0xFE8
 27226                           indf1	equ	0xFE7
 27227                           postinc1	equ	0xFE6
 27228                           postdec1	equ	0xFE5
 27229                           plusw1	equ	0xFE3
 27230                           fsr1h	equ	0xFE2
 27231                           fsr1l	equ	0xFE1
 27232                           indf2	equ	0xFDF
 27233                           postinc2	equ	0xFDE
 27234                           postdec2	equ	0xFDD
 27235                           plusw2	equ	0xFDB
 27236                           fsr2h	equ	0xFDA
 27237                           fsr2l	equ	0xFD9
 27238                           status	equ	0xFD8
 27239                           
 27240 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 27241 ;; Defined at:
 27242 ;;		line 156 in file "mcc_generated_files/tmr0.c"
 27243 ;; Parameters:    Size  Location     Type
 27244 ;;		None
 27245 ;; Auto vars:     Size  Location     Type
 27246 ;;		None
 27247 ;; Return value:  Size  Location     Type
 27248 ;;                  1    wreg      void 
 27249 ;; Registers used:
 27250 ;;		None
 27251 ;; Tracked objects:
 27252 ;;		On entry : 0/0
 27253 ;;		On exit  : 0/0
 27254 ;;		Unchanged: 0/0
 27255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27260 ;;Total ram usage:        0 bytes
 27261 ;; Hardware stack levels used:    1
 27262 ;; This function calls:
 27263 ;;		Nothing
 27264 ;; This function is called by:
 27265 ;;		_TMR0_Initialize
 27266 ;;		_TMR0_ISR
 27267 ;; This function uses a non-reentrant model
 27268 ;;
 27269                           
 27270                           	psect	text119
 27271  016B62                     __ptext119:
 27272                           	opt stack 0
 27273  016B62                     _TMR0_DefaultInterruptHandler:
 27274                           	opt stack 15
 27275                           
 27276                           ;incstack = 0
 27277  016B62  0012               	return		;funcret
 27278  016B64                     __end_of_TMR0_DefaultInterruptHandler:
 27279                           	opt stack 0
 27280                           tosu	equ	0xFFF
 27281                           tosh	equ	0xFFE
 27282                           tosl	equ	0xFFD
 27283                           pclatu	equ	0xFFB
 27284                           pclath	equ	0xFFA
 27285                           tblptru	equ	0xFF8
 27286                           tblptrh	equ	0xFF7
 27287                           tblptrl	equ	0xFF6
 27288                           tablat	equ	0xFF5
 27289                           prodh	equ	0xFF4
 27290                           prodl	equ	0xFF3
 27291                           intcon	equ	0xFF2
 27292                           indf0	equ	0xFEF
 27293                           postinc0	equ	0xFEE
 27294                           fsr0h	equ	0xFEA
 27295                           fsr0l	equ	0xFE9
 27296                           wreg	equ	0xFE8
 27297                           indf1	equ	0xFE7
 27298                           postinc1	equ	0xFE6
 27299                           postdec1	equ	0xFE5
 27300                           plusw1	equ	0xFE3
 27301                           fsr1h	equ	0xFE2
 27302                           fsr1l	equ	0xFE1
 27303                           indf2	equ	0xFDF
 27304                           postinc2	equ	0xFDE
 27305                           postdec2	equ	0xFDD
 27306                           plusw2	equ	0xFDB
 27307                           fsr2h	equ	0xFDA
 27308                           fsr2l	equ	0xFD9
 27309                           status	equ	0xFD8
 27310                           tosu	equ	0xFFF
 27311                           tosh	equ	0xFFE
 27312                           tosl	equ	0xFFD
 27313                           pclatu	equ	0xFFB
 27314                           pclath	equ	0xFFA
 27315                           tblptru	equ	0xFF8
 27316                           tblptrh	equ	0xFF7
 27317                           tblptrl	equ	0xFF6
 27318                           tablat	equ	0xFF5
 27319                           prodh	equ	0xFF4
 27320                           prodl	equ	0xFF3
 27321                           intcon	equ	0xFF2
 27322                           indf0	equ	0xFEF
 27323                           postinc0	equ	0xFEE
 27324                           fsr0h	equ	0xFEA
 27325                           fsr0l	equ	0xFE9
 27326                           wreg	equ	0xFE8
 27327                           indf1	equ	0xFE7
 27328                           postinc1	equ	0xFE6
 27329                           postdec1	equ	0xFE5
 27330                           plusw1	equ	0xFE3
 27331                           fsr1h	equ	0xFE2
 27332                           fsr1l	equ	0xFE1
 27333                           indf2	equ	0xFDF
 27334                           postinc2	equ	0xFDE
 27335                           postdec2	equ	0xFDD
 27336                           plusw2	equ	0xFDB
 27337                           fsr2h	equ	0xFDA
 27338                           fsr2l	equ	0xFD9
 27339                           status	equ	0xFD8
 27340                           
 27341                           	psect	text120
 27342  000000                     __ptext120:
 27343                           	opt stack 0
 27344                           tosu	equ	0xFFF
 27345                           tosh	equ	0xFFE
 27346                           tosl	equ	0xFFD
 27347                           pclatu	equ	0xFFB
 27348                           pclath	equ	0xFFA
 27349                           tblptru	equ	0xFF8
 27350                           tblptrh	equ	0xFF7
 27351                           tblptrl	equ	0xFF6
 27352                           tablat	equ	0xFF5
 27353                           prodh	equ	0xFF4
 27354                           prodl	equ	0xFF3
 27355                           intcon	equ	0xFF2
 27356                           indf0	equ	0xFEF
 27357                           postinc0	equ	0xFEE
 27358                           fsr0h	equ	0xFEA
 27359                           fsr0l	equ	0xFE9
 27360                           wreg	equ	0xFE8
 27361                           indf1	equ	0xFE7
 27362                           postinc1	equ	0xFE6
 27363                           postdec1	equ	0xFE5
 27364                           plusw1	equ	0xFE3
 27365                           fsr1h	equ	0xFE2
 27366                           fsr1l	equ	0xFE1
 27367                           indf2	equ	0xFDF
 27368                           postinc2	equ	0xFDE
 27369                           postdec2	equ	0xFDD
 27370                           plusw2	equ	0xFDB
 27371                           fsr2h	equ	0xFDA
 27372                           fsr2l	equ	0xFD9
 27373                           status	equ	0xFD8
 27374                           
 27375                           	psect	rparam
 27376  0000                     tosu	equ	0xFFF
 27377                           tosh	equ	0xFFE
 27378                           tosl	equ	0xFFD
 27379                           pclatu	equ	0xFFB
 27380                           pclath	equ	0xFFA
 27381                           tblptru	equ	0xFF8
 27382                           tblptrh	equ	0xFF7
 27383                           tblptrl	equ	0xFF6
 27384                           tablat	equ	0xFF5
 27385                           prodh	equ	0xFF4
 27386                           prodl	equ	0xFF3
 27387                           intcon	equ	0xFF2
 27388                           indf0	equ	0xFEF
 27389                           postinc0	equ	0xFEE
 27390                           fsr0h	equ	0xFEA
 27391                           fsr0l	equ	0xFE9
 27392                           wreg	equ	0xFE8
 27393                           indf1	equ	0xFE7
 27394                           postinc1	equ	0xFE6
 27395                           postdec1	equ	0xFE5
 27396                           plusw1	equ	0xFE3
 27397                           fsr1h	equ	0xFE2
 27398                           fsr1l	equ	0xFE1
 27399                           indf2	equ	0xFDF
 27400                           postinc2	equ	0xFDE
 27401                           postdec2	equ	0xFDD
 27402                           plusw2	equ	0xFDB
 27403                           fsr2h	equ	0xFDA
 27404                           fsr2l	equ	0xFD9
 27405                           status	equ	0xFD8
 27406                           
 27407                           	psect	temp
 27408  00004D                     btemp:
 27409                           	opt stack 0
 27410  00004D                     	ds	1
 27411  0000                     int$flags	set	btemp
 27412  0000                     wtemp6	set	btemp+1
 27413                           tosu	equ	0xFFF
 27414                           tosh	equ	0xFFE
 27415                           tosl	equ	0xFFD
 27416                           pclatu	equ	0xFFB
 27417                           pclath	equ	0xFFA
 27418                           tblptru	equ	0xFF8
 27419                           tblptrh	equ	0xFF7
 27420                           tblptrl	equ	0xFF6
 27421                           tablat	equ	0xFF5
 27422                           prodh	equ	0xFF4
 27423                           prodl	equ	0xFF3
 27424                           intcon	equ	0xFF2
 27425                           indf0	equ	0xFEF
 27426                           postinc0	equ	0xFEE
 27427                           fsr0h	equ	0xFEA
 27428                           fsr0l	equ	0xFE9
 27429                           wreg	equ	0xFE8
 27430                           indf1	equ	0xFE7
 27431                           postinc1	equ	0xFE6
 27432                           postdec1	equ	0xFE5
 27433                           plusw1	equ	0xFE3
 27434                           fsr1h	equ	0xFE2
 27435                           fsr1l	equ	0xFE1
 27436                           indf2	equ	0xFDF
 27437                           postinc2	equ	0xFDE
 27438                           postdec2	equ	0xFDD
 27439                           plusw2	equ	0xFDB
 27440                           fsr2h	equ	0xFDA
 27441                           fsr2l	equ	0xFD9
 27442                           status	equ	0xFD8


Data Sizes:
    Strings     179
    Constant    132
    Data        102
    BSS         605
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160    160     160
    BANK1           256    255     256
    BANK2           256     56     255
    BANK3           256      0     171
    BANK4           256      0     200
    BANK5           256      0     128
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    dnsCache.dnsName	PTR const unsigned char  size(2) Largest target is 0

    ?_udp_table_nextEntry.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> DHCP_Handler@chaddr(BANK1[16]), dhcpName(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> DHCP_Handler@chaddr(BANK1[16]), dhcpName(CODE[13]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 255
		 -> DNS_Handler@dnsR(BANK1[255]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 0

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_6(CODE[10]), STR_5(CODE[29]), STR_1(CODE[58]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    memcpy@s1	PTR const void  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    memcmp@s2	PTR const void  size(2) Largest target is 6
		 -> broadcastMAC(CODE[6]), hostMacAddress(BANK2[6]), 

    memcmp@s1	PTR const void  size(2) Largest target is 16
		 -> DHCP_Handler@chaddr(BANK1[16]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(COMRAM[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK0[2]), STR_9(CODE[7]), DNS_Lookup@str(COMRAM[80]), 
		 -> makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_7(CODE[26]), STR_6(CODE[10]), STR_5(CODE[29]), STR_4(CODE[12]), 
		 -> STR_1(CODE[58]), 

    S4544__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4544__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK3[15]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(COMRAM[5]), 

    ntp	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_8(CODE[18]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3346$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3346$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3346$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3346$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3346$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3346$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    DNS_Lookup@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@dnsPtr.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@dnsPtr	PTR struct . size(2) Largest target is 128
		 -> dnsCache(BANK5[128]), 

    DNS_Handler@entryPointer	PTR struct . size(2) Largest target is 128
		 -> dnsCache(BANK5[128]), 

    DNS_Query@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    S3188$dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Query@oldestEntry.dnsName	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 128
		 -> dnsCache(BANK5[128]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    UDP_Receive@hptr	PTR struct . size(2) Largest target is 15
		 -> UDP_CallBackTable(CODE[15]), NULL(NULL[0]), 

    sp__udp_table_nextEntry.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__udp_table_nextEntry	PTR struct . size(2) Largest target is 15
		 -> UDP_CallBackTable(CODE[15]), NULL(NULL[0]), 

    udp_table_nextEntry@i	PTR struct . size(2) Largest target is 15
		 -> UDP_CallBackTable(CODE[15]), NULL(NULL[0]), 

    udp_table_nextEntry@j.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    udp_table_nextEntry@j	PTR struct . size(2) Largest target is 15
		 -> UDP_CallBackTable(CODE[15]), 

    sp__udp_table_getIterator	PTR struct . size(2) Largest target is 15
		 -> UDP_CallBackTable(CODE[15]), 

    S2724$callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> Network_Manage@now(BANK2[4]), arpTimer(BANK2[4]), NULL(NULL[0]), 

    rtcc_set@t	PTR long  size(2) Largest target is 3935
		 -> RAM(DATA[3935]), 

    sp__makeIpv4AddresstoStr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK3[15]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), NULL(NULL[0]), broadcastMAC(CODE[6]), arpMap(BANK3[104]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(2) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ETH_RemovePacket@pPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket	PTR struct . size(2) Largest target is 3935
		 -> RAM(DATA[3935]), NULL(NULL[0]), 

    txData.nextPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    txData.nextPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    txData.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    txData.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_PacketListReset@ptr	PTR unsigned char  size(2) Largest target is 240
		 -> txData(BANK4[200]), 

    ETH_GetMAC@mac	PTR unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    ETH_Shift_Tx_Packets@pElem.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem	PTR struct . size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_Insert@data	PTR unsigned char  size(2) Largest target is 2
		 -> TCP_Snd@cksm(BANK0[2]), UDP_Send@cksm(BANK0[2]), UDP_Send@udpLength(BANK0[2]), ICMP_PortUnreachable@cksm(BANK0[2]), 
		 -> ICMP_EchoReply@cksm(BANK0[2]), IPV4_Send@cksm(BANK0[2]), IPV4_Send@totalLength(BANK0[2]), 

    pTail.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    pTail.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), NULL(NULL[0]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(BANK0[28]), arpMap(BANK3[104]), 

    ETH_WriteStart@ethPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    S1081$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    pHead.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    S1081$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    pHead.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    pHead	PTR struct . size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket	PTR struct . size(2) Largest target is 3935
		 -> RAM(DATA[3935]), NULL(NULL[0]), 

    ETH_WriteBlock@buffer	PTR const void  size(2) Largest target is 28
		 -> TCP_Snd@txHeader(BANK0[20]), NULL(NULL[0]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 
		 -> hostMacAddress(BANK2[6]), 

    ETH_WriteBlock@p	PTR const unsigned char  size(2) Largest target is 28
		 -> TCP_Snd@txHeader(BANK0[20]), NULL(NULL[0]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 
		 -> hostMacAddress(BANK2[6]), 

    ETH_WriteString@string	PTR const unsigned char  size(2) Largest target is 13
		 -> dhcpName(CODE[13]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 28
		 -> tcpHeader(BANK2[20]), DHCP_Handler@chaddr(BANK1[16]), udpHeader(BANK2[8]), ICMP_Receive@icmpHdr(BANK0[4]), 
		 -> Network_Read@header(BANK2[14]), ipv4Header(BANK2[20]), NULL(NULL[0]), ARPV4_Packet@header(BANK0[28]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> tcpHeader(BANK2[20]), DHCP_Handler@chaddr(BANK1[16]), udpHeader(BANK2[8]), ICMP_Receive@icmpHdr(BANK0[4]), 
		 -> Network_Read@header(BANK2[14]), ipv4Header(BANK2[20]), NULL(NULL[0]), ARPV4_Packet@header(BANK0[28]), 

    pTail	PTR struct . size(2) Largest target is 240
		 -> txData(BANK4[200]), NULL(NULL[0]), 

    ETH_Init@mac	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), 

    sp__MAC_getAddress	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), NULL(NULL[0]), arpMap(BANK3[104]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    sp__memcpy	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _timersInit->_time
    _rtcc_init->_TMR1_SetInterruptHandler
    _Network_WaitForLink->_ETH_CheckLinkUp
    _IPV4_Init->_ipdb_init
    _ETH_Init->_printf
    _printf->__doprnt
    __doprnt->___llmod
    ___llmod->___lldiv
    _PHY_Write->_PHY_WaitForBusy
    _ARPV4_Init->_ETH_GetMAC
    _udp_table_nextEntry->_udp_table_getIterator
    _ICMP_PortUnreachable->_IPV4_Send
    _ETH_SetReadPtr->_IPV4_GetStartPosition
    _sendDHCPDECLINE->_sendRequest
    _TCP_ParseTCPOptions->_ETH_Read16
    _TCP_Snd->_IPV4_Send
    _IPV4_SaveStartPosition->_ETH_GetReadPtr
    _ICMP_EchoReply->_IPV4_Send
    _ETH_Copy->___wmul
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_WriteStart
    _ETH_EventHandler->_ETH_Shift_Tx_Packets
    _ETH_CheckLinkUp->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy
    _sendDHCPREQUEST->_sendRequest
    _sendDHCPDISCOVER->_sendRequest
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _ARPV4_Request->_ETH_WriteStart
    _ETH_WriteStart->_ETH_Shift_Tx_Packets
    _ETH_Shift_Tx_Packets->___wmul
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum
    _ETH_Send->_ETH_SendQueued
    _DHCP_WriteZeros->_ETH_Write8

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _Network_Init->_ETH_Init
    _ETH_Init->_printf
    _printf->__doprnt
    _Network_Manage->_TCP_Update
    _TCP_Update->_TCP_FiniteStateMachine
    _IPV4_Packet->_TCP_Recv
    _UDP_Receive->_DNS_Handler
    _ICMP_PortUnreachable->_IPv4_Start
    _TCP_Recv->_TCP_FiniteStateMachine
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _DHCP_Manage->_sendDHCPDISCOVER
    _sendRequest->_UDP_Start
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _TCP_Update->_TCP_FiniteStateMachine
    _UDP_Receive->_DNS_Handler
    _TCP_Recv->_TCP_FiniteStateMachine

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _Network_Read->_IPV4_Packet

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  366518
                     _Network_Manage
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    8546
                     _ADC_Initialize
                   _ECCP1_Initialize
               _INTERRUPT_Initialize
                       _Network_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3      98
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Network_Init                                         0     0      0    8274
                         _ARPV4_Init
                          _DHCP_init
                           _ETH_Init
                          _IPV4_Init
                _Network_WaitForLink
                           _TCP_Init
                          _rtcc_init
                         _timersInit
 ---------------------------------------------------------------------------------
 (3) _timersInit                                           0     0      0     644
                               _time
 ---------------------------------------------------------------------------------
 (3) _rtcc_init                                            0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3     174
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (3) _IPV4_Init                                            0     0      0     136
                          _ipdb_init
 ---------------------------------------------------------------------------------
 (4) _ipdb_init                                            2     2      0     136
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ETH_Init                                            14    14      0    6761
                                             27 BANK0     14    14      0
                    _ETH_CheckLinkUp
                          _ETH_Flush
                _ETH_PacketListReset
                     _MAC_getAddress
                          _PHY_Write
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              21     7     14    5346
                                             50 COMRAM     7     7      0
                                             13 BANK0     14     0     14
                            __doprnt
 ---------------------------------------------------------------------------------
 (5) __doprnt                                             27    21      6    4850
                                             40 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                   Absolute function *
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     412
                                             31 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PHY_Write                                            4     2      2     626
                                             20 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _MAC_getAddress                                       2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_PacketListReset                                  4     4      0     102
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _DHCP_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Init                                           1     1      0     281
                                             20 COMRAM     1     1      0
                         _ETH_GetMAC
 ---------------------------------------------------------------------------------
 (4) _ETH_GetMAC                                           2     0      2     213
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  357972
                                             51 BANK2      5     5      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                           8     8      0   64483
                                            156 BANK0      4     4      0
                                              5 BANK1      4     4      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  222010
                                             33 BANK2     18    18      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  212124
                                              0 BANK2     33    33      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
             _IPV4_SaveStartPosition
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2  108426
                                            117 BANK0      9     7      2
                       _DHCP_Handler *
                        _DNS_Handler *
                      _ETH_ReadBlock
               _ICMP_PortUnreachable
             _IPV4_GetDatagramLength
                        _NTP_Handler *
              _udp_table_getIterator
                _udp_table_nextEntry
 ---------------------------------------------------------------------------------
 (5) _udp_table_nextEntry                                  4     2      2     144
                                             20 COMRAM     4     2      2
              _udp_table_getIterator
 ---------------------------------------------------------------------------------
 (6) _udp_table_getIterator                                2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _NTP_Handler                                         10     8      2     411
                                             80 BANK0     10     8      2
                         _ETH_Read32
                          _ETH_Read8
                           _rtcc_set
 ---------------------------------------------------------------------------------
 (6) _rtcc_set                                             3     1      2     121
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _IPV4_GetDatagramLength                               2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ICMP_PortUnreachable                                13     3     10   30455
                                             72 BANK0     13     3     10
                           _ETH_Copy
                         _ETH_Insert
                     _ETH_SetReadPtr
              _ETH_TxComputeChecksum
                        _ETH_Write16
                        _ETH_Write32
              _IPV4_GetStartPosition
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _IPV4_GetStartPosition                                2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ETH_SetReadPtr                                       2     0      2      98
                                             20 COMRAM     2     0      2
              _IPV4_GetStartPosition (ARG)
 ---------------------------------------------------------------------------------
 (5) _DNS_Handler                                        292   290      2    2321
                                             80 BANK0     37    35      2
                                              0 BANK1    255   255      0
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                             _strcmp
                               _time
 ---------------------------------------------------------------------------------
 (6) _strcmp                                               6     2      4     395
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        91    89      2   73035
                                             80 BANK0      6     4      2
                                              0 BANK1     85    85      0
                           _ETH_Dump
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
                    _sendDHCPDECLINE
                    _sendDHCPREQUEST
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _sendDHCPDECLINE                                      0     0      0   33886
                        _sendRequest
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               9     3      6     568
                                             18 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     148
                                             18 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6   67654
                                            156 BANK0      3     3      0
                                              5 BANK1     34    28      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    1480
                                             22 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      37
                                             18 COMRAM     1     1      0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              13    13      0   64003
                                            148 BANK0      8     8      0
                                              0 BANK1      5     5      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
                  _isPortUnreachable
               _resetPortUnreachable
 ---------------------------------------------------------------------------------
 (4) _resetPortUnreachable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _isPortUnreachable                                    2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     13    11      2   31799
                                            135 BANK0     13    11      2
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             63    61      2   29745
                                             72 BANK0     63    61      2
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            2     0      2    1815
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_SaveStartPosition                               0     0      0       0
                     _ETH_GetReadPtr
 ---------------------------------------------------------------------------------
 (5) _ETH_GetReadPtr                                       2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           29    27      2     434
                                             18 COMRAM    29    27      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        11     9      2   30891
                                             89 BANK0     11     9      2
                           _ETH_Dump
                         _ETH_Read16
                      _ETH_ReadBlock
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      17    15      2   27959
                                             72 BANK0     17    15      2
                           _ETH_Copy
                         _ETH_Insert
                         _ETH_Read16
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2      74
                                             18 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             6     4      2    1414
                                             24 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             2     0      2     773
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    1655
                                             36 COMRAM    14    10      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _ETH_Flush                                            4     4      0       0
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0    7948
                                              0 BANK0     70    70      0
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        8     4      4    1759
                                             18 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     0     0      0    2131
                    _ETH_CheckLinkUp
                   _ETH_RemovePacket
                     _ETH_SendQueued
               _ETH_Shift_Tx_Packets
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (3) _ETH_RemovePacket                                     6     4      2     276
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _ETH_CheckLinkUp                                      4     4      0     278
                                             29 COMRAM     4     4      0
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (5) _PHY_Read                                             9     5      4     244
                                             20 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (6) _PHY_WaitForBusy                                      2     2      0     170
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          5     5      0   68504
                                             81 BANK0      5     5      0
                   _sendDHCPDISCOVER
                    _sendDHCPREQUEST
                               _time
 ---------------------------------------------------------------------------------
 (4) _time                                                 9     5      4     644
                                             18 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (6) _sendDHCPREQUEST                                      0     0      0   33886
                        _sendRequest
 ---------------------------------------------------------------------------------
 (3) _sendDHCPDISCOVER                                     1     1      0   33909
                                             80 BANK0      1     1      0
                               _lfsr
                        _sendRequest
 ---------------------------------------------------------------------------------
 (7) _sendRequest                                          2     2      0   33886
                                             56 COMRAM     2     2      0
                    _DHCP_WriteZeros
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                    _ETH_WriteString
                           _UDP_Send
                          _UDP_Start
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               6     4      2     400
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _UDP_Start                                            9     1      8   17510
                                             53 COMRAM     1     1      0
                                             72 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5   14497
                                             48 COMRAM     5     0      5
                                             57 BANK0     15    15      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4    2554
                                             18 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Write16                                          2     0      2    2042
                                             18 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       61    57      4    5558
                                             44 COMRAM     4     0      4
                                              0 BANK0     57    57      0
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     748
                                             18 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       8     4      4    2756
                                             36 COMRAM     8     4      4
                     _ETH_EdataWrite
                      _ETH_NewPacket
                 _ETH_ResetByteCount
               _ETH_Shift_Tx_Packets
                              _putch
 ---------------------------------------------------------------------------------
 (7) _ETH_Shift_Tx_Packets                                12    12      0    1333
                                             24 COMRAM    12    12      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_NewPacket                                        5     3      2     502
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4    1186
                                             18 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     257
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (8) _UDP_Send                                             9     9      0    9716
                                             15 BANK0      9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           11     9      2    4968
                                             54 COMRAM     2     0      2
                                              6 BANK0      9     9      0
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               24    18      6    2350
                                             36 COMRAM    18    12      6
                                              0 BANK0      6     6      0
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (7) _ETH_ComputeChecksum                                 18    14      4     774
                                             18 COMRAM    18    14      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (8) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             6     6      0      34
                                             22 COMRAM     6     6      0
                     _ETH_SendQueued
                              _putch
 ---------------------------------------------------------------------------------
 (8) _ETH_SendQueued                                       4     4      0       0
                                             18 COMRAM     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                          10     4      6    2020
                                             18 COMRAM    10     4      6
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (9) _ETH_GetByteCount                                     4     2      2       0
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ETH_WriteString                                      4     2      2     168
                                             18 COMRAM     4     2      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (8) _DHCP_WriteZeros                                      2     0      2     152
                                             19 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      31
                                             18 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _lfsr                                                 1     1      0      23
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0      70
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                         18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (16) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _rtcc_handler *
 ---------------------------------------------------------------------------------
 (17) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _sendDHCPDISCOVER
         _lfsr
         _sendRequest
           _DHCP_WriteZeros
             _ETH_Write8
               _ETH_EdataWrite
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteBlock
             _ETH_EdataWrite
           _ETH_WriteString
             _ETH_EdataWrite
           _UDP_Send
             _ETH_GetByteCount
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
           _UDP_Start
             _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _strlen
       _sendDHCPREQUEST
         _sendRequest
           _DHCP_WriteZeros
             _ETH_Write8
               _ETH_EdataWrite
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteBlock
             _ETH_EdataWrite
           _ETH_WriteString
             _ETH_EdataWrite
           _UDP_Send
             _ETH_GetByteCount
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
           _UDP_Start
             _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _strlen
       _time
     _ETH_EventHandler
       _ETH_CheckLinkUp
         _PHY_Read
           _PHY_WaitForBusy
       _ETH_RemovePacket
       _ETH_SendQueued
         _putch
       _ETH_Shift_Tx_Packets
         ___wmul
       _PHY_Read
         _PHY_WaitForBusy
     _Network_Read
       _ARPV4_Packet
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_Send
           _ETH_SendQueued
             _putch
           _putch
         _ETH_WriteBlock
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_NewPacket
           _ETH_ResetByteCount
           _ETH_Shift_Tx_Packets
             ___wmul
           _putch
         _memcpy
       _ETH_Flush
       _ETH_NextPacketUpdate
         _ETH_EdataRead
       _ETH_ReadBlock
         _ETH_EdataRead
       _IPV4_Packet
         _ETH_Dump
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_RxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ICMP_Receive
           _ETH_Dump
           _ETH_Read16
             _ETH_EdataRead
           _ETH_ReadBlock
             _ETH_EdataRead
           _ICMP_EchoReply
             _ETH_Copy
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Read16
               _ETH_EdataRead
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
         _IPV4_PseudoHeaderChecksum
         _IPV4_SaveStartPosition
           _ETH_GetReadPtr
         _TCP_Recv
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _ETH_EdataRead
               _TCP_Snd
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                     _ETH_SendQueued
                       _putch
                     _putch
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                     _memcpy
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_NewPacket
                     _ETH_ResetByteCount
                     _ETH_Shift_Tx_Packets
                       ___wmul
                     _putch
             _TCP_Snd
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _IPV4_Send
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_Send
                     _ETH_SendQueued
                       _putch
                     _putch
                   _ETH_WriteBlock
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_NewPacket
                     _ETH_ResetByteCount
                     _ETH_Shift_Tx_Packets
                       ___wmul
                     _putch
                   _memcpy
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
             _isPortUnreachable
             _resetPortUnreachable
           _TCP_ParseTCPOptions
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
         _UDP_Receive
           _DHCP_Handler *
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _ETH_ReadBlock
               _ETH_EdataRead
             _memcmp
             _sendDHCPDECLINE
               _sendRequest
                 _DHCP_WriteZeros
                   _ETH_Write8
                     _ETH_EdataWrite
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteString
                   _ETH_EdataWrite
                 _UDP_Send
                   _ETH_GetByteCount
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                   _IPV4_Send
                     _ETH_Insert
                       _ETH_EdataWrite
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_TxComputeChecksum
                       _ETH_ComputeChecksum
                         _ETH_EdataRead
                 _UDP_Start
                   _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _IPv4_Start
                     _ARPV4_Lookup
                     _ARPV4_Request
                       _ETH_Send
                         _ETH_SendQueued
                           _putch
                         _putch
                       _ETH_WriteBlock
                         _ETH_EdataWrite
                       _ETH_WriteStart
                         _ETH_EdataWrite
                         _ETH_NewPacket
                         _ETH_ResetByteCount
                         _ETH_Shift_Tx_Packets
                           ___wmul
                         _putch
                       _memcpy
                     _ETH_Write16
                       _ETH_EdataWrite
                     _ETH_Write32
                       _ETH_EdataWrite
                     _ETH_Write8
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                 _strlen
             _sendDHCPREQUEST
               _sendRequest
                 _DHCP_WriteZeros
                   _ETH_Write8
                     _ETH_EdataWrite
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteString
                   _ETH_EdataWrite
                 _UDP_Send
                   _ETH_GetByteCount
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                   _IPV4_Send
                     _ETH_Insert
                       _ETH_EdataWrite
                     _ETH_Send
                       _ETH_SendQueued
                         _putch
                       _putch
                     _ETH_TxComputeChecksum
                       _ETH_ComputeChecksum
                         _ETH_EdataRead
                 _UDP_Start
                   _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _IPv4_Start
                     _ARPV4_Lookup
                     _ARPV4_Request
                       _ETH_Send
                         _ETH_SendQueued
                           _putch
                         _putch
                       _ETH_WriteBlock
                         _ETH_EdataWrite
                       _ETH_WriteStart
                         _ETH_EdataWrite
                         _ETH_NewPacket
                         _ETH_ResetByteCount
                         _ETH_Shift_Tx_Packets
                           ___wmul
                         _putch
                       _memcpy
                     _ETH_Write16
                       _ETH_EdataWrite
                     _ETH_Write32
                       _ETH_EdataWrite
                     _ETH_Write8
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_NewPacket
                       _ETH_ResetByteCount
                       _ETH_Shift_Tx_Packets
                         ___wmul
                       _putch
                 _strlen
             _strlen
           _DNS_Handler *
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _strcmp
             _time
           _ETH_ReadBlock *
             _ETH_EdataRead
           _ICMP_PortUnreachable *
             _ETH_Copy
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_SetReadPtr
               _IPV4_GetStartPosition (ARG)
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _IPV4_GetStartPosition
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
           _IPV4_GetDatagramLength *
           _NTP_Handler *
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _rtcc_set
           _udp_table_getIterator *
           _udp_table_nextEntry *
             _udp_table_getIterator
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ETH_SendQueued
                     _putch
                   _putch
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_NewPacket
                   _ETH_ResetByteCount
                   _ETH_Shift_Tx_Packets
                     ___wmul
                   _putch
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
               _ETH_SendQueued
                 _putch
               _putch
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_Send
                 _ETH_SendQueued
                   _putch
                 _putch
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_NewPacket
                 _ETH_ResetByteCount
                 _ETH_Shift_Tx_Packets
                   ___wmul
                 _putch
               _memcpy
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_NewPacket
               _ETH_ResetByteCount
               _ETH_Shift_Tx_Packets
                 ___wmul
               _putch
         _isPortUnreachable
         _resetPortUnreachable
     _time
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECCP1_Initialize
     _INTERRUPT_Initialize
     _Network_Init
       _ARPV4_Init
         _ETH_GetMAC
       _DHCP_init
       _ETH_Init
         _ETH_CheckLinkUp
           _PHY_Read
             _PHY_WaitForBusy
         _ETH_Flush
         _ETH_PacketListReset
         _MAC_getAddress
         _PHY_Write
           _PHY_WaitForBusy
         _printf
           __doprnt
             Absolute function(Fake) *
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
       _IPV4_Init
         _ipdb_init
       _Network_WaitForLink
         _ETH_CheckLinkUp
           _PHY_Read
             _PHY_WaitForBusy
       _TCP_Init
       _rtcc_init
         _TMR1_SetInterruptHandler
       _timersInit
         _time
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      80      15       50.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      AB      11       66.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100     38      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4DE      29        0.0%
DATA                 0      0     4DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Nov 29 18:17:59 2017

                  _IPV4_GetDatagramLength 6A54             __size_of_resetPortUnreachable 000C  
                    __end_of_DHCP_Handler 30C2                 ETH_Shift_Tx_Packets@pElem 0023  
                     ___wmul@multiplicand 0015                          ??_ICMP_EchoReply 00AA  
               ETH_Shift_Tx_Packets@timer 001F               ??_IPV4_PseudoHeaderChecksum 0015  
                         _timer0ReloadVal 0047                            ??_ICMP_Receive 00BB  
                            __CFG_CP0$OFF 000000                     ETH_WriteString@length 0015  
                                     l320 2712                                       l312 665A  
                                     l321 2B9C                                       l322 29F2  
                                     l332 6754                                       l325 2898  
                                     l501 3AC4                                       l342 6170  
                                     l511 6116                                       l344 61A0  
                                     l600 658C                                       l601 657A  
                                     l338 37CC                                       l506 6868  
                                     l611 3F6A                                       l531 6690  
                                     l515 614A                                       l701 5036  
                                     l533 669E                                       l702 500A  
                                     l614 3F8A                                       l534 669C  
                                     l616 3FA0                                       l536 66A8  
                                     l552 68B8                                       l633 59B2  
                                     l705 50C0                                       l617 3FB6  
                                     l545 5EFA                                       l553 68BA  
                                     WREG 000FE8                                       l626 5928  
                                     l706 506E                                       l618 3FCE  
                                     l546 5EE8                                       l628 5932  
                                     l548 5F02                                       l572 629C  
                                     l492 3A9A                                       l645 602E  
                                     l573 6276                                       l557 652A  
                                     l646 601C                                       l638 5DA8  
                                     l662 5F7E                                       l654 66F8  
                                     l558 652C                                       l567 61FA  
                                     l592 63CC                                       l568 61FC  
                                     l593 63B0                                       l497 3AAE  
                                     l913 5BD2                                       l690 4808  
                                     l674 58E6                                       l666 5870  
                                     l498 3AA6                                       l683 479E  
                                     l659 5F72                                       l675 58E4  
                                     l667 586E                                       l915 5BFA  
                                     l780 4556                                       l684 479C  
                  __size_of_ETH_EdataRead 000A                                       l773 457C  
                                     l765 6396                                       l774 43B0  
                                     l694 48EA                                       l766 6382  
                                     l775 457A                                       l695 48D2  
                                     l791 55BE                                       l679 590A  
                                     l847 5678                                       l696 483E  
                                     l848 564E                                       l768 63A4  
                                     l689 480A                                       l778 4526  
                                     l890 3F52                                       l874 2540  
                                     l866 24C4                                       l875 259A  
                                     _EIE 000EFB                                       l884 3E9A  
                                     l868 264A                                       l885 3E48  
                                     l789 557A                                       l877 263C  
                                     l869 24E2                                       l886 3E58  
                                     l889 3EA4                                       l993 5E70  
                                     _GIE 007F97                                       l999 5AB2  
                             ?_ETH_GetMAC 0013                                       _PR2 000FCB  
                       DNS_Handler@dnsPtr 00CE                        ICMP_EchoReply@cksm 00B4  
                       DNS_Handler@answer 00CA                   IPv4_Start@targetAddress 00A1  
                         _timer1ReloadVal 0049           ETH_Shift_Tx_Packets@shiftOffset 001D  
                             ?_ETH_Read32 0013                               ?_ETH_Read16 0013  
                                     _ntp 02F6                         DNS_Handler@length 00B0  
                   ETH_WriteString@string 0013                              UDP_Start@ret 0036  
                         _TMR2_Initialize 6A44                              ?_DNS_Handler 00B0  
                                     prod 000FF3                      TCP_Snd@tcpDataLength 00D1  
                      __size_of_DHCP_init 0002                     ??_ETH_ComputeChecksum 0017  
                                     tosl 000FFD                                       wreg 000FE8  
                             ?_ETH_Insert 0013                              __CFG_IESO$ON 000000  
                    udp_table_nextEntry@i 0015                      udp_table_nextEntry@j 0017  
                             ?_ETH_Write8 0001                                      EDATA 000F61  
               TCP_FiniteStateMachine@ret 0100                           ?_Network_Manage 0001  
                            __CFG_WDT$OFF 000000                                      l1001 5AF0  
                                    l1002 5AA6                                      l1003 5AAC  
                                    l1103 5480                                      l2000 1A22  
                                    l2001 1992                                      l1114 533E  
                                    l2002 1A5E                                      l2003 1A88  
                                    l1060 698C                                      l1036 6252  
                                    l1109 4BE2                                      l1118 6A14  
                                    l1231 5404                                      l1240 46EC  
                                    l1313 4396                                      l1401 2FB2  
                                    l1314 4204                                      l1330 4DCE  
                                    l1227 60FE                                      l1315 4218  
                                    l1331 4DD8                                      l1235 474C  
                                    l1316 4326                                      l1340 4E68  
                                    l1332 4DEA                                      l1501 395C  
                                    l1326 4E6C                                      l1334 4DF6  
                                    l1502 3936                                      l1350 2BD0  
                                    l1238 4700                                      l1327 4DA4  
                                    l1511 3A6A                                      l1503 3932  
                                    l1423 3074                                      l1239 4668  
                                    l1432 69EE                                      l1328 4E8A  
                                    l1336 4E2A                                      l1344 2BDE  
                                    l1433 69E8                                      l1329 4DBA  
                                    l1601 1E4C                                      l1425 307A  
                                    l1345 2BA6                                      l1338 4E62  
                                    l1098 54C2                                      l1610 20CC  
                                    l1370 2F6E                                      l1186 6610  
                                    l1099 546E                                      l1371 2DFA  
                                    l1347 2BFC                                      l1612 211C  
                                    l1604 1E90                                      l1508 39BA  
                                    l1380 2EB6                                      l1372 2E10  
                                    l1348 2BB2                                      l1605 1EBC  
                                    l1701 06E2                                      l1509 39D2  
                                    l1373 2E62                                      l1349 2BC2  
                                    l1606 1EE8                                      l1710 0792  
                                    l1702 06F8                                      l1622 4FF4  
                                    l1382 2EC2                                      l1374 2E18  
                                    l1607 1F9E                                      l1703 0758  
                                    l1623 4FE8                                      l1631 4F16  
                                    l1375 2E5E                                      l1367 2DBA  
                                    l2351 69A8                                      l1608 207C  
                                    l1800 12EE                                      l1720 08AC  
                                    l1368 2F3E                                      l1384 2F0A  
                                    l1609 201A                                      l1617 4C20  
                                    l1705 0744                                      l1625 4EF0  
                                    l1385 2F26                                      l1377 2E6A  
                                    l1369 2DE4                                      l1618 4C34  
                                    l1802 134E                                      l1714 0C28  
                                    l1730 0B60                                      l1626 4FC0  
                                    l1650 3186                                      l1386 2F32  
                                    l1378 2EBA                                      l1715 07DA  
                                    l1627 4EF8                                      l1651 31A8  
                                    l1379 2E70                                      l2620 62C6  
                                    l1724 09E8                                      l1644 4FF8  
                                    l2612 63FA                                      l1492 388C  
                                    l1396 30AA                                      l2461 6468  
                                    l2621 62C2                                      l1741 0E74  
                                    l1725 0A58                                      l1629 4FD6  
                                    l1637 4F62                                      l1661 328C  
                                    l1653 31C0                                      l2613 63F2  
                                    l1397 2F80                                      l2381 5C8C  
                                    l2462 6448                                      l1750 0FEE  
                                    l1638 4FB4                                      l1670 32CC  
                                    l1662 327C                                      l2454 5A3E  
                                    l1494 386E                                      l1398 2FA4  
                                    l2382 5C9A                                      l1735 1074  
                                    l1743 0EA0                                      l2455 59BA  
                                    l1495 3854                                      l2391 5FC8  
                                    l1680 138E                                      l1752 101E  
                                    l1736 0C52                                      l2456 5A36  
                                    l2392 5FD6                                      l1753 103E  
                                    l1729 0B3E                                      l1673 32F0  
                                    l1665 32B4                                      l2377 5C58  
                                    l1762 10CA                                      l1690 01D8  
                                    l1682 01C4                                      l1666 32A4  
                                    l1498 3964                                      l2378 5C4C  
                                    l1771 11F2                                      l1763 10F2  
                                    l1747 0ED8                                      l1683 0050  
                                    l1499 38DE                                      l2387 5FA0  
                                    l1923 6A7C                                      l1772 1184  
                                    l1692 02EA                                      l2388 5F94  
                                    l1940 1450                                      l1765 1110  
                                    l1749 0EFC                                      l1693 04A0  
                                    l1685 01B0                                      l1669 32DC  
                                    l1782 120A                                      l1758 1166  
                                    l1766 1130                                      l1870 4A40  
                                    l1942 14FC                                      l1687 13E2  
                                    l1783 1204                                      l1775 119C  
                                    l1759 10A4                                      l1871 4936  
                                    l1951 1508                                      l1943 14E2  
                                    l1792 126C                                      l1776 11BC  
                                    l1960 1552                                      l1944 14A6  
                                    l1793 128C                                      l1689 07A8  
                                    l1697 04FA                                      l1698 0688  
                                    l1970 1752                                      l1954 16C4  
                                    l1938 140A                                      l1787 12C2  
                                    l1875 4A26                                      l1971 1706  
                                    l1955 150C                                      l1939 147C  
                                    l1788 1216                                      l1876 4A08  
                                    l1972 1738                                      l1948 1678  
                                    l1964 15AC                                      l1797 12DA  
                                    l1869 492C                                      l1965 1610  
                                    l1957 1510                                      l1966 1660  
                                    l1958 1548                                      l1799 137C  
                                    l1991 18AC                                      l1975 1788  
                                    l1959 1558                                      l1984 1870  
                                    l1976 17BC                                      l1993 18F4  
                                    l1985 1818                                      l1969 1672  
                                    l1978 185A                                      l1979 17D6  
                                    l1997 1A0A                                      l1989 188C  
                                    l1998 1912                                      l8200 5BF2  
                                    l8188 5BCA                                      l8394 6652  
                                    l9724 6448                                      l6988 59BA  
                                    l8792 674C                                      l9840 6168  
                                    l9850 61A0                                      l9870 601C  
                                    STR_1 FF4B                                      l9776 500A  
                                    STR_2 FFFC                                      STR_4 FFDF  
                                    STR_5 FF85                                      STR_6 FFEB  
                                    STR_7 FFA2                                      STR_8 FFBC  
                                    STR_9 FFF5                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _LATF 000F8E                                      _LATG 000F8F  
                           __CFG_DEBUG$ON 000000                                      u5410 6230  
                                    u7110 569C                                      u5520 642A  
                                    u5440 673C                                      u5425 6232  
                                    u7115 5692                                      _MIRD 000EB8  
                                    i2l22 005E                                      u5470 59E8  
                                    u7070 5BEE                                      i2l24 006A  
                                    u9010 4036                                      u5490 5A10  
                                    u7410 6672                                      u7090 5C16  
                                    u9020 4068                                      u5477 59DE  
                                    u9030 409A                                      u9040 40CC  
                                    u9200 3724                                      u9017 402C  
                                    u5497 5A06                                      u9130 59A8  
                                    u9050 40FE                                      u9027 405E  
                                    u9060 4130                                      u9300 3D5A  
                                    u9037 4090                                      u9205 371A  
                                    u9310 3D86                                      u9047 40C2  
                                    u9160 508C                                      u9080 659C  
                                    u9320 3DB0                                      u9057 40F4  
                                    u9170 50DE                                      u9250 61AC  
                                    u9330 3DDA                                      u9067 4126  
                                    u9420 62E8                                      u9500 1D64  
                                    _MIWR 000EB6                                      u9165 5082  
                                    u9190 3634                                      u9175 50D4  
                                    u9280 3D38                                      u9520 1E42  
                                    u9505 1D5A                                      u9290 3D48  
                                    u9450 62AE                                      u9195 362A  
                                    u9427 62DE                                      u8820 47B0  
                                    u9700 5882                                      u9630 6696  
                       ??_PHY_WaitForBusy 0013                                      u8850 481C  
                                    u9490 1C34                                      u9740 58F8  
                                    u9820 5C5C                                      u9670 6510  
                                    u9495 1C2A                                      u9680 61D4  
                                    u9850 5FA4                                      u9960 2C16  
                                    _TMR1 000FCE                                      _TMR2 000FCC  
                                    u9971 2C20                                      u9980 2C4A  
                                    u9991 2C58                   __size_of_ETH_EdataWrite 0006  
                           __CFG_FCMEN$ON 000000                              __CFG_STVR$ON 000000  
                         __end_of_TCP_Snd 2120                        DNS_Handler@nameLen 00C9  
                         _TCP_PayloadSave 4BE6                                      _main 6A74  
                                    _lfsr 6972                                      _time 620E  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004D  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00B6                             __CFG_FOSC2$ON 000000  
                       ?_ETH_RemovePacket 0013                           ETH_EdataWrite@d 0001  
                            ?_IPV4_Packet 0001                makeIpv4AddresstoStr@ip_str 036C  
              ??_TMR1_SetInterruptHandler 0016                      _ETH_Shift_Tx_Packets 4754  
                      __size_of_ETH_Read8 0026                        __size_of_ETH_Flush 006E  
                  __size_of_ETH_ReadBlock 0054                              ___param_bank 000000  
                      __size_of_IPV4_Init 0006                        __size_of_IPV4_Send 009E  
                 __end_of_ETH_WriteString 63F0                    __size_of_ETH_NewPacket 01F2  
                      ??_ETH_RemovePacket 0015                              ?_ETH_Write32 0013  
                            ?_ETH_Write16 0013                   __size_of_ETH_GetReadPtr 000A  
                        ARPV4_Request@ret 007C                   __end_of_TMR0_Initialize 65E2  
                     __size_of_ARPV4_Init 0032                  __size_of_ETH_CheckLinkUp 002A  
          ??_TMR0_DefaultInterruptHandler 0001                   ?_TCP_FiniteStateMachine 0001  
          __size_of_OSCILLATOR_Initialize 000A                  __size_of_sendDHCPDECLINE 0008  
                        _ETH_GetByteCount 6908             __end_of_OSCILLATOR_Initialize 6AEA  
                                   l10012 69E8                                     l10240 58BA  
                        __end_of_ETH_Copy 5910                                     l10176 6688  
                                   l10264 6A14                                     l11216 15AC  
                                   l11138 1348                                     l11430 54C2  
                                   l11326 1A7A                                     l11318 1A0A  
                                   l11262 17DA                                     l10640 3932  
                                   l11506 31A8                                     l10626 388C  
                                   l10554 2F1E                          __end_of_ETH_Dump 6712  
                                   l10820 02E4                                     l10740 4FB0  
                                   l11276 181C                                     l10654 3978  
                                   l11464 46E4                                     l11562 26A0  
                                   l10922 08AA                                     l11466 46EC  
                                   l12370 5AE6                                     l10668 39CA  
                                   l12372 5AEC                          __end_of_ETH_Init 3D1C  
                                   l12374 54F8                                     l10934 09E0  
                                   l10838 048C                                     l11742 237E  
                                   l11592 286A                                     l11576 2712  
                                   l12376 5502                                     l11760 246A  
                                   l11752 23F4                                     l12368 5AD6  
                                   l11756 2432                         _nextPacketPointer 003F  
                        __end_of_ETH_Send 59B8                                     ?_main 0001  
                                   ?_lfsr 0001                                     STR_10 FFCE  
                                   _ECON1 000FD2                                     _ECON2 000EFE  
                                   ?_time 0013       IPV4_PseudoHeaderChecksum@payloadLen 0013  
                                   u10011 2C86                           __end_of___lldiv 5CAC  
                                   u10020 2CBC                                     u10030 2CCC  
                                   u10040 2CF4                                     u10050 2D04  
                                   u11010 1606                                     u10300 396C  
                                   u11020 164A                                     u10230 37EE  
                                   u10151 2F7E                                     u10400 4F22  
                                   u10080 2D78                                     u11008 15D2  
                                   u10241 3818                                     u11017 15FC  
                                   u11009 1608                                     u10330 39C6  
                                   u10171 2F92                                     u10091 2DAC  
                                   u11027 1640                                     u10501 056C  
                                   u11230 1A9A                                     u11320 45BA  
                                   u11240 1AB8                                     u11208 18DE  
                                   _T0CON 000FD5                                     u10611 08D2  
                                   u11420 31DC                                     u11228 1A48  
                                   u10701 0C9E                                     u10621 08EE  
                                   u11270 5F68                                     u10631 0916  
                                   u10471 035C                                     u11440 3200  
                                   u11360 470A                                     _T1CON 000FCD  
                                   u11601 2704                                     u10641 0978  
                         __end_of___llmod 5FE8                                     u11610 271E  
                                   u11450 3218                                     u10651 0A6E  
                                   u10571 07F0                                     u11700 2976  
                                   u11540 33AA                                     u10661 0A96  
                                   u11630 27DA                                     u11550 34BE  
                                   u11358 46CA                                     u11359 46E4  
                                   _T2CON 000FCA                                     u11705 296C  
                                   u11641 284E                                     u11545 33A0  
                                   u11810 2228                                     u11731 2A22  
                                   u11635 27D0                                     u10851 123C  
                                   u10691 0C78                                     u11555 34B4  
                                   u11740 2B2A                                     u11900 2432  
                                   u11820 2320                                     u10861 1256  
                                   u10950 1586                                     u10918 143A  
                                   u11750 3AA0                                     u11815 221E  
                                   u11680 28A4                                     u11920 246A  
                                   u11840 2398                                     u11745 2B20  
                                   u11825 2316                                     u11930 247A  
                                   u11691 28C2                                     u11931 2478  
                                   u11860 23B6                                     u10957 157C  
                                   u11880 23F4                                     u11990 2602  
                                   _MAIPG 000EA6                                     _ERDPT 000F7A  
                      __size_of_TCB_Reset 011A                                     _MICMD 000EB2  
                                   _ERXND 000EEA                                     _ETXND 000EE6  
                                   _ERXST 000EE8                                     _EWRPT 000EE2  
                                   _ETXST 000EE4                                     _TMR0H 000FD7  
                                   _TMR1H 000FCF                                     _TMR0L 000FD6  
                                   _TMR1L 000FCE                           __end_of__doprnt 1AC2  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _TRISF 000F97  
                                   _TRISG 000F98                                     _RXRST 007E96  
          __size_of_ETH_TxComputeChecksum 00D8         __size_of_TMR0_SetInterruptHandler 000E  
           __end_of_ETH_TxComputeChecksum 57B2                 ?_TMR0_SetInterruptHandler 0013  
                    __size_of_DHCP_Manage 015A                          __end_of_TMR0_ISR 679C  
                        __end_of_TMR1_ISR 67C8                          __end_of_TCP_Init 6846  
                __size_of_sendDHCPREQUEST 0008                                     _pHead 0043  
                        __end_of_TCP_Recv 351E                               ?_IPv4_Start 0031  
                        __end_of_PHY_Read 5F14                                     _pTail 0041  
                         __end_of_dpowers FEEF                          __end_of_UDP_Send 5432  
                             ?_TCP_Update 0001                           __end_of_isdigit 69B0  
                                   _putch 6B5E                    DHCP_Handler@acceptNACK 0122  
                      __size_of_PHY_Write 0028                   __end_of_TMR1_Initialize 681C  
                      __size_of_UDP_Start 005C                 __size_of_ETH_EventHandler 005A  
               _IPV4_PseudoHeaderChecksum 55FA                                     pclath 000FFA  
         TCP_FiniteStateMachine@nextState 0104                                     tablat 000FF5  
                                   time@t 0013                       _udp_table_nextEntry 65E2  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   status 000FD8                                     wtemp6 004E  
                           _ETH_EdataRead 6B26                    ?_IPV4_GetStartPosition 0013  
              ETH_RxComputeChecksum@rxptr 002D                  __size_of_SPI1_Initialize 000E  
                     __size_of_ETH_GetMAC 005E                            __CFG_ETHLED$ON 000000  
                   ?_ETH_Shift_Tx_Packets 0001             ETH_TxComputeChecksum@position 0025  
                       __end_of_DHCP_init 6B5E                       __size_of_ETH_Read16 003C  
                     __size_of_ETH_Read32 0058                      __end_of_ARPV4_Packet 2BA4  
                         __initialization 57B2                       __size_of_ETH_Insert 0060  
                    __end_of_ARPV4_Lookup 61B6                              __end_of_main 6A82  
                            __end_of_lfsr 6992                      __end_of_ARPV4_Update 676E  
                            __end_of_time 6264                              _xorSequences FF0F  
          __end_of_TCP_FiniteStateMachine 1408                           rtcc_set@gie_val 0015  
                     __size_of_ETH_Write8 000A                               ETH_Copy@len 0019  
                 __end_of_TMR2_Initialize 6A54               ?_INTERRUPT_InterruptManager 0001  
                    ?_udp_table_nextEntry 0015                               ETH_Init@mac 0087  
                         _DHCP_WriteZeros 69E6                  ETH_TxComputeChecksum@len 0027  
                                  ??_main 003B                                    ??_lfsr 0013  
                                  ??_time 0017                             __activetblptr 000003  
                          _MAC_getAddress 6AEA              __end_of_ICMP_PortUnreachable 5340  
                     _TCP_ParseTCPOptions 4EB4                              ?_sendRequest 0001  
                 ETH_WriteStart@ethPacket 002B                    ETH_PacketListReset@ptr 0013  
                           _ETH_ReadBlock 6264                           TCP_Snd@txHeader 00D3  
                       __end_of_ETH_Read8 68BE                             _ETH_NewPacket 439A  
                       __end_of_ETH_Flush 5F82                         ETH_Send@packetEnd 001B  
                 __end_of_TCP_PayloadSave 4D5A                         __end_of_IPV4_Init 6B50  
                       __end_of_IPV4_Send 5B94                                 ??_TCP_Snd 00AA  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                           ipdb_init@x_2014 0014  
                        ___llmod@dividend 0020                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR1L 000FBE                            ETH_Dump@length 0013  
                                  _EDMAND 000EF2                                    _EDMAST 000EF0  
                                  ?_putch 0001                                    _MAADR1 000E84  
                                  _MAADR2 000E85                                    _MAADR3 000E82  
                                  _MAADR4 000E83                                    _MAADR5 000E80  
                                  _MAADR6 000E81                   __size_of_ETH_SetReadPtr 000A  
                                  _MACON1 000EA0                                    _MACON3 000EA2  
                                  _MACON4 000EA3                      DNS_Handler@ipAddress 00BD  
                                  _MAMXFL 000EAA                   __size_of_ETH_SendQueued 0080  
                                  _INTCON 000FF2                                    _OSCCON 000FD3  
                          ?_ETH_EdataRead 0001                      __end_of_ICMP_Receive 5518  
                            DNS_Handler@i 00D0                              DNS_Handler@v 00C5  
                            DNS_Handler@x 00D1                          __end_of_dhcpName FF3F  
                    ?_TCP_ParseTCPOptions 0001                         __end_of_TCB_Reset 523A  
                   __size_of_DHCP_Handler 051E              __size_of_ETH_PacketListReset 004A  
                          __CFG_XINST$OFF 000000                  __end_of_sendDHCPDISCOVER 5D2C  
    __end_of_TMR1_DefaultInterruptHandler 6B62     __size_of_TMR1_DefaultInterruptHandler 0002  
            _TMR1_DefaultInterruptHandler 6B60                            ETH_ReadBlock@p 0019  
                      _ETH_ResetByteCount 6B1C                      TCP_Snd@payloadLength 00CE  
                   ICMP_EchoReply@ipv4Hdr 00A8                          ?_ETH_WriteString 0013  
                                  ___wmul 68BE                                 ??___lldiv 001B  
                     __size_of_IPv4_Start 023C                                    _arpMap 0304  
                               ??___llmod 0028                       __size_of_TCP_Update 0182  
                       __end_of_PHY_Write 6898                     ??_udp_table_nextEntry 0017  
                                  _memcmp 59B8                                 ??__doprnt 002F  
                                  _memcpy 6436                          ?_TMR0_Initialize 0001  
                       __end_of_UDP_Start 6102                                    clear_0 5822  
                                  clear_1 582E                                    clear_2 583A  
                                  clear_3 5846                                    clear_4 5852  
                  __end_of_MAC_getAddress 6AF4                                    _tcpMss 004B  
                                  _txData 0400                    DHCP_Handler@count_3183 0120  
                            __doprnt@flag 0065                      __end_of_broadcastMAC FF4B  
                                  _printf 6536                       ?_ETH_ResetByteCount 0001  
                            __doprnt@prec 006A                                    _strcmp 63F0  
                                  _strlen 62B8                    ETH_ComputeChecksum@len 0013  
       ICMP_PortUnreachable@destIPAddress 00AC                           UDP_Start@destIP 00A8  
                            __pdataCOMRAM 004B                                 ??_isdigit 0013  
                          ?_ETH_ReadBlock 0013                              ?_UDP_Receive 00D5  
                            __mediumconst FEC6                         ??_ETH_CheckLinkUp 001E  
                          ?_ETH_NewPacket 0013                          __end_of_rtcc_set 6740  
                     ETH_SetReadPtr@rdptr 0015                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                       ??_sendDHCPDECLINE 003B                                    putch@c 0001  
                            ?_NTP_Handler 00B0              __size_of_Network_WaitForLink 000C  
                    __size_of_DNS_Handler 02A8  TMR0_SetInterruptHandler@InterruptHandler 0013  
TMR1_SetInterruptHandler@InterruptHandler 0013                              ??_ARPV4_Init 0015  
                       ?_ECCP1_Initialize 0001                     DHCP_WriteZeros@length 0014  
                            _DHCP_Handler 2BA4                             DHCP_Handler@a 0110  
           __size_of_INTERRUPT_Initialize 0004                     __end_of_TMR1_CallBack 6950  
                          _ETH_EdataWrite 6B50                   ?_IPV4_SaveStartPosition 0001  
                        ?_TMR1_Initialize 0001                            ETH_Insert@data 0013  
                         __CFG_FOSC$HSPLL 000000                         _SYSTEM_Initialize 67C8  
                      ??_ECCP1_Initialize 0013                                __accesstop 0060  
                 __end_of__initialization 5858                      ??_ETH_ResetByteCount 0013  
                       ??_sendDHCPREQUEST 003B                     ??_TCP_ParseTCPOptions 0017  
                      ?_SYSTEM_Initialize 0001                                 ?_ETH_Copy 0019  
                  ??_ETH_Shift_Tx_Packets 0019                                 ?_ETH_Dump 0013  
                               ?_ETH_Init 0001                                 ?_ETH_Send 0001  
                           ___rparam_used 000001                   ?_IPV4_GetDatagramLength 0013  
                           ?_Network_Init 0001                             ?_Network_Read 0001  
                  IPV4_Send@payloadLength 0037                     IPv4_Start@destAddress 0031  
                 __end_of_DHCP_WriteZeros 6A00                DHCP_Manage@managementTimer 022E  
                          __pcstackCOMRAM 0001                              __pidataBANK1 6B64  
                            __pidataBANK2 661A                              __pidataBANK3 66B2  
                     ??_SYSTEM_Initialize 003A                     _ETH_RxComputeChecksum 630C  
                 __size_of_ETH_WriteBlock 003A                            _ETH_GetReadPtr 6B12  
                               ?_TMR0_ISR 0001                      __size_of_IPV4_Packet 0542  
                               ?_TMR1_ISR 0001                     __end_of_ARPV4_Request 37D0  
           ?_TMR1_DefaultInterruptHandler 0001                                 ?_TCP_Init 0001  
                               ?_TCP_Recv 0105                                 ?_PHY_Read 0015  
                       ??_SPI1_Initialize 0013                   __size_of_ETH_WriteStart 0222  
                               ?_UDP_Send 0001                             __end_of_putch 6B60  
                        ?_TMR2_Initialize 0001                     _udp_table_getIterator 6AF4  
                      PHY_WaitForBusy@ret 0013                      __size_of_ETH_Write16 000E  
                    __size_of_ETH_Write32 001A                           ?_MAC_getAddress 0013  
                      __end_of_ARPV4_Init 6680         TCP_ParseTCPOptions@tcpOptionsSize 001B  
            __end_of_ETH_NextPacketUpdate 64FA                              ??_ETH_GetMAC 0015  
                         ETH_Copy@tmp_len 001D                           _PHY_WaitForBusy 6680  
                            ETH_Read8@ret 0013                              ??_ETH_Read32 0017  
                            ??_ETH_Read16 0015                          ??_Network_Manage 02C1  
                            ??_ETH_Insert 0019              __end_of_resetPortUnreachable 6AE0  
                            ??_ETH_Write8 0013                  DHCP_Handler@optionLength 0124  
                        ?_TCP_PayloadSave 00E7                                __doprnt@ap 002D  
                              __doprnt@cp 0063                    __end_of_ETH_EdataWrite 6B56  
                              __doprnt@pb 0029                      ETH_ComputeChecksum@v 0023  
          __end_of_IPV4_SaveStartPosition 6ABA                 __end_of_SYSTEM_Initialize 67F2  
                                 ??_putch 0013                           ??_ETH_EdataRead 0013  
                       _ipv4StartPosition 024E                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                              __pbssBANK5 0500                          _ETH_EventHandler 6102  
                      __size_of_ipdb_init 0096                  __end_of_ETH_GetByteCount 692C  
                   __size_of_ARPV4_Packet 0542            __end_of_IPV4_GetDatagramLength 6A64  
                              __pnvCOMRAM 0047                     __size_of_ARPV4_Lookup 005A  
                              ??_ETH_Copy 001B                                ??_ETH_Dump 0015  
                              ??_ETH_Init 007B                            ??_Network_Init 003A  
                          ??_Network_Read 02AF                                ??_ETH_Send 0017  
                   __size_of_ARPV4_Update 002E                     isPortUnreachable@port 0013  
                              _macAddress FF3F                      _ICMP_PortUnreachable 523A  
                         TCB_Reset@tcbPtr 0013                        __end_of_ETH_GetMAC 60A6  
                  __end_of_ETH_GetReadPtr 6B1C                        __end_of_ETH_Read16 6536  
                      __end_of_ETH_Read32 620E          __end_of_TMR0_SetInterruptHandler 6A90  
                      __end_of_ETH_Insert 6048                              IPV4_Send@ret 006A  
                                 ?___wmul 0013                                ??_TMR0_ISR 0001  
                              ??_TMR1_ISR 0001                                ??_TCP_Init 0013  
                              ??_TCP_Recv 010B                     DNS_Handler@dataLength 00CC  
                              ??_PHY_Read 0019                                   _CCP1CON 000FBD  
                      __end_of_ETH_Write8 6B3A                                ??_UDP_Send 006F  
                                 _ECCP1AS 000FB6                                   ?_memcmp 0013  
                                 ?_memcpy 0013               __end_of_ETH_ComputeChecksum 5120  
                                 _EDMADST 000EF4                                   ?_printf 006D  
                                 _EFLOCON 000E97                                   _MABBIPG 000EA4  
                 __size_of_ADC_Initialize 0016                                   ?_strcmp 0013  
                                 ?_strlen 0013                           ??_ETH_ReadBlock 0017  
                         ??_ETH_NewPacket 0015                                   _EIEbits 000EFB  
               __size_of_ETH_RemovePacket 00E2                                   _ERXFCON 000ED8  
                      __size_of_rtcc_init 0024                                   _EIRbits 000F60  
                                 _ERXRDPT 000EEC                                _ipv4Header 0268  
                            _ARPV4_Packet 2662                                   _OSCTUNE 000F9B  
                            ??_IPv4_Start 0099                                   _SSP1ADD 000FC8  
                    __size_of_sendRequest 0220                                   _SSP1BUF 000FC9  
                            _ARPV4_Lookup 615C                                   _TCP_Snd 1AC2  
                         ?_ETH_EdataWrite 0001                              ??_TCP_Update 00FC  
                   __size_of_ICMP_Receive 00E6                              _ARPV4_Update 6740  
                          _ETH_SetReadPtr 6B08                   ??_IPV4_GetStartPosition 0015  
                          _ETH_SendQueued 5D2C                    ARPV4_Lookup@ip_address 0013  
                         TCP_Update@count 0105                        UDP_Receive@udpcksm 00D5  
                   ?_ICMP_PortUnreachable 00A8                                   __Hparam 0000  
                                 __Lparam 0000                           ?_ETH_GetReadPtr 0013  
                  ?_ETH_RxComputeChecksum 0025                                _errataTemp 000E7E  
                        ?_DHCP_WriteZeros 0014                                 _ECON1bits 000FD2  
                      ETH_NewPacket@index 0017                                 ?_rtcc_set 0013  
                 __end_of_PHY_WaitForBusy 66B2                               time@gie_val 0017  
                                 ___lldiv 5C2A                           __size_of___wmul 0026  
                                 ___llmod 5F82                    ?_udp_table_getIterator 0013  
                               _DHCP_init 6B5C                                _currentTCB 003B  
                      __end_of_IPv4_Start 3F58                                   __doprnt 1408  
                      __end_of_TCP_Update 4A70                                   __pcinit 57B2  
                         __size_of_memcmp 00A0                           __size_of_memcpy 0044  
                                 __ramtop 1000                         __end_of_ipdb_init 5C2A  
                                 __ptext0 6A74                                   __ptext1 67C8  
                                 __ptext2 6A44                                   __ptext3 67F2  
                                 __ptext4 65AA                                   __ptext5 6A82  
                                 __ptext6 6A90                                   __ptext7 647A  
                                 __ptext8 6AE0                                   __ptext9 6950  
                                 _ethData 0224                           __size_of_printf 003A  
       TCP_FiniteStateMachine@notAckBytes 0101                             ??_DHCP_Manage 00B1  
                               _T0CONbits 000FD5            ??_TMR1_DefaultInterruptHandler 0001  
                         __size_of_strcmp 0046                              _ICMP_Receive 5432  
                         __size_of_strlen 0054                         __end_of_hexpowers FF0F  
                               _T1CONbits 000FCD                                   _dpowers FEC7  
                   _OSCILLATOR_Initialize 6AE0                                 _T2CONbits 000FCA  
                                 _tcbList 003D                                _lfsr_value 01FF  
                                 _isdigit 6992         __size_of_TMR1_SetInterruptHandler 000E  
                     _ETH_PacketListReset 635C                  ??_PIN_MANAGER_Initialize 0013  
               ?_TMR1_SetInterruptHandler 0013                    __end_of_ETH_SetReadPtr 6B12  
                  __end_of_ETH_SendQueued 5DAC                    ICMP_EchoReply@sequence 00B0  
                    __size_of_UDP_Receive 01C8                     _ETH_TxComputeChecksum 56DA  
                 __size_of_ICMP_EchoReply 0176                __size_of_SYSTEM_Initialize 002A  
                               _MICMDbits 000EB2                      end_of_initialization 5858  
                               _ESTATbits 000EFD                   ETH_ComputeChecksum@cksm 001F  
                             TCP_Snd@data 00CA                      __size_of_NTP_Handler 007C  
                 ETH_ComputeChecksum@seed 0015                               TCP_Snd@cksm 00CC  
                               _ETH_Read8 6898                                 _ETH_Flush 5F14  
                                 memcmp@n 0017                                   memcpy@d 001A  
                                 memcpy@n 0017                                   memcpy@s 001C  
                               _IPV4_Init 6B4A                                   lfsr@lsb 0013  
                               _IPV4_Send 5AF6                        IPv4_Start@protocol 0035  
                            _broadcastMAC FF45                          UDP_Start@dstPort 00AE  
                     ETH_ReadBlock@buffer 0013                      _ETH_NextPacketUpdate 64BC  
                DHCP_Handler@acceptOffers 0121                       ETH_ReadBlock@length 0015  
                         ___lldiv@divisor 0017                            ETH_Write8@data 0013  
                    ?_ETH_PacketListReset 0001                             ?_rtcc_handler 0001  
                       __end_of_rtcc_init 6908                               PHY_Read@reg 0019  
                         ___lldiv@counter 001F                               PHY_Read@ret 001A  
                        UDP_Start@srcPort 00AC                              _Control_Byte 0253  
                                 printf@f 006D                         ?_sendDHCPDISCOVER 0001  
                          _ETH_WriteBlock 6570                       _Network_WaitForLink 6AC8  
                               _TCB_Reset 5120                                ??_rtcc_set 0015  
                                 postdec1 000FE5                                   postdec2 000FDD  
                    _resetPortUnreachable 6AD4                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                         _ETH_CheckLinkUp 6846                            _ETH_WriteStart 3F58  
                      TCP_PayloadSave@len 00E7                        TCP_PayloadSave@ret 00F1  
                              ?_DHCP_init 0001                     ARPV4_Packet@mergeFlag 0082  
                         _sendDHCPDECLINE 6B3A                        ??_sendDHCPDISCOVER 00B0  
                      _nextSequenceNumber 0300                                   strcmp@r 0018  
                                 strlen@s 0013                  ETH_RxComputeChecksum@len 0025  
                _TMR0_SetInterruptHandler 6A82                                _timersInit 69B0  
                               _PHY_Write 6870                                 _UDP_Start 60A6  
                    __end_of_Network_Init 6972                      __end_of_Network_Read 5AF6  
                         _sendDHCPREQUEST 6B42                               UDP_Send@ret 0073  
                           _rcvPayloadLen 0244                           ?_ETH_SetReadPtr 0015  
                    ?_Network_WaitForLink 0001                           ?_ETH_SendQueued 0001  
                       IPV4_Packet@hdrLen 02AA                         _isPortUnreachable 6A00  
                         DNS_Handler@dnsR 0100                       __end_of_DHCP_Manage 4EB4  
                           ETH_GetMAC@mac 0013                           DNS_Handler@lock 00D2  
                       IPV4_Packet@length 02AB                           DNS_Handler@type 00C7  
                       ICMP_EchoReply@ret 00B8                                ?_ETH_Read8 0001  
                      ?_isPortUnreachable 0013                                ?_ETH_Flush 0001  
                              ?_IPV4_Init 0001                                ?_IPV4_Send 0037  
                  ??_ICMP_PortUnreachable 0039                     ?_ETH_NextPacketUpdate 0001  
                         _SPI1_Initialize 6A90                            DHCP_Manage@now 00B2  
                  PHY_WaitForBusy@timeout 0014                            ??_rtcc_handler 0001  
                   ??_ETH_PacketListReset 0013                   DHCP_Handler@messageType 0118  
                  __end_of_ETH_WriteBlock 65AA                       ??_isPortUnreachable 0015  
             __end_of_udp_table_nextEntry 661A                         __size_of_ETH_Copy 00AE  
                       __size_of_ETH_Dump 0030                         __size_of_ETH_Init 02A4  
                  __end_of_ETH_WriteStart 417A                         __size_of_ETH_Send 00A8  
                        ??_MAC_getAddress 0015                     ?_resetPortUnreachable 0001  
                              ?_TCB_Reset 0013                 __size_of_ECCP1_Initialize 0016  
            __end_of_INTERRUPT_Initialize 6B5A                          ?_PHY_WaitForBusy 0001  
                          __end_of___wmul 68E4                  __end_of_ETH_EventHandler 615C  
                ARPV4_Request@destAddress 002D                            TCP_Recv@length 0109  
                           __pidataCOMRAM 6B5A                         _UDP_CallBackTable FF23  
                          TCP_Recv@tcbPtr 00FD                         __size_of_TMR0_ISR 002E  
                       __size_of_TMR1_ISR 002C                            _ADC_Initialize 6A2E  
                       __size_of_TCP_Init 002A                         __size_of_TCP_Recv 045C  
                          __end_of_memcmp 5A58                         __size_of_PHY_Read 0074  
                          __end_of_memcpy 647A                    ?_OSCILLATOR_Initialize 0001  
                   DHCP_Handler@acceptACK 0123                         __size_of_UDP_Send 00F2  
                __size_of_ETH_WriteString 004A                                ?_PHY_Write 0015  
           NTP_Handler@timeFractionalPart 00B2                            __end_of_printf 6570  
                        _ETH_RemovePacket 5518                 ETH_RxComputeChecksum@cksm 002F  
                              ?_UDP_Start 00A8                            __end_of_strcmp 6436  
                           ??_DNS_Handler 00B2                       ICMP_Receive@icmpHdr 00C0  
               ETH_RxComputeChecksum@seed 0027                            __end_of_strlen 630C  
                     ICMP_Receive@ipv4Hdr 00B9                       start_initialization 57B2  
               __end_of_isPortUnreachable 6A18                   ETH_RemovePacket@pPacket 0017  
             NTP_Handler@timeIntegralPart 00B6                     ??_Network_WaitForLink 0022  
                __size_of_TMR0_Initialize 0038                    ?_ETH_TxComputeChecksum 0025  
         __size_of_PIN_MANAGER_Initialize 0042                                ipdb_init@x 0013  
                       NTP_Handler@length 00B0                             ETH_Copy@timer 001B  
                      sendRequest@started 0039                             ETH_Read32@ret 0017  
                           ETH_Read16@ret 0015               __end_of_TCP_ParseTCPOptions 4FFC  
                  ETH_WriteStart@dest_mac 0025               __size_of_ETH_ResetByteCount 000A  
                       ?_ETH_GetByteCount 0013                           ___llmod@divisor 0024  
                         ___llmod@counter 0028                  ??_TCP_FiniteStateMachine 00F4  
                 __end_of_ETH_CheckLinkUp 6870                   __end_of_sendDHCPDECLINE 6B42  
                      ??_ETH_GetByteCount 0015                             ??_IPV4_Packet 028E  
                         ?_ETH_WriteBlock 0013             __size_of_ETH_Shift_Tx_Packets 019A  
                __size_of_TMR1_Initialize 002A                           ?_ETH_WriteStart 0025  
                           ??_ETH_Write32 0017                             ??_ETH_Write16 0015  
                 ETH_Shift_Tx_Packets@len 0021                                  ??___wmul 0017  
               __end_of_UDP_CallBackTable FF32                       __end_of_dnsXidValue FF23  
                             __doprnt@idx 0060                               __doprnt@len 0061  
                  __end_of_ADC_Initialize 6A44                               __doprnt@val 0066  
                             ??_DHCP_init 0013                       ARPV4_Request@header 007D  
                             __pdataBANK1 01FF                               __pdataBANK2 02C6  
                             __pdataBANK3 037B                                  ??_memcmp 0019  
                                ??_memcpy 0019                   __end_of_sendDHCPREQUEST 6B4A  
                  __size_of_TMR1_CallBack 0024                                  ??_printf 0033  
                             ?_timersInit 0001                                  ??_strcmp 0017  
                                ??_strlen 0015                     DHCP_Handler@localData 0125  
                        ??_ETH_EdataWrite 0013                               _DHCP_Manage 4D5A  
                    IPv4_Start@macAddress 00A5                             ETH_Insert@len 0015  
                         IPV4_Packet@cksm 02AD                     TMR1_ISR@CountCallBack 0250  
                             __pbssCOMRAM 003B                  ICMP_EchoReply@identifier 00AE  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 028E                     TCP_Recv@remoteAddress 0105  
                __size_of_TMR2_Initialize 0010                            _hostMacAddress 0284  
                          _ICMP_EchoReply 4A70                                  ?_TCP_Snd 00A8  
                 __end_of_SPI1_Initialize 6A9E                              _isdigit$4802 0014  
                ICMP_PortUnreachable@cksm 00B2                       __end_of_DNS_Handler 3A78  
                  __size_of_ARPV4_Request 02B2                               ??_ETH_Read8 0013  
                             ??_ETH_Flush 0013                    ??_ETH_NextPacketUpdate 0013  
                             ??_IPV4_Init 0015                               ??_IPV4_Send 0066  
          __size_of_IPV4_GetStartPosition 000A                     __end_of_ETH_EdataRead 6B30  
                        ??_ETH_GetReadPtr 0015             __end_of_IPV4_GetStartPosition 6B08  
                               __doprnt@c 006C                                 __doprnt@f 002B  
                ETH_PacketListReset@index 0015                   ??_ETH_RxComputeChecksum 0029  
                   _TMR0_InterruptHandler 02F9                  __size_of_TCP_PayloadSave 0174  
                               __pnvBANK2 02F9                                 _dhcpState 0248  
         ICMP_EchoReply@ipv4PayloadLength 00B6                    ??_resetPortUnreachable 0013  
                  _PIN_MANAGER_Initialize 647A                   ??_udp_table_getIterator 0015  
                               __pintcode 0008                               ??_TCB_Reset 0015  
        __end_of_TMR1_SetInterruptHandler 6AAC                             __pmediumconst FEC6  
                               __ptext100 4FFC                                 __ptext101 6B26  
                               __ptext110 6B50                                 __ptext102 5910  
                               __ptext111 6972                                 __ptext103 5D2C  
                               __ptext120 0000                                 __ptext112 6740  
                               __ptext104 6B5E                                 __ptext105 5FE8  
                               __ptext114 679C                                 __ptext106 6908  
                               __ptext115 692C                                 __ptext107 63A6  
                               __ptext116 6B60                                 __ptext108 69E6  
                               __ptext117 6A64                                 __ptext109 6B30  
                               __ptext118 676E                                 __ptext119 6B62  
                                ?___lldiv 0013                                  ?___llmod 0020  
                           IPV4_Send@cksm 006B                           ?_ADC_Initialize 0001  
                                ?__doprnt 0029                     __size_of_Network_Init 0022  
                   __size_of_Network_Read 009E                        ARPV4_Packet@header 008A  
                     __end_of_IPV4_Packet 2662                         __size_of_rtcc_set 002E  
                      ARPV4_Packet@arpPtr 0084                          _ip_database_info 0200  
            ??_INTERRUPT_InterruptManager 0001                        ARPV4_Packet@length 0080  
            IPV4_PseudoHeaderChecksum@len 001F              IPV4_PseudoHeaderChecksum@tmp 0024  
                ARPV4_Update@entryPointer 0013                       __end_of_ETH_Write16 6AC8  
                     __end_of_ETH_Write32 69E6                               ??_PHY_Write 0017  
                                _ECCP1DEL 000F79                             ??_sendRequest 0039  
                             ??_UDP_Start 0036                                  ?_isdigit 0001  
                   __end_of_ETH_ReadBlock 62B8                      __end_of_rtcc_handler 6A74  
                  __end_of_ICMP_EchoReply 4BE6                                 _ipdb_init 5B94  
                         sendRequest@type 003A                     __end_of_ETH_NewPacket 458C  
              __size_of_isPortUnreachable 0018                               _device_time 0232  
            __size_of_ETH_ComputeChecksum 0124              ETH_RemovePacket@packetHandle 0013  
                               _hexpowers FEEF                         ??_ETH_WriteString 0015  
                          __size_of_putch 0002                      _INTERRUPT_Initialize 6B56  
                               _tcpHeader 0254                             _TMR1_CallBack 692C  
                       ??_TMR0_Initialize 0016                   __size_of_Network_Manage 0078  
                          ___wmul@product 0017                      ETH_WriteBlock@buffer 0013  
                               _udpHeader 027C                      ETH_WriteBlock@length 0015  
                                _MIREGADR 000EB4                                  _ETH_Copy 5862  
                              TCP_Snd@ret 00D0                                  _ETH_Dump 66E2  
                                _ETH_Init 3A78                       __size_of_timersInit 001C  
                                _ETH_Send 5910                                  _PIE1bits 000F9D  
                             _dnsXidValue FF21                          ?_ETH_CheckLinkUp 0001  
         __size_of_TCP_FiniteStateMachine 1408                          ?_sendDHCPDECLINE 0001  
                            _Network_Init 6950                              _Network_Read 5A58  
     __size_of_INTERRUPT_InterruptManager 00AE                         _nextAvailablePort 0246  
              ??_TMR0_SetInterruptHandler 0016                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u821_48 6788  
                                i2u822_40 67B8                                  i2u795_48 693C  
                                _RCONbits 000FD0                               _ethListSize 0046  
                        __CFG_WDTPS$32768 000000                          _ECCP1_Initialize 6A18  
                                _SSP1CON1 000FC6                             ARPV4_Packet@x 0086  
                                _TMR0_ISR 676E                                  _TMR1_ISR 679C  
                                _TCP_Init 681C                                 _rtcc_init 68E4  
                                _SSP1STAT 000FC7                                  _TCP_Recv 30C2  
                                _PHY_Read 5EA0        __size_of_IPV4_PseudoHeaderChecksum 00E0  
                           _ARPV4_Request 351E                                  _UDP_Send 5340  
        ICMP_PortUnreachable@srcIPAddress 00A8                           _portUnreachable 024C  
              ?_IPV4_PseudoHeaderChecksum 0013                          ?_sendDHCPREQUEST 0001  
                       ??_TMR1_Initialize 0016                          ??_ETH_SetReadPtr 0017  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0013                            DNS_Handler@ttl 00C1  
                __size_of_DHCP_WriteZeros 001A                             ARPV4_Lookup@x 001D  
                        ??_ETH_SendQueued 0013               TCP_FiniteStateMachine@event 0103  
              ICMP_PortUnreachable@length 00B0                  ??_IPV4_SaveStartPosition 0015  
                           ??_UDP_Receive 00D7                                ?_ipdb_init 0001  
                         ?_ICMP_EchoReply 00A8                               _DNS_Handler 37D0  
                           ARPV4_Update@x 0015                 __size_of_sendDHCPDISCOVER 0080  
                           ??_NTP_Handler 003B                        __end_of_macAddress FF45  
                 DNS_Handler@entryPointer 00D3                  ??_IPV4_GetDatagramLength 0015  
                        ?_SPI1_Initialize 0001                IPV4_PseudoHeaderChecksum@v 001D  
                           TCP_Recv@count 00FC                          TCP_Update@tcbPtr 0107  
                           ?_DHCP_Handler 00B0                                 copy_data0 57C6  
                               copy_data1 57E6                     ?_INTERRUPT_Initialize 0001  
                        __size_of_TCP_Snd 065E                       __end_of_sendRequest 439A  
                          ?_TMR1_CallBack 0001                         ??_TMR2_Initialize 0013  
                           TCP_Snd@tcbPtr 00A8                  __end_of_ETH_RemovePacket 55FA  
                           IPv4_Start@ret 00A7                                  __Hrparam 0000  
              ETH_TxComputeChecksum@rxptr 0060                               _IPV4_Packet 2120  
                               memcpy@tmp 0019                                  __Lrparam 0000  
               DHCP_Handler@declineOffers 011E                        DHCP_Handler@a_3184 0114  
                             _ETH_Write32 69CC                               _ETH_Write16 6ABA  
                        ETH_ReadBlock@len 0017                            ?_ARPV4_Request 002D  
                       ??_TCP_PayloadSave 00E9                   ??_OSCILLATOR_Initialize 0013  
                              ?_rtcc_init 0001                          __size_of___lldiv 0082  
                        __size_of___llmod 0066                         ?_ETH_EventHandler 0001  
                        __size_of__doprnt 06BA         __end_of_IPV4_PseudoHeaderChecksum 56DA  
                  TCP_ParseTCPOptions@ret 0019                  _TMR1_SetInterruptHandler 6A9E  
                  TCP_ParseTCPOptions@opt 001A                               _tcbListSize 0045  
                      DHCP_Handler@chaddr 0100                  ARPV4_Packet@entryPointer 0088  
                 ICMP_PortUnreachable@ret 00B4                   ??_ETH_TxComputeChecksum 002B  
                   _TMR1_InterruptHandler 02FC                        ??_ETH_EventHandler 0025  
                  _TCP_FiniteStateMachine 0000                        DHCP_Handler@length 00B0  
                                _dhcpData 02C6                                  _dhcpName FF32  
                      DHCP_Handler@siaddr 011A                          __size_of_isdigit 001E  
                      DHCP_Handler@option 0119                                  _dnsCache 0500  
                                __ptext10 69B0                                  __ptext11 68E4  
                                __ptext20 6992                                  __ptext12 6A9E  
                                _destPort 024A                                  __ptext21 5F82  
                                __ptext13 681C                                  __ptext30 6A18  
                                __ptext22 5C2A                                  __ptext14 6AC8  
                                __ptext31 6A2E                                  __ptext23 6870  
                                __ptext15 6B4A                                  __ptext40 37D0  
                                __ptext32 5E28                                  __ptext24 6AEA  
                                __ptext16 5B94                                  _arpTimer 028A  
                                __ptext41 5DAC                                  __ptext33 48EE  
                                __ptext25 635C                                  __ptext17 3A78  
                                __ptext50 61B6                                  __ptext42 6712  
                                __ptext34 5A58                                  __ptext26 6B5C  
                                __ptext18 6536                                  __ptext51 30C2  
                                __ptext43 6A54                                  __ptext35 2120  
                                __ptext27 664E                                  __ptext19 1408  
                                __ptext60 6AAC                                  __ptext52 4EB4  
                                __ptext44 523A                                  __ptext36 458C  
                                __ptext28 6048                                  __ptext61 6B12  
                                __ptext53 6898                                  __ptext45 6AFE  
                                __ptext37 65E2                                  __ptext29 6B56  
                                __ptext70 5F14                                  __ptext62 55FA  
                                __ptext54 0000                                  __ptext46 6B08  
                                __ptext38 6AF4                                  __ptext71 2662  
                                __ptext63 5432                                  __ptext55 6AD4  
                                __ptext47 63F0                                  __ptext39 2BA4  
                                __ptext80 6B42                                  __ptext72 6264  
                                __ptext64 4A70                                  __ptext56 6A00  
                                __ptext48 6B3A                                  __ptext81 5CAC  
                                __ptext73 6102                                  __ptext65 64FA  
                                __ptext57 4BE6                                  __ptext49 59B8  
                                __ptext90 3F58                                  __ptext82 417A  
                                __ptext74 5518                                  __ptext66 5862  
                                __ptext58 1AC2                                  __ptext91 4754  
                                __ptext83 62B8                                  __ptext75 6846  
                                __ptext67 66E2                                  __ptext59 5120  
                                __ptext92 68BE                                  __ptext84 60A6  
                                __ptext76 5EA0                                  __ptext68 630C  
                                __ptext93 6B1C                                  __ptext85 3D1C  
                                __ptext77 6680                                  __ptext69 64BC  
                                __ptext94 439A                                  __ptext86 69CC  
                                __ptext78 4D5A                                  __ptext95 6570  
                                __ptext87 6ABA                                  __ptext79 620E  
                                __ptext96 615C                                  __ptext88 351E  
                                __ptext97 5340                                  __ptext89 6436  
                                __ptext98 5AF6                                  __ptext99 56DA  
                          ??_DHCP_Handler 00B2                         ARPV4_Packet@x_939 0087  
                            _SSP1CON1bits 000FC6                             _sequenceIndex 0252  
                              _ARPV4_Init 664E                              time@the_time 0018  
             __end_of_ETH_PacketListReset 63A6                       __end_of_UDP_Receive 4754  
                        ??_ETH_WriteBlock 0017                           ICMP_Receive@ret 00BF  
                       _remoteIpv4Address 023A                        ETH_WriteStart@type 0027  
               ARPV4_Lookup@entry_pointer 001B                       __end_of_NTP_Handler 5E28  
                        ??_ETH_WriteStart 0029                             __size_of_main 000E  
                           __size_of_lfsr 0020                             __size_of_time 0056  
    __end_of_TMR0_DefaultInterruptHandler 6B64     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 6B62             __size_of_ICMP_PortUnreachable 0106  
                  DNS_Handler@authorityRR 00BB                         UDP_Send@udpLength 0076  
                        PHY_Write@GIESave 0018                                  _rtcc_set 6712  
                                int$flags 004D                      _rxPacketStatusVector 023E  
                               rtcc_set@t 0013        __end_of_INTERRUPT_InterruptManager 00B6  
              _INTERRUPT_InterruptManager 0008                              _SSP1STATbits 000FC7  
                   __size_of_rtcc_handler 0010              __size_of_udp_table_nextEntry 0038  
               __size_of_ETH_GetByteCount 0024               __end_of_Network_WaitForLink 6AD4  
                            ??_timersInit 001C                                  _xor_mask 02F8  
                            ?_DHCP_Manage 0001                                _ETH_GetMAC 6048  
                     Network_Manage@nowPv 0236           __size_of_IPV4_SaveStartPosition 000E  
                              _ETH_Read16 64FA                                _ETH_Read32 61B6  
            __end_of_ETH_Shift_Tx_Packets 48EE                                _INTCONbits 000FF2  
                             _sendRequest 417A                 ETH_TxComputeChecksum@cksm 0062  
                __size_of_PHY_WaitForBusy 0032                               ??_ipdb_init 0013  
               ETH_TxComputeChecksum@seed 0029                                  memcmp@s1 0013  
                                memcmp@s2 0015                                _ETH_Insert 5FE8  
                                memcpy@d1 0013                                  memcpy@s1 0015  
                           ?_ARPV4_Packet 0001                           ETH_Write32@data 0013  
                         ETH_Write16@data 0013                             ?_ARPV4_Lookup 0013  
                                isdigit@c 0015                    ??_INTERRUPT_Initialize 0013  
                              _ETH_Write8 6B30                      __end_of_xorSequences FF21  
                         ??_TMR1_CallBack 0001                         ??_DHCP_WriteZeros 0016  
                           ?_ARPV4_Update 0001                     _receivedRemoteAddress 022A  
         __size_of_IPV4_GetDatagramLength 0010                __end_of_ETH_ResetByteCount 6B26  
           ICMP_EchoReply@icmp_cksm_start 00B2                                  intlevel2 0000  
                       DHCP_Handler@count 011F                            _Network_Manage 5E28  
                              _MISTATbits 000E8A                          ___lldiv@dividend 0013  
                 ?_PIN_MANAGER_Initialize 0001                           UDP_Receive@hptr 00DC  
            __size_of_TCP_ParseTCPOptions 0148                        __end_of_timersInit 69CC  
          __size_of_ETH_RxComputeChecksum 0050                          ??_ADC_Initialize 0013  
           __end_of_ETH_RxComputeChecksum 635C                              _rtcc_handler 6A64  
           ?_TMR0_DefaultInterruptHandler 0001                           ??_ARPV4_Request 0060  
                     _ETH_ComputeChecksum 4FFC                               ARPV4_Init@x 0015  
          __size_of_udp_table_getIterator 000A                                  printf@ap 0033  
           __end_of_udp_table_getIterator 6AFE                                  printf@pb 0035  
                             ??_rtcc_init 0016                          DHCP_Handler@F840 037B  
                    IPV4_Send@totalLength 006D                           _ETH_WriteString 63A6  
                           ?_ICMP_Receive 00B9                      ETH_CheckLinkUp@value 001E  
                                strcmp@s1 0013                                  strcmp@s2 0015  
                 __size_of_MAC_getAddress 000A                           ETH_WriteBlock@p 0017  
                        ___lldiv@quotient 001B             IPV4_PseudoHeaderChecksum@cksm 0020  
                         ARPV4_Packet@ret 0083                           _TMR0_Initialize 65AA  
                          UDP_Receive@ret 00DB                                  strlen@cp 0017  
                          ??_ARPV4_Packet 0060                               _UDP_Receive 458C  
                   ETH_Init@phycon1_value 0085                            ??_ARPV4_Lookup 0017  
                    ?_ETH_ComputeChecksum 0013                          _sendDHCPDISCOVER 5CAC  
              TCP_PayloadSave@buffer_size 00F2                            ??_ARPV4_Update 0013  
                                strtok@sp 0242                                _IPv4_Start 3D1C  
                             _NTP_Handler 5DAC                  __end_of_ECCP1_Initialize 6A2E  
                ETH_Insert@current_tx_ptr 001B                         Network_Manage@now 02C2  
                              _TCP_Update 48EE                    __end_of_Network_Manage 5EA0  
                             ?_ARPV4_Init 0001            __end_of_PIN_MANAGER_Initialize 64BC  
                      Network_Read@header 02B3             __size_of_ETH_NextPacketUpdate 003E  
                  _IPV4_SaveStartPosition 6AAC                             PHY_Write@data 0015  
                   _IPV4_GetStartPosition 6AFE                              UDP_Send@cksm 0074  
                         _TMR1_Initialize 67F2                              PHY_Write@reg 0017  
                        ETH_Insert@offset 0017  
