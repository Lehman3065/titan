

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Jun 05 18:39:53 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F67J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	dabs	1,0xE7E,2,_errataTemp
    50  0000                     
    51                           ; Version 1.44
    52                           ; Generated 14/09/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F67J60 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86 ;; Function _DHCP_Handler is unused but had its address taken
    87  0000                     
    88 ;; Function _DNS_Handler is unused but had its address taken
    89  0000                     
    90 ;; Function _NTP_Handler is unused but had its address taken
    91  0000                     
    92 ;; Function _TFTP_Handler is unused but had its address taken
    93  0000                     
    94 ;; Function _putch is unused but had its address taken
    95  0000                     
    96                           	psect	idataCOMRAM
    97  0102FE                     __pidataCOMRAM:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _tcpMss
   101  0102FE  0218               	dw	536
   102                           
   103                           ;initializer for _lfsr_value
   104  010300  40                 	db	64
   105                           
   106                           ;initializer for _xor_mask
   107  010301  41                 	db	65
   108                           
   109                           	psect	idataBANK0
   110  01013C                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _dhcpData
   114  01013C  0000               	dw	0
   115  01013E  0000               	dw	0
   116  010140  0000               	dw	0
   117  010142  0000               	dw	0
   118  010144  0000               	dw	0
   119  010146  0000               	dw	0
   120  010148  0000               	dw	0
   121  01014A  0000               	dw	0
   122  01014C  0000               	dw	0
   123  01014E  0000               	dw	0
   124  010150  0000               	dw	0
   125  010152  0000               	dw	0
   126  010154  0000               	dw	0
   127  010156  0000               	dw	0
   128  010158  0000               	dw	0
   129  01015A  0000               	dw	0
   130  01015C  0000               	dw	0
   131  01015E  0000               	dw	0
   132  010160  000A               	dw	10
   133  010162  0000               	dw	0
   134  010164  0E10               	dw	3600
   135  010166  0000               	dw	0
   136  010168  0000               	dw	0
   137  01016A  0000               	dw	0
   138                           
   139                           ;initializer for _tftp_last_address
   140  01016C  0000               	dw	0
   141  01016E  0002               	dw	2
   142                           
   143                           ;initializer for _ntp
   144  010170  A8                 	db	low STR_8
   145  010171  FF                 	db	high STR_8
   146                           
   147                           	psect	idataBANK1
   148  010172                     __pidataBANK1:
   149                           	opt stack 0
   150                           
   151                           ;initializer for DHCP_Handler@F840
   152  010172  0000               	dw	0
   153  010174  0000               	dw	0
   154  010176  0000               	dw	0
   155  010178  0000               	dw	0
   156  01017A  0000               	dw	0
   157  01017C  0000               	dw	0
   158  01017E  0000               	dw	0
   159  010180  0000               	dw	0
   160  010182  0000               	dw	0
   161  010184  0000               	dw	0
   162  010186  0000               	dw	0
   163  010188  0000               	dw	0
   164  01018A  0000               	dw	0
   165  01018C  0000               	dw	0
   166  01018E  0000               	dw	0
   167  010190  0000               	dw	0
   168  010192  0000               	dw	0
   169  010194  0000               	dw	0
   170  010196  0E10               	dw	3600
   171  010198  0000               	dw	0
   172  01019A  0E10               	dw	3600
   173  01019C  0000               	dw	0
   174  01019E  0000               	dw	0
   175  0101A0  0000               	dw	0
   176                           
   177                           ;initializer for _tftp_modes
   178  0101A2  E1                 	db	low STR_9
   179  0101A3  FF                 	db	high STR_9
   180  0101A4  F1                 	db	low STR_10
   181  0101A5  FF                 	db	high STR_10
   182  0101A6  F7                 	db	low STR_11
   183  0101A7  FF                 	db	high STR_11
   184                           
   185                           	psect	mediumconst
   186  00FE7C                     __pmediumconst:
   187                           	opt stack 0
   188  00FE7C  00                 	db	0
   189  00FE7D                     _TFTP_callBackTable:
   190                           	opt stack 0
   191  00FE7D                     __end_of_TFTP_callBackTable:
   192                           	opt stack 0
   193  00FE7D                     _dpowers:
   194                           	opt stack 0
   195  00FE7D  0001               	dw	1
   196  00FE7F  0000               	dw	0
   197  00FE81  000A               	dw	10
   198  00FE83  0000               	dw	0
   199  00FE85  0064               	dw	100
   200  00FE87  0000               	dw	0
   201  00FE89  03E8               	dw	1000
   202  00FE8B  0000               	dw	0
   203  00FE8D  2710               	dw	10000
   204  00FE8F  0000               	dw	0
   205  00FE91  86A0               	dw	34464
   206  00FE93  0001               	dw	1
   207  00FE95  4240               	dw	16960
   208  00FE97  000F               	dw	15
   209  00FE99  9680               	dw	38528
   210  00FE9B  0098               	dw	152
   211  00FE9D  E100               	dw	57600
   212  00FE9F  05F5               	dw	1525
   213  00FEA1  CA00               	dw	51712
   214  00FEA3  3B9A               	dw	15258
   215  00FEA5                     __end_of_dpowers:
   216                           	opt stack 0
   217  00FEA5                     _hexpowers:
   218                           	opt stack 0
   219  00FEA5  0001               	dw	1
   220  00FEA7  0000               	dw	0
   221  00FEA9  0010               	dw	16
   222  00FEAB  0000               	dw	0
   223  00FEAD  0100               	dw	256
   224  00FEAF  0000               	dw	0
   225  00FEB1  1000               	dw	4096
   226  00FEB3  0000               	dw	0
   227  00FEB5  0000               	dw	0
   228  00FEB7  0001               	dw	1
   229  00FEB9  0000               	dw	0
   230  00FEBB  0010               	dw	16
   231  00FEBD  0000               	dw	0
   232  00FEBF  0100               	dw	256
   233  00FEC1  0000               	dw	0
   234  00FEC3  1000               	dw	4096
   235  00FEC5                     __end_of_hexpowers:
   236                           	opt stack 0
   237  00FEC5                     _xorSequences:
   238                           	opt stack 0
   239  00FEC5  41                 	db	65
   240  00FEC6  44                 	db	68
   241  00FEC7  47                 	db	71
   242  00FEC8  48                 	db	72
   243  00FEC9  4E                 	db	78
   244  00FECA  53                 	db	83
   245  00FECB  55                 	db	85
   246  00FECC  5C                 	db	92
   247  00FECD  5F                 	db	95
   248  00FECE  60                 	db	96
   249  00FECF  65                 	db	101
   250  00FED0  69                 	db	105
   251  00FED1  6A                 	db	106
   252  00FED2  72                 	db	114
   253  00FED3  77                 	db	119
   254  00FED4  78                 	db	120
   255  00FED5  7B                 	db	123
   256  00FED6  7E                 	db	126
   257  00FED7                     __end_of_xorSequences:
   258                           	opt stack 0
   259  00FED7                     _dnsXidValue:
   260                           	opt stack 0
   261  00FED7  1234               	dw	4660
   262  00FED9                     __end_of_dnsXidValue:
   263                           	opt stack 0
   264  00FED9                     _UDP_CallBackTable:
   265                           	opt stack 0
   266  00FED9  0035               	dw	53
   267  00FEDB  00                 	db	0
   268  00FEDC  00                 	db	0
   269  00FEDD  00                 	db	0
   270  00FEDE  0044               	dw	68
   271  00FEE0  00                 	db	0
   272  00FEE1  00                 	db	0
   273  00FEE2  00                 	db	0
   274  00FEE3  007B               	dw	123
   275  00FEE5  00                 	db	0
   276  00FEE6  00                 	db	0
   277  00FEE7  00                 	db	0
   278  00FEE8  FFFB               	dw	65531
   279  00FEEA  00                 	db	0
   280  00FEEB  00                 	db	0
   281  00FEEC  00                 	db	0
   282  00FEED                     __end_of_UDP_CallBackTable:
   283                           	opt stack 0
   284  00FEED                     _dhcpName:
   285                           	opt stack 0
   286  00FEED  54                 	db	84
   287  00FEEE  69                 	db	105
   288  00FEEF  74                 	db	116
   289  00FEF0  61                 	db	97
   290  00FEF1  6E                 	db	110
   291  00FEF2  20                 	db	32
   292  00FEF3  42                 	db	66
   293  00FEF4  6F                 	db	111
   294  00FEF5  69                 	db	105
   295  00FEF6  6C                 	db	108
   296  00FEF7  65                 	db	101
   297  00FEF8  72                 	db	114
   298  00FEF9  00                 	db	0
   299  00FEFA                     __end_of_dhcpName:
   300                           	opt stack 0
   301  00FEFA                     _tftp_option:
   302                           	opt stack 0
   303  00FEFA  62                 	db	98
   304  00FEFB  6C                 	db	108
   305  00FEFC  6B                 	db	107
   306  00FEFD  73                 	db	115
   307  00FEFE  69                 	db	105
   308  00FEFF  7A                 	db	122
   309  00FF00  65                 	db	101
   310  00FF01  00                 	db	0
   311  00FF02                     __end_of_tftp_option:
   312                           	opt stack 0
   313  00FF02                     _macAddress:
   314                           	opt stack 0
   315  00FF02  00                 	db	0
   316  00FF03  55                 	db	85
   317  00FF04  58                 	db	88
   318  00FF05  00                 	db	0
   319  00FF06  10                 	db	16
   320  00FF07  22                 	db	34
   321  00FF08                     __end_of_macAddress:
   322                           	opt stack 0
   323  00FF08                     _broadcastMAC:
   324                           	opt stack 0
   325  00FF08  FF                 	db	255
   326  00FF09  FF                 	db	255
   327  00FF0A  FF                 	db	255
   328  00FF0B  FF                 	db	255
   329  00FF0C  FF                 	db	255
   330  00FF0D  FF                 	db	255
   331  00FF0E                     __end_of_broadcastMAC:
   332                           	opt stack 0
   333  00FF0E  4D                 	db	77	;'M'
   334  00FF0F  41                 	db	65	;'A'
   335  00FF10  43                 	db	67	;'C'
   336  00FF11  20                 	db	32
   337  00FF12  41                 	db	65	;'A'
   338  00FF13  64                 	db	100	;'d'
   339  00FF14  64                 	db	100	;'d'
   340  00FF15  72                 	db	114	;'r'
   341  00FF16  65                 	db	101	;'e'
   342  00FF17  73                 	db	115	;'s'
   343  00FF18  73                 	db	115	;'s'
   344  00FF19  20                 	db	32
   345  00FF1A  66                 	db	102	;'f'
   346  00FF1B  72                 	db	114	;'r'
   347  00FF1C  6F                 	db	111	;'o'
   348  00FF1D  6D                 	db	109	;'m'
   349  00FF1E  20                 	db	32
   350  00FF1F  45                 	db	69	;'E'
   351  00FF20  45                 	db	69	;'E'
   352  00FF21  50                 	db	80	;'P'
   353  00FF22  52                 	db	82	;'R'
   354  00FF23  4F                 	db	79	;'O'
   355  00FF24  4D                 	db	77	;'M'
   356  00FF25  3A                 	db	58	;':'
   357  00FF26  20                 	db	32
   358  00FF27  25                 	db	37
   359  00FF28  2E                 	db	46
   360  00FF29  32                 	db	50	;'2'
   361  00FF2A  58                 	db	88	;'X'
   362  00FF2B  3A                 	db	58	;':'
   363  00FF2C  25                 	db	37
   364  00FF2D  2E                 	db	46
   365  00FF2E  32                 	db	50	;'2'
   366  00FF2F  58                 	db	88	;'X'
   367  00FF30  3A                 	db	58	;':'
   368  00FF31  25                 	db	37
   369  00FF32  2E                 	db	46
   370  00FF33  32                 	db	50	;'2'
   371  00FF34  58                 	db	88	;'X'
   372  00FF35  3A                 	db	58	;':'
   373  00FF36  25                 	db	37
   374  00FF37  2E                 	db	46
   375  00FF38  32                 	db	50	;'2'
   376  00FF39  58                 	db	88	;'X'
   377  00FF3A  3A                 	db	58	;':'
   378  00FF3B  25                 	db	37
   379  00FF3C  2E                 	db	46
   380  00FF3D  32                 	db	50	;'2'
   381  00FF3E  58                 	db	88	;'X'
   382  00FF3F  3A                 	db	58	;':'
   383  00FF40  25                 	db	37
   384  00FF41  2E                 	db	46
   385  00FF42  32                 	db	50	;'2'
   386  00FF43  58                 	db	88	;'X'
   387  00FF44  20                 	db	32
   388  00FF45  0D                 	db	13
   389  00FF46  0A                 	db	10
   390  00FF47  00                 	db	0
   391  00FF48  0D                 	db	13
   392  00FF49  0A                 	db	10
   393  00FF4A  0D                 	db	13
   394  00FF4B  0A                 	db	10
   395  00FF4C  53                 	db	83	;'S'
   396  00FF4D  74                 	db	116	;'t'
   397  00FF4E  61                 	db	97	;'a'
   398  00FF4F  72                 	db	114	;'r'
   399  00FF50  74                 	db	116	;'t'
   400  00FF51  69                 	db	105	;'i'
   401  00FF52  6E                 	db	110	;'n'
   402  00FF53  67                 	db	103	;'g'
   403  00FF54  20                 	db	32
   404  00FF55  53                 	db	83	;'S'
   405  00FF56  79                 	db	121	;'y'
   406  00FF57  73                 	db	115	;'s'
   407  00FF58  6C                 	db	108	;'l'
   408  00FF59  6F                 	db	111	;'o'
   409  00FF5A  67                 	db	103	;'g'
   410  00FF5B  20                 	db	32
   411  00FF5C  61                 	db	97	;'a'
   412  00FF5D  74                 	db	116	;'t'
   413  00FF5E  20                 	db	32
   414  00FF5F  25                 	db	37
   415  00FF60  6C                 	db	108	;'l'
   416  00FF61  75                 	db	117	;'u'
   417  00FF62  0D                 	db	13
   418  00FF63  0A                 	db	10
   419  00FF64  00                 	db	0
   420  00FF65  44                 	db	68	;'D'
   421  00FF66  4E                 	db	78	;'N'
   422  00FF67  53                 	db	83	;'S'
   423  00FF68  20                 	db	32
   424  00FF69  46                 	db	70	;'F'
   425  00FF6A  6F                 	db	111	;'o'
   426  00FF6B  75                 	db	117	;'u'
   427  00FF6C  6E                 	db	110	;'n'
   428  00FF6D  64                 	db	100	;'d'
   429  00FF6E  20                 	db	32
   430  00FF6F  25                 	db	37
   431  00FF70  73                 	db	115	;'s'
   432  00FF71  20                 	db	32
   433  00FF72  69                 	db	105	;'i'
   434  00FF73  6E                 	db	110	;'n'
   435  00FF74  20                 	db	32
   436  00FF75  63                 	db	99	;'c'
   437  00FF76  61                 	db	97	;'a'
   438  00FF77  63                 	db	99	;'c'
   439  00FF78  68                 	db	104	;'h'
   440  00FF79  65                 	db	101	;'e'
   441  00FF7A  20                 	db	32
   442  00FF7B  25                 	db	37
   443  00FF7C  75                 	db	117	;'u'
   444  00FF7D  6C                 	db	108	;'l'
   445  00FF7E  00                 	db	0
   446  00FF7F  46                 	db	70	;'F'
   447  00FF80  61                 	db	97	;'a'
   448  00FF81  69                 	db	105	;'i'
   449  00FF82  6C                 	db	108	;'l'
   450  00FF83  65                 	db	101	;'e'
   451  00FF84  64                 	db	100	;'d'
   452  00FF85  20                 	db	32
   453  00FF86  4F                 	db	79	;'O'
   454  00FF87  70                 	db	112	;'p'
   455  00FF88  63                 	db	99	;'c'
   456  00FF89  6F                 	db	111	;'o'
   457  00FF8A  64                 	db	100	;'d'
   458  00FF8B  65                 	db	101	;'e'
   459  00FF8C  20                 	db	32
   460  00FF8D  3D                 	db	61	;'='
   461  00FF8E  20                 	db	32
   462  00FF8F  25                 	db	37
   463  00FF90  64                 	db	100	;'d'
   464  00FF91  20                 	db	32
   465  00FF92  0D                 	db	13
   466  00FF93  0A                 	db	10
   467  00FF94  00                 	db	0
   468  00FF95  55                 	db	85	;'U'
   469  00FF96  44                 	db	68	;'D'
   470  00FF97  50                 	db	80	;'P'
   471  00FF98  5F                 	db	95	;'_'
   472  00FF99  53                 	db	83	;'S'
   473  00FF9A  74                 	db	116	;'t'
   474  00FF9B  61                 	db	97	;'a'
   475  00FF9C  72                 	db	114	;'r'
   476  00FF9D  74                 	db	116	;'t'
   477  00FF9E  20                 	db	32
   478  00FF9F  46                 	db	70	;'F'
   479  00FFA0  61                 	db	97	;'a'
   480  00FFA1  69                 	db	105	;'i'
   481  00FFA2  6C                 	db	108	;'l'
   482  00FFA3  65                 	db	101	;'e'
   483  00FFA4  64                 	db	100	;'d'
   484  00FFA5  0D                 	db	13
   485  00FFA6  0A                 	db	10
   486  00FFA7  00                 	db	0
   487  00FFA8                     STR_8:
   488  00FFA8  6E                 	db	110	;'n'
   489  00FFA9  74                 	db	116	;'t'
   490  00FFAA  70                 	db	112	;'p'
   491  00FFAB  2E                 	db	46
   492  00FFAC  6D                 	db	109	;'m'
   493  00FFAD  69                 	db	105	;'i'
   494  00FFAE  63                 	db	99	;'c'
   495  00FFAF  72                 	db	114	;'r'
   496  00FFB0  6F                 	db	111	;'o'
   497  00FFB1  63                 	db	99	;'c'
   498  00FFB2  68                 	db	104	;'h'
   499  00FFB3  69                 	db	105	;'i'
   500  00FFB4  70                 	db	112	;'p'
   501  00FFB5  2E                 	db	46
   502  00FFB6  63                 	db	99	;'c'
   503  00FFB7  6F                 	db	111	;'o'
   504  00FFB8  6D                 	db	109	;'m'
   505  00FFB9  00                 	db	0
   506  00FFBA  30                 	db	48	;'0'
   507  00FFBB  31                 	db	49	;'1'
   508  00FFBC  32                 	db	50	;'2'
   509  00FFBD  33                 	db	51	;'3'
   510  00FFBE  34                 	db	52	;'4'
   511  00FFBF  35                 	db	53	;'5'
   512  00FFC0  36                 	db	54	;'6'
   513  00FFC1  37                 	db	55	;'7'
   514  00FFC2  38                 	db	56	;'8'
   515  00FFC3  39                 	db	57	;'9'
   516  00FFC4  41                 	db	65	;'A'
   517  00FFC5  42                 	db	66	;'B'
   518  00FFC6  43                 	db	67	;'C'
   519  00FFC7  44                 	db	68	;'D'
   520  00FFC8  45                 	db	69	;'E'
   521  00FFC9  46                 	db	70	;'F'
   522  00FFCA  00                 	db	0
   523  00FFCB  25                 	db	37
   524  00FFCC  64                 	db	100	;'d'
   525  00FFCD  2E                 	db	46
   526  00FFCE  25                 	db	37
   527  00FFCF  64                 	db	100	;'d'
   528  00FFD0  2E                 	db	46
   529  00FFD1  25                 	db	37
   530  00FFD2  64                 	db	100	;'d'
   531  00FFD3  2E                 	db	46
   532  00FFD4  25                 	db	37
   533  00FFD5  64                 	db	100	;'d'
   534  00FFD6  00                 	db	0
   535  00FFD7  25                 	db	37
   536  00FFD8  75                 	db	117	;'u'
   537  00FFD9  20                 	db	32
   538  00FFDA  3A                 	db	58	;':'
   539  00FFDB  20                 	db	32
   540  00FFDC  25                 	db	37
   541  00FFDD  73                 	db	115	;'s'
   542  00FFDE  0D                 	db	13
   543  00FFDF  0A                 	db	10
   544  00FFE0  00                 	db	0
   545  00FFE1                     STR_9:
   546  00FFE1  6E                 	db	110	;'n'
   547  00FFE2  65                 	db	101	;'e'
   548  00FFE3  74                 	db	116	;'t'
   549  00FFE4  61                 	db	97	;'a'
   550  00FFE5  73                 	db	115	;'s'
   551  00FFE6  63                 	db	99	;'c'
   552  00FFE7  69                 	db	105	;'i'
   553  00FFE8  69                 	db	105	;'i'
   554  00FFE9  00                 	db	0
   555  00FFEA  28                 	db	40
   556  00FFEB  6E                 	db	110	;'n'
   557  00FFEC  75                 	db	117	;'u'
   558  00FFED  6C                 	db	108	;'l'
   559  00FFEE  6C                 	db	108	;'l'
   560  00FFEF  29                 	db	41
   561  00FFF0  00                 	db	0
   562  00FFF1                     STR_10:
   563  00FFF1  6F                 	db	111	;'o'
   564  00FFF2  63                 	db	99	;'c'
   565  00FFF3  74                 	db	116	;'t'
   566  00FFF4  65                 	db	101	;'e'
   567  00FFF5  74                 	db	116	;'t'
   568  00FFF6  00                 	db	0
   569  00FFF7                     STR_11:
   570  00FFF7  6D                 	db	109	;'m'
   571  00FFF8  61                 	db	97	;'a'
   572  00FFF9  69                 	db	105	;'i'
   573  00FFFA  6C                 	db	108	;'l'
   574  00FFFB  00                 	db	0
   575  00FFFC                     STR_2:
   576  00FFFC  2E                 	db	46
   577  00FFFD  00                 	db	0
   578  0000                     
   579                           ; #config settings
   580  00FFFE  00                 	db	0	; dummy byte at the end
   581  0000                     
   582                           	psect	nvCOMRAM
   583  000052                     __pnvCOMRAM:
   584                           	opt stack 0
   585  000052                     _timer0ReloadVal:
   586                           	opt stack 0
   587  000052                     	ds	2
   588  000054                     _timer1ReloadVal:
   589                           	opt stack 0
   590  000054                     	ds	2
   591                           
   592                           	psect	nvBANK1
   593  0001B2                     __pnvBANK1:
   594                           	opt stack 0
   595  0001B2                     _TMR0_InterruptHandler:
   596                           	opt stack 0
   597  0001B2                     	ds	3
   598  0001B5                     _TMR1_InterruptHandler:
   599                           	opt stack 0
   600  0001B5                     	ds	3
   601  0000                     _EDMAND	set	3826
   602  0000                     _EDMAST	set	3824
   603  0000                     _EDMADST	set	3828
   604  0000                     _MIRD	set	3768
   605  0000                     _MIWR	set	3766
   606  0000                     _MAMXFL	set	3754
   607  0000                     _ERXRDPT	set	3820
   608  0000                     _EWRPT	set	3810
   609  0000                     _ERXND	set	3818
   610  0000                     _ERXST	set	3816
   611  0000                     _ETXND	set	3814
   612  0000                     _ETXST	set	3812
   613  0000                     _MAIPG	set	3750
   614  0000                     _MICMDbits	set	3762
   615  0000                     _MICMD	set	3762
   616  0000                     _MIREGADR	set	3764
   617  0000                     _MISTATbits	set	3722
   618  0000                     _EIEbits	set	3835
   619  0000                     _EIE	set	3835
   620  0000                     _ERXFCON	set	3800
   621  0000                     _MAADR6	set	3713
   622  0000                     _MAADR5	set	3712
   623  0000                     _MAADR4	set	3715
   624  0000                     _MAADR3	set	3714
   625  0000                     _MAADR2	set	3717
   626  0000                     _MAADR1	set	3716
   627  0000                     _EFLOCON	set	3735
   628  0000                     _MABBIPG	set	3748
   629  0000                     _MACON4	set	3747
   630  0000                     _MACON3	set	3746
   631  0000                     _MACON1	set	3744
   632  0000                     _ECON2	set	3838
   633  0000                     _ESTATbits	set	3837
   634  0000                     _ERDPT	set	3962
   635  0000                     _TMR1	set	4046
   636  0000                     _SSP1STATbits	set	4039
   637  0000                     _SSP1BUF	set	4041
   638  0000                     _SSP1CON1bits	set	4038
   639  0000                     _SSP1ADD	set	4040
   640  0000                     _SSP1CON1	set	4038
   641  0000                     _SSP1STAT	set	4039
   642  0000                     _INTCON	set	4082
   643  0000                     _PIR2bits	set	4001
   644  0000                     _EIRbits	set	3936
   645  0000                     _ECON1bits	set	4050
   646  0000                     _ECON1	set	4050
   647  0000                     _CCPR1H	set	4031
   648  0000                     _CCPR1L	set	4030
   649  0000                     _ECCP1AS	set	4022
   650  0000                     _ECCP1DEL	set	3961
   651  0000                     _CCP1CON	set	4029
   652  0000                     _T0CONbits	set	4053
   653  0000                     _T0CON	set	4053
   654  0000                     _TMR0L	set	4054
   655  0000                     _TMR0H	set	4055
   656  0000                     _ADCON0bits	set	4034
   657  0000                     _ADRESH	set	4036
   658  0000                     _ADRESL	set	4035
   659  0000                     _ADCON2	set	4032
   660  0000                     _ADCON1	set	4033
   661  0000                     _ADCON0	set	4034
   662  0000                     _ADCON1bits	set	4033
   663  0000                     _TRISD	set	3989
   664  0000                     _TRISC	set	3988
   665  0000                     _TRISB	set	3987
   666  0000                     _TRISG	set	3992
   667  0000                     _TRISA	set	3986
   668  0000                     _TRISF	set	3991
   669  0000                     _TRISE	set	3990
   670  0000                     _LATC	set	3979
   671  0000                     _LATG	set	3983
   672  0000                     _LATB	set	3978
   673  0000                     _LATF	set	3982
   674  0000                     _LATA	set	3977
   675  0000                     _LATD	set	3980
   676  0000                     _LATE	set	3981
   677  0000                     _T2CONbits	set	4042
   678  0000                     _T2CON	set	4042
   679  0000                     _TMR2	set	4044
   680  0000                     _PR2	set	4043
   681  0000                     _OSCTUNE	set	3995
   682  0000                     _OSCCON	set	4051
   683  0000                     _T1CONbits	set	4045
   684  0000                     _T1CON	set	4045
   685  0000                     _TMR1L	set	4046
   686  0000                     _TMR1H	set	4047
   687  0000                     _PIR1bits	set	3998
   688  0000                     _PIE1bits	set	3997
   689  0000                     _INTCONbits	set	4082
   690  0000                     _RCONbits	set	4048
   691  0000                     _GIE	set	32663
   692  0000                     _RXRST	set	32406
   693                           
   694                           	psect	cinit
   695  010000                     __pcinit:
   696                           	opt stack 0
   697  010000                     start_initialization:
   698                           	opt stack 0
   699  010000                     __initialization:
   700                           	opt stack 0
   701                           
   702                           ; Initialize objects allocated to BANK1 (54 bytes)
   703                           ; load TBLPTR registers with __pidataBANK1
   704  010000  0E72               	movlw	low __pidataBANK1
   705  010002  6EF6               	movwf	tblptrl,c
   706  010004  0E01               	movlw	high __pidataBANK1
   707  010006  6EF7               	movwf	tblptrh,c
   708  010008  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   709  01000A  6EF8               	movwf	tblptru,c
   710  01000C  EE01  F07C         	lfsr	0,__pdataBANK1
   711  010010  EE10 F036          	lfsr	1,54
   712  010014                     copy_data0:
   713  010014  0009               	tblrd		*+
   714  010016  CFF5 FFEE          	movff	tablat,postinc0
   715  01001A  50E5               	movf	postdec1,w,c
   716  01001C  50E1               	movf	fsr1l,w,c
   717  01001E  E1FA               	bnz	copy_data0
   718                           
   719                           ; Initialize objects allocated to BANK0 (54 bytes)
   720                           ; load TBLPTR registers with __pidataBANK0
   721  010020  0E3C               	movlw	low __pidataBANK0
   722  010022  6EF6               	movwf	tblptrl,c
   723  010024  0E01               	movlw	high __pidataBANK0
   724  010026  6EF7               	movwf	tblptrh,c
   725  010028  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   726  01002A  6EF8               	movwf	tblptru,c
   727  01002C  EE00  F0C8         	lfsr	0,__pdataBANK0
   728  010030  EE10 F036          	lfsr	1,54
   729  010034                     copy_data1:
   730  010034  0009               	tblrd		*+
   731  010036  CFF5 FFEE          	movff	tablat,postinc0
   732  01003A  50E5               	movf	postdec1,w,c
   733  01003C  50E1               	movf	fsr1l,w,c
   734  01003E  E1FA               	bnz	copy_data1
   735                           
   736                           ; Initialize objects allocated to COMRAM (4 bytes)
   737                           ; load TBLPTR registers with __pidataCOMRAM
   738  010040  0EFE               	movlw	low __pidataCOMRAM
   739  010042  6EF6               	movwf	tblptrl,c
   740  010044  0E02               	movlw	high __pidataCOMRAM
   741  010046  6EF7               	movwf	tblptrh,c
   742  010048  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   743  01004A  6EF8               	movwf	tblptru,c
   744  01004C  EE00  F056         	lfsr	0,__pdataCOMRAM
   745  010050  EE10 F004          	lfsr	1,4
   746  010054                     copy_data2:
   747  010054  0009               	tblrd		*+
   748  010056  CFF5 FFEE          	movff	tablat,postinc0
   749  01005A  50E5               	movf	postdec1,w,c
   750  01005C  50E1               	movf	fsr1l,w,c
   751  01005E  E1FA               	bnz	copy_data2
   752                           
   753                           ; Clear objects allocated to BANK5 (220 bytes)
   754  010060  EE05  F000         	lfsr	0,__pbssBANK5
   755  010064  0EDC               	movlw	220
   756  010066                     clear_0:
   757  010066  6AEE               	clrf	postinc0,c
   758  010068  06E8               	decf	wreg,f,c
   759  01006A  E1FD               	bnz	clear_0
   760                           
   761                           ; Clear objects allocated to BANK4 (220 bytes)
   762  01006C  EE04  F000         	lfsr	0,__pbssBANK4
   763  010070  0EDC               	movlw	220
   764  010072                     clear_1:
   765  010072  6AEE               	clrf	postinc0,c
   766  010074  06E8               	decf	wreg,f,c
   767  010076  E1FD               	bnz	clear_1
   768                           
   769                           ; Clear objects allocated to BANK3 (232 bytes)
   770  010078  EE03  F000         	lfsr	0,__pbssBANK3
   771  01007C  0EE8               	movlw	232
   772  01007E                     clear_2:
   773  01007E  6AEE               	clrf	postinc0,c
   774  010080  06E8               	decf	wreg,f,c
   775  010082  E1FD               	bnz	clear_2
   776                           
   777                           ; Clear objects allocated to BANK2 (200 bytes)
   778  010084  EE02  F000         	lfsr	0,__pbssBANK2
   779  010088  0EC8               	movlw	200
   780  01008A                     clear_3:
   781  01008A  6AEE               	clrf	postinc0,c
   782  01008C  06E8               	decf	wreg,f,c
   783  01008E  E1FD               	bnz	clear_3
   784                           
   785                           ; Clear objects allocated to BANK1 (124 bytes)
   786  010090  EE01  F000         	lfsr	0,__pbssBANK1
   787  010094  0E7C               	movlw	124
   788  010096                     clear_4:
   789  010096  6AEE               	clrf	postinc0,c
   790  010098  06E8               	decf	wreg,f,c
   791  01009A  E1FD               	bnz	clear_4
   792                           
   793                           ; Clear objects allocated to BANK0 (104 bytes)
   794  01009C  EE00  F060         	lfsr	0,__pbssBANK0
   795  0100A0  0E68               	movlw	104
   796  0100A2                     clear_5:
   797  0100A2  6AEE               	clrf	postinc0,c
   798  0100A4  06E8               	decf	wreg,f,c
   799  0100A6  E1FD               	bnz	clear_5
   800                           
   801                           ; Clear objects allocated to COMRAM (63 bytes)
   802  0100A8  EE00  F001         	lfsr	0,__pbssCOMRAM
   803  0100AC  0E3F               	movlw	63
   804  0100AE                     clear_6:
   805  0100AE  6AEE               	clrf	postinc0,c
   806  0100B0  06E8               	decf	wreg,f,c
   807  0100B2  E1FD               	bnz	clear_6
   808  0100B4                     end_of_initialization:
   809                           	opt stack 0
   810  0100B4                     __end_of__initialization:
   811                           	opt stack 0
   812  0100B4  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   813  0100B6  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   814  0100B8  0100               	movlb	0
   815  0100BA  EF75  F081         	goto	_main	;jump to C main() function
   816                           tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           postinc0	equ	0xFEE
   821                           wreg	equ	0xFE8
   822                           postdec1	equ	0xFE5
   823                           fsr1l	equ	0xFE1
   824                           
   825                           	psect	bssCOMRAM
   826  000001                     __pbssCOMRAM:
   827                           	opt stack 0
   828  000001                     _ethData:
   829                           	opt stack 0
   830  000001                     	ds	6
   831  000007                     _receivedRemoteAddress:
   832                           	opt stack 0
   833  000007                     	ds	4
   834  00000B                     _rxPacketStatusVector:
   835                           	opt stack 0
   836  00000B                     	ds	4
   837  00000F                     _prev_block:
   838                           	opt stack 0
   839  00000F                     	ds	2
   840  000011                     _current_block:
   841                           	opt stack 0
   842  000011                     	ds	2
   843  000013                     _rcvPayloadLen:
   844                           	opt stack 0
   845  000013                     	ds	2
   846  000015                     _nextAvailablePort:
   847                           	opt stack 0
   848  000015                     	ds	2
   849  000017                     _currentTCB:
   850                           	opt stack 0
   851  000017                     	ds	2
   852  000019                     _tcbList:
   853                           	opt stack 0
   854  000019                     	ds	2
   855  00001B                     _dhcpState:
   856                           	opt stack 0
   857  00001B                     	ds	2
   858  00001D                     _ipv4StartPosition:
   859                           	opt stack 0
   860  00001D                     	ds	2
   861  00001F                     _nextPacketPointer:
   862                           	opt stack 0
   863  00001F                     	ds	2
   864  000021                     _pTail:
   865                           	opt stack 0
   866  000021                     	ds	2
   867  000023                     _pHead:
   868                           	opt stack 0
   869  000023                     	ds	2
   870  000025                     TMR1_ISR@CountCallBack:
   871                           	opt stack 0
   872  000025                     	ds	2
   873  000027                     _last_block:
   874                           	opt stack 0
   875  000027                     	ds	1
   876  000028                     _tcbListSize:
   877                           	opt stack 0
   878  000028                     	ds	1
   879  000029                     _sequenceIndex:
   880                           	opt stack 0
   881  000029                     	ds	1
   882  00002A                     _ethListSize:
   883                           	opt stack 0
   884  00002A                     	ds	1
   885  00002B                     _Control_Byte:
   886                           	opt stack 0
   887  00002B                     	ds	1
   888  00002C                     _tcpHeader:
   889                           	opt stack 0
   890  00002C                     	ds	20
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           postdec1	equ	0xFE5
   898                           fsr1l	equ	0xFE1
   899                           
   900                           	psect	dataCOMRAM
   901  000056                     __pdataCOMRAM:
   902                           	opt stack 0
   903  000056                     _tcpMss:
   904                           	opt stack 0
   905  000056                     	ds	2
   906  000058                     _lfsr_value:
   907                           	opt stack 0
   908  000058                     	ds	1
   909  000059                     _xor_mask:
   910                           	opt stack 0
   911  000059                     	ds	1
   912                           tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           tblptrl	equ	0xFF6
   915                           tablat	equ	0xFF5
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1l	equ	0xFE1
   920                           
   921                           	psect	bssBANK0
   922  000060                     __pbssBANK0:
   923                           	opt stack 0
   924  000060                     _ip_database_info:
   925                           	opt stack 0
   926  000060                     	ds	36
   927  000084                     _nextSequenceNumber:
   928                           	opt stack 0
   929  000084                     	ds	4
   930  000088                     DHCP_Manage@managementTimer:
   931                           	opt stack 0
   932  000088                     	ds	4
   933  00008C                     _device_time:
   934                           	opt stack 0
   935  00008C                     	ds	4
   936  000090                     Network_Manage@nowPv:
   937                           	opt stack 0
   938  000090                     	ds	4
   939  000094                     _remoteIpv4Address:
   940                           	opt stack 0
   941  000094                     	ds	4
   942  000098                     strtok@sp:
   943                           	opt stack 0
   944  000098                     	ds	2
   945  00009A                     _flash_checksum_new:
   946                           	opt stack 0
   947  00009A                     	ds	2
   948  00009C                     _flash_checksum_current:
   949                           	opt stack 0
   950  00009C                     	ds	2
   951  00009E                     _checksum_eeprm:
   952                           	opt stack 0
   953  00009E                     	ds	2
   954  0000A0                     _next_block:
   955                           	opt stack 0
   956  0000A0                     	ds	2
   957  0000A2                     _store_type:
   958                           	opt stack 0
   959  0000A2                     	ds	2
   960  0000A4                     _destPort:
   961                           	opt stack 0
   962  0000A4                     	ds	2
   963  0000A6                     _portUnreachable:
   964                           	opt stack 0
   965  0000A6                     	ds	2
   966  0000A8                     _ipv4Header:
   967                           	opt stack 0
   968  0000A8                     	ds	20
   969  0000BC                     _udpHeader:
   970                           	opt stack 0
   971  0000BC                     	ds	8
   972  0000C4                     _arpTimer:
   973                           	opt stack 0
   974  0000C4                     	ds	4
   975                           tblptru	equ	0xFF8
   976                           tblptrh	equ	0xFF7
   977                           tblptrl	equ	0xFF6
   978                           tablat	equ	0xFF5
   979                           postinc0	equ	0xFEE
   980                           wreg	equ	0xFE8
   981                           postdec1	equ	0xFE5
   982                           fsr1l	equ	0xFE1
   983                           
   984                           	psect	dataBANK0
   985  0000C8                     __pdataBANK0:
   986                           	opt stack 0
   987  0000C8                     _dhcpData:
   988                           	opt stack 0
   989  0000C8                     	ds	48
   990  0000F8                     _tftp_last_address:
   991                           	opt stack 0
   992  0000F8                     	ds	4
   993  0000FC                     _ntp:
   994                           	opt stack 0
   995  0000FC                     	ds	2
   996                           tblptru	equ	0xFF8
   997                           tblptrh	equ	0xFF7
   998                           tblptrl	equ	0xFF6
   999                           tablat	equ	0xFF5
  1000                           postinc0	equ	0xFEE
  1001                           wreg	equ	0xFE8
  1002                           postdec1	equ	0xFE5
  1003                           fsr1l	equ	0xFE1
  1004                           
  1005                           	psect	bssBANK1
  1006  000100                     __pbssBANK1:
  1007                           	opt stack 0
  1008  000100                     	ds	4
  1009  000104                     HTTP_L_Server@port80TCB:
  1010                           	opt stack 0
  1011  000104                     	ds	58
  1012  00013E                     _tftp_msg:
  1013                           	opt stack 0
  1014  00013E                     	ds	41
  1015  000167                     makeIpv4AddresstoStr@ip_str:
  1016                           	opt stack 0
  1017  000167                     	ds	15
  1018  000176                     _hostMacAddress:
  1019                           	opt stack 0
  1020  000176                     	ds	6
  1021                           tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           postdec1	equ	0xFE5
  1028                           fsr1l	equ	0xFE1
  1029                           
  1030                           	psect	dataBANK1
  1031  00017C                     __pdataBANK1:
  1032                           	opt stack 0
  1033  00017C                     DHCP_Handler@F840:
  1034                           	opt stack 0
  1035  00017C                     	ds	48
  1036  0001AC                     _tftp_modes:
  1037                           	opt stack 0
  1038  0001AC                     	ds	6
  1039                           tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1l	equ	0xFE1
  1047                           
  1048                           	psect	bssBANK2
  1049  000200                     __pbssBANK2:
  1050                           	opt stack 0
  1051  000200                     _txData:
  1052                           	opt stack 0
  1053  000200                     	ds	200
  1054                           tblptru	equ	0xFF8
  1055                           tblptrh	equ	0xFF7
  1056                           tblptrl	equ	0xFF6
  1057                           tablat	equ	0xFF5
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           postdec1	equ	0xFE5
  1061                           fsr1l	equ	0xFE1
  1062                           
  1063                           	psect	bssBANK3
  1064  000300                     __pbssBANK3:
  1065                           	opt stack 0
  1066  000300                     _dnsCache:
  1067                           	opt stack 0
  1068  000300                     	ds	128
  1069  000380                     _arpMap:
  1070                           	opt stack 0
  1071  000380                     	ds	104
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           postdec1	equ	0xFE5
  1079                           fsr1l	equ	0xFE1
  1080                           
  1081                           	psect	bssBANK4
  1082  000400                     __pbssBANK4:
  1083                           	opt stack 0
  1084  000400                     HTTP_L_Server@rxdataport80:
  1085                           	opt stack 0
  1086  000400                     	ds	220
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postdec1	equ	0xFE5
  1094                           fsr1l	equ	0xFE1
  1095                           
  1096                           	psect	bssBANK5
  1097  000500                     __pbssBANK5:
  1098                           	opt stack 0
  1099  000500                     HTTP_L_Server@txdataport80:
  1100                           	opt stack 0
  1101  000500                     	ds	220
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111                           	psect	cstackBANK1
  1112  0001B8                     __pcstackBANK1:
  1113                           	opt stack 0
  1114  0001B8                     TMR1_SetInterruptHandler@InterruptHandler:
  1115                           	opt stack 0
  1116  0001B8                     TMR0_SetInterruptHandler@InterruptHandler:
  1117                           	opt stack 0
  1118                           
  1119                           ; 3 bytes @ 0x0
  1120  0001B8                     	ds	3
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           postdec1	equ	0xFE5
  1128                           fsr1l	equ	0xFE1
  1129                           
  1130                           	psect	cstackBANK0
  1131  0000FE                     __pcstackBANK0:
  1132                           	opt stack 0
  1133  0000FE                     ??_TMR0_Initialize:
  1134  0000FE                     
  1135                           ; 1 bytes @ 0x0
  1136  0000FE                     	ds	2
  1137  000100                     tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           postdec1	equ	0xFE5
  1144                           fsr1l	equ	0xFE1
  1145                           
  1146                           ; 1 bytes @ 0x2
  1147                           
  1148                           	psect	cstackCOMRAM
  1149  000040                     __pcstackCOMRAM:
  1150                           	opt stack 0
  1151  000040                     ??_INTERRUPT_InterruptManager:
  1152  000040                     
  1153                           ; 1 bytes @ 0x0
  1154  000040                     	ds	18
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           postdec1	equ	0xFE5
  1162                           fsr1l	equ	0xFE1
  1163                           
  1164 ;;
  1165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1166 ;;
  1167 ;; *************** function _main *****************
  1168 ;; Defined at:
  1169 ;;		line 7 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels required when called:    7
  1189 ;; This function calls:
  1190 ;;		_SYSTEM_Initialize
  1191 ;; This function is called by:
  1192 ;;		Startup code after reset
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text0
  1197  0102EA                     __ptext0:
  1198                           	opt stack 0
  1199  0102EA                     _main:
  1200                           	opt stack 24
  1201                           
  1202                           ;main.c: 10: SYSTEM_Initialize();
  1203                           
  1204                           ;incstack = 0
  1205  0102EA  EC15  F081         	call	_SYSTEM_Initialize	;wreg free
  1206                           
  1207                           ;main.c: 29: (INTCONbits.GIE = 1);
  1208  0102EE  8EF2               	bsf	intcon,7,c	;volatile
  1209                           
  1210                           ;main.c: 35: (INTCONbits.PEIE = 1);
  1211  0102F0  8CF2               	bsf	intcon,6,c	;volatile
  1212  0102F2                     l2070:
  1213                           
  1214                           ;main.c: 40: {
  1215  0102F2  D7FF               	goto	l2070
  1216  0102F4                     __end_of_main:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           intcon	equ	0xFF2
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           
  1228 ;; *************** function _SYSTEM_Initialize *****************
  1229 ;; Defined at:
  1230 ;;		line 28 in file "mcc_generated_files/mcc.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    6
  1251 ;; This function calls:
  1252 ;;		_ADC_Initialize
  1253 ;;		_ECCP1_Initialize
  1254 ;;		_INTERRUPT_Initialize
  1255 ;;		_OSCILLATOR_Initialize
  1256 ;;		_PIN_MANAGER_Initialize
  1257 ;;		_SPI1_Initialize
  1258 ;;		_TMR0_Initialize
  1259 ;;		_TMR1_Initialize
  1260 ;;		_TMR2_Initialize
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text1
  1267  01022A                     __ptext1:
  1268                           	opt stack 0
  1269  01022A                     _SYSTEM_Initialize:
  1270                           	opt stack 24
  1271                           
  1272                           ;mcc.c: 30: INTERRUPT_Initialize();
  1273                           
  1274                           ;incstack = 0
  1275  01022A  EC81  F081         	call	_INTERRUPT_Initialize	;wreg free
  1276                           
  1277                           ;mcc.c: 31: PIN_MANAGER_Initialize();
  1278  01022E  EC5F  F080         	call	_PIN_MANAGER_Initialize	;wreg free
  1279                           
  1280                           ;mcc.c: 32: OSCILLATOR_Initialize();
  1281  010232  EC7A  F081         	call	_OSCILLATOR_Initialize	;wreg free
  1282                           
  1283                           ;mcc.c: 33: SPI1_Initialize();
  1284  010236  EC6E  F081         	call	_SPI1_Initialize	;wreg free
  1285                           
  1286                           ;mcc.c: 34: ECCP1_Initialize();
  1287  01023A  EC3A  F081         	call	_ECCP1_Initialize	;wreg free
  1288                           
  1289                           ;mcc.c: 35: ADC_Initialize();
  1290  01023E  EC45  F081         	call	_ADC_Initialize	;wreg free
  1291                           
  1292                           ;mcc.c: 36: TMR2_Initialize();
  1293  010242  EC50  F081         	call	_TMR2_Initialize	;wreg free
  1294                           
  1295                           ;mcc.c: 37: TMR1_Initialize();
  1296  010246  ECEB  F080         	call	_TMR1_Initialize	;wreg free
  1297                           
  1298                           ;mcc.c: 38: TMR0_Initialize();
  1299  01024A  EC80  F080         	call	_TMR0_Initialize	;wreg free
  1300  01024E  0012               	return		;funcret
  1301  010250                     __end_of_SYSTEM_Initialize:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           intcon	equ	0xFF2
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1l	equ	0xFE1
  1312                           
  1313 ;; *************** function _TMR2_Initialize *****************
  1314 ;; Defined at:
  1315 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;Total ram usage:        0 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    4
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_SYSTEM_Initialize
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text2
  1344  0102A0                     __ptext2:
  1345                           	opt stack 0
  1346  0102A0                     _TMR2_Initialize:
  1347                           	opt stack 25
  1348                           
  1349                           ;tmr2.c: 66: PR2 = 0x67;
  1350                           
  1351                           ;incstack = 0
  1352  0102A0  0E67               	movlw	103
  1353  0102A2  6ECB               	movwf	4043,c	;volatile
  1354                           
  1355                           ;tmr2.c: 69: TMR2 = 0x00;
  1356  0102A4  0E00               	movlw	0
  1357  0102A6  6ECC               	movwf	4044,c	;volatile
  1358                           
  1359                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  1360  0102A8  929E               	bcf	3998,1,c	;volatile
  1361                           
  1362                           ;tmr2.c: 75: T2CON = 0x05;
  1363  0102AA  0E05               	movlw	5
  1364  0102AC  6ECA               	movwf	4042,c	;volatile
  1365  0102AE  0012               	return		;funcret
  1366  0102B0                     __end_of_TMR2_Initialize:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           intcon	equ	0xFF2
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           postdec1	equ	0xFE5
  1376                           fsr1l	equ	0xFE1
  1377                           
  1378 ;; *************** function _TMR1_Initialize *****************
  1379 ;; Defined at:
  1380 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    5
  1401 ;; This function calls:
  1402 ;;		_TMR1_SetInterruptHandler
  1403 ;; This function is called by:
  1404 ;;		_SYSTEM_Initialize
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text3
  1409  0101D6                     __ptext3:
  1410                           	opt stack 0
  1411  0101D6                     _TMR1_Initialize:
  1412                           	opt stack 24
  1413                           
  1414                           ;tmr1.c: 68: TMR1H = 0x01;
  1415                           
  1416                           ;incstack = 0
  1417  0101D6  0E01               	movlw	1
  1418  0101D8  6ECF               	movwf	4047,c	;volatile
  1419                           
  1420                           ;tmr1.c: 71: TMR1L = 0xB0;
  1421  0101DA  0EB0               	movlw	176
  1422  0101DC  6ECE               	movwf	4046,c	;volatile
  1423                           
  1424                           ;tmr1.c: 74: timer1ReloadVal=TMR1;
  1425  0101DE  CFCE F054          	movff	4046,_timer1ReloadVal	;volatile
  1426  0101E2  CFCF F055          	movff	4047,_timer1ReloadVal+1	;volatile
  1427                           
  1428                           ;tmr1.c: 77: PIR1bits.TMR1IF = 0;
  1429  0101E6  909E               	bcf	3998,0,c	;volatile
  1430                           
  1431                           ;tmr1.c: 80: PIE1bits.TMR1IE = 1;
  1432  0101E8  809D               	bsf	3997,0,c	;volatile
  1433                           
  1434                           ;tmr1.c: 83: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1435  0101EA  0E06               	movlw	low _TMR1_DefaultInterruptHandler
  1436  0101EC  0101               	movlb	1	; () banked
  1437  0101EE  6FB8               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  1438  0101F0  0E03               	movlw	high _TMR1_DefaultInterruptHandler
  1439  0101F2  6FB9               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1440  0101F4  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
  1441  0101F6  6FBA               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  1442  0101F8  EC60  F081         	call	_TMR1_SetInterruptHandler	;wreg free
  1443                           
  1444                           ;tmr1.c: 86: T1CON = 0x31;
  1445  0101FC  0E31               	movlw	49
  1446  0101FE  6ECD               	movwf	4045,c	;volatile
  1447  010200  0012               	return		;funcret
  1448  010202                     __end_of_TMR1_Initialize:
  1449                           	opt stack 0
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           intcon	equ	0xFF2
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           postdec1	equ	0xFE5
  1458                           fsr1l	equ	0xFE1
  1459                           
  1460 ;; *************** function _TMR1_SetInterruptHandler *****************
  1461 ;; Defined at:
  1462 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  1465 ;;		 -> rtcc_handler(1), TMR1_DefaultInterruptHandler(1), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1477 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;Total ram usage:        3 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    4
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_TMR1_Initialize
  1488 ;;		_rtcc_init
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text4
  1493  0102C0                     __ptext4:
  1494                           	opt stack 0
  1495  0102C0                     _TMR1_SetInterruptHandler:
  1496                           	opt stack 24
  1497                           
  1498                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  1499                           
  1500                           ;incstack = 0
  1501  0102C0  C1B8  F1B5         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1502  0102C4  C1B9  F1B6         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1503  0102C8  C1BA  F1B7         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
  1504  0102CC  0012               	return		;funcret
  1505  0102CE                     __end_of_TMR1_SetInterruptHandler:
  1506                           	opt stack 0
  1507                           tblptru	equ	0xFF8
  1508                           tblptrh	equ	0xFF7
  1509                           tblptrl	equ	0xFF6
  1510                           tablat	equ	0xFF5
  1511                           intcon	equ	0xFF2
  1512                           postinc0	equ	0xFEE
  1513                           wreg	equ	0xFE8
  1514                           postdec1	equ	0xFE5
  1515                           fsr1l	equ	0xFE1
  1516                           
  1517 ;; *************** function _TMR0_Initialize *****************
  1518 ;; Defined at:
  1519 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    5
  1540 ;; This function calls:
  1541 ;;		_TMR0_SetInterruptHandler
  1542 ;; This function is called by:
  1543 ;;		_SYSTEM_Initialize
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text5
  1548  010100                     __ptext5:
  1549                           	opt stack 0
  1550  010100                     _TMR0_Initialize:
  1551                           	opt stack 24
  1552                           
  1553                           ;tmr0.c: 71: TMR0H = 0xD7;
  1554                           
  1555                           ;incstack = 0
  1556  010100  0ED7               	movlw	215
  1557  010102  6ED7               	movwf	4055,c	;volatile
  1558                           
  1559                           ;tmr0.c: 74: TMR0L = 0x4E;
  1560  010104  0E4E               	movlw	78
  1561  010106  6ED6               	movwf	4054,c	;volatile
  1562                           
  1563                           ;tmr0.c: 78: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1564  010108  50D6               	movf	4054,w,c	;volatile
  1565  01010A  CFD7 F0FE          	movff	4055,??_TMR0_Initialize	;volatile
  1566  01010E  0100               	movlb	0	; () banked
  1567  010110  6BFF               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  1568  010112  C0FE  F0FF         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1569  010116  6BFE               	clrf	??_TMR0_Initialize& (0+255),b
  1570  010118  11FE               	iorwf	??_TMR0_Initialize& (0+255),w,b
  1571  01011A  6E52               	movwf	_timer0ReloadVal,c	;volatile
  1572  01011C  51FF               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  1573  01011E  6E53               	movwf	_timer0ReloadVal+1,c	;volatile
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  1577  010120  94F2               	bcf	intcon,2,c	;volatile
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  1581  010122  8AF2               	bsf	intcon,5,c	;volatile
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1585  010124  0E08               	movlw	low _TMR0_DefaultInterruptHandler
  1586  010126  0101               	movlb	1	; () banked
  1587  010128  6FB8               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1588  01012A  0E03               	movlw	high _TMR0_DefaultInterruptHandler
  1589  01012C  6FB9               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1590  01012E  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  1591  010130  6FBA               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  1592  010132  EC67  F081         	call	_TMR0_SetInterruptHandler	;wreg free
  1593                           
  1594                           ;tmr0.c: 90: T0CON = 0x9F;
  1595  010136  0E9F               	movlw	159
  1596  010138  6ED5               	movwf	4053,c	;volatile
  1597  01013A  0012               	return		;funcret
  1598  01013C                     __end_of_TMR0_Initialize:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           postdec1	equ	0xFE5
  1608                           fsr1l	equ	0xFE1
  1609                           
  1610 ;; *************** function _TMR0_SetInterruptHandler *****************
  1611 ;; Defined at:
  1612 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  1615 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1627 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;Total ram usage:        3 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    4
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_TMR0_Initialize
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text6
  1642  0102CE                     __ptext6:
  1643                           	opt stack 0
  1644  0102CE                     _TMR0_SetInterruptHandler:
  1645                           	opt stack 24
  1646                           
  1647                           ;tmr0.c: 153: TMR0_InterruptHandler = InterruptHandler;
  1648                           
  1649                           ;incstack = 0
  1650  0102CE  C1B8  F1B2         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1651  0102D2  C1B9  F1B3         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1652  0102D6  C1BA  F1B4         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  1653  0102DA  0012               	return		;funcret
  1654  0102DC                     __end_of_TMR0_SetInterruptHandler:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           intcon	equ	0xFF2
  1661                           postinc0	equ	0xFEE
  1662                           wreg	equ	0xFE8
  1663                           postdec1	equ	0xFE5
  1664                           fsr1l	equ	0xFE1
  1665                           
  1666 ;; *************** function _SPI1_Initialize *****************
  1667 ;; Defined at:
  1668 ;;		line 63 in file "mcc_generated_files/spi1.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:        0 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    4
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_SYSTEM_Initialize
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text7
  1697  0102DC                     __ptext7:
  1698                           	opt stack 0
  1699  0102DC                     _SPI1_Initialize:
  1700                           	opt stack 25
  1701                           
  1702                           ;spi1.c: 68: SSP1STAT = 0x80;
  1703                           
  1704                           ;incstack = 0
  1705  0102DC  0E80               	movlw	128
  1706  0102DE  6EC7               	movwf	4039,c	;volatile
  1707                           
  1708                           ;spi1.c: 71: SSP1CON1 = 0x21;
  1709  0102E0  0E21               	movlw	33
  1710  0102E2  6EC6               	movwf	4038,c	;volatile
  1711                           
  1712                           ;spi1.c: 74: SSP1ADD = 0x00;
  1713  0102E4  0E00               	movlw	0
  1714  0102E6  6EC8               	movwf	4040,c	;volatile
  1715  0102E8  0012               	return		;funcret
  1716  0102EA                     __end_of_SPI1_Initialize:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           intcon	equ	0xFF2
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1l	equ	0xFE1
  1727                           
  1728 ;; *************** function _PIN_MANAGER_Initialize *****************
  1729 ;; Defined at:
  1730 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    4
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_SYSTEM_Initialize
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text8
  1759  0100BE                     __ptext8:
  1760                           	opt stack 0
  1761  0100BE                     _PIN_MANAGER_Initialize:
  1762                           	opt stack 25
  1763                           
  1764                           ;pin_manager.c: 56: LATE = 0x18;
  1765                           
  1766                           ;incstack = 0
  1767  0100BE  0E18               	movlw	24
  1768  0100C0  6E8D               	movwf	3981,c	;volatile
  1769                           
  1770                           ;pin_manager.c: 57: LATD = 0x00;
  1771  0100C2  0E00               	movlw	0
  1772  0100C4  6E8C               	movwf	3980,c	;volatile
  1773                           
  1774                           ;pin_manager.c: 58: LATA = 0x00;
  1775  0100C6  0E00               	movlw	0
  1776  0100C8  6E89               	movwf	3977,c	;volatile
  1777                           
  1778                           ;pin_manager.c: 59: LATF = 0x00;
  1779  0100CA  0E00               	movlw	0
  1780  0100CC  6E8E               	movwf	3982,c	;volatile
  1781                           
  1782                           ;pin_manager.c: 60: LATB = 0x00;
  1783  0100CE  0E00               	movlw	0
  1784  0100D0  6E8A               	movwf	3978,c	;volatile
  1785                           
  1786                           ;pin_manager.c: 61: LATG = 0x00;
  1787  0100D2  0E00               	movlw	0
  1788  0100D4  6E8F               	movwf	3983,c	;volatile
  1789                           
  1790                           ;pin_manager.c: 62: LATC = 0x01;
  1791  0100D6  0E01               	movlw	1
  1792  0100D8  6E8B               	movwf	3979,c	;volatile
  1793                           
  1794                           ;pin_manager.c: 67: TRISE = 0x00;
  1795  0100DA  0E00               	movlw	0
  1796  0100DC  6E96               	movwf	3990,c	;volatile
  1797                           
  1798                           ;pin_manager.c: 68: TRISF = 0x7E;
  1799  0100DE  0E7E               	movlw	126
  1800  0100E0  6E97               	movwf	3991,c	;volatile
  1801                           
  1802                           ;pin_manager.c: 69: TRISA = 0x2C;
  1803  0100E2  0E2C               	movlw	44
  1804  0100E4  6E92               	movwf	3986,c	;volatile
  1805                           
  1806                           ;pin_manager.c: 70: TRISG = 0x00;
  1807  0100E6  0E00               	movlw	0
  1808  0100E8  6E98               	movwf	3992,c	;volatile
  1809                           
  1810                           ;pin_manager.c: 71: TRISB = 0xDF;
  1811  0100EA  0EDF               	movlw	223
  1812  0100EC  6E93               	movwf	3987,c	;volatile
  1813                           
  1814                           ;pin_manager.c: 72: TRISC = 0x90;
  1815  0100EE  0E90               	movlw	144
  1816  0100F0  6E94               	movwf	3988,c	;volatile
  1817                           
  1818                           ;pin_manager.c: 73: TRISD = 0x00;
  1819  0100F2  0E00               	movlw	0
  1820  0100F4  6E95               	movwf	3989,c	;volatile
  1821                           
  1822                           ;pin_manager.c: 78: ADCON1bits.PCFG = 0x03;
  1823  0100F6  50C1               	movf	4033,w,c	;volatile
  1824  0100F8  0BF0               	andlw	-16
  1825  0100FA  0903               	iorlw	3
  1826  0100FC  6EC1               	movwf	4033,c	;volatile
  1827  0100FE  0012               	return		;funcret
  1828  010100                     __end_of_PIN_MANAGER_Initialize:
  1829                           	opt stack 0
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           intcon	equ	0xFF2
  1835                           postinc0	equ	0xFEE
  1836                           wreg	equ	0xFE8
  1837                           postdec1	equ	0xFE5
  1838                           fsr1l	equ	0xFE1
  1839                           
  1840 ;; *************** function _OSCILLATOR_Initialize *****************
  1841 ;; Defined at:
  1842 ;;		line 42 in file "mcc_generated_files/mcc.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    4
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_SYSTEM_Initialize
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text9
  1871  0102F4                     __ptext9:
  1872                           	opt stack 0
  1873  0102F4                     _OSCILLATOR_Initialize:
  1874                           	opt stack 25
  1875                           
  1876                           ;mcc.c: 45: OSCCON = 0x02;
  1877                           
  1878                           ;incstack = 0
  1879  0102F4  0E02               	movlw	2
  1880  0102F6  6ED3               	movwf	4051,c	;volatile
  1881                           
  1882                           ;mcc.c: 47: OSCTUNE = 0x40;
  1883  0102F8  0E40               	movlw	64
  1884  0102FA  6E9B               	movwf	3995,c	;volatile
  1885  0102FC  0012               	return		;funcret
  1886  0102FE                     __end_of_OSCILLATOR_Initialize:
  1887                           	opt stack 0
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           intcon	equ	0xFF2
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           postdec1	equ	0xFE5
  1896                           fsr1l	equ	0xFE1
  1897                           
  1898 ;; *************** function _INTERRUPT_Initialize *****************
  1899 ;; Defined at:
  1900 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		None
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    4
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_SYSTEM_Initialize
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text10
  1929  010302                     __ptext10:
  1930                           	opt stack 0
  1931  010302                     _INTERRUPT_Initialize:
  1932                           	opt stack 25
  1933                           
  1934                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1935                           
  1936                           ;incstack = 0
  1937  010302  9ED0               	bcf	4048,7,c	;volatile
  1938  010304  0012               	return		;funcret
  1939  010306                     __end_of_INTERRUPT_Initialize:
  1940                           	opt stack 0
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           intcon	equ	0xFF2
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           postdec1	equ	0xFE5
  1949                           fsr1l	equ	0xFE1
  1950                           
  1951 ;; *************** function _ECCP1_Initialize *****************
  1952 ;; Defined at:
  1953 ;;		line 57 in file "mcc_generated_files/eccp1.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;Total ram usage:        0 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    4
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_SYSTEM_Initialize
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text11
  1982  010274                     __ptext11:
  1983                           	opt stack 0
  1984  010274                     _ECCP1_Initialize:
  1985                           	opt stack 25
  1986                           
  1987                           ;eccp1.c: 60: CCP1CON = 0x00;
  1988                           
  1989                           ;incstack = 0
  1990  010274  0E00               	movlw	0
  1991  010276  6EBD               	movwf	4029,c	;volatile
  1992                           
  1993                           ;eccp1.c: 62: ECCP1DEL = 0x00;
  1994  010278  0E00               	movlw	0
  1995  01027A  6E79               	movwf	3961,c	;volatile
  1996                           
  1997                           ;eccp1.c: 64: ECCP1AS = 0x00;
  1998  01027C  0E00               	movlw	0
  1999  01027E  6EB6               	movwf	4022,c	;volatile
  2000                           
  2001                           ;eccp1.c: 66: CCPR1L = 0x00;
  2002  010280  0E00               	movlw	0
  2003  010282  6EBE               	movwf	4030,c	;volatile
  2004                           
  2005                           ;eccp1.c: 68: CCPR1H = 0x00;
  2006  010284  0E00               	movlw	0
  2007  010286  6EBF               	movwf	4031,c	;volatile
  2008  010288  0012               	return		;funcret
  2009  01028A                     __end_of_ECCP1_Initialize:
  2010                           	opt stack 0
  2011                           tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           tblptrl	equ	0xFF6
  2014                           tablat	equ	0xFF5
  2015                           intcon	equ	0xFF2
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           postdec1	equ	0xFE5
  2019                           fsr1l	equ	0xFE1
  2020                           
  2021 ;; *************** function _ADC_Initialize *****************
  2022 ;; Defined at:
  2023 ;;		line 58 in file "mcc_generated_files/adc.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    4
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_SYSTEM_Initialize
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text12
  2052  01028A                     __ptext12:
  2053                           	opt stack 0
  2054  01028A                     _ADC_Initialize:
  2055                           	opt stack 25
  2056                           
  2057                           ;adc.c: 63: ADCON0 = 0x01;
  2058                           
  2059                           ;incstack = 0
  2060  01028A  0E01               	movlw	1
  2061  01028C  6EC2               	movwf	4034,c	;volatile
  2062                           
  2063                           ;adc.c: 66: ADCON1 = 0x10;
  2064  01028E  0E10               	movlw	16
  2065  010290  6EC1               	movwf	4033,c	;volatile
  2066                           
  2067                           ;adc.c: 69: ADCON2 = 0x86;
  2068  010292  0E86               	movlw	134
  2069  010294  6EC0               	movwf	4032,c	;volatile
  2070                           
  2071                           ;adc.c: 72: ADRESL = 0x00;
  2072  010296  0E00               	movlw	0
  2073  010298  6EC3               	movwf	4035,c	;volatile
  2074                           
  2075                           ;adc.c: 75: ADRESH = 0x00;
  2076  01029A  0E00               	movlw	0
  2077  01029C  6EC4               	movwf	4036,c	;volatile
  2078  01029E  0012               	return		;funcret
  2079  0102A0                     __end_of_ADC_Initialize:
  2080                           	opt stack 0
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           intcon	equ	0xFF2
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           postdec1	equ	0xFE5
  2089                           fsr1l	equ	0xFE1
  2090                           
  2091 ;; *************** function _INTERRUPT_InterruptManager *****************
  2092 ;; Defined at:
  2093 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;Total ram usage:       18 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    3
  2114 ;; This function calls:
  2115 ;;		_TMR0_ISR
  2116 ;;		_TMR1_ISR
  2117 ;; This function is called by:
  2118 ;;		Interrupt level 2
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	intcode
  2123  000008                     __pintcode:
  2124                           	opt stack 0
  2125  000008                     _INTERRUPT_InterruptManager:
  2126                           	opt stack 24
  2127                           
  2128                           ;incstack = 0
  2129  000008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2130  00000A  CFFA F040          	movff	pclath,??_INTERRUPT_InterruptManager
  2131  00000E  CFFB F041          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2132  000012  CFE9 F042          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2133  000016  CFEA F043          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2134  00001A  CFE1 F044          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2135  00001E  CFE2 F045          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2136  000022  CFD9 F046          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2137  000026  CFDA F047          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2138  00002A  CFF3 F048          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2139  00002E  CFF4 F049          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2140  000032  CFF6 F04A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2141  000036  CFF7 F04B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2142  00003A  CFF8 F04C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2143  00003E  CFF5 F04D          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2144  000042  C05A  F04E         	movff	btemp,??_INTERRUPT_InterruptManager+14
  2145  000046  C05B  F04F         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  2146  00004A  C05C  F050         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  2147  00004E  C05D  F051         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  2148                           
  2149                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2150  000052  BAF2               	btfsc	intcon,5,c	;volatile
  2151  000054  A4F2               	btfss	intcon,2,c	;volatile
  2152  000056  D003               	goto	i2l68
  2153                           
  2154                           ;interrupt_manager.c: 61: {
  2155                           ;interrupt_manager.c: 62: TMR0_ISR();
  2156  000058  ECD4  F080         	call	_TMR0_ISR	;wreg free
  2157                           
  2158                           ;interrupt_manager.c: 63: }
  2159  00005C  D006               	goto	i2l70
  2160  00005E                     i2l68:
  2161                           
  2162                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  2163  00005E  BCF2               	btfsc	intcon,6,c	;volatile
  2164  000060  A09D               	btfss	3997,0,c	;volatile
  2165  000062  D003               	goto	i2l70
  2166  000064  B09E               	btfsc	3998,0,c	;volatile
  2167                           
  2168                           ;interrupt_manager.c: 65: {
  2169                           ;interrupt_manager.c: 66: TMR1_ISR();
  2170  000066  EC01  F081         	call	_TMR1_ISR	;wreg free
  2171  00006A                     i2l70:
  2172                           
  2173                           ;interrupt_manager.c: 68: else
  2174                           ;interrupt_manager.c: 69: {
  2175  00006A  C051  F05D         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  2176  00006E  C050  F05C         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  2177  000072  C04F  F05B         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  2178  000076  C04E  F05A         	movff	??_INTERRUPT_InterruptManager+14,btemp
  2179  00007A  C04D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2180  00007E  C04C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2181  000082  C04B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2182  000086  C04A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2183  00008A  C049  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2184  00008E  C048  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2185  000092  C047  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2186  000096  C046  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2187  00009A  C045  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2188  00009E  C044  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2189  0000A2  C043  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2190  0000A6  C042  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2191  0000AA  C041  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2192  0000AE  C040  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2193  0000B2  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2194  0000B4  0011               	retfie		f
  2195  0000B6                     __end_of_INTERRUPT_InterruptManager:
  2196                           	opt stack 0
  2197                           pclatu	equ	0xFFB
  2198                           pclath	equ	0xFFA
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           prodh	equ	0xFF4
  2204                           prodl	equ	0xFF3
  2205                           intcon	equ	0xFF2
  2206                           postinc0	equ	0xFEE
  2207                           fsr0h	equ	0xFEA
  2208                           fsr0l	equ	0xFE9
  2209                           wreg	equ	0xFE8
  2210                           postdec1	equ	0xFE5
  2211                           fsr1h	equ	0xFE2
  2212                           fsr1l	equ	0xFE1
  2213                           fsr2h	equ	0xFDA
  2214                           fsr2l	equ	0xFD9
  2215                           
  2216 ;; *************** function _TMR1_ISR *****************
  2217 ;; Defined at:
  2218 ;;		line 144 in file "mcc_generated_files/tmr1.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    2
  2239 ;; This function calls:
  2240 ;;		_TMR1_CallBack
  2241 ;; This function is called by:
  2242 ;;		_INTERRUPT_InterruptManager
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text14
  2247  010202                     __ptext14:
  2248                           	opt stack 0
  2249  010202                     _TMR1_ISR:
  2250                           	opt stack 24
  2251                           
  2252                           ;tmr1.c: 146: static volatile uint16_t CountCallBack = 0;
  2253                           ;tmr1.c: 149: PIR1bits.TMR1IF = 0;
  2254                           
  2255                           ;incstack = 0
  2256  010202  909E               	bcf	3998,0,c	;volatile
  2257                           
  2258                           ;tmr1.c: 152: TMR1H = (timer1ReloadVal >> 8);
  2259  010204  5055               	movf	_timer1ReloadVal+1,w,c	;volatile
  2260  010206  6ECF               	movwf	4047,c	;volatile
  2261                           
  2262                           ;tmr1.c: 153: TMR1L = (uint8_t) timer1ReloadVal;
  2263  010208  C054  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2264                           
  2265                           ;tmr1.c: 156: if (++CountCallBack >= 20)
  2266  01020C  4A25               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  2267  01020E  2A26               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  2268  010210  5026               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  2269  010212  E104               	bnz	i2u534_40
  2270  010214  0E14               	movlw	20
  2271  010216  5C25               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
  2272  010218  A0D8               	btfss	status,0,c
  2273  01021A  0012               	return	
  2274  01021C                     i2u534_40:
  2275                           
  2276                           ;tmr1.c: 157: {
  2277                           ;tmr1.c: 159: TMR1_CallBack();
  2278  01021C  EC28  F081         	call	_TMR1_CallBack	;wreg free
  2279                           
  2280                           ;tmr1.c: 162: CountCallBack = 0;
  2281  010220  0E00               	movlw	0
  2282  010222  6E26               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  2283  010224  0E00               	movlw	0
  2284  010226  6E25               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  2285  010228  0012               	return	
  2286  01022A                     __end_of_TMR1_ISR:
  2287                           	opt stack 0
  2288                           pclatu	equ	0xFFB
  2289                           pclath	equ	0xFFA
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           prodh	equ	0xFF4
  2295                           prodl	equ	0xFF3
  2296                           intcon	equ	0xFF2
  2297                           postinc0	equ	0xFEE
  2298                           fsr0h	equ	0xFEA
  2299                           fsr0l	equ	0xFE9
  2300                           wreg	equ	0xFE8
  2301                           postdec1	equ	0xFE5
  2302                           fsr1h	equ	0xFE2
  2303                           fsr1l	equ	0xFE1
  2304                           fsr2h	equ	0xFDA
  2305                           fsr2l	equ	0xFD9
  2306                           status	equ	0xFD8
  2307                           
  2308 ;; *************** function _TMR1_CallBack *****************
  2309 ;; Defined at:
  2310 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    1
  2331 ;; This function calls:
  2332 ;;		Absolute function
  2333 ;;		_TMR1_DefaultInterruptHandler
  2334 ;;		_rtcc_handler
  2335 ;; This function is called by:
  2336 ;;		_TMR1_ISR
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text15
  2341  010250                     __ptext15:
  2342                           	opt stack 0
  2343  010250                     _TMR1_CallBack:
  2344                           	opt stack 24
  2345                           
  2346                           ;tmr1.c: 170: if(TMR1_InterruptHandler)
  2347                           
  2348                           ;incstack = 0
  2349  010250  0101               	movlb	1	; () banked
  2350  010252  51B5               	movf	_TMR1_InterruptHandler& (0+255),w,b
  2351  010254  11B6               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  2352  010256  11B7               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
  2353  010258  B4D8               	btfsc	status,2,c
  2354  01025A  0012               	return	
  2355                           
  2356                           ; BSR set to: 1
  2357                           ;tmr1.c: 171: {
  2358                           ;tmr1.c: 172: TMR1_InterruptHandler();
  2359  01025C  D801               	call	i2u490_48
  2360  01025E  0012               	return	
  2361  010260                     i2u490_48:
  2362  010260  0005               	push	
  2363  010262  6EFA               	movwf	pclath,c
  2364  010264  51B5               	movf	_TMR1_InterruptHandler& (0+255),w,b
  2365  010266  6EFD               	movwf	tosl,c
  2366  010268  51B6               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  2367  01026A  6EFE               	movwf	tosh,c
  2368  01026C  51B7               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
  2369  01026E  6EFF               	movwf	tosu,c
  2370  010270  50FA               	movf	pclath,w,c
  2371  010272  0012               	return		;indir
  2372  010274                     __end_of_TMR1_CallBack:
  2373                           	opt stack 0
  2374                           tosu	equ	0xFFF
  2375                           tosh	equ	0xFFE
  2376                           tosl	equ	0xFFD
  2377                           pclatu	equ	0xFFB
  2378                           pclath	equ	0xFFA
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           prodh	equ	0xFF4
  2384                           prodl	equ	0xFF3
  2385                           intcon	equ	0xFF2
  2386                           postinc0	equ	0xFEE
  2387                           fsr0h	equ	0xFEA
  2388                           fsr0l	equ	0xFE9
  2389                           wreg	equ	0xFE8
  2390                           postdec1	equ	0xFE5
  2391                           fsr1h	equ	0xFE2
  2392                           fsr1l	equ	0xFE1
  2393                           fsr2h	equ	0xFDA
  2394                           fsr2l	equ	0xFD9
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2398 ;; Defined at:
  2399 ;;		line 180 in file "mcc_generated_files/tmr1.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		None
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_TMR1_Initialize
  2423 ;;		_TMR1_CallBack
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text16
  2428  010306                     __ptext16:
  2429                           	opt stack 0
  2430  010306                     _TMR1_DefaultInterruptHandler:
  2431                           	opt stack 24
  2432                           
  2433                           ;incstack = 0
  2434  010306  0012               	return		;funcret
  2435  010308                     __end_of_TMR1_DefaultInterruptHandler:
  2436                           	opt stack 0
  2437                           tosu	equ	0xFFF
  2438                           tosh	equ	0xFFE
  2439                           tosl	equ	0xFFD
  2440                           pclatu	equ	0xFFB
  2441                           pclath	equ	0xFFA
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           intcon	equ	0xFF2
  2449                           postinc0	equ	0xFEE
  2450                           fsr0h	equ	0xFEA
  2451                           fsr0l	equ	0xFE9
  2452                           wreg	equ	0xFE8
  2453                           postdec1	equ	0xFE5
  2454                           fsr1h	equ	0xFE2
  2455                           fsr1l	equ	0xFE1
  2456                           fsr2h	equ	0xFDA
  2457                           fsr2l	equ	0xFD9
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _rtcc_handler *****************
  2461 ;; Defined at:
  2462 ;;		line 95 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_rtcc_init
  2486 ;;		_TMR1_CallBack
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text17
  2491  0102B0                     __ptext17:
  2492                           	opt stack 0
  2493  0102B0                     _rtcc_handler:
  2494                           	opt stack 24
  2495                           
  2496                           ;rtcc.c: 97: device_time++;
  2497                           
  2498                           ;incstack = 0
  2499  0102B0  0E01               	movlw	1
  2500  0102B2  0100               	movlb	0	; () banked
  2501  0102B4  278C               	addwf	_device_time& (0+255),f,b	;volatile
  2502  0102B6  0E00               	movlw	0
  2503  0102B8  238D               	addwfc	(_device_time+1)& (0+255),f,b	;volatile
  2504  0102BA  238E               	addwfc	(_device_time+2)& (0+255),f,b	;volatile
  2505  0102BC  238F               	addwfc	(_device_time+3)& (0+255),f,b	;volatile
  2506                           
  2507                           ; BSR set to: 0
  2508  0102BE  0012               	return		;funcret
  2509  0102C0                     __end_of_rtcc_handler:
  2510                           	opt stack 0
  2511                           tosu	equ	0xFFF
  2512                           tosh	equ	0xFFE
  2513                           tosl	equ	0xFFD
  2514                           pclatu	equ	0xFFB
  2515                           pclath	equ	0xFFA
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           prodh	equ	0xFF4
  2521                           prodl	equ	0xFF3
  2522                           intcon	equ	0xFF2
  2523                           postinc0	equ	0xFEE
  2524                           fsr0h	equ	0xFEA
  2525                           fsr0l	equ	0xFE9
  2526                           wreg	equ	0xFE8
  2527                           postdec1	equ	0xFE5
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           fsr2h	equ	0xFDA
  2531                           fsr2l	equ	0xFD9
  2532                           status	equ	0xFD8
  2533                           
  2534 ;; *************** function _TMR0_ISR *****************
  2535 ;; Defined at:
  2536 ;;		line 132 in file "mcc_generated_files/tmr0.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    1
  2557 ;; This function calls:
  2558 ;;		Absolute function
  2559 ;;		_TMR0_DefaultInterruptHandler
  2560 ;; This function is called by:
  2561 ;;		_INTERRUPT_InterruptManager
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text18
  2566  0101A8                     __ptext18:
  2567                           	opt stack 0
  2568  0101A8                     _TMR0_ISR:
  2569                           	opt stack 25
  2570                           
  2571                           ;tmr0.c: 136: INTCONbits.TMR0IF = 0;
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;incstack = 0
  2575  0101A8  94F2               	bcf	intcon,2,c	;volatile
  2576                           
  2577                           ;tmr0.c: 140: TMR0H = timer0ReloadVal >> 8;
  2578  0101AA  5053               	movf	_timer0ReloadVal+1,w,c	;volatile
  2579  0101AC  6ED7               	movwf	4055,c	;volatile
  2580                           
  2581                           ;tmr0.c: 141: TMR0L = (uint8_t) timer0ReloadVal;
  2582  0101AE  C052  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  2583                           
  2584                           ;tmr0.c: 143: if(TMR0_InterruptHandler)
  2585  0101B2  0101               	movlb	1	; () banked
  2586  0101B4  51B2               	movf	_TMR0_InterruptHandler& (0+255),w,b
  2587  0101B6  11B3               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  2588  0101B8  11B4               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  2589  0101BA  B4D8               	btfsc	status,2,c
  2590  0101BC  0012               	return	
  2591                           
  2592                           ; BSR set to: 1
  2593                           ;tmr0.c: 144: {
  2594                           ;tmr0.c: 145: TMR0_InterruptHandler();
  2595  0101BE  D801               	call	i2u533_48
  2596  0101C0  0012               	return	
  2597  0101C2                     i2u533_48:
  2598  0101C2  0005               	push	
  2599  0101C4  6EFA               	movwf	pclath,c
  2600  0101C6  51B2               	movf	_TMR0_InterruptHandler& (0+255),w,b
  2601  0101C8  6EFD               	movwf	tosl,c
  2602  0101CA  51B3               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  2603  0101CC  6EFE               	movwf	tosh,c
  2604  0101CE  51B4               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  2605  0101D0  6EFF               	movwf	tosu,c
  2606  0101D2  50FA               	movf	pclath,w,c
  2607  0101D4  0012               	return		;indir
  2608  0101D6                     __end_of_TMR0_ISR:
  2609                           	opt stack 0
  2610                           tosu	equ	0xFFF
  2611                           tosh	equ	0xFFE
  2612                           tosl	equ	0xFFD
  2613                           pclatu	equ	0xFFB
  2614                           pclath	equ	0xFFA
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           prodh	equ	0xFF4
  2620                           prodl	equ	0xFF3
  2621                           intcon	equ	0xFF2
  2622                           postinc0	equ	0xFEE
  2623                           fsr0h	equ	0xFEA
  2624                           fsr0l	equ	0xFE9
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1h	equ	0xFE2
  2628                           fsr1l	equ	0xFE1
  2629                           fsr2h	equ	0xFDA
  2630                           fsr2l	equ	0xFD9
  2631                           status	equ	0xFD8
  2632                           
  2633 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2634 ;; Defined at:
  2635 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		None
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_TMR0_Initialize
  2659 ;;		_TMR0_ISR
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text19
  2664  010308                     __ptext19:
  2665                           	opt stack 0
  2666  010308                     _TMR0_DefaultInterruptHandler:
  2667                           	opt stack 25
  2668                           
  2669                           ;incstack = 0
  2670  010308  0012               	return		;funcret
  2671  01030A                     __end_of_TMR0_DefaultInterruptHandler:
  2672                           	opt stack 0
  2673                           tosu	equ	0xFFF
  2674                           tosh	equ	0xFFE
  2675                           tosl	equ	0xFFD
  2676                           pclatu	equ	0xFFB
  2677                           pclath	equ	0xFFA
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           prodh	equ	0xFF4
  2683                           prodl	equ	0xFF3
  2684                           intcon	equ	0xFF2
  2685                           postinc0	equ	0xFEE
  2686                           fsr0h	equ	0xFEA
  2687                           fsr0l	equ	0xFE9
  2688                           wreg	equ	0xFE8
  2689                           postdec1	equ	0xFE5
  2690                           fsr1h	equ	0xFE2
  2691                           fsr1l	equ	0xFE1
  2692                           fsr2h	equ	0xFDA
  2693                           fsr2l	equ	0xFD9
  2694                           status	equ	0xFD8
  2695                           tosu	equ	0xFFF
  2696                           tosh	equ	0xFFE
  2697                           tosl	equ	0xFFD
  2698                           pclatu	equ	0xFFB
  2699                           pclath	equ	0xFFA
  2700                           tblptru	equ	0xFF8
  2701                           tblptrh	equ	0xFF7
  2702                           tblptrl	equ	0xFF6
  2703                           tablat	equ	0xFF5
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           intcon	equ	0xFF2
  2707                           postinc0	equ	0xFEE
  2708                           fsr0h	equ	0xFEA
  2709                           fsr0l	equ	0xFE9
  2710                           wreg	equ	0xFE8
  2711                           postdec1	equ	0xFE5
  2712                           fsr1h	equ	0xFE2
  2713                           fsr1l	equ	0xFE1
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718                           	psect	text20
  2719  000000                     __ptext20:
  2720                           	opt stack 0
  2721                           tosu	equ	0xFFF
  2722                           tosh	equ	0xFFE
  2723                           tosl	equ	0xFFD
  2724                           pclatu	equ	0xFFB
  2725                           pclath	equ	0xFFA
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           prodh	equ	0xFF4
  2731                           prodl	equ	0xFF3
  2732                           intcon	equ	0xFF2
  2733                           postinc0	equ	0xFEE
  2734                           fsr0h	equ	0xFEA
  2735                           fsr0l	equ	0xFE9
  2736                           wreg	equ	0xFE8
  2737                           postdec1	equ	0xFE5
  2738                           fsr1h	equ	0xFE2
  2739                           fsr1l	equ	0xFE1
  2740                           fsr2h	equ	0xFDA
  2741                           fsr2l	equ	0xFD9
  2742                           status	equ	0xFD8
  2743                           
  2744                           	psect	rparam
  2745  0000                     tosu	equ	0xFFF
  2746                           tosh	equ	0xFFE
  2747                           tosl	equ	0xFFD
  2748                           pclatu	equ	0xFFB
  2749                           pclath	equ	0xFFA
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           postinc0	equ	0xFEE
  2758                           fsr0h	equ	0xFEA
  2759                           fsr0l	equ	0xFE9
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768                           	psect	temp
  2769  00005A                     btemp:
  2770                           	opt stack 0
  2771  00005A                     	ds	1
  2772  0000                     int$flags	set	btemp
  2773  0000                     wtemp6	set	btemp+1
  2774                           tosu	equ	0xFFF
  2775                           tosh	equ	0xFFE
  2776                           tosl	equ	0xFFD
  2777                           pclatu	equ	0xFFB
  2778                           pclath	equ	0xFFA
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           prodh	equ	0xFF4
  2784                           prodl	equ	0xFF3
  2785                           intcon	equ	0xFF2
  2786                           postinc0	equ	0xFEE
  2787                           fsr0h	equ	0xFEA
  2788                           fsr0l	equ	0xFE9
  2789                           wreg	equ	0xFE8
  2790                           postdec1	equ	0xFE5
  2791                           fsr1h	equ	0xFE2
  2792                           fsr1l	equ	0xFE1
  2793                           fsr2h	equ	0xFDA
  2794                           fsr2l	equ	0xFD9
  2795                           status	equ	0xFD8


Data Sizes:
    Strings     240
    Constant    145
    Data        112
    BSS         1163
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      89
    BANK0           160      2     160
    BANK1           256      3     187
    BANK2           256      0     200
    BANK3           256      0     232
    BANK4           256      0     220
    BANK5           256      0     220
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    TFTP_callBackTable.TFTP_CallBack	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)unsigned char  size(3) Largest target is 0

    F5364.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    F5364.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    F5364.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    F5364.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    F5364.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    F5364.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    F5364.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    F5364.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    F5364.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    F5364.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    F5364.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    F5364.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    dnsCache.dnsName	PTR const unsigned char  size(2) Largest target is 0

    S4664$1$1	PTR unsigned char  size(2) Largest target is 100
		 -> TFTP_Handler@data(BANK0[100]), 

    ?_udp_table_nextEntry.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK1[15]), NULL(NULL[0]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK1[15]), NULL(NULL[0]), 

    S4830__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4830__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK1[15]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> DNS_Lookup@str(COMRAM[80]), makeIpv4AddresstoStr@ip_str(BANK1[15]), NULL(NULL[0]), 

    S4664$TFTP_CallBack	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)unsigned char  size(3) Largest target is 0

    Process_TFTP_Data@hptr.TFTP_CallBack	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)unsigned char  size(3) Largest target is 0

    sp__strncpy	PTR unsigned char  size(2) Largest target is 41
		 -> tftp_msg(BANK1[41]), 

    tftp_modes	PTR const unsigned char [3] size(2) Largest target is 9
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[9]), 

    ntp	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_8(CODE[18]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    currentTCB	PTR struct . size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    tcbList	PTR struct . size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    DNS_Lookup@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@dnsPtr.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Handler@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Query@entryPointer.dnsName	PTR const unsigned char  size(2) Largest target is 0

    S3349$dnsName	PTR const unsigned char  size(2) Largest target is 0

    DNS_Query@oldestEntry.dnsName	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 128
		 -> TFTP_Handler@recv_buffer(BANK0[100]), TFTP_Handler@data(BANK0[100]), dnsCache(BANK3[128]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__udp_table_nextEntry.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__udp_table_nextEntry	PTR struct . size(2) Largest target is 20
		 -> UDP_CallBackTable(CODE[20]), NULL(NULL[0]), 

    udp_table_nextEntry@j.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__udp_table_getIterator	PTR struct . size(2) Largest target is 20
		 -> UDP_CallBackTable(CODE[20]), 

    S2880$callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> TFTP_Handler(), NTP_Handler(), DHCP_Handler(), DNS_Handler(), 

    sp__makeIpv4AddresstoStr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK1[15]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ETH_RemovePacket@pPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    txData.nextPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    txData.nextPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    txData.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    txData.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    pTail.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    pTail.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    S1237$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    pHead.nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    S1237$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    pHead.prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    pHead	PTR struct . size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    pTail	PTR struct . size(2) Largest target is 240
		 -> txData(BANK2[200]), NULL(NULL[0]), 

    sp__MAC_getAddress	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), NULL(NULL[0]), arpMap(BANK3[104]), 

    sp__memcpy	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(COMRAM[28]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    S58$prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    F5364.prevTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    S58$nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    F5364.nextTCB	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), HTTP_L_Server@port80TCB(BANK1[58]), 

    S58$txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    F5364.txBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    S58$txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    F5364.txBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@txdataport80(BANK5[220]), 

    S58$rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    F5364.rxBufferPtr	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    S58$rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 

    F5364.rxBufferStart	PTR unsigned char  size(2) Largest target is 220
		 -> NULL(NULL[0]), HTTP_L_Server@rxdataport80(BANK4[220]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     332
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     332
                     _ADC_Initialize
                   _ECCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3     211
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     121
                                              0 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _rtcc_handler *
 ---------------------------------------------------------------------------------
 (7) _rtcc_handler                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DC      15       85.9%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DC      13       85.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E8      11       90.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3      BB       7       73.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      59       1       94.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     51C      29        0.0%
DATA                 0      0     51C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Jun 05 18:39:53 2018

                         _timer0ReloadVal 0052                              __CFG_CP0$OFF 000000  
                                     _EIE 000EFB                                       _GIE 007F97  
                                     _PR2 000FCB                           _timer1ReloadVal 0054  
                                     _ntp 00FC                           _TMR2_Initialize 02A0  
                                     tosl 000FFD                                       wreg 000FE8  
                            __CFG_IESO$ON 000000                              __CFG_WDT$OFF 000000  
                                    l2070 02F2                                      STR_1 FF0E  
                                    STR_2 FFFC                                      STR_4 FFCB  
                                    STR_5 FF48                                      STR_6 FFD7  
                                    STR_7 FF65                                      STR_8 FFA8  
                                    STR_9 FFE1                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _LATF 000F8E                                      _LATG 000F8F  
                           __CFG_DEBUG$ON 000000                                      _MIRD 000EB8  
                                    i2l70 006A                                      i2l68 005E  
                                    _MIWR 000EB6                                      _TMR1 000FCE  
                                    _TMR2 000FCC                             __CFG_FCMEN$ON 000000  
                            __CFG_STVR$ON 000000                                      _main 02EA  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 005A                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00B6  
                           __CFG_FOSC2$ON 000000                makeIpv4AddresstoStr@ip_str 0167  
              ??_TMR1_SetInterruptHandler 00FE                              ___param_bank 000000  
                 __end_of_TMR0_Initialize 013C            ??_TMR0_DefaultInterruptHandler 0040  
          __size_of_OSCILLATOR_Initialize 000A             __end_of_OSCILLATOR_Initialize 02FE  
                       _nextPacketPointer 001F                                     ?_main 0040  
                                   STR_10 FFF1                                     STR_11 FFF7  
                                   STR_12 FF95                                     STR_13 FF7F  
                                   STR_14 FFEA                                     STR_15 FFBA  
                                   _ECON1 000FD2                                     _ECON2 000EFE  
                                   _T0CON 000FD5                                     _T1CON 000FCD  
                                   _T2CON 000FCA                                     _MAIPG 000EA6  
                                   _ERDPT 000F7A                                     _MICMD 000EB2  
                                   _ERXND 000EEA                                     _ETXND 000EE6  
                                   _ERXST 000EE8                                     _EWRPT 000EE2  
                                   _ETXST 000EE4                                     _TMR0H 000FD7  
                                   _TMR1H 000FCF                                     _TMR0L 000FD6  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _TRISF 000F97                                     _TRISG 000F98  
                                   _RXRST 007E96         __size_of_TMR0_SetInterruptHandler 000E  
               ?_TMR0_SetInterruptHandler 01B8                          __end_of_TMR0_ISR 01D6  
                        __end_of_TMR1_ISR 022A                                     _pHead 0023  
                                   _pTail 0021                           __end_of_dpowers FEA5  
                                   _putch 000000                   __end_of_TMR1_Initialize 0202  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 005B  
                __size_of_SPI1_Initialize 000E                            __CFG_ETHLED$ON 000000  
                          _checksum_eeprm 009E                           __initialization 0000  
                            __end_of_main 02F4                              _xorSequences FEC5  
                 __end_of_TMR2_Initialize 02B0               ?_INTERRUPT_InterruptManager 0040  
                                  ??_main 0100                             __activetblptr 000003  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR1L 000FBE                                    _EDMAND 000EF2  
                                  _EDMAST 000EF0                                    _MAADR1 000E84  
                                  _MAADR2 000E85                                    _MAADR3 000E82  
                                  _MAADR4 000E83                                    _MAADR5 000E80  
                                  _MAADR6 000E81                                    _MACON1 000EA0  
                                  _MACON3 000EA2                                    _MACON4 000EA3  
                                  _MAMXFL 000EAA                                    _INTCON 000FF2  
                                  _OSCCON 000FD3                          __end_of_dhcpName FEFA  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 0308  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 0306  
                                  _arpMap 0380                          ?_TMR0_Initialize 0040  
                                  clear_0 0066                                    clear_1 0072  
                                  clear_2 007E                                    clear_3 008A  
                                  clear_4 0096                                    clear_5 00A2  
                                  clear_6 00AE                                    _tcpMss 0056  
                                  _txData 0200                      __end_of_broadcastMAC FF0E  
                            __pdataCOMRAM 0056                              __mediumconst FE7C  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8  TMR0_SetInterruptHandler@InterruptHandler 01B8  
TMR1_SetInterruptHandler@InterruptHandler 01B8                         ?_ECCP1_Initialize 0040  
                            _DHCP_Handler 000000             __size_of_INTERRUPT_Initialize 0004  
                   __end_of_TMR1_CallBack 0274                          ?_TMR1_Initialize 0040  
                         __CFG_FOSC$HSPLL 000000                         _SYSTEM_Initialize 022A  
                      ??_ECCP1_Initialize 00FE                                __accesstop 0060  
                 __end_of__initialization 00B4                        ?_SYSTEM_Initialize 0040  
                           ___rparam_used 000001                DHCP_Manage@managementTimer 0088  
                          __pcstackCOMRAM 0040                              __pidataBANK0 013C  
                            __pidataBANK1 0172                       ??_SYSTEM_Initialize 0100  
                               ?_TMR0_ISR 0040                                 ?_TMR1_ISR 0040  
           ?_TMR1_DefaultInterruptHandler 0040                         ??_SPI1_Initialize 00FE  
                        ?_TMR2_Initialize 0040                 __end_of_SYSTEM_Initialize 0250  
                           _current_block 0011                         _ipv4StartPosition 001D  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                              __pnvCOMRAM 0052                                _macAddress FF02  
        __end_of_TMR0_SetInterruptHandler 02DC                                ??_TMR0_ISR 0040  
                              ??_TMR1_ISR 0040                                   _CCP1CON 000FBD  
                                 _ECCP1AS 000FB6                                   _EDMADST 000EF4  
                                 _EFLOCON 000E97                                   _MABBIPG 000EA4  
                 __size_of_ADC_Initialize 0016                                   _EIEbits 000EFB  
                                 _ERXFCON 000ED8                                   _EIRbits 000F60  
                                 _ERXRDPT 000EEC                                _ipv4Header 00A8  
                                 _OSCTUNE 000F9B                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                                   __Hparam 0000  
                                 __Lparam 0000                                _errataTemp 000E7E  
                               _ECON1bits 000FD2                                _last_block 0027  
                              _currentTCB 0017                                   __pcinit 0000  
                                 __ramtop 1000                                   __ptext0 02EA  
                                 __ptext1 022A                                   __ptext2 02A0  
                                 __ptext3 01D6                                   __ptext4 02C0  
                                 __ptext5 0100                                   __ptext6 02CE  
                                 __ptext7 02DC                                   __ptext8 00BE  
                                 __ptext9 02F4                                   _ethData 0001  
                               _T0CONbits 000FD5            ??_TMR1_DefaultInterruptHandler 0040  
                       __end_of_hexpowers FEC5                                 _T1CONbits 000FCD  
                                 _dpowers FE7D                     _OSCILLATOR_Initialize 02F4  
                               _T2CONbits 000FCA                                   _tcbList 0019  
                              _lfsr_value 0058         __size_of_TMR1_SetInterruptHandler 000E  
                ??_PIN_MANAGER_Initialize 00FE                 ?_TMR1_SetInterruptHandler 01B8  
              __size_of_SYSTEM_Initialize 0026                                 _MICMDbits 000EB2  
                    end_of_initialization 00B4                                 _ESTATbits 000EFD  
               HTTP_L_Server@rxdataport80 0400                                _next_block 00A0  
                  HTTP_L_Server@port80TCB 0104                              _broadcastMAC FF08  
                           ?_rtcc_handler 0040                              _Control_Byte 002B  
                                 postdec1 000FE5                                   postinc0 000FEE  
                      _nextSequenceNumber 0084                                _prev_block 000F  
                _TMR0_SetInterruptHandler 02CE                                _tftp_modes 01AC  
                           _rcvPayloadLen 0013                 HTTP_L_Server@txdataport80 0500  
                         _SPI1_Initialize 02DC                            ??_rtcc_handler 0040  
                              _store_type 00A2                 __size_of_ECCP1_Initialize 0016  
            __end_of_INTERRUPT_Initialize 0306                             __pidataCOMRAM 02FE  
                       _UDP_CallBackTable FED9                         __size_of_TMR0_ISR 002E  
                       __size_of_TMR1_ISR 0028                            _ADC_Initialize 028A  
                  ?_OSCILLATOR_Initialize 0040                       start_initialization 0000  
                __size_of_TMR0_Initialize 003C           __size_of_PIN_MANAGER_Initialize 0042  
                __size_of_TMR1_Initialize 002C                 __end_of_UDP_CallBackTable FEED  
                     __end_of_dnsXidValue FED9                    __end_of_ADC_Initialize 02A0  
                             __pdataBANK0 00C8                               __pdataBANK1 017C  
                  __size_of_TMR1_CallBack 0024                     TMR1_ISR@CountCallBack 0025  
                             __pbssCOMRAM 0001                             __pcstackBANK0 00FE  
                           __pcstackBANK1 01B8                  __size_of_TMR2_Initialize 0010  
                          _hostMacAddress 0176                   __end_of_SPI1_Initialize 02EA  
                   _TMR0_InterruptHandler 01B2                                 __pnvBANK1 01B2  
                               _dhcpState 001B                    _PIN_MANAGER_Initialize 00BE  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 02CE  
                           __pmediumconst FE7C                           ?_ADC_Initialize 0040  
                        _ip_database_info 0060              ??_INTERRUPT_InterruptManager 0040  
              __end_of_TFTP_callBackTable FE7D                                  _ECCP1DEL 000F79  
                    __end_of_rtcc_handler 02C0                               _device_time 008C  
                               _hexpowers FEA5                      _INTERRUPT_Initialize 0302  
                               _tcpHeader 002C                             _TMR1_CallBack 0250  
                       ??_TMR0_Initialize 00FE                                 _udpHeader 00BC  
                                _MIREGADR 000EB4                                  _PIE1bits 000F9D  
                             _dnsXidValue FED7       __size_of_INTERRUPT_InterruptManager 00AE  
                       _nextAvailablePort 0015                ??_TMR0_SetInterruptHandler 00FE  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u533_48 01C2                                  i2u534_40 021C  
                                i2u490_48 0260                                  _RCONbits 000FD0  
                             _ethListSize 002A                          __CFG_WDTPS$32768 000000  
                        _ECCP1_Initialize 0274                                  _SSP1CON1 000FC6  
                                _TMR0_ISR 01A8                                  _TMR1_ISR 0202  
                                _SSP1STAT 000FC7                        _flash_checksum_new 009A  
                         _portUnreachable 00A6                         ??_TMR1_Initialize 00FE  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                             _DNS_Handler 000000                        __end_of_macAddress FF08  
                        ?_SPI1_Initialize 0040                                 copy_data0 0014  
                               copy_data1 0034                                 copy_data2 0054  
                   ?_INTERRUPT_Initialize 0040                            ?_TMR1_CallBack 0040  
                       ??_TMR2_Initialize 00FE                                  __Hrparam 0000  
                                __Lrparam 0000                   ??_OSCILLATOR_Initialize 00FE  
                _TMR1_SetInterruptHandler 02C0                               _tcbListSize 0028  
                   _TMR1_InterruptHandler 01B5                                  _dhcpData 00C8  
                                _dhcpName FEED                                  _dnsCache 0300  
                                __ptext10 0302                                  __ptext11 0274  
                                __ptext20 0000                                  __ptext12 028A  
                                _destPort 00A4                                  __ptext14 0202  
                                __ptext15 0250                                  __ptext16 0306  
                                _arpTimer 00C4                                  __ptext17 02B0  
                                __ptext18 01A8                                  __ptext19 0308  
                            _SSP1CON1bits 000FC6                             _sequenceIndex 0029  
                       _remoteIpv4Address 0094                             __size_of_main 000A  
    __end_of_TMR0_DefaultInterruptHandler 030A     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 0308                       __end_of_tftp_option FF02  
                                _tftp_msg 013E                                  int$flags 005A  
                    _rxPacketStatusVector 000B        __end_of_INTERRUPT_InterruptManager 00B6  
              _INTERRUPT_InterruptManager 0008                              _SSP1STATbits 000FC7  
                   __size_of_rtcc_handler 0010                                  _xor_mask 0059  
                     Network_Manage@nowPv 0090                                _INTCONbits 000FF2  
                           _flash_address 0100                              _TFTP_Handler 000000  
                  ??_INTERRUPT_Initialize 00FE                      __end_of_xorSequences FED7  
                         ??_TMR1_CallBack 0040                     _receivedRemoteAddress 0007  
                                intlevel2 0000                                _MISTATbits 000E8A  
                 ?_PIN_MANAGER_Initialize 0040                          ??_ADC_Initialize 00FE  
                            _rtcc_handler 02B0             ?_TMR0_DefaultInterruptHandler 0040  
                  _flash_checksum_current 009C                          DHCP_Handler@F840 017C  
                       _tftp_last_address 00F8                           _TMR0_Initialize 0100  
                                strtok@sp 0098                               _NTP_Handler 000000  
                __end_of_ECCP1_Initialize 028A                        _TFTP_callBackTable FE7D  
          __end_of_PIN_MANAGER_Initialize 0100                               _tftp_option FEFA  
                         _TMR1_Initialize 01D6  
